

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Mar 03 08:12:56 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30  0000                     
    31                           ; Version 2.10
    32                           ; Generated 31/07/2019 GMT
    33                           ; 
    34                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F452 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     
    66                           	psect	idataCOMRAM
    67  0038DA                     __pidataCOMRAM:
    68                           	opt callstack 0
    69                           
    70                           ;initializer for _NUMERO
    71  0038DA  F8                 	db	248
    72  0038DB  88                 	db	136
    73  0038DC  F8                 	db	248
    74  0038DD  40                 	db	64
    75  0038DE  F8                 	db	248
    76  0038DF  F8                 	db	248
    77  0038E0  B8                 	db	184
    78  0038E1  A8                 	db	168
    79  0038E2  E8                 	db	232
    80  0038E3  A8                 	db	168
    81  0038E4  A8                 	db	168
    82  0038E5  F8                 	db	248
    83  0038E6  E0                 	db	224
    84  0038E7  20                 	db	32
    85  0038E8  F8                 	db	248
    86  0038E9  E8                 	db	232
    87  0038EA  A8                 	db	168
    88  0038EB  B8                 	db	184
    89  0038EC  F8                 	db	248
    90  0038ED  A8                 	db	168
    91  0038EE  B8                 	db	184
    92  0038EF  80                 	db	128
    93  0038F0  80                 	db	128
    94  0038F1  F8                 	db	248
    95  0038F2  F8                 	db	248
    96  0038F3  A8                 	db	168
    97  0038F4  F8                 	db	248
    98  0038F5  E0                 	db	224
    99  0038F6  A0                 	db	160
   100  0038F7  F8                 	db	248
   101  0038F8  F8                 	db	248
   102  0038F9  A0                 	db	160
   103  0038FA  F8                 	db	248
   104  0038FB  F8                 	db	248
   105  0038FC  28                 	db	40
   106  0038FD  38                 	db	56
   107  0038FE  F8                 	db	248
   108  0038FF  88                 	db	136
   109  003900  88                 	db	136
   110  003901  38                 	db	56
   111  003902  28                 	db	40
   112  003903  F8                 	db	248
   113  003904  F8                 	db	248
   114  003905  A8                 	db	168
   115  003906  A8                 	db	168
   116  003907  F8                 	db	248
   117  003908  A0                 	db	160
   118  003909  A0                 	db	160
   119                           
   120                           ;initializer for _SIMBOLO
   121  00390A  20                 	db	32
   122  00390B  70                 	db	112
   123  00390C  20                 	db	32
   124  00390D  20                 	db	32
   125  00390E  20                 	db	32
   126  00390F  20                 	db	32
   127  003910  50                 	db	80
   128  003911  20                 	db	32
   129  003912  50                 	db	80
   130  003913  10                 	db	16
   131  003914  20                 	db	32
   132  003915  40                 	db	64
   133  003916  70                 	db	112
   134  003917  20                 	db	32
   135  003918  70                 	db	112
   136  003919  20                 	db	32
   137  00391A  40                 	db	64
   138  00391B  20                 	db	32
   139  00391C  40                 	db	64
   140  00391D  20                 	db	32
   141  00391E  40                 	db	64
   142  00391F  50                 	db	80
   143  003920  60                 	db	96
   144  003921  50                 	db	80
   145  003922  60                 	db	96
   146  003923  50                 	db	80
   147  003924  60                 	db	96
   148  003925  80                 	db	128
   149  003926  F8                 	db	248
   150  003927  80                 	db	128
   151  003928  50                 	db	80
   152  003929  50                 	db	80
   153  00392A  50                 	db	80
   154  00392B  F8                 	db	248
   155  00392C  B0                 	db	176
   156  00392D  E8                 	db	232
   157  0000                     _PORTE	set	3972
   158  0000                     _LATE	set	3981
   159  0000                     _TRISE	set	3990
   160  0000                     _PORTD	set	3971
   161  0000                     _LATD	set	3980
   162  0000                     _TRISD	set	3989
   163  0000                     _LATC	set	3979
   164  0000                     _TRISC	set	3988
   165  0000                     _LATB	set	3978
   166  0000                     _TRISB	set	3987
   167  0000                     _PORTA	set	3968
   168  0000                     _LATA	set	3977
   169  0000                     _TRISA	set	3986
   170  0000                     _ADCON1	set	4033
   171  0000                     _PORTC	set	3970
   172  0000                     _PORTB	set	3969
   173  0000                     _LA5	set	31821
   174  0000                     _LA3	set	31819
   175                           
   176                           ; #config settings
   177  0000                     
   178                           	psect	cinit
   179  0037F6                     __pcinit:
   180                           	opt callstack 0
   181  0037F6                     start_initialization:
   182                           	opt callstack 0
   183  0037F6                     __initialization:
   184                           	opt callstack 0
   185                           
   186                           ; Initialize objects allocated to COMRAM (84 bytes)
   187                           ; load TBLPTR registers with __pidataCOMRAM
   188  0037F6  0EDA               	movlw	low __pidataCOMRAM
   189  0037F8  6EF6               	movwf	tblptrl,c
   190  0037FA  0E38               	movlw	high __pidataCOMRAM
   191  0037FC  6EF7               	movwf	tblptrh,c
   192  0037FE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   193  003800  6EF8               	movwf	tblptru,c
   194  003802  EE00  F001         	lfsr	0,__pdataCOMRAM
   195  003806  EE10 F054          	lfsr	1,84
   196  00380A                     copy_data0:
   197  00380A  0009               	tblrd		*+
   198  00380C  CFF5 FFEE          	movff	tablat,postinc0
   199  003810  50E5               	movf	postdec1,w,c
   200  003812  50E1               	movf	fsr1l,w,c
   201  003814  E1FA               	bnz	copy_data0
   202  003816                     end_of_initialization:
   203                           	opt callstack 0
   204  003816                     __end_of__initialization:
   205                           	opt callstack 0
   206  003816  0E00               	movlw	low (__Lmediumconst shr (0+16))
   207  003818  6EF8               	movwf	tblptru,c
   208  00381A  0100               	movlb	0
   209  00381C  EF8D  F01E         	goto	_main	;jump to C main() function
   210                           
   211                           	psect	dataCOMRAM
   212  000001                     __pdataCOMRAM:
   213                           	opt callstack 0
   214  000001                     _NUMERO:
   215                           	opt callstack 0
   216  000001                     	ds	48
   217  000031                     _SIMBOLO:
   218                           	opt callstack 0
   219  000031                     	ds	36
   220                           
   221                           	psect	cstackCOMRAM
   222  000055                     __pcstackCOMRAM:
   223                           	opt callstack 0
   224  000055                     suma@oper_2:
   225                           	opt callstack 0
   226  000055                     resta@oper_2:
   227                           	opt callstack 0
   228  000055                     multi@oper_2:
   229                           	opt callstack 0
   230  000055                     and@oper_2:
   231                           	opt callstack 0
   232  000055                     or@oper_2:
   233                           	opt callstack 0
   234  000055                     xor@oper_2:
   235                           	opt callstack 0
   236  000055                     ___lbdiv@divisor:
   237                           	opt callstack 0
   238  000055                     ___lbmod@divisor:
   239                           	opt callstack 0
   240  000055                     tolower@c:
   241                           	opt callstack 0
   242                           
   243                           ; 1 bytes @ 0x0
   244  000055                     	ds	1
   245  000056                     visualizar@position:
   246                           	opt callstack 0
   247  000056                     suma@oper_1:
   248                           	opt callstack 0
   249  000056                     resta@oper_1:
   250                           	opt callstack 0
   251  000056                     multi@oper_1:
   252                           	opt callstack 0
   253  000056                     and@oper_1:
   254                           	opt callstack 0
   255  000056                     or@oper_1:
   256                           	opt callstack 0
   257  000056                     xor@oper_1:
   258                           	opt callstack 0
   259  000056                     ___lbdiv@dividend:
   260                           	opt callstack 0
   261  000056                     ___lbmod@dividend:
   262                           	opt callstack 0
   263                           
   264                           ; 1 bytes @ 0x1
   265  000056                     	ds	1
   266  000057                     visualizar@from:
   267                           	opt callstack 0
   268  000057                     nand@oper_2:
   269                           	opt callstack 0
   270  000057                     ___lbdiv@counter:
   271                           	opt callstack 0
   272  000057                     ___lbmod@counter:
   273                           	opt callstack 0
   274                           
   275                           ; 1 bytes @ 0x2
   276  000057                     	ds	1
   277  000058                     visualizar@enable:
   278                           	opt callstack 0
   279  000058                     nand@oper_1:
   280                           	opt callstack 0
   281  000058                     ___lbdiv@quotient:
   282                           	opt callstack 0
   283  000058                     ___lbmod@rem:
   284                           	opt callstack 0
   285                           
   286                           ; 1 bytes @ 0x3
   287  000058                     	ds	1
   288  000059                     ??_visualizar:
   289  000059                     division@oper_2:
   290                           	opt callstack 0
   291  000059                     module@oper_2:
   292                           	opt callstack 0
   293                           
   294                           ; 1 bytes @ 0x4
   295  000059                     	ds	1
   296  00005A                     division@oper_1:
   297                           	opt callstack 0
   298  00005A                     module@oper_1:
   299                           	opt callstack 0
   300                           
   301                           ; 1 bytes @ 0x5
   302  00005A                     	ds	1
   303  00005B                     division@result:
   304                           	opt callstack 0
   305  00005B                     no_es_primo@num:
   306                           	opt callstack 0
   307                           
   308                           ; 1 bytes @ 0x6
   309  00005B                     	ds	1
   310  00005C                     no_es_primo@i:
   311                           	opt callstack 0
   312                           
   313                           ; 1 bytes @ 0x7
   314  00005C                     	ds	1
   315  00005D                     visualizar@SoN:
   316                           	opt callstack 0
   317  00005D                     operar@oper_1:
   318                           	opt callstack 0
   319                           
   320                           ; 1 bytes @ 0x8
   321  00005D                     	ds	1
   322  00005E                     operar@oper_2:
   323                           	opt callstack 0
   324  00005E                     _visualizar$170:
   325                           	opt callstack 0
   326                           
   327                           ; 2 bytes @ 0x9
   328  00005E                     	ds	1
   329  00005F                     operar@oper:
   330                           	opt callstack 0
   331                           
   332                           ; 1 bytes @ 0xA
   333  00005F                     	ds	1
   334  000060                     visualizar@x:
   335                           	opt callstack 0
   336                           
   337                           ; 1 bytes @ 0xB
   338  000060                     	ds	1
   339  000061                     ??_show_error_message:
   340  000061                     see_full_operation@oper_2:
   341                           	opt callstack 0
   342                           
   343                           ; 1 bytes @ 0xC
   344  000061                     	ds	1
   345  000062                     see_full_operation@oper:
   346                           	opt callstack 0
   347                           
   348                           ; 1 bytes @ 0xD
   349  000062                     	ds	1
   350  000063                     ??_see_full_operation:
   351                           
   352                           ; 1 bytes @ 0xE
   353  000063                     	ds	1
   354  000064                     see_full_operation@oper_1:
   355                           	opt callstack 0
   356                           
   357                           ; 1 bytes @ 0xF
   358  000064                     	ds	1
   359  000065                     ??_main:
   360                           
   361                           ; 1 bytes @ 0x10
   362  000065                     	ds	1
   363  000066                     _main$157:
   364                           	opt callstack 0
   365                           
   366                           ; 2 bytes @ 0x11
   367  000066                     	ds	2
   368  000068                     _main$161:
   369                           	opt callstack 0
   370                           
   371                           ; 2 bytes @ 0x13
   372  000068                     	ds	2
   373  00006A                     main@_SoN:
   374                           	opt callstack 0
   375                           
   376                           ; 1 bytes @ 0x15
   377  00006A                     	ds	1
   378  00006B                     main@_resultado:
   379                           	opt callstack 0
   380                           
   381                           ; 2 bytes @ 0x16
   382  00006B                     	ds	2
   383  00006D                     main@i:
   384                           	opt callstack 0
   385                           
   386                           ; 1 bytes @ 0x18
   387  00006D                     	ds	1
   388  00006E                     main@i_156:
   389                           	opt callstack 0
   390                           
   391                           ; 1 bytes @ 0x19
   392  00006E                     	ds	1
   393  00006F                     main@x:
   394                           	opt callstack 0
   395                           
   396                           ; 1 bytes @ 0x1A
   397  00006F                     	ds	1
   398  000070                     main@i_162:
   399                           	opt callstack 0
   400                           
   401                           ; 1 bytes @ 0x1B
   402  000070                     	ds	1
   403  000071                     main@resultado:
   404                           	opt callstack 0
   405                           
   406                           ; 1 bytes @ 0x1C
   407  000071                     	ds	1
   408  000072                     main@oper:
   409                           	opt callstack 0
   410                           
   411                           ; 1 bytes @ 0x1D
   412  000072                     	ds	1
   413  000073                     main@oper_1:
   414                           	opt callstack 0
   415                           
   416                           ; 1 bytes @ 0x1E
   417  000073                     	ds	1
   418  000074                     main@oper_2:
   419                           	opt callstack 0
   420                           
   421                           ; 1 bytes @ 0x1F
   422  000074                     	ds	1
   423                           
   424 ;;
   425 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   426 ;;
   427 ;; *************** function _main *****************
   428 ;; Defined at:
   429 ;;		line 58 in file "main.c"
   430 ;; Parameters:    Size  Location     Type
   431 ;;		None
   432 ;; Auto vars:     Size  Location     Type
   433 ;;  i               1   27[COMRAM] unsigned char 
   434 ;;  _resultado      2   22[COMRAM] int 
   435 ;;  x               1   26[COMRAM] unsigned char 
   436 ;;  _SoN            1   21[COMRAM] unsigned char 
   437 ;;  i               1   25[COMRAM] unsigned char 
   438 ;;  i               1   24[COMRAM] unsigned char 
   439 ;;  oper_2          1   31[COMRAM] unsigned char 
   440 ;;  oper_1          1   30[COMRAM] unsigned char 
   441 ;;  oper            1   29[COMRAM] unsigned char 
   442 ;;  resultado       1   28[COMRAM] unsigned char 
   443 ;; Return value:  Size  Location     Type
   444 ;;                  1    wreg      void 
   445 ;; Registers used:
   446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   447 ;; Tracked objects:
   448 ;;		On entry : 0/0
   449 ;;		On exit  : 0/0
   450 ;;		Unchanged: 0/0
   451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   452 ;;      Params:         0       0       0       0       0       0       0
   453 ;;      Locals:        15       0       0       0       0       0       0
   454 ;;      Temps:          1       0       0       0       0       0       0
   455 ;;      Totals:        16       0       0       0       0       0       0
   456 ;;Total ram usage:       16 bytes
   457 ;; Hardware stack levels required when called:    4
   458 ;; This function calls:
   459 ;;		_init_config
   460 ;;		_operar
   461 ;;		_see_full_operation
   462 ;;		_show_error_message
   463 ;;		_visualizar
   464 ;; This function is called by:
   465 ;;		Startup code after reset
   466 ;; This function uses a non-reentrant model
   467 ;;
   468                           
   469                           	psect	text0
   470  003D1A                     __ptext0:
   471                           	opt callstack 0
   472  003D1A                     _main:
   473                           	opt callstack 27
   474  003D1A  FFFF               	dw	65535	; assembler added errata NOP
   475                           
   476                           ;main.c: 59: char oper_1;;main.c: 60: char oper_2;;main.c: 61: char oper;;main.c: 62: ch
      +                          ar resultado;;main.c: 64: init_config();
   477  003D1C  EC2B  F01C         	call	_init_config	;wreg free
   478  003D20                     l1504:
   479  003D20  FFFF               	dw	65535	; assembler added errata NOP
   480                           
   481                           ;main.c: 66: oper_1 = PORTB>>4;
   482  003D22  3881               	swapf	129,w,c	;volatile
   483  003D24  0B0F               	andlw	15
   484  003D26  6E73               	movwf	main@oper_1^0,c
   485  003D28                     
   486                           ;main.c: 67: oper_2 = PORTB&0X0F;
   487  003D28  5081               	movf	129,w,c	;volatile
   488  003D2A  0B0F               	andlw	15
   489  003D2C  6E74               	movwf	main@oper_2^0,c
   490  003D2E                     
   491                           ;main.c: 68: oper = PORTC&0X0F;
   492  003D2E  5082               	movf	130,w,c	;volatile
   493  003D30  0B0F               	andlw	15
   494  003D32  6E72               	movwf	main@oper^0,c
   495  003D34                     
   496                           ;main.c: 70: for (char i = 0; i < 200; i++) {
   497  003D34  0E00               	movlw	0
   498  003D36  6E6D               	movwf	main@i^0,c
   499  003D38                     l1516:
   500  003D38  FFFF               	dw	65535	; assembler added errata NOP
   501                           
   502                           ;main.c: 71: see_full_operation(oper_1, oper_2, oper);
   503  003D3A  C074  F061         	movff	main@oper_2,see_full_operation@oper_2
   504  003D3E  C072  F062         	movff	main@oper,see_full_operation@oper
   505  003D42  5073               	movf	main@oper_1^0,w,c
   506  003D44  ECF1  F01C         	call	_see_full_operation
   507  003D48  2A6D               	incf	main@i^0,f,c
   508  003D4A  0EC7               	movlw	199
   509  003D4C  646D               	cpfsgt	main@i^0,c
   510  003D4E  EFAB  F01E         	goto	u371
   511  003D52  EFAE  F01E         	goto	u370
   512  003D56                     u371:
   513  003D56  FFFF               	dw	65535	; assembler added errata NOP
   514  003D58  EF9C  F01E         	goto	l1516
   515  003D5C                     u370:
   516  003D5C  FFFF               	dw	65535	; assembler added errata NOP
   517  003D5E                     
   518                           ;main.c: 72: };main.c: 74: for (char i = 0; i < 200; i++) {
   519  003D5E  0E00               	movlw	0
   520  003D60  6E6E               	movwf	main@i_156^0,c
   521  003D62  EFC0  F01F         	goto	l1592
   522  003D66                     l1528:
   523  003D66  FFFF               	dw	65535	; assembler added errata NOP
   524                           
   525                           ;main.c: 77: case 2:;main.c: 78: resultado = operar(oper, oper_1, oper_2);
   526  003D68  C073  F05D         	movff	main@oper_1,operar@oper_1
   527  003D6C  C074  F05E         	movff	main@oper_2,operar@oper_2
   528  003D70  5072               	movf	main@oper^0,w,c
   529  003D72  ECE6  F01D         	call	_operar
   530  003D76  6E71               	movwf	main@resultado^0,c
   531  003D78                     
   532                           ;main.c: 79: visualizar('n', resultado, 0, 1);
   533  003D78  C071  F056         	movff	main@resultado,visualizar@position
   534  003D7C  0E00               	movlw	0
   535  003D7E  6E57               	movwf	visualizar@from^0,c
   536  003D80  0E01               	movlw	1
   537  003D82  6E58               	movwf	visualizar@enable^0,c
   538  003D84  0E6E               	movlw	110
   539  003D86  EC5C  F01D         	call	_visualizar
   540                           
   541                           ;main.c: 80: break;
   542  003D8A  EFF0  F01F         	goto	l1594
   543  003D8E                     l1532:
   544  003D8E  FFFF               	dw	65535	; assembler added errata NOP
   545                           
   546                           ;main.c: 82: resultado = oper_1 < oper_2 ? operar(oper, oper_2, oper_1) : operar(oper, o
      +                          per_1, oper_2);
   547  003D90  5074               	movf	main@oper_2^0,w,c
   548  003D92  5C73               	subwf	main@oper_1^0,w,c
   549  003D94  A0D8               	btfss	status,0,c
   550  003D96  EFCF  F01E         	goto	u381
   551  003D9A  EFD2  F01E         	goto	u380
   552  003D9E                     u381:
   553  003D9E  FFFF               	dw	65535	; assembler added errata NOP
   554  003DA0  EFE0  F01E         	goto	l1536
   555  003DA4                     u380:
   556  003DA4  FFFF               	dw	65535	; assembler added errata NOP
   557  003DA6  C073  F05D         	movff	main@oper_1,operar@oper_1
   558  003DAA  C074  F05E         	movff	main@oper_2,operar@oper_2
   559  003DAE  5072               	movf	main@oper^0,w,c
   560  003DB0  ECE6  F01D         	call	_operar
   561  003DB4  6E65               	movwf	??_main^0,c
   562  003DB6  5065               	movf	??_main^0,w,c
   563  003DB8  6E66               	movwf	_main$157^0,c
   564  003DBA  6A67               	clrf	(_main$157+1)^0,c
   565  003DBC  EFEC  F01E         	goto	l1538
   566  003DC0                     l1536:
   567  003DC0  FFFF               	dw	65535	; assembler added errata NOP
   568  003DC2  C074  F05D         	movff	main@oper_2,operar@oper_1
   569  003DC6  C073  F05E         	movff	main@oper_1,operar@oper_2
   570  003DCA  5072               	movf	main@oper^0,w,c
   571  003DCC  ECE6  F01D         	call	_operar
   572  003DD0  6E65               	movwf	??_main^0,c
   573  003DD2  5065               	movf	??_main^0,w,c
   574  003DD4  6E66               	movwf	_main$157^0,c
   575  003DD6  6A67               	clrf	(_main$157+1)^0,c
   576  003DD8                     l1538:
   577  003DD8  FFFF               	dw	65535	; assembler added errata NOP
   578  003DDA  C066  F071         	movff	_main$157,main@resultado
   579  003DDE                     
   580                           ;main.c: 83: char x = 0;
   581  003DDE  0E00               	movlw	0
   582  003DE0  6E6F               	movwf	main@x^0,c
   583  003DE2                     
   584                           ;main.c: 84: if (oper_1 < oper_2) {
   585  003DE2  5074               	movf	main@oper_2^0,w,c
   586  003DE4  5C73               	subwf	main@oper_1^0,w,c
   587  003DE6  B0D8               	btfsc	status,0,c
   588  003DE8  EFF8  F01E         	goto	u391
   589  003DEC  EFFB  F01E         	goto	u390
   590  003DF0                     u391:
   591  003DF0  FFFF               	dw	65535	; assembler added errata NOP
   592  003DF2  EF07  F01F         	goto	l1548
   593  003DF6                     u390:
   594  003DF6  FFFF               	dw	65535	; assembler added errata NOP
   595  003DF8                     
   596                           ;main.c: 85: visualizar('s', 1, x, 1);
   597  003DF8  0E01               	movlw	1
   598  003DFA  6E56               	movwf	visualizar@position^0,c
   599  003DFC  0E00               	movlw	0
   600  003DFE  6E57               	movwf	visualizar@from^0,c
   601  003E00  0E01               	movlw	1
   602  003E02  6E58               	movwf	visualizar@enable^0,c
   603  003E04  0E73               	movlw	115
   604  003E06  EC5C  F01D         	call	_visualizar
   605  003E0A                     
   606                           ;main.c: 86: x += 3;
   607  003E0A  0E03               	movlw	3
   608  003E0C  266F               	addwf	main@x^0,f,c
   609  003E0E                     l1548:
   610  003E0E  FFFF               	dw	65535	; assembler added errata NOP
   611                           
   612                           ;main.c: 87: };main.c: 89: visualizar('n', resultado, x, 1);
   613  003E10  C071  F056         	movff	main@resultado,visualizar@position
   614  003E14  C06F  F057         	movff	main@x,visualizar@from
   615  003E18  0E01               	movlw	1
   616  003E1A  6E58               	movwf	visualizar@enable^0,c
   617  003E1C  0E6E               	movlw	110
   618  003E1E  EC5C  F01D         	call	_visualizar
   619                           
   620                           ;main.c: 90: break;
   621  003E22  EFF0  F01F         	goto	l1594
   622  003E26                     l1550:
   623  003E26  FFFF               	dw	65535	; assembler added errata NOP
   624                           
   625                           ;main.c: 92: case 4:;main.c: 93: if (oper_2 == 0) {
   626  003E28  5074               	movf	main@oper_2^0,w,c
   627  003E2A  A4D8               	btfss	status,2,c
   628  003E2C  EF1A  F01F         	goto	u401
   629  003E30  EF1D  F01F         	goto	u400
   630  003E34                     u401:
   631  003E34  FFFF               	dw	65535	; assembler added errata NOP
   632  003E36  EF22  F01F         	goto	l1554
   633  003E3A                     u400:
   634  003E3A  FFFF               	dw	65535	; assembler added errata NOP
   635  003E3C                     
   636                           ;main.c: 94: show_error_message();
   637  003E3C  ECC2  F01C         	call	_show_error_message	;wreg free
   638                           
   639                           ;main.c: 95: } else {
   640  003E40  EFF0  F01F         	goto	l1594
   641  003E44                     l1554:
   642  003E44  FFFF               	dw	65535	; assembler added errata NOP
   643                           
   644                           ;main.c: 96: resultado = operar(oper, oper_1, oper_2);
   645  003E46  C073  F05D         	movff	main@oper_1,operar@oper_1
   646  003E4A  C074  F05E         	movff	main@oper_2,operar@oper_2
   647  003E4E  5072               	movf	main@oper^0,w,c
   648  003E50  ECE6  F01D         	call	_operar
   649  003E54  6E71               	movwf	main@resultado^0,c
   650  003E56                     
   651                           ;main.c: 97: visualizar('n', resultado, 0, 1);
   652  003E56  C071  F056         	movff	main@resultado,visualizar@position
   653  003E5A  0E00               	movlw	0
   654  003E5C  6E57               	movwf	visualizar@from^0,c
   655  003E5E  0E01               	movlw	1
   656  003E60  6E58               	movwf	visualizar@enable^0,c
   657  003E62  0E6E               	movlw	110
   658  003E64  EC5C  F01D         	call	_visualizar
   659  003E68  EFF0  F01F         	goto	l1594
   660  003E6C                     l100:
   661  003E6C  FFFF               	dw	65535	; assembler added errata NOP
   662  003E6E                     l1558:
   663  003E6E  FFFF               	dw	65535	; assembler added errata NOP
   664                           
   665                           ;main.c: 101: case 6:;main.c: 102: case 7:;main.c: 103: case 8:;main.c: 104: resultado =
      +                           operar(oper, oper_1, oper_2);
   666  003E70  C073  F05D         	movff	main@oper_1,operar@oper_1
   667  003E74  C074  F05E         	movff	main@oper_2,operar@oper_2
   668  003E78  5072               	movf	main@oper^0,w,c
   669  003E7A  ECE6  F01D         	call	_operar
   670  003E7E  6E71               	movwf	main@resultado^0,c
   671  003E80                     
   672                           ;main.c: 105: int _resultado = resultado&0X0F;
   673  003E80  C071  F065         	movff	main@resultado,??_main
   674  003E84  0E0F               	movlw	15
   675  003E86  1665               	andwf	??_main^0,f,c
   676  003E88  5065               	movf	??_main^0,w,c
   677  003E8A  6E6B               	movwf	main@_resultado^0,c
   678  003E8C  6A6C               	clrf	(main@_resultado+1)^0,c
   679  003E8E                     
   680                           ;main.c: 106: visualizar('n', _resultado, 0, 1);
   681  003E8E  C06B  F056         	movff	main@_resultado,visualizar@position
   682  003E92  0E00               	movlw	0
   683  003E94  6E57               	movwf	visualizar@from^0,c
   684  003E96  0E01               	movlw	1
   685  003E98  6E58               	movwf	visualizar@enable^0,c
   686  003E9A  0E6E               	movlw	110
   687  003E9C  EC5C  F01D         	call	_visualizar
   688                           
   689                           ;main.c: 107: break;
   690  003EA0  EFF0  F01F         	goto	l1594
   691  003EA4                     l1564:
   692  003EA4  FFFF               	dw	65535	; assembler added errata NOP
   693                           
   694                           ;main.c: 109: case 10:;main.c: 110: resultado = operar(oper, oper_1, oper_2);
   695  003EA6  C073  F05D         	movff	main@oper_1,operar@oper_1
   696  003EAA  C074  F05E         	movff	main@oper_2,operar@oper_2
   697  003EAE  5072               	movf	main@oper^0,w,c
   698  003EB0  ECE6  F01D         	call	_operar
   699  003EB4  6E71               	movwf	main@resultado^0,c
   700  003EB6                     
   701                           ;main.c: 111: int _resultado = resultado ? 9 : 15;
   702  003EB6  5071               	movf	main@resultado^0,w,c
   703  003EB8  A4D8               	btfss	status,2,c
   704  003EBA  EF61  F01F         	goto	u411
   705  003EBE  EF64  F01F         	goto	u410
   706  003EC2                     u411:
   707  003EC2  FFFF               	dw	65535	; assembler added errata NOP
   708  003EC4  EF6B  F01F         	goto	l1570
   709  003EC8                     u410:
   710  003EC8  FFFF               	dw	65535	; assembler added errata NOP
   711  003ECA  0E00               	movlw	0
   712  003ECC  6E6C               	movwf	(main@_resultado+1)^0,c
   713  003ECE  0E0F               	movlw	15
   714  003ED0  6E6B               	movwf	main@_resultado^0,c
   715  003ED2  EF70  F01F         	goto	l107
   716  003ED6                     l1570:
   717  003ED6  FFFF               	dw	65535	; assembler added errata NOP
   718  003ED8  0E00               	movlw	0
   719  003EDA  6E6C               	movwf	(main@_resultado+1)^0,c
   720  003EDC  0E09               	movlw	9
   721  003EDE  6E6B               	movwf	main@_resultado^0,c
   722  003EE0                     l107:
   723  003EE0  FFFF               	dw	65535	; assembler added errata NOP
   724                           
   725                           ;main.c: 112: char _SoN = resultado ? 's' : 'n';
   726  003EE2  5071               	movf	main@resultado^0,w,c
   727  003EE4  A4D8               	btfss	status,2,c
   728  003EE6  EF77  F01F         	goto	u421
   729  003EEA  EF7A  F01F         	goto	u420
   730  003EEE                     u421:
   731  003EEE  FFFF               	dw	65535	; assembler added errata NOP
   732  003EF0  EF81  F01F         	goto	l1574
   733  003EF4                     u420:
   734  003EF4  FFFF               	dw	65535	; assembler added errata NOP
   735  003EF6  0E00               	movlw	0
   736  003EF8  6E69               	movwf	(_main$161+1)^0,c
   737  003EFA  0E6E               	movlw	110
   738  003EFC  6E68               	movwf	_main$161^0,c
   739  003EFE  EF86  F01F         	goto	l1576
   740  003F02                     l1574:
   741  003F02  FFFF               	dw	65535	; assembler added errata NOP
   742  003F04  0E00               	movlw	0
   743  003F06  6E69               	movwf	(_main$161+1)^0,c
   744  003F08  0E73               	movlw	115
   745  003F0A  6E68               	movwf	_main$161^0,c
   746  003F0C                     l1576:
   747  003F0C  FFFF               	dw	65535	; assembler added errata NOP
   748  003F0E  C068  F06A         	movff	_main$161,main@_SoN
   749  003F12                     
   750                           ;main.c: 113: visualizar(_SoN, _resultado, 0, 1);
   751  003F12  C06B  F056         	movff	main@_resultado,visualizar@position
   752  003F16  0E00               	movlw	0
   753  003F18  6E57               	movwf	visualizar@from^0,c
   754  003F1A  0E01               	movlw	1
   755  003F1C  6E58               	movwf	visualizar@enable^0,c
   756  003F1E  506A               	movf	main@_SoN^0,w,c
   757  003F20  EC5C  F01D         	call	_visualizar
   758                           
   759                           ;main.c: 114: break;
   760  003F24  EFF0  F01F         	goto	l1594
   761  003F28                     l1580:
   762  003F28  FFFF               	dw	65535	; assembler added errata NOP
   763                           
   764                           ;main.c: 116: for (char i = 0; i < 2; i++) {
   765  003F2A  0E00               	movlw	0
   766  003F2C  6E70               	movwf	main@i_162^0,c
   767  003F2E                     l1586:
   768  003F2E  FFFF               	dw	65535	; assembler added errata NOP
   769                           
   770                           ;main.c: 117: visualizar('s', 1, 0, i + 1);
   771  003F30  0E01               	movlw	1
   772  003F32  6E56               	movwf	visualizar@position^0,c
   773  003F34  0E00               	movlw	0
   774  003F36  6E57               	movwf	visualizar@from^0,c
   775  003F38  2870               	incf	main@i_162^0,w,c
   776  003F3A  6E58               	movwf	visualizar@enable^0,c
   777  003F3C  0E73               	movlw	115
   778  003F3E  EC5C  F01D         	call	_visualizar
   779                           
   780                           ;main.c: 118: visualizar('s', 1, 3, i + 1);
   781  003F42  0E01               	movlw	1
   782  003F44  6E56               	movwf	visualizar@position^0,c
   783  003F46  0E03               	movlw	3
   784  003F48  6E57               	movwf	visualizar@from^0,c
   785  003F4A  2870               	incf	main@i_162^0,w,c
   786  003F4C  6E58               	movwf	visualizar@enable^0,c
   787  003F4E  0E73               	movlw	115
   788  003F50  EC5C  F01D         	call	_visualizar
   789                           
   790                           ;main.c: 119: visualizar('s', 1, 6, i + 1);
   791  003F54  0E01               	movlw	1
   792  003F56  6E56               	movwf	visualizar@position^0,c
   793  003F58  0E06               	movlw	6
   794  003F5A  6E57               	movwf	visualizar@from^0,c
   795  003F5C  2870               	incf	main@i_162^0,w,c
   796  003F5E  6E58               	movwf	visualizar@enable^0,c
   797  003F60  0E73               	movlw	115
   798  003F62  EC5C  F01D         	call	_visualizar
   799  003F66  2A70               	incf	main@i_162^0,f,c
   800  003F68  0E01               	movlw	1
   801  003F6A  6470               	cpfsgt	main@i_162^0,c
   802  003F6C  EFBA  F01F         	goto	u431
   803  003F70  EFBD  F01F         	goto	u430
   804  003F74                     u431:
   805  003F74  FFFF               	dw	65535	; assembler added errata NOP
   806  003F76  EF97  F01F         	goto	l1586
   807  003F7A                     u430:
   808  003F7A  FFFF               	dw	65535	; assembler added errata NOP
   809  003F7C  EFF0  F01F         	goto	l1594
   810  003F80                     l1592:
   811  003F80  FFFF               	dw	65535	; assembler added errata NOP
   812  003F82  5072               	movf	main@oper^0,w,c
   813                           
   814                           ; Switch size 1, requested type "simple"
   815                           ; Number of cases is 11, Range of values is 0 to 10
   816                           ; switch strategies available:
   817                           ; Name         Instructions Cycles
   818                           ; simple_byte           34    18 (average)
   819                           ;	Chosen strategy is simple_byte
   820  003F84  0A00               	xorlw	0	; case 0
   821  003F86  B4D8               	btfsc	status,2,c
   822  003F88  EFB3  F01E         	goto	l1528
   823  003F8C  0A01               	xorlw	1	; case 1
   824  003F8E  B4D8               	btfsc	status,2,c
   825  003F90  EFC7  F01E         	goto	l1532
   826  003F94  0A03               	xorlw	3	; case 2
   827  003F96  B4D8               	btfsc	status,2,c
   828  003F98  EFB3  F01E         	goto	l1528
   829  003F9C  0A01               	xorlw	1	; case 3
   830  003F9E  B4D8               	btfsc	status,2,c
   831  003FA0  EF13  F01F         	goto	l1550
   832  003FA4  0A07               	xorlw	7	; case 4
   833  003FA6  B4D8               	btfsc	status,2,c
   834  003FA8  EF13  F01F         	goto	l1550
   835  003FAC  0A01               	xorlw	1	; case 5
   836  003FAE  B4D8               	btfsc	status,2,c
   837  003FB0  EF36  F01F         	goto	l100
   838  003FB4  0A03               	xorlw	3	; case 6
   839  003FB6  B4D8               	btfsc	status,2,c
   840  003FB8  EF37  F01F         	goto	l1558
   841  003FBC  0A01               	xorlw	1	; case 7
   842  003FBE  B4D8               	btfsc	status,2,c
   843  003FC0  EF37  F01F         	goto	l1558
   844  003FC4  0A0F               	xorlw	15	; case 8
   845  003FC6  B4D8               	btfsc	status,2,c
   846  003FC8  EF37  F01F         	goto	l1558
   847  003FCC  0A01               	xorlw	1	; case 9
   848  003FCE  B4D8               	btfsc	status,2,c
   849  003FD0  EF52  F01F         	goto	l1564
   850  003FD4  0A03               	xorlw	3	; case 10
   851  003FD6  B4D8               	btfsc	status,2,c
   852  003FD8  EF52  F01F         	goto	l1564
   853  003FDC  EF94  F01F         	goto	l1580
   854  003FE0                     l1594:
   855  003FE0  FFFF               	dw	65535	; assembler added errata NOP
   856  003FE2  2A6E               	incf	main@i_156^0,f,c
   857  003FE4  0EC7               	movlw	199
   858  003FE6  646E               	cpfsgt	main@i_156^0,c
   859  003FE8  EFF8  F01F         	goto	u441
   860  003FEC  EFFB  F01F         	goto	u440
   861  003FF0                     u441:
   862  003FF0  FFFF               	dw	65535	; assembler added errata NOP
   863  003FF2  EFC0  F01F         	goto	l1592
   864  003FF6                     u440:
   865  003FF6  FFFF               	dw	65535	; assembler added errata NOP
   866  003FF8  EF90  F01E         	goto	l1504
   867  003FFC  EF01  F000         	goto	start
   868  004000                     __end_of_main:
   869                           	opt callstack 0
   870                           
   871 ;; *************** function _show_error_message *****************
   872 ;; Defined at:
   873 ;;		line 183 in file "main.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;		None
   876 ;; Auto vars:     Size  Location     Type
   877 ;;		None
   878 ;; Return value:  Size  Location     Type
   879 ;;                  1    wreg      void 
   880 ;; Registers used:
   881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   882 ;; Tracked objects:
   883 ;;		On entry : 0/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   887 ;;      Params:         0       0       0       0       0       0       0
   888 ;;      Locals:         0       0       0       0       0       0       0
   889 ;;      Temps:          1       0       0       0       0       0       0
   890 ;;      Totals:         1       0       0       0       0       0       0
   891 ;;Total ram usage:        1 bytes
   892 ;; Hardware stack levels used:    1
   893 ;; Hardware stack levels required when called:    2
   894 ;; This function calls:
   895 ;;		_visualizar
   896 ;; This function is called by:
   897 ;;		_main
   898 ;; This function uses a non-reentrant model
   899 ;;
   900                           
   901                           	psect	text1
   902  003984                     __ptext1:
   903                           	opt callstack 0
   904  003984                     _show_error_message:
   905                           	opt callstack 0
   906  003984  FFFF               	dw	65535	; assembler added errata NOP
   907  003986                     
   908                           ;main.c: 184: visualizar('n', 14, 0, 1);
   909  003986  0E0E               	movlw	14
   910  003988  6E56               	movwf	visualizar@position^0,c
   911  00398A  0E00               	movlw	0
   912  00398C  6E57               	movwf	visualizar@from^0,c
   913  00398E  0E01               	movlw	1
   914  003990  6E58               	movwf	visualizar@enable^0,c
   915  003992  0E6E               	movlw	110
   916  003994  EC5C  F01D         	call	_visualizar
   917                           
   918                           ;main.c: 185: visualizar('s', 11, 4, 1);
   919  003998  0E0B               	movlw	11
   920  00399A  6E56               	movwf	visualizar@position^0,c
   921  00399C  0E04               	movlw	4
   922  00399E  6E57               	movwf	visualizar@from^0,c
   923  0039A0  0E01               	movlw	1
   924  0039A2  6E58               	movwf	visualizar@enable^0,c
   925  0039A4  0E73               	movlw	115
   926  0039A6  EC5C  F01D         	call	_visualizar
   927                           
   928                           ;main.c: 186: visualizar('n', 14, 0, 2);
   929  0039AA  0E0E               	movlw	14
   930  0039AC  6E56               	movwf	visualizar@position^0,c
   931  0039AE  0E00               	movlw	0
   932  0039B0  6E57               	movwf	visualizar@from^0,c
   933  0039B2  0E02               	movlw	2
   934  0039B4  6E58               	movwf	visualizar@enable^0,c
   935  0039B6  0E6E               	movlw	110
   936  0039B8  EC5C  F01D         	call	_visualizar
   937                           
   938                           ;main.c: 187: visualizar('s', 11, 4, 2);
   939  0039BC  0E0B               	movlw	11
   940  0039BE  6E56               	movwf	visualizar@position^0,c
   941  0039C0  0E04               	movlw	4
   942  0039C2  6E57               	movwf	visualizar@from^0,c
   943  0039C4  0E02               	movlw	2
   944  0039C6  6E58               	movwf	visualizar@enable^0,c
   945  0039C8  0E73               	movlw	115
   946  0039CA  EC5C  F01D         	call	_visualizar
   947  0039CE                     
   948                           ;main.c: 188: _delay((unsigned long)((5)*(4000000/4000.0)));
   949  0039CE  0E05               	movlw	5
   950  0039D0  6E61               	movwf	??_show_error_message^0,c
   951  0039D2  0EDF               	movlw	223
   952  0039D4                     u457:
   953  0039D4  FFFF               	dw	65535	; errata NOP
   954  0039D6  2EE8               	decfsz	wreg,f,c
   955  0039D8  D7FD               	bra	u457
   956  0039DA  2E61               	decfsz	??_show_error_message^0,f,c
   957  0039DC  D7FB               	bra	u457
   958  0039DE  0012               	return		;funcret
   959  0039E0  FFFF               	dw	65535	; errata NOP
   960  0039E2                     __end_of_show_error_message:
   961                           	opt callstack 0
   962                           
   963 ;; *************** function _see_full_operation *****************
   964 ;; Defined at:
   965 ;;		line 175 in file "main.c"
   966 ;; Parameters:    Size  Location     Type
   967 ;;  oper_1          1    wreg     unsigned char 
   968 ;;  oper_2          1   12[COMRAM] unsigned char 
   969 ;;  oper            1   13[COMRAM] unsigned char 
   970 ;; Auto vars:     Size  Location     Type
   971 ;;  oper_1          1   15[COMRAM] unsigned char 
   972 ;; Return value:  Size  Location     Type
   973 ;;                  1    wreg      void 
   974 ;; Registers used:
   975 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   976 ;; Tracked objects:
   977 ;;		On entry : 0/0
   978 ;;		On exit  : 0/0
   979 ;;		Unchanged: 0/0
   980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   981 ;;      Params:         2       0       0       0       0       0       0
   982 ;;      Locals:         1       0       0       0       0       0       0
   983 ;;      Temps:          1       0       0       0       0       0       0
   984 ;;      Totals:         4       0       0       0       0       0       0
   985 ;;Total ram usage:        4 bytes
   986 ;; Hardware stack levels used:    1
   987 ;; Hardware stack levels required when called:    2
   988 ;; This function calls:
   989 ;;		_visualizar
   990 ;; This function is called by:
   991 ;;		_main
   992 ;; This function uses a non-reentrant model
   993 ;;
   994                           
   995                           	psect	text2
   996  0039E2                     __ptext2:
   997                           	opt callstack 0
   998  0039E2                     _see_full_operation:
   999                           	opt callstack 0
  1000  0039E2  FFFF               	dw	65535	; assembler added errata NOP
  1001                           
  1002                           ;incstack = 0
  1003                           ;see_full_operation@oper_1 stored from wreg
  1004  0039E4  6E64               	movwf	see_full_operation@oper_1^0,c
  1005  0039E6                     
  1006                           ;main.c: 176: visualizar('n', oper_1, 0, 1);
  1007  0039E6  C064  F056         	movff	see_full_operation@oper_1,visualizar@position
  1008  0039EA  0E00               	movlw	0
  1009  0039EC  6E57               	movwf	visualizar@from^0,c
  1010  0039EE  0E01               	movlw	1
  1011  0039F0  6E58               	movwf	visualizar@enable^0,c
  1012  0039F2  0E6E               	movlw	110
  1013  0039F4  EC5C  F01D         	call	_visualizar
  1014                           
  1015                           ;main.c: 177: visualizar('s', oper, 4, 1);
  1016  0039F8  C062  F056         	movff	see_full_operation@oper,visualizar@position
  1017  0039FC  0E04               	movlw	4
  1018  0039FE  6E57               	movwf	visualizar@from^0,c
  1019  003A00  0E01               	movlw	1
  1020  003A02  6E58               	movwf	visualizar@enable^0,c
  1021  003A04  0E73               	movlw	115
  1022  003A06  EC5C  F01D         	call	_visualizar
  1023                           
  1024                           ;main.c: 178: visualizar('n', oper_2, 0, 2);
  1025  003A0A  C061  F056         	movff	see_full_operation@oper_2,visualizar@position
  1026  003A0E  0E00               	movlw	0
  1027  003A10  6E57               	movwf	visualizar@from^0,c
  1028  003A12  0E02               	movlw	2
  1029  003A14  6E58               	movwf	visualizar@enable^0,c
  1030  003A16  0E6E               	movlw	110
  1031  003A18  EC5C  F01D         	call	_visualizar
  1032                           
  1033                           ;main.c: 179: visualizar('s', 10, 4, 2);
  1034  003A1C  0E0A               	movlw	10
  1035  003A1E  6E56               	movwf	visualizar@position^0,c
  1036  003A20  0E04               	movlw	4
  1037  003A22  6E57               	movwf	visualizar@from^0,c
  1038  003A24  0E02               	movlw	2
  1039  003A26  6E58               	movwf	visualizar@enable^0,c
  1040  003A28  0E73               	movlw	115
  1041  003A2A  EC5C  F01D         	call	_visualizar
  1042  003A2E                     
  1043                           ;main.c: 180: _delay((unsigned long)((5)*(4000000/4000.0)));
  1044  003A2E  0E05               	movlw	5
  1045  003A30  6E63               	movwf	??_see_full_operation^0,c
  1046  003A32  0EDF               	movlw	223
  1047  003A34                     u467:
  1048  003A34  FFFF               	dw	65535	; errata NOP
  1049  003A36  2EE8               	decfsz	wreg,f,c
  1050  003A38  D7FD               	bra	u467
  1051  003A3A  2E63               	decfsz	??_see_full_operation^0,f,c
  1052  003A3C  D7FB               	bra	u467
  1053  003A3E  0012               	return		;funcret
  1054  003A40  FFFF               	dw	65535	; errata NOP
  1055  003A42                     __end_of_see_full_operation:
  1056                           	opt callstack 0
  1057                           
  1058 ;; *************** function _visualizar *****************
  1059 ;; Defined at:
  1060 ;;		line 157 in file "main.c"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;  SoN             1    wreg     unsigned char 
  1063 ;;  position        1    1[COMRAM] unsigned char 
  1064 ;;  from            1    2[COMRAM] unsigned char 
  1065 ;;  enable          1    3[COMRAM] unsigned char 
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;  SoN             1    8[COMRAM] unsigned char 
  1068 ;;  x               1   11[COMRAM] unsigned char 
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  1    wreg      void 
  1071 ;; Registers used:
  1072 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1078 ;;      Params:         3       0       0       0       0       0       0
  1079 ;;      Locals:         4       0       0       0       0       0       0
  1080 ;;      Temps:          4       0       0       0       0       0       0
  1081 ;;      Totals:        11       0       0       0       0       0       0
  1082 ;;Total ram usage:       11 bytes
  1083 ;; Hardware stack levels used:    1
  1084 ;; Hardware stack levels required when called:    1
  1085 ;; This function calls:
  1086 ;;		_tolower
  1087 ;; This function is called by:
  1088 ;;		_main
  1089 ;;		_see_full_operation
  1090 ;;		_show_error_message
  1091 ;; This function uses a non-reentrant model
  1092 ;;
  1093                           
  1094                           	psect	text3
  1095  003AB8                     __ptext3:
  1096                           	opt callstack 0
  1097  003AB8                     _visualizar:
  1098                           	opt callstack 0
  1099  003AB8  FFFF               	dw	65535	; assembler added errata NOP
  1100                           
  1101                           ;incstack = 0
  1102                           ;visualizar@SoN stored from wreg
  1103  003ABA  6E5D               	movwf	visualizar@SoN^0,c
  1104  003ABC                     
  1105                           ;main.c: 158: for (char x = 0; x < 3; x++) {
  1106  003ABC  0E00               	movlw	0
  1107  003ABE  6E60               	movwf	visualizar@x^0,c
  1108  003AC0                     l1336:
  1109  003AC0  FFFF               	dw	65535	; assembler added errata NOP
  1110                           
  1111                           ;main.c: 159: if ((from + x) > 6) {
  1112  003AC2  5060               	movf	visualizar@x^0,w,c
  1113  003AC4  C057  F059         	movff	visualizar@from,??_visualizar
  1114  003AC8  6A5A               	clrf	(??_visualizar+1)^0,c
  1115  003ACA  2659               	addwf	??_visualizar^0,f,c
  1116  003ACC  0E00               	movlw	0
  1117  003ACE  225A               	addwfc	(??_visualizar+1)^0,f,c
  1118  003AD0  BE5A               	btfsc	(??_visualizar+1)^0,7,c
  1119  003AD2  EF74  F01D         	goto	u291
  1120  003AD6  505A               	movf	(??_visualizar+1)^0,w,c
  1121  003AD8  E10A               	bnz	u290
  1122  003ADA  0E07               	movlw	7
  1123  003ADC  5C59               	subwf	??_visualizar^0,w,c
  1124  003ADE  A0D8               	btfss	status,0,c
  1125  003AE0  EF74  F01D         	goto	u291
  1126  003AE4  EF77  F01D         	goto	u290
  1127  003AE8                     u291:
  1128  003AE8  FFFF               	dw	65535	; assembler added errata NOP
  1129  003AEA  EF7A  F01D         	goto	l1340
  1130  003AEE                     u290:
  1131  003AEE  FFFF               	dw	65535	; assembler added errata NOP
  1132  003AF0  EFE3  F01D         	goto	l126
  1133  003AF4                     l1340:
  1134  003AF4  FFFF               	dw	65535	; assembler added errata NOP
  1135                           
  1136                           ;main.c: 161: };main.c: 162: if (enable == 1) {
  1137  003AF6  0458               	decf	visualizar@enable^0,w,c
  1138  003AF8  A4D8               	btfss	status,2,c
  1139  003AFA  EF81  F01D         	goto	u301
  1140  003AFE  EF84  F01D         	goto	u300
  1141  003B02                     u301:
  1142  003B02  FFFF               	dw	65535	; assembler added errata NOP
  1143  003B04  EF89  F01D         	goto	l127
  1144  003B08                     u300:
  1145  003B08  FFFF               	dw	65535	; assembler added errata NOP
  1146  003B0A                     
  1147                           ;main.c: 163: LA3 = 1;
  1148  003B0A  8689               	bsf	3977,3,c	;volatile
  1149                           
  1150                           ;main.c: 164: LA5 = 0;
  1151  003B0C  9A89               	bcf	3977,5,c	;volatile
  1152                           
  1153                           ;main.c: 165: } else {
  1154  003B0E  EF8C  F01D         	goto	l1344
  1155  003B12                     l127:
  1156  003B12  FFFF               	dw	65535	; assembler added errata NOP
  1157                           
  1158                           ;main.c: 166: LA3 = 0;
  1159  003B14  9689               	bcf	3977,3,c	;volatile
  1160                           
  1161                           ;main.c: 167: LA5 = 1;
  1162  003B16  8A89               	bsf	3977,5,c	;volatile
  1163  003B18                     l1344:
  1164  003B18  FFFF               	dw	65535	; assembler added errata NOP
  1165                           
  1166                           ;main.c: 168: };main.c: 169: LATD = tolower(SoN) == 's' ? ~SIMBOLO[position][x] : ~NUMER
      +                          O[position][x];
  1167  003B1A  505D               	movf	visualizar@SoN^0,w,c
  1168  003B1C  EC10  F01C         	call	_tolower
  1169  003B20  0A73               	xorlw	115
  1170  003B22  B4D8               	btfsc	status,2,c
  1171  003B24  EF96  F01D         	goto	u311
  1172  003B28  EF99  F01D         	goto	u310
  1173  003B2C                     u311:
  1174  003B2C  FFFF               	dw	65535	; assembler added errata NOP
  1175  003B2E  EFB3  F01D         	goto	l1348
  1176  003B32                     u310:
  1177  003B32  FFFF               	dw	65535	; assembler added errata NOP
  1178  003B34  5056               	movf	visualizar@position^0,w,c
  1179  003B36  0D03               	mullw	3
  1180  003B38  0E01               	movlw	low _NUMERO
  1181  003B3A  6E59               	movwf	??_visualizar^0,c
  1182  003B3C  0E00               	movlw	high _NUMERO
  1183  003B3E  6E5A               	movwf	(??_visualizar+1)^0,c
  1184  003B40  50F3               	movf	243,w,c
  1185  003B42  2659               	addwf	??_visualizar^0,f,c
  1186  003B44  50F4               	movf	244,w,c
  1187  003B46  225A               	addwfc	(??_visualizar+1)^0,f,c
  1188  003B48  5060               	movf	visualizar@x^0,w,c
  1189  003B4A  2459               	addwf	??_visualizar^0,w,c
  1190  003B4C  6ED9               	movwf	fsr2l,c
  1191  003B4E  0E00               	movlw	0
  1192  003B50  205A               	addwfc	(??_visualizar+1)^0,w,c
  1193  003B52  6EDA               	movwf	fsr2h,c
  1194  003B54  50DF               	movf	indf2,w,c
  1195  003B56  6E5B               	movwf	(??_visualizar+2)^0,c
  1196  003B58  6A5C               	clrf	(??_visualizar+3)^0,c
  1197  003B5A  1C5B               	comf	(??_visualizar+2)^0,w,c
  1198  003B5C  6E5E               	movwf	_visualizar$170^0,c
  1199  003B5E  1C5C               	comf	(??_visualizar+3)^0,w,c
  1200  003B60  6E5F               	movwf	(_visualizar$170+1)^0,c
  1201  003B62  EFCB  F01D         	goto	l1350
  1202  003B66                     l1348:
  1203  003B66  FFFF               	dw	65535	; assembler added errata NOP
  1204  003B68  5056               	movf	visualizar@position^0,w,c
  1205  003B6A  0D03               	mullw	3
  1206  003B6C  0E31               	movlw	low _SIMBOLO
  1207  003B6E  6E59               	movwf	??_visualizar^0,c
  1208  003B70  0E00               	movlw	high _SIMBOLO
  1209  003B72  6E5A               	movwf	(??_visualizar+1)^0,c
  1210  003B74  50F3               	movf	243,w,c
  1211  003B76  2659               	addwf	??_visualizar^0,f,c
  1212  003B78  50F4               	movf	244,w,c
  1213  003B7A  225A               	addwfc	(??_visualizar+1)^0,f,c
  1214  003B7C  5060               	movf	visualizar@x^0,w,c
  1215  003B7E  2459               	addwf	??_visualizar^0,w,c
  1216  003B80  6ED9               	movwf	fsr2l,c
  1217  003B82  0E00               	movlw	0
  1218  003B84  205A               	addwfc	(??_visualizar+1)^0,w,c
  1219  003B86  6EDA               	movwf	fsr2h,c
  1220  003B88  50DF               	movf	indf2,w,c
  1221  003B8A  6E5B               	movwf	(??_visualizar+2)^0,c
  1222  003B8C  6A5C               	clrf	(??_visualizar+3)^0,c
  1223  003B8E  1C5B               	comf	(??_visualizar+2)^0,w,c
  1224  003B90  6E5E               	movwf	_visualizar$170^0,c
  1225  003B92  1C5C               	comf	(??_visualizar+3)^0,w,c
  1226  003B94  6E5F               	movwf	(_visualizar$170+1)^0,c
  1227  003B96                     l1350:
  1228  003B96  FFFF               	dw	65535	; assembler added errata NOP
  1229  003B98  C05E  FF8C         	movff	_visualizar$170,3980	;volatile
  1230  003B9C                     
  1231                           ;main.c: 170: LATE = x + from;
  1232  003B9C  5060               	movf	visualizar@x^0,w,c
  1233  003B9E  2457               	addwf	visualizar@from^0,w,c
  1234  003BA0  6E8D               	movwf	141,c	;volatile
  1235  003BA2                     
  1236                           ;main.c: 171: _delay((unsigned long)((5)*(4000000/4000.0)));
  1237  003BA2  0E05               	movlw	5
  1238  003BA4  6E59               	movwf	??_visualizar^0,c
  1239  003BA6  0EDF               	movlw	223
  1240  003BA8                     u477:
  1241  003BA8  FFFF               	dw	65535	; errata NOP
  1242  003BAA  2EE8               	decfsz	wreg,f,c
  1243  003BAC  D7FD               	bra	u477
  1244  003BAE  2E59               	decfsz	??_visualizar^0,f,c
  1245  003BB0  D7FB               	bra	u477
  1246  003BB2  2A60               	incf	visualizar@x^0,f,c
  1247  003BB4  0E02               	movlw	2
  1248  003BB6  6460               	cpfsgt	visualizar@x^0,c
  1249  003BB8  EFE0  F01D         	goto	u321
  1250  003BBC  EFE3  F01D         	goto	u320
  1251  003BC0                     u321:
  1252  003BC0  FFFF               	dw	65535	; assembler added errata NOP
  1253  003BC2  EF60  F01D         	goto	l1336
  1254  003BC6                     u320:
  1255  003BC6                     l126:
  1256  003BC6  FFFF               	dw	65535	; assembler added errata NOP
  1257  003BC8  0012               	return		;funcret
  1258  003BCA  FFFF               	dw	65535	; errata NOP
  1259  003BCC                     __end_of_visualizar:
  1260                           	opt callstack 0
  1261                           
  1262 ;; *************** function _tolower *****************
  1263 ;; Defined at:
  1264 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\tolower.c"
  1265 ;; Parameters:    Size  Location     Type
  1266 ;;  c               1    wreg     unsigned char 
  1267 ;; Auto vars:     Size  Location     Type
  1268 ;;  c               1    0[COMRAM] unsigned char 
  1269 ;; Return value:  Size  Location     Type
  1270 ;;                  1    wreg      unsigned char 
  1271 ;; Registers used:
  1272 ;;		wreg, status,2, status,0
  1273 ;; Tracked objects:
  1274 ;;		On entry : 0/0
  1275 ;;		On exit  : 0/0
  1276 ;;		Unchanged: 0/0
  1277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1278 ;;      Params:         0       0       0       0       0       0       0
  1279 ;;      Locals:         1       0       0       0       0       0       0
  1280 ;;      Temps:          0       0       0       0       0       0       0
  1281 ;;      Totals:         1       0       0       0       0       0       0
  1282 ;;Total ram usage:        1 bytes
  1283 ;; Hardware stack levels used:    1
  1284 ;; This function calls:
  1285 ;;		Nothing
  1286 ;; This function is called by:
  1287 ;;		_visualizar
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           	psect	text4
  1292  003820                     __ptext4:
  1293                           	opt callstack 0
  1294  003820                     _tolower:
  1295                           	opt callstack 0
  1296  003820  FFFF               	dw	65535	; assembler added errata NOP
  1297                           
  1298                           ;incstack = 0
  1299                           ;tolower@c stored from wreg
  1300  003822  6E55               	movwf	tolower@c^0,c
  1301  003824  0E5B               	movlw	91
  1302  003826  6055               	cpfslt	tolower@c^0,c
  1303  003828  EF18  F01C         	goto	u241
  1304  00382C  EF1B  F01C         	goto	u240
  1305  003830                     u241:
  1306  003830  FFFF               	dw	65535	; assembler added errata NOP
  1307  003832  EF27  F01C         	goto	l1292
  1308  003836                     u240:
  1309  003836  FFFF               	dw	65535	; assembler added errata NOP
  1310  003838  0E40               	movlw	64
  1311  00383A  6455               	cpfsgt	tolower@c^0,c
  1312  00383C  EF22  F01C         	goto	u251
  1313  003840  EF25  F01C         	goto	u250
  1314  003844                     u251:
  1315  003844  FFFF               	dw	65535	; assembler added errata NOP
  1316  003846  EF27  F01C         	goto	l1292
  1317  00384A                     u250:
  1318  00384A  FFFF               	dw	65535	; assembler added errata NOP
  1319  00384C  8A55               	bsf	tolower@c^0,5,c
  1320  00384E                     l1292:
  1321  00384E  FFFF               	dw	65535	; assembler added errata NOP
  1322  003850  5055               	movf	tolower@c^0,w,c
  1323  003852  0012               	return		;funcret
  1324  003854  FFFF               	dw	65535	; errata NOP
  1325  003856                     __end_of_tolower:
  1326                           	opt callstack 0
  1327                           
  1328 ;; *************** function _operar *****************
  1329 ;; Defined at:
  1330 ;;		line 191 in file "main.c"
  1331 ;; Parameters:    Size  Location     Type
  1332 ;;  oper            1    wreg     unsigned char 
  1333 ;;  oper_1          1    8[COMRAM] unsigned char 
  1334 ;;  oper_2          1    9[COMRAM] unsigned char 
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;  oper            1   10[COMRAM] unsigned char 
  1337 ;; Return value:  Size  Location     Type
  1338 ;;                  1    wreg      unsigned char 
  1339 ;; Registers used:
  1340 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1341 ;; Tracked objects:
  1342 ;;		On entry : 0/0
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1346 ;;      Params:         2       0       0       0       0       0       0
  1347 ;;      Locals:         1       0       0       0       0       0       0
  1348 ;;      Temps:          0       0       0       0       0       0       0
  1349 ;;      Totals:         3       0       0       0       0       0       0
  1350 ;;Total ram usage:        3 bytes
  1351 ;; Hardware stack levels used:    1
  1352 ;; Hardware stack levels required when called:    3
  1353 ;; This function calls:
  1354 ;;		_and
  1355 ;;		_division
  1356 ;;		_module
  1357 ;;		_multi
  1358 ;;		_nand
  1359 ;;		_no_es_primo
  1360 ;;		_or
  1361 ;;		_resta
  1362 ;;		_suma
  1363 ;;		_xor
  1364 ;; This function is called by:
  1365 ;;		_main
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368                           
  1369                           	psect	text5
  1370  003BCC                     __ptext5:
  1371                           	opt callstack 0
  1372  003BCC                     _operar:
  1373                           	opt callstack 0
  1374  003BCC  FFFF               	dw	65535	; assembler added errata NOP
  1375                           
  1376                           ;incstack = 0
  1377                           ;operar@oper stored from wreg
  1378  003BCE  6E5F               	movwf	operar@oper^0,c
  1379  003BD0                     
  1380                           ;main.c: 192: switch (oper) {
  1381  003BD0  EF5A  F01E         	goto	l1496
  1382  003BD4                     l1420:
  1383  003BD4  FFFF               	dw	65535	; assembler added errata NOP
  1384                           
  1385                           ;main.c: 194: return suma(oper_1, oper_2);
  1386  003BD6  C05E  F055         	movff	operar@oper_2,suma@oper_2
  1387  003BDA  505D               	movf	operar@oper_1^0,w,c
  1388  003BDC  ECCA  F01B         	call	_suma
  1389  003BE0  EF8A  F01E         	goto	l143
  1390  003BE4                     l1426:
  1391  003BE4  FFFF               	dw	65535	; assembler added errata NOP
  1392                           
  1393                           ;main.c: 197: return resta(oper_1, oper_2);
  1394  003BE6  C05E  F055         	movff	operar@oper_2,resta@oper_2
  1395  003BEA  505D               	movf	operar@oper_1^0,w,c
  1396  003BEC  ECC4  F01B         	call	_resta
  1397  003BF0  EF8A  F01E         	goto	l143
  1398  003BF4                     l1432:
  1399  003BF4  FFFF               	dw	65535	; assembler added errata NOP
  1400                           
  1401                           ;main.c: 200: return multi(oper_1, oper_2);
  1402  003BF6  C05E  F055         	movff	operar@oper_2,multi@oper_2
  1403  003BFA  505D               	movf	operar@oper_1^0,w,c
  1404  003BFC  ECD6  F01B         	call	_multi
  1405  003C00  EF8A  F01E         	goto	l143
  1406  003C04                     l1438:
  1407  003C04  FFFF               	dw	65535	; assembler added errata NOP
  1408                           
  1409                           ;main.c: 203: return division(oper_1, oper_2);
  1410  003C06  C05E  F059         	movff	operar@oper_2,division@oper_2
  1411  003C0A  505D               	movf	operar@oper_1^0,w,c
  1412  003C0C  ECF0  F01B         	call	_division
  1413  003C10  EF8A  F01E         	goto	l143
  1414  003C14                     l1444:
  1415  003C14  FFFF               	dw	65535	; assembler added errata NOP
  1416                           
  1417                           ;main.c: 206: return module(oper_1, oper_2);
  1418  003C16  C05E  F059         	movff	operar@oper_2,module@oper_2
  1419  003C1A  505D               	movf	operar@oper_1^0,w,c
  1420  003C1C  ECDD  F01B         	call	_module
  1421  003C20  EF8A  F01E         	goto	l143
  1422  003C24                     l1450:
  1423  003C24  FFFF               	dw	65535	; assembler added errata NOP
  1424                           
  1425                           ;main.c: 209: return and(oper_1, oper_2);
  1426  003C26  C05E  F055         	movff	operar@oper_2,and@oper_2
  1427  003C2A  505D               	movf	operar@oper_1^0,w,c
  1428  003C2C  ECB8  F01B         	call	_and
  1429  003C30  EF8A  F01E         	goto	l143
  1430  003C34                     l1456:
  1431  003C34  FFFF               	dw	65535	; assembler added errata NOP
  1432                           
  1433                           ;main.c: 212: return or(oper_1, oper_2);
  1434  003C36  C05E  F055         	movff	operar@oper_2,or@oper_2
  1435  003C3A  505D               	movf	operar@oper_1^0,w,c
  1436  003C3C  ECBE  F01B         	call	_or
  1437  003C40  EF8A  F01E         	goto	l143
  1438  003C44                     l1462:
  1439  003C44  FFFF               	dw	65535	; assembler added errata NOP
  1440                           
  1441                           ;main.c: 215: return nand(oper_1, oper_2);
  1442  003C46  C05E  F057         	movff	operar@oper_2,nand@oper_2
  1443  003C4A  505D               	movf	operar@oper_1^0,w,c
  1444  003C4C  ECE6  F01B         	call	_nand
  1445  003C50  EF8A  F01E         	goto	l143
  1446  003C54                     l1468:
  1447  003C54  FFFF               	dw	65535	; assembler added errata NOP
  1448                           
  1449                           ;main.c: 218: return xor(oper_1, oper_2);
  1450  003C56  C05E  F055         	movff	operar@oper_2,xor@oper_2
  1451  003C5A  505D               	movf	operar@oper_1^0,w,c
  1452  003C5C  ECD0  F01B         	call	_xor
  1453  003C60  EF8A  F01E         	goto	l143
  1454  003C64                     l1474:
  1455  003C64  FFFF               	dw	65535	; assembler added errata NOP
  1456                           
  1457                           ;main.c: 221: return no_es_primo(oper_1);
  1458  003C66  505D               	movf	operar@oper_1^0,w,c
  1459  003C68  EC97  F01C         	call	_no_es_primo
  1460  003C6C  EF8A  F01E         	goto	l143
  1461  003C70                     l1480:
  1462  003C70  FFFF               	dw	65535	; assembler added errata NOP
  1463                           
  1464                           ;main.c: 224: if (oper_1 == 2 && !module(oper_2, 2)) {
  1465  003C72  0E02               	movlw	2
  1466  003C74  185D               	xorwf	operar@oper_1^0,w,c
  1467  003C76  A4D8               	btfss	status,2,c
  1468  003C78  EF40  F01E         	goto	u351
  1469  003C7C  EF43  F01E         	goto	u350
  1470  003C80                     u351:
  1471  003C80  FFFF               	dw	65535	; assembler added errata NOP
  1472  003C82  EF56  F01E         	goto	l1488
  1473  003C86                     u350:
  1474  003C86  FFFF               	dw	65535	; assembler added errata NOP
  1475  003C88  0E02               	movlw	2
  1476  003C8A  6E59               	movwf	module@oper_2^0,c
  1477  003C8C  505E               	movf	operar@oper_2^0,w,c
  1478  003C8E  ECDD  F01B         	call	_module
  1479  003C92  0900               	iorlw	0
  1480  003C94  A4D8               	btfss	status,2,c
  1481  003C96  EF4F  F01E         	goto	u361
  1482  003C9A  EF52  F01E         	goto	u360
  1483  003C9E                     u361:
  1484  003C9E  FFFF               	dw	65535	; assembler added errata NOP
  1485  003CA0  EF56  F01E         	goto	l1488
  1486  003CA4                     u360:
  1487  003CA4  FFFF               	dw	65535	; assembler added errata NOP
  1488  003CA6                     
  1489                           ;main.c: 225: return 1;
  1490  003CA6  0E01               	movlw	1
  1491  003CA8  EF8A  F01E         	goto	l143
  1492  003CAC                     l1488:
  1493  003CAC  FFFF               	dw	65535	; assembler added errata NOP
  1494                           
  1495                           ;main.c: 226: };main.c: 227: return 0;
  1496  003CAE  0E00               	movlw	0
  1497  003CB0  EF8A  F01E         	goto	l143
  1498  003CB4                     l1496:
  1499  003CB4  FFFF               	dw	65535	; assembler added errata NOP
  1500  003CB6  505F               	movf	operar@oper^0,w,c
  1501                           
  1502                           ; Switch size 1, requested type "simple"
  1503                           ; Number of cases is 11, Range of values is 0 to 10
  1504                           ; switch strategies available:
  1505                           ; Name         Instructions Cycles
  1506                           ; simple_byte           34    18 (average)
  1507                           ;	Chosen strategy is simple_byte
  1508  003CB8  0A00               	xorlw	0	; case 0
  1509  003CBA  B4D8               	btfsc	status,2,c
  1510  003CBC  EFEA  F01D         	goto	l1420
  1511  003CC0  0A01               	xorlw	1	; case 1
  1512  003CC2  B4D8               	btfsc	status,2,c
  1513  003CC4  EFF2  F01D         	goto	l1426
  1514  003CC8  0A03               	xorlw	3	; case 2
  1515  003CCA  B4D8               	btfsc	status,2,c
  1516  003CCC  EFFA  F01D         	goto	l1432
  1517  003CD0  0A01               	xorlw	1	; case 3
  1518  003CD2  B4D8               	btfsc	status,2,c
  1519  003CD4  EF02  F01E         	goto	l1438
  1520  003CD8  0A07               	xorlw	7	; case 4
  1521  003CDA  B4D8               	btfsc	status,2,c
  1522  003CDC  EF0A  F01E         	goto	l1444
  1523  003CE0  0A01               	xorlw	1	; case 5
  1524  003CE2  B4D8               	btfsc	status,2,c
  1525  003CE4  EF12  F01E         	goto	l1450
  1526  003CE8  0A03               	xorlw	3	; case 6
  1527  003CEA  B4D8               	btfsc	status,2,c
  1528  003CEC  EF1A  F01E         	goto	l1456
  1529  003CF0  0A01               	xorlw	1	; case 7
  1530  003CF2  B4D8               	btfsc	status,2,c
  1531  003CF4  EF22  F01E         	goto	l1462
  1532  003CF8  0A0F               	xorlw	15	; case 8
  1533  003CFA  B4D8               	btfsc	status,2,c
  1534  003CFC  EF2A  F01E         	goto	l1468
  1535  003D00  0A01               	xorlw	1	; case 9
  1536  003D02  B4D8               	btfsc	status,2,c
  1537  003D04  EF32  F01E         	goto	l1474
  1538  003D08  0A03               	xorlw	3	; case 10
  1539  003D0A  B4D8               	btfsc	status,2,c
  1540  003D0C  EF38  F01E         	goto	l1480
  1541  003D10  EF8A  F01E         	goto	l143
  1542  003D14                     l143:
  1543  003D14  FFFF               	dw	65535	; assembler added errata NOP
  1544  003D16  0012               	return		;funcret
  1545  003D18  FFFF               	dw	65535	; errata NOP
  1546  003D1A                     __end_of_operar:
  1547                           	opt callstack 0
  1548                           
  1549 ;; *************** function _xor *****************
  1550 ;; Defined at:
  1551 ;;		line 267 in file "main.c"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;  oper_1          1    wreg     unsigned char 
  1554 ;;  oper_2          1    0[COMRAM] unsigned char 
  1555 ;; Auto vars:     Size  Location     Type
  1556 ;;  oper_1          1    1[COMRAM] unsigned char 
  1557 ;; Return value:  Size  Location     Type
  1558 ;;                  1    wreg      unsigned char 
  1559 ;; Registers used:
  1560 ;;		wreg, status,2, status,0
  1561 ;; Tracked objects:
  1562 ;;		On entry : 0/0
  1563 ;;		On exit  : 0/0
  1564 ;;		Unchanged: 0/0
  1565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1566 ;;      Params:         1       0       0       0       0       0       0
  1567 ;;      Locals:         1       0       0       0       0       0       0
  1568 ;;      Temps:          0       0       0       0       0       0       0
  1569 ;;      Totals:         2       0       0       0       0       0       0
  1570 ;;Total ram usage:        2 bytes
  1571 ;; Hardware stack levels used:    1
  1572 ;; This function calls:
  1573 ;;		Nothing
  1574 ;; This function is called by:
  1575 ;;		_operar
  1576 ;; This function uses a non-reentrant model
  1577 ;;
  1578                           
  1579                           	psect	text6
  1580  0037A0                     __ptext6:
  1581                           	opt callstack 0
  1582  0037A0                     _xor:
  1583                           	opt callstack 0
  1584  0037A0  FFFF               	dw	65535	; assembler added errata NOP
  1585                           
  1586                           ;incstack = 0
  1587                           ;xor@oper_1 stored from wreg
  1588  0037A2  6E56               	movwf	xor@oper_1^0,c
  1589  0037A4                     
  1590                           ;main.c: 268: return oper_1 ^ oper_2;
  1591  0037A4  5056               	movf	xor@oper_1^0,w,c
  1592  0037A6  1855               	xorwf	xor@oper_2^0,w,c
  1593  0037A8  0012               	return		;funcret
  1594  0037AA  FFFF               	dw	65535	; errata NOP
  1595  0037AC                     __end_of_xor:
  1596                           	opt callstack 0
  1597                           
  1598 ;; *************** function _suma *****************
  1599 ;; Defined at:
  1600 ;;		line 234 in file "main.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;  oper_1          1    wreg     unsigned char 
  1603 ;;  oper_2          1    0[COMRAM] unsigned char 
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;  oper_1          1    1[COMRAM] unsigned char 
  1606 ;; Return value:  Size  Location     Type
  1607 ;;                  1    wreg      unsigned char 
  1608 ;; Registers used:
  1609 ;;		wreg, status,2, status,0
  1610 ;; Tracked objects:
  1611 ;;		On entry : 0/0
  1612 ;;		On exit  : 0/0
  1613 ;;		Unchanged: 0/0
  1614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1615 ;;      Params:         1       0       0       0       0       0       0
  1616 ;;      Locals:         1       0       0       0       0       0       0
  1617 ;;      Temps:          0       0       0       0       0       0       0
  1618 ;;      Totals:         2       0       0       0       0       0       0
  1619 ;;Total ram usage:        2 bytes
  1620 ;; Hardware stack levels used:    1
  1621 ;; This function calls:
  1622 ;;		Nothing
  1623 ;; This function is called by:
  1624 ;;		_operar
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628                           	psect	text7
  1629  003794                     __ptext7:
  1630                           	opt callstack 0
  1631  003794                     _suma:
  1632                           	opt callstack 0
  1633  003794  FFFF               	dw	65535	; assembler added errata NOP
  1634                           
  1635                           ;incstack = 0
  1636                           ;suma@oper_1 stored from wreg
  1637  003796  6E56               	movwf	suma@oper_1^0,c
  1638  003798                     
  1639                           ;main.c: 235: return oper_1 + oper_2;
  1640  003798  5056               	movf	suma@oper_1^0,w,c
  1641  00379A  2455               	addwf	suma@oper_2^0,w,c
  1642  00379C  0012               	return		;funcret
  1643  00379E  FFFF               	dw	65535	; errata NOP
  1644  0037A0                     __end_of_suma:
  1645                           	opt callstack 0
  1646                           
  1647 ;; *************** function _resta *****************
  1648 ;; Defined at:
  1649 ;;		line 238 in file "main.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;  oper_1          1    wreg     unsigned char 
  1652 ;;  oper_2          1    0[COMRAM] unsigned char 
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;  oper_1          1    1[COMRAM] unsigned char 
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  1    wreg      unsigned char 
  1657 ;; Registers used:
  1658 ;;		wreg, status,2, status,0
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1664 ;;      Params:         1       0       0       0       0       0       0
  1665 ;;      Locals:         1       0       0       0       0       0       0
  1666 ;;      Temps:          0       0       0       0       0       0       0
  1667 ;;      Totals:         2       0       0       0       0       0       0
  1668 ;;Total ram usage:        2 bytes
  1669 ;; Hardware stack levels used:    1
  1670 ;; This function calls:
  1671 ;;		Nothing
  1672 ;; This function is called by:
  1673 ;;		_operar
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           	psect	text8
  1678  003788                     __ptext8:
  1679                           	opt callstack 0
  1680  003788                     _resta:
  1681                           	opt callstack 0
  1682  003788  FFFF               	dw	65535	; assembler added errata NOP
  1683                           
  1684                           ;incstack = 0
  1685                           ;resta@oper_1 stored from wreg
  1686  00378A  6E56               	movwf	resta@oper_1^0,c
  1687  00378C                     
  1688                           ;main.c: 239: return oper_1 - oper_2;
  1689  00378C  5055               	movf	resta@oper_2^0,w,c
  1690  00378E  5C56               	subwf	resta@oper_1^0,w,c
  1691  003790  0012               	return		;funcret
  1692  003792  FFFF               	dw	65535	; errata NOP
  1693  003794                     __end_of_resta:
  1694                           	opt callstack 0
  1695                           
  1696 ;; *************** function _or *****************
  1697 ;; Defined at:
  1698 ;;		line 259 in file "main.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;  oper_1          1    wreg     unsigned char 
  1701 ;;  oper_2          1    0[COMRAM] unsigned char 
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;  oper_1          1    1[COMRAM] unsigned char 
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  1    wreg      unsigned char 
  1706 ;; Registers used:
  1707 ;;		wreg, status,2, status,0
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1713 ;;      Params:         1       0       0       0       0       0       0
  1714 ;;      Locals:         1       0       0       0       0       0       0
  1715 ;;      Temps:          0       0       0       0       0       0       0
  1716 ;;      Totals:         2       0       0       0       0       0       0
  1717 ;;Total ram usage:        2 bytes
  1718 ;; Hardware stack levels used:    1
  1719 ;; This function calls:
  1720 ;;		Nothing
  1721 ;; This function is called by:
  1722 ;;		_operar
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726                           	psect	text9
  1727  00377C                     __ptext9:
  1728                           	opt callstack 0
  1729  00377C                     _or:
  1730                           	opt callstack 0
  1731  00377C  FFFF               	dw	65535	; assembler added errata NOP
  1732                           
  1733                           ;incstack = 0
  1734                           ;or@oper_1 stored from wreg
  1735  00377E  6E56               	movwf	or@oper_1^0,c
  1736  003780                     
  1737                           ;main.c: 260: return oper_1 | oper_2;
  1738  003780  5056               	movf	or@oper_1^0,w,c
  1739  003782  1055               	iorwf	or@oper_2^0,w,c
  1740  003784  0012               	return		;funcret
  1741  003786  FFFF               	dw	65535	; errata NOP
  1742  003788                     __end_of_or:
  1743                           	opt callstack 0
  1744                           
  1745 ;; *************** function _no_es_primo *****************
  1746 ;; Defined at:
  1747 ;;		line 271 in file "main.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;  num             1    wreg     unsigned char 
  1750 ;; Auto vars:     Size  Location     Type
  1751 ;;  num             1    6[COMRAM] unsigned char 
  1752 ;;  i               1    7[COMRAM] unsigned char 
  1753 ;; Return value:  Size  Location     Type
  1754 ;;                  1    wreg      unsigned char 
  1755 ;; Registers used:
  1756 ;;		wreg, status,2, status,0, cstack
  1757 ;; Tracked objects:
  1758 ;;		On entry : 0/0
  1759 ;;		On exit  : 0/0
  1760 ;;		Unchanged: 0/0
  1761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1762 ;;      Params:         0       0       0       0       0       0       0
  1763 ;;      Locals:         2       0       0       0       0       0       0
  1764 ;;      Temps:          0       0       0       0       0       0       0
  1765 ;;      Totals:         2       0       0       0       0       0       0
  1766 ;;Total ram usage:        2 bytes
  1767 ;; Hardware stack levels used:    1
  1768 ;; Hardware stack levels required when called:    2
  1769 ;; This function calls:
  1770 ;;		_module
  1771 ;; This function is called by:
  1772 ;;		_operar
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776                           	psect	text10
  1777  00392E                     __ptext10:
  1778                           	opt callstack 0
  1779  00392E                     _no_es_primo:
  1780                           	opt callstack 0
  1781  00392E  FFFF               	dw	65535	; assembler added errata NOP
  1782                           
  1783                           ;incstack = 0
  1784                           ;no_es_primo@num stored from wreg
  1785  003930  6E5B               	movwf	no_es_primo@num^0,c
  1786  003932                     
  1787                           ;main.c: 272: for (char i = 2; i < num; i++) {
  1788  003932  0E02               	movlw	2
  1789  003934  6E5C               	movwf	no_es_primo@i^0,c
  1790  003936  EFB2  F01C         	goto	l1400
  1791  00393A                     l1392:
  1792  00393A  FFFF               	dw	65535	; assembler added errata NOP
  1793                           
  1794                           ;main.c: 273: if (!module(num, i)) {
  1795  00393C  C05C  F059         	movff	no_es_primo@i,module@oper_2
  1796  003940  505B               	movf	no_es_primo@num^0,w,c
  1797  003942  ECDD  F01B         	call	_module
  1798  003946  0900               	iorlw	0
  1799  003948  A4D8               	btfss	status,2,c
  1800  00394A  EFA9  F01C         	goto	u331
  1801  00394E  EFAC  F01C         	goto	u330
  1802  003952                     u331:
  1803  003952  FFFF               	dw	65535	; assembler added errata NOP
  1804  003954  EFB0  F01C         	goto	l1398
  1805  003958                     u330:
  1806  003958  FFFF               	dw	65535	; assembler added errata NOP
  1807  00395A                     
  1808                           ;main.c: 274: return 1;
  1809  00395A  0E01               	movlw	1
  1810  00395C  EFBF  F01C         	goto	l189
  1811  003960                     l1398:
  1812  003960  FFFF               	dw	65535	; assembler added errata NOP
  1813  003962  2A5C               	incf	no_es_primo@i^0,f,c
  1814  003964                     l1400:
  1815  003964  FFFF               	dw	65535	; assembler added errata NOP
  1816  003966  505B               	movf	no_es_primo@num^0,w,c
  1817  003968  5C5C               	subwf	no_es_primo@i^0,w,c
  1818  00396A  A0D8               	btfss	status,0,c
  1819  00396C  EFBA  F01C         	goto	u341
  1820  003970  EFBD  F01C         	goto	u340
  1821  003974                     u341:
  1822  003974  FFFF               	dw	65535	; assembler added errata NOP
  1823  003976  EF9D  F01C         	goto	l1392
  1824  00397A                     u340:
  1825  00397A  FFFF               	dw	65535	; assembler added errata NOP
  1826  00397C                     
  1827                           ;main.c: 275: };main.c: 276: };main.c: 277: return 0;
  1828  00397C  0E00               	movlw	0
  1829  00397E                     l189:
  1830  00397E  FFFF               	dw	65535	; assembler added errata NOP
  1831  003980  0012               	return		;funcret
  1832  003982  FFFF               	dw	65535	; errata NOP
  1833  003984                     __end_of_no_es_primo:
  1834                           	opt callstack 0
  1835                           
  1836 ;; *************** function _module *****************
  1837 ;; Defined at:
  1838 ;;		line 251 in file "main.c"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;  oper_1          1    wreg     unsigned char 
  1841 ;;  oper_2          1    4[COMRAM] unsigned char 
  1842 ;; Auto vars:     Size  Location     Type
  1843 ;;  oper_1          1    5[COMRAM] unsigned char 
  1844 ;; Return value:  Size  Location     Type
  1845 ;;                  1    wreg      unsigned char 
  1846 ;; Registers used:
  1847 ;;		wreg, status,2, status,0, cstack
  1848 ;; Tracked objects:
  1849 ;;		On entry : 0/0
  1850 ;;		On exit  : 0/0
  1851 ;;		Unchanged: 0/0
  1852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1853 ;;      Params:         1       0       0       0       0       0       0
  1854 ;;      Locals:         1       0       0       0       0       0       0
  1855 ;;      Temps:          0       0       0       0       0       0       0
  1856 ;;      Totals:         2       0       0       0       0       0       0
  1857 ;;Total ram usage:        2 bytes
  1858 ;; Hardware stack levels used:    1
  1859 ;; Hardware stack levels required when called:    1
  1860 ;; This function calls:
  1861 ;;		___lbmod
  1862 ;; This function is called by:
  1863 ;;		_operar
  1864 ;;		_no_es_primo
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868                           	psect	text11
  1869  0037BA                     __ptext11:
  1870                           	opt callstack 0
  1871  0037BA                     _module:
  1872                           	opt callstack 0
  1873  0037BA  FFFF               	dw	65535	; assembler added errata NOP
  1874                           
  1875                           ;incstack = 0
  1876                           ;module@oper_1 stored from wreg
  1877  0037BC  6E5A               	movwf	module@oper_1^0,c
  1878  0037BE                     
  1879                           ;main.c: 252: return oper_1 % oper_2;
  1880  0037BE  C059  F055         	movff	module@oper_2,___lbmod@divisor
  1881  0037C2  505A               	movf	module@oper_1^0,w,c
  1882  0037C4  EC4C  F01C         	call	___lbmod
  1883  0037C8  0012               	return		;funcret
  1884  0037CA  FFFF               	dw	65535	; errata NOP
  1885  0037CC                     __end_of_module:
  1886                           	opt callstack 0
  1887                           
  1888 ;; *************** function ___lbmod *****************
  1889 ;; Defined at:
  1890 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lbmod.c"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;  dividend        1    wreg     unsigned char 
  1893 ;;  divisor         1    0[COMRAM] unsigned char 
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;  dividend        1    1[COMRAM] unsigned char 
  1896 ;;  rem             1    3[COMRAM] unsigned char 
  1897 ;;  counter         1    2[COMRAM] unsigned char 
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  1    wreg      unsigned char 
  1900 ;; Registers used:
  1901 ;;		wreg, status,2, status,0
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1907 ;;      Params:         1       0       0       0       0       0       0
  1908 ;;      Locals:         3       0       0       0       0       0       0
  1909 ;;      Temps:          0       0       0       0       0       0       0
  1910 ;;      Totals:         4       0       0       0       0       0       0
  1911 ;;Total ram usage:        4 bytes
  1912 ;; Hardware stack levels used:    1
  1913 ;; This function calls:
  1914 ;;		Nothing
  1915 ;; This function is called by:
  1916 ;;		_module
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920                           	psect	text12
  1921  003898                     __ptext12:
  1922                           	opt callstack 0
  1923  003898                     ___lbmod:
  1924                           	opt callstack 0
  1925  003898  FFFF               	dw	65535	; assembler added errata NOP
  1926                           
  1927                           ;incstack = 0
  1928                           ;___lbmod@dividend stored from wreg
  1929  00389A  6E56               	movwf	___lbmod@dividend^0,c
  1930  00389C  0E08               	movlw	8
  1931  00389E  6E57               	movwf	___lbmod@counter^0,c
  1932  0038A0  0E00               	movlw	0
  1933  0038A2  6E58               	movwf	___lbmod@rem^0,c
  1934  0038A4                     l1272:
  1935  0038A4  FFFF               	dw	65535	; assembler added errata NOP
  1936  0038A6  90D8               	bcf	status,0,c
  1937  0038A8  3456               	rlcf	___lbmod@dividend^0,w,c
  1938  0038AA  3458               	rlcf	___lbmod@rem^0,w,c
  1939  0038AC  6E58               	movwf	___lbmod@rem^0,c
  1940  0038AE  90D8               	bcf	status,0,c
  1941  0038B0  3656               	rlcf	___lbmod@dividend^0,f,c
  1942  0038B2  5055               	movf	___lbmod@divisor^0,w,c
  1943  0038B4  5C58               	subwf	___lbmod@rem^0,w,c
  1944  0038B6  A0D8               	btfss	status,0,c
  1945  0038B8  EF60  F01C         	goto	u231
  1946  0038BC  EF63  F01C         	goto	u230
  1947  0038C0                     u231:
  1948  0038C0  FFFF               	dw	65535	; assembler added errata NOP
  1949  0038C2  EF66  F01C         	goto	l1280
  1950  0038C6                     u230:
  1951  0038C6  FFFF               	dw	65535	; assembler added errata NOP
  1952  0038C8  5055               	movf	___lbmod@divisor^0,w,c
  1953  0038CA  5E58               	subwf	___lbmod@rem^0,f,c
  1954  0038CC                     l1280:
  1955  0038CC  FFFF               	dw	65535	; assembler added errata NOP
  1956  0038CE  2E57               	decfsz	___lbmod@counter^0,f,c
  1957  0038D0  EF52  F01C         	goto	l1272
  1958  0038D4  5058               	movf	___lbmod@rem^0,w,c
  1959  0038D6  0012               	return		;funcret
  1960  0038D8  FFFF               	dw	65535	; errata NOP
  1961  0038DA                     __end_of___lbmod:
  1962                           	opt callstack 0
  1963                           
  1964 ;; *************** function _nand *****************
  1965 ;; Defined at:
  1966 ;;		line 263 in file "main.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;  oper_1          1    wreg     unsigned char 
  1969 ;;  oper_2          1    2[COMRAM] unsigned char 
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;  oper_1          1    3[COMRAM] unsigned char 
  1972 ;; Return value:  Size  Location     Type
  1973 ;;                  1    wreg      unsigned char 
  1974 ;; Registers used:
  1975 ;;		wreg, status,2, status,0, cstack
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1981 ;;      Params:         1       0       0       0       0       0       0
  1982 ;;      Locals:         1       0       0       0       0       0       0
  1983 ;;      Temps:          0       0       0       0       0       0       0
  1984 ;;      Totals:         2       0       0       0       0       0       0
  1985 ;;Total ram usage:        2 bytes
  1986 ;; Hardware stack levels used:    1
  1987 ;; Hardware stack levels required when called:    1
  1988 ;; This function calls:
  1989 ;;		_and
  1990 ;; This function is called by:
  1991 ;;		_operar
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995                           	psect	text13
  1996  0037CC                     __ptext13:
  1997                           	opt callstack 0
  1998  0037CC                     _nand:
  1999                           	opt callstack 0
  2000  0037CC  FFFF               	dw	65535	; assembler added errata NOP
  2001                           
  2002                           ;incstack = 0
  2003                           ;nand@oper_1 stored from wreg
  2004  0037CE  6E58               	movwf	nand@oper_1^0,c
  2005  0037D0                     
  2006                           ;main.c: 264: return ~(and(oper_1, oper_2));
  2007  0037D0  C057  F055         	movff	nand@oper_2,and@oper_2
  2008  0037D4  5058               	movf	nand@oper_1^0,w,c
  2009  0037D6  ECB8  F01B         	call	_and
  2010  0037DA  0AFF               	xorlw	255
  2011  0037DC  0012               	return		;funcret
  2012  0037DE  FFFF               	dw	65535	; errata NOP
  2013  0037E0                     __end_of_nand:
  2014                           	opt callstack 0
  2015                           
  2016 ;; *************** function _and *****************
  2017 ;; Defined at:
  2018 ;;		line 255 in file "main.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;  oper_1          1    wreg     unsigned char 
  2021 ;;  oper_2          1    0[COMRAM] unsigned char 
  2022 ;; Auto vars:     Size  Location     Type
  2023 ;;  oper_1          1    1[COMRAM] unsigned char 
  2024 ;; Return value:  Size  Location     Type
  2025 ;;                  1    wreg      unsigned char 
  2026 ;; Registers used:
  2027 ;;		wreg, status,2, status,0
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2033 ;;      Params:         1       0       0       0       0       0       0
  2034 ;;      Locals:         1       0       0       0       0       0       0
  2035 ;;      Temps:          0       0       0       0       0       0       0
  2036 ;;      Totals:         2       0       0       0       0       0       0
  2037 ;;Total ram usage:        2 bytes
  2038 ;; Hardware stack levels used:    1
  2039 ;; This function calls:
  2040 ;;		Nothing
  2041 ;; This function is called by:
  2042 ;;		_operar
  2043 ;;		_nand
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           	psect	text14
  2048  003770                     __ptext14:
  2049                           	opt callstack 0
  2050  003770                     _and:
  2051                           	opt callstack 0
  2052  003770  FFFF               	dw	65535	; assembler added errata NOP
  2053                           
  2054                           ;incstack = 0
  2055                           ;and@oper_1 stored from wreg
  2056  003772  6E56               	movwf	and@oper_1^0,c
  2057  003774                     
  2058                           ;main.c: 256: return oper_1 & oper_2;
  2059  003774  5056               	movf	and@oper_1^0,w,c
  2060  003776  1455               	andwf	and@oper_2^0,w,c
  2061  003778  0012               	return		;funcret
  2062  00377A  FFFF               	dw	65535	; errata NOP
  2063  00377C                     __end_of_and:
  2064                           	opt callstack 0
  2065                           
  2066 ;; *************** function _multi *****************
  2067 ;; Defined at:
  2068 ;;		line 242 in file "main.c"
  2069 ;; Parameters:    Size  Location     Type
  2070 ;;  oper_1          1    wreg     unsigned char 
  2071 ;;  oper_2          1    0[COMRAM] unsigned char 
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;  oper_1          1    1[COMRAM] unsigned char 
  2074 ;; Return value:  Size  Location     Type
  2075 ;;                  1    wreg      unsigned char 
  2076 ;; Registers used:
  2077 ;;		wreg, status,2, status,0, prodl, prodh
  2078 ;; Tracked objects:
  2079 ;;		On entry : 0/0
  2080 ;;		On exit  : 0/0
  2081 ;;		Unchanged: 0/0
  2082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2083 ;;      Params:         1       0       0       0       0       0       0
  2084 ;;      Locals:         1       0       0       0       0       0       0
  2085 ;;      Temps:          0       0       0       0       0       0       0
  2086 ;;      Totals:         2       0       0       0       0       0       0
  2087 ;;Total ram usage:        2 bytes
  2088 ;; Hardware stack levels used:    1
  2089 ;; This function calls:
  2090 ;;		Nothing
  2091 ;; This function is called by:
  2092 ;;		_operar
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           
  2096                           	psect	text15
  2097  0037AC                     __ptext15:
  2098                           	opt callstack 0
  2099  0037AC                     _multi:
  2100                           	opt callstack 0
  2101  0037AC  FFFF               	dw	65535	; assembler added errata NOP
  2102                           
  2103                           ;incstack = 0
  2104                           ;multi@oper_1 stored from wreg
  2105  0037AE  6E56               	movwf	multi@oper_1^0,c
  2106  0037B0                     
  2107                           ;main.c: 243: return oper_1 * oper_2;
  2108  0037B0  5056               	movf	multi@oper_1^0,w,c
  2109  0037B2  0255               	mulwf	multi@oper_2^0,c
  2110  0037B4  50F3               	movf	243,w,c
  2111  0037B6  0012               	return		;funcret
  2112  0037B8  FFFF               	dw	65535	; errata NOP
  2113  0037BA                     __end_of_multi:
  2114                           	opt callstack 0
  2115                           
  2116 ;; *************** function _division *****************
  2117 ;; Defined at:
  2118 ;;		line 246 in file "main.c"
  2119 ;; Parameters:    Size  Location     Type
  2120 ;;  oper_1          1    wreg     unsigned char 
  2121 ;;  oper_2          1    4[COMRAM] unsigned char 
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;  oper_1          1    5[COMRAM] unsigned char 
  2124 ;;  result          1    6[COMRAM] unsigned char 
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  1    wreg      unsigned char 
  2127 ;; Registers used:
  2128 ;;		wreg, status,2, status,0, cstack
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2134 ;;      Params:         1       0       0       0       0       0       0
  2135 ;;      Locals:         2       0       0       0       0       0       0
  2136 ;;      Temps:          0       0       0       0       0       0       0
  2137 ;;      Totals:         3       0       0       0       0       0       0
  2138 ;;Total ram usage:        3 bytes
  2139 ;; Hardware stack levels used:    1
  2140 ;; Hardware stack levels required when called:    1
  2141 ;; This function calls:
  2142 ;;		___lbdiv
  2143 ;; This function is called by:
  2144 ;;		_operar
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147                           
  2148                           	psect	text16
  2149  0037E0                     __ptext16:
  2150                           	opt callstack 0
  2151  0037E0                     _division:
  2152                           	opt callstack 0
  2153  0037E0  FFFF               	dw	65535	; assembler added errata NOP
  2154                           
  2155                           ;incstack = 0
  2156                           ;division@oper_1 stored from wreg
  2157  0037E2  6E5A               	movwf	division@oper_1^0,c
  2158  0037E4                     
  2159                           ;main.c: 247: char result = oper_1 / oper_2;
  2160  0037E4  C059  F055         	movff	division@oper_2,___lbdiv@divisor
  2161  0037E8  505A               	movf	division@oper_1^0,w,c
  2162  0037EA  EC21  F01D         	call	___lbdiv
  2163  0037EE  6E5B               	movwf	division@result^0,c
  2164  0037F0                     
  2165                           ;main.c: 248: return result;
  2166  0037F0  505B               	movf	division@result^0,w,c
  2167  0037F2  0012               	return		;funcret
  2168  0037F4  FFFF               	dw	65535	; errata NOP
  2169  0037F6                     __end_of_division:
  2170                           	opt callstack 0
  2171                           
  2172 ;; *************** function ___lbdiv *****************
  2173 ;; Defined at:
  2174 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lbdiv.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;  dividend        1    wreg     unsigned char 
  2177 ;;  divisor         1    0[COMRAM] unsigned char 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  dividend        1    1[COMRAM] unsigned char 
  2180 ;;  quotient        1    3[COMRAM] unsigned char 
  2181 ;;  counter         1    2[COMRAM] unsigned char 
  2182 ;; Return value:  Size  Location     Type
  2183 ;;                  1    wreg      unsigned char 
  2184 ;; Registers used:
  2185 ;;		wreg, status,2, status,0
  2186 ;; Tracked objects:
  2187 ;;		On entry : 0/0
  2188 ;;		On exit  : 0/0
  2189 ;;		Unchanged: 0/0
  2190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2191 ;;      Params:         1       0       0       0       0       0       0
  2192 ;;      Locals:         3       0       0       0       0       0       0
  2193 ;;      Temps:          0       0       0       0       0       0       0
  2194 ;;      Totals:         4       0       0       0       0       0       0
  2195 ;;Total ram usage:        4 bytes
  2196 ;; Hardware stack levels used:    1
  2197 ;; This function calls:
  2198 ;;		Nothing
  2199 ;; This function is called by:
  2200 ;;		_division
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           	psect	text17
  2205  003A42                     __ptext17:
  2206                           	opt callstack 0
  2207  003A42                     ___lbdiv:
  2208                           	opt callstack 0
  2209  003A42  FFFF               	dw	65535	; assembler added errata NOP
  2210                           
  2211                           ;incstack = 0
  2212                           ;___lbdiv@dividend stored from wreg
  2213  003A44  6E56               	movwf	___lbdiv@dividend^0,c
  2214  003A46  0E00               	movlw	0
  2215  003A48  6E58               	movwf	___lbdiv@quotient^0,c
  2216  003A4A  5055               	movf	___lbdiv@divisor^0,w,c
  2217  003A4C  B4D8               	btfsc	status,2,c
  2218  003A4E  EF2B  F01D         	goto	u261
  2219  003A52  EF2E  F01D         	goto	u260
  2220  003A56                     u261:
  2221  003A56  FFFF               	dw	65535	; assembler added errata NOP
  2222  003A58  EF58  F01D         	goto	l1326
  2223  003A5C                     u260:
  2224  003A5C  FFFF               	dw	65535	; assembler added errata NOP
  2225  003A5E  0E01               	movlw	1
  2226  003A60  6E57               	movwf	___lbdiv@counter^0,c
  2227  003A62  EF37  F01D         	goto	l1314
  2228  003A66                     l1310:
  2229  003A66  FFFF               	dw	65535	; assembler added errata NOP
  2230  003A68  90D8               	bcf	status,0,c
  2231  003A6A  3655               	rlcf	___lbdiv@divisor^0,f,c
  2232  003A6C  2A57               	incf	___lbdiv@counter^0,f,c
  2233  003A6E                     l1314:
  2234  003A6E  FFFF               	dw	65535	; assembler added errata NOP
  2235  003A70  AE55               	btfss	___lbdiv@divisor^0,7,c
  2236  003A72  EF3D  F01D         	goto	u271
  2237  003A76  EF40  F01D         	goto	u270
  2238  003A7A                     u271:
  2239  003A7A  FFFF               	dw	65535	; assembler added errata NOP
  2240  003A7C  EF33  F01D         	goto	l1310
  2241  003A80                     u270:
  2242  003A80  FFFF               	dw	65535	; assembler added errata NOP
  2243  003A82                     l1316:
  2244  003A82  FFFF               	dw	65535	; assembler added errata NOP
  2245  003A84  90D8               	bcf	status,0,c
  2246  003A86  3658               	rlcf	___lbdiv@quotient^0,f,c
  2247  003A88  5055               	movf	___lbdiv@divisor^0,w,c
  2248  003A8A  5C56               	subwf	___lbdiv@dividend^0,w,c
  2249  003A8C  A0D8               	btfss	status,0,c
  2250  003A8E  EF4B  F01D         	goto	u281
  2251  003A92  EF4E  F01D         	goto	u280
  2252  003A96                     u281:
  2253  003A96  FFFF               	dw	65535	; assembler added errata NOP
  2254  003A98  EF52  F01D         	goto	l1322
  2255  003A9C                     u280:
  2256  003A9C  FFFF               	dw	65535	; assembler added errata NOP
  2257  003A9E  5055               	movf	___lbdiv@divisor^0,w,c
  2258  003AA0  5E56               	subwf	___lbdiv@dividend^0,f,c
  2259  003AA2  8058               	bsf	___lbdiv@quotient^0,0,c
  2260  003AA4                     l1322:
  2261  003AA4  FFFF               	dw	65535	; assembler added errata NOP
  2262  003AA6  90D8               	bcf	status,0,c
  2263  003AA8  3255               	rrcf	___lbdiv@divisor^0,f,c
  2264  003AAA  2E57               	decfsz	___lbdiv@counter^0,f,c
  2265  003AAC  EF41  F01D         	goto	l1316
  2266  003AB0                     l1326:
  2267  003AB0  FFFF               	dw	65535	; assembler added errata NOP
  2268  003AB2  5058               	movf	___lbdiv@quotient^0,w,c
  2269  003AB4  0012               	return		;funcret
  2270  003AB6  FFFF               	dw	65535	; errata NOP
  2271  003AB8                     __end_of___lbdiv:
  2272                           	opt callstack 0
  2273                           
  2274 ;; *************** function _init_config *****************
  2275 ;; Defined at:
  2276 ;;		line 126 in file "main.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;		None
  2279 ;; Auto vars:     Size  Location     Type
  2280 ;;		None
  2281 ;; Return value:  Size  Location     Type
  2282 ;;                  1    wreg      void 
  2283 ;; Registers used:
  2284 ;;		wreg, status,2
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2290 ;;      Params:         0       0       0       0       0       0       0
  2291 ;;      Locals:         0       0       0       0       0       0       0
  2292 ;;      Temps:          0       0       0       0       0       0       0
  2293 ;;      Totals:         0       0       0       0       0       0       0
  2294 ;;Total ram usage:        0 bytes
  2295 ;; Hardware stack levels used:    1
  2296 ;; This function calls:
  2297 ;;		Nothing
  2298 ;; This function is called by:
  2299 ;;		_main
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           	psect	text18
  2304  003856                     __ptext18:
  2305                           	opt callstack 0
  2306  003856                     _init_config:
  2307                           	opt callstack 0
  2308  003856  FFFF               	dw	65535	; assembler added errata NOP
  2309  003858                     
  2310                           ;main.c: 127: ADCON1 = 0X06;
  2311  003858  0E06               	movlw	6
  2312  00385A  6EC1               	movwf	193,c	;volatile
  2313                           
  2314                           ;main.c: 129: TRISA = 0B00000000;
  2315  00385C  0E00               	movlw	0
  2316  00385E  6E92               	movwf	146,c	;volatile
  2317                           
  2318                           ;main.c: 130: LATA = 0;
  2319  003860  0E00               	movlw	0
  2320  003862  6E89               	movwf	137,c	;volatile
  2321                           
  2322                           ;main.c: 131: PORTA = 0;
  2323  003864  0E00               	movlw	0
  2324  003866  6E80               	movwf	128,c	;volatile
  2325  003868                     
  2326                           ;main.c: 133: TRISB = 0B11111111;
  2327  003868  6893               	setf	147,c	;volatile
  2328                           
  2329                           ;main.c: 134: LATB = 0;
  2330  00386A  0E00               	movlw	0
  2331  00386C  6E8A               	movwf	138,c	;volatile
  2332  00386E                     
  2333                           ;main.c: 135: PORTB = 0B11111111;
  2334  00386E  6881               	setf	129,c	;volatile
  2335  003870                     
  2336                           ;main.c: 137: TRISC = 0B11111111;
  2337  003870  6894               	setf	148,c	;volatile
  2338                           
  2339                           ;main.c: 138: LATC = 0;
  2340  003872  0E00               	movlw	0
  2341  003874  6E8B               	movwf	139,c	;volatile
  2342                           
  2343                           ;main.c: 139: PORTC = 0;
  2344  003876  0E00               	movlw	0
  2345  003878  6E82               	movwf	130,c	;volatile
  2346                           
  2347                           ;main.c: 141: TRISD = 0B00000000;
  2348  00387A  0E00               	movlw	0
  2349  00387C  6E95               	movwf	149,c	;volatile
  2350                           
  2351                           ;main.c: 142: LATD = 0;
  2352  00387E  0E00               	movlw	0
  2353  003880  6E8C               	movwf	140,c	;volatile
  2354                           
  2355                           ;main.c: 143: PORTD = 0;
  2356  003882  0E00               	movlw	0
  2357  003884  6E83               	movwf	131,c	;volatile
  2358                           
  2359                           ;main.c: 145: TRISE = 0B00000000;
  2360  003886  0E00               	movlw	0
  2361  003888  6E96               	movwf	150,c	;volatile
  2362                           
  2363                           ;main.c: 146: LATE = 0;
  2364  00388A  0E00               	movlw	0
  2365  00388C  6E8D               	movwf	141,c	;volatile
  2366                           
  2367                           ;main.c: 147: PORTE = 0;
  2368  00388E  0E00               	movlw	0
  2369  003890  6E84               	movwf	132,c	;volatile
  2370  003892  0012               	return		;funcret
  2371  003894  FFFF               	dw	65535	; errata NOP
  2372  003896                     __end_of_init_config:
  2373                           	opt callstack 0
  2374  003896  FFFF               	dw	65535	; assembler added errata NOP
  2375                           
  2376                           	psect	rparam
  2377  0000                     tosu	equ	0xFFF
  2378                           tosh	equ	0xFFE
  2379                           tosl	equ	0xFFD
  2380                           stkptr	equ	0xFFC
  2381                           pclatu	equ	0xFFB
  2382                           pclath	equ	0xFFA
  2383                           pcl	equ	0xFF9
  2384                           tblptru	equ	0xFF8
  2385                           tblptrh	equ	0xFF7
  2386                           tblptrl	equ	0xFF6
  2387                           tablat	equ	0xFF5
  2388                           prodh	equ	0xFF4
  2389                           prodl	equ	0xFF3
  2390                           indf0	equ	0xFEF
  2391                           postinc0	equ	0xFEE
  2392                           postdec0	equ	0xFED
  2393                           preinc0	equ	0xFEC
  2394                           plusw0	equ	0xFEB
  2395                           fsr0h	equ	0xFEA
  2396                           fsr0l	equ	0xFE9
  2397                           wreg	equ	0xFE8
  2398                           indf1	equ	0xFE7
  2399                           postinc1	equ	0xFE6
  2400                           postdec1	equ	0xFE5
  2401                           preinc1	equ	0xFE4
  2402                           plusw1	equ	0xFE3
  2403                           fsr1h	equ	0xFE2
  2404                           fsr1l	equ	0xFE1
  2405                           bsr	equ	0xFE0
  2406                           indf2	equ	0xFDF
  2407                           postinc2	equ	0xFDE
  2408                           postdec2	equ	0xFDD
  2409                           preinc2	equ	0xFDC
  2410                           plusw2	equ	0xFDB
  2411                           fsr2h	equ	0xFDA
  2412                           fsr2l	equ	0xFD9
  2413                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        84
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     32     116
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_see_full_operation
    _show_error_message->_visualizar
    _see_full_operation->_visualizar
    _visualizar->_tolower
    _operar->_no_es_primo
    _no_es_primo->_module
    _module->___lbmod
    _nand->_and
    _division->___lbdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0   18012
                                             16 COMRAM    16    16      0
                        _init_config
                             _operar
                 _see_full_operation
                 _show_error_message
                         _visualizar
 ---------------------------------------------------------------------------------
 (1) _show_error_message                                   1     1      0    4233
                                             12 COMRAM     1     1      0
                         _visualizar
 ---------------------------------------------------------------------------------
 (1) _see_full_operation                                   4     2      2    4451
                                             12 COMRAM     4     2      2
                         _visualizar
 ---------------------------------------------------------------------------------
 (1) _visualizar                                          11     8      3    4233
                                              1 COMRAM    11     8      3
                            _tolower
 ---------------------------------------------------------------------------------
 (2) _tolower                                              1     1      0      67
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _operar                                               3     1      2    3993
                                              8 COMRAM     3     1      2
                                _and
                           _division
                             _module
                              _multi
                               _nand
                        _no_es_primo
                                 _or
                              _resta
                               _suma
                                _xor
 ---------------------------------------------------------------------------------
 (2) _xor                                                  2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _suma                                                 2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _resta                                                2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _or                                                   2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _no_es_primo                                          2     2      0     597
                                              6 COMRAM     2     2      0
                             _module
 ---------------------------------------------------------------------------------
 (3) _module                                               2     1      1     507
                                              4 COMRAM     2     1      1
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1     235
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _nand                                                 2     1      1     316
                                              2 COMRAM     2     1      1
                                _and
 ---------------------------------------------------------------------------------
 (3) _and                                                  2     1      1     196
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _multi                                                2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _division                                             3     2      1     381
                                              4 COMRAM     3     2      1
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1     238
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_config
   _operar
     _and
     _division
       ___lbdiv
     _module
       ___lbmod
     _multi
     _nand
       _and
     _no_es_primo
       _module
         ___lbmod
     _or
     _resta
     _suma
     _xor
   _see_full_operation
     _visualizar
       _tolower
   _show_error_message
     _visualizar
       _tolower
   _visualizar
     _tolower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     20      74       1       91.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      74      15        0.0%
DATA                 0      0      74       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Mar 03 08:12:56 2020

                                                               _or 377C  
                                                      __CFG_OSC$XT 000000  
                                                              l100 3E6C  
                                                              l120 3892  
                                                              l107 3EE0  
                                                              l126 3BC6  
                                                              l143 3D14  
                                                              l127 3B12  
                                                              l135 3A3E  
                                                              l162 3790  
                                                              l138 39DE  
                                                              l171 37C8  
                                                              l180 37DC  
                                                              ?_or 0055  
                                                              l165 37B6  
                                                              l174 3778  
                                                              l159 379C  
                                                              l183 37A8  
                                                              l168 37F2  
                                                              l177 3784  
                                                              l189 397E  
                                                              l593 38D6  
                                                              l587 3AB4  
                                                              _LA3 007C4B  
                                                              _LA5 007C4D  
                                                              l856 3852  
                                                              u300 3B08  
                                                              u301 3B02  
                                                              u230 38C6  
                                                              u310 3B32  
                                                              u231 38C0  
                                                              u311 3B2C  
                                                              u240 3836  
                                                              u320 3BC6  
                                                              u400 3E3A  
                                                              u241 3830  
                                                              u321 3BC0  
                                                              u401 3E34  
                                                              u330 3958  
                                                              u250 384A  
                                                              u410 3EC8  
                                                              u331 3952  
                                                              u251 3844  
                                                              u411 3EC2  
                                                              u260 3A5C  
                                                              u340 397A  
                                                              u420 3EF4  
                                                              u261 3A56  
                                                              u341 3974  
                                                              u421 3EEE  
                                                              u270 3A80  
                                                              u350 3C86  
                                                              u430 3F7A  
                                                              u271 3A7A  
                                                              u351 3C80  
                                                              u431 3F74  
                                                              u280 3A9C  
                                                              u360 3CA4  
                                                              u440 3FF6  
                                                              u281 3A96  
                                                              u361 3C9E  
                                                              u441 3FF0  
                                                              u290 3AEE  
                                                              u370 3D5C  
                                                              u291 3AE8  
                                                              u371 3D56  
                                                              u380 3DA4  
                                                              u381 3D9E  
                                                              u390 3DF6  
                                                              u391 3DF0  
                                                              u457 39D4  
                                                              u467 3A34  
                                                              u477 3BA8  
                                                     __CFG_BOR$OFF 000000  
                                                              _and 3770  
                                                              _xor 37A0  
                                                              wreg 000FE8  
                                                             ??_or 0056  
                                                     __CFG_LVP$OFF 000000  
                                                     __CFG_WDT$OFF 000000  
                                                             l1300 3774  
                                                             l1310 3A66  
                                                             l1320 3AA2  
                                                             l1312 3A6C  
                                                             l1304 3A46  
                                                             l1400 3964  
                                                             l1410 386E  
                                                             l1322 3AA4  
                                                             l1314 3A6E  
                                                             l1306 3A4A  
                                                             l1402 397C  
                                                             l1330 3ABC  
                                                             l1412 3870  
                                                             l1324 3AAA  
                                                             l1316 3A82  
                                                             l1308 3A5E  
                                                             l1420 3BD4  
                                                             l1340 3AF4  
                                                             l1500 39CE  
                                                             ?_and 0055  
                                                             l1406 3858  
                                                             l1318 3A9E  
                                                             l1326 3AB0  
                                                             l1270 389C  
                                                             l1350 3B96  
                                                             l1342 3B0A  
                                                             l1414 39E6  
                                                             l1510 3D34  
                                                             l1502 3D1A  
                                                             l1408 3868  
                                                             l1280 38CC  
                                                             l1272 38A4  
                                                             l1360 3798  
                                                             l1432 3BF4  
                                                             l1352 3B9C  
                                                             l1344 3B18  
                                                             l1336 3AC0  
                                                             l1416 3A2E  
                                                             l1520 3D4A  
                                                             l1504 3D20  
                                                             l1282 38D4  
                                                             l1274 38AE  
                                                             l1450 3C24  
                                                             l1426 3BE4  
                                                             l1418 3BD0  
                                                             l1290 384C  
                                                             l1354 3BA2  
                                                             l1346 3B34  
                                                             l1530 3D78  
                                                             l1522 3D5E  
                                                             l1506 3D28  
                                                             l1372 37E4  
                                                             l1276 38B2  
                                                             l1364 378C  
                                                             l1444 3C14  
                                                             l1292 384E  
                                                             l1356 3BB2  
                                                             l1348 3B66  
                                                             l1540 3DDE  
                                                             l1532 3D8E  
                                                             l1516 3D38  
                                                             l1508 3D2E  
                                                             l1374 37F0  
                                                             l1382 37D0  
                                                             l1278 38C8  
                                                             l1390 3932  
                                                             l1462 3C44  
                                                             l1438 3C04  
                                                             l1286 3824  
                                                             l1358 3BB4  
                                                             l1550 3E26  
                                                             l1542 3DE2  
                                                             l1534 3DA6  
                                                             l1518 3D48  
                                                             l1368 37B0  
                                                             l1296 37BE  
                                                             l1392 393A  
                                                             l1480 3C70  
                                                             l1456 3C34  
                                                             l1288 3838  
                                                             l1560 3E80  
                                                             l1552 3E3C  
                                                             l1544 3DF8  
                                                             l1536 3DC0  
                                                             l1528 3D66  
                                                             l1394 395A  
                                                             l1378 3780  
                                                             l1386 37A4  
                                                             l1482 3C88  
                                                             l1474 3C64  
                                                             l1570 3ED6  
                                                             l1562 3E8E  
                                                             l1554 3E44  
                                                             l1546 3E0A  
                                                             l1538 3DD8  
                                                             l1484 3CA6  
                                                             l1468 3C54  
                                                             l1580 3F28  
                                                             l1572 3EF6  
                                                             l1564 3EA4  
                                                             l1556 3E56  
                                                             l1548 3E0E  
                                                             l1398 3960  
                                                             l1590 3F68  
                                                             l1574 3F02  
                                                             l1566 3EB6  
                                                             l1558 3E6E  
                                                             l1488 3CAC  
                                                             l1496 3CB4  
                                                             l1576 3F0C  
                                                             l1568 3ECA  
                                                             l1592 3F80  
                                                             l1498 3986  
                                                             l1586 3F2E  
                                                             l1578 3F12  
                                                             l1594 3FE0  
                                                             l1596 3FE4  
                                                             l1588 3F66  
                                                             ?_xor 0055  
                                                             _LATA 000F89  
                                                             _LATB 000F8A  
                                                             _LATC 000F8B  
                                                             _LATD 000F8C  
                                                             _LATE 000F8D  
                                      __size_of_see_full_operation 0060  
                                                     __CFG_PWRT$ON 000000  
                                                             _main 3D1A  
                                                             _nand 37CC  
                                                             indf2 000FDF  
                                                             fsr1l 000FE1  
                                                             fsr2l 000FD9  
                                                             _suma 3794  
                                                             prodh 000FF4  
                                                             prodl 000FF3  
                                                             start 0002  
                                                     ___param_bank 000000  
                                                            ??_and 0056  
                                                            ??_xor 0056  
                                                            ?_main 0055  
                                                            ?_nand 0057  
                                                  __end_of___lbdiv 3AB8  
                                                  __end_of___lbmod 38DA  
                                                            ?_suma 0055  
                                                     ?_init_config 0055  
                                                            _PORTA 000F80  
                                                            _PORTB 000F81  
                                                            _PORTC 000F82  
                                                            _PORTD 000F83  
                                                            _PORTE 000F84  
                                                            _TRISA 000F92  
                                                            _TRISB 000F93  
                                                            _TRISC 000F94  
                                                            _TRISD 000F95  
                                                            _TRISE 000F96  
                                                            _resta 3788  
                                                            _multi 37AC  
                                                            main@i 006D  
                                                            main@x 006F  
                                                            tablat 000FF5  
                                                            status 000FD8  
                                                  __end_of_tolower 3856  
                                                  ___lbdiv@divisor 0055  
                                                  ___lbdiv@counter 0057  
                                                     ?_no_es_primo 0055  
                                                  __initialization 37F6  
                                                     __end_of_main 4000  
                                                     __end_of_nand 37E0  
                                                     __end_of_suma 37A0  
                                                           ??_main 0065  
                                                           ??_nand 0058  
                                                           ??_suma 0056  
                                                    __activetblptr 000002  
                                                           _ADCON1 000FC1  
                                                           ?_resta 0055  
                                                           ?_multi 0055  
                                                           _NUMERO 0001  
                                                 __end_of_division 37F6  
                                                        ??___lbdiv 0056  
                                                        ??___lbmod 0056  
                                         see_full_operation@oper_1 0064  
                                         see_full_operation@oper_2 0061  
                                                           _module 37BA  
                                                           _operar 3BCC  
                                               _show_error_message 3984  
                                                    main@resultado 0071  
                                                     __pdataCOMRAM 0001  
                                                           tblptrh 000FF7  
                                                           tblptrl 000FF6  
                                                           tblptru 000FF8  
                                              ?_show_error_message 0055  
                                                        ??_tolower 0055  
                                                 ___lbdiv@dividend 0056  
                                                  ___lbmod@divisor 0055  
                                                       __accesstop 0080  
                                          __end_of__initialization 3816  
                                                  ___lbmod@counter 0057  
                                                    ___rparam_used 000001  
                                                   __pcstackCOMRAM 0055  
                                             ??_show_error_message 0061  
                                                    __end_of_resta 3794  
                                                    __end_of_multi 37BA  
                                                 ___lbdiv@quotient 0058  
                                                       __end_of_or 3788  
                                             __size_of_init_config 0040  
                                               visualizar@position 0056  
                                                          ??_resta 0056  
                                                          ??_multi 0056  
                                                   main@_resultado 006B  
                                             __size_of_no_es_primo 0056  
                                                          ?_module 0059  
                                                          ?_operar 005D  
                                                   no_es_primo@num 005B  
                                                          _SIMBOLO 0031  
                                       __end_of_see_full_operation 3A42  
                                                        ?_division 0059  
                                                   visualizar@from 0057  
                                                          __Hparam 0000  
                                                          __Lparam 0000  
                                                          ___lbdiv 3A42  
                                                          ___lbmod 3898  
                                                          __pcinit 37F6  
                                                   _visualizar$170 005E  
                                                          __ramtop 0600  
                                                  __size_of_module 0012  
                                                  __size_of_operar 014E  
                                                          __ptext0 3D1A  
                                                          __ptext1 3984  
                                                          __ptext2 39E2  
                                                          __ptext3 3AB8  
                                                          __ptext4 3820  
                                                          __ptext5 3BCC  
                                                          __ptext6 37A0  
                                                          __ptext7 3794  
                                                          __ptext8 3788  
                                                          __ptext9 377C  
                                                      resta@oper_1 0056  
                                                      resta@oper_2 0055  
                                                     __size_of_and 000C  
                                                     __size_of_xor 000C  
                                                          _tolower 3820  
                                             end_of_initialization 3816  
                                                       ??_division 005A  
                                                    __Lmediumconst 0000  
                                                          postdec1 000FE5  
                                                          postinc0 000FEE  
                                                      multi@oper_1 0056  
                                                      multi@oper_2 0055  
                                                 ___lbmod@dividend 0056  
                                                      ___lbmod@rem 0058  
                                                       main@oper_1 0073  
                                                       main@oper_2 0074  
                                                       _visualizar 3AB8  
                                                       nand@oper_1 0058  
                                                       nand@oper_2 0057  
                                                    __pidataCOMRAM 38DA  
                                           see_full_operation@oper 0062  
                                                   __end_of_module 37CC  
                                                   __end_of_operar 3D1A  
                                              start_initialization 37F6  
                                                 visualizar@enable 0058  
                                                   division@oper_1 005A  
                                                   division@oper_2 0059  
                                                      __end_of_and 377C  
                                                      __end_of_xor 37AC  
                                                   division@result 005B  
                                                     no_es_primo@i 005C  
                                      __size_of_show_error_message 005E  
                                                         ??_module 005A  
                                                         ??_operar 005F  
                                                    ??_init_config 0055  
                                                __size_of_division 0016  
                                                      ?_visualizar 0056  
                                                    ??_no_es_primo 005B  
                                               _see_full_operation 39E2  
                                                         ?___lbdiv 0055  
                                                         ?___lbmod 0055  
                                                      visualizar@x 0060  
                                                     module@oper_1 005A  
                                                     module@oper_2 0059  
                                                        and@oper_1 0056  
                                                        and@oper_2 0055  
                                              ?_see_full_operation 0061  
                                                    visualizar@SoN 005D  
                                                       operar@oper 005F  
                                                         ?_tolower 0055  
                                              __end_of_init_config 3896  
                                                   __size_of_resta 000C  
                                                   __size_of_multi 000E  
                                             ??_see_full_operation 0063  
                                                      __size_of_or 000C  
                                              __end_of_no_es_primo 3984  
                                                        main@i_162 0070  
                                                        main@i_156 006E  
                                              __size_of_visualizar 0114  
                                                        copy_data0 380A  
                                                       suma@oper_1 0056  
                                                       suma@oper_2 0055  
                                                         __Hrparam 0000  
                                                         __Lrparam 0000  
                                                 __size_of___lbdiv 0076  
                                                 __size_of___lbmod 0042  
                                                     operar@oper_1 005D  
                                                     operar@oper_2 005E  
                                                      _init_config 3856  
                                                         _main$161 0068  
                                                         _main$157 0066  
                                                         __ptext10 392E  
                                                         __ptext11 37BA  
                                                         __ptext12 3898  
                                                         __ptext13 37CC  
                                                         __ptext14 3770  
                                                         __ptext15 37AC  
                                                         __ptext16 37E0  
                                                         __ptext17 3A42  
                                                         __ptext18 3856  
                                                         _division 37E0  
                                                 __size_of_tolower 0036  
                                                    __size_of_main 02E6  
                                                    __size_of_nand 0014  
                                                    __size_of_suma 000C  
                                                      _no_es_primo 392E  
                                                         main@_SoN 006A  
                                                         main@oper 0072  
                                                         or@oper_1 0056  
                                                         or@oper_2 0055  
                                                        xor@oper_1 0056  
                                                        xor@oper_2 0055  
                                                     ??_visualizar 0059  
                                       __end_of_show_error_message 39E2  
                                                         tolower@c 0055  
                                               __end_of_visualizar 3BCC  
