

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 26 17:01:40 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29  0000                     
    30                           ; Version 2.10
    31                           ; Generated 31/07/2019 GMT
    32                           ; 
    33                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F452 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     
    65                           	psect	idataCOMRAM
    66  003B6C                     __pidataCOMRAM:
    67                           	opt callstack 0
    68                           
    69                           ;initializer for _NUMERO
    70  003B6C  F8                 	db	248
    71  003B6D  88                 	db	136
    72  003B6E  F8                 	db	248
    73  003B6F  40                 	db	64
    74  003B70  F8                 	db	248
    75  003B71  F8                 	db	248
    76  003B72  B8                 	db	184
    77  003B73  A8                 	db	168
    78  003B74  E8                 	db	232
    79  003B75  A8                 	db	168
    80  003B76  A8                 	db	168
    81  003B77  F8                 	db	248
    82  003B78  E0                 	db	224
    83  003B79  20                 	db	32
    84  003B7A  F8                 	db	248
    85  003B7B  E8                 	db	232
    86  003B7C  A8                 	db	168
    87  003B7D  B8                 	db	184
    88  003B7E  F8                 	db	248
    89  003B7F  A8                 	db	168
    90  003B80  B8                 	db	184
    91  003B81  80                 	db	128
    92  003B82  80                 	db	128
    93  003B83  F8                 	db	248
    94  003B84  F8                 	db	248
    95  003B85  A8                 	db	168
    96  003B86  F8                 	db	248
    97  003B87  E0                 	db	224
    98  003B88  A0                 	db	160
    99  003B89  F8                 	db	248
   100  003B8A  F8                 	db	248
   101  003B8B  A0                 	db	160
   102  003B8C  F8                 	db	248
   103  003B8D  F8                 	db	248
   104  003B8E  28                 	db	40
   105  003B8F  38                 	db	56
   106  003B90  F8                 	db	248
   107  003B91  88                 	db	136
   108  003B92  88                 	db	136
   109  003B93  38                 	db	56
   110  003B94  28                 	db	40
   111  003B95  F8                 	db	248
   112  003B96  F8                 	db	248
   113  003B97  A8                 	db	168
   114  003B98  A8                 	db	168
   115  003B99  F8                 	db	248
   116  003B9A  A0                 	db	160
   117  003B9B  A0                 	db	160
   118                           
   119                           ;initializer for _SIMBOLO
   120  003B9C  20                 	db	32
   121  003B9D  70                 	db	112
   122  003B9E  20                 	db	32
   123  003B9F  20                 	db	32
   124  003BA0  20                 	db	32
   125  003BA1  20                 	db	32
   126  003BA2  50                 	db	80
   127  003BA3  20                 	db	32
   128  003BA4  50                 	db	80
   129  003BA5  10                 	db	16
   130  003BA6  20                 	db	32
   131  003BA7  40                 	db	64
   132  003BA8  70                 	db	112
   133  003BA9  20                 	db	32
   134  003BAA  70                 	db	112
   135  003BAB  20                 	db	32
   136  003BAC  40                 	db	64
   137  003BAD  20                 	db	32
   138  003BAE  40                 	db	64
   139  003BAF  20                 	db	32
   140  003BB0  40                 	db	64
   141  003BB1  50                 	db	80
   142  003BB2  60                 	db	96
   143  003BB3  50                 	db	80
   144  003BB4  60                 	db	96
   145  003BB5  50                 	db	80
   146  003BB6  60                 	db	96
   147  003BB7  80                 	db	128
   148  003BB8  F8                 	db	248
   149  003BB9  80                 	db	128
   150  003BBA  50                 	db	80
   151  003BBB  50                 	db	80
   152  003BBC  50                 	db	80
   153  003BBD  F8                 	db	248
   154  003BBE  B0                 	db	176
   155  003BBF  E8                 	db	232
   156  0000                     _PORTE	set	3972
   157  0000                     _LATE	set	3981
   158  0000                     _TRISE	set	3990
   159  0000                     _PORTD	set	3971
   160  0000                     _LATD	set	3980
   161  0000                     _TRISD	set	3989
   162  0000                     _LATC	set	3979
   163  0000                     _TRISC	set	3988
   164  0000                     _LATB	set	3978
   165  0000                     _TRISB	set	3987
   166  0000                     _PORTA	set	3968
   167  0000                     _LATA	set	3977
   168  0000                     _TRISA	set	3986
   169  0000                     _ADCON1	set	4033
   170  0000                     _PORTC	set	3970
   171  0000                     _PORTB	set	3969
   172  0000                     _LA5	set	31821
   173  0000                     _LA3	set	31819
   174                           
   175                           ; #config settings
   176  0000                     
   177                           	psect	cinit
   178  003A56                     __pcinit:
   179                           	opt callstack 0
   180  003A56                     start_initialization:
   181                           	opt callstack 0
   182  003A56                     __initialization:
   183                           	opt callstack 0
   184                           
   185                           ; Initialize objects allocated to COMRAM (84 bytes)
   186                           ; load TBLPTR registers with __pidataCOMRAM
   187  003A56  0E6C               	movlw	low __pidataCOMRAM
   188  003A58  6EF6               	movwf	tblptrl,c
   189  003A5A  0E3B               	movlw	high __pidataCOMRAM
   190  003A5C  6EF7               	movwf	tblptrh,c
   191  003A5E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   192  003A60  6EF8               	movwf	tblptru,c
   193  003A62  EE00  F001         	lfsr	0,__pdataCOMRAM
   194  003A66  EE10 F054          	lfsr	1,84
   195  003A6A                     copy_data0:
   196  003A6A  0009               	tblrd		*+
   197  003A6C  CFF5 FFEE          	movff	tablat,postinc0
   198  003A70  50E5               	movf	postdec1,w,c
   199  003A72  50E1               	movf	fsr1l,w,c
   200  003A74  E1FA               	bnz	copy_data0
   201  003A76                     end_of_initialization:
   202                           	opt callstack 0
   203  003A76                     __end_of__initialization:
   204                           	opt callstack 0
   205  003A76  0E00               	movlw	low (__Lmediumconst shr (0+16))
   206  003A78  6EF8               	movwf	tblptru,c
   207  003A7A  0100               	movlb	0
   208  003A7C  EF4C  F01F         	goto	_main	;jump to C main() function
   209                           
   210                           	psect	dataCOMRAM
   211  000001                     __pdataCOMRAM:
   212                           	opt callstack 0
   213  000001                     _NUMERO:
   214                           	opt callstack 0
   215  000001                     	ds	48
   216  000031                     _SIMBOLO:
   217                           	opt callstack 0
   218  000031                     	ds	36
   219                           
   220                           	psect	cstackCOMRAM
   221  000055                     __pcstackCOMRAM:
   222                           	opt callstack 0
   223  000055                     suma@oper_2:
   224                           	opt callstack 0
   225  000055                     resta@oper_2:
   226                           	opt callstack 0
   227  000055                     multi@oper_2:
   228                           	opt callstack 0
   229  000055                     and@oper_2:
   230                           	opt callstack 0
   231  000055                     or@oper_2:
   232                           	opt callstack 0
   233  000055                     xor@oper_2:
   234                           	opt callstack 0
   235  000055                     ___lbdiv@divisor:
   236                           	opt callstack 0
   237  000055                     ___lbmod@divisor:
   238                           	opt callstack 0
   239  000055                     tolower@c:
   240                           	opt callstack 0
   241                           
   242                           ; 1 bytes @ 0x0
   243  000055                     	ds	1
   244  000056                     visualizar@position:
   245                           	opt callstack 0
   246  000056                     suma@oper_1:
   247                           	opt callstack 0
   248  000056                     resta@oper_1:
   249                           	opt callstack 0
   250  000056                     multi@oper_1:
   251                           	opt callstack 0
   252  000056                     and@oper_1:
   253                           	opt callstack 0
   254  000056                     or@oper_1:
   255                           	opt callstack 0
   256  000056                     xor@oper_1:
   257                           	opt callstack 0
   258  000056                     ___lbdiv@dividend:
   259                           	opt callstack 0
   260  000056                     ___lbmod@dividend:
   261                           	opt callstack 0
   262                           
   263                           ; 1 bytes @ 0x1
   264  000056                     	ds	1
   265  000057                     visualizar@from:
   266                           	opt callstack 0
   267  000057                     nand@oper_2:
   268                           	opt callstack 0
   269  000057                     ___lbdiv@counter:
   270                           	opt callstack 0
   271  000057                     ___lbmod@counter:
   272                           	opt callstack 0
   273                           
   274                           ; 1 bytes @ 0x2
   275  000057                     	ds	1
   276  000058                     visualizar@enable:
   277                           	opt callstack 0
   278  000058                     nand@oper_1:
   279                           	opt callstack 0
   280  000058                     ___lbdiv@quotient:
   281                           	opt callstack 0
   282  000058                     ___lbmod@rem:
   283                           	opt callstack 0
   284                           
   285                           ; 1 bytes @ 0x3
   286  000058                     	ds	1
   287  000059                     ??_visualizar:
   288  000059                     division@oper_2:
   289                           	opt callstack 0
   290  000059                     module@oper_2:
   291                           	opt callstack 0
   292                           
   293                           ; 1 bytes @ 0x4
   294  000059                     	ds	1
   295  00005A                     division@oper_1:
   296                           	opt callstack 0
   297  00005A                     module@oper_1:
   298                           	opt callstack 0
   299                           
   300                           ; 1 bytes @ 0x5
   301  00005A                     	ds	1
   302  00005B                     division@result:
   303                           	opt callstack 0
   304  00005B                     no_es_primo@num:
   305                           	opt callstack 0
   306                           
   307                           ; 1 bytes @ 0x6
   308  00005B                     	ds	1
   309  00005C                     visualizar@SoN:
   310                           	opt callstack 0
   311  00005C                     operar@oper_1:
   312                           	opt callstack 0
   313                           
   314                           ; 1 bytes @ 0x7
   315  00005C                     	ds	1
   316  00005D                     operar@oper_2:
   317                           	opt callstack 0
   318  00005D                     _visualizar$158:
   319                           	opt callstack 0
   320                           
   321                           ; 2 bytes @ 0x8
   322  00005D                     	ds	1
   323  00005E                     operar@oper:
   324                           	opt callstack 0
   325                           
   326                           ; 1 bytes @ 0x9
   327  00005E                     	ds	1
   328  00005F                     visualizar@x:
   329                           	opt callstack 0
   330                           
   331                           ; 1 bytes @ 0xA
   332  00005F                     	ds	1
   333  000060                     ??_show_error_message:
   334                           
   335                           ; 1 bytes @ 0xB
   336  000060                     	ds	1
   337  000061                     ??_main:
   338                           
   339                           ; 1 bytes @ 0xC
   340  000061                     	ds	1
   341  000062                     _main$149:
   342                           	opt callstack 0
   343                           
   344                           ; 2 bytes @ 0xD
   345  000062                     	ds	2
   346  000064                     main@i:
   347                           	opt callstack 0
   348                           
   349                           ; 1 bytes @ 0xF
   350  000064                     	ds	1
   351  000065                     main@x:
   352                           	opt callstack 0
   353                           
   354                           ; 1 bytes @ 0x10
   355  000065                     	ds	1
   356  000066                     main@resultado:
   357                           	opt callstack 0
   358                           
   359                           ; 1 bytes @ 0x11
   360  000066                     	ds	1
   361  000067                     main@oper:
   362                           	opt callstack 0
   363                           
   364                           ; 1 bytes @ 0x12
   365  000067                     	ds	1
   366  000068                     main@oper_1:
   367                           	opt callstack 0
   368                           
   369                           ; 1 bytes @ 0x13
   370  000068                     	ds	1
   371  000069                     main@oper_2:
   372                           	opt callstack 0
   373                           
   374                           ; 1 bytes @ 0x14
   375  000069                     	ds	1
   376                           
   377 ;;
   378 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   379 ;;
   380 ;; *************** function _main *****************
   381 ;; Defined at:
   382 ;;		line 58 in file "main.c"
   383 ;; Parameters:    Size  Location     Type
   384 ;;		None
   385 ;; Auto vars:     Size  Location     Type
   386 ;;  x               1   16[COMRAM] unsigned char 
   387 ;;  i               1   15[COMRAM] unsigned char 
   388 ;;  oper_2          1   20[COMRAM] unsigned char 
   389 ;;  oper_1          1   19[COMRAM] unsigned char 
   390 ;;  oper            1   18[COMRAM] unsigned char 
   391 ;;  resultado       1   17[COMRAM] unsigned char 
   392 ;; Return value:  Size  Location     Type
   393 ;;                  1    wreg      void 
   394 ;; Registers used:
   395 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   396 ;; Tracked objects:
   397 ;;		On entry : 0/0
   398 ;;		On exit  : 0/0
   399 ;;		Unchanged: 0/0
   400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   401 ;;      Params:         0       0       0       0       0       0       0
   402 ;;      Locals:         8       0       0       0       0       0       0
   403 ;;      Temps:          1       0       0       0       0       0       0
   404 ;;      Totals:         9       0       0       0       0       0       0
   405 ;;Total ram usage:        9 bytes
   406 ;; Hardware stack levels required when called:    4
   407 ;; This function calls:
   408 ;;		_init_config
   409 ;;		_operar
   410 ;;		_show_error_message
   411 ;;		_visualizar
   412 ;; This function is called by:
   413 ;;		Startup code after reset
   414 ;; This function uses a non-reentrant model
   415 ;;
   416                           
   417                           	psect	text0
   418  003E98                     __ptext0:
   419                           	opt callstack 0
   420  003E98                     _main:
   421                           	opt callstack 27
   422  003E98  FFFF               	dw	65535	; assembler added errata NOP
   423                           
   424                           ;main.c: 59: char oper_1;;main.c: 60: char oper_2;;main.c: 61: char oper;;main.c: 62: ch
      +                          ar resultado;;main.c: 64: init_config();
   425  003E9A  EC74  F01D         	call	_init_config	;wreg free
   426  003E9E                     l1391:
   427  003E9E  FFFF               	dw	65535	; assembler added errata NOP
   428                           
   429                           ;main.c: 66: oper_1 = PORTB>>4;
   430  003EA0  3881               	swapf	129,w,c	;volatile
   431  003EA2  0B0F               	andlw	15
   432  003EA4  6E68               	movwf	main@oper_1^0,c
   433  003EA6                     
   434                           ;main.c: 67: oper_2 = PORTB&0X0F;
   435  003EA6  5081               	movf	129,w,c	;volatile
   436  003EA8  0B0F               	andlw	15
   437  003EAA  6E69               	movwf	main@oper_2^0,c
   438  003EAC                     
   439                           ;main.c: 68: oper = PORTC&0X0F;
   440  003EAC  5082               	movf	130,w,c	;volatile
   441  003EAE  0B0F               	andlw	15
   442  003EB0  6E67               	movwf	main@oper^0,c
   443  003EB2                     
   444                           ;main.c: 71: for (char i = 0; i < 200; i++) {
   445  003EB2  0E00               	movlw	0
   446  003EB4  6E64               	movwf	main@i^0,c
   447  003EB6  EFE0  F01F         	goto	l1433
   448  003EBA                     l1403:
   449  003EBA  FFFF               	dw	65535	; assembler added errata NOP
   450                           
   451                           ;main.c: 74: resultado = oper_1 < oper_2 ? operar(oper, oper_2, oper_1) : operar(oper, o
      +                          per_1, oper_2);
   452  003EBC  5069               	movf	main@oper_2^0,w,c
   453  003EBE  5C68               	subwf	main@oper_1^0,w,c
   454  003EC0  A0D8               	btfss	status,0,c
   455  003EC2  EF65  F01F         	goto	u291
   456  003EC6  EF68  F01F         	goto	u290
   457  003ECA                     u291:
   458  003ECA  FFFF               	dw	65535	; assembler added errata NOP
   459  003ECC  EF76  F01F         	goto	l1407
   460  003ED0                     u290:
   461  003ED0  FFFF               	dw	65535	; assembler added errata NOP
   462  003ED2  C068  F05C         	movff	main@oper_1,operar@oper_1
   463  003ED6  C069  F05D         	movff	main@oper_2,operar@oper_2
   464  003EDA  5067               	movf	main@oper^0,w,c
   465  003EDC  ECB6  F01E         	call	_operar
   466  003EE0  6E61               	movwf	??_main^0,c
   467  003EE2  5061               	movf	??_main^0,w,c
   468  003EE4  6E62               	movwf	_main$149^0,c
   469  003EE6  6A63               	clrf	(_main$149+1)^0,c
   470  003EE8  EF82  F01F         	goto	l1409
   471  003EEC                     l1407:
   472  003EEC  FFFF               	dw	65535	; assembler added errata NOP
   473  003EEE  C069  F05C         	movff	main@oper_2,operar@oper_1
   474  003EF2  C068  F05D         	movff	main@oper_1,operar@oper_2
   475  003EF6  5067               	movf	main@oper^0,w,c
   476  003EF8  ECB6  F01E         	call	_operar
   477  003EFC  6E61               	movwf	??_main^0,c
   478  003EFE  5061               	movf	??_main^0,w,c
   479  003F00  6E62               	movwf	_main$149^0,c
   480  003F02  6A63               	clrf	(_main$149+1)^0,c
   481  003F04                     l1409:
   482  003F04  FFFF               	dw	65535	; assembler added errata NOP
   483  003F06  C062  F066         	movff	_main$149,main@resultado
   484  003F0A                     
   485                           ;main.c: 75: char x = 0;
   486  003F0A  0E00               	movlw	0
   487  003F0C  6E65               	movwf	main@x^0,c
   488  003F0E                     
   489                           ;main.c: 76: if (oper_1 < oper_2) {
   490  003F0E  5069               	movf	main@oper_2^0,w,c
   491  003F10  5C68               	subwf	main@oper_1^0,w,c
   492  003F12  B0D8               	btfsc	status,0,c
   493  003F14  EF8E  F01F         	goto	u301
   494  003F18  EF91  F01F         	goto	u300
   495  003F1C                     u301:
   496  003F1C  FFFF               	dw	65535	; assembler added errata NOP
   497  003F1E  EF9D  F01F         	goto	l1419
   498  003F22                     u300:
   499  003F22  FFFF               	dw	65535	; assembler added errata NOP
   500  003F24                     
   501                           ;main.c: 77: visualizar('s', 1, x, 1);
   502  003F24  0E01               	movlw	1
   503  003F26  6E56               	movwf	visualizar@position^0,c
   504  003F28  0E00               	movlw	0
   505  003F2A  6E57               	movwf	visualizar@from^0,c
   506  003F2C  0E01               	movlw	1
   507  003F2E  6E58               	movwf	visualizar@enable^0,c
   508  003F30  0E73               	movlw	115
   509  003F32  EC4A  F01E         	call	_visualizar
   510  003F36                     
   511                           ;main.c: 78: x += 3;
   512  003F36  0E03               	movlw	3
   513  003F38  2665               	addwf	main@x^0,f,c
   514  003F3A                     l1419:
   515  003F3A  FFFF               	dw	65535	; assembler added errata NOP
   516                           
   517                           ;main.c: 79: };main.c: 81: visualizar('n', resultado, x, 1);
   518  003F3C  C066  F056         	movff	main@resultado,visualizar@position
   519  003F40  C065  F057         	movff	main@x,visualizar@from
   520  003F44  0E01               	movlw	1
   521  003F46  6E58               	movwf	visualizar@enable^0,c
   522  003F48  0E6E               	movlw	110
   523  003F4A  EC4A  F01E         	call	_visualizar
   524                           
   525                           ;main.c: 82: break;
   526  003F4E  EFF0  F01F         	goto	l1435
   527  003F52                     l1421:
   528  003F52  FFFF               	dw	65535	; assembler added errata NOP
   529                           
   530                           ;main.c: 84: case 4:;main.c: 85: if (oper_2 == 0) {
   531  003F54  5069               	movf	main@oper_2^0,w,c
   532  003F56  A4D8               	btfss	status,2,c
   533  003F58  EFB0  F01F         	goto	u311
   534  003F5C  EFB3  F01F         	goto	u310
   535  003F60                     u311:
   536  003F60  FFFF               	dw	65535	; assembler added errata NOP
   537  003F62  EFB8  F01F         	goto	l1425
   538  003F66                     u310:
   539  003F66  FFFF               	dw	65535	; assembler added errata NOP
   540  003F68                     
   541                           ;main.c: 86: show_error_message();
   542  003F68  ECE0  F01D         	call	_show_error_message	;wreg free
   543                           
   544                           ;main.c: 87: } else {
   545  003F6C  EFF0  F01F         	goto	l1435
   546  003F70                     l1425:
   547  003F70  FFFF               	dw	65535	; assembler added errata NOP
   548                           
   549                           ;main.c: 88: resultado = operar(oper, oper_1, oper_2);
   550  003F72  C068  F05C         	movff	main@oper_1,operar@oper_1
   551  003F76  C069  F05D         	movff	main@oper_2,operar@oper_2
   552  003F7A  5067               	movf	main@oper^0,w,c
   553  003F7C  ECB6  F01E         	call	_operar
   554  003F80  6E66               	movwf	main@resultado^0,c
   555  003F82                     
   556                           ;main.c: 89: visualizar('n', resultado, 0, 1);
   557  003F82  C066  F056         	movff	main@resultado,visualizar@position
   558  003F86  0E00               	movlw	0
   559  003F88  6E57               	movwf	visualizar@from^0,c
   560  003F8A  0E01               	movlw	1
   561  003F8C  6E58               	movwf	visualizar@enable^0,c
   562  003F8E  0E6E               	movlw	110
   563  003F90  EC4A  F01E         	call	_visualizar
   564  003F94  EFF0  F01F         	goto	l1435
   565  003F98                     l1429:
   566  003F98  FFFF               	dw	65535	; assembler added errata NOP
   567                           
   568                           ;main.c: 93: resultado = operar(oper, oper_1, oper_2);
   569  003F9A  C068  F05C         	movff	main@oper_1,operar@oper_1
   570  003F9E  C069  F05D         	movff	main@oper_2,operar@oper_2
   571  003FA2  5067               	movf	main@oper^0,w,c
   572  003FA4  ECB6  F01E         	call	_operar
   573  003FA8  6E66               	movwf	main@resultado^0,c
   574  003FAA                     
   575                           ;main.c: 94: visualizar('n', resultado, 0, 1);
   576  003FAA  C066  F056         	movff	main@resultado,visualizar@position
   577  003FAE  0E00               	movlw	0
   578  003FB0  6E57               	movwf	visualizar@from^0,c
   579  003FB2  0E01               	movlw	1
   580  003FB4  6E58               	movwf	visualizar@enable^0,c
   581  003FB6  0E6E               	movlw	110
   582  003FB8  EC4A  F01E         	call	_visualizar
   583                           
   584                           ;main.c: 95: }
   585  003FBC  EFF0  F01F         	goto	l1435
   586  003FC0                     l1433:
   587  003FC0  FFFF               	dw	65535	; assembler added errata NOP
   588  003FC2  5067               	movf	main@oper^0,w,c
   589                           
   590                           ; Switch size 1, requested type "simple"
   591                           ; Number of cases is 3, Range of values is 1 to 4
   592                           ; switch strategies available:
   593                           ; Name         Instructions Cycles
   594                           ; simple_byte           10     6 (average)
   595                           ;	Chosen strategy is simple_byte
   596  003FC4  0A01               	xorlw	1	; case 1
   597  003FC6  B4D8               	btfsc	status,2,c
   598  003FC8  EF5D  F01F         	goto	l1403
   599  003FCC  0A02               	xorlw	2	; case 3
   600  003FCE  B4D8               	btfsc	status,2,c
   601  003FD0  EFA9  F01F         	goto	l1421
   602  003FD4  0A07               	xorlw	7	; case 4
   603  003FD6  B4D8               	btfsc	status,2,c
   604  003FD8  EFA9  F01F         	goto	l1421
   605  003FDC  EFCC  F01F         	goto	l1429
   606  003FE0                     l1435:
   607  003FE0  FFFF               	dw	65535	; assembler added errata NOP
   608  003FE2  2A64               	incf	main@i^0,f,c
   609  003FE4  0EC7               	movlw	199
   610  003FE6  6464               	cpfsgt	main@i^0,c
   611  003FE8  EFF8  F01F         	goto	u321
   612  003FEC  EFFB  F01F         	goto	u320
   613  003FF0                     u321:
   614  003FF0  FFFF               	dw	65535	; assembler added errata NOP
   615  003FF2  EFE0  F01F         	goto	l1433
   616  003FF6                     u320:
   617  003FF6  FFFF               	dw	65535	; assembler added errata NOP
   618  003FF8  EF4F  F01F         	goto	l1391
   619  003FFC  EF01  F000         	goto	start
   620  004000                     __end_of_main:
   621                           	opt callstack 0
   622                           
   623 ;; *************** function _show_error_message *****************
   624 ;; Defined at:
   625 ;;		line 154 in file "main.c"
   626 ;; Parameters:    Size  Location     Type
   627 ;;		None
   628 ;; Auto vars:     Size  Location     Type
   629 ;;		None
   630 ;; Return value:  Size  Location     Type
   631 ;;                  1    wreg      void 
   632 ;; Registers used:
   633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   634 ;; Tracked objects:
   635 ;;		On entry : 0/0
   636 ;;		On exit  : 0/0
   637 ;;		Unchanged: 0/0
   638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   639 ;;      Params:         0       0       0       0       0       0       0
   640 ;;      Locals:         0       0       0       0       0       0       0
   641 ;;      Temps:          1       0       0       0       0       0       0
   642 ;;      Totals:         1       0       0       0       0       0       0
   643 ;;Total ram usage:        1 bytes
   644 ;; Hardware stack levels used:    1
   645 ;; Hardware stack levels required when called:    2
   646 ;; This function calls:
   647 ;;		_visualizar
   648 ;; This function is called by:
   649 ;;		_main
   650 ;; This function uses a non-reentrant model
   651 ;;
   652                           
   653                           	psect	text1
   654  003BC0                     __ptext1:
   655                           	opt callstack 0
   656  003BC0                     _show_error_message:
   657                           	opt callstack 0
   658  003BC0  FFFF               	dw	65535	; assembler added errata NOP
   659  003BC2                     
   660                           ;main.c: 155: visualizar('n', 14, 0, 1);
   661  003BC2  0E0E               	movlw	14
   662  003BC4  6E56               	movwf	visualizar@position^0,c
   663  003BC6  0E00               	movlw	0
   664  003BC8  6E57               	movwf	visualizar@from^0,c
   665  003BCA  0E01               	movlw	1
   666  003BCC  6E58               	movwf	visualizar@enable^0,c
   667  003BCE  0E6E               	movlw	110
   668  003BD0  EC4A  F01E         	call	_visualizar
   669                           
   670                           ;main.c: 156: visualizar('s', 11, 4, 1);
   671  003BD4  0E0B               	movlw	11
   672  003BD6  6E56               	movwf	visualizar@position^0,c
   673  003BD8  0E04               	movlw	4
   674  003BDA  6E57               	movwf	visualizar@from^0,c
   675  003BDC  0E01               	movlw	1
   676  003BDE  6E58               	movwf	visualizar@enable^0,c
   677  003BE0  0E73               	movlw	115
   678  003BE2  EC4A  F01E         	call	_visualizar
   679                           
   680                           ;main.c: 157: visualizar('n', 14, 0, 2);
   681  003BE6  0E0E               	movlw	14
   682  003BE8  6E56               	movwf	visualizar@position^0,c
   683  003BEA  0E00               	movlw	0
   684  003BEC  6E57               	movwf	visualizar@from^0,c
   685  003BEE  0E02               	movlw	2
   686  003BF0  6E58               	movwf	visualizar@enable^0,c
   687  003BF2  0E6E               	movlw	110
   688  003BF4  EC4A  F01E         	call	_visualizar
   689                           
   690                           ;main.c: 158: visualizar('s', 11, 4, 2);
   691  003BF8  0E0B               	movlw	11
   692  003BFA  6E56               	movwf	visualizar@position^0,c
   693  003BFC  0E04               	movlw	4
   694  003BFE  6E57               	movwf	visualizar@from^0,c
   695  003C00  0E02               	movlw	2
   696  003C02  6E58               	movwf	visualizar@enable^0,c
   697  003C04  0E73               	movlw	115
   698  003C06  EC4A  F01E         	call	_visualizar
   699  003C0A                     
   700                           ;main.c: 159: _delay((unsigned long)((5)*(4000000/4000.0)));
   701  003C0A  0E05               	movlw	5
   702  003C0C  6E60               	movwf	??_show_error_message^0,c
   703  003C0E  0EDF               	movlw	223
   704  003C10                     u337:
   705  003C10  FFFF               	dw	65535	; errata NOP
   706  003C12  2EE8               	decfsz	wreg,f,c
   707  003C14  D7FD               	bra	u337
   708  003C16  2E60               	decfsz	??_show_error_message^0,f,c
   709  003C18  D7FB               	bra	u337
   710  003C1A  0012               	return		;funcret
   711  003C1C  FFFF               	dw	65535	; errata NOP
   712  003C1E                     __end_of_show_error_message:
   713                           	opt callstack 0
   714                           
   715 ;; *************** function _visualizar *****************
   716 ;; Defined at:
   717 ;;		line 131 in file "main.c"
   718 ;; Parameters:    Size  Location     Type
   719 ;;  SoN             1    wreg     unsigned char 
   720 ;;  position        1    1[COMRAM] unsigned char 
   721 ;;  from            1    2[COMRAM] unsigned char 
   722 ;;  enable          1    3[COMRAM] unsigned char 
   723 ;; Auto vars:     Size  Location     Type
   724 ;;  SoN             1    7[COMRAM] unsigned char 
   725 ;;  x               1   10[COMRAM] unsigned char 
   726 ;; Return value:  Size  Location     Type
   727 ;;                  1    wreg      void 
   728 ;; Registers used:
   729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   730 ;; Tracked objects:
   731 ;;		On entry : 0/0
   732 ;;		On exit  : 0/0
   733 ;;		Unchanged: 0/0
   734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   735 ;;      Params:         3       0       0       0       0       0       0
   736 ;;      Locals:         4       0       0       0       0       0       0
   737 ;;      Temps:          3       0       0       0       0       0       0
   738 ;;      Totals:        10       0       0       0       0       0       0
   739 ;;Total ram usage:       10 bytes
   740 ;; Hardware stack levels used:    1
   741 ;; Hardware stack levels required when called:    1
   742 ;; This function calls:
   743 ;;		_tolower
   744 ;; This function is called by:
   745 ;;		_main
   746 ;;		_show_error_message
   747 ;;		_see_full_operation
   748 ;; This function uses a non-reentrant model
   749 ;;
   750                           
   751                           	psect	text2
   752  003C94                     __ptext2:
   753                           	opt callstack 0
   754  003C94                     _visualizar:
   755                           	opt callstack 0
   756  003C94  FFFF               	dw	65535	; assembler added errata NOP
   757                           
   758                           ;incstack = 0
   759                           ;visualizar@SoN stored from wreg
   760  003C96  6E5C               	movwf	visualizar@SoN^0,c
   761  003C98                     
   762                           ;main.c: 132: for (char x = 0; x < 3; x++) {
   763  003C98  0E00               	movlw	0
   764  003C9A  6E5F               	movwf	visualizar@x^0,c
   765  003C9C                     l1245:
   766  003C9C  FFFF               	dw	65535	; assembler added errata NOP
   767                           
   768                           ;main.c: 133: if (enable == 1) {
   769  003C9E  0458               	decf	visualizar@enable^0,w,c
   770  003CA0  A4D8               	btfss	status,2,c
   771  003CA2  EF55  F01E         	goto	u231
   772  003CA6  EF58  F01E         	goto	u230
   773  003CAA                     u231:
   774  003CAA  FFFF               	dw	65535	; assembler added errata NOP
   775  003CAC  EF5D  F01E         	goto	l103
   776  003CB0                     u230:
   777  003CB0  FFFF               	dw	65535	; assembler added errata NOP
   778  003CB2                     
   779                           ;main.c: 134: LA3 = 1;
   780  003CB2  8689               	bsf	3977,3,c	;volatile
   781                           
   782                           ;main.c: 135: LA5 = 0;
   783  003CB4  9A89               	bcf	3977,5,c	;volatile
   784                           
   785                           ;main.c: 136: } else {
   786  003CB6  EF60  F01E         	goto	l1249
   787  003CBA                     l103:
   788  003CBA  FFFF               	dw	65535	; assembler added errata NOP
   789                           
   790                           ;main.c: 137: LA3 = 0;
   791  003CBC  9689               	bcf	3977,3,c	;volatile
   792                           
   793                           ;main.c: 138: LA5 = 1;
   794  003CBE  8A89               	bsf	3977,5,c	;volatile
   795  003CC0                     l1249:
   796  003CC0  FFFF               	dw	65535	; assembler added errata NOP
   797                           
   798                           ;main.c: 139: };main.c: 140: LATD = tolower(SoN) == 's' ? SIMBOLO[position][x] : NUMERO[
      +                          position][x];
   799  003CC2  505C               	movf	visualizar@SoN^0,w,c
   800  003CC4  EC59  F01D         	call	_tolower
   801  003CC8  0A73               	xorlw	115
   802  003CCA  B4D8               	btfsc	status,2,c
   803  003CCC  EF6A  F01E         	goto	u241
   804  003CD0  EF6D  F01E         	goto	u240
   805  003CD4                     u241:
   806  003CD4  FFFF               	dw	65535	; assembler added errata NOP
   807  003CD6  EF85  F01E         	goto	l1253
   808  003CDA                     u240:
   809  003CDA  FFFF               	dw	65535	; assembler added errata NOP
   810  003CDC  5056               	movf	visualizar@position^0,w,c
   811  003CDE  0D03               	mullw	3
   812  003CE0  0E01               	movlw	low _NUMERO
   813  003CE2  6E59               	movwf	??_visualizar^0,c
   814  003CE4  0E00               	movlw	high _NUMERO
   815  003CE6  6E5A               	movwf	(??_visualizar+1)^0,c
   816  003CE8  50F3               	movf	243,w,c
   817  003CEA  2659               	addwf	??_visualizar^0,f,c
   818  003CEC  50F4               	movf	244,w,c
   819  003CEE  225A               	addwfc	(??_visualizar+1)^0,f,c
   820  003CF0  505F               	movf	visualizar@x^0,w,c
   821  003CF2  2459               	addwf	??_visualizar^0,w,c
   822  003CF4  6ED9               	movwf	fsr2l,c
   823  003CF6  0E00               	movlw	0
   824  003CF8  205A               	addwfc	(??_visualizar+1)^0,w,c
   825  003CFA  6EDA               	movwf	fsr2h,c
   826  003CFC  50DF               	movf	indf2,w,c
   827  003CFE  6E5B               	movwf	(??_visualizar+2)^0,c
   828  003D00  505B               	movf	(??_visualizar+2)^0,w,c
   829  003D02  6E5D               	movwf	_visualizar$158^0,c
   830  003D04  6A5E               	clrf	(_visualizar$158+1)^0,c
   831  003D06  EF9B  F01E         	goto	l1255
   832  003D0A                     l1253:
   833  003D0A  FFFF               	dw	65535	; assembler added errata NOP
   834  003D0C  5056               	movf	visualizar@position^0,w,c
   835  003D0E  0D03               	mullw	3
   836  003D10  0E31               	movlw	low _SIMBOLO
   837  003D12  6E59               	movwf	??_visualizar^0,c
   838  003D14  0E00               	movlw	high _SIMBOLO
   839  003D16  6E5A               	movwf	(??_visualizar+1)^0,c
   840  003D18  50F3               	movf	243,w,c
   841  003D1A  2659               	addwf	??_visualizar^0,f,c
   842  003D1C  50F4               	movf	244,w,c
   843  003D1E  225A               	addwfc	(??_visualizar+1)^0,f,c
   844  003D20  505F               	movf	visualizar@x^0,w,c
   845  003D22  2459               	addwf	??_visualizar^0,w,c
   846  003D24  6ED9               	movwf	fsr2l,c
   847  003D26  0E00               	movlw	0
   848  003D28  205A               	addwfc	(??_visualizar+1)^0,w,c
   849  003D2A  6EDA               	movwf	fsr2h,c
   850  003D2C  50DF               	movf	indf2,w,c
   851  003D2E  6E5B               	movwf	(??_visualizar+2)^0,c
   852  003D30  505B               	movf	(??_visualizar+2)^0,w,c
   853  003D32  6E5D               	movwf	_visualizar$158^0,c
   854  003D34  6A5E               	clrf	(_visualizar$158+1)^0,c
   855  003D36                     l1255:
   856  003D36  FFFF               	dw	65535	; assembler added errata NOP
   857  003D38  C05D  FF8C         	movff	_visualizar$158,3980	;volatile
   858  003D3C                     
   859                           ;main.c: 141: LATE = x + from;
   860  003D3C  505F               	movf	visualizar@x^0,w,c
   861  003D3E  2457               	addwf	visualizar@from^0,w,c
   862  003D40  6E8D               	movwf	141,c	;volatile
   863  003D42                     
   864                           ;main.c: 142: _delay((unsigned long)((5)*(4000000/4000.0)));
   865  003D42  0E05               	movlw	5
   866  003D44  6E59               	movwf	??_visualizar^0,c
   867  003D46  0EDF               	movlw	223
   868  003D48                     u347:
   869  003D48  FFFF               	dw	65535	; errata NOP
   870  003D4A  2EE8               	decfsz	wreg,f,c
   871  003D4C  D7FD               	bra	u347
   872  003D4E  2E59               	decfsz	??_visualizar^0,f,c
   873  003D50  D7FB               	bra	u347
   874  003D52  2A5F               	incf	visualizar@x^0,f,c
   875  003D54  0E02               	movlw	2
   876  003D56  645F               	cpfsgt	visualizar@x^0,c
   877  003D58  EFB0  F01E         	goto	u251
   878  003D5C  EFB3  F01E         	goto	u250
   879  003D60                     u251:
   880  003D60  FFFF               	dw	65535	; assembler added errata NOP
   881  003D62  EF4E  F01E         	goto	l1245
   882  003D66                     u250:
   883  003D66  FFFF               	dw	65535	; assembler added errata NOP
   884  003D68  0012               	return		;funcret
   885  003D6A  FFFF               	dw	65535	; errata NOP
   886  003D6C                     __end_of_visualizar:
   887                           	opt callstack 0
   888                           
   889 ;; *************** function _tolower *****************
   890 ;; Defined at:
   891 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\tolower.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;  c               1    wreg     unsigned char 
   894 ;; Auto vars:     Size  Location     Type
   895 ;;  c               1    0[COMRAM] unsigned char 
   896 ;; Return value:  Size  Location     Type
   897 ;;                  1    wreg      unsigned char 
   898 ;; Registers used:
   899 ;;		wreg, status,2, status,0
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   905 ;;      Params:         0       0       0       0       0       0       0
   906 ;;      Locals:         1       0       0       0       0       0       0
   907 ;;      Temps:          0       0       0       0       0       0       0
   908 ;;      Totals:         1       0       0       0       0       0       0
   909 ;;Total ram usage:        1 bytes
   910 ;; Hardware stack levels used:    1
   911 ;; This function calls:
   912 ;;		Nothing
   913 ;; This function is called by:
   914 ;;		_visualizar
   915 ;; This function uses a non-reentrant model
   916 ;;
   917                           
   918                           	psect	text3
   919  003AB2                     __ptext3:
   920                           	opt callstack 0
   921  003AB2                     _tolower:
   922                           	opt callstack 0
   923  003AB2  FFFF               	dw	65535	; assembler added errata NOP
   924                           
   925                           ;incstack = 0
   926                           ;tolower@c stored from wreg
   927  003AB4  6E55               	movwf	tolower@c^0,c
   928  003AB6  0E5B               	movlw	91
   929  003AB8  6055               	cpfslt	tolower@c^0,c
   930  003ABA  EF61  F01D         	goto	u181
   931  003ABE  EF64  F01D         	goto	u180
   932  003AC2                     u181:
   933  003AC2  FFFF               	dw	65535	; assembler added errata NOP
   934  003AC4  EF70  F01D         	goto	l1201
   935  003AC8                     u180:
   936  003AC8  FFFF               	dw	65535	; assembler added errata NOP
   937  003ACA  0E40               	movlw	64
   938  003ACC  6455               	cpfsgt	tolower@c^0,c
   939  003ACE  EF6B  F01D         	goto	u191
   940  003AD2  EF6E  F01D         	goto	u190
   941  003AD6                     u191:
   942  003AD6  FFFF               	dw	65535	; assembler added errata NOP
   943  003AD8  EF70  F01D         	goto	l1201
   944  003ADC                     u190:
   945  003ADC  FFFF               	dw	65535	; assembler added errata NOP
   946  003ADE  8A55               	bsf	tolower@c^0,5,c
   947  003AE0                     l1201:
   948  003AE0  FFFF               	dw	65535	; assembler added errata NOP
   949  003AE2  5055               	movf	tolower@c^0,w,c
   950  003AE4  0012               	return		;funcret
   951  003AE6  FFFF               	dw	65535	; errata NOP
   952  003AE8                     __end_of_tolower:
   953                           	opt callstack 0
   954                           
   955 ;; *************** function _operar *****************
   956 ;; Defined at:
   957 ;;		line 162 in file "main.c"
   958 ;; Parameters:    Size  Location     Type
   959 ;;  oper            1    wreg     unsigned char 
   960 ;;  oper_1          1    7[COMRAM] unsigned char 
   961 ;;  oper_2          1    8[COMRAM] unsigned char 
   962 ;; Auto vars:     Size  Location     Type
   963 ;;  oper            1    9[COMRAM] unsigned char 
   964 ;; Return value:  Size  Location     Type
   965 ;;                  1    wreg      unsigned char 
   966 ;; Registers used:
   967 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   973 ;;      Params:         2       0       0       0       0       0       0
   974 ;;      Locals:         1       0       0       0       0       0       0
   975 ;;      Temps:          0       0       0       0       0       0       0
   976 ;;      Totals:         3       0       0       0       0       0       0
   977 ;;Total ram usage:        3 bytes
   978 ;; Hardware stack levels used:    1
   979 ;; Hardware stack levels required when called:    3
   980 ;; This function calls:
   981 ;;		_and
   982 ;;		_division
   983 ;;		_module
   984 ;;		_multi
   985 ;;		_nand
   986 ;;		_no_es_primo
   987 ;;		_or
   988 ;;		_resta
   989 ;;		_suma
   990 ;;		_xor
   991 ;; This function is called by:
   992 ;;		_main
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           	psect	text4
   997  003D6C                     __ptext4:
   998                           	opt callstack 0
   999  003D6C                     _operar:
  1000                           	opt callstack 0
  1001  003D6C  FFFF               	dw	65535	; assembler added errata NOP
  1002                           
  1003                           ;incstack = 0
  1004                           ;operar@oper stored from wreg
  1005  003D6E  6E5E               	movwf	operar@oper^0,c
  1006  003D70                     
  1007                           ;main.c: 163: switch (oper) {
  1008  003D70  EF19  F01F         	goto	l1383
  1009  003D74                     l1315:
  1010  003D74  FFFF               	dw	65535	; assembler added errata NOP
  1011                           
  1012                           ;main.c: 165: return suma(oper_1, oper_2);
  1013  003D76  C05D  F055         	movff	operar@oper_2,suma@oper_2
  1014  003D7A  505C               	movf	operar@oper_1^0,w,c
  1015  003D7C  ECFA  F01C         	call	_suma
  1016  003D80  EF49  F01F         	goto	l120
  1017  003D84                     l1321:
  1018  003D84  FFFF               	dw	65535	; assembler added errata NOP
  1019                           
  1020                           ;main.c: 168: return resta(oper_1, oper_2);
  1021  003D86  C05D  F055         	movff	operar@oper_2,resta@oper_2
  1022  003D8A  505C               	movf	operar@oper_1^0,w,c
  1023  003D8C  ECF4  F01C         	call	_resta
  1024  003D90  EF49  F01F         	goto	l120
  1025  003D94                     l1327:
  1026  003D94  FFFF               	dw	65535	; assembler added errata NOP
  1027                           
  1028                           ;main.c: 171: return multi(oper_1, oper_2);
  1029  003D96  C05D  F055         	movff	operar@oper_2,multi@oper_2
  1030  003D9A  505C               	movf	operar@oper_1^0,w,c
  1031  003D9C  EC06  F01D         	call	_multi
  1032  003DA0  EF49  F01F         	goto	l120
  1033  003DA4                     l1333:
  1034  003DA4  FFFF               	dw	65535	; assembler added errata NOP
  1035                           
  1036                           ;main.c: 174: return division(oper_1, oper_2);
  1037  003DA6  C05D  F059         	movff	operar@oper_2,division@oper_2
  1038  003DAA  505C               	movf	operar@oper_1^0,w,c
  1039  003DAC  EC20  F01D         	call	_division
  1040  003DB0  EF49  F01F         	goto	l120
  1041  003DB4                     l1339:
  1042  003DB4  FFFF               	dw	65535	; assembler added errata NOP
  1043                           
  1044                           ;main.c: 177: return module(oper_1, oper_2);
  1045  003DB6  C05D  F059         	movff	operar@oper_2,module@oper_2
  1046  003DBA  505C               	movf	operar@oper_1^0,w,c
  1047  003DBC  EC0D  F01D         	call	_module
  1048  003DC0  EF49  F01F         	goto	l120
  1049  003DC4                     l1345:
  1050  003DC4  FFFF               	dw	65535	; assembler added errata NOP
  1051                           
  1052                           ;main.c: 180: return and(oper_1, oper_2);
  1053  003DC6  C05D  F055         	movff	operar@oper_2,and@oper_2
  1054  003DCA  505C               	movf	operar@oper_1^0,w,c
  1055  003DCC  ECE8  F01C         	call	_and
  1056  003DD0  EF49  F01F         	goto	l120
  1057  003DD4                     l1351:
  1058  003DD4  FFFF               	dw	65535	; assembler added errata NOP
  1059                           
  1060                           ;main.c: 183: return or(oper_1, oper_2);
  1061  003DD6  C05D  F055         	movff	operar@oper_2,or@oper_2
  1062  003DDA  505C               	movf	operar@oper_1^0,w,c
  1063  003DDC  ECEE  F01C         	call	_or
  1064  003DE0  EF49  F01F         	goto	l120
  1065  003DE4                     l1357:
  1066  003DE4  FFFF               	dw	65535	; assembler added errata NOP
  1067                           
  1068                           ;main.c: 186: return nand(oper_1, oper_2);
  1069  003DE6  C05D  F057         	movff	operar@oper_2,nand@oper_2
  1070  003DEA  505C               	movf	operar@oper_1^0,w,c
  1071  003DEC  EC16  F01D         	call	_nand
  1072  003DF0  EF49  F01F         	goto	l120
  1073  003DF4                     l1363:
  1074  003DF4  FFFF               	dw	65535	; assembler added errata NOP
  1075                           
  1076                           ;main.c: 189: return xor(oper_1, oper_2);
  1077  003DF6  C05D  F055         	movff	operar@oper_2,xor@oper_2
  1078  003DFA  505C               	movf	operar@oper_1^0,w,c
  1079  003DFC  EC00  F01D         	call	_xor
  1080  003E00  EF49  F01F         	goto	l120
  1081  003E04                     l1369:
  1082  003E04  FFFF               	dw	65535	; assembler added errata NOP
  1083                           
  1084                           ;main.c: 192: return no_es_primo(oper_1);
  1085  003E06  505C               	movf	operar@oper_1^0,w,c
  1086  003E08  EC40  F01D         	call	_no_es_primo
  1087  003E0C  EF49  F01F         	goto	l120
  1088  003E10                     l1375:
  1089  003E10  FFFF               	dw	65535	; assembler added errata NOP
  1090                           
  1091                           ;main.c: 195: return oper_1 == 2;
  1092  003E12  0E02               	movlw	2
  1093  003E14  185C               	xorwf	operar@oper_1^0,w,c
  1094  003E16  B4D8               	btfsc	status,2,c
  1095  003E18  EF10  F01F         	goto	u271
  1096  003E1C  EF14  F01F         	goto	u270
  1097  003E20                     u271:
  1098  003E20  FFFF               	dw	65535	; assembler added errata NOP
  1099  003E22  0E01               	movlw	1
  1100  003E24  EF16  F01F         	goto	u280
  1101  003E28                     u270:
  1102  003E28  FFFF               	dw	65535	; assembler added errata NOP
  1103  003E2A  0E00               	movlw	0
  1104  003E2C                     u280:
  1105  003E2C  FFFF               	dw	65535	; assembler added errata NOP
  1106  003E2E  EF49  F01F         	goto	l120
  1107  003E32                     l1383:
  1108  003E32  FFFF               	dw	65535	; assembler added errata NOP
  1109  003E34  505E               	movf	operar@oper^0,w,c
  1110                           
  1111                           ; Switch size 1, requested type "simple"
  1112                           ; Number of cases is 11, Range of values is 0 to 10
  1113                           ; switch strategies available:
  1114                           ; Name         Instructions Cycles
  1115                           ; simple_byte           34    18 (average)
  1116                           ;	Chosen strategy is simple_byte
  1117  003E36  0A00               	xorlw	0	; case 0
  1118  003E38  B4D8               	btfsc	status,2,c
  1119  003E3A  EFBA  F01E         	goto	l1315
  1120  003E3E  0A01               	xorlw	1	; case 1
  1121  003E40  B4D8               	btfsc	status,2,c
  1122  003E42  EFC2  F01E         	goto	l1321
  1123  003E46  0A03               	xorlw	3	; case 2
  1124  003E48  B4D8               	btfsc	status,2,c
  1125  003E4A  EFCA  F01E         	goto	l1327
  1126  003E4E  0A01               	xorlw	1	; case 3
  1127  003E50  B4D8               	btfsc	status,2,c
  1128  003E52  EFD2  F01E         	goto	l1333
  1129  003E56  0A07               	xorlw	7	; case 4
  1130  003E58  B4D8               	btfsc	status,2,c
  1131  003E5A  EFDA  F01E         	goto	l1339
  1132  003E5E  0A01               	xorlw	1	; case 5
  1133  003E60  B4D8               	btfsc	status,2,c
  1134  003E62  EFE2  F01E         	goto	l1345
  1135  003E66  0A03               	xorlw	3	; case 6
  1136  003E68  B4D8               	btfsc	status,2,c
  1137  003E6A  EFEA  F01E         	goto	l1351
  1138  003E6E  0A01               	xorlw	1	; case 7
  1139  003E70  B4D8               	btfsc	status,2,c
  1140  003E72  EFF2  F01E         	goto	l1357
  1141  003E76  0A0F               	xorlw	15	; case 8
  1142  003E78  B4D8               	btfsc	status,2,c
  1143  003E7A  EFFA  F01E         	goto	l1363
  1144  003E7E  0A01               	xorlw	1	; case 9
  1145  003E80  B4D8               	btfsc	status,2,c
  1146  003E82  EF02  F01F         	goto	l1369
  1147  003E86  0A03               	xorlw	3	; case 10
  1148  003E88  B4D8               	btfsc	status,2,c
  1149  003E8A  EF08  F01F         	goto	l1375
  1150  003E8E  EF49  F01F         	goto	l120
  1151  003E92                     l120:
  1152  003E92  FFFF               	dw	65535	; assembler added errata NOP
  1153  003E94  0012               	return		;funcret
  1154  003E96  FFFF               	dw	65535	; errata NOP
  1155  003E98                     __end_of_operar:
  1156                           	opt callstack 0
  1157                           
  1158 ;; *************** function _xor *****************
  1159 ;; Defined at:
  1160 ;;		line 235 in file "main.c"
  1161 ;; Parameters:    Size  Location     Type
  1162 ;;  oper_1          1    wreg     unsigned char 
  1163 ;;  oper_2          1    0[COMRAM] unsigned char 
  1164 ;; Auto vars:     Size  Location     Type
  1165 ;;  oper_1          1    1[COMRAM] unsigned char 
  1166 ;; Return value:  Size  Location     Type
  1167 ;;                  1    wreg      unsigned char 
  1168 ;; Registers used:
  1169 ;;		wreg, status,2, status,0
  1170 ;; Tracked objects:
  1171 ;;		On entry : 0/0
  1172 ;;		On exit  : 0/0
  1173 ;;		Unchanged: 0/0
  1174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1175 ;;      Params:         1       0       0       0       0       0       0
  1176 ;;      Locals:         1       0       0       0       0       0       0
  1177 ;;      Temps:          0       0       0       0       0       0       0
  1178 ;;      Totals:         2       0       0       0       0       0       0
  1179 ;;Total ram usage:        2 bytes
  1180 ;; Hardware stack levels used:    1
  1181 ;; This function calls:
  1182 ;;		Nothing
  1183 ;; This function is called by:
  1184 ;;		_operar
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187                           
  1188                           	psect	text5
  1189  003A00                     __ptext5:
  1190                           	opt callstack 0
  1191  003A00                     _xor:
  1192                           	opt callstack 0
  1193  003A00  FFFF               	dw	65535	; assembler added errata NOP
  1194                           
  1195                           ;incstack = 0
  1196                           ;xor@oper_1 stored from wreg
  1197  003A02  6E56               	movwf	xor@oper_1^0,c
  1198  003A04                     
  1199                           ;main.c: 236: return oper_1 ^ oper_2;
  1200  003A04  5056               	movf	xor@oper_1^0,w,c
  1201  003A06  1855               	xorwf	xor@oper_2^0,w,c
  1202  003A08  0012               	return		;funcret
  1203  003A0A  FFFF               	dw	65535	; errata NOP
  1204  003A0C                     __end_of_xor:
  1205                           	opt callstack 0
  1206                           
  1207 ;; *************** function _suma *****************
  1208 ;; Defined at:
  1209 ;;		line 202 in file "main.c"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;  oper_1          1    wreg     unsigned char 
  1212 ;;  oper_2          1    0[COMRAM] unsigned char 
  1213 ;; Auto vars:     Size  Location     Type
  1214 ;;  oper_1          1    1[COMRAM] unsigned char 
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  1    wreg      unsigned char 
  1217 ;; Registers used:
  1218 ;;		wreg, status,2, status,0
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1224 ;;      Params:         1       0       0       0       0       0       0
  1225 ;;      Locals:         1       0       0       0       0       0       0
  1226 ;;      Temps:          0       0       0       0       0       0       0
  1227 ;;      Totals:         2       0       0       0       0       0       0
  1228 ;;Total ram usage:        2 bytes
  1229 ;; Hardware stack levels used:    1
  1230 ;; This function calls:
  1231 ;;		Nothing
  1232 ;; This function is called by:
  1233 ;;		_operar
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237                           	psect	text6
  1238  0039F4                     __ptext6:
  1239                           	opt callstack 0
  1240  0039F4                     _suma:
  1241                           	opt callstack 0
  1242  0039F4  FFFF               	dw	65535	; assembler added errata NOP
  1243                           
  1244                           ;incstack = 0
  1245                           ;suma@oper_1 stored from wreg
  1246  0039F6  6E56               	movwf	suma@oper_1^0,c
  1247  0039F8                     
  1248                           ;main.c: 203: return oper_1 + oper_2;
  1249  0039F8  5056               	movf	suma@oper_1^0,w,c
  1250  0039FA  2455               	addwf	suma@oper_2^0,w,c
  1251  0039FC  0012               	return		;funcret
  1252  0039FE  FFFF               	dw	65535	; errata NOP
  1253  003A00                     __end_of_suma:
  1254                           	opt callstack 0
  1255                           
  1256 ;; *************** function _resta *****************
  1257 ;; Defined at:
  1258 ;;		line 206 in file "main.c"
  1259 ;; Parameters:    Size  Location     Type
  1260 ;;  oper_1          1    wreg     unsigned char 
  1261 ;;  oper_2          1    0[COMRAM] unsigned char 
  1262 ;; Auto vars:     Size  Location     Type
  1263 ;;  oper_1          1    1[COMRAM] unsigned char 
  1264 ;; Return value:  Size  Location     Type
  1265 ;;                  1    wreg      unsigned char 
  1266 ;; Registers used:
  1267 ;;		wreg, status,2, status,0
  1268 ;; Tracked objects:
  1269 ;;		On entry : 0/0
  1270 ;;		On exit  : 0/0
  1271 ;;		Unchanged: 0/0
  1272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1273 ;;      Params:         1       0       0       0       0       0       0
  1274 ;;      Locals:         1       0       0       0       0       0       0
  1275 ;;      Temps:          0       0       0       0       0       0       0
  1276 ;;      Totals:         2       0       0       0       0       0       0
  1277 ;;Total ram usage:        2 bytes
  1278 ;; Hardware stack levels used:    1
  1279 ;; This function calls:
  1280 ;;		Nothing
  1281 ;; This function is called by:
  1282 ;;		_operar
  1283 ;; This function uses a non-reentrant model
  1284 ;;
  1285                           
  1286                           	psect	text7
  1287  0039E8                     __ptext7:
  1288                           	opt callstack 0
  1289  0039E8                     _resta:
  1290                           	opt callstack 0
  1291  0039E8  FFFF               	dw	65535	; assembler added errata NOP
  1292                           
  1293                           ;incstack = 0
  1294                           ;resta@oper_1 stored from wreg
  1295  0039EA  6E56               	movwf	resta@oper_1^0,c
  1296  0039EC                     
  1297                           ;main.c: 207: return oper_1 - oper_2;
  1298  0039EC  5055               	movf	resta@oper_2^0,w,c
  1299  0039EE  5C56               	subwf	resta@oper_1^0,w,c
  1300  0039F0  0012               	return		;funcret
  1301  0039F2  FFFF               	dw	65535	; errata NOP
  1302  0039F4                     __end_of_resta:
  1303                           	opt callstack 0
  1304                           
  1305 ;; *************** function _or *****************
  1306 ;; Defined at:
  1307 ;;		line 227 in file "main.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;  oper_1          1    wreg     unsigned char 
  1310 ;;  oper_2          1    0[COMRAM] unsigned char 
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;  oper_1          1    1[COMRAM] unsigned char 
  1313 ;; Return value:  Size  Location     Type
  1314 ;;                  1    wreg      unsigned char 
  1315 ;; Registers used:
  1316 ;;		wreg, status,2, status,0
  1317 ;; Tracked objects:
  1318 ;;		On entry : 0/0
  1319 ;;		On exit  : 0/0
  1320 ;;		Unchanged: 0/0
  1321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1322 ;;      Params:         1       0       0       0       0       0       0
  1323 ;;      Locals:         1       0       0       0       0       0       0
  1324 ;;      Temps:          0       0       0       0       0       0       0
  1325 ;;      Totals:         2       0       0       0       0       0       0
  1326 ;;Total ram usage:        2 bytes
  1327 ;; Hardware stack levels used:    1
  1328 ;; This function calls:
  1329 ;;		Nothing
  1330 ;; This function is called by:
  1331 ;;		_operar
  1332 ;; This function uses a non-reentrant model
  1333 ;;
  1334                           
  1335                           	psect	text8
  1336  0039DC                     __ptext8:
  1337                           	opt callstack 0
  1338  0039DC                     _or:
  1339                           	opt callstack 0
  1340  0039DC  FFFF               	dw	65535	; assembler added errata NOP
  1341                           
  1342                           ;incstack = 0
  1343                           ;or@oper_1 stored from wreg
  1344  0039DE  6E56               	movwf	or@oper_1^0,c
  1345  0039E0                     
  1346                           ;main.c: 228: return oper_1 | oper_2;
  1347  0039E0  5056               	movf	or@oper_1^0,w,c
  1348  0039E2  1055               	iorwf	or@oper_2^0,w,c
  1349  0039E4  0012               	return		;funcret
  1350  0039E6  FFFF               	dw	65535	; errata NOP
  1351  0039E8                     __end_of_or:
  1352                           	opt callstack 0
  1353                           
  1354 ;; *************** function _no_es_primo *****************
  1355 ;; Defined at:
  1356 ;;		line 239 in file "main.c"
  1357 ;; Parameters:    Size  Location     Type
  1358 ;;  num             1    wreg     unsigned char 
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;  num             1    6[COMRAM] unsigned char 
  1361 ;; Return value:  Size  Location     Type
  1362 ;;                  1    wreg      unsigned char 
  1363 ;; Registers used:
  1364 ;;		wreg, status,2, status,0, cstack
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1370 ;;      Params:         0       0       0       0       0       0       0
  1371 ;;      Locals:         1       0       0       0       0       0       0
  1372 ;;      Temps:          0       0       0       0       0       0       0
  1373 ;;      Totals:         1       0       0       0       0       0       0
  1374 ;;Total ram usage:        1 bytes
  1375 ;; Hardware stack levels used:    1
  1376 ;; Hardware stack levels required when called:    2
  1377 ;; This function calls:
  1378 ;;		_module
  1379 ;; This function is called by:
  1380 ;;		_operar
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384                           	psect	text9
  1385  003A80                     __ptext9:
  1386                           	opt callstack 0
  1387  003A80                     _no_es_primo:
  1388                           	opt callstack 0
  1389  003A80  FFFF               	dw	65535	; assembler added errata NOP
  1390                           
  1391                           ;incstack = 0
  1392                           ;no_es_primo@num stored from wreg
  1393  003A82  6E5B               	movwf	no_es_primo@num^0,c
  1394  003A84                     
  1395                           ;main.c: 240: if (!module(num, 2)) {
  1396  003A84  0E02               	movlw	2
  1397  003A86  6E59               	movwf	module@oper_2^0,c
  1398  003A88  505B               	movf	no_es_primo@num^0,w,c
  1399  003A8A  EC0D  F01D         	call	_module
  1400  003A8E  0900               	iorlw	0
  1401  003A90  A4D8               	btfss	status,2,c
  1402  003A92  EF4D  F01D         	goto	u261
  1403  003A96  EF50  F01D         	goto	u260
  1404  003A9A                     u261:
  1405  003A9A  FFFF               	dw	65535	; assembler added errata NOP
  1406  003A9C  EF54  F01D         	goto	l1301
  1407  003AA0                     u260:
  1408  003AA0  FFFF               	dw	65535	; assembler added errata NOP
  1409  003AA2                     
  1410                           ;main.c: 241: return 0;
  1411  003AA2  0E00               	movlw	0
  1412  003AA4  EF56  F01D         	goto	l163
  1413  003AA8                     l1301:
  1414  003AA8  FFFF               	dw	65535	; assembler added errata NOP
  1415                           
  1416                           ;main.c: 242: };main.c: 243: return 1;
  1417  003AAA  0E01               	movlw	1
  1418  003AAC                     l163:
  1419  003AAC  FFFF               	dw	65535	; assembler added errata NOP
  1420  003AAE  0012               	return		;funcret
  1421  003AB0  FFFF               	dw	65535	; errata NOP
  1422  003AB2                     __end_of_no_es_primo:
  1423                           	opt callstack 0
  1424                           
  1425 ;; *************** function _module *****************
  1426 ;; Defined at:
  1427 ;;		line 219 in file "main.c"
  1428 ;; Parameters:    Size  Location     Type
  1429 ;;  oper_1          1    wreg     unsigned char 
  1430 ;;  oper_2          1    4[COMRAM] unsigned char 
  1431 ;; Auto vars:     Size  Location     Type
  1432 ;;  oper_1          1    5[COMRAM] unsigned char 
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  1    wreg      unsigned char 
  1435 ;; Registers used:
  1436 ;;		wreg, status,2, status,0, cstack
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1442 ;;      Params:         1       0       0       0       0       0       0
  1443 ;;      Locals:         1       0       0       0       0       0       0
  1444 ;;      Temps:          0       0       0       0       0       0       0
  1445 ;;      Totals:         2       0       0       0       0       0       0
  1446 ;;Total ram usage:        2 bytes
  1447 ;; Hardware stack levels used:    1
  1448 ;; Hardware stack levels required when called:    1
  1449 ;; This function calls:
  1450 ;;		___lbmod
  1451 ;; This function is called by:
  1452 ;;		_operar
  1453 ;;		_no_es_primo
  1454 ;; This function uses a non-reentrant model
  1455 ;;
  1456                           
  1457                           	psect	text10
  1458  003A1A                     __ptext10:
  1459                           	opt callstack 0
  1460  003A1A                     _module:
  1461                           	opt callstack 0
  1462  003A1A  FFFF               	dw	65535	; assembler added errata NOP
  1463                           
  1464                           ;incstack = 0
  1465                           ;module@oper_1 stored from wreg
  1466  003A1C  6E5A               	movwf	module@oper_1^0,c
  1467  003A1E                     
  1468                           ;main.c: 220: return oper_1 % oper_2;
  1469  003A1E  C059  F055         	movff	module@oper_2,___lbmod@divisor
  1470  003A22  505A               	movf	module@oper_1^0,w,c
  1471  003A24  EC95  F01D         	call	___lbmod
  1472  003A28  0012               	return		;funcret
  1473  003A2A  FFFF               	dw	65535	; errata NOP
  1474  003A2C                     __end_of_module:
  1475                           	opt callstack 0
  1476                           
  1477 ;; *************** function ___lbmod *****************
  1478 ;; Defined at:
  1479 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lbmod.c"
  1480 ;; Parameters:    Size  Location     Type
  1481 ;;  dividend        1    wreg     unsigned char 
  1482 ;;  divisor         1    0[COMRAM] unsigned char 
  1483 ;; Auto vars:     Size  Location     Type
  1484 ;;  dividend        1    1[COMRAM] unsigned char 
  1485 ;;  rem             1    3[COMRAM] unsigned char 
  1486 ;;  counter         1    2[COMRAM] unsigned char 
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  1    wreg      unsigned char 
  1489 ;; Registers used:
  1490 ;;		wreg, status,2, status,0
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1496 ;;      Params:         1       0       0       0       0       0       0
  1497 ;;      Locals:         3       0       0       0       0       0       0
  1498 ;;      Temps:          0       0       0       0       0       0       0
  1499 ;;      Totals:         4       0       0       0       0       0       0
  1500 ;;Total ram usage:        4 bytes
  1501 ;; Hardware stack levels used:    1
  1502 ;; This function calls:
  1503 ;;		Nothing
  1504 ;; This function is called by:
  1505 ;;		_module
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           	psect	text11
  1510  003B2A                     __ptext11:
  1511                           	opt callstack 0
  1512  003B2A                     ___lbmod:
  1513                           	opt callstack 0
  1514  003B2A  FFFF               	dw	65535	; assembler added errata NOP
  1515                           
  1516                           ;incstack = 0
  1517                           ;___lbmod@dividend stored from wreg
  1518  003B2C  6E56               	movwf	___lbmod@dividend^0,c
  1519  003B2E  0E08               	movlw	8
  1520  003B30  6E57               	movwf	___lbmod@counter^0,c
  1521  003B32  0E00               	movlw	0
  1522  003B34  6E58               	movwf	___lbmod@rem^0,c
  1523  003B36                     l1181:
  1524  003B36  FFFF               	dw	65535	; assembler added errata NOP
  1525  003B38  90D8               	bcf	status,0,c
  1526  003B3A  3456               	rlcf	___lbmod@dividend^0,w,c
  1527  003B3C  3458               	rlcf	___lbmod@rem^0,w,c
  1528  003B3E  6E58               	movwf	___lbmod@rem^0,c
  1529  003B40  90D8               	bcf	status,0,c
  1530  003B42  3656               	rlcf	___lbmod@dividend^0,f,c
  1531  003B44  5055               	movf	___lbmod@divisor^0,w,c
  1532  003B46  5C58               	subwf	___lbmod@rem^0,w,c
  1533  003B48  A0D8               	btfss	status,0,c
  1534  003B4A  EFA9  F01D         	goto	u171
  1535  003B4E  EFAC  F01D         	goto	u170
  1536  003B52                     u171:
  1537  003B52  FFFF               	dw	65535	; assembler added errata NOP
  1538  003B54  EFAF  F01D         	goto	l1189
  1539  003B58                     u170:
  1540  003B58  FFFF               	dw	65535	; assembler added errata NOP
  1541  003B5A  5055               	movf	___lbmod@divisor^0,w,c
  1542  003B5C  5E58               	subwf	___lbmod@rem^0,f,c
  1543  003B5E                     l1189:
  1544  003B5E  FFFF               	dw	65535	; assembler added errata NOP
  1545  003B60  2E57               	decfsz	___lbmod@counter^0,f,c
  1546  003B62  EF9B  F01D         	goto	l1181
  1547  003B66  5058               	movf	___lbmod@rem^0,w,c
  1548  003B68  0012               	return		;funcret
  1549  003B6A  FFFF               	dw	65535	; errata NOP
  1550  003B6C                     __end_of___lbmod:
  1551                           	opt callstack 0
  1552                           
  1553 ;; *************** function _nand *****************
  1554 ;; Defined at:
  1555 ;;		line 231 in file "main.c"
  1556 ;; Parameters:    Size  Location     Type
  1557 ;;  oper_1          1    wreg     unsigned char 
  1558 ;;  oper_2          1    2[COMRAM] unsigned char 
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;  oper_1          1    3[COMRAM] unsigned char 
  1561 ;; Return value:  Size  Location     Type
  1562 ;;                  1    wreg      unsigned char 
  1563 ;; Registers used:
  1564 ;;		wreg, status,2, status,0, cstack
  1565 ;; Tracked objects:
  1566 ;;		On entry : 0/0
  1567 ;;		On exit  : 0/0
  1568 ;;		Unchanged: 0/0
  1569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1570 ;;      Params:         1       0       0       0       0       0       0
  1571 ;;      Locals:         1       0       0       0       0       0       0
  1572 ;;      Temps:          0       0       0       0       0       0       0
  1573 ;;      Totals:         2       0       0       0       0       0       0
  1574 ;;Total ram usage:        2 bytes
  1575 ;; Hardware stack levels used:    1
  1576 ;; Hardware stack levels required when called:    1
  1577 ;; This function calls:
  1578 ;;		_and
  1579 ;; This function is called by:
  1580 ;;		_operar
  1581 ;; This function uses a non-reentrant model
  1582 ;;
  1583                           
  1584                           	psect	text12
  1585  003A2C                     __ptext12:
  1586                           	opt callstack 0
  1587  003A2C                     _nand:
  1588                           	opt callstack 0
  1589  003A2C  FFFF               	dw	65535	; assembler added errata NOP
  1590                           
  1591                           ;incstack = 0
  1592                           ;nand@oper_1 stored from wreg
  1593  003A2E  6E58               	movwf	nand@oper_1^0,c
  1594  003A30                     
  1595                           ;main.c: 232: return ~(and(oper_1, oper_2));
  1596  003A30  C057  F055         	movff	nand@oper_2,and@oper_2
  1597  003A34  5058               	movf	nand@oper_1^0,w,c
  1598  003A36  ECE8  F01C         	call	_and
  1599  003A3A  0AFF               	xorlw	255
  1600  003A3C  0012               	return		;funcret
  1601  003A3E  FFFF               	dw	65535	; errata NOP
  1602  003A40                     __end_of_nand:
  1603                           	opt callstack 0
  1604                           
  1605 ;; *************** function _and *****************
  1606 ;; Defined at:
  1607 ;;		line 223 in file "main.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;  oper_1          1    wreg     unsigned char 
  1610 ;;  oper_2          1    0[COMRAM] unsigned char 
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;  oper_1          1    1[COMRAM] unsigned char 
  1613 ;; Return value:  Size  Location     Type
  1614 ;;                  1    wreg      unsigned char 
  1615 ;; Registers used:
  1616 ;;		wreg, status,2, status,0
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1622 ;;      Params:         1       0       0       0       0       0       0
  1623 ;;      Locals:         1       0       0       0       0       0       0
  1624 ;;      Temps:          0       0       0       0       0       0       0
  1625 ;;      Totals:         2       0       0       0       0       0       0
  1626 ;;Total ram usage:        2 bytes
  1627 ;; Hardware stack levels used:    1
  1628 ;; This function calls:
  1629 ;;		Nothing
  1630 ;; This function is called by:
  1631 ;;		_operar
  1632 ;;		_nand
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636                           	psect	text13
  1637  0039D0                     __ptext13:
  1638                           	opt callstack 0
  1639  0039D0                     _and:
  1640                           	opt callstack 0
  1641  0039D0  FFFF               	dw	65535	; assembler added errata NOP
  1642                           
  1643                           ;incstack = 0
  1644                           ;and@oper_1 stored from wreg
  1645  0039D2  6E56               	movwf	and@oper_1^0,c
  1646  0039D4                     
  1647                           ;main.c: 224: return oper_1 & oper_2;
  1648  0039D4  5056               	movf	and@oper_1^0,w,c
  1649  0039D6  1455               	andwf	and@oper_2^0,w,c
  1650  0039D8  0012               	return		;funcret
  1651  0039DA  FFFF               	dw	65535	; errata NOP
  1652  0039DC                     __end_of_and:
  1653                           	opt callstack 0
  1654                           
  1655 ;; *************** function _multi *****************
  1656 ;; Defined at:
  1657 ;;		line 210 in file "main.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;  oper_1          1    wreg     unsigned char 
  1660 ;;  oper_2          1    0[COMRAM] unsigned char 
  1661 ;; Auto vars:     Size  Location     Type
  1662 ;;  oper_1          1    1[COMRAM] unsigned char 
  1663 ;; Return value:  Size  Location     Type
  1664 ;;                  1    wreg      unsigned char 
  1665 ;; Registers used:
  1666 ;;		wreg, status,2, status,0, prodl, prodh
  1667 ;; Tracked objects:
  1668 ;;		On entry : 0/0
  1669 ;;		On exit  : 0/0
  1670 ;;		Unchanged: 0/0
  1671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1672 ;;      Params:         1       0       0       0       0       0       0
  1673 ;;      Locals:         1       0       0       0       0       0       0
  1674 ;;      Temps:          0       0       0       0       0       0       0
  1675 ;;      Totals:         2       0       0       0       0       0       0
  1676 ;;Total ram usage:        2 bytes
  1677 ;; Hardware stack levels used:    1
  1678 ;; This function calls:
  1679 ;;		Nothing
  1680 ;; This function is called by:
  1681 ;;		_operar
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685                           	psect	text14
  1686  003A0C                     __ptext14:
  1687                           	opt callstack 0
  1688  003A0C                     _multi:
  1689                           	opt callstack 0
  1690  003A0C  FFFF               	dw	65535	; assembler added errata NOP
  1691                           
  1692                           ;incstack = 0
  1693                           ;multi@oper_1 stored from wreg
  1694  003A0E  6E56               	movwf	multi@oper_1^0,c
  1695  003A10                     
  1696                           ;main.c: 211: return oper_1 * oper_2;
  1697  003A10  5056               	movf	multi@oper_1^0,w,c
  1698  003A12  0255               	mulwf	multi@oper_2^0,c
  1699  003A14  50F3               	movf	243,w,c
  1700  003A16  0012               	return		;funcret
  1701  003A18  FFFF               	dw	65535	; errata NOP
  1702  003A1A                     __end_of_multi:
  1703                           	opt callstack 0
  1704                           
  1705 ;; *************** function _division *****************
  1706 ;; Defined at:
  1707 ;;		line 214 in file "main.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;  oper_1          1    wreg     unsigned char 
  1710 ;;  oper_2          1    4[COMRAM] unsigned char 
  1711 ;; Auto vars:     Size  Location     Type
  1712 ;;  oper_1          1    5[COMRAM] unsigned char 
  1713 ;;  result          1    6[COMRAM] unsigned char 
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  1    wreg      unsigned char 
  1716 ;; Registers used:
  1717 ;;		wreg, status,2, status,0, cstack
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1723 ;;      Params:         1       0       0       0       0       0       0
  1724 ;;      Locals:         2       0       0       0       0       0       0
  1725 ;;      Temps:          0       0       0       0       0       0       0
  1726 ;;      Totals:         3       0       0       0       0       0       0
  1727 ;;Total ram usage:        3 bytes
  1728 ;; Hardware stack levels used:    1
  1729 ;; Hardware stack levels required when called:    1
  1730 ;; This function calls:
  1731 ;;		___lbdiv
  1732 ;; This function is called by:
  1733 ;;		_operar
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737                           	psect	text15
  1738  003A40                     __ptext15:
  1739                           	opt callstack 0
  1740  003A40                     _division:
  1741                           	opt callstack 0
  1742  003A40  FFFF               	dw	65535	; assembler added errata NOP
  1743                           
  1744                           ;incstack = 0
  1745                           ;division@oper_1 stored from wreg
  1746  003A42  6E5A               	movwf	division@oper_1^0,c
  1747  003A44                     
  1748                           ;main.c: 215: char result = oper_1 / oper_2;
  1749  003A44  C059  F055         	movff	division@oper_2,___lbdiv@divisor
  1750  003A48  505A               	movf	division@oper_1^0,w,c
  1751  003A4A  EC0F  F01E         	call	___lbdiv
  1752  003A4E  6E5B               	movwf	division@result^0,c
  1753  003A50                     
  1754                           ;main.c: 216: return result;
  1755  003A50  505B               	movf	division@result^0,w,c
  1756  003A52  0012               	return		;funcret
  1757  003A54  FFFF               	dw	65535	; errata NOP
  1758  003A56                     __end_of_division:
  1759                           	opt callstack 0
  1760                           
  1761 ;; *************** function ___lbdiv *****************
  1762 ;; Defined at:
  1763 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lbdiv.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;  dividend        1    wreg     unsigned char 
  1766 ;;  divisor         1    0[COMRAM] unsigned char 
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;  dividend        1    1[COMRAM] unsigned char 
  1769 ;;  quotient        1    3[COMRAM] unsigned char 
  1770 ;;  counter         1    2[COMRAM] unsigned char 
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  1    wreg      unsigned char 
  1773 ;; Registers used:
  1774 ;;		wreg, status,2, status,0
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1780 ;;      Params:         1       0       0       0       0       0       0
  1781 ;;      Locals:         3       0       0       0       0       0       0
  1782 ;;      Temps:          0       0       0       0       0       0       0
  1783 ;;      Totals:         4       0       0       0       0       0       0
  1784 ;;Total ram usage:        4 bytes
  1785 ;; Hardware stack levels used:    1
  1786 ;; This function calls:
  1787 ;;		Nothing
  1788 ;; This function is called by:
  1789 ;;		_division
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           
  1793                           	psect	text16
  1794  003C1E                     __ptext16:
  1795                           	opt callstack 0
  1796  003C1E                     ___lbdiv:
  1797                           	opt callstack 0
  1798  003C1E  FFFF               	dw	65535	; assembler added errata NOP
  1799                           
  1800                           ;incstack = 0
  1801                           ;___lbdiv@dividend stored from wreg
  1802  003C20  6E56               	movwf	___lbdiv@dividend^0,c
  1803  003C22  0E00               	movlw	0
  1804  003C24  6E58               	movwf	___lbdiv@quotient^0,c
  1805  003C26  5055               	movf	___lbdiv@divisor^0,w,c
  1806  003C28  B4D8               	btfsc	status,2,c
  1807  003C2A  EF19  F01E         	goto	u201
  1808  003C2E  EF1C  F01E         	goto	u200
  1809  003C32                     u201:
  1810  003C32  FFFF               	dw	65535	; assembler added errata NOP
  1811  003C34  EF46  F01E         	goto	l1235
  1812  003C38                     u200:
  1813  003C38  FFFF               	dw	65535	; assembler added errata NOP
  1814  003C3A  0E01               	movlw	1
  1815  003C3C  6E57               	movwf	___lbdiv@counter^0,c
  1816  003C3E  EF25  F01E         	goto	l1223
  1817  003C42                     l1219:
  1818  003C42  FFFF               	dw	65535	; assembler added errata NOP
  1819  003C44  90D8               	bcf	status,0,c
  1820  003C46  3655               	rlcf	___lbdiv@divisor^0,f,c
  1821  003C48  2A57               	incf	___lbdiv@counter^0,f,c
  1822  003C4A                     l1223:
  1823  003C4A  FFFF               	dw	65535	; assembler added errata NOP
  1824  003C4C  AE55               	btfss	___lbdiv@divisor^0,7,c
  1825  003C4E  EF2B  F01E         	goto	u211
  1826  003C52  EF2E  F01E         	goto	u210
  1827  003C56                     u211:
  1828  003C56  FFFF               	dw	65535	; assembler added errata NOP
  1829  003C58  EF21  F01E         	goto	l1219
  1830  003C5C                     u210:
  1831  003C5C  FFFF               	dw	65535	; assembler added errata NOP
  1832  003C5E                     l1225:
  1833  003C5E  FFFF               	dw	65535	; assembler added errata NOP
  1834  003C60  90D8               	bcf	status,0,c
  1835  003C62  3658               	rlcf	___lbdiv@quotient^0,f,c
  1836  003C64  5055               	movf	___lbdiv@divisor^0,w,c
  1837  003C66  5C56               	subwf	___lbdiv@dividend^0,w,c
  1838  003C68  A0D8               	btfss	status,0,c
  1839  003C6A  EF39  F01E         	goto	u221
  1840  003C6E  EF3C  F01E         	goto	u220
  1841  003C72                     u221:
  1842  003C72  FFFF               	dw	65535	; assembler added errata NOP
  1843  003C74  EF40  F01E         	goto	l1231
  1844  003C78                     u220:
  1845  003C78  FFFF               	dw	65535	; assembler added errata NOP
  1846  003C7A  5055               	movf	___lbdiv@divisor^0,w,c
  1847  003C7C  5E56               	subwf	___lbdiv@dividend^0,f,c
  1848  003C7E  8058               	bsf	___lbdiv@quotient^0,0,c
  1849  003C80                     l1231:
  1850  003C80  FFFF               	dw	65535	; assembler added errata NOP
  1851  003C82  90D8               	bcf	status,0,c
  1852  003C84  3255               	rrcf	___lbdiv@divisor^0,f,c
  1853  003C86  2E57               	decfsz	___lbdiv@counter^0,f,c
  1854  003C88  EF2F  F01E         	goto	l1225
  1855  003C8C                     l1235:
  1856  003C8C  FFFF               	dw	65535	; assembler added errata NOP
  1857  003C8E  5058               	movf	___lbdiv@quotient^0,w,c
  1858  003C90  0012               	return		;funcret
  1859  003C92  FFFF               	dw	65535	; errata NOP
  1860  003C94                     __end_of___lbdiv:
  1861                           	opt callstack 0
  1862                           
  1863 ;; *************** function _init_config *****************
  1864 ;; Defined at:
  1865 ;;		line 100 in file "main.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;		None
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;		None
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  1    wreg      void 
  1872 ;; Registers used:
  1873 ;;		wreg, status,2
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1879 ;;      Params:         0       0       0       0       0       0       0
  1880 ;;      Locals:         0       0       0       0       0       0       0
  1881 ;;      Temps:          0       0       0       0       0       0       0
  1882 ;;      Totals:         0       0       0       0       0       0       0
  1883 ;;Total ram usage:        0 bytes
  1884 ;; Hardware stack levels used:    1
  1885 ;; This function calls:
  1886 ;;		Nothing
  1887 ;; This function is called by:
  1888 ;;		_main
  1889 ;; This function uses a non-reentrant model
  1890 ;;
  1891                           
  1892                           	psect	text17
  1893  003AE8                     __ptext17:
  1894                           	opt callstack 0
  1895  003AE8                     _init_config:
  1896                           	opt callstack 0
  1897  003AE8  FFFF               	dw	65535	; assembler added errata NOP
  1898  003AEA                     
  1899                           ;main.c: 101: ADCON1 = 0X06;
  1900  003AEA  0E06               	movlw	6
  1901  003AEC  6EC1               	movwf	193,c	;volatile
  1902                           
  1903                           ;main.c: 103: TRISA = 0B00000000;
  1904  003AEE  0E00               	movlw	0
  1905  003AF0  6E92               	movwf	146,c	;volatile
  1906                           
  1907                           ;main.c: 104: LATA = 0;
  1908  003AF2  0E00               	movlw	0
  1909  003AF4  6E89               	movwf	137,c	;volatile
  1910                           
  1911                           ;main.c: 105: PORTA = 0;
  1912  003AF6  0E00               	movlw	0
  1913  003AF8  6E80               	movwf	128,c	;volatile
  1914  003AFA                     
  1915                           ;main.c: 107: TRISB = 0B11111111;
  1916  003AFA  6893               	setf	147,c	;volatile
  1917                           
  1918                           ;main.c: 108: LATB = 0;
  1919  003AFC  0E00               	movlw	0
  1920  003AFE  6E8A               	movwf	138,c	;volatile
  1921  003B00                     
  1922                           ;main.c: 109: PORTB = 0B11111111;
  1923  003B00  6881               	setf	129,c	;volatile
  1924  003B02                     
  1925                           ;main.c: 111: TRISC = 0B11111111;
  1926  003B02  6894               	setf	148,c	;volatile
  1927                           
  1928                           ;main.c: 112: LATC = 0;
  1929  003B04  0E00               	movlw	0
  1930  003B06  6E8B               	movwf	139,c	;volatile
  1931                           
  1932                           ;main.c: 113: PORTC = 0;
  1933  003B08  0E00               	movlw	0
  1934  003B0A  6E82               	movwf	130,c	;volatile
  1935                           
  1936                           ;main.c: 115: TRISD = 0B00000000;
  1937  003B0C  0E00               	movlw	0
  1938  003B0E  6E95               	movwf	149,c	;volatile
  1939                           
  1940                           ;main.c: 116: LATD = 0;
  1941  003B10  0E00               	movlw	0
  1942  003B12  6E8C               	movwf	140,c	;volatile
  1943                           
  1944                           ;main.c: 117: PORTD = 0;
  1945  003B14  0E00               	movlw	0
  1946  003B16  6E83               	movwf	131,c	;volatile
  1947                           
  1948                           ;main.c: 119: TRISE = 0B00000000;
  1949  003B18  0E00               	movlw	0
  1950  003B1A  6E96               	movwf	150,c	;volatile
  1951                           
  1952                           ;main.c: 120: LATE = 0;
  1953  003B1C  0E00               	movlw	0
  1954  003B1E  6E8D               	movwf	141,c	;volatile
  1955                           
  1956                           ;main.c: 121: PORTE = 0;
  1957  003B20  0E00               	movlw	0
  1958  003B22  6E84               	movwf	132,c	;volatile
  1959  003B24  0012               	return		;funcret
  1960  003B26  FFFF               	dw	65535	; errata NOP
  1961  003B28                     __end_of_init_config:
  1962                           	opt callstack 0
  1963  003B28  FFFF               	dw	65535	; assembler added errata NOP
  1964                           
  1965                           	psect	rparam
  1966  0000                     tosu	equ	0xFFF
  1967                           tosh	equ	0xFFE
  1968                           tosl	equ	0xFFD
  1969                           stkptr	equ	0xFFC
  1970                           pclatu	equ	0xFFB
  1971                           pclath	equ	0xFFA
  1972                           pcl	equ	0xFF9
  1973                           tblptru	equ	0xFF8
  1974                           tblptrh	equ	0xFF7
  1975                           tblptrl	equ	0xFF6
  1976                           tablat	equ	0xFF5
  1977                           prodh	equ	0xFF4
  1978                           prodl	equ	0xFF3
  1979                           indf0	equ	0xFEF
  1980                           postinc0	equ	0xFEE
  1981                           postdec0	equ	0xFED
  1982                           preinc0	equ	0xFEC
  1983                           plusw0	equ	0xFEB
  1984                           fsr0h	equ	0xFEA
  1985                           fsr0l	equ	0xFE9
  1986                           wreg	equ	0xFE8
  1987                           indf1	equ	0xFE7
  1988                           postinc1	equ	0xFE6
  1989                           postdec1	equ	0xFE5
  1990                           preinc1	equ	0xFE4
  1991                           plusw1	equ	0xFE3
  1992                           fsr1h	equ	0xFE2
  1993                           fsr1l	equ	0xFE1
  1994                           bsr	equ	0xFE0
  1995                           indf2	equ	0xFDF
  1996                           postinc2	equ	0xFDE
  1997                           postdec2	equ	0xFDD
  1998                           preinc2	equ	0xFDC
  1999                           plusw2	equ	0xFDB
  2000                           fsr2h	equ	0xFDA
  2001                           fsr2l	equ	0xFD9
  2002                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        84
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     21     105
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_show_error_message
    _show_error_message->_visualizar
    _visualizar->_tolower
    _operar->_division
    _operar->_no_es_primo
    _no_es_primo->_module
    _module->___lbmod
    _nand->_and
    _division->___lbdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   10129
                                             12 COMRAM     9     9      0
                        _init_config
                             _operar
                 _show_error_message
                         _visualizar
 ---------------------------------------------------------------------------------
 (1) _show_error_message                                   1     1      0    3049
                                             11 COMRAM     1     1      0
                         _visualizar
 ---------------------------------------------------------------------------------
 (1) _visualizar                                          10     7      3    3049
                                              1 COMRAM    10     7      3
                            _tolower
 ---------------------------------------------------------------------------------
 (2) _tolower                                              1     1      0      67
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _operar                                               3     1      2    3447
                                              7 COMRAM     3     1      2
                                _and
                           _division
                             _module
                              _multi
                               _nand
                        _no_es_primo
                                 _or
                              _resta
                               _suma
                                _xor
 ---------------------------------------------------------------------------------
 (2) _xor                                                  2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _suma                                                 2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _resta                                                2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _or                                                   2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _no_es_primo                                          1     1      0     453
                                              6 COMRAM     1     1      0
                             _module
 ---------------------------------------------------------------------------------
 (3) _module                                               2     1      1     431
                                              4 COMRAM     2     1      1
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1     235
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _nand                                                 2     1      1     316
                                              2 COMRAM     2     1      1
                                _and
 ---------------------------------------------------------------------------------
 (3) _and                                                  2     1      1     196
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _multi                                                2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _division                                             3     2      1     381
                                              4 COMRAM     3     2      1
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1     238
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_config
   _operar
     _and
     _division
       ___lbdiv
     _module
       ___lbmod
     _multi
     _nand
       _and
     _no_es_primo
       _module
         ___lbmod
     _or
     _resta
     _suma
     _xor
   _show_error_message
     _visualizar
       _tolower
   _visualizar
     _tolower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     15      69       1       82.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      69      15        0.0%
DATA                 0      0      69       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 26 17:01:40 2020

                                                               l98 3B24  
                                                               _or 39DC  
                                                      __CFG_OSC$XT 000000  
                                                              l103 3CBA  
                                                              l120 3E92  
                                                              l115 3C1A  
                                                              l141 3A16  
                                                              l109 3D68  
                                                              l150 39D8  
                                                              l135 39FC  
                                                              l144 3A52  
                                                              l153 39E4  
                                                              l138 39F0  
                                                              l147 3A28  
                                                              l163 3AAC  
                                                              l156 3A3C  
                                                              ?_or 0055  
                                                              l159 3A08  
                                                              l560 3C90  
                                                              l566 3B68  
                                                              l829 3AE4  
                                                              _LA3 007C4B  
                                                              _LA5 007C4D  
                                                              u200 3C38  
                                                              u201 3C32  
                                                              u210 3C5C  
                                                              u211 3C56  
                                                              u220 3C78  
                                                              u300 3F22  
                                                              u221 3C72  
                                                              u301 3F1C  
                                                              u230 3CB0  
                                                              u310 3F66  
                                                              u231 3CAA  
                                                              u311 3F60  
                                                              u240 3CDA  
                                                              u320 3FF6  
                                                              u241 3CD4  
                                                              u321 3FF0  
                                                              u170 3B58  
                                                              u250 3D66  
                                                              u171 3B52  
                                                              u251 3D60  
                                                              u260 3AA0  
                                                              u180 3AC8  
                                                              u261 3A9A  
                                                              u181 3AC2  
                                                              u270 3E28  
                                                              u190 3ADC  
                                                              u271 3E20  
                                                              u191 3AD6  
                                                              u280 3E2C  
                                                              u337 3C10  
                                                              u290 3ED0  
                                                              u347 3D48  
                                                              u291 3ECA  
                                                     __CFG_BOR$OFF 000000  
                                                              _and 39D0  
                                                              _xor 3A00  
                                                              wreg 000FE8  
                                                             ??_or 0056  
                                                     __CFG_LVP$OFF 000000  
                                                     __CFG_WDT$OFF 000000  
                                                             l1201 3AE0  
                                                             l1221 3C48  
                                                             l1213 3C22  
                                                             l1205 3A1E  
                                                             l1301 3AA8  
                                                             l1311 3B02  
                                                             l1231 3C80  
                                                             l1223 3C4A  
                                                             l1215 3C26  
                                                             l1305 3AEA  
                                                             l1233 3C86  
                                                             l1225 3C5E  
                                                             l1217 3C3A  
                                                             l1209 39D4  
                                                             l1321 3D84  
                                                             l1313 3D70  
                                                             l1307 3AFA  
                                                             l1227 3C7A  
                                                             l1219 3C42  
                                                             l1235 3C8C  
                                                             l1315 3D74  
                                                             l1251 3CDC  
                                                             l1411 3F0A  
                                                             l1403 3EBA  
                                                             ?_and 0055  
                                                             l1309 3B00  
                                                             l1229 3C7E  
                                                             l1181 3B36  
                                                             l1333 3DA4  
                                                             l1261 3D52  
                                                             l1253 3D0A  
                                                             l1245 3C9C  
                                                             l1421 3F52  
                                                             l1413 3F0E  
                                                             l1405 3ED2  
                                                             l1191 3B66  
                                                             l1183 3B40  
                                                             l1351 3DD4  
                                                             l1327 3D94  
                                                             l1263 3D54  
                                                             l1255 3D36  
                                                             l1247 3CB2  
                                                             l1239 3C98  
                                                             l1431 3FAA  
                                                             l1423 3F68  
                                                             l1415 3F24  
                                                             l1407 3EEC  
                                                             l1273 3A10  
                                                             l1185 3B44  
                                                             l1265 39F8  
                                                             l1345 3DC4  
                                                             l1257 3D3C  
                                                             l1249 3CC0  
                                                             l1425 3F70  
                                                             l1417 3F36  
                                                             l1409 3F04  
                                                             l1433 3FC0  
                                                             l1187 3B5A  
                                                             l1179 3B2E  
                                                             l1283 39E0  
                                                             l1291 3A04  
                                                             l1363 3DF4  
                                                             l1339 3DB4  
                                                             l1195 3AB6  
                                                             l1259 3D42  
                                                             l1427 3F82  
                                                             l1435 3FE0  
                                                             l1419 3F3A  
                                                             l1277 3A44  
                                                             l1189 3B5E  
                                                             l1269 39EC  
                                                             l1357 3DE4  
                                                             l1197 3ACA  
                                                             l1437 3FE4  
                                                             l1429 3F98  
                                                             l1279 3A50  
                                                             l1287 3A30  
                                                             l1295 3A84  
                                                             l1375 3E10  
                                                             l1383 3E32  
                                                             l1199 3ADE  
                                                             l1391 3E9E  
                                                             l1297 3AA2  
                                                             l1369 3E04  
                                                             l1385 3BC2  
                                                             l1393 3EA6  
                                                             l1387 3C0A  
                                                             l1395 3EAC  
                                                             l1397 3EB2  
                                                             l1389 3E98  
                                                             ?_xor 0055  
                                                             _LATA 000F89  
                                                             _LATB 000F8A  
                                                             _LATC 000F8B  
                                                             _LATD 000F8C  
                                                             _LATE 000F8D  
                                                     __CFG_PWRT$ON 000000  
                                                             _main 3E98  
                                                             _nand 3A2C  
                                                             indf2 000FDF  
                                                             fsr1l 000FE1  
                                                             fsr2l 000FD9  
                                                             _suma 39F4  
                                                             prodh 000FF4  
                                                             prodl 000FF3  
                                                             start 0002  
                                                     ___param_bank 000000  
                                                            ??_and 0056  
                                                            ??_xor 0056  
                                                            ?_main 0055  
                                                            ?_nand 0057  
                                                  __end_of___lbdiv 3C94  
                                                  __end_of___lbmod 3B6C  
                                                            ?_suma 0055  
                                                     ?_init_config 0055  
                                                            _PORTA 000F80  
                                                            _PORTB 000F81  
                                                            _PORTC 000F82  
                                                            _PORTD 000F83  
                                                            _PORTE 000F84  
                                                            _TRISA 000F92  
                                                            _TRISB 000F93  
                                                            _TRISC 000F94  
                                                            _TRISD 000F95  
                                                            _TRISE 000F96  
                                                            _resta 39E8  
                                                            _multi 3A0C  
                                                            main@i 0064  
                                                            main@x 0065  
                                                            tablat 000FF5  
                                                            status 000FD8  
                                                  __end_of_tolower 3AE8  
                                                  ___lbdiv@divisor 0055  
                                                  ___lbdiv@counter 0057  
                                                     ?_no_es_primo 0055  
                                                  __initialization 3A56  
                                                     __end_of_main 4000  
                                                     __end_of_nand 3A40  
                                                     __end_of_suma 3A00  
                                                           ??_main 0061  
                                                           ??_nand 0058  
                                                           ??_suma 0056  
                                                    __activetblptr 000002  
                                                           _ADCON1 000FC1  
                                                           ?_resta 0055  
                                                           ?_multi 0055  
                                                           _NUMERO 0001  
                                                 __end_of_division 3A56  
                                                        ??___lbdiv 0056  
                                                        ??___lbmod 0056  
                                                           _module 3A1A  
                                                           _operar 3D6C  
                                               _show_error_message 3BC0  
                                                    main@resultado 0066  
                                                     __pdataCOMRAM 0001  
                                                           tblptrh 000FF7  
                                                           tblptrl 000FF6  
                                                           tblptru 000FF8  
                                              ?_show_error_message 0055  
                                                        ??_tolower 0055  
                                                 ___lbdiv@dividend 0056  
                                                  ___lbmod@divisor 0055  
                                                       __accesstop 0080  
                                          __end_of__initialization 3A76  
                                                  ___lbmod@counter 0057  
                                                    ___rparam_used 000001  
                                                   __pcstackCOMRAM 0055  
                                             ??_show_error_message 0060  
                                                    __end_of_resta 39F4  
                                                    __end_of_multi 3A1A  
                                                 ___lbdiv@quotient 0058  
                                                       __end_of_or 39E8  
                                             __size_of_init_config 0040  
                                               visualizar@position 0056  
                                                          ??_resta 0056  
                                                          ??_multi 0056  
                                             __size_of_no_es_primo 0032  
                                                          ?_module 0059  
                                                          ?_operar 005C  
                                                   no_es_primo@num 005B  
                                                          _SIMBOLO 0031  
                                                        ?_division 0059  
                                                   visualizar@from 0057  
                                                          __Hparam 0000  
                                                          __Lparam 0000  
                                                          ___lbdiv 3C1E  
                                                          ___lbmod 3B2A  
                                                          __pcinit 3A56  
                                                   _visualizar$158 005D  
                                                          __ramtop 0600  
                                                  __size_of_module 0012  
                                                  __size_of_operar 012C  
                                                          __ptext0 3E98  
                                                          __ptext1 3BC0  
                                                          __ptext2 3C94  
                                                          __ptext3 3AB2  
                                                          __ptext4 3D6C  
                                                          __ptext5 3A00  
                                                          __ptext6 39F4  
                                                          __ptext7 39E8  
                                                          __ptext8 39DC  
                                                          __ptext9 3A80  
                                                      resta@oper_1 0056  
                                                      resta@oper_2 0055  
                                                     __size_of_and 000C  
                                                     __size_of_xor 000C  
                                                          _tolower 3AB2  
                                             end_of_initialization 3A76  
                                                       ??_division 005A  
                                                    __Lmediumconst 0000  
                                                          postdec1 000FE5  
                                                          postinc0 000FEE  
                                                      multi@oper_1 0056  
                                                      multi@oper_2 0055  
                                                 ___lbmod@dividend 0056  
                                                      ___lbmod@rem 0058  
                                                       main@oper_1 0068  
                                                       main@oper_2 0069  
                                                       _visualizar 3C94  
                                                       nand@oper_1 0058  
                                                       nand@oper_2 0057  
                                                    __pidataCOMRAM 3B6C  
                                                   __end_of_module 3A2C  
                                                   __end_of_operar 3E98  
                                              start_initialization 3A56  
                                                 visualizar@enable 0058  
                                                   division@oper_1 005A  
                                                   division@oper_2 0059  
                                                      __end_of_and 39DC  
                                                      __end_of_xor 3A0C  
                                                   division@result 005B  
                                      __size_of_show_error_message 005E  
                                                         ??_module 005A  
                                                         ??_operar 005E  
                                                    ??_init_config 0055  
                                                __size_of_division 0016  
                                                      ?_visualizar 0056  
                                                    ??_no_es_primo 005B  
                                                         ?___lbdiv 0055  
                                                         ?___lbmod 0055  
                                                      visualizar@x 005F  
                                                     module@oper_1 005A  
                                                     module@oper_2 0059  
                                                        and@oper_1 0056  
                                                        and@oper_2 0055  
                                                    visualizar@SoN 005C  
                                                       operar@oper 005E  
                                                         ?_tolower 0055  
                                              __end_of_init_config 3B28  
                                                   __size_of_resta 000C  
                                                   __size_of_multi 000E  
                                                      __size_of_or 000C  
                                              __end_of_no_es_primo 3AB2  
                                              __size_of_visualizar 00D8  
                                                        copy_data0 3A6A  
                                                       suma@oper_1 0056  
                                                       suma@oper_2 0055  
                                                         __Hrparam 0000  
                                                         __Lrparam 0000  
                                                 __size_of___lbdiv 0076  
                                                 __size_of___lbmod 0042  
                                                     operar@oper_1 005C  
                                                     operar@oper_2 005D  
                                                      _init_config 3AE8  
                                                         _main$149 0062  
                                                         __ptext10 3A1A  
                                                         __ptext11 3B2A  
                                                         __ptext12 3A2C  
                                                         __ptext13 39D0  
                                                         __ptext14 3A0C  
                                                         __ptext15 3A40  
                                                         __ptext16 3C1E  
                                                         __ptext17 3AE8  
                                                         _division 3A40  
                                                 __size_of_tolower 0036  
                                                    __size_of_main 0168  
                                                    __size_of_nand 0014  
                                                    __size_of_suma 000C  
                                                      _no_es_primo 3A80  
                                                         main@oper 0067  
                                                         or@oper_1 0056  
                                                         or@oper_2 0055  
                                                        xor@oper_1 0056  
                                                        xor@oper_2 0055  
                                                     ??_visualizar 0059  
                                       __end_of_show_error_message 3C1E  
                                                         tolower@c 0055  
                                               __end_of_visualizar 3D6C  
