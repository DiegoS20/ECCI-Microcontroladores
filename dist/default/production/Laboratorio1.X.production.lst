

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Feb 27 22:16:01 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29  0000                     
    30                           ; Version 2.10
    31                           ; Generated 31/07/2019 GMT
    32                           ; 
    33                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F452 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     
    65                           	psect	idataCOMRAM
    66  003A08                     __pidataCOMRAM:
    67                           	opt callstack 0
    68                           
    69                           ;initializer for _NUMERO
    70  003A08  F8                 	db	248
    71  003A09  88                 	db	136
    72  003A0A  F8                 	db	248
    73  003A0B  40                 	db	64
    74  003A0C  F8                 	db	248
    75  003A0D  F8                 	db	248
    76  003A0E  B8                 	db	184
    77  003A0F  A8                 	db	168
    78  003A10  E8                 	db	232
    79  003A11  A8                 	db	168
    80  003A12  A8                 	db	168
    81  003A13  F8                 	db	248
    82  003A14  E0                 	db	224
    83  003A15  20                 	db	32
    84  003A16  F8                 	db	248
    85  003A17  E8                 	db	232
    86  003A18  A8                 	db	168
    87  003A19  B8                 	db	184
    88  003A1A  F8                 	db	248
    89  003A1B  A8                 	db	168
    90  003A1C  B8                 	db	184
    91  003A1D  80                 	db	128
    92  003A1E  80                 	db	128
    93  003A1F  F8                 	db	248
    94  003A20  F8                 	db	248
    95  003A21  A8                 	db	168
    96  003A22  F8                 	db	248
    97  003A23  E0                 	db	224
    98  003A24  A0                 	db	160
    99  003A25  F8                 	db	248
   100  003A26  F8                 	db	248
   101  003A27  A0                 	db	160
   102  003A28  F8                 	db	248
   103  003A29  F8                 	db	248
   104  003A2A  28                 	db	40
   105  003A2B  38                 	db	56
   106  003A2C  F8                 	db	248
   107  003A2D  88                 	db	136
   108  003A2E  88                 	db	136
   109  003A2F  38                 	db	56
   110  003A30  28                 	db	40
   111  003A31  F8                 	db	248
   112  003A32  F8                 	db	248
   113  003A33  A8                 	db	168
   114  003A34  A8                 	db	168
   115  003A35  F8                 	db	248
   116  003A36  A0                 	db	160
   117  003A37  A0                 	db	160
   118                           
   119                           ;initializer for _SIMBOLO
   120  003A38  20                 	db	32
   121  003A39  70                 	db	112
   122  003A3A  20                 	db	32
   123  003A3B  20                 	db	32
   124  003A3C  20                 	db	32
   125  003A3D  20                 	db	32
   126  003A3E  50                 	db	80
   127  003A3F  20                 	db	32
   128  003A40  50                 	db	80
   129  003A41  10                 	db	16
   130  003A42  20                 	db	32
   131  003A43  40                 	db	64
   132  003A44  70                 	db	112
   133  003A45  20                 	db	32
   134  003A46  70                 	db	112
   135  003A47  20                 	db	32
   136  003A48  40                 	db	64
   137  003A49  20                 	db	32
   138  003A4A  40                 	db	64
   139  003A4B  20                 	db	32
   140  003A4C  40                 	db	64
   141  003A4D  50                 	db	80
   142  003A4E  60                 	db	96
   143  003A4F  50                 	db	80
   144  003A50  60                 	db	96
   145  003A51  50                 	db	80
   146  003A52  60                 	db	96
   147  003A53  80                 	db	128
   148  003A54  F8                 	db	248
   149  003A55  80                 	db	128
   150  003A56  50                 	db	80
   151  003A57  50                 	db	80
   152  003A58  50                 	db	80
   153  003A59  F8                 	db	248
   154  003A5A  B0                 	db	176
   155  003A5B  E8                 	db	232
   156  0000                     _PORTE	set	3972
   157  0000                     _LATE	set	3981
   158  0000                     _TRISE	set	3990
   159  0000                     _PORTD	set	3971
   160  0000                     _LATD	set	3980
   161  0000                     _TRISD	set	3989
   162  0000                     _LATC	set	3979
   163  0000                     _TRISC	set	3988
   164  0000                     _LATB	set	3978
   165  0000                     _TRISB	set	3987
   166  0000                     _PORTA	set	3968
   167  0000                     _LATA	set	3977
   168  0000                     _TRISA	set	3986
   169  0000                     _ADCON1	set	4033
   170  0000                     _PORTC	set	3970
   171  0000                     _PORTB	set	3969
   172  0000                     _LA5	set	31821
   173  0000                     _LA3	set	31819
   174                           
   175                           ; #config settings
   176  0000                     
   177                           	psect	cinit
   178  003924                     __pcinit:
   179                           	opt callstack 0
   180  003924                     start_initialization:
   181                           	opt callstack 0
   182  003924                     __initialization:
   183                           	opt callstack 0
   184                           
   185                           ; Initialize objects allocated to COMRAM (84 bytes)
   186                           ; load TBLPTR registers with __pidataCOMRAM
   187  003924  0E08               	movlw	low __pidataCOMRAM
   188  003926  6EF6               	movwf	tblptrl,c
   189  003928  0E3A               	movlw	high __pidataCOMRAM
   190  00392A  6EF7               	movwf	tblptrh,c
   191  00392C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   192  00392E  6EF8               	movwf	tblptru,c
   193  003930  EE00  F001         	lfsr	0,__pdataCOMRAM
   194  003934  EE10 F054          	lfsr	1,84
   195  003938                     copy_data0:
   196  003938  0009               	tblrd		*+
   197  00393A  CFF5 FFEE          	movff	tablat,postinc0
   198  00393E  50E5               	movf	postdec1,w,c
   199  003940  50E1               	movf	fsr1l,w,c
   200  003942  E1FA               	bnz	copy_data0
   201  003944                     end_of_initialization:
   202                           	opt callstack 0
   203  003944                     __end_of__initialization:
   204                           	opt callstack 0
   205  003944  0E00               	movlw	low (__Lmediumconst shr (0+16))
   206  003946  6EF8               	movwf	tblptru,c
   207  003948  0100               	movlb	0
   208  00394A  EFD6  F01E         	goto	_main	;jump to C main() function
   209                           
   210                           	psect	dataCOMRAM
   211  000001                     __pdataCOMRAM:
   212                           	opt callstack 0
   213  000001                     _NUMERO:
   214                           	opt callstack 0
   215  000001                     	ds	48
   216  000031                     _SIMBOLO:
   217                           	opt callstack 0
   218  000031                     	ds	36
   219                           
   220                           	psect	cstackCOMRAM
   221  000055                     __pcstackCOMRAM:
   222                           	opt callstack 0
   223  000055                     suma@oper_2:
   224                           	opt callstack 0
   225  000055                     resta@oper_2:
   226                           	opt callstack 0
   227  000055                     multi@oper_2:
   228                           	opt callstack 0
   229  000055                     and@oper_2:
   230                           	opt callstack 0
   231  000055                     or@oper_2:
   232                           	opt callstack 0
   233  000055                     xor@oper_2:
   234                           	opt callstack 0
   235  000055                     ___lbdiv@divisor:
   236                           	opt callstack 0
   237  000055                     ___lbmod@divisor:
   238                           	opt callstack 0
   239  000055                     tolower@c:
   240                           	opt callstack 0
   241                           
   242                           ; 1 bytes @ 0x0
   243  000055                     	ds	1
   244  000056                     visualizar@position:
   245                           	opt callstack 0
   246  000056                     suma@oper_1:
   247                           	opt callstack 0
   248  000056                     resta@oper_1:
   249                           	opt callstack 0
   250  000056                     multi@oper_1:
   251                           	opt callstack 0
   252  000056                     and@oper_1:
   253                           	opt callstack 0
   254  000056                     or@oper_1:
   255                           	opt callstack 0
   256  000056                     xor@oper_1:
   257                           	opt callstack 0
   258  000056                     ___lbdiv@dividend:
   259                           	opt callstack 0
   260  000056                     ___lbmod@dividend:
   261                           	opt callstack 0
   262                           
   263                           ; 1 bytes @ 0x1
   264  000056                     	ds	1
   265  000057                     visualizar@from:
   266                           	opt callstack 0
   267  000057                     nand@oper_2:
   268                           	opt callstack 0
   269  000057                     ___lbdiv@counter:
   270                           	opt callstack 0
   271  000057                     ___lbmod@counter:
   272                           	opt callstack 0
   273                           
   274                           ; 1 bytes @ 0x2
   275  000057                     	ds	1
   276  000058                     visualizar@enable:
   277                           	opt callstack 0
   278  000058                     nand@oper_1:
   279                           	opt callstack 0
   280  000058                     ___lbdiv@quotient:
   281                           	opt callstack 0
   282  000058                     ___lbmod@rem:
   283                           	opt callstack 0
   284                           
   285                           ; 1 bytes @ 0x3
   286  000058                     	ds	1
   287  000059                     ??_visualizar:
   288  000059                     division@oper_2:
   289                           	opt callstack 0
   290  000059                     module@oper_2:
   291                           	opt callstack 0
   292                           
   293                           ; 1 bytes @ 0x4
   294  000059                     	ds	1
   295  00005A                     division@oper_1:
   296                           	opt callstack 0
   297  00005A                     module@oper_1:
   298                           	opt callstack 0
   299                           
   300                           ; 1 bytes @ 0x5
   301  00005A                     	ds	1
   302  00005B                     division@result:
   303                           	opt callstack 0
   304  00005B                     no_es_primo@num:
   305                           	opt callstack 0
   306                           
   307                           ; 1 bytes @ 0x6
   308  00005B                     	ds	1
   309  00005C                     visualizar@SoN:
   310                           	opt callstack 0
   311  00005C                     no_es_primo@i:
   312                           	opt callstack 0
   313                           
   314                           ; 1 bytes @ 0x7
   315  00005C                     	ds	1
   316  00005D                     operar@oper_1:
   317                           	opt callstack 0
   318  00005D                     _visualizar$161:
   319                           	opt callstack 0
   320                           
   321                           ; 2 bytes @ 0x8
   322  00005D                     	ds	1
   323  00005E                     operar@oper_2:
   324                           	opt callstack 0
   325                           
   326                           ; 1 bytes @ 0x9
   327  00005E                     	ds	1
   328  00005F                     visualizar@x:
   329                           	opt callstack 0
   330  00005F                     operar@oper:
   331                           	opt callstack 0
   332                           
   333                           ; 1 bytes @ 0xA
   334  00005F                     	ds	1
   335  000060                     ??_show_error_message:
   336                           
   337                           ; 1 bytes @ 0xB
   338  000060                     	ds	1
   339  000061                     ??_main:
   340                           
   341                           ; 1 bytes @ 0xC
   342  000061                     	ds	1
   343  000062                     _main$149:
   344                           	opt callstack 0
   345                           
   346                           ; 2 bytes @ 0xD
   347  000062                     	ds	2
   348  000064                     _main$153:
   349                           	opt callstack 0
   350                           
   351                           ; 2 bytes @ 0xF
   352  000064                     	ds	2
   353  000066                     main@_SoN:
   354                           	opt callstack 0
   355                           
   356                           ; 1 bytes @ 0x11
   357  000066                     	ds	1
   358  000067                     main@_resultado:
   359                           	opt callstack 0
   360                           
   361                           ; 2 bytes @ 0x12
   362  000067                     	ds	2
   363  000069                     main@i:
   364                           	opt callstack 0
   365                           
   366                           ; 1 bytes @ 0x14
   367  000069                     	ds	1
   368  00006A                     main@x:
   369                           	opt callstack 0
   370                           
   371                           ; 1 bytes @ 0x15
   372  00006A                     	ds	1
   373  00006B                     main@oper:
   374                           	opt callstack 0
   375                           
   376                           ; 1 bytes @ 0x16
   377  00006B                     	ds	1
   378  00006C                     main@resultado:
   379                           	opt callstack 0
   380                           
   381                           ; 1 bytes @ 0x17
   382  00006C                     	ds	1
   383  00006D                     main@oper_1:
   384                           	opt callstack 0
   385                           
   386                           ; 1 bytes @ 0x18
   387  00006D                     	ds	1
   388  00006E                     main@oper_2:
   389                           	opt callstack 0
   390                           
   391                           ; 1 bytes @ 0x19
   392  00006E                     	ds	1
   393                           
   394 ;;
   395 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   396 ;;
   397 ;; *************** function _main *****************
   398 ;; Defined at:
   399 ;;		line 58 in file "main.c"
   400 ;; Parameters:    Size  Location     Type
   401 ;;		None
   402 ;; Auto vars:     Size  Location     Type
   403 ;;  _resultado      2   18[COMRAM] int 
   404 ;;  x               1   21[COMRAM] unsigned char 
   405 ;;  _SoN            1   17[COMRAM] unsigned char 
   406 ;;  i               1   20[COMRAM] unsigned char 
   407 ;;  oper_2          1   25[COMRAM] unsigned char 
   408 ;;  oper_1          1   24[COMRAM] unsigned char 
   409 ;;  resultado       1   23[COMRAM] unsigned char 
   410 ;;  oper            1   22[COMRAM] unsigned char 
   411 ;; Return value:  Size  Location     Type
   412 ;;                  1    wreg      void 
   413 ;; Registers used:
   414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   415 ;; Tracked objects:
   416 ;;		On entry : 0/0
   417 ;;		On exit  : 0/0
   418 ;;		Unchanged: 0/0
   419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   420 ;;      Params:         0       0       0       0       0       0       0
   421 ;;      Locals:        13       0       0       0       0       0       0
   422 ;;      Temps:          1       0       0       0       0       0       0
   423 ;;      Totals:        14       0       0       0       0       0       0
   424 ;;Total ram usage:       14 bytes
   425 ;; Hardware stack levels required when called:    4
   426 ;; This function calls:
   427 ;;		_init_config
   428 ;;		_operar
   429 ;;		_show_error_message
   430 ;;		_visualizar
   431 ;; This function is called by:
   432 ;;		Startup code after reset
   433 ;; This function uses a non-reentrant model
   434 ;;
   435                           
   436                           	psect	text0
   437  003DAC                     __ptext0:
   438                           	opt callstack 0
   439  003DAC                     _main:
   440                           	opt callstack 27
   441  003DAC  FFFF               	dw	65535	; assembler added errata NOP
   442                           
   443                           ;main.c: 59: char oper_1;;main.c: 60: char oper_2;;main.c: 61: char oper;;main.c: 62: ch
      +                          ar resultado;;main.c: 64: init_config();
   444  003DAE  ECC2  F01C         	call	_init_config	;wreg free
   445  003DB2                     l1459:
   446  003DB2  FFFF               	dw	65535	; assembler added errata NOP
   447                           
   448                           ;main.c: 66: oper_1 = PORTB>>4;
   449  003DB4  3881               	swapf	129,w,c	;volatile
   450  003DB6  0B0F               	andlw	15
   451  003DB8  6E6D               	movwf	main@oper_1^0,c
   452  003DBA                     
   453                           ;main.c: 67: oper_2 = PORTB&0X0F;
   454  003DBA  5081               	movf	129,w,c	;volatile
   455  003DBC  0B0F               	andlw	15
   456  003DBE  6E6E               	movwf	main@oper_2^0,c
   457  003DC0                     
   458                           ;main.c: 68: oper = PORTC&0X0F;
   459  003DC0  5082               	movf	130,w,c	;volatile
   460  003DC2  0B0F               	andlw	15
   461  003DC4  6E6B               	movwf	main@oper^0,c
   462  003DC6                     
   463                           ;main.c: 71: for (char i = 0; i < 200; i++) {
   464  003DC6  0E00               	movlw	0
   465  003DC8  6E69               	movwf	main@i^0,c
   466  003DCA  EFC8  F01F         	goto	l1523
   467  003DCE                     l1471:
   468  003DCE  FFFF               	dw	65535	; assembler added errata NOP
   469                           
   470                           ;main.c: 74: resultado = oper_1 < oper_2 ? operar(oper, oper_2, oper_1) : operar(oper, o
      +                          per_1, oper_2);
   471  003DD0  506E               	movf	main@oper_2^0,w,c
   472  003DD2  5C6D               	subwf	main@oper_1^0,w,c
   473  003DD4  A0D8               	btfss	status,0,c
   474  003DD6  EFEF  F01E         	goto	u331
   475  003DDA  EFF2  F01E         	goto	u330
   476  003DDE                     u331:
   477  003DDE  FFFF               	dw	65535	; assembler added errata NOP
   478  003DE0  EF00  F01F         	goto	l1475
   479  003DE4                     u330:
   480  003DE4  FFFF               	dw	65535	; assembler added errata NOP
   481  003DE6  C06D  F05D         	movff	main@oper_1,operar@oper_1
   482  003DEA  C06E  F05E         	movff	main@oper_2,operar@oper_2
   483  003DEE  506B               	movf	main@oper^0,w,c
   484  003DF0  EC2F  F01E         	call	_operar
   485  003DF4  6E61               	movwf	??_main^0,c
   486  003DF6  5061               	movf	??_main^0,w,c
   487  003DF8  6E62               	movwf	_main$149^0,c
   488  003DFA  6A63               	clrf	(_main$149+1)^0,c
   489  003DFC  EF0C  F01F         	goto	l1477
   490  003E00                     l1475:
   491  003E00  FFFF               	dw	65535	; assembler added errata NOP
   492  003E02  C06E  F05D         	movff	main@oper_2,operar@oper_1
   493  003E06  C06D  F05E         	movff	main@oper_1,operar@oper_2
   494  003E0A  506B               	movf	main@oper^0,w,c
   495  003E0C  EC2F  F01E         	call	_operar
   496  003E10  6E61               	movwf	??_main^0,c
   497  003E12  5061               	movf	??_main^0,w,c
   498  003E14  6E62               	movwf	_main$149^0,c
   499  003E16  6A63               	clrf	(_main$149+1)^0,c
   500  003E18                     l1477:
   501  003E18  FFFF               	dw	65535	; assembler added errata NOP
   502  003E1A  C062  F06C         	movff	_main$149,main@resultado
   503  003E1E                     
   504                           ;main.c: 75: char x = 0;
   505  003E1E  0E00               	movlw	0
   506  003E20  6E6A               	movwf	main@x^0,c
   507  003E22                     
   508                           ;main.c: 76: if (oper_1 < oper_2) {
   509  003E22  506E               	movf	main@oper_2^0,w,c
   510  003E24  5C6D               	subwf	main@oper_1^0,w,c
   511  003E26  B0D8               	btfsc	status,0,c
   512  003E28  EF18  F01F         	goto	u341
   513  003E2C  EF1B  F01F         	goto	u340
   514  003E30                     u341:
   515  003E30  FFFF               	dw	65535	; assembler added errata NOP
   516  003E32  EF27  F01F         	goto	l1487
   517  003E36                     u340:
   518  003E36  FFFF               	dw	65535	; assembler added errata NOP
   519  003E38                     
   520                           ;main.c: 77: visualizar('s', 1, x, 1);
   521  003E38  0E01               	movlw	1
   522  003E3A  6E56               	movwf	visualizar@position^0,c
   523  003E3C  0E00               	movlw	0
   524  003E3E  6E57               	movwf	visualizar@from^0,c
   525  003E40  0E01               	movlw	1
   526  003E42  6E58               	movwf	visualizar@enable^0,c
   527  003E44  0E73               	movlw	115
   528  003E46  ECC3  F01D         	call	_visualizar
   529  003E4A                     
   530                           ;main.c: 78: x += 3;
   531  003E4A  0E03               	movlw	3
   532  003E4C  266A               	addwf	main@x^0,f,c
   533  003E4E                     l1487:
   534  003E4E  FFFF               	dw	65535	; assembler added errata NOP
   535                           
   536                           ;main.c: 79: };main.c: 81: visualizar('n', resultado, x, 1);
   537  003E50  C06C  F056         	movff	main@resultado,visualizar@position
   538  003E54  C06A  F057         	movff	main@x,visualizar@from
   539  003E58  0E01               	movlw	1
   540  003E5A  6E58               	movwf	visualizar@enable^0,c
   541  003E5C  0E6E               	movlw	110
   542  003E5E  ECC3  F01D         	call	_visualizar
   543                           
   544                           ;main.c: 82: break;
   545  003E62  EFF0  F01F         	goto	l1525
   546  003E66                     l1489:
   547  003E66  FFFF               	dw	65535	; assembler added errata NOP
   548                           
   549                           ;main.c: 84: case 4:;main.c: 85: if (oper_2 == 0) {
   550  003E68  506E               	movf	main@oper_2^0,w,c
   551  003E6A  A4D8               	btfss	status,2,c
   552  003E6C  EF3A  F01F         	goto	u351
   553  003E70  EF3D  F01F         	goto	u350
   554  003E74                     u351:
   555  003E74  FFFF               	dw	65535	; assembler added errata NOP
   556  003E76  EF42  F01F         	goto	l1493
   557  003E7A                     u350:
   558  003E7A  FFFF               	dw	65535	; assembler added errata NOP
   559  003E7C                     
   560                           ;main.c: 86: show_error_message();
   561  003E7C  EC59  F01D         	call	_show_error_message	;wreg free
   562                           
   563                           ;main.c: 87: } else {
   564  003E80  EFF0  F01F         	goto	l1525
   565  003E84                     l1493:
   566  003E84  FFFF               	dw	65535	; assembler added errata NOP
   567                           
   568                           ;main.c: 88: resultado = operar(oper, oper_1, oper_2);
   569  003E86  C06D  F05D         	movff	main@oper_1,operar@oper_1
   570  003E8A  C06E  F05E         	movff	main@oper_2,operar@oper_2
   571  003E8E  506B               	movf	main@oper^0,w,c
   572  003E90  EC2F  F01E         	call	_operar
   573  003E94  6E6C               	movwf	main@resultado^0,c
   574  003E96                     
   575                           ;main.c: 89: visualizar('n', resultado, 0, 1);
   576  003E96  C06C  F056         	movff	main@resultado,visualizar@position
   577  003E9A  0E00               	movlw	0
   578  003E9C  6E57               	movwf	visualizar@from^0,c
   579  003E9E  0E01               	movlw	1
   580  003EA0  6E58               	movwf	visualizar@enable^0,c
   581  003EA2  0E6E               	movlw	110
   582  003EA4  ECC3  F01D         	call	_visualizar
   583  003EA8  EFF0  F01F         	goto	l1525
   584  003EAC                     l94:
   585  003EAC  FFFF               	dw	65535	; assembler added errata NOP
   586  003EAE                     l1497:
   587  003EAE  FFFF               	dw	65535	; assembler added errata NOP
   588                           
   589                           ;main.c: 93: case 6:;main.c: 94: case 7:;main.c: 95: case 8:;main.c: 96: resultado = ope
      +                          rar(oper, oper_1, oper_2);
   590  003EB0  C06D  F05D         	movff	main@oper_1,operar@oper_1
   591  003EB4  C06E  F05E         	movff	main@oper_2,operar@oper_2
   592  003EB8  506B               	movf	main@oper^0,w,c
   593  003EBA  EC2F  F01E         	call	_operar
   594  003EBE  6E6C               	movwf	main@resultado^0,c
   595  003EC0                     
   596                           ;main.c: 97: int _resultado = resultado&0X0F;
   597  003EC0  C06C  F061         	movff	main@resultado,??_main
   598  003EC4  0E0F               	movlw	15
   599  003EC6  1661               	andwf	??_main^0,f,c
   600  003EC8  5061               	movf	??_main^0,w,c
   601  003ECA  6E67               	movwf	main@_resultado^0,c
   602  003ECC  6A68               	clrf	(main@_resultado+1)^0,c
   603  003ECE                     
   604                           ;main.c: 98: visualizar('n', _resultado, 0, 1);
   605  003ECE  C067  F056         	movff	main@_resultado,visualizar@position
   606  003ED2  0E00               	movlw	0
   607  003ED4  6E57               	movwf	visualizar@from^0,c
   608  003ED6  0E01               	movlw	1
   609  003ED8  6E58               	movwf	visualizar@enable^0,c
   610  003EDA  0E6E               	movlw	110
   611  003EDC  ECC3  F01D         	call	_visualizar
   612                           
   613                           ;main.c: 99: break;
   614  003EE0  EFF0  F01F         	goto	l1525
   615  003EE4                     l1503:
   616  003EE4  FFFF               	dw	65535	; assembler added errata NOP
   617                           
   618                           ;main.c: 101: case 10:;main.c: 102: resultado = operar(oper, oper_1, oper_2);
   619  003EE6  C06D  F05D         	movff	main@oper_1,operar@oper_1
   620  003EEA  C06E  F05E         	movff	main@oper_2,operar@oper_2
   621  003EEE  506B               	movf	main@oper^0,w,c
   622  003EF0  EC2F  F01E         	call	_operar
   623  003EF4  6E6C               	movwf	main@resultado^0,c
   624  003EF6                     
   625                           ;main.c: 103: int _resultado = resultado ? 9 : 15;
   626  003EF6  506C               	movf	main@resultado^0,w,c
   627  003EF8  A4D8               	btfss	status,2,c
   628  003EFA  EF81  F01F         	goto	u361
   629  003EFE  EF84  F01F         	goto	u360
   630  003F02                     u361:
   631  003F02  FFFF               	dw	65535	; assembler added errata NOP
   632  003F04  EF8B  F01F         	goto	l1509
   633  003F08                     u360:
   634  003F08  FFFF               	dw	65535	; assembler added errata NOP
   635  003F0A  0E00               	movlw	0
   636  003F0C  6E68               	movwf	(main@_resultado+1)^0,c
   637  003F0E  0E0F               	movlw	15
   638  003F10  6E67               	movwf	main@_resultado^0,c
   639  003F12  EF90  F01F         	goto	l101
   640  003F16                     l1509:
   641  003F16  FFFF               	dw	65535	; assembler added errata NOP
   642  003F18  0E00               	movlw	0
   643  003F1A  6E68               	movwf	(main@_resultado+1)^0,c
   644  003F1C  0E09               	movlw	9
   645  003F1E  6E67               	movwf	main@_resultado^0,c
   646  003F20                     l101:
   647  003F20  FFFF               	dw	65535	; assembler added errata NOP
   648                           
   649                           ;main.c: 104: char _SoN = resultado ? 's' : 'n';
   650  003F22  506C               	movf	main@resultado^0,w,c
   651  003F24  A4D8               	btfss	status,2,c
   652  003F26  EF97  F01F         	goto	u371
   653  003F2A  EF9A  F01F         	goto	u370
   654  003F2E                     u371:
   655  003F2E  FFFF               	dw	65535	; assembler added errata NOP
   656  003F30  EFA1  F01F         	goto	l1513
   657  003F34                     u370:
   658  003F34  FFFF               	dw	65535	; assembler added errata NOP
   659  003F36  0E00               	movlw	0
   660  003F38  6E65               	movwf	(_main$153+1)^0,c
   661  003F3A  0E6E               	movlw	110
   662  003F3C  6E64               	movwf	_main$153^0,c
   663  003F3E  EFA6  F01F         	goto	l1515
   664  003F42                     l1513:
   665  003F42  FFFF               	dw	65535	; assembler added errata NOP
   666  003F44  0E00               	movlw	0
   667  003F46  6E65               	movwf	(_main$153+1)^0,c
   668  003F48  0E73               	movlw	115
   669  003F4A  6E64               	movwf	_main$153^0,c
   670  003F4C                     l1515:
   671  003F4C  FFFF               	dw	65535	; assembler added errata NOP
   672  003F4E  C064  F066         	movff	_main$153,main@_SoN
   673  003F52                     
   674                           ;main.c: 105: visualizar(_SoN, _resultado, 0, 1);
   675  003F52  C067  F056         	movff	main@_resultado,visualizar@position
   676  003F56  0E00               	movlw	0
   677  003F58  6E57               	movwf	visualizar@from^0,c
   678  003F5A  0E01               	movlw	1
   679  003F5C  6E58               	movwf	visualizar@enable^0,c
   680  003F5E  5066               	movf	main@_SoN^0,w,c
   681  003F60  ECC3  F01D         	call	_visualizar
   682                           
   683                           ;main.c: 106: break;
   684  003F64  EFF0  F01F         	goto	l1525
   685  003F68                     l1519:
   686  003F68  FFFF               	dw	65535	; assembler added errata NOP
   687                           
   688                           ;main.c: 108: resultado = operar(oper, oper_1, oper_2);
   689  003F6A  C06D  F05D         	movff	main@oper_1,operar@oper_1
   690  003F6E  C06E  F05E         	movff	main@oper_2,operar@oper_2
   691  003F72  506B               	movf	main@oper^0,w,c
   692  003F74  EC2F  F01E         	call	_operar
   693  003F78  6E6C               	movwf	main@resultado^0,c
   694  003F7A                     
   695                           ;main.c: 109: visualizar('n', resultado, 0, 1);
   696  003F7A  C06C  F056         	movff	main@resultado,visualizar@position
   697  003F7E  0E00               	movlw	0
   698  003F80  6E57               	movwf	visualizar@from^0,c
   699  003F82  0E01               	movlw	1
   700  003F84  6E58               	movwf	visualizar@enable^0,c
   701  003F86  0E6E               	movlw	110
   702  003F88  ECC3  F01D         	call	_visualizar
   703                           
   704                           ;main.c: 110: }
   705  003F8C  EFF0  F01F         	goto	l1525
   706  003F90                     l1523:
   707  003F90  FFFF               	dw	65535	; assembler added errata NOP
   708  003F92  506B               	movf	main@oper^0,w,c
   709                           
   710                           ; Switch size 1, requested type "simple"
   711                           ; Number of cases is 9, Range of values is 1 to 10
   712                           ; switch strategies available:
   713                           ; Name         Instructions Cycles
   714                           ; simple_byte           28    15 (average)
   715                           ;	Chosen strategy is simple_byte
   716  003F94  0A01               	xorlw	1	; case 1
   717  003F96  B4D8               	btfsc	status,2,c
   718  003F98  EFE7  F01E         	goto	l1471
   719  003F9C  0A02               	xorlw	2	; case 3
   720  003F9E  B4D8               	btfsc	status,2,c
   721  003FA0  EF33  F01F         	goto	l1489
   722  003FA4  0A07               	xorlw	7	; case 4
   723  003FA6  B4D8               	btfsc	status,2,c
   724  003FA8  EF33  F01F         	goto	l1489
   725  003FAC  0A01               	xorlw	1	; case 5
   726  003FAE  B4D8               	btfsc	status,2,c
   727  003FB0  EF56  F01F         	goto	l94
   728  003FB4  0A03               	xorlw	3	; case 6
   729  003FB6  B4D8               	btfsc	status,2,c
   730  003FB8  EF57  F01F         	goto	l1497
   731  003FBC  0A01               	xorlw	1	; case 7
   732  003FBE  B4D8               	btfsc	status,2,c
   733  003FC0  EF57  F01F         	goto	l1497
   734  003FC4  0A0F               	xorlw	15	; case 8
   735  003FC6  B4D8               	btfsc	status,2,c
   736  003FC8  EF57  F01F         	goto	l1497
   737  003FCC  0A01               	xorlw	1	; case 9
   738  003FCE  B4D8               	btfsc	status,2,c
   739  003FD0  EF72  F01F         	goto	l1503
   740  003FD4  0A03               	xorlw	3	; case 10
   741  003FD6  B4D8               	btfsc	status,2,c
   742  003FD8  EF72  F01F         	goto	l1503
   743  003FDC  EFB4  F01F         	goto	l1519
   744  003FE0                     l1525:
   745  003FE0  FFFF               	dw	65535	; assembler added errata NOP
   746  003FE2  2A69               	incf	main@i^0,f,c
   747  003FE4  0EC7               	movlw	199
   748  003FE6  6469               	cpfsgt	main@i^0,c
   749  003FE8  EFF8  F01F         	goto	u381
   750  003FEC  EFFB  F01F         	goto	u380
   751  003FF0                     u381:
   752  003FF0  FFFF               	dw	65535	; assembler added errata NOP
   753  003FF2  EFC8  F01F         	goto	l1523
   754  003FF6                     u380:
   755  003FF6  FFFF               	dw	65535	; assembler added errata NOP
   756  003FF8  EFD9  F01E         	goto	l1459
   757  003FFC  EF01  F000         	goto	start
   758  004000                     __end_of_main:
   759                           	opt callstack 0
   760                           
   761 ;; *************** function _show_error_message *****************
   762 ;; Defined at:
   763 ;;		line 169 in file "main.c"
   764 ;; Parameters:    Size  Location     Type
   765 ;;		None
   766 ;; Auto vars:     Size  Location     Type
   767 ;;		None
   768 ;; Return value:  Size  Location     Type
   769 ;;                  1    wreg      void 
   770 ;; Registers used:
   771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   772 ;; Tracked objects:
   773 ;;		On entry : 0/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   777 ;;      Params:         0       0       0       0       0       0       0
   778 ;;      Locals:         0       0       0       0       0       0       0
   779 ;;      Temps:          1       0       0       0       0       0       0
   780 ;;      Totals:         1       0       0       0       0       0       0
   781 ;;Total ram usage:        1 bytes
   782 ;; Hardware stack levels used:    1
   783 ;; Hardware stack levels required when called:    2
   784 ;; This function calls:
   785 ;;		_visualizar
   786 ;; This function is called by:
   787 ;;		_main
   788 ;; This function uses a non-reentrant model
   789 ;;
   790                           
   791                           	psect	text1
   792  003AB2                     __ptext1:
   793                           	opt callstack 0
   794  003AB2                     _show_error_message:
   795                           	opt callstack 0
   796  003AB2  FFFF               	dw	65535	; assembler added errata NOP
   797  003AB4                     
   798                           ;main.c: 170: visualizar('n', 14, 0, 1);
   799  003AB4  0E0E               	movlw	14
   800  003AB6  6E56               	movwf	visualizar@position^0,c
   801  003AB8  0E00               	movlw	0
   802  003ABA  6E57               	movwf	visualizar@from^0,c
   803  003ABC  0E01               	movlw	1
   804  003ABE  6E58               	movwf	visualizar@enable^0,c
   805  003AC0  0E6E               	movlw	110
   806  003AC2  ECC3  F01D         	call	_visualizar
   807                           
   808                           ;main.c: 171: visualizar('s', 11, 4, 1);
   809  003AC6  0E0B               	movlw	11
   810  003AC8  6E56               	movwf	visualizar@position^0,c
   811  003ACA  0E04               	movlw	4
   812  003ACC  6E57               	movwf	visualizar@from^0,c
   813  003ACE  0E01               	movlw	1
   814  003AD0  6E58               	movwf	visualizar@enable^0,c
   815  003AD2  0E73               	movlw	115
   816  003AD4  ECC3  F01D         	call	_visualizar
   817                           
   818                           ;main.c: 172: visualizar('n', 14, 0, 2);
   819  003AD8  0E0E               	movlw	14
   820  003ADA  6E56               	movwf	visualizar@position^0,c
   821  003ADC  0E00               	movlw	0
   822  003ADE  6E57               	movwf	visualizar@from^0,c
   823  003AE0  0E02               	movlw	2
   824  003AE2  6E58               	movwf	visualizar@enable^0,c
   825  003AE4  0E6E               	movlw	110
   826  003AE6  ECC3  F01D         	call	_visualizar
   827                           
   828                           ;main.c: 173: visualizar('s', 11, 4, 2);
   829  003AEA  0E0B               	movlw	11
   830  003AEC  6E56               	movwf	visualizar@position^0,c
   831  003AEE  0E04               	movlw	4
   832  003AF0  6E57               	movwf	visualizar@from^0,c
   833  003AF2  0E02               	movlw	2
   834  003AF4  6E58               	movwf	visualizar@enable^0,c
   835  003AF6  0E73               	movlw	115
   836  003AF8  ECC3  F01D         	call	_visualizar
   837  003AFC                     
   838                           ;main.c: 174: _delay((unsigned long)((5)*(4000000/4000.0)));
   839  003AFC  0E05               	movlw	5
   840  003AFE  6E60               	movwf	??_show_error_message^0,c
   841  003B00  0EDF               	movlw	223
   842  003B02                     u397:
   843  003B02  FFFF               	dw	65535	; errata NOP
   844  003B04  2EE8               	decfsz	wreg,f,c
   845  003B06  D7FD               	bra	u397
   846  003B08  2E60               	decfsz	??_show_error_message^0,f,c
   847  003B0A  D7FB               	bra	u397
   848  003B0C  0012               	return		;funcret
   849  003B0E  FFFF               	dw	65535	; errata NOP
   850  003B10                     __end_of_show_error_message:
   851                           	opt callstack 0
   852                           
   853 ;; *************** function _visualizar *****************
   854 ;; Defined at:
   855 ;;		line 146 in file "main.c"
   856 ;; Parameters:    Size  Location     Type
   857 ;;  SoN             1    wreg     unsigned char 
   858 ;;  position        1    1[COMRAM] unsigned char 
   859 ;;  from            1    2[COMRAM] unsigned char 
   860 ;;  enable          1    3[COMRAM] unsigned char 
   861 ;; Auto vars:     Size  Location     Type
   862 ;;  SoN             1    7[COMRAM] unsigned char 
   863 ;;  x               1   10[COMRAM] unsigned char 
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      void 
   866 ;; Registers used:
   867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   873 ;;      Params:         3       0       0       0       0       0       0
   874 ;;      Locals:         4       0       0       0       0       0       0
   875 ;;      Temps:          3       0       0       0       0       0       0
   876 ;;      Totals:        10       0       0       0       0       0       0
   877 ;;Total ram usage:       10 bytes
   878 ;; Hardware stack levels used:    1
   879 ;; Hardware stack levels required when called:    1
   880 ;; This function calls:
   881 ;;		_tolower
   882 ;; This function is called by:
   883 ;;		_main
   884 ;;		_show_error_message
   885 ;;		_see_full_operation
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           	psect	text2
   890  003B86                     __ptext2:
   891                           	opt callstack 0
   892  003B86                     _visualizar:
   893                           	opt callstack 0
   894  003B86  FFFF               	dw	65535	; assembler added errata NOP
   895                           
   896                           ;incstack = 0
   897                           ;visualizar@SoN stored from wreg
   898  003B88  6E5C               	movwf	visualizar@SoN^0,c
   899  003B8A                     
   900                           ;main.c: 147: for (char x = 0; x < 3; x++) {
   901  003B8A  0E00               	movlw	0
   902  003B8C  6E5F               	movwf	visualizar@x^0,c
   903  003B8E                     l1299:
   904  003B8E  FFFF               	dw	65535	; assembler added errata NOP
   905                           
   906                           ;main.c: 148: if (enable == 1) {
   907  003B90  0458               	decf	visualizar@enable^0,w,c
   908  003B92  A4D8               	btfss	status,2,c
   909  003B94  EFCE  F01D         	goto	u261
   910  003B98  EFD1  F01D         	goto	u260
   911  003B9C                     u261:
   912  003B9C  FFFF               	dw	65535	; assembler added errata NOP
   913  003B9E  EFD6  F01D         	goto	l117
   914  003BA2                     u260:
   915  003BA2  FFFF               	dw	65535	; assembler added errata NOP
   916  003BA4                     
   917                           ;main.c: 149: LA3 = 1;
   918  003BA4  8689               	bsf	3977,3,c	;volatile
   919                           
   920                           ;main.c: 150: LA5 = 0;
   921  003BA6  9A89               	bcf	3977,5,c	;volatile
   922                           
   923                           ;main.c: 151: } else {
   924  003BA8  EFD9  F01D         	goto	l1303
   925  003BAC                     l117:
   926  003BAC  FFFF               	dw	65535	; assembler added errata NOP
   927                           
   928                           ;main.c: 152: LA3 = 0;
   929  003BAE  9689               	bcf	3977,3,c	;volatile
   930                           
   931                           ;main.c: 153: LA5 = 1;
   932  003BB0  8A89               	bsf	3977,5,c	;volatile
   933  003BB2                     l1303:
   934  003BB2  FFFF               	dw	65535	; assembler added errata NOP
   935                           
   936                           ;main.c: 154: };main.c: 155: LATD = tolower(SoN) == 's' ? SIMBOLO[position][x] : NUMERO[
      +                          position][x];
   937  003BB4  505C               	movf	visualizar@SoN^0,w,c
   938  003BB6  ECA7  F01C         	call	_tolower
   939  003BBA  0A73               	xorlw	115
   940  003BBC  B4D8               	btfsc	status,2,c
   941  003BBE  EFE3  F01D         	goto	u271
   942  003BC2  EFE6  F01D         	goto	u270
   943  003BC6                     u271:
   944  003BC6  FFFF               	dw	65535	; assembler added errata NOP
   945  003BC8  EFFE  F01D         	goto	l1307
   946  003BCC                     u270:
   947  003BCC  FFFF               	dw	65535	; assembler added errata NOP
   948  003BCE  5056               	movf	visualizar@position^0,w,c
   949  003BD0  0D03               	mullw	3
   950  003BD2  0E01               	movlw	low _NUMERO
   951  003BD4  6E59               	movwf	??_visualizar^0,c
   952  003BD6  0E00               	movlw	high _NUMERO
   953  003BD8  6E5A               	movwf	(??_visualizar+1)^0,c
   954  003BDA  50F3               	movf	243,w,c
   955  003BDC  2659               	addwf	??_visualizar^0,f,c
   956  003BDE  50F4               	movf	244,w,c
   957  003BE0  225A               	addwfc	(??_visualizar+1)^0,f,c
   958  003BE2  505F               	movf	visualizar@x^0,w,c
   959  003BE4  2459               	addwf	??_visualizar^0,w,c
   960  003BE6  6ED9               	movwf	fsr2l,c
   961  003BE8  0E00               	movlw	0
   962  003BEA  205A               	addwfc	(??_visualizar+1)^0,w,c
   963  003BEC  6EDA               	movwf	fsr2h,c
   964  003BEE  50DF               	movf	indf2,w,c
   965  003BF0  6E5B               	movwf	(??_visualizar+2)^0,c
   966  003BF2  505B               	movf	(??_visualizar+2)^0,w,c
   967  003BF4  6E5D               	movwf	_visualizar$161^0,c
   968  003BF6  6A5E               	clrf	(_visualizar$161+1)^0,c
   969  003BF8  EF14  F01E         	goto	l1309
   970  003BFC                     l1307:
   971  003BFC  FFFF               	dw	65535	; assembler added errata NOP
   972  003BFE  5056               	movf	visualizar@position^0,w,c
   973  003C00  0D03               	mullw	3
   974  003C02  0E31               	movlw	low _SIMBOLO
   975  003C04  6E59               	movwf	??_visualizar^0,c
   976  003C06  0E00               	movlw	high _SIMBOLO
   977  003C08  6E5A               	movwf	(??_visualizar+1)^0,c
   978  003C0A  50F3               	movf	243,w,c
   979  003C0C  2659               	addwf	??_visualizar^0,f,c
   980  003C0E  50F4               	movf	244,w,c
   981  003C10  225A               	addwfc	(??_visualizar+1)^0,f,c
   982  003C12  505F               	movf	visualizar@x^0,w,c
   983  003C14  2459               	addwf	??_visualizar^0,w,c
   984  003C16  6ED9               	movwf	fsr2l,c
   985  003C18  0E00               	movlw	0
   986  003C1A  205A               	addwfc	(??_visualizar+1)^0,w,c
   987  003C1C  6EDA               	movwf	fsr2h,c
   988  003C1E  50DF               	movf	indf2,w,c
   989  003C20  6E5B               	movwf	(??_visualizar+2)^0,c
   990  003C22  505B               	movf	(??_visualizar+2)^0,w,c
   991  003C24  6E5D               	movwf	_visualizar$161^0,c
   992  003C26  6A5E               	clrf	(_visualizar$161+1)^0,c
   993  003C28                     l1309:
   994  003C28  FFFF               	dw	65535	; assembler added errata NOP
   995  003C2A  C05D  FF8C         	movff	_visualizar$161,3980	;volatile
   996  003C2E                     
   997                           ;main.c: 156: LATE = x + from;
   998  003C2E  505F               	movf	visualizar@x^0,w,c
   999  003C30  2457               	addwf	visualizar@from^0,w,c
  1000  003C32  6E8D               	movwf	141,c	;volatile
  1001  003C34                     
  1002                           ;main.c: 157: _delay((unsigned long)((5)*(4000000/4000.0)));
  1003  003C34  0E05               	movlw	5
  1004  003C36  6E59               	movwf	??_visualizar^0,c
  1005  003C38  0EDF               	movlw	223
  1006  003C3A                     u407:
  1007  003C3A  FFFF               	dw	65535	; errata NOP
  1008  003C3C  2EE8               	decfsz	wreg,f,c
  1009  003C3E  D7FD               	bra	u407
  1010  003C40  2E59               	decfsz	??_visualizar^0,f,c
  1011  003C42  D7FB               	bra	u407
  1012  003C44  2A5F               	incf	visualizar@x^0,f,c
  1013  003C46  0E02               	movlw	2
  1014  003C48  645F               	cpfsgt	visualizar@x^0,c
  1015  003C4A  EF29  F01E         	goto	u281
  1016  003C4E  EF2C  F01E         	goto	u280
  1017  003C52                     u281:
  1018  003C52  FFFF               	dw	65535	; assembler added errata NOP
  1019  003C54  EFC7  F01D         	goto	l1299
  1020  003C58                     u280:
  1021  003C58  FFFF               	dw	65535	; assembler added errata NOP
  1022  003C5A  0012               	return		;funcret
  1023  003C5C  FFFF               	dw	65535	; errata NOP
  1024  003C5E                     __end_of_visualizar:
  1025                           	opt callstack 0
  1026                           
  1027 ;; *************** function _tolower *****************
  1028 ;; Defined at:
  1029 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\tolower.c"
  1030 ;; Parameters:    Size  Location     Type
  1031 ;;  c               1    wreg     unsigned char 
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;  c               1    0[COMRAM] unsigned char 
  1034 ;; Return value:  Size  Location     Type
  1035 ;;                  1    wreg      unsigned char 
  1036 ;; Registers used:
  1037 ;;		wreg, status,2, status,0
  1038 ;; Tracked objects:
  1039 ;;		On entry : 0/0
  1040 ;;		On exit  : 0/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1043 ;;      Params:         0       0       0       0       0       0       0
  1044 ;;      Locals:         1       0       0       0       0       0       0
  1045 ;;      Temps:          0       0       0       0       0       0       0
  1046 ;;      Totals:         1       0       0       0       0       0       0
  1047 ;;Total ram usage:        1 bytes
  1048 ;; Hardware stack levels used:    1
  1049 ;; This function calls:
  1050 ;;		Nothing
  1051 ;; This function is called by:
  1052 ;;		_visualizar
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           	psect	text3
  1057  00394E                     __ptext3:
  1058                           	opt callstack 0
  1059  00394E                     _tolower:
  1060                           	opt callstack 0
  1061  00394E  FFFF               	dw	65535	; assembler added errata NOP
  1062                           
  1063                           ;incstack = 0
  1064                           ;tolower@c stored from wreg
  1065  003950  6E55               	movwf	tolower@c^0,c
  1066  003952  0E5B               	movlw	91
  1067  003954  6055               	cpfslt	tolower@c^0,c
  1068  003956  EFAF  F01C         	goto	u211
  1069  00395A  EFB2  F01C         	goto	u210
  1070  00395E                     u211:
  1071  00395E  FFFF               	dw	65535	; assembler added errata NOP
  1072  003960  EFBE  F01C         	goto	l1255
  1073  003964                     u210:
  1074  003964  FFFF               	dw	65535	; assembler added errata NOP
  1075  003966  0E40               	movlw	64
  1076  003968  6455               	cpfsgt	tolower@c^0,c
  1077  00396A  EFB9  F01C         	goto	u221
  1078  00396E  EFBC  F01C         	goto	u220
  1079  003972                     u221:
  1080  003972  FFFF               	dw	65535	; assembler added errata NOP
  1081  003974  EFBE  F01C         	goto	l1255
  1082  003978                     u220:
  1083  003978  FFFF               	dw	65535	; assembler added errata NOP
  1084  00397A  8A55               	bsf	tolower@c^0,5,c
  1085  00397C                     l1255:
  1086  00397C  FFFF               	dw	65535	; assembler added errata NOP
  1087  00397E  5055               	movf	tolower@c^0,w,c
  1088  003980  0012               	return		;funcret
  1089  003982  FFFF               	dw	65535	; errata NOP
  1090  003984                     __end_of_tolower:
  1091                           	opt callstack 0
  1092                           
  1093 ;; *************** function _operar *****************
  1094 ;; Defined at:
  1095 ;;		line 177 in file "main.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;  oper            1    wreg     unsigned char 
  1098 ;;  oper_1          1    8[COMRAM] unsigned char 
  1099 ;;  oper_2          1    9[COMRAM] unsigned char 
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;  oper            1   10[COMRAM] unsigned char 
  1102 ;; Return value:  Size  Location     Type
  1103 ;;                  1    wreg      unsigned char 
  1104 ;; Registers used:
  1105 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1106 ;; Tracked objects:
  1107 ;;		On entry : 0/0
  1108 ;;		On exit  : 0/0
  1109 ;;		Unchanged: 0/0
  1110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1111 ;;      Params:         2       0       0       0       0       0       0
  1112 ;;      Locals:         1       0       0       0       0       0       0
  1113 ;;      Temps:          0       0       0       0       0       0       0
  1114 ;;      Totals:         3       0       0       0       0       0       0
  1115 ;;Total ram usage:        3 bytes
  1116 ;; Hardware stack levels used:    1
  1117 ;; Hardware stack levels required when called:    3
  1118 ;; This function calls:
  1119 ;;		_and
  1120 ;;		_division
  1121 ;;		_module
  1122 ;;		_multi
  1123 ;;		_nand
  1124 ;;		_no_es_primo
  1125 ;;		_or
  1126 ;;		_resta
  1127 ;;		_suma
  1128 ;;		_xor
  1129 ;; This function is called by:
  1130 ;;		_main
  1131 ;; This function uses a non-reentrant model
  1132 ;;
  1133                           
  1134                           	psect	text4
  1135  003C5E                     __ptext4:
  1136                           	opt callstack 0
  1137  003C5E                     _operar:
  1138                           	opt callstack 0
  1139  003C5E  FFFF               	dw	65535	; assembler added errata NOP
  1140                           
  1141                           ;incstack = 0
  1142                           ;operar@oper stored from wreg
  1143  003C60  6E5F               	movwf	operar@oper^0,c
  1144  003C62                     
  1145                           ;main.c: 178: switch (oper) {
  1146  003C62  EFA3  F01E         	goto	l1451
  1147  003C66                     l1375:
  1148  003C66  FFFF               	dw	65535	; assembler added errata NOP
  1149                           
  1150                           ;main.c: 180: return suma(oper_1, oper_2);
  1151  003C68  C05E  F055         	movff	operar@oper_2,suma@oper_2
  1152  003C6C  505D               	movf	operar@oper_1^0,w,c
  1153  003C6E  EC61  F01C         	call	_suma
  1154  003C72  EFD3  F01E         	goto	l134
  1155  003C76                     l1381:
  1156  003C76  FFFF               	dw	65535	; assembler added errata NOP
  1157                           
  1158                           ;main.c: 183: return resta(oper_1, oper_2);
  1159  003C78  C05E  F055         	movff	operar@oper_2,resta@oper_2
  1160  003C7C  505D               	movf	operar@oper_1^0,w,c
  1161  003C7E  EC5B  F01C         	call	_resta
  1162  003C82  EFD3  F01E         	goto	l134
  1163  003C86                     l1387:
  1164  003C86  FFFF               	dw	65535	; assembler added errata NOP
  1165                           
  1166                           ;main.c: 186: return multi(oper_1, oper_2);
  1167  003C88  C05E  F055         	movff	operar@oper_2,multi@oper_2
  1168  003C8C  505D               	movf	operar@oper_1^0,w,c
  1169  003C8E  EC6D  F01C         	call	_multi
  1170  003C92  EFD3  F01E         	goto	l134
  1171  003C96                     l1393:
  1172  003C96  FFFF               	dw	65535	; assembler added errata NOP
  1173                           
  1174                           ;main.c: 189: return division(oper_1, oper_2);
  1175  003C98  C05E  F059         	movff	operar@oper_2,division@oper_2
  1176  003C9C  505D               	movf	operar@oper_1^0,w,c
  1177  003C9E  EC87  F01C         	call	_division
  1178  003CA2  EFD3  F01E         	goto	l134
  1179  003CA6                     l1399:
  1180  003CA6  FFFF               	dw	65535	; assembler added errata NOP
  1181                           
  1182                           ;main.c: 192: return module(oper_1, oper_2);
  1183  003CA8  C05E  F059         	movff	operar@oper_2,module@oper_2
  1184  003CAC  505D               	movf	operar@oper_1^0,w,c
  1185  003CAE  EC74  F01C         	call	_module
  1186  003CB2  EFD3  F01E         	goto	l134
  1187  003CB6                     l1405:
  1188  003CB6  FFFF               	dw	65535	; assembler added errata NOP
  1189                           
  1190                           ;main.c: 195: return and(oper_1, oper_2);
  1191  003CB8  C05E  F055         	movff	operar@oper_2,and@oper_2
  1192  003CBC  505D               	movf	operar@oper_1^0,w,c
  1193  003CBE  EC4F  F01C         	call	_and
  1194  003CC2  EFD3  F01E         	goto	l134
  1195  003CC6                     l1411:
  1196  003CC6  FFFF               	dw	65535	; assembler added errata NOP
  1197                           
  1198                           ;main.c: 198: return or(oper_1, oper_2);
  1199  003CC8  C05E  F055         	movff	operar@oper_2,or@oper_2
  1200  003CCC  505D               	movf	operar@oper_1^0,w,c
  1201  003CCE  EC55  F01C         	call	_or
  1202  003CD2  EFD3  F01E         	goto	l134
  1203  003CD6                     l1417:
  1204  003CD6  FFFF               	dw	65535	; assembler added errata NOP
  1205                           
  1206                           ;main.c: 201: return nand(oper_1, oper_2);
  1207  003CD8  C05E  F057         	movff	operar@oper_2,nand@oper_2
  1208  003CDC  505D               	movf	operar@oper_1^0,w,c
  1209  003CDE  EC7D  F01C         	call	_nand
  1210  003CE2  EFD3  F01E         	goto	l134
  1211  003CE6                     l1423:
  1212  003CE6  FFFF               	dw	65535	; assembler added errata NOP
  1213                           
  1214                           ;main.c: 204: return xor(oper_1, oper_2);
  1215  003CE8  C05E  F055         	movff	operar@oper_2,xor@oper_2
  1216  003CEC  505D               	movf	operar@oper_1^0,w,c
  1217  003CEE  EC67  F01C         	call	_xor
  1218  003CF2  EFD3  F01E         	goto	l134
  1219  003CF6                     l1429:
  1220  003CF6  FFFF               	dw	65535	; assembler added errata NOP
  1221                           
  1222                           ;main.c: 207: return no_es_primo(oper_1);
  1223  003CF8  505D               	movf	operar@oper_1^0,w,c
  1224  003CFA  EC2E  F01D         	call	_no_es_primo
  1225  003CFE  EFD3  F01E         	goto	l134
  1226  003D02                     l1435:
  1227  003D02  FFFF               	dw	65535	; assembler added errata NOP
  1228                           
  1229                           ;main.c: 210: if (oper_1 == 2 && !module(oper_2, 2)) {
  1230  003D04  0E02               	movlw	2
  1231  003D06  185D               	xorwf	operar@oper_1^0,w,c
  1232  003D08  A4D8               	btfss	status,2,c
  1233  003D0A  EF89  F01E         	goto	u311
  1234  003D0E  EF8C  F01E         	goto	u310
  1235  003D12                     u311:
  1236  003D12  FFFF               	dw	65535	; assembler added errata NOP
  1237  003D14  EF9F  F01E         	goto	l1443
  1238  003D18                     u310:
  1239  003D18  FFFF               	dw	65535	; assembler added errata NOP
  1240  003D1A  0E02               	movlw	2
  1241  003D1C  6E59               	movwf	module@oper_2^0,c
  1242  003D1E  505E               	movf	operar@oper_2^0,w,c
  1243  003D20  EC74  F01C         	call	_module
  1244  003D24  0900               	iorlw	0
  1245  003D26  A4D8               	btfss	status,2,c
  1246  003D28  EF98  F01E         	goto	u321
  1247  003D2C  EF9B  F01E         	goto	u320
  1248  003D30                     u321:
  1249  003D30  FFFF               	dw	65535	; assembler added errata NOP
  1250  003D32  EF9F  F01E         	goto	l1443
  1251  003D36                     u320:
  1252  003D36  FFFF               	dw	65535	; assembler added errata NOP
  1253  003D38                     
  1254                           ;main.c: 211: return 1;
  1255  003D38  0E01               	movlw	1
  1256  003D3A  EFD3  F01E         	goto	l134
  1257  003D3E                     l1443:
  1258  003D3E  FFFF               	dw	65535	; assembler added errata NOP
  1259                           
  1260                           ;main.c: 212: };main.c: 213: return 0;
  1261  003D40  0E00               	movlw	0
  1262  003D42  EFD3  F01E         	goto	l134
  1263  003D46                     l1451:
  1264  003D46  FFFF               	dw	65535	; assembler added errata NOP
  1265  003D48  505F               	movf	operar@oper^0,w,c
  1266                           
  1267                           ; Switch size 1, requested type "simple"
  1268                           ; Number of cases is 11, Range of values is 0 to 10
  1269                           ; switch strategies available:
  1270                           ; Name         Instructions Cycles
  1271                           ; simple_byte           34    18 (average)
  1272                           ;	Chosen strategy is simple_byte
  1273  003D4A  0A00               	xorlw	0	; case 0
  1274  003D4C  B4D8               	btfsc	status,2,c
  1275  003D4E  EF33  F01E         	goto	l1375
  1276  003D52  0A01               	xorlw	1	; case 1
  1277  003D54  B4D8               	btfsc	status,2,c
  1278  003D56  EF3B  F01E         	goto	l1381
  1279  003D5A  0A03               	xorlw	3	; case 2
  1280  003D5C  B4D8               	btfsc	status,2,c
  1281  003D5E  EF43  F01E         	goto	l1387
  1282  003D62  0A01               	xorlw	1	; case 3
  1283  003D64  B4D8               	btfsc	status,2,c
  1284  003D66  EF4B  F01E         	goto	l1393
  1285  003D6A  0A07               	xorlw	7	; case 4
  1286  003D6C  B4D8               	btfsc	status,2,c
  1287  003D6E  EF53  F01E         	goto	l1399
  1288  003D72  0A01               	xorlw	1	; case 5
  1289  003D74  B4D8               	btfsc	status,2,c
  1290  003D76  EF5B  F01E         	goto	l1405
  1291  003D7A  0A03               	xorlw	3	; case 6
  1292  003D7C  B4D8               	btfsc	status,2,c
  1293  003D7E  EF63  F01E         	goto	l1411
  1294  003D82  0A01               	xorlw	1	; case 7
  1295  003D84  B4D8               	btfsc	status,2,c
  1296  003D86  EF6B  F01E         	goto	l1417
  1297  003D8A  0A0F               	xorlw	15	; case 8
  1298  003D8C  B4D8               	btfsc	status,2,c
  1299  003D8E  EF73  F01E         	goto	l1423
  1300  003D92  0A01               	xorlw	1	; case 9
  1301  003D94  B4D8               	btfsc	status,2,c
  1302  003D96  EF7B  F01E         	goto	l1429
  1303  003D9A  0A03               	xorlw	3	; case 10
  1304  003D9C  B4D8               	btfsc	status,2,c
  1305  003D9E  EF81  F01E         	goto	l1435
  1306  003DA2  EFD3  F01E         	goto	l134
  1307  003DA6                     l134:
  1308  003DA6  FFFF               	dw	65535	; assembler added errata NOP
  1309  003DA8  0012               	return		;funcret
  1310  003DAA  FFFF               	dw	65535	; errata NOP
  1311  003DAC                     __end_of_operar:
  1312                           	opt callstack 0
  1313                           
  1314 ;; *************** function _xor *****************
  1315 ;; Defined at:
  1316 ;;		line 253 in file "main.c"
  1317 ;; Parameters:    Size  Location     Type
  1318 ;;  oper_1          1    wreg     unsigned char 
  1319 ;;  oper_2          1    0[COMRAM] unsigned char 
  1320 ;; Auto vars:     Size  Location     Type
  1321 ;;  oper_1          1    1[COMRAM] unsigned char 
  1322 ;; Return value:  Size  Location     Type
  1323 ;;                  1    wreg      unsigned char 
  1324 ;; Registers used:
  1325 ;;		wreg, status,2, status,0
  1326 ;; Tracked objects:
  1327 ;;		On entry : 0/0
  1328 ;;		On exit  : 0/0
  1329 ;;		Unchanged: 0/0
  1330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1331 ;;      Params:         1       0       0       0       0       0       0
  1332 ;;      Locals:         1       0       0       0       0       0       0
  1333 ;;      Temps:          0       0       0       0       0       0       0
  1334 ;;      Totals:         2       0       0       0       0       0       0
  1335 ;;Total ram usage:        2 bytes
  1336 ;; Hardware stack levels used:    1
  1337 ;; This function calls:
  1338 ;;		Nothing
  1339 ;; This function is called by:
  1340 ;;		_operar
  1341 ;; This function uses a non-reentrant model
  1342 ;;
  1343                           
  1344                           	psect	text5
  1345  0038CE                     __ptext5:
  1346                           	opt callstack 0
  1347  0038CE                     _xor:
  1348                           	opt callstack 0
  1349  0038CE  FFFF               	dw	65535	; assembler added errata NOP
  1350                           
  1351                           ;incstack = 0
  1352                           ;xor@oper_1 stored from wreg
  1353  0038D0  6E56               	movwf	xor@oper_1^0,c
  1354  0038D2                     
  1355                           ;main.c: 254: return oper_1 ^ oper_2;
  1356  0038D2  5056               	movf	xor@oper_1^0,w,c
  1357  0038D4  1855               	xorwf	xor@oper_2^0,w,c
  1358  0038D6  0012               	return		;funcret
  1359  0038D8  FFFF               	dw	65535	; errata NOP
  1360  0038DA                     __end_of_xor:
  1361                           	opt callstack 0
  1362                           
  1363 ;; *************** function _suma *****************
  1364 ;; Defined at:
  1365 ;;		line 220 in file "main.c"
  1366 ;; Parameters:    Size  Location     Type
  1367 ;;  oper_1          1    wreg     unsigned char 
  1368 ;;  oper_2          1    0[COMRAM] unsigned char 
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;  oper_1          1    1[COMRAM] unsigned char 
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  1    wreg      unsigned char 
  1373 ;; Registers used:
  1374 ;;		wreg, status,2, status,0
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1380 ;;      Params:         1       0       0       0       0       0       0
  1381 ;;      Locals:         1       0       0       0       0       0       0
  1382 ;;      Temps:          0       0       0       0       0       0       0
  1383 ;;      Totals:         2       0       0       0       0       0       0
  1384 ;;Total ram usage:        2 bytes
  1385 ;; Hardware stack levels used:    1
  1386 ;; This function calls:
  1387 ;;		Nothing
  1388 ;; This function is called by:
  1389 ;;		_operar
  1390 ;; This function uses a non-reentrant model
  1391 ;;
  1392                           
  1393                           	psect	text6
  1394  0038C2                     __ptext6:
  1395                           	opt callstack 0
  1396  0038C2                     _suma:
  1397                           	opt callstack 0
  1398  0038C2  FFFF               	dw	65535	; assembler added errata NOP
  1399                           
  1400                           ;incstack = 0
  1401                           ;suma@oper_1 stored from wreg
  1402  0038C4  6E56               	movwf	suma@oper_1^0,c
  1403  0038C6                     
  1404                           ;main.c: 221: return oper_1 + oper_2;
  1405  0038C6  5056               	movf	suma@oper_1^0,w,c
  1406  0038C8  2455               	addwf	suma@oper_2^0,w,c
  1407  0038CA  0012               	return		;funcret
  1408  0038CC  FFFF               	dw	65535	; errata NOP
  1409  0038CE                     __end_of_suma:
  1410                           	opt callstack 0
  1411                           
  1412 ;; *************** function _resta *****************
  1413 ;; Defined at:
  1414 ;;		line 224 in file "main.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;  oper_1          1    wreg     unsigned char 
  1417 ;;  oper_2          1    0[COMRAM] unsigned char 
  1418 ;; Auto vars:     Size  Location     Type
  1419 ;;  oper_1          1    1[COMRAM] unsigned char 
  1420 ;; Return value:  Size  Location     Type
  1421 ;;                  1    wreg      unsigned char 
  1422 ;; Registers used:
  1423 ;;		wreg, status,2, status,0
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1429 ;;      Params:         1       0       0       0       0       0       0
  1430 ;;      Locals:         1       0       0       0       0       0       0
  1431 ;;      Temps:          0       0       0       0       0       0       0
  1432 ;;      Totals:         2       0       0       0       0       0       0
  1433 ;;Total ram usage:        2 bytes
  1434 ;; Hardware stack levels used:    1
  1435 ;; This function calls:
  1436 ;;		Nothing
  1437 ;; This function is called by:
  1438 ;;		_operar
  1439 ;; This function uses a non-reentrant model
  1440 ;;
  1441                           
  1442                           	psect	text7
  1443  0038B6                     __ptext7:
  1444                           	opt callstack 0
  1445  0038B6                     _resta:
  1446                           	opt callstack 0
  1447  0038B6  FFFF               	dw	65535	; assembler added errata NOP
  1448                           
  1449                           ;incstack = 0
  1450                           ;resta@oper_1 stored from wreg
  1451  0038B8  6E56               	movwf	resta@oper_1^0,c
  1452  0038BA                     
  1453                           ;main.c: 225: return oper_1 - oper_2;
  1454  0038BA  5055               	movf	resta@oper_2^0,w,c
  1455  0038BC  5C56               	subwf	resta@oper_1^0,w,c
  1456  0038BE  0012               	return		;funcret
  1457  0038C0  FFFF               	dw	65535	; errata NOP
  1458  0038C2                     __end_of_resta:
  1459                           	opt callstack 0
  1460                           
  1461 ;; *************** function _or *****************
  1462 ;; Defined at:
  1463 ;;		line 245 in file "main.c"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;  oper_1          1    wreg     unsigned char 
  1466 ;;  oper_2          1    0[COMRAM] unsigned char 
  1467 ;; Auto vars:     Size  Location     Type
  1468 ;;  oper_1          1    1[COMRAM] unsigned char 
  1469 ;; Return value:  Size  Location     Type
  1470 ;;                  1    wreg      unsigned char 
  1471 ;; Registers used:
  1472 ;;		wreg, status,2, status,0
  1473 ;; Tracked objects:
  1474 ;;		On entry : 0/0
  1475 ;;		On exit  : 0/0
  1476 ;;		Unchanged: 0/0
  1477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1478 ;;      Params:         1       0       0       0       0       0       0
  1479 ;;      Locals:         1       0       0       0       0       0       0
  1480 ;;      Temps:          0       0       0       0       0       0       0
  1481 ;;      Totals:         2       0       0       0       0       0       0
  1482 ;;Total ram usage:        2 bytes
  1483 ;; Hardware stack levels used:    1
  1484 ;; This function calls:
  1485 ;;		Nothing
  1486 ;; This function is called by:
  1487 ;;		_operar
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491                           	psect	text8
  1492  0038AA                     __ptext8:
  1493                           	opt callstack 0
  1494  0038AA                     _or:
  1495                           	opt callstack 0
  1496  0038AA  FFFF               	dw	65535	; assembler added errata NOP
  1497                           
  1498                           ;incstack = 0
  1499                           ;or@oper_1 stored from wreg
  1500  0038AC  6E56               	movwf	or@oper_1^0,c
  1501  0038AE                     
  1502                           ;main.c: 246: return oper_1 | oper_2;
  1503  0038AE  5056               	movf	or@oper_1^0,w,c
  1504  0038B0  1055               	iorwf	or@oper_2^0,w,c
  1505  0038B2  0012               	return		;funcret
  1506  0038B4  FFFF               	dw	65535	; errata NOP
  1507  0038B6                     __end_of_or:
  1508                           	opt callstack 0
  1509                           
  1510 ;; *************** function _no_es_primo *****************
  1511 ;; Defined at:
  1512 ;;		line 257 in file "main.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;  num             1    wreg     unsigned char 
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;  num             1    6[COMRAM] unsigned char 
  1517 ;;  i               1    7[COMRAM] unsigned char 
  1518 ;; Return value:  Size  Location     Type
  1519 ;;                  1    wreg      unsigned char 
  1520 ;; Registers used:
  1521 ;;		wreg, status,2, status,0, cstack
  1522 ;; Tracked objects:
  1523 ;;		On entry : 0/0
  1524 ;;		On exit  : 0/0
  1525 ;;		Unchanged: 0/0
  1526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1527 ;;      Params:         0       0       0       0       0       0       0
  1528 ;;      Locals:         2       0       0       0       0       0       0
  1529 ;;      Temps:          0       0       0       0       0       0       0
  1530 ;;      Totals:         2       0       0       0       0       0       0
  1531 ;;Total ram usage:        2 bytes
  1532 ;; Hardware stack levels used:    1
  1533 ;; Hardware stack levels required when called:    2
  1534 ;; This function calls:
  1535 ;;		_module
  1536 ;; This function is called by:
  1537 ;;		_operar
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541                           	psect	text9
  1542  003A5C                     __ptext9:
  1543                           	opt callstack 0
  1544  003A5C                     _no_es_primo:
  1545                           	opt callstack 0
  1546  003A5C  FFFF               	dw	65535	; assembler added errata NOP
  1547                           
  1548                           ;incstack = 0
  1549                           ;no_es_primo@num stored from wreg
  1550  003A5E  6E5B               	movwf	no_es_primo@num^0,c
  1551  003A60                     
  1552                           ;main.c: 258: for (char i = 2; i < num; i++) {
  1553  003A60  0E02               	movlw	2
  1554  003A62  6E5C               	movwf	no_es_primo@i^0,c
  1555  003A64  EF49  F01D         	goto	l1359
  1556  003A68                     l1351:
  1557  003A68  FFFF               	dw	65535	; assembler added errata NOP
  1558                           
  1559                           ;main.c: 259: if (!module(num, i)) {
  1560  003A6A  C05C  F059         	movff	no_es_primo@i,module@oper_2
  1561  003A6E  505B               	movf	no_es_primo@num^0,w,c
  1562  003A70  EC74  F01C         	call	_module
  1563  003A74  0900               	iorlw	0
  1564  003A76  A4D8               	btfss	status,2,c
  1565  003A78  EF40  F01D         	goto	u291
  1566  003A7C  EF43  F01D         	goto	u290
  1567  003A80                     u291:
  1568  003A80  FFFF               	dw	65535	; assembler added errata NOP
  1569  003A82  EF47  F01D         	goto	l1357
  1570  003A86                     u290:
  1571  003A86  FFFF               	dw	65535	; assembler added errata NOP
  1572  003A88                     
  1573                           ;main.c: 260: return 1;
  1574  003A88  0E01               	movlw	1
  1575  003A8A  EF56  F01D         	goto	l180
  1576  003A8E                     l1357:
  1577  003A8E  FFFF               	dw	65535	; assembler added errata NOP
  1578  003A90  2A5C               	incf	no_es_primo@i^0,f,c
  1579  003A92                     l1359:
  1580  003A92  FFFF               	dw	65535	; assembler added errata NOP
  1581  003A94  505B               	movf	no_es_primo@num^0,w,c
  1582  003A96  5C5C               	subwf	no_es_primo@i^0,w,c
  1583  003A98  A0D8               	btfss	status,0,c
  1584  003A9A  EF51  F01D         	goto	u301
  1585  003A9E  EF54  F01D         	goto	u300
  1586  003AA2                     u301:
  1587  003AA2  FFFF               	dw	65535	; assembler added errata NOP
  1588  003AA4  EF34  F01D         	goto	l1351
  1589  003AA8                     u300:
  1590  003AA8  FFFF               	dw	65535	; assembler added errata NOP
  1591  003AAA                     
  1592                           ;main.c: 261: };main.c: 262: };main.c: 263: return 0;
  1593  003AAA  0E00               	movlw	0
  1594  003AAC                     l180:
  1595  003AAC  FFFF               	dw	65535	; assembler added errata NOP
  1596  003AAE  0012               	return		;funcret
  1597  003AB0  FFFF               	dw	65535	; errata NOP
  1598  003AB2                     __end_of_no_es_primo:
  1599                           	opt callstack 0
  1600                           
  1601 ;; *************** function _module *****************
  1602 ;; Defined at:
  1603 ;;		line 237 in file "main.c"
  1604 ;; Parameters:    Size  Location     Type
  1605 ;;  oper_1          1    wreg     unsigned char 
  1606 ;;  oper_2          1    4[COMRAM] unsigned char 
  1607 ;; Auto vars:     Size  Location     Type
  1608 ;;  oper_1          1    5[COMRAM] unsigned char 
  1609 ;; Return value:  Size  Location     Type
  1610 ;;                  1    wreg      unsigned char 
  1611 ;; Registers used:
  1612 ;;		wreg, status,2, status,0, cstack
  1613 ;; Tracked objects:
  1614 ;;		On entry : 0/0
  1615 ;;		On exit  : 0/0
  1616 ;;		Unchanged: 0/0
  1617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1618 ;;      Params:         1       0       0       0       0       0       0
  1619 ;;      Locals:         1       0       0       0       0       0       0
  1620 ;;      Temps:          0       0       0       0       0       0       0
  1621 ;;      Totals:         2       0       0       0       0       0       0
  1622 ;;Total ram usage:        2 bytes
  1623 ;; Hardware stack levels used:    1
  1624 ;; Hardware stack levels required when called:    1
  1625 ;; This function calls:
  1626 ;;		___lbmod
  1627 ;; This function is called by:
  1628 ;;		_operar
  1629 ;;		_no_es_primo
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633                           	psect	text10
  1634  0038E8                     __ptext10:
  1635                           	opt callstack 0
  1636  0038E8                     _module:
  1637                           	opt callstack 0
  1638  0038E8  FFFF               	dw	65535	; assembler added errata NOP
  1639                           
  1640                           ;incstack = 0
  1641                           ;module@oper_1 stored from wreg
  1642  0038EA  6E5A               	movwf	module@oper_1^0,c
  1643  0038EC                     
  1644                           ;main.c: 238: return oper_1 % oper_2;
  1645  0038EC  C059  F055         	movff	module@oper_2,___lbmod@divisor
  1646  0038F0  505A               	movf	module@oper_1^0,w,c
  1647  0038F2  ECE3  F01C         	call	___lbmod
  1648  0038F6  0012               	return		;funcret
  1649  0038F8  FFFF               	dw	65535	; errata NOP
  1650  0038FA                     __end_of_module:
  1651                           	opt callstack 0
  1652                           
  1653 ;; *************** function ___lbmod *****************
  1654 ;; Defined at:
  1655 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lbmod.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;  dividend        1    wreg     unsigned char 
  1658 ;;  divisor         1    0[COMRAM] unsigned char 
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;  dividend        1    1[COMRAM] unsigned char 
  1661 ;;  rem             1    3[COMRAM] unsigned char 
  1662 ;;  counter         1    2[COMRAM] unsigned char 
  1663 ;; Return value:  Size  Location     Type
  1664 ;;                  1    wreg      unsigned char 
  1665 ;; Registers used:
  1666 ;;		wreg, status,2, status,0
  1667 ;; Tracked objects:
  1668 ;;		On entry : 0/0
  1669 ;;		On exit  : 0/0
  1670 ;;		Unchanged: 0/0
  1671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1672 ;;      Params:         1       0       0       0       0       0       0
  1673 ;;      Locals:         3       0       0       0       0       0       0
  1674 ;;      Temps:          0       0       0       0       0       0       0
  1675 ;;      Totals:         4       0       0       0       0       0       0
  1676 ;;Total ram usage:        4 bytes
  1677 ;; Hardware stack levels used:    1
  1678 ;; This function calls:
  1679 ;;		Nothing
  1680 ;; This function is called by:
  1681 ;;		_module
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685                           	psect	text11
  1686  0039C6                     __ptext11:
  1687                           	opt callstack 0
  1688  0039C6                     ___lbmod:
  1689                           	opt callstack 0
  1690  0039C6  FFFF               	dw	65535	; assembler added errata NOP
  1691                           
  1692                           ;incstack = 0
  1693                           ;___lbmod@dividend stored from wreg
  1694  0039C8  6E56               	movwf	___lbmod@dividend^0,c
  1695  0039CA  0E08               	movlw	8
  1696  0039CC  6E57               	movwf	___lbmod@counter^0,c
  1697  0039CE  0E00               	movlw	0
  1698  0039D0  6E58               	movwf	___lbmod@rem^0,c
  1699  0039D2                     l1235:
  1700  0039D2  FFFF               	dw	65535	; assembler added errata NOP
  1701  0039D4  90D8               	bcf	status,0,c
  1702  0039D6  3456               	rlcf	___lbmod@dividend^0,w,c
  1703  0039D8  3458               	rlcf	___lbmod@rem^0,w,c
  1704  0039DA  6E58               	movwf	___lbmod@rem^0,c
  1705  0039DC  90D8               	bcf	status,0,c
  1706  0039DE  3656               	rlcf	___lbmod@dividend^0,f,c
  1707  0039E0  5055               	movf	___lbmod@divisor^0,w,c
  1708  0039E2  5C58               	subwf	___lbmod@rem^0,w,c
  1709  0039E4  A0D8               	btfss	status,0,c
  1710  0039E6  EFF7  F01C         	goto	u201
  1711  0039EA  EFFA  F01C         	goto	u200
  1712  0039EE                     u201:
  1713  0039EE  FFFF               	dw	65535	; assembler added errata NOP
  1714  0039F0  EFFD  F01C         	goto	l1243
  1715  0039F4                     u200:
  1716  0039F4  FFFF               	dw	65535	; assembler added errata NOP
  1717  0039F6  5055               	movf	___lbmod@divisor^0,w,c
  1718  0039F8  5E58               	subwf	___lbmod@rem^0,f,c
  1719  0039FA                     l1243:
  1720  0039FA  FFFF               	dw	65535	; assembler added errata NOP
  1721  0039FC  2E57               	decfsz	___lbmod@counter^0,f,c
  1722  0039FE  EFE9  F01C         	goto	l1235
  1723  003A02  5058               	movf	___lbmod@rem^0,w,c
  1724  003A04  0012               	return		;funcret
  1725  003A06  FFFF               	dw	65535	; errata NOP
  1726  003A08                     __end_of___lbmod:
  1727                           	opt callstack 0
  1728                           
  1729 ;; *************** function _nand *****************
  1730 ;; Defined at:
  1731 ;;		line 249 in file "main.c"
  1732 ;; Parameters:    Size  Location     Type
  1733 ;;  oper_1          1    wreg     unsigned char 
  1734 ;;  oper_2          1    2[COMRAM] unsigned char 
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;  oper_1          1    3[COMRAM] unsigned char 
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  1    wreg      unsigned char 
  1739 ;; Registers used:
  1740 ;;		wreg, status,2, status,0, cstack
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1746 ;;      Params:         1       0       0       0       0       0       0
  1747 ;;      Locals:         1       0       0       0       0       0       0
  1748 ;;      Temps:          0       0       0       0       0       0       0
  1749 ;;      Totals:         2       0       0       0       0       0       0
  1750 ;;Total ram usage:        2 bytes
  1751 ;; Hardware stack levels used:    1
  1752 ;; Hardware stack levels required when called:    1
  1753 ;; This function calls:
  1754 ;;		_and
  1755 ;; This function is called by:
  1756 ;;		_operar
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           	psect	text12
  1761  0038FA                     __ptext12:
  1762                           	opt callstack 0
  1763  0038FA                     _nand:
  1764                           	opt callstack 0
  1765  0038FA  FFFF               	dw	65535	; assembler added errata NOP
  1766                           
  1767                           ;incstack = 0
  1768                           ;nand@oper_1 stored from wreg
  1769  0038FC  6E58               	movwf	nand@oper_1^0,c
  1770  0038FE                     
  1771                           ;main.c: 250: return ~(and(oper_1, oper_2));
  1772  0038FE  C057  F055         	movff	nand@oper_2,and@oper_2
  1773  003902  5058               	movf	nand@oper_1^0,w,c
  1774  003904  EC4F  F01C         	call	_and
  1775  003908  0AFF               	xorlw	255
  1776  00390A  0012               	return		;funcret
  1777  00390C  FFFF               	dw	65535	; errata NOP
  1778  00390E                     __end_of_nand:
  1779                           	opt callstack 0
  1780                           
  1781 ;; *************** function _and *****************
  1782 ;; Defined at:
  1783 ;;		line 241 in file "main.c"
  1784 ;; Parameters:    Size  Location     Type
  1785 ;;  oper_1          1    wreg     unsigned char 
  1786 ;;  oper_2          1    0[COMRAM] unsigned char 
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;  oper_1          1    1[COMRAM] unsigned char 
  1789 ;; Return value:  Size  Location     Type
  1790 ;;                  1    wreg      unsigned char 
  1791 ;; Registers used:
  1792 ;;		wreg, status,2, status,0
  1793 ;; Tracked objects:
  1794 ;;		On entry : 0/0
  1795 ;;		On exit  : 0/0
  1796 ;;		Unchanged: 0/0
  1797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1798 ;;      Params:         1       0       0       0       0       0       0
  1799 ;;      Locals:         1       0       0       0       0       0       0
  1800 ;;      Temps:          0       0       0       0       0       0       0
  1801 ;;      Totals:         2       0       0       0       0       0       0
  1802 ;;Total ram usage:        2 bytes
  1803 ;; Hardware stack levels used:    1
  1804 ;; This function calls:
  1805 ;;		Nothing
  1806 ;; This function is called by:
  1807 ;;		_operar
  1808 ;;		_nand
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           	psect	text13
  1813  00389E                     __ptext13:
  1814                           	opt callstack 0
  1815  00389E                     _and:
  1816                           	opt callstack 0
  1817  00389E  FFFF               	dw	65535	; assembler added errata NOP
  1818                           
  1819                           ;incstack = 0
  1820                           ;and@oper_1 stored from wreg
  1821  0038A0  6E56               	movwf	and@oper_1^0,c
  1822  0038A2                     
  1823                           ;main.c: 242: return oper_1 & oper_2;
  1824  0038A2  5056               	movf	and@oper_1^0,w,c
  1825  0038A4  1455               	andwf	and@oper_2^0,w,c
  1826  0038A6  0012               	return		;funcret
  1827  0038A8  FFFF               	dw	65535	; errata NOP
  1828  0038AA                     __end_of_and:
  1829                           	opt callstack 0
  1830                           
  1831 ;; *************** function _multi *****************
  1832 ;; Defined at:
  1833 ;;		line 228 in file "main.c"
  1834 ;; Parameters:    Size  Location     Type
  1835 ;;  oper_1          1    wreg     unsigned char 
  1836 ;;  oper_2          1    0[COMRAM] unsigned char 
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;  oper_1          1    1[COMRAM] unsigned char 
  1839 ;; Return value:  Size  Location     Type
  1840 ;;                  1    wreg      unsigned char 
  1841 ;; Registers used:
  1842 ;;		wreg, status,2, status,0, prodl, prodh
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1848 ;;      Params:         1       0       0       0       0       0       0
  1849 ;;      Locals:         1       0       0       0       0       0       0
  1850 ;;      Temps:          0       0       0       0       0       0       0
  1851 ;;      Totals:         2       0       0       0       0       0       0
  1852 ;;Total ram usage:        2 bytes
  1853 ;; Hardware stack levels used:    1
  1854 ;; This function calls:
  1855 ;;		Nothing
  1856 ;; This function is called by:
  1857 ;;		_operar
  1858 ;; This function uses a non-reentrant model
  1859 ;;
  1860                           
  1861                           	psect	text14
  1862  0038DA                     __ptext14:
  1863                           	opt callstack 0
  1864  0038DA                     _multi:
  1865                           	opt callstack 0
  1866  0038DA  FFFF               	dw	65535	; assembler added errata NOP
  1867                           
  1868                           ;incstack = 0
  1869                           ;multi@oper_1 stored from wreg
  1870  0038DC  6E56               	movwf	multi@oper_1^0,c
  1871  0038DE                     
  1872                           ;main.c: 229: return oper_1 * oper_2;
  1873  0038DE  5056               	movf	multi@oper_1^0,w,c
  1874  0038E0  0255               	mulwf	multi@oper_2^0,c
  1875  0038E2  50F3               	movf	243,w,c
  1876  0038E4  0012               	return		;funcret
  1877  0038E6  FFFF               	dw	65535	; errata NOP
  1878  0038E8                     __end_of_multi:
  1879                           	opt callstack 0
  1880                           
  1881 ;; *************** function _division *****************
  1882 ;; Defined at:
  1883 ;;		line 232 in file "main.c"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;  oper_1          1    wreg     unsigned char 
  1886 ;;  oper_2          1    4[COMRAM] unsigned char 
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;  oper_1          1    5[COMRAM] unsigned char 
  1889 ;;  result          1    6[COMRAM] unsigned char 
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  1    wreg      unsigned char 
  1892 ;; Registers used:
  1893 ;;		wreg, status,2, status,0, cstack
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1899 ;;      Params:         1       0       0       0       0       0       0
  1900 ;;      Locals:         2       0       0       0       0       0       0
  1901 ;;      Temps:          0       0       0       0       0       0       0
  1902 ;;      Totals:         3       0       0       0       0       0       0
  1903 ;;Total ram usage:        3 bytes
  1904 ;; Hardware stack levels used:    1
  1905 ;; Hardware stack levels required when called:    1
  1906 ;; This function calls:
  1907 ;;		___lbdiv
  1908 ;; This function is called by:
  1909 ;;		_operar
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913                           	psect	text15
  1914  00390E                     __ptext15:
  1915                           	opt callstack 0
  1916  00390E                     _division:
  1917                           	opt callstack 0
  1918  00390E  FFFF               	dw	65535	; assembler added errata NOP
  1919                           
  1920                           ;incstack = 0
  1921                           ;division@oper_1 stored from wreg
  1922  003910  6E5A               	movwf	division@oper_1^0,c
  1923  003912                     
  1924                           ;main.c: 233: char result = oper_1 / oper_2;
  1925  003912  C059  F055         	movff	division@oper_2,___lbdiv@divisor
  1926  003916  505A               	movf	division@oper_1^0,w,c
  1927  003918  EC88  F01D         	call	___lbdiv
  1928  00391C  6E5B               	movwf	division@result^0,c
  1929  00391E                     
  1930                           ;main.c: 234: return result;
  1931  00391E  505B               	movf	division@result^0,w,c
  1932  003920  0012               	return		;funcret
  1933  003922  FFFF               	dw	65535	; errata NOP
  1934  003924                     __end_of_division:
  1935                           	opt callstack 0
  1936                           
  1937 ;; *************** function ___lbdiv *****************
  1938 ;; Defined at:
  1939 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lbdiv.c"
  1940 ;; Parameters:    Size  Location     Type
  1941 ;;  dividend        1    wreg     unsigned char 
  1942 ;;  divisor         1    0[COMRAM] unsigned char 
  1943 ;; Auto vars:     Size  Location     Type
  1944 ;;  dividend        1    1[COMRAM] unsigned char 
  1945 ;;  quotient        1    3[COMRAM] unsigned char 
  1946 ;;  counter         1    2[COMRAM] unsigned char 
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  1    wreg      unsigned char 
  1949 ;; Registers used:
  1950 ;;		wreg, status,2, status,0
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1956 ;;      Params:         1       0       0       0       0       0       0
  1957 ;;      Locals:         3       0       0       0       0       0       0
  1958 ;;      Temps:          0       0       0       0       0       0       0
  1959 ;;      Totals:         4       0       0       0       0       0       0
  1960 ;;Total ram usage:        4 bytes
  1961 ;; Hardware stack levels used:    1
  1962 ;; This function calls:
  1963 ;;		Nothing
  1964 ;; This function is called by:
  1965 ;;		_division
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969                           	psect	text16
  1970  003B10                     __ptext16:
  1971                           	opt callstack 0
  1972  003B10                     ___lbdiv:
  1973                           	opt callstack 0
  1974  003B10  FFFF               	dw	65535	; assembler added errata NOP
  1975                           
  1976                           ;incstack = 0
  1977                           ;___lbdiv@dividend stored from wreg
  1978  003B12  6E56               	movwf	___lbdiv@dividend^0,c
  1979  003B14  0E00               	movlw	0
  1980  003B16  6E58               	movwf	___lbdiv@quotient^0,c
  1981  003B18  5055               	movf	___lbdiv@divisor^0,w,c
  1982  003B1A  B4D8               	btfsc	status,2,c
  1983  003B1C  EF92  F01D         	goto	u231
  1984  003B20  EF95  F01D         	goto	u230
  1985  003B24                     u231:
  1986  003B24  FFFF               	dw	65535	; assembler added errata NOP
  1987  003B26  EFBF  F01D         	goto	l1289
  1988  003B2A                     u230:
  1989  003B2A  FFFF               	dw	65535	; assembler added errata NOP
  1990  003B2C  0E01               	movlw	1
  1991  003B2E  6E57               	movwf	___lbdiv@counter^0,c
  1992  003B30  EF9E  F01D         	goto	l1277
  1993  003B34                     l1273:
  1994  003B34  FFFF               	dw	65535	; assembler added errata NOP
  1995  003B36  90D8               	bcf	status,0,c
  1996  003B38  3655               	rlcf	___lbdiv@divisor^0,f,c
  1997  003B3A  2A57               	incf	___lbdiv@counter^0,f,c
  1998  003B3C                     l1277:
  1999  003B3C  FFFF               	dw	65535	; assembler added errata NOP
  2000  003B3E  AE55               	btfss	___lbdiv@divisor^0,7,c
  2001  003B40  EFA4  F01D         	goto	u241
  2002  003B44  EFA7  F01D         	goto	u240
  2003  003B48                     u241:
  2004  003B48  FFFF               	dw	65535	; assembler added errata NOP
  2005  003B4A  EF9A  F01D         	goto	l1273
  2006  003B4E                     u240:
  2007  003B4E  FFFF               	dw	65535	; assembler added errata NOP
  2008  003B50                     l1279:
  2009  003B50  FFFF               	dw	65535	; assembler added errata NOP
  2010  003B52  90D8               	bcf	status,0,c
  2011  003B54  3658               	rlcf	___lbdiv@quotient^0,f,c
  2012  003B56  5055               	movf	___lbdiv@divisor^0,w,c
  2013  003B58  5C56               	subwf	___lbdiv@dividend^0,w,c
  2014  003B5A  A0D8               	btfss	status,0,c
  2015  003B5C  EFB2  F01D         	goto	u251
  2016  003B60  EFB5  F01D         	goto	u250
  2017  003B64                     u251:
  2018  003B64  FFFF               	dw	65535	; assembler added errata NOP
  2019  003B66  EFB9  F01D         	goto	l1285
  2020  003B6A                     u250:
  2021  003B6A  FFFF               	dw	65535	; assembler added errata NOP
  2022  003B6C  5055               	movf	___lbdiv@divisor^0,w,c
  2023  003B6E  5E56               	subwf	___lbdiv@dividend^0,f,c
  2024  003B70  8058               	bsf	___lbdiv@quotient^0,0,c
  2025  003B72                     l1285:
  2026  003B72  FFFF               	dw	65535	; assembler added errata NOP
  2027  003B74  90D8               	bcf	status,0,c
  2028  003B76  3255               	rrcf	___lbdiv@divisor^0,f,c
  2029  003B78  2E57               	decfsz	___lbdiv@counter^0,f,c
  2030  003B7A  EFA8  F01D         	goto	l1279
  2031  003B7E                     l1289:
  2032  003B7E  FFFF               	dw	65535	; assembler added errata NOP
  2033  003B80  5058               	movf	___lbdiv@quotient^0,w,c
  2034  003B82  0012               	return		;funcret
  2035  003B84  FFFF               	dw	65535	; errata NOP
  2036  003B86                     __end_of___lbdiv:
  2037                           	opt callstack 0
  2038                           
  2039 ;; *************** function _init_config *****************
  2040 ;; Defined at:
  2041 ;;		line 115 in file "main.c"
  2042 ;; Parameters:    Size  Location     Type
  2043 ;;		None
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;		None
  2046 ;; Return value:  Size  Location     Type
  2047 ;;                  1    wreg      void 
  2048 ;; Registers used:
  2049 ;;		wreg, status,2
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 0/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2055 ;;      Params:         0       0       0       0       0       0       0
  2056 ;;      Locals:         0       0       0       0       0       0       0
  2057 ;;      Temps:          0       0       0       0       0       0       0
  2058 ;;      Totals:         0       0       0       0       0       0       0
  2059 ;;Total ram usage:        0 bytes
  2060 ;; Hardware stack levels used:    1
  2061 ;; This function calls:
  2062 ;;		Nothing
  2063 ;; This function is called by:
  2064 ;;		_main
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           	psect	text17
  2069  003984                     __ptext17:
  2070                           	opt callstack 0
  2071  003984                     _init_config:
  2072                           	opt callstack 0
  2073  003984  FFFF               	dw	65535	; assembler added errata NOP
  2074  003986                     
  2075                           ;main.c: 116: ADCON1 = 0X06;
  2076  003986  0E06               	movlw	6
  2077  003988  6EC1               	movwf	193,c	;volatile
  2078                           
  2079                           ;main.c: 118: TRISA = 0B00000000;
  2080  00398A  0E00               	movlw	0
  2081  00398C  6E92               	movwf	146,c	;volatile
  2082                           
  2083                           ;main.c: 119: LATA = 0;
  2084  00398E  0E00               	movlw	0
  2085  003990  6E89               	movwf	137,c	;volatile
  2086                           
  2087                           ;main.c: 120: PORTA = 0;
  2088  003992  0E00               	movlw	0
  2089  003994  6E80               	movwf	128,c	;volatile
  2090  003996                     
  2091                           ;main.c: 122: TRISB = 0B11111111;
  2092  003996  6893               	setf	147,c	;volatile
  2093                           
  2094                           ;main.c: 123: LATB = 0;
  2095  003998  0E00               	movlw	0
  2096  00399A  6E8A               	movwf	138,c	;volatile
  2097  00399C                     
  2098                           ;main.c: 124: PORTB = 0B11111111;
  2099  00399C  6881               	setf	129,c	;volatile
  2100  00399E                     
  2101                           ;main.c: 126: TRISC = 0B11111111;
  2102  00399E  6894               	setf	148,c	;volatile
  2103                           
  2104                           ;main.c: 127: LATC = 0;
  2105  0039A0  0E00               	movlw	0
  2106  0039A2  6E8B               	movwf	139,c	;volatile
  2107                           
  2108                           ;main.c: 128: PORTC = 0;
  2109  0039A4  0E00               	movlw	0
  2110  0039A6  6E82               	movwf	130,c	;volatile
  2111                           
  2112                           ;main.c: 130: TRISD = 0B00000000;
  2113  0039A8  0E00               	movlw	0
  2114  0039AA  6E95               	movwf	149,c	;volatile
  2115                           
  2116                           ;main.c: 131: LATD = 0;
  2117  0039AC  0E00               	movlw	0
  2118  0039AE  6E8C               	movwf	140,c	;volatile
  2119                           
  2120                           ;main.c: 132: PORTD = 0;
  2121  0039B0  0E00               	movlw	0
  2122  0039B2  6E83               	movwf	131,c	;volatile
  2123                           
  2124                           ;main.c: 134: TRISE = 0B00000000;
  2125  0039B4  0E00               	movlw	0
  2126  0039B6  6E96               	movwf	150,c	;volatile
  2127                           
  2128                           ;main.c: 135: LATE = 0;
  2129  0039B8  0E00               	movlw	0
  2130  0039BA  6E8D               	movwf	141,c	;volatile
  2131                           
  2132                           ;main.c: 136: PORTE = 0;
  2133  0039BC  0E00               	movlw	0
  2134  0039BE  6E84               	movwf	132,c	;volatile
  2135  0039C0  0012               	return		;funcret
  2136  0039C2  FFFF               	dw	65535	; errata NOP
  2137  0039C4                     __end_of_init_config:
  2138                           	opt callstack 0
  2139  0039C4  FFFF               	dw	65535	; assembler added errata NOP
  2140                           
  2141                           	psect	rparam
  2142  0000                     tosu	equ	0xFFF
  2143                           tosh	equ	0xFFE
  2144                           tosl	equ	0xFFD
  2145                           stkptr	equ	0xFFC
  2146                           pclatu	equ	0xFFB
  2147                           pclath	equ	0xFFA
  2148                           pcl	equ	0xFF9
  2149                           tblptru	equ	0xFF8
  2150                           tblptrh	equ	0xFF7
  2151                           tblptrl	equ	0xFF6
  2152                           tablat	equ	0xFF5
  2153                           prodh	equ	0xFF4
  2154                           prodl	equ	0xFF3
  2155                           indf0	equ	0xFEF
  2156                           postinc0	equ	0xFEE
  2157                           postdec0	equ	0xFED
  2158                           preinc0	equ	0xFEC
  2159                           plusw0	equ	0xFEB
  2160                           fsr0h	equ	0xFEA
  2161                           fsr0l	equ	0xFE9
  2162                           wreg	equ	0xFE8
  2163                           indf1	equ	0xFE7
  2164                           postinc1	equ	0xFE6
  2165                           postdec1	equ	0xFE5
  2166                           preinc1	equ	0xFE4
  2167                           plusw1	equ	0xFE3
  2168                           fsr1h	equ	0xFE2
  2169                           fsr1l	equ	0xFE1
  2170                           bsr	equ	0xFE0
  2171                           indf2	equ	0xFDF
  2172                           postinc2	equ	0xFDE
  2173                           postdec2	equ	0xFDD
  2174                           preinc2	equ	0xFDC
  2175                           plusw2	equ	0xFDB
  2176                           fsr2h	equ	0xFDA
  2177                           fsr2l	equ	0xFD9
  2178                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        84
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     26     110
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_show_error_message
    _show_error_message->_visualizar
    _visualizar->_tolower
    _operar->_no_es_primo
    _no_es_primo->_module
    _module->___lbmod
    _nand->_and
    _division->___lbdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   11881
                                             12 COMRAM    14    14      0
                        _init_config
                             _operar
                 _show_error_message
                         _visualizar
 ---------------------------------------------------------------------------------
 (1) _show_error_message                                   1     1      0    3505
                                             11 COMRAM     1     1      0
                         _visualizar
 ---------------------------------------------------------------------------------
 (1) _visualizar                                          10     7      3    3505
                                              1 COMRAM    10     7      3
                            _tolower
 ---------------------------------------------------------------------------------
 (2) _tolower                                              1     1      0      67
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _operar                                               3     1      2    3993
                                              8 COMRAM     3     1      2
                                _and
                           _division
                             _module
                              _multi
                               _nand
                        _no_es_primo
                                 _or
                              _resta
                               _suma
                                _xor
 ---------------------------------------------------------------------------------
 (2) _xor                                                  2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _suma                                                 2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _resta                                                2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _or                                                   2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _no_es_primo                                          2     2      0     597
                                              6 COMRAM     2     2      0
                             _module
 ---------------------------------------------------------------------------------
 (3) _module                                               2     1      1     507
                                              4 COMRAM     2     1      1
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1     235
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _nand                                                 2     1      1     316
                                              2 COMRAM     2     1      1
                                _and
 ---------------------------------------------------------------------------------
 (3) _and                                                  2     1      1     196
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _multi                                                2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _division                                             3     2      1     381
                                              4 COMRAM     3     2      1
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1     238
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_config
   _operar
     _and
     _division
       ___lbdiv
     _module
       ___lbmod
     _multi
     _nand
       _and
     _no_es_primo
       _module
         ___lbmod
     _or
     _resta
     _suma
     _xor
   _show_error_message
     _visualizar
       _tolower
   _visualizar
     _tolower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1A      6E       1       86.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6E      15        0.0%
DATA                 0      0      6E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Feb 27 22:16:01 2020

                                                               l94 3EAC  
                                                               _or 38AA  
                                                      __CFG_OSC$XT 000000  
                                                              l101 3F20  
                                                              l112 39C0  
                                                              l123 3C5A  
                                                              l117 3BAC  
                                                              l150 38CA  
                                                              l134 3DA6  
                                                              l153 38BE  
                                                              l129 3B0C  
                                                              l162 38F6  
                                                              l171 390A  
                                                              l156 38E4  
                                                              l180 3AAC  
                                                              ?_or 0055  
                                                              l165 38A6  
                                                              l174 38D6  
                                                              l159 3920  
                                                              l168 38B2  
                                                              l584 3A04  
                                                              l578 3B82  
                                                              _LA3 007C4B  
                                                              l847 3980  
                                                              _LA5 007C4D  
                                                              u200 39F4  
                                                              u201 39EE  
                                                              u210 3964  
                                                              u211 395E  
                                                              u300 3AA8  
                                                              u220 3978  
                                                              u301 3AA2  
                                                              u221 3972  
                                                              u230 3B2A  
                                                              u310 3D18  
                                                              u231 3B24  
                                                              u311 3D12  
                                                              u240 3B4E  
                                                              u320 3D36  
                                                              u241 3B48  
                                                              u321 3D30  
                                                              u250 3B6A  
                                                              u330 3DE4  
                                                              u251 3B64  
                                                              u331 3DDE  
                                                              u260 3BA2  
                                                              u340 3E36  
                                                              u261 3B9C  
                                                              u341 3E30  
                                                              u270 3BCC  
                                                              u350 3E7A  
                                                              u407 3C3A  
                                                              u271 3BC6  
                                                              u351 3E74  
                                                              u280 3C58  
                                                              u360 3F08  
                                                              u281 3C52  
                                                              u361 3F02  
                                                              u290 3A86  
                                                              u370 3F34  
                                                              u291 3A80  
                                                              u371 3F2E  
                                                              u380 3FF6  
                                                              u381 3FF0  
                                                              u397 3B02  
                                                     __CFG_BOR$OFF 000000  
                                                              _and 389E  
                                                              _xor 38CE  
                                                              wreg 000FE8  
                                                             ??_or 0056  
                                                     __CFG_LVP$OFF 000000  
                                                     __CFG_WDT$OFF 000000  
                                                             l1301 3BA4  
                                                             l1311 3C2E  
                                                             l1303 3BB2  
                                                             l1241 39F6  
                                                             l1233 39CA  
                                                             l1313 3C34  
                                                             l1305 3BCE  
                                                             l1331 3912  
                                                             l1243 39FA  
                                                             l1235 39D2  
                                                             l1323 38BA  
                                                             l1411 3CC6  
                                                             l1251 3966  
                                                             l1315 3C44  
                                                             l1307 3BFC  
                                                             ?_and 0055  
                                                             l1333 391E  
                                                             l1341 38FE  
                                                             l1245 3A02  
                                                             l1237 39DC  
                                                             l1405 3CB6  
                                                             l1253 397A  
                                                             l1317 3C46  
                                                             l1309 3C28  
                                                             l1501 3ECE  
                                                             l1271 3B2C  
                                                             l1327 38DE  
                                                             l1263 38A2  
                                                             l1239 39E0  
                                                             l1351 3A68  
                                                             l1319 38C6  
                                                             l1423 3CE6  
                                                             l1255 397C  
                                                             l1511 3F36  
                                                             l1503 3EE4  
                                                             l1281 3B6C  
                                                             l1273 3B34  
                                                             l1361 3AAA  
                                                             l1353 3A88  
                                                             l1337 38AE  
                                                             l1345 38D2  
                                                             l1417 3CD6  
                                                             l1249 3952  
                                                             l1521 3F7A  
                                                             l1513 3F42  
                                                             l1505 3EF6  
                                                             l1371 399E  
                                                             l1283 3B70  
                                                             l1275 3B3A  
                                                             l1267 3B14  
                                                             l1259 38EC  
                                                             l1443 3D3E  
                                                             l1435 3D02  
                                                             l1451 3D46  
                                                             l1515 3F4C  
                                                             l1507 3F0A  
                                                             l1523 3F90  
                                                             l1365 3986  
                                                             l1285 3B72  
                                                             l1277 3B3C  
                                                             l1269 3B18  
                                                             l1357 3A8E  
                                                             l1349 3A60  
                                                             l1437 3D1A  
                                                             l1429 3CF6  
                                                             l1381 3C76  
                                                             l1373 3C62  
                                                             l1293 3B8A  
                                                             l1453 3AB4  
                                                             l1517 3F52  
                                                             l1509 3F16  
                                                             l1525 3FE0  
                                                             l1461 3DBA  
                                                             l1367 3996  
                                                             l1287 3B78  
                                                             l1279 3B50  
                                                             l1359 3A92  
                                                             l1439 3D38  
                                                             l1375 3C66  
                                                             l1455 3AFC  
                                                             l1527 3FE4  
                                                             l1519 3F68  
                                                             l1471 3DCE  
                                                             l1463 3DC0  
                                                             l1369 399C  
                                                             l1289 3B7E  
                                                             l1393 3C96  
                                                             l1481 3E22  
                                                             l1473 3DE6  
                                                             l1465 3DC6  
                                                             l1457 3DAC  
                                                             l1387 3C86  
                                                             l1299 3B8E  
                                                             l1491 3E7C  
                                                             l1483 3E38  
                                                             l1475 3E00  
                                                             l1459 3DB2  
                                                             l1493 3E84  
                                                             l1485 3E4A  
                                                             l1477 3E18  
                                                             l1399 3CA6  
                                                             l1495 3E96  
                                                             l1487 3E4E  
                                                             l1479 3E1E  
                                                             l1497 3EAE  
                                                             l1489 3E66  
                                                             l1499 3EC0  
                                                             ?_xor 0055  
                                                             _LATA 000F89  
                                                             _LATB 000F8A  
                                                             _LATC 000F8B  
                                                             _LATD 000F8C  
                                                             _LATE 000F8D  
                                                     __CFG_PWRT$ON 000000  
                                                             _main 3DAC  
                                                             _nand 38FA  
                                                             indf2 000FDF  
                                                             fsr1l 000FE1  
                                                             fsr2l 000FD9  
                                                             _suma 38C2  
                                                             prodh 000FF4  
                                                             prodl 000FF3  
                                                             start 0002  
                                                     ___param_bank 000000  
                                                            ??_and 0056  
                                                            ??_xor 0056  
                                                            ?_main 0055  
                                                            ?_nand 0057  
                                                  __end_of___lbdiv 3B86  
                                                  __end_of___lbmod 3A08  
                                                            ?_suma 0055  
                                                     ?_init_config 0055  
                                                            _PORTA 000F80  
                                                            _PORTB 000F81  
                                                            _PORTC 000F82  
                                                            _PORTD 000F83  
                                                            _PORTE 000F84  
                                                            _TRISA 000F92  
                                                            _TRISB 000F93  
                                                            _TRISC 000F94  
                                                            _TRISD 000F95  
                                                            _TRISE 000F96  
                                                            _resta 38B6  
                                                            _multi 38DA  
                                                            main@i 0069  
                                                            main@x 006A  
                                                            tablat 000FF5  
                                                            status 000FD8  
                                                  __end_of_tolower 3984  
                                                  ___lbdiv@divisor 0055  
                                                  ___lbdiv@counter 0057  
                                                     ?_no_es_primo 0055  
                                                  __initialization 3924  
                                                     __end_of_main 4000  
                                                     __end_of_nand 390E  
                                                     __end_of_suma 38CE  
                                                           ??_main 0061  
                                                           ??_nand 0058  
                                                           ??_suma 0056  
                                                    __activetblptr 000002  
                                                           _ADCON1 000FC1  
                                                           ?_resta 0055  
                                                           ?_multi 0055  
                                                           _NUMERO 0001  
                                                 __end_of_division 3924  
                                                        ??___lbdiv 0056  
                                                        ??___lbmod 0056  
                                                           _module 38E8  
                                                           _operar 3C5E  
                                               _show_error_message 3AB2  
                                                    main@resultado 006C  
                                                     __pdataCOMRAM 0001  
                                                           tblptrh 000FF7  
                                                           tblptrl 000FF6  
                                                           tblptru 000FF8  
                                              ?_show_error_message 0055  
                                                        ??_tolower 0055  
                                                 ___lbdiv@dividend 0056  
                                                  ___lbmod@divisor 0055  
                                                       __accesstop 0080  
                                          __end_of__initialization 3944  
                                                  ___lbmod@counter 0057  
                                                    ___rparam_used 000001  
                                                   __pcstackCOMRAM 0055  
                                             ??_show_error_message 0060  
                                                    __end_of_resta 38C2  
                                                    __end_of_multi 38E8  
                                                 ___lbdiv@quotient 0058  
                                                       __end_of_or 38B6  
                                             __size_of_init_config 0040  
                                               visualizar@position 0056  
                                                          ??_resta 0056  
                                                          ??_multi 0056  
                                                   main@_resultado 0067  
                                             __size_of_no_es_primo 0056  
                                                          ?_module 0059  
                                                          ?_operar 005D  
                                                   no_es_primo@num 005B  
                                                          _SIMBOLO 0031  
                                                        ?_division 0059  
                                                   visualizar@from 0057  
                                                          __Hparam 0000  
                                                          __Lparam 0000  
                                                          ___lbdiv 3B10  
                                                          ___lbmod 39C6  
                                                          __pcinit 3924  
                                                   _visualizar$161 005D  
                                                          __ramtop 0600  
                                                  __size_of_module 0012  
                                                  __size_of_operar 014E  
                                                          __ptext0 3DAC  
                                                          __ptext1 3AB2  
                                                          __ptext2 3B86  
                                                          __ptext3 394E  
                                                          __ptext4 3C5E  
                                                          __ptext5 38CE  
                                                          __ptext6 38C2  
                                                          __ptext7 38B6  
                                                          __ptext8 38AA  
                                                          __ptext9 3A5C  
                                                      resta@oper_1 0056  
                                                      resta@oper_2 0055  
                                                     __size_of_and 000C  
                                                     __size_of_xor 000C  
                                                          _tolower 394E  
                                             end_of_initialization 3944  
                                                       ??_division 005A  
                                                    __Lmediumconst 0000  
                                                          postdec1 000FE5  
                                                          postinc0 000FEE  
                                                      multi@oper_1 0056  
                                                      multi@oper_2 0055  
                                                 ___lbmod@dividend 0056  
                                                      ___lbmod@rem 0058  
                                                       main@oper_1 006D  
                                                       main@oper_2 006E  
                                                       _visualizar 3B86  
                                                       nand@oper_1 0058  
                                                       nand@oper_2 0057  
                                                    __pidataCOMRAM 3A08  
                                                   __end_of_module 38FA  
                                                   __end_of_operar 3DAC  
                                              start_initialization 3924  
                                                 visualizar@enable 0058  
                                                   division@oper_1 005A  
                                                   division@oper_2 0059  
                                                      __end_of_and 38AA  
                                                      __end_of_xor 38DA  
                                                   division@result 005B  
                                                     no_es_primo@i 005C  
                                      __size_of_show_error_message 005E  
                                                         ??_module 005A  
                                                         ??_operar 005F  
                                                    ??_init_config 0055  
                                                __size_of_division 0016  
                                                      ?_visualizar 0056  
                                                    ??_no_es_primo 005B  
                                                         ?___lbdiv 0055  
                                                         ?___lbmod 0055  
                                                      visualizar@x 005F  
                                                     module@oper_1 005A  
                                                     module@oper_2 0059  
                                                        and@oper_1 0056  
                                                        and@oper_2 0055  
                                                    visualizar@SoN 005C  
                                                       operar@oper 005F  
                                                         ?_tolower 0055  
                                              __end_of_init_config 39C4  
                                                   __size_of_resta 000C  
                                                   __size_of_multi 000E  
                                                      __size_of_or 000C  
                                              __end_of_no_es_primo 3AB2  
                                              __size_of_visualizar 00D8  
                                                        copy_data0 3938  
                                                       suma@oper_1 0056  
                                                       suma@oper_2 0055  
                                                         __Hrparam 0000  
                                                         __Lrparam 0000  
                                                 __size_of___lbdiv 0076  
                                                 __size_of___lbmod 0042  
                                                     operar@oper_1 005D  
                                                     operar@oper_2 005E  
                                                      _init_config 3984  
                                                         _main$153 0064  
                                                         _main$149 0062  
                                                         __ptext10 38E8  
                                                         __ptext11 39C6  
                                                         __ptext12 38FA  
                                                         __ptext13 389E  
                                                         __ptext14 38DA  
                                                         __ptext15 390E  
                                                         __ptext16 3B10  
                                                         __ptext17 3984  
                                                         _division 390E  
                                                 __size_of_tolower 0036  
                                                    __size_of_main 0254  
                                                    __size_of_nand 0014  
                                                    __size_of_suma 000C  
                                                      _no_es_primo 3A5C  
                                                         main@_SoN 0066  
                                                         main@oper 006B  
                                                         or@oper_1 0056  
                                                         or@oper_2 0055  
                                                        xor@oper_1 0056  
                                                        xor@oper_2 0055  
                                                     ??_visualizar 0059  
                                       __end_of_show_error_message 3B10  
                                                         tolower@c 0055  
                                               __end_of_visualizar 3C5E  
