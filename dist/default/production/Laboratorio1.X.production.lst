

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Feb 27 22:25:07 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29  0000                     
    30                           ; Version 2.10
    31                           ; Generated 31/07/2019 GMT
    32                           ; 
    33                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F452 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     
    65                           	psect	idataCOMRAM
    66  00396C                     __pidataCOMRAM:
    67                           	opt callstack 0
    68                           
    69                           ;initializer for _NUMERO
    70  00396C  F8                 	db	248
    71  00396D  88                 	db	136
    72  00396E  F8                 	db	248
    73  00396F  40                 	db	64
    74  003970  F8                 	db	248
    75  003971  F8                 	db	248
    76  003972  B8                 	db	184
    77  003973  A8                 	db	168
    78  003974  E8                 	db	232
    79  003975  A8                 	db	168
    80  003976  A8                 	db	168
    81  003977  F8                 	db	248
    82  003978  E0                 	db	224
    83  003979  20                 	db	32
    84  00397A  F8                 	db	248
    85  00397B  E8                 	db	232
    86  00397C  A8                 	db	168
    87  00397D  B8                 	db	184
    88  00397E  F8                 	db	248
    89  00397F  A8                 	db	168
    90  003980  B8                 	db	184
    91  003981  80                 	db	128
    92  003982  80                 	db	128
    93  003983  F8                 	db	248
    94  003984  F8                 	db	248
    95  003985  A8                 	db	168
    96  003986  F8                 	db	248
    97  003987  E0                 	db	224
    98  003988  A0                 	db	160
    99  003989  F8                 	db	248
   100  00398A  F8                 	db	248
   101  00398B  A0                 	db	160
   102  00398C  F8                 	db	248
   103  00398D  F8                 	db	248
   104  00398E  28                 	db	40
   105  00398F  38                 	db	56
   106  003990  F8                 	db	248
   107  003991  88                 	db	136
   108  003992  88                 	db	136
   109  003993  38                 	db	56
   110  003994  28                 	db	40
   111  003995  F8                 	db	248
   112  003996  F8                 	db	248
   113  003997  A8                 	db	168
   114  003998  A8                 	db	168
   115  003999  F8                 	db	248
   116  00399A  A0                 	db	160
   117  00399B  A0                 	db	160
   118                           
   119                           ;initializer for _SIMBOLO
   120  00399C  20                 	db	32
   121  00399D  70                 	db	112
   122  00399E  20                 	db	32
   123  00399F  20                 	db	32
   124  0039A0  20                 	db	32
   125  0039A1  20                 	db	32
   126  0039A2  50                 	db	80
   127  0039A3  20                 	db	32
   128  0039A4  50                 	db	80
   129  0039A5  10                 	db	16
   130  0039A6  20                 	db	32
   131  0039A7  40                 	db	64
   132  0039A8  70                 	db	112
   133  0039A9  20                 	db	32
   134  0039AA  70                 	db	112
   135  0039AB  20                 	db	32
   136  0039AC  40                 	db	64
   137  0039AD  20                 	db	32
   138  0039AE  40                 	db	64
   139  0039AF  20                 	db	32
   140  0039B0  40                 	db	64
   141  0039B1  50                 	db	80
   142  0039B2  60                 	db	96
   143  0039B3  50                 	db	80
   144  0039B4  60                 	db	96
   145  0039B5  50                 	db	80
   146  0039B6  60                 	db	96
   147  0039B7  80                 	db	128
   148  0039B8  F8                 	db	248
   149  0039B9  80                 	db	128
   150  0039BA  50                 	db	80
   151  0039BB  50                 	db	80
   152  0039BC  50                 	db	80
   153  0039BD  F8                 	db	248
   154  0039BE  B0                 	db	176
   155  0039BF  E8                 	db	232
   156  0000                     _PORTE	set	3972
   157  0000                     _LATE	set	3981
   158  0000                     _TRISE	set	3990
   159  0000                     _PORTD	set	3971
   160  0000                     _LATD	set	3980
   161  0000                     _TRISD	set	3989
   162  0000                     _LATC	set	3979
   163  0000                     _TRISC	set	3988
   164  0000                     _LATB	set	3978
   165  0000                     _TRISB	set	3987
   166  0000                     _PORTA	set	3968
   167  0000                     _LATA	set	3977
   168  0000                     _TRISA	set	3986
   169  0000                     _ADCON1	set	4033
   170  0000                     _PORTC	set	3970
   171  0000                     _PORTB	set	3969
   172  0000                     _LA5	set	31821
   173  0000                     _LA3	set	31819
   174                           
   175                           ; #config settings
   176  0000                     
   177                           	psect	cinit
   178  003888                     __pcinit:
   179                           	opt callstack 0
   180  003888                     start_initialization:
   181                           	opt callstack 0
   182  003888                     __initialization:
   183                           	opt callstack 0
   184                           
   185                           ; Initialize objects allocated to COMRAM (84 bytes)
   186                           ; load TBLPTR registers with __pidataCOMRAM
   187  003888  0E6C               	movlw	low __pidataCOMRAM
   188  00388A  6EF6               	movwf	tblptrl,c
   189  00388C  0E39               	movlw	high __pidataCOMRAM
   190  00388E  6EF7               	movwf	tblptrh,c
   191  003890  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   192  003892  6EF8               	movwf	tblptru,c
   193  003894  EE00  F001         	lfsr	0,__pdataCOMRAM
   194  003898  EE10 F054          	lfsr	1,84
   195  00389C                     copy_data0:
   196  00389C  0009               	tblrd		*+
   197  00389E  CFF5 FFEE          	movff	tablat,postinc0
   198  0038A2  50E5               	movf	postdec1,w,c
   199  0038A4  50E1               	movf	fsr1l,w,c
   200  0038A6  E1FA               	bnz	copy_data0
   201  0038A8                     end_of_initialization:
   202                           	opt callstack 0
   203  0038A8                     __end_of__initialization:
   204                           	opt callstack 0
   205  0038A8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   206  0038AA  6EF8               	movwf	tblptru,c
   207  0038AC  0100               	movlb	0
   208  0038AE  EFA2  F01E         	goto	_main	;jump to C main() function
   209                           
   210                           	psect	dataCOMRAM
   211  000001                     __pdataCOMRAM:
   212                           	opt callstack 0
   213  000001                     _NUMERO:
   214                           	opt callstack 0
   215  000001                     	ds	48
   216  000031                     _SIMBOLO:
   217                           	opt callstack 0
   218  000031                     	ds	36
   219                           
   220                           	psect	cstackCOMRAM
   221  000055                     __pcstackCOMRAM:
   222                           	opt callstack 0
   223  000055                     suma@oper_2:
   224                           	opt callstack 0
   225  000055                     resta@oper_2:
   226                           	opt callstack 0
   227  000055                     multi@oper_2:
   228                           	opt callstack 0
   229  000055                     and@oper_2:
   230                           	opt callstack 0
   231  000055                     or@oper_2:
   232                           	opt callstack 0
   233  000055                     xor@oper_2:
   234                           	opt callstack 0
   235  000055                     ___lbdiv@divisor:
   236                           	opt callstack 0
   237  000055                     ___lbmod@divisor:
   238                           	opt callstack 0
   239  000055                     tolower@c:
   240                           	opt callstack 0
   241                           
   242                           ; 1 bytes @ 0x0
   243  000055                     	ds	1
   244  000056                     visualizar@position:
   245                           	opt callstack 0
   246  000056                     suma@oper_1:
   247                           	opt callstack 0
   248  000056                     resta@oper_1:
   249                           	opt callstack 0
   250  000056                     multi@oper_1:
   251                           	opt callstack 0
   252  000056                     and@oper_1:
   253                           	opt callstack 0
   254  000056                     or@oper_1:
   255                           	opt callstack 0
   256  000056                     xor@oper_1:
   257                           	opt callstack 0
   258  000056                     ___lbdiv@dividend:
   259                           	opt callstack 0
   260  000056                     ___lbmod@dividend:
   261                           	opt callstack 0
   262                           
   263                           ; 1 bytes @ 0x1
   264  000056                     	ds	1
   265  000057                     visualizar@from:
   266                           	opt callstack 0
   267  000057                     nand@oper_2:
   268                           	opt callstack 0
   269  000057                     ___lbdiv@counter:
   270                           	opt callstack 0
   271  000057                     ___lbmod@counter:
   272                           	opt callstack 0
   273                           
   274                           ; 1 bytes @ 0x2
   275  000057                     	ds	1
   276  000058                     visualizar@enable:
   277                           	opt callstack 0
   278  000058                     nand@oper_1:
   279                           	opt callstack 0
   280  000058                     ___lbdiv@quotient:
   281                           	opt callstack 0
   282  000058                     ___lbmod@rem:
   283                           	opt callstack 0
   284                           
   285                           ; 1 bytes @ 0x3
   286  000058                     	ds	1
   287  000059                     ??_visualizar:
   288  000059                     division@oper_2:
   289                           	opt callstack 0
   290  000059                     module@oper_2:
   291                           	opt callstack 0
   292                           
   293                           ; 1 bytes @ 0x4
   294  000059                     	ds	1
   295  00005A                     division@oper_1:
   296                           	opt callstack 0
   297  00005A                     module@oper_1:
   298                           	opt callstack 0
   299                           
   300                           ; 1 bytes @ 0x5
   301  00005A                     	ds	1
   302  00005B                     division@result:
   303                           	opt callstack 0
   304  00005B                     no_es_primo@num:
   305                           	opt callstack 0
   306                           
   307                           ; 1 bytes @ 0x6
   308  00005B                     	ds	1
   309  00005C                     visualizar@SoN:
   310                           	opt callstack 0
   311  00005C                     no_es_primo@i:
   312                           	opt callstack 0
   313                           
   314                           ; 1 bytes @ 0x7
   315  00005C                     	ds	1
   316  00005D                     operar@oper_1:
   317                           	opt callstack 0
   318  00005D                     _visualizar$162:
   319                           	opt callstack 0
   320                           
   321                           ; 2 bytes @ 0x8
   322  00005D                     	ds	1
   323  00005E                     operar@oper_2:
   324                           	opt callstack 0
   325                           
   326                           ; 1 bytes @ 0x9
   327  00005E                     	ds	1
   328  00005F                     visualizar@x:
   329                           	opt callstack 0
   330  00005F                     operar@oper:
   331                           	opt callstack 0
   332                           
   333                           ; 1 bytes @ 0xA
   334  00005F                     	ds	1
   335  000060                     ??_show_error_message:
   336                           
   337                           ; 1 bytes @ 0xB
   338  000060                     	ds	1
   339  000061                     ??_main:
   340                           
   341                           ; 1 bytes @ 0xC
   342  000061                     	ds	1
   343  000062                     _main$149:
   344                           	opt callstack 0
   345                           
   346                           ; 2 bytes @ 0xD
   347  000062                     	ds	2
   348  000064                     _main$153:
   349                           	opt callstack 0
   350                           
   351                           ; 2 bytes @ 0xF
   352  000064                     	ds	2
   353  000066                     main@_SoN:
   354                           	opt callstack 0
   355                           
   356                           ; 1 bytes @ 0x11
   357  000066                     	ds	1
   358  000067                     main@_resultado:
   359                           	opt callstack 0
   360                           
   361                           ; 2 bytes @ 0x12
   362  000067                     	ds	2
   363  000069                     main@i:
   364                           	opt callstack 0
   365                           
   366                           ; 1 bytes @ 0x14
   367  000069                     	ds	1
   368  00006A                     main@x:
   369                           	opt callstack 0
   370                           
   371                           ; 1 bytes @ 0x15
   372  00006A                     	ds	1
   373  00006B                     main@i_154:
   374                           	opt callstack 0
   375                           
   376                           ; 1 bytes @ 0x16
   377  00006B                     	ds	1
   378  00006C                     main@oper:
   379                           	opt callstack 0
   380                           
   381                           ; 1 bytes @ 0x17
   382  00006C                     	ds	1
   383  00006D                     main@resultado:
   384                           	opt callstack 0
   385                           
   386                           ; 1 bytes @ 0x18
   387  00006D                     	ds	1
   388  00006E                     main@oper_1:
   389                           	opt callstack 0
   390                           
   391                           ; 1 bytes @ 0x19
   392  00006E                     	ds	1
   393  00006F                     main@oper_2:
   394                           	opt callstack 0
   395                           
   396                           ; 1 bytes @ 0x1A
   397  00006F                     	ds	1
   398                           
   399 ;;
   400 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   401 ;;
   402 ;; *************** function _main *****************
   403 ;; Defined at:
   404 ;;		line 58 in file "main.c"
   405 ;; Parameters:    Size  Location     Type
   406 ;;		None
   407 ;; Auto vars:     Size  Location     Type
   408 ;;  i               1   22[COMRAM] unsigned char 
   409 ;;  _resultado      2   18[COMRAM] int 
   410 ;;  x               1   21[COMRAM] unsigned char 
   411 ;;  _SoN            1   17[COMRAM] unsigned char 
   412 ;;  i               1   20[COMRAM] unsigned char 
   413 ;;  oper_2          1   26[COMRAM] unsigned char 
   414 ;;  oper_1          1   25[COMRAM] unsigned char 
   415 ;;  resultado       1   24[COMRAM] unsigned char 
   416 ;;  oper            1   23[COMRAM] unsigned char 
   417 ;; Return value:  Size  Location     Type
   418 ;;                  1    wreg      void 
   419 ;; Registers used:
   420 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   421 ;; Tracked objects:
   422 ;;		On entry : 0/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   426 ;;      Params:         0       0       0       0       0       0       0
   427 ;;      Locals:        14       0       0       0       0       0       0
   428 ;;      Temps:          1       0       0       0       0       0       0
   429 ;;      Totals:        15       0       0       0       0       0       0
   430 ;;Total ram usage:       15 bytes
   431 ;; Hardware stack levels required when called:    4
   432 ;; This function calls:
   433 ;;		_init_config
   434 ;;		_operar
   435 ;;		_show_error_message
   436 ;;		_visualizar
   437 ;; This function is called by:
   438 ;;		Startup code after reset
   439 ;; This function uses a non-reentrant model
   440 ;;
   441                           
   442                           	psect	text0
   443  003D44                     __ptext0:
   444                           	opt callstack 0
   445  003D44                     _main:
   446                           	opt callstack 27
   447  003D44  FFFF               	dw	65535	; assembler added errata NOP
   448                           
   449                           ;main.c: 59: char oper_1;;main.c: 60: char oper_2;;main.c: 61: char oper;;main.c: 62: ch
      +                          ar resultado;;main.c: 64: init_config();
   450  003D46  EC74  F01C         	call	_init_config	;wreg free
   451  003D4A                     l1484:
   452  003D4A  FFFF               	dw	65535	; assembler added errata NOP
   453                           
   454                           ;main.c: 66: oper_1 = PORTB>>4;
   455  003D4C  3881               	swapf	129,w,c	;volatile
   456  003D4E  0B0F               	andlw	15
   457  003D50  6E6E               	movwf	main@oper_1^0,c
   458  003D52                     
   459                           ;main.c: 67: oper_2 = PORTB&0X0F;
   460  003D52  5081               	movf	129,w,c	;volatile
   461  003D54  0B0F               	andlw	15
   462  003D56  6E6F               	movwf	main@oper_2^0,c
   463  003D58                     
   464                           ;main.c: 68: oper = PORTC&0X0F;
   465  003D58  5082               	movf	130,w,c	;volatile
   466  003D5A  0B0F               	andlw	15
   467  003D5C  6E6C               	movwf	main@oper^0,c
   468  003D5E                     
   469                           ;main.c: 71: for (char i = 0; i < 200; i++) {
   470  003D5E  0E00               	movlw	0
   471  003D60  6E69               	movwf	main@i^0,c
   472  003D62  EFC0  F01F         	goto	l1560
   473  003D66                     l1496:
   474  003D66  FFFF               	dw	65535	; assembler added errata NOP
   475                           
   476                           ;main.c: 74: case 2:;main.c: 75: resultado = operar(oper, oper_1, oper_2);
   477  003D68  C06E  F05D         	movff	main@oper_1,operar@oper_1
   478  003D6C  C06F  F05E         	movff	main@oper_2,operar@oper_2
   479  003D70  506C               	movf	main@oper^0,w,c
   480  003D72  ECFB  F01D         	call	_operar
   481  003D76  6E6D               	movwf	main@resultado^0,c
   482  003D78                     
   483                           ;main.c: 76: visualizar('n', resultado, 0, 1);
   484  003D78  C06D  F056         	movff	main@resultado,visualizar@position
   485  003D7C  0E00               	movlw	0
   486  003D7E  6E57               	movwf	visualizar@from^0,c
   487  003D80  0E01               	movlw	1
   488  003D82  6E58               	movwf	visualizar@enable^0,c
   489  003D84  0E6E               	movlw	110
   490  003D86  EC75  F01D         	call	_visualizar
   491                           
   492                           ;main.c: 77: break;
   493  003D8A  EFF0  F01F         	goto	l1562
   494  003D8E                     l1500:
   495  003D8E  FFFF               	dw	65535	; assembler added errata NOP
   496                           
   497                           ;main.c: 79: resultado = oper_1 < oper_2 ? operar(oper, oper_2, oper_1) : operar(oper, o
      +                          per_1, oper_2);
   498  003D90  506F               	movf	main@oper_2^0,w,c
   499  003D92  5C6E               	subwf	main@oper_1^0,w,c
   500  003D94  A0D8               	btfss	status,0,c
   501  003D96  EFCF  F01E         	goto	u361
   502  003D9A  EFD2  F01E         	goto	u360
   503  003D9E                     u361:
   504  003D9E  FFFF               	dw	65535	; assembler added errata NOP
   505  003DA0  EFE0  F01E         	goto	l1504
   506  003DA4                     u360:
   507  003DA4  FFFF               	dw	65535	; assembler added errata NOP
   508  003DA6  C06E  F05D         	movff	main@oper_1,operar@oper_1
   509  003DAA  C06F  F05E         	movff	main@oper_2,operar@oper_2
   510  003DAE  506C               	movf	main@oper^0,w,c
   511  003DB0  ECFB  F01D         	call	_operar
   512  003DB4  6E61               	movwf	??_main^0,c
   513  003DB6  5061               	movf	??_main^0,w,c
   514  003DB8  6E62               	movwf	_main$149^0,c
   515  003DBA  6A63               	clrf	(_main$149+1)^0,c
   516  003DBC  EFEC  F01E         	goto	l1506
   517  003DC0                     l1504:
   518  003DC0  FFFF               	dw	65535	; assembler added errata NOP
   519  003DC2  C06F  F05D         	movff	main@oper_2,operar@oper_1
   520  003DC6  C06E  F05E         	movff	main@oper_1,operar@oper_2
   521  003DCA  506C               	movf	main@oper^0,w,c
   522  003DCC  ECFB  F01D         	call	_operar
   523  003DD0  6E61               	movwf	??_main^0,c
   524  003DD2  5061               	movf	??_main^0,w,c
   525  003DD4  6E62               	movwf	_main$149^0,c
   526  003DD6  6A63               	clrf	(_main$149+1)^0,c
   527  003DD8                     l1506:
   528  003DD8  FFFF               	dw	65535	; assembler added errata NOP
   529  003DDA  C062  F06D         	movff	_main$149,main@resultado
   530  003DDE                     
   531                           ;main.c: 80: char x = 0;
   532  003DDE  0E00               	movlw	0
   533  003DE0  6E6A               	movwf	main@x^0,c
   534  003DE2                     
   535                           ;main.c: 81: if (oper_1 < oper_2) {
   536  003DE2  506F               	movf	main@oper_2^0,w,c
   537  003DE4  5C6E               	subwf	main@oper_1^0,w,c
   538  003DE6  B0D8               	btfsc	status,0,c
   539  003DE8  EFF8  F01E         	goto	u371
   540  003DEC  EFFB  F01E         	goto	u370
   541  003DF0                     u371:
   542  003DF0  FFFF               	dw	65535	; assembler added errata NOP
   543  003DF2  EF07  F01F         	goto	l1516
   544  003DF6                     u370:
   545  003DF6  FFFF               	dw	65535	; assembler added errata NOP
   546  003DF8                     
   547                           ;main.c: 82: visualizar('s', 1, x, 1);
   548  003DF8  0E01               	movlw	1
   549  003DFA  6E56               	movwf	visualizar@position^0,c
   550  003DFC  0E00               	movlw	0
   551  003DFE  6E57               	movwf	visualizar@from^0,c
   552  003E00  0E01               	movlw	1
   553  003E02  6E58               	movwf	visualizar@enable^0,c
   554  003E04  0E73               	movlw	115
   555  003E06  EC75  F01D         	call	_visualizar
   556  003E0A                     
   557                           ;main.c: 83: x += 3;
   558  003E0A  0E03               	movlw	3
   559  003E0C  266A               	addwf	main@x^0,f,c
   560  003E0E                     l1516:
   561  003E0E  FFFF               	dw	65535	; assembler added errata NOP
   562                           
   563                           ;main.c: 84: };main.c: 86: visualizar('n', resultado, x, 1);
   564  003E10  C06D  F056         	movff	main@resultado,visualizar@position
   565  003E14  C06A  F057         	movff	main@x,visualizar@from
   566  003E18  0E01               	movlw	1
   567  003E1A  6E58               	movwf	visualizar@enable^0,c
   568  003E1C  0E6E               	movlw	110
   569  003E1E  EC75  F01D         	call	_visualizar
   570                           
   571                           ;main.c: 87: break;
   572  003E22  EFF0  F01F         	goto	l1562
   573  003E26                     l1518:
   574  003E26  FFFF               	dw	65535	; assembler added errata NOP
   575                           
   576                           ;main.c: 89: case 4:;main.c: 90: if (oper_2 == 0) {
   577  003E28  506F               	movf	main@oper_2^0,w,c
   578  003E2A  A4D8               	btfss	status,2,c
   579  003E2C  EF1A  F01F         	goto	u381
   580  003E30  EF1D  F01F         	goto	u380
   581  003E34                     u381:
   582  003E34  FFFF               	dw	65535	; assembler added errata NOP
   583  003E36  EF22  F01F         	goto	l1522
   584  003E3A                     u380:
   585  003E3A  FFFF               	dw	65535	; assembler added errata NOP
   586  003E3C                     
   587                           ;main.c: 91: show_error_message();
   588  003E3C  EC0B  F01D         	call	_show_error_message	;wreg free
   589                           
   590                           ;main.c: 92: } else {
   591  003E40  EFF0  F01F         	goto	l1562
   592  003E44                     l1522:
   593  003E44  FFFF               	dw	65535	; assembler added errata NOP
   594                           
   595                           ;main.c: 93: resultado = operar(oper, oper_1, oper_2);
   596  003E46  C06E  F05D         	movff	main@oper_1,operar@oper_1
   597  003E4A  C06F  F05E         	movff	main@oper_2,operar@oper_2
   598  003E4E  506C               	movf	main@oper^0,w,c
   599  003E50  ECFB  F01D         	call	_operar
   600  003E54  6E6D               	movwf	main@resultado^0,c
   601  003E56                     
   602                           ;main.c: 94: visualizar('n', resultado, 0, 1);
   603  003E56  C06D  F056         	movff	main@resultado,visualizar@position
   604  003E5A  0E00               	movlw	0
   605  003E5C  6E57               	movwf	visualizar@from^0,c
   606  003E5E  0E01               	movlw	1
   607  003E60  6E58               	movwf	visualizar@enable^0,c
   608  003E62  0E6E               	movlw	110
   609  003E64  EC75  F01D         	call	_visualizar
   610  003E68  EFF0  F01F         	goto	l1562
   611  003E6C                     l96:
   612  003E6C  FFFF               	dw	65535	; assembler added errata NOP
   613  003E6E                     l1526:
   614  003E6E  FFFF               	dw	65535	; assembler added errata NOP
   615                           
   616                           ;main.c: 98: case 6:;main.c: 99: case 7:;main.c: 100: case 8:;main.c: 101: resultado = o
      +                          perar(oper, oper_1, oper_2);
   617  003E70  C06E  F05D         	movff	main@oper_1,operar@oper_1
   618  003E74  C06F  F05E         	movff	main@oper_2,operar@oper_2
   619  003E78  506C               	movf	main@oper^0,w,c
   620  003E7A  ECFB  F01D         	call	_operar
   621  003E7E  6E6D               	movwf	main@resultado^0,c
   622  003E80                     
   623                           ;main.c: 102: int _resultado = resultado&0X0F;
   624  003E80  C06D  F061         	movff	main@resultado,??_main
   625  003E84  0E0F               	movlw	15
   626  003E86  1661               	andwf	??_main^0,f,c
   627  003E88  5061               	movf	??_main^0,w,c
   628  003E8A  6E67               	movwf	main@_resultado^0,c
   629  003E8C  6A68               	clrf	(main@_resultado+1)^0,c
   630  003E8E                     
   631                           ;main.c: 103: visualizar('n', _resultado, 0, 1);
   632  003E8E  C067  F056         	movff	main@_resultado,visualizar@position
   633  003E92  0E00               	movlw	0
   634  003E94  6E57               	movwf	visualizar@from^0,c
   635  003E96  0E01               	movlw	1
   636  003E98  6E58               	movwf	visualizar@enable^0,c
   637  003E9A  0E6E               	movlw	110
   638  003E9C  EC75  F01D         	call	_visualizar
   639                           
   640                           ;main.c: 104: break;
   641  003EA0  EFF0  F01F         	goto	l1562
   642  003EA4                     l1532:
   643  003EA4  FFFF               	dw	65535	; assembler added errata NOP
   644                           
   645                           ;main.c: 106: case 10:;main.c: 107: resultado = operar(oper, oper_1, oper_2);
   646  003EA6  C06E  F05D         	movff	main@oper_1,operar@oper_1
   647  003EAA  C06F  F05E         	movff	main@oper_2,operar@oper_2
   648  003EAE  506C               	movf	main@oper^0,w,c
   649  003EB0  ECFB  F01D         	call	_operar
   650  003EB4  6E6D               	movwf	main@resultado^0,c
   651  003EB6                     
   652                           ;main.c: 108: int _resultado = resultado ? 9 : 15;
   653  003EB6  506D               	movf	main@resultado^0,w,c
   654  003EB8  A4D8               	btfss	status,2,c
   655  003EBA  EF61  F01F         	goto	u391
   656  003EBE  EF64  F01F         	goto	u390
   657  003EC2                     u391:
   658  003EC2  FFFF               	dw	65535	; assembler added errata NOP
   659  003EC4  EF6B  F01F         	goto	l1538
   660  003EC8                     u390:
   661  003EC8  FFFF               	dw	65535	; assembler added errata NOP
   662  003ECA  0E00               	movlw	0
   663  003ECC  6E68               	movwf	(main@_resultado+1)^0,c
   664  003ECE  0E0F               	movlw	15
   665  003ED0  6E67               	movwf	main@_resultado^0,c
   666  003ED2  EF70  F01F         	goto	l103
   667  003ED6                     l1538:
   668  003ED6  FFFF               	dw	65535	; assembler added errata NOP
   669  003ED8  0E00               	movlw	0
   670  003EDA  6E68               	movwf	(main@_resultado+1)^0,c
   671  003EDC  0E09               	movlw	9
   672  003EDE  6E67               	movwf	main@_resultado^0,c
   673  003EE0                     l103:
   674  003EE0  FFFF               	dw	65535	; assembler added errata NOP
   675                           
   676                           ;main.c: 109: char _SoN = resultado ? 's' : 'n';
   677  003EE2  506D               	movf	main@resultado^0,w,c
   678  003EE4  A4D8               	btfss	status,2,c
   679  003EE6  EF77  F01F         	goto	u401
   680  003EEA  EF7A  F01F         	goto	u400
   681  003EEE                     u401:
   682  003EEE  FFFF               	dw	65535	; assembler added errata NOP
   683  003EF0  EF81  F01F         	goto	l1542
   684  003EF4                     u400:
   685  003EF4  FFFF               	dw	65535	; assembler added errata NOP
   686  003EF6  0E00               	movlw	0
   687  003EF8  6E65               	movwf	(_main$153+1)^0,c
   688  003EFA  0E6E               	movlw	110
   689  003EFC  6E64               	movwf	_main$153^0,c
   690  003EFE  EF86  F01F         	goto	l1544
   691  003F02                     l1542:
   692  003F02  FFFF               	dw	65535	; assembler added errata NOP
   693  003F04  0E00               	movlw	0
   694  003F06  6E65               	movwf	(_main$153+1)^0,c
   695  003F08  0E73               	movlw	115
   696  003F0A  6E64               	movwf	_main$153^0,c
   697  003F0C                     l1544:
   698  003F0C  FFFF               	dw	65535	; assembler added errata NOP
   699  003F0E  C064  F066         	movff	_main$153,main@_SoN
   700  003F12                     
   701                           ;main.c: 110: visualizar(_SoN, _resultado, 0, 1);
   702  003F12  C067  F056         	movff	main@_resultado,visualizar@position
   703  003F16  0E00               	movlw	0
   704  003F18  6E57               	movwf	visualizar@from^0,c
   705  003F1A  0E01               	movlw	1
   706  003F1C  6E58               	movwf	visualizar@enable^0,c
   707  003F1E  5066               	movf	main@_SoN^0,w,c
   708  003F20  EC75  F01D         	call	_visualizar
   709                           
   710                           ;main.c: 111: break;
   711  003F24  EFF0  F01F         	goto	l1562
   712  003F28                     l1548:
   713  003F28  FFFF               	dw	65535	; assembler added errata NOP
   714                           
   715                           ;main.c: 113: for (char i = 0; i < 2; i++) {
   716  003F2A  0E00               	movlw	0
   717  003F2C  6E6B               	movwf	main@i_154^0,c
   718  003F2E                     l1554:
   719  003F2E  FFFF               	dw	65535	; assembler added errata NOP
   720                           
   721                           ;main.c: 114: visualizar('s', 1, 0, i + 1);
   722  003F30  0E01               	movlw	1
   723  003F32  6E56               	movwf	visualizar@position^0,c
   724  003F34  0E00               	movlw	0
   725  003F36  6E57               	movwf	visualizar@from^0,c
   726  003F38  286B               	incf	main@i_154^0,w,c
   727  003F3A  6E58               	movwf	visualizar@enable^0,c
   728  003F3C  0E73               	movlw	115
   729  003F3E  EC75  F01D         	call	_visualizar
   730                           
   731                           ;main.c: 115: visualizar('s', 1, 3, i + 1);
   732  003F42  0E01               	movlw	1
   733  003F44  6E56               	movwf	visualizar@position^0,c
   734  003F46  0E03               	movlw	3
   735  003F48  6E57               	movwf	visualizar@from^0,c
   736  003F4A  286B               	incf	main@i_154^0,w,c
   737  003F4C  6E58               	movwf	visualizar@enable^0,c
   738  003F4E  0E73               	movlw	115
   739  003F50  EC75  F01D         	call	_visualizar
   740                           
   741                           ;main.c: 116: visualizar('s', 1, 6, i + 1);
   742  003F54  0E01               	movlw	1
   743  003F56  6E56               	movwf	visualizar@position^0,c
   744  003F58  0E06               	movlw	6
   745  003F5A  6E57               	movwf	visualizar@from^0,c
   746  003F5C  286B               	incf	main@i_154^0,w,c
   747  003F5E  6E58               	movwf	visualizar@enable^0,c
   748  003F60  0E73               	movlw	115
   749  003F62  EC75  F01D         	call	_visualizar
   750  003F66  2A6B               	incf	main@i_154^0,f,c
   751  003F68  0E01               	movlw	1
   752  003F6A  646B               	cpfsgt	main@i_154^0,c
   753  003F6C  EFBA  F01F         	goto	u411
   754  003F70  EFBD  F01F         	goto	u410
   755  003F74                     u411:
   756  003F74  FFFF               	dw	65535	; assembler added errata NOP
   757  003F76  EF97  F01F         	goto	l1554
   758  003F7A                     u410:
   759  003F7A  FFFF               	dw	65535	; assembler added errata NOP
   760  003F7C  EFF0  F01F         	goto	l1562
   761  003F80                     l1560:
   762  003F80  FFFF               	dw	65535	; assembler added errata NOP
   763  003F82  506C               	movf	main@oper^0,w,c
   764                           
   765                           ; Switch size 1, requested type "simple"
   766                           ; Number of cases is 11, Range of values is 0 to 10
   767                           ; switch strategies available:
   768                           ; Name         Instructions Cycles
   769                           ; simple_byte           34    18 (average)
   770                           ;	Chosen strategy is simple_byte
   771  003F84  0A00               	xorlw	0	; case 0
   772  003F86  B4D8               	btfsc	status,2,c
   773  003F88  EFB3  F01E         	goto	l1496
   774  003F8C  0A01               	xorlw	1	; case 1
   775  003F8E  B4D8               	btfsc	status,2,c
   776  003F90  EFC7  F01E         	goto	l1500
   777  003F94  0A03               	xorlw	3	; case 2
   778  003F96  B4D8               	btfsc	status,2,c
   779  003F98  EFB3  F01E         	goto	l1496
   780  003F9C  0A01               	xorlw	1	; case 3
   781  003F9E  B4D8               	btfsc	status,2,c
   782  003FA0  EF13  F01F         	goto	l1518
   783  003FA4  0A07               	xorlw	7	; case 4
   784  003FA6  B4D8               	btfsc	status,2,c
   785  003FA8  EF13  F01F         	goto	l1518
   786  003FAC  0A01               	xorlw	1	; case 5
   787  003FAE  B4D8               	btfsc	status,2,c
   788  003FB0  EF36  F01F         	goto	l96
   789  003FB4  0A03               	xorlw	3	; case 6
   790  003FB6  B4D8               	btfsc	status,2,c
   791  003FB8  EF37  F01F         	goto	l1526
   792  003FBC  0A01               	xorlw	1	; case 7
   793  003FBE  B4D8               	btfsc	status,2,c
   794  003FC0  EF37  F01F         	goto	l1526
   795  003FC4  0A0F               	xorlw	15	; case 8
   796  003FC6  B4D8               	btfsc	status,2,c
   797  003FC8  EF37  F01F         	goto	l1526
   798  003FCC  0A01               	xorlw	1	; case 9
   799  003FCE  B4D8               	btfsc	status,2,c
   800  003FD0  EF52  F01F         	goto	l1532
   801  003FD4  0A03               	xorlw	3	; case 10
   802  003FD6  B4D8               	btfsc	status,2,c
   803  003FD8  EF52  F01F         	goto	l1532
   804  003FDC  EF94  F01F         	goto	l1548
   805  003FE0                     l1562:
   806  003FE0  FFFF               	dw	65535	; assembler added errata NOP
   807  003FE2  2A69               	incf	main@i^0,f,c
   808  003FE4  0EC7               	movlw	199
   809  003FE6  6469               	cpfsgt	main@i^0,c
   810  003FE8  EFF8  F01F         	goto	u421
   811  003FEC  EFFB  F01F         	goto	u420
   812  003FF0                     u421:
   813  003FF0  FFFF               	dw	65535	; assembler added errata NOP
   814  003FF2  EFC0  F01F         	goto	l1560
   815  003FF6                     u420:
   816  003FF6  FFFF               	dw	65535	; assembler added errata NOP
   817  003FF8  EFA5  F01E         	goto	l1484
   818  003FFC  EF01  F000         	goto	start
   819  004000                     __end_of_main:
   820                           	opt callstack 0
   821                           
   822 ;; *************** function _show_error_message *****************
   823 ;; Defined at:
   824 ;;		line 180 in file "main.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;		None
   827 ;; Auto vars:     Size  Location     Type
   828 ;;		None
   829 ;; Return value:  Size  Location     Type
   830 ;;                  1    wreg      void 
   831 ;; Registers used:
   832 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   833 ;; Tracked objects:
   834 ;;		On entry : 0/0
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   838 ;;      Params:         0       0       0       0       0       0       0
   839 ;;      Locals:         0       0       0       0       0       0       0
   840 ;;      Temps:          1       0       0       0       0       0       0
   841 ;;      Totals:         1       0       0       0       0       0       0
   842 ;;Total ram usage:        1 bytes
   843 ;; Hardware stack levels used:    1
   844 ;; Hardware stack levels required when called:    2
   845 ;; This function calls:
   846 ;;		_visualizar
   847 ;; This function is called by:
   848 ;;		_main
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           	psect	text1
   853  003A16                     __ptext1:
   854                           	opt callstack 0
   855  003A16                     _show_error_message:
   856                           	opt callstack 0
   857  003A16  FFFF               	dw	65535	; assembler added errata NOP
   858  003A18                     
   859                           ;main.c: 181: visualizar('n', 14, 0, 1);
   860  003A18  0E0E               	movlw	14
   861  003A1A  6E56               	movwf	visualizar@position^0,c
   862  003A1C  0E00               	movlw	0
   863  003A1E  6E57               	movwf	visualizar@from^0,c
   864  003A20  0E01               	movlw	1
   865  003A22  6E58               	movwf	visualizar@enable^0,c
   866  003A24  0E6E               	movlw	110
   867  003A26  EC75  F01D         	call	_visualizar
   868                           
   869                           ;main.c: 182: visualizar('s', 11, 4, 1);
   870  003A2A  0E0B               	movlw	11
   871  003A2C  6E56               	movwf	visualizar@position^0,c
   872  003A2E  0E04               	movlw	4
   873  003A30  6E57               	movwf	visualizar@from^0,c
   874  003A32  0E01               	movlw	1
   875  003A34  6E58               	movwf	visualizar@enable^0,c
   876  003A36  0E73               	movlw	115
   877  003A38  EC75  F01D         	call	_visualizar
   878                           
   879                           ;main.c: 183: visualizar('n', 14, 0, 2);
   880  003A3C  0E0E               	movlw	14
   881  003A3E  6E56               	movwf	visualizar@position^0,c
   882  003A40  0E00               	movlw	0
   883  003A42  6E57               	movwf	visualizar@from^0,c
   884  003A44  0E02               	movlw	2
   885  003A46  6E58               	movwf	visualizar@enable^0,c
   886  003A48  0E6E               	movlw	110
   887  003A4A  EC75  F01D         	call	_visualizar
   888                           
   889                           ;main.c: 184: visualizar('s', 11, 4, 2);
   890  003A4E  0E0B               	movlw	11
   891  003A50  6E56               	movwf	visualizar@position^0,c
   892  003A52  0E04               	movlw	4
   893  003A54  6E57               	movwf	visualizar@from^0,c
   894  003A56  0E02               	movlw	2
   895  003A58  6E58               	movwf	visualizar@enable^0,c
   896  003A5A  0E73               	movlw	115
   897  003A5C  EC75  F01D         	call	_visualizar
   898  003A60                     
   899                           ;main.c: 185: _delay((unsigned long)((5)*(4000000/4000.0)));
   900  003A60  0E05               	movlw	5
   901  003A62  6E60               	movwf	??_show_error_message^0,c
   902  003A64  0EDF               	movlw	223
   903  003A66                     u437:
   904  003A66  FFFF               	dw	65535	; errata NOP
   905  003A68  2EE8               	decfsz	wreg,f,c
   906  003A6A  D7FD               	bra	u437
   907  003A6C  2E60               	decfsz	??_show_error_message^0,f,c
   908  003A6E  D7FB               	bra	u437
   909  003A70  0012               	return		;funcret
   910  003A72  FFFF               	dw	65535	; errata NOP
   911  003A74                     __end_of_show_error_message:
   912                           	opt callstack 0
   913                           
   914 ;; *************** function _visualizar *****************
   915 ;; Defined at:
   916 ;;		line 154 in file "main.c"
   917 ;; Parameters:    Size  Location     Type
   918 ;;  SoN             1    wreg     unsigned char 
   919 ;;  position        1    1[COMRAM] unsigned char 
   920 ;;  from            1    2[COMRAM] unsigned char 
   921 ;;  enable          1    3[COMRAM] unsigned char 
   922 ;; Auto vars:     Size  Location     Type
   923 ;;  SoN             1    7[COMRAM] unsigned char 
   924 ;;  x               1   10[COMRAM] unsigned char 
   925 ;; Return value:  Size  Location     Type
   926 ;;                  1    wreg      void 
   927 ;; Registers used:
   928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   929 ;; Tracked objects:
   930 ;;		On entry : 0/0
   931 ;;		On exit  : 0/0
   932 ;;		Unchanged: 0/0
   933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   934 ;;      Params:         3       0       0       0       0       0       0
   935 ;;      Locals:         4       0       0       0       0       0       0
   936 ;;      Temps:          3       0       0       0       0       0       0
   937 ;;      Totals:        10       0       0       0       0       0       0
   938 ;;Total ram usage:       10 bytes
   939 ;; Hardware stack levels used:    1
   940 ;; Hardware stack levels required when called:    1
   941 ;; This function calls:
   942 ;;		_tolower
   943 ;; This function is called by:
   944 ;;		_main
   945 ;;		_show_error_message
   946 ;;		_see_full_operation
   947 ;; This function uses a non-reentrant model
   948 ;;
   949                           
   950                           	psect	text2
   951  003AEA                     __ptext2:
   952                           	opt callstack 0
   953  003AEA                     _visualizar:
   954                           	opt callstack 0
   955  003AEA  FFFF               	dw	65535	; assembler added errata NOP
   956                           
   957                           ;incstack = 0
   958                           ;visualizar@SoN stored from wreg
   959  003AEC  6E5C               	movwf	visualizar@SoN^0,c
   960  003AEE                     
   961                           ;main.c: 155: for (char x = 0; x < 3; x++) {
   962  003AEE  0E00               	movlw	0
   963  003AF0  6E5F               	movwf	visualizar@x^0,c
   964  003AF2                     l1320:
   965  003AF2  FFFF               	dw	65535	; assembler added errata NOP
   966                           
   967                           ;main.c: 156: if ((from + x) > 6) {
   968  003AF4  505F               	movf	visualizar@x^0,w,c
   969  003AF6  C057  F059         	movff	visualizar@from,??_visualizar
   970  003AFA  6A5A               	clrf	(??_visualizar+1)^0,c
   971  003AFC  2659               	addwf	??_visualizar^0,f,c
   972  003AFE  0E00               	movlw	0
   973  003B00  225A               	addwfc	(??_visualizar+1)^0,f,c
   974  003B02  BE5A               	btfsc	(??_visualizar+1)^0,7,c
   975  003B04  EF8D  F01D         	goto	u281
   976  003B08  505A               	movf	(??_visualizar+1)^0,w,c
   977  003B0A  E10A               	bnz	u280
   978  003B0C  0E07               	movlw	7
   979  003B0E  5C59               	subwf	??_visualizar^0,w,c
   980  003B10  A0D8               	btfss	status,0,c
   981  003B12  EF8D  F01D         	goto	u281
   982  003B16  EF90  F01D         	goto	u280
   983  003B1A                     u281:
   984  003B1A  FFFF               	dw	65535	; assembler added errata NOP
   985  003B1C  EF93  F01D         	goto	l1324
   986  003B20                     u280:
   987  003B20  FFFF               	dw	65535	; assembler added errata NOP
   988  003B22  EFF8  F01D         	goto	l122
   989  003B26                     l1324:
   990  003B26  FFFF               	dw	65535	; assembler added errata NOP
   991                           
   992                           ;main.c: 158: };main.c: 159: if (enable == 1) {
   993  003B28  0458               	decf	visualizar@enable^0,w,c
   994  003B2A  A4D8               	btfss	status,2,c
   995  003B2C  EF9A  F01D         	goto	u291
   996  003B30  EF9D  F01D         	goto	u290
   997  003B34                     u291:
   998  003B34  FFFF               	dw	65535	; assembler added errata NOP
   999  003B36  EFA2  F01D         	goto	l123
  1000  003B3A                     u290:
  1001  003B3A  FFFF               	dw	65535	; assembler added errata NOP
  1002  003B3C                     
  1003                           ;main.c: 160: LA3 = 1;
  1004  003B3C  8689               	bsf	3977,3,c	;volatile
  1005                           
  1006                           ;main.c: 161: LA5 = 0;
  1007  003B3E  9A89               	bcf	3977,5,c	;volatile
  1008                           
  1009                           ;main.c: 162: } else {
  1010  003B40  EFA5  F01D         	goto	l1328
  1011  003B44                     l123:
  1012  003B44  FFFF               	dw	65535	; assembler added errata NOP
  1013                           
  1014                           ;main.c: 163: LA3 = 0;
  1015  003B46  9689               	bcf	3977,3,c	;volatile
  1016                           
  1017                           ;main.c: 164: LA5 = 1;
  1018  003B48  8A89               	bsf	3977,5,c	;volatile
  1019  003B4A                     l1328:
  1020  003B4A  FFFF               	dw	65535	; assembler added errata NOP
  1021                           
  1022                           ;main.c: 165: };main.c: 166: LATD = tolower(SoN) == 's' ? SIMBOLO[position][x] : NUMERO[
      +                          position][x];
  1023  003B4C  505C               	movf	visualizar@SoN^0,w,c
  1024  003B4E  EC59  F01C         	call	_tolower
  1025  003B52  0A73               	xorlw	115
  1026  003B54  B4D8               	btfsc	status,2,c
  1027  003B56  EFAF  F01D         	goto	u301
  1028  003B5A  EFB2  F01D         	goto	u300
  1029  003B5E                     u301:
  1030  003B5E  FFFF               	dw	65535	; assembler added errata NOP
  1031  003B60  EFCA  F01D         	goto	l1332
  1032  003B64                     u300:
  1033  003B64  FFFF               	dw	65535	; assembler added errata NOP
  1034  003B66  5056               	movf	visualizar@position^0,w,c
  1035  003B68  0D03               	mullw	3
  1036  003B6A  0E01               	movlw	low _NUMERO
  1037  003B6C  6E59               	movwf	??_visualizar^0,c
  1038  003B6E  0E00               	movlw	high _NUMERO
  1039  003B70  6E5A               	movwf	(??_visualizar+1)^0,c
  1040  003B72  50F3               	movf	243,w,c
  1041  003B74  2659               	addwf	??_visualizar^0,f,c
  1042  003B76  50F4               	movf	244,w,c
  1043  003B78  225A               	addwfc	(??_visualizar+1)^0,f,c
  1044  003B7A  505F               	movf	visualizar@x^0,w,c
  1045  003B7C  2459               	addwf	??_visualizar^0,w,c
  1046  003B7E  6ED9               	movwf	fsr2l,c
  1047  003B80  0E00               	movlw	0
  1048  003B82  205A               	addwfc	(??_visualizar+1)^0,w,c
  1049  003B84  6EDA               	movwf	fsr2h,c
  1050  003B86  50DF               	movf	indf2,w,c
  1051  003B88  6E5B               	movwf	(??_visualizar+2)^0,c
  1052  003B8A  505B               	movf	(??_visualizar+2)^0,w,c
  1053  003B8C  6E5D               	movwf	_visualizar$162^0,c
  1054  003B8E  6A5E               	clrf	(_visualizar$162+1)^0,c
  1055  003B90  EFE0  F01D         	goto	l1334
  1056  003B94                     l1332:
  1057  003B94  FFFF               	dw	65535	; assembler added errata NOP
  1058  003B96  5056               	movf	visualizar@position^0,w,c
  1059  003B98  0D03               	mullw	3
  1060  003B9A  0E31               	movlw	low _SIMBOLO
  1061  003B9C  6E59               	movwf	??_visualizar^0,c
  1062  003B9E  0E00               	movlw	high _SIMBOLO
  1063  003BA0  6E5A               	movwf	(??_visualizar+1)^0,c
  1064  003BA2  50F3               	movf	243,w,c
  1065  003BA4  2659               	addwf	??_visualizar^0,f,c
  1066  003BA6  50F4               	movf	244,w,c
  1067  003BA8  225A               	addwfc	(??_visualizar+1)^0,f,c
  1068  003BAA  505F               	movf	visualizar@x^0,w,c
  1069  003BAC  2459               	addwf	??_visualizar^0,w,c
  1070  003BAE  6ED9               	movwf	fsr2l,c
  1071  003BB0  0E00               	movlw	0
  1072  003BB2  205A               	addwfc	(??_visualizar+1)^0,w,c
  1073  003BB4  6EDA               	movwf	fsr2h,c
  1074  003BB6  50DF               	movf	indf2,w,c
  1075  003BB8  6E5B               	movwf	(??_visualizar+2)^0,c
  1076  003BBA  505B               	movf	(??_visualizar+2)^0,w,c
  1077  003BBC  6E5D               	movwf	_visualizar$162^0,c
  1078  003BBE  6A5E               	clrf	(_visualizar$162+1)^0,c
  1079  003BC0                     l1334:
  1080  003BC0  FFFF               	dw	65535	; assembler added errata NOP
  1081  003BC2  C05D  FF8C         	movff	_visualizar$162,3980	;volatile
  1082  003BC6                     
  1083                           ;main.c: 167: LATE = x + from;
  1084  003BC6  505F               	movf	visualizar@x^0,w,c
  1085  003BC8  2457               	addwf	visualizar@from^0,w,c
  1086  003BCA  6E8D               	movwf	141,c	;volatile
  1087  003BCC                     
  1088                           ;main.c: 168: _delay((unsigned long)((5)*(4000000/4000.0)));
  1089  003BCC  0E05               	movlw	5
  1090  003BCE  6E59               	movwf	??_visualizar^0,c
  1091  003BD0  0EDF               	movlw	223
  1092  003BD2                     u447:
  1093  003BD2  FFFF               	dw	65535	; errata NOP
  1094  003BD4  2EE8               	decfsz	wreg,f,c
  1095  003BD6  D7FD               	bra	u447
  1096  003BD8  2E59               	decfsz	??_visualizar^0,f,c
  1097  003BDA  D7FB               	bra	u447
  1098  003BDC  2A5F               	incf	visualizar@x^0,f,c
  1099  003BDE  0E02               	movlw	2
  1100  003BE0  645F               	cpfsgt	visualizar@x^0,c
  1101  003BE2  EFF5  F01D         	goto	u311
  1102  003BE6  EFF8  F01D         	goto	u310
  1103  003BEA                     u311:
  1104  003BEA  FFFF               	dw	65535	; assembler added errata NOP
  1105  003BEC  EF79  F01D         	goto	l1320
  1106  003BF0                     u310:
  1107  003BF0                     l122:
  1108  003BF0  FFFF               	dw	65535	; assembler added errata NOP
  1109  003BF2  0012               	return		;funcret
  1110  003BF4  FFFF               	dw	65535	; errata NOP
  1111  003BF6                     __end_of_visualizar:
  1112                           	opt callstack 0
  1113                           
  1114 ;; *************** function _tolower *****************
  1115 ;; Defined at:
  1116 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\tolower.c"
  1117 ;; Parameters:    Size  Location     Type
  1118 ;;  c               1    wreg     unsigned char 
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;  c               1    0[COMRAM] unsigned char 
  1121 ;; Return value:  Size  Location     Type
  1122 ;;                  1    wreg      unsigned char 
  1123 ;; Registers used:
  1124 ;;		wreg, status,2, status,0
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1130 ;;      Params:         0       0       0       0       0       0       0
  1131 ;;      Locals:         1       0       0       0       0       0       0
  1132 ;;      Temps:          0       0       0       0       0       0       0
  1133 ;;      Totals:         1       0       0       0       0       0       0
  1134 ;;Total ram usage:        1 bytes
  1135 ;; Hardware stack levels used:    1
  1136 ;; This function calls:
  1137 ;;		Nothing
  1138 ;; This function is called by:
  1139 ;;		_visualizar
  1140 ;; This function uses a non-reentrant model
  1141 ;;
  1142                           
  1143                           	psect	text3
  1144  0038B2                     __ptext3:
  1145                           	opt callstack 0
  1146  0038B2                     _tolower:
  1147                           	opt callstack 0
  1148  0038B2  FFFF               	dw	65535	; assembler added errata NOP
  1149                           
  1150                           ;incstack = 0
  1151                           ;tolower@c stored from wreg
  1152  0038B4  6E55               	movwf	tolower@c^0,c
  1153  0038B6  0E5B               	movlw	91
  1154  0038B8  6055               	cpfslt	tolower@c^0,c
  1155  0038BA  EF61  F01C         	goto	u231
  1156  0038BE  EF64  F01C         	goto	u230
  1157  0038C2                     u231:
  1158  0038C2  FFFF               	dw	65535	; assembler added errata NOP
  1159  0038C4  EF70  F01C         	goto	l1276
  1160  0038C8                     u230:
  1161  0038C8  FFFF               	dw	65535	; assembler added errata NOP
  1162  0038CA  0E40               	movlw	64
  1163  0038CC  6455               	cpfsgt	tolower@c^0,c
  1164  0038CE  EF6B  F01C         	goto	u241
  1165  0038D2  EF6E  F01C         	goto	u240
  1166  0038D6                     u241:
  1167  0038D6  FFFF               	dw	65535	; assembler added errata NOP
  1168  0038D8  EF70  F01C         	goto	l1276
  1169  0038DC                     u240:
  1170  0038DC  FFFF               	dw	65535	; assembler added errata NOP
  1171  0038DE  8A55               	bsf	tolower@c^0,5,c
  1172  0038E0                     l1276:
  1173  0038E0  FFFF               	dw	65535	; assembler added errata NOP
  1174  0038E2  5055               	movf	tolower@c^0,w,c
  1175  0038E4  0012               	return		;funcret
  1176  0038E6  FFFF               	dw	65535	; errata NOP
  1177  0038E8                     __end_of_tolower:
  1178                           	opt callstack 0
  1179                           
  1180 ;; *************** function _operar *****************
  1181 ;; Defined at:
  1182 ;;		line 188 in file "main.c"
  1183 ;; Parameters:    Size  Location     Type
  1184 ;;  oper            1    wreg     unsigned char 
  1185 ;;  oper_1          1    8[COMRAM] unsigned char 
  1186 ;;  oper_2          1    9[COMRAM] unsigned char 
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;  oper            1   10[COMRAM] unsigned char 
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  1    wreg      unsigned char 
  1191 ;; Registers used:
  1192 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1198 ;;      Params:         2       0       0       0       0       0       0
  1199 ;;      Locals:         1       0       0       0       0       0       0
  1200 ;;      Temps:          0       0       0       0       0       0       0
  1201 ;;      Totals:         3       0       0       0       0       0       0
  1202 ;;Total ram usage:        3 bytes
  1203 ;; Hardware stack levels used:    1
  1204 ;; Hardware stack levels required when called:    3
  1205 ;; This function calls:
  1206 ;;		_and
  1207 ;;		_division
  1208 ;;		_module
  1209 ;;		_multi
  1210 ;;		_nand
  1211 ;;		_no_es_primo
  1212 ;;		_or
  1213 ;;		_resta
  1214 ;;		_suma
  1215 ;;		_xor
  1216 ;; This function is called by:
  1217 ;;		_main
  1218 ;; This function uses a non-reentrant model
  1219 ;;
  1220                           
  1221                           	psect	text4
  1222  003BF6                     __ptext4:
  1223                           	opt callstack 0
  1224  003BF6                     _operar:
  1225                           	opt callstack 0
  1226  003BF6  FFFF               	dw	65535	; assembler added errata NOP
  1227                           
  1228                           ;incstack = 0
  1229                           ;operar@oper stored from wreg
  1230  003BF8  6E5F               	movwf	operar@oper^0,c
  1231  003BFA                     
  1232                           ;main.c: 189: switch (oper) {
  1233  003BFA  EF6F  F01E         	goto	l1476
  1234  003BFE                     l1400:
  1235  003BFE  FFFF               	dw	65535	; assembler added errata NOP
  1236                           
  1237                           ;main.c: 191: return suma(oper_1, oper_2);
  1238  003C00  C05E  F055         	movff	operar@oper_2,suma@oper_2
  1239  003C04  505D               	movf	operar@oper_1^0,w,c
  1240  003C06  EC13  F01C         	call	_suma
  1241  003C0A  EF9F  F01E         	goto	l139
  1242  003C0E                     l1406:
  1243  003C0E  FFFF               	dw	65535	; assembler added errata NOP
  1244                           
  1245                           ;main.c: 194: return resta(oper_1, oper_2);
  1246  003C10  C05E  F055         	movff	operar@oper_2,resta@oper_2
  1247  003C14  505D               	movf	operar@oper_1^0,w,c
  1248  003C16  EC0D  F01C         	call	_resta
  1249  003C1A  EF9F  F01E         	goto	l139
  1250  003C1E                     l1412:
  1251  003C1E  FFFF               	dw	65535	; assembler added errata NOP
  1252                           
  1253                           ;main.c: 197: return multi(oper_1, oper_2);
  1254  003C20  C05E  F055         	movff	operar@oper_2,multi@oper_2
  1255  003C24  505D               	movf	operar@oper_1^0,w,c
  1256  003C26  EC1F  F01C         	call	_multi
  1257  003C2A  EF9F  F01E         	goto	l139
  1258  003C2E                     l1418:
  1259  003C2E  FFFF               	dw	65535	; assembler added errata NOP
  1260                           
  1261                           ;main.c: 200: return division(oper_1, oper_2);
  1262  003C30  C05E  F059         	movff	operar@oper_2,division@oper_2
  1263  003C34  505D               	movf	operar@oper_1^0,w,c
  1264  003C36  EC39  F01C         	call	_division
  1265  003C3A  EF9F  F01E         	goto	l139
  1266  003C3E                     l1424:
  1267  003C3E  FFFF               	dw	65535	; assembler added errata NOP
  1268                           
  1269                           ;main.c: 203: return module(oper_1, oper_2);
  1270  003C40  C05E  F059         	movff	operar@oper_2,module@oper_2
  1271  003C44  505D               	movf	operar@oper_1^0,w,c
  1272  003C46  EC26  F01C         	call	_module
  1273  003C4A  EF9F  F01E         	goto	l139
  1274  003C4E                     l1430:
  1275  003C4E  FFFF               	dw	65535	; assembler added errata NOP
  1276                           
  1277                           ;main.c: 206: return and(oper_1, oper_2);
  1278  003C50  C05E  F055         	movff	operar@oper_2,and@oper_2
  1279  003C54  505D               	movf	operar@oper_1^0,w,c
  1280  003C56  EC01  F01C         	call	_and
  1281  003C5A  EF9F  F01E         	goto	l139
  1282  003C5E                     l1436:
  1283  003C5E  FFFF               	dw	65535	; assembler added errata NOP
  1284                           
  1285                           ;main.c: 209: return or(oper_1, oper_2);
  1286  003C60  C05E  F055         	movff	operar@oper_2,or@oper_2
  1287  003C64  505D               	movf	operar@oper_1^0,w,c
  1288  003C66  EC07  F01C         	call	_or
  1289  003C6A  EF9F  F01E         	goto	l139
  1290  003C6E                     l1442:
  1291  003C6E  FFFF               	dw	65535	; assembler added errata NOP
  1292                           
  1293                           ;main.c: 212: return nand(oper_1, oper_2);
  1294  003C70  C05E  F057         	movff	operar@oper_2,nand@oper_2
  1295  003C74  505D               	movf	operar@oper_1^0,w,c
  1296  003C76  EC2F  F01C         	call	_nand
  1297  003C7A  EF9F  F01E         	goto	l139
  1298  003C7E                     l1448:
  1299  003C7E  FFFF               	dw	65535	; assembler added errata NOP
  1300                           
  1301                           ;main.c: 215: return xor(oper_1, oper_2);
  1302  003C80  C05E  F055         	movff	operar@oper_2,xor@oper_2
  1303  003C84  505D               	movf	operar@oper_1^0,w,c
  1304  003C86  EC19  F01C         	call	_xor
  1305  003C8A  EF9F  F01E         	goto	l139
  1306  003C8E                     l1454:
  1307  003C8E  FFFF               	dw	65535	; assembler added errata NOP
  1308                           
  1309                           ;main.c: 218: return no_es_primo(oper_1);
  1310  003C90  505D               	movf	operar@oper_1^0,w,c
  1311  003C92  ECE0  F01C         	call	_no_es_primo
  1312  003C96  EF9F  F01E         	goto	l139
  1313  003C9A                     l1460:
  1314  003C9A  FFFF               	dw	65535	; assembler added errata NOP
  1315                           
  1316                           ;main.c: 221: if (oper_1 == 2 && !module(oper_2, 2)) {
  1317  003C9C  0E02               	movlw	2
  1318  003C9E  185D               	xorwf	operar@oper_1^0,w,c
  1319  003CA0  A4D8               	btfss	status,2,c
  1320  003CA2  EF55  F01E         	goto	u341
  1321  003CA6  EF58  F01E         	goto	u340
  1322  003CAA                     u341:
  1323  003CAA  FFFF               	dw	65535	; assembler added errata NOP
  1324  003CAC  EF6B  F01E         	goto	l1468
  1325  003CB0                     u340:
  1326  003CB0  FFFF               	dw	65535	; assembler added errata NOP
  1327  003CB2  0E02               	movlw	2
  1328  003CB4  6E59               	movwf	module@oper_2^0,c
  1329  003CB6  505E               	movf	operar@oper_2^0,w,c
  1330  003CB8  EC26  F01C         	call	_module
  1331  003CBC  0900               	iorlw	0
  1332  003CBE  A4D8               	btfss	status,2,c
  1333  003CC0  EF64  F01E         	goto	u351
  1334  003CC4  EF67  F01E         	goto	u350
  1335  003CC8                     u351:
  1336  003CC8  FFFF               	dw	65535	; assembler added errata NOP
  1337  003CCA  EF6B  F01E         	goto	l1468
  1338  003CCE                     u350:
  1339  003CCE  FFFF               	dw	65535	; assembler added errata NOP
  1340  003CD0                     
  1341                           ;main.c: 222: return 1;
  1342  003CD0  0E01               	movlw	1
  1343  003CD2  EF9F  F01E         	goto	l139
  1344  003CD6                     l1468:
  1345  003CD6  FFFF               	dw	65535	; assembler added errata NOP
  1346                           
  1347                           ;main.c: 223: };main.c: 224: return 0;
  1348  003CD8  0E00               	movlw	0
  1349  003CDA  EF9F  F01E         	goto	l139
  1350  003CDE                     l1476:
  1351  003CDE  FFFF               	dw	65535	; assembler added errata NOP
  1352  003CE0  505F               	movf	operar@oper^0,w,c
  1353                           
  1354                           ; Switch size 1, requested type "simple"
  1355                           ; Number of cases is 11, Range of values is 0 to 10
  1356                           ; switch strategies available:
  1357                           ; Name         Instructions Cycles
  1358                           ; simple_byte           34    18 (average)
  1359                           ;	Chosen strategy is simple_byte
  1360  003CE2  0A00               	xorlw	0	; case 0
  1361  003CE4  B4D8               	btfsc	status,2,c
  1362  003CE6  EFFF  F01D         	goto	l1400
  1363  003CEA  0A01               	xorlw	1	; case 1
  1364  003CEC  B4D8               	btfsc	status,2,c
  1365  003CEE  EF07  F01E         	goto	l1406
  1366  003CF2  0A03               	xorlw	3	; case 2
  1367  003CF4  B4D8               	btfsc	status,2,c
  1368  003CF6  EF0F  F01E         	goto	l1412
  1369  003CFA  0A01               	xorlw	1	; case 3
  1370  003CFC  B4D8               	btfsc	status,2,c
  1371  003CFE  EF17  F01E         	goto	l1418
  1372  003D02  0A07               	xorlw	7	; case 4
  1373  003D04  B4D8               	btfsc	status,2,c
  1374  003D06  EF1F  F01E         	goto	l1424
  1375  003D0A  0A01               	xorlw	1	; case 5
  1376  003D0C  B4D8               	btfsc	status,2,c
  1377  003D0E  EF27  F01E         	goto	l1430
  1378  003D12  0A03               	xorlw	3	; case 6
  1379  003D14  B4D8               	btfsc	status,2,c
  1380  003D16  EF2F  F01E         	goto	l1436
  1381  003D1A  0A01               	xorlw	1	; case 7
  1382  003D1C  B4D8               	btfsc	status,2,c
  1383  003D1E  EF37  F01E         	goto	l1442
  1384  003D22  0A0F               	xorlw	15	; case 8
  1385  003D24  B4D8               	btfsc	status,2,c
  1386  003D26  EF3F  F01E         	goto	l1448
  1387  003D2A  0A01               	xorlw	1	; case 9
  1388  003D2C  B4D8               	btfsc	status,2,c
  1389  003D2E  EF47  F01E         	goto	l1454
  1390  003D32  0A03               	xorlw	3	; case 10
  1391  003D34  B4D8               	btfsc	status,2,c
  1392  003D36  EF4D  F01E         	goto	l1460
  1393  003D3A  EF9F  F01E         	goto	l139
  1394  003D3E                     l139:
  1395  003D3E  FFFF               	dw	65535	; assembler added errata NOP
  1396  003D40  0012               	return		;funcret
  1397  003D42  FFFF               	dw	65535	; errata NOP
  1398  003D44                     __end_of_operar:
  1399                           	opt callstack 0
  1400                           
  1401 ;; *************** function _xor *****************
  1402 ;; Defined at:
  1403 ;;		line 264 in file "main.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;  oper_1          1    wreg     unsigned char 
  1406 ;;  oper_2          1    0[COMRAM] unsigned char 
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;  oper_1          1    1[COMRAM] unsigned char 
  1409 ;; Return value:  Size  Location     Type
  1410 ;;                  1    wreg      unsigned char 
  1411 ;; Registers used:
  1412 ;;		wreg, status,2, status,0
  1413 ;; Tracked objects:
  1414 ;;		On entry : 0/0
  1415 ;;		On exit  : 0/0
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1418 ;;      Params:         1       0       0       0       0       0       0
  1419 ;;      Locals:         1       0       0       0       0       0       0
  1420 ;;      Temps:          0       0       0       0       0       0       0
  1421 ;;      Totals:         2       0       0       0       0       0       0
  1422 ;;Total ram usage:        2 bytes
  1423 ;; Hardware stack levels used:    1
  1424 ;; This function calls:
  1425 ;;		Nothing
  1426 ;; This function is called by:
  1427 ;;		_operar
  1428 ;; This function uses a non-reentrant model
  1429 ;;
  1430                           
  1431                           	psect	text5
  1432  003832                     __ptext5:
  1433                           	opt callstack 0
  1434  003832                     _xor:
  1435                           	opt callstack 0
  1436  003832  FFFF               	dw	65535	; assembler added errata NOP
  1437                           
  1438                           ;incstack = 0
  1439                           ;xor@oper_1 stored from wreg
  1440  003834  6E56               	movwf	xor@oper_1^0,c
  1441  003836                     
  1442                           ;main.c: 265: return oper_1 ^ oper_2;
  1443  003836  5056               	movf	xor@oper_1^0,w,c
  1444  003838  1855               	xorwf	xor@oper_2^0,w,c
  1445  00383A  0012               	return		;funcret
  1446  00383C  FFFF               	dw	65535	; errata NOP
  1447  00383E                     __end_of_xor:
  1448                           	opt callstack 0
  1449                           
  1450 ;; *************** function _suma *****************
  1451 ;; Defined at:
  1452 ;;		line 231 in file "main.c"
  1453 ;; Parameters:    Size  Location     Type
  1454 ;;  oper_1          1    wreg     unsigned char 
  1455 ;;  oper_2          1    0[COMRAM] unsigned char 
  1456 ;; Auto vars:     Size  Location     Type
  1457 ;;  oper_1          1    1[COMRAM] unsigned char 
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  1    wreg      unsigned char 
  1460 ;; Registers used:
  1461 ;;		wreg, status,2, status,0
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1467 ;;      Params:         1       0       0       0       0       0       0
  1468 ;;      Locals:         1       0       0       0       0       0       0
  1469 ;;      Temps:          0       0       0       0       0       0       0
  1470 ;;      Totals:         2       0       0       0       0       0       0
  1471 ;;Total ram usage:        2 bytes
  1472 ;; Hardware stack levels used:    1
  1473 ;; This function calls:
  1474 ;;		Nothing
  1475 ;; This function is called by:
  1476 ;;		_operar
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480                           	psect	text6
  1481  003826                     __ptext6:
  1482                           	opt callstack 0
  1483  003826                     _suma:
  1484                           	opt callstack 0
  1485  003826  FFFF               	dw	65535	; assembler added errata NOP
  1486                           
  1487                           ;incstack = 0
  1488                           ;suma@oper_1 stored from wreg
  1489  003828  6E56               	movwf	suma@oper_1^0,c
  1490  00382A                     
  1491                           ;main.c: 232: return oper_1 + oper_2;
  1492  00382A  5056               	movf	suma@oper_1^0,w,c
  1493  00382C  2455               	addwf	suma@oper_2^0,w,c
  1494  00382E  0012               	return		;funcret
  1495  003830  FFFF               	dw	65535	; errata NOP
  1496  003832                     __end_of_suma:
  1497                           	opt callstack 0
  1498                           
  1499 ;; *************** function _resta *****************
  1500 ;; Defined at:
  1501 ;;		line 235 in file "main.c"
  1502 ;; Parameters:    Size  Location     Type
  1503 ;;  oper_1          1    wreg     unsigned char 
  1504 ;;  oper_2          1    0[COMRAM] unsigned char 
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;  oper_1          1    1[COMRAM] unsigned char 
  1507 ;; Return value:  Size  Location     Type
  1508 ;;                  1    wreg      unsigned char 
  1509 ;; Registers used:
  1510 ;;		wreg, status,2, status,0
  1511 ;; Tracked objects:
  1512 ;;		On entry : 0/0
  1513 ;;		On exit  : 0/0
  1514 ;;		Unchanged: 0/0
  1515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1516 ;;      Params:         1       0       0       0       0       0       0
  1517 ;;      Locals:         1       0       0       0       0       0       0
  1518 ;;      Temps:          0       0       0       0       0       0       0
  1519 ;;      Totals:         2       0       0       0       0       0       0
  1520 ;;Total ram usage:        2 bytes
  1521 ;; Hardware stack levels used:    1
  1522 ;; This function calls:
  1523 ;;		Nothing
  1524 ;; This function is called by:
  1525 ;;		_operar
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           
  1529                           	psect	text7
  1530  00381A                     __ptext7:
  1531                           	opt callstack 0
  1532  00381A                     _resta:
  1533                           	opt callstack 0
  1534  00381A  FFFF               	dw	65535	; assembler added errata NOP
  1535                           
  1536                           ;incstack = 0
  1537                           ;resta@oper_1 stored from wreg
  1538  00381C  6E56               	movwf	resta@oper_1^0,c
  1539  00381E                     
  1540                           ;main.c: 236: return oper_1 - oper_2;
  1541  00381E  5055               	movf	resta@oper_2^0,w,c
  1542  003820  5C56               	subwf	resta@oper_1^0,w,c
  1543  003822  0012               	return		;funcret
  1544  003824  FFFF               	dw	65535	; errata NOP
  1545  003826                     __end_of_resta:
  1546                           	opt callstack 0
  1547                           
  1548 ;; *************** function _or *****************
  1549 ;; Defined at:
  1550 ;;		line 256 in file "main.c"
  1551 ;; Parameters:    Size  Location     Type
  1552 ;;  oper_1          1    wreg     unsigned char 
  1553 ;;  oper_2          1    0[COMRAM] unsigned char 
  1554 ;; Auto vars:     Size  Location     Type
  1555 ;;  oper_1          1    1[COMRAM] unsigned char 
  1556 ;; Return value:  Size  Location     Type
  1557 ;;                  1    wreg      unsigned char 
  1558 ;; Registers used:
  1559 ;;		wreg, status,2, status,0
  1560 ;; Tracked objects:
  1561 ;;		On entry : 0/0
  1562 ;;		On exit  : 0/0
  1563 ;;		Unchanged: 0/0
  1564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1565 ;;      Params:         1       0       0       0       0       0       0
  1566 ;;      Locals:         1       0       0       0       0       0       0
  1567 ;;      Temps:          0       0       0       0       0       0       0
  1568 ;;      Totals:         2       0       0       0       0       0       0
  1569 ;;Total ram usage:        2 bytes
  1570 ;; Hardware stack levels used:    1
  1571 ;; This function calls:
  1572 ;;		Nothing
  1573 ;; This function is called by:
  1574 ;;		_operar
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           
  1578                           	psect	text8
  1579  00380E                     __ptext8:
  1580                           	opt callstack 0
  1581  00380E                     _or:
  1582                           	opt callstack 0
  1583  00380E  FFFF               	dw	65535	; assembler added errata NOP
  1584                           
  1585                           ;incstack = 0
  1586                           ;or@oper_1 stored from wreg
  1587  003810  6E56               	movwf	or@oper_1^0,c
  1588  003812                     
  1589                           ;main.c: 257: return oper_1 | oper_2;
  1590  003812  5056               	movf	or@oper_1^0,w,c
  1591  003814  1055               	iorwf	or@oper_2^0,w,c
  1592  003816  0012               	return		;funcret
  1593  003818  FFFF               	dw	65535	; errata NOP
  1594  00381A                     __end_of_or:
  1595                           	opt callstack 0
  1596                           
  1597 ;; *************** function _no_es_primo *****************
  1598 ;; Defined at:
  1599 ;;		line 268 in file "main.c"
  1600 ;; Parameters:    Size  Location     Type
  1601 ;;  num             1    wreg     unsigned char 
  1602 ;; Auto vars:     Size  Location     Type
  1603 ;;  num             1    6[COMRAM] unsigned char 
  1604 ;;  i               1    7[COMRAM] unsigned char 
  1605 ;; Return value:  Size  Location     Type
  1606 ;;                  1    wreg      unsigned char 
  1607 ;; Registers used:
  1608 ;;		wreg, status,2, status,0, cstack
  1609 ;; Tracked objects:
  1610 ;;		On entry : 0/0
  1611 ;;		On exit  : 0/0
  1612 ;;		Unchanged: 0/0
  1613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1614 ;;      Params:         0       0       0       0       0       0       0
  1615 ;;      Locals:         2       0       0       0       0       0       0
  1616 ;;      Temps:          0       0       0       0       0       0       0
  1617 ;;      Totals:         2       0       0       0       0       0       0
  1618 ;;Total ram usage:        2 bytes
  1619 ;; Hardware stack levels used:    1
  1620 ;; Hardware stack levels required when called:    2
  1621 ;; This function calls:
  1622 ;;		_module
  1623 ;; This function is called by:
  1624 ;;		_operar
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628                           	psect	text9
  1629  0039C0                     __ptext9:
  1630                           	opt callstack 0
  1631  0039C0                     _no_es_primo:
  1632                           	opt callstack 0
  1633  0039C0  FFFF               	dw	65535	; assembler added errata NOP
  1634                           
  1635                           ;incstack = 0
  1636                           ;no_es_primo@num stored from wreg
  1637  0039C2  6E5B               	movwf	no_es_primo@num^0,c
  1638  0039C4                     
  1639                           ;main.c: 269: for (char i = 2; i < num; i++) {
  1640  0039C4  0E02               	movlw	2
  1641  0039C6  6E5C               	movwf	no_es_primo@i^0,c
  1642  0039C8  EFFB  F01C         	goto	l1384
  1643  0039CC                     l1376:
  1644  0039CC  FFFF               	dw	65535	; assembler added errata NOP
  1645                           
  1646                           ;main.c: 270: if (!module(num, i)) {
  1647  0039CE  C05C  F059         	movff	no_es_primo@i,module@oper_2
  1648  0039D2  505B               	movf	no_es_primo@num^0,w,c
  1649  0039D4  EC26  F01C         	call	_module
  1650  0039D8  0900               	iorlw	0
  1651  0039DA  A4D8               	btfss	status,2,c
  1652  0039DC  EFF2  F01C         	goto	u321
  1653  0039E0  EFF5  F01C         	goto	u320
  1654  0039E4                     u321:
  1655  0039E4  FFFF               	dw	65535	; assembler added errata NOP
  1656  0039E6  EFF9  F01C         	goto	l1382
  1657  0039EA                     u320:
  1658  0039EA  FFFF               	dw	65535	; assembler added errata NOP
  1659  0039EC                     
  1660                           ;main.c: 271: return 1;
  1661  0039EC  0E01               	movlw	1
  1662  0039EE  EF08  F01D         	goto	l185
  1663  0039F2                     l1382:
  1664  0039F2  FFFF               	dw	65535	; assembler added errata NOP
  1665  0039F4  2A5C               	incf	no_es_primo@i^0,f,c
  1666  0039F6                     l1384:
  1667  0039F6  FFFF               	dw	65535	; assembler added errata NOP
  1668  0039F8  505B               	movf	no_es_primo@num^0,w,c
  1669  0039FA  5C5C               	subwf	no_es_primo@i^0,w,c
  1670  0039FC  A0D8               	btfss	status,0,c
  1671  0039FE  EF03  F01D         	goto	u331
  1672  003A02  EF06  F01D         	goto	u330
  1673  003A06                     u331:
  1674  003A06  FFFF               	dw	65535	; assembler added errata NOP
  1675  003A08  EFE6  F01C         	goto	l1376
  1676  003A0C                     u330:
  1677  003A0C  FFFF               	dw	65535	; assembler added errata NOP
  1678  003A0E                     
  1679                           ;main.c: 272: };main.c: 273: };main.c: 274: return 0;
  1680  003A0E  0E00               	movlw	0
  1681  003A10                     l185:
  1682  003A10  FFFF               	dw	65535	; assembler added errata NOP
  1683  003A12  0012               	return		;funcret
  1684  003A14  FFFF               	dw	65535	; errata NOP
  1685  003A16                     __end_of_no_es_primo:
  1686                           	opt callstack 0
  1687                           
  1688 ;; *************** function _module *****************
  1689 ;; Defined at:
  1690 ;;		line 248 in file "main.c"
  1691 ;; Parameters:    Size  Location     Type
  1692 ;;  oper_1          1    wreg     unsigned char 
  1693 ;;  oper_2          1    4[COMRAM] unsigned char 
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;  oper_1          1    5[COMRAM] unsigned char 
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  1    wreg      unsigned char 
  1698 ;; Registers used:
  1699 ;;		wreg, status,2, status,0, cstack
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1705 ;;      Params:         1       0       0       0       0       0       0
  1706 ;;      Locals:         1       0       0       0       0       0       0
  1707 ;;      Temps:          0       0       0       0       0       0       0
  1708 ;;      Totals:         2       0       0       0       0       0       0
  1709 ;;Total ram usage:        2 bytes
  1710 ;; Hardware stack levels used:    1
  1711 ;; Hardware stack levels required when called:    1
  1712 ;; This function calls:
  1713 ;;		___lbmod
  1714 ;; This function is called by:
  1715 ;;		_operar
  1716 ;;		_no_es_primo
  1717 ;; This function uses a non-reentrant model
  1718 ;;
  1719                           
  1720                           	psect	text10
  1721  00384C                     __ptext10:
  1722                           	opt callstack 0
  1723  00384C                     _module:
  1724                           	opt callstack 0
  1725  00384C  FFFF               	dw	65535	; assembler added errata NOP
  1726                           
  1727                           ;incstack = 0
  1728                           ;module@oper_1 stored from wreg
  1729  00384E  6E5A               	movwf	module@oper_1^0,c
  1730  003850                     
  1731                           ;main.c: 249: return oper_1 % oper_2;
  1732  003850  C059  F055         	movff	module@oper_2,___lbmod@divisor
  1733  003854  505A               	movf	module@oper_1^0,w,c
  1734  003856  EC95  F01C         	call	___lbmod
  1735  00385A  0012               	return		;funcret
  1736  00385C  FFFF               	dw	65535	; errata NOP
  1737  00385E                     __end_of_module:
  1738                           	opt callstack 0
  1739                           
  1740 ;; *************** function ___lbmod *****************
  1741 ;; Defined at:
  1742 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lbmod.c"
  1743 ;; Parameters:    Size  Location     Type
  1744 ;;  dividend        1    wreg     unsigned char 
  1745 ;;  divisor         1    0[COMRAM] unsigned char 
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;  dividend        1    1[COMRAM] unsigned char 
  1748 ;;  rem             1    3[COMRAM] unsigned char 
  1749 ;;  counter         1    2[COMRAM] unsigned char 
  1750 ;; Return value:  Size  Location     Type
  1751 ;;                  1    wreg      unsigned char 
  1752 ;; Registers used:
  1753 ;;		wreg, status,2, status,0
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1759 ;;      Params:         1       0       0       0       0       0       0
  1760 ;;      Locals:         3       0       0       0       0       0       0
  1761 ;;      Temps:          0       0       0       0       0       0       0
  1762 ;;      Totals:         4       0       0       0       0       0       0
  1763 ;;Total ram usage:        4 bytes
  1764 ;; Hardware stack levels used:    1
  1765 ;; This function calls:
  1766 ;;		Nothing
  1767 ;; This function is called by:
  1768 ;;		_module
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772                           	psect	text11
  1773  00392A                     __ptext11:
  1774                           	opt callstack 0
  1775  00392A                     ___lbmod:
  1776                           	opt callstack 0
  1777  00392A  FFFF               	dw	65535	; assembler added errata NOP
  1778                           
  1779                           ;incstack = 0
  1780                           ;___lbmod@dividend stored from wreg
  1781  00392C  6E56               	movwf	___lbmod@dividend^0,c
  1782  00392E  0E08               	movlw	8
  1783  003930  6E57               	movwf	___lbmod@counter^0,c
  1784  003932  0E00               	movlw	0
  1785  003934  6E58               	movwf	___lbmod@rem^0,c
  1786  003936                     l1256:
  1787  003936  FFFF               	dw	65535	; assembler added errata NOP
  1788  003938  90D8               	bcf	status,0,c
  1789  00393A  3456               	rlcf	___lbmod@dividend^0,w,c
  1790  00393C  3458               	rlcf	___lbmod@rem^0,w,c
  1791  00393E  6E58               	movwf	___lbmod@rem^0,c
  1792  003940  90D8               	bcf	status,0,c
  1793  003942  3656               	rlcf	___lbmod@dividend^0,f,c
  1794  003944  5055               	movf	___lbmod@divisor^0,w,c
  1795  003946  5C58               	subwf	___lbmod@rem^0,w,c
  1796  003948  A0D8               	btfss	status,0,c
  1797  00394A  EFA9  F01C         	goto	u221
  1798  00394E  EFAC  F01C         	goto	u220
  1799  003952                     u221:
  1800  003952  FFFF               	dw	65535	; assembler added errata NOP
  1801  003954  EFAF  F01C         	goto	l1264
  1802  003958                     u220:
  1803  003958  FFFF               	dw	65535	; assembler added errata NOP
  1804  00395A  5055               	movf	___lbmod@divisor^0,w,c
  1805  00395C  5E58               	subwf	___lbmod@rem^0,f,c
  1806  00395E                     l1264:
  1807  00395E  FFFF               	dw	65535	; assembler added errata NOP
  1808  003960  2E57               	decfsz	___lbmod@counter^0,f,c
  1809  003962  EF9B  F01C         	goto	l1256
  1810  003966  5058               	movf	___lbmod@rem^0,w,c
  1811  003968  0012               	return		;funcret
  1812  00396A  FFFF               	dw	65535	; errata NOP
  1813  00396C                     __end_of___lbmod:
  1814                           	opt callstack 0
  1815                           
  1816 ;; *************** function _nand *****************
  1817 ;; Defined at:
  1818 ;;		line 260 in file "main.c"
  1819 ;; Parameters:    Size  Location     Type
  1820 ;;  oper_1          1    wreg     unsigned char 
  1821 ;;  oper_2          1    2[COMRAM] unsigned char 
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;  oper_1          1    3[COMRAM] unsigned char 
  1824 ;; Return value:  Size  Location     Type
  1825 ;;                  1    wreg      unsigned char 
  1826 ;; Registers used:
  1827 ;;		wreg, status,2, status,0, cstack
  1828 ;; Tracked objects:
  1829 ;;		On entry : 0/0
  1830 ;;		On exit  : 0/0
  1831 ;;		Unchanged: 0/0
  1832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1833 ;;      Params:         1       0       0       0       0       0       0
  1834 ;;      Locals:         1       0       0       0       0       0       0
  1835 ;;      Temps:          0       0       0       0       0       0       0
  1836 ;;      Totals:         2       0       0       0       0       0       0
  1837 ;;Total ram usage:        2 bytes
  1838 ;; Hardware stack levels used:    1
  1839 ;; Hardware stack levels required when called:    1
  1840 ;; This function calls:
  1841 ;;		_and
  1842 ;; This function is called by:
  1843 ;;		_operar
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847                           	psect	text12
  1848  00385E                     __ptext12:
  1849                           	opt callstack 0
  1850  00385E                     _nand:
  1851                           	opt callstack 0
  1852  00385E  FFFF               	dw	65535	; assembler added errata NOP
  1853                           
  1854                           ;incstack = 0
  1855                           ;nand@oper_1 stored from wreg
  1856  003860  6E58               	movwf	nand@oper_1^0,c
  1857  003862                     
  1858                           ;main.c: 261: return ~(and(oper_1, oper_2));
  1859  003862  C057  F055         	movff	nand@oper_2,and@oper_2
  1860  003866  5058               	movf	nand@oper_1^0,w,c
  1861  003868  EC01  F01C         	call	_and
  1862  00386C  0AFF               	xorlw	255
  1863  00386E  0012               	return		;funcret
  1864  003870  FFFF               	dw	65535	; errata NOP
  1865  003872                     __end_of_nand:
  1866                           	opt callstack 0
  1867                           
  1868 ;; *************** function _and *****************
  1869 ;; Defined at:
  1870 ;;		line 252 in file "main.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;  oper_1          1    wreg     unsigned char 
  1873 ;;  oper_2          1    0[COMRAM] unsigned char 
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;  oper_1          1    1[COMRAM] unsigned char 
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  1    wreg      unsigned char 
  1878 ;; Registers used:
  1879 ;;		wreg, status,2, status,0
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1885 ;;      Params:         1       0       0       0       0       0       0
  1886 ;;      Locals:         1       0       0       0       0       0       0
  1887 ;;      Temps:          0       0       0       0       0       0       0
  1888 ;;      Totals:         2       0       0       0       0       0       0
  1889 ;;Total ram usage:        2 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; This function calls:
  1892 ;;		Nothing
  1893 ;; This function is called by:
  1894 ;;		_operar
  1895 ;;		_nand
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           	psect	text13
  1900  003802                     __ptext13:
  1901                           	opt callstack 0
  1902  003802                     _and:
  1903                           	opt callstack 0
  1904  003802  FFFF               	dw	65535	; assembler added errata NOP
  1905                           
  1906                           ;incstack = 0
  1907                           ;and@oper_1 stored from wreg
  1908  003804  6E56               	movwf	and@oper_1^0,c
  1909  003806                     
  1910                           ;main.c: 253: return oper_1 & oper_2;
  1911  003806  5056               	movf	and@oper_1^0,w,c
  1912  003808  1455               	andwf	and@oper_2^0,w,c
  1913  00380A  0012               	return		;funcret
  1914  00380C  FFFF               	dw	65535	; errata NOP
  1915  00380E                     __end_of_and:
  1916                           	opt callstack 0
  1917                           
  1918 ;; *************** function _multi *****************
  1919 ;; Defined at:
  1920 ;;		line 239 in file "main.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;  oper_1          1    wreg     unsigned char 
  1923 ;;  oper_2          1    0[COMRAM] unsigned char 
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;  oper_1          1    1[COMRAM] unsigned char 
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  1    wreg      unsigned char 
  1928 ;; Registers used:
  1929 ;;		wreg, status,2, status,0, prodl, prodh
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1935 ;;      Params:         1       0       0       0       0       0       0
  1936 ;;      Locals:         1       0       0       0       0       0       0
  1937 ;;      Temps:          0       0       0       0       0       0       0
  1938 ;;      Totals:         2       0       0       0       0       0       0
  1939 ;;Total ram usage:        2 bytes
  1940 ;; Hardware stack levels used:    1
  1941 ;; This function calls:
  1942 ;;		Nothing
  1943 ;; This function is called by:
  1944 ;;		_operar
  1945 ;; This function uses a non-reentrant model
  1946 ;;
  1947                           
  1948                           	psect	text14
  1949  00383E                     __ptext14:
  1950                           	opt callstack 0
  1951  00383E                     _multi:
  1952                           	opt callstack 0
  1953  00383E  FFFF               	dw	65535	; assembler added errata NOP
  1954                           
  1955                           ;incstack = 0
  1956                           ;multi@oper_1 stored from wreg
  1957  003840  6E56               	movwf	multi@oper_1^0,c
  1958  003842                     
  1959                           ;main.c: 240: return oper_1 * oper_2;
  1960  003842  5056               	movf	multi@oper_1^0,w,c
  1961  003844  0255               	mulwf	multi@oper_2^0,c
  1962  003846  50F3               	movf	243,w,c
  1963  003848  0012               	return		;funcret
  1964  00384A  FFFF               	dw	65535	; errata NOP
  1965  00384C                     __end_of_multi:
  1966                           	opt callstack 0
  1967                           
  1968 ;; *************** function _division *****************
  1969 ;; Defined at:
  1970 ;;		line 243 in file "main.c"
  1971 ;; Parameters:    Size  Location     Type
  1972 ;;  oper_1          1    wreg     unsigned char 
  1973 ;;  oper_2          1    4[COMRAM] unsigned char 
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;  oper_1          1    5[COMRAM] unsigned char 
  1976 ;;  result          1    6[COMRAM] unsigned char 
  1977 ;; Return value:  Size  Location     Type
  1978 ;;                  1    wreg      unsigned char 
  1979 ;; Registers used:
  1980 ;;		wreg, status,2, status,0, cstack
  1981 ;; Tracked objects:
  1982 ;;		On entry : 0/0
  1983 ;;		On exit  : 0/0
  1984 ;;		Unchanged: 0/0
  1985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1986 ;;      Params:         1       0       0       0       0       0       0
  1987 ;;      Locals:         2       0       0       0       0       0       0
  1988 ;;      Temps:          0       0       0       0       0       0       0
  1989 ;;      Totals:         3       0       0       0       0       0       0
  1990 ;;Total ram usage:        3 bytes
  1991 ;; Hardware stack levels used:    1
  1992 ;; Hardware stack levels required when called:    1
  1993 ;; This function calls:
  1994 ;;		___lbdiv
  1995 ;; This function is called by:
  1996 ;;		_operar
  1997 ;; This function uses a non-reentrant model
  1998 ;;
  1999                           
  2000                           	psect	text15
  2001  003872                     __ptext15:
  2002                           	opt callstack 0
  2003  003872                     _division:
  2004                           	opt callstack 0
  2005  003872  FFFF               	dw	65535	; assembler added errata NOP
  2006                           
  2007                           ;incstack = 0
  2008                           ;division@oper_1 stored from wreg
  2009  003874  6E5A               	movwf	division@oper_1^0,c
  2010  003876                     
  2011                           ;main.c: 244: char result = oper_1 / oper_2;
  2012  003876  C059  F055         	movff	division@oper_2,___lbdiv@divisor
  2013  00387A  505A               	movf	division@oper_1^0,w,c
  2014  00387C  EC3A  F01D         	call	___lbdiv
  2015  003880  6E5B               	movwf	division@result^0,c
  2016  003882                     
  2017                           ;main.c: 245: return result;
  2018  003882  505B               	movf	division@result^0,w,c
  2019  003884  0012               	return		;funcret
  2020  003886  FFFF               	dw	65535	; errata NOP
  2021  003888                     __end_of_division:
  2022                           	opt callstack 0
  2023                           
  2024 ;; *************** function ___lbdiv *****************
  2025 ;; Defined at:
  2026 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lbdiv.c"
  2027 ;; Parameters:    Size  Location     Type
  2028 ;;  dividend        1    wreg     unsigned char 
  2029 ;;  divisor         1    0[COMRAM] unsigned char 
  2030 ;; Auto vars:     Size  Location     Type
  2031 ;;  dividend        1    1[COMRAM] unsigned char 
  2032 ;;  quotient        1    3[COMRAM] unsigned char 
  2033 ;;  counter         1    2[COMRAM] unsigned char 
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  1    wreg      unsigned char 
  2036 ;; Registers used:
  2037 ;;		wreg, status,2, status,0
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2043 ;;      Params:         1       0       0       0       0       0       0
  2044 ;;      Locals:         3       0       0       0       0       0       0
  2045 ;;      Temps:          0       0       0       0       0       0       0
  2046 ;;      Totals:         4       0       0       0       0       0       0
  2047 ;;Total ram usage:        4 bytes
  2048 ;; Hardware stack levels used:    1
  2049 ;; This function calls:
  2050 ;;		Nothing
  2051 ;; This function is called by:
  2052 ;;		_division
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           	psect	text16
  2057  003A74                     __ptext16:
  2058                           	opt callstack 0
  2059  003A74                     ___lbdiv:
  2060                           	opt callstack 0
  2061  003A74  FFFF               	dw	65535	; assembler added errata NOP
  2062                           
  2063                           ;incstack = 0
  2064                           ;___lbdiv@dividend stored from wreg
  2065  003A76  6E56               	movwf	___lbdiv@dividend^0,c
  2066  003A78  0E00               	movlw	0
  2067  003A7A  6E58               	movwf	___lbdiv@quotient^0,c
  2068  003A7C  5055               	movf	___lbdiv@divisor^0,w,c
  2069  003A7E  B4D8               	btfsc	status,2,c
  2070  003A80  EF44  F01D         	goto	u251
  2071  003A84  EF47  F01D         	goto	u250
  2072  003A88                     u251:
  2073  003A88  FFFF               	dw	65535	; assembler added errata NOP
  2074  003A8A  EF71  F01D         	goto	l1310
  2075  003A8E                     u250:
  2076  003A8E  FFFF               	dw	65535	; assembler added errata NOP
  2077  003A90  0E01               	movlw	1
  2078  003A92  6E57               	movwf	___lbdiv@counter^0,c
  2079  003A94  EF50  F01D         	goto	l1298
  2080  003A98                     l1294:
  2081  003A98  FFFF               	dw	65535	; assembler added errata NOP
  2082  003A9A  90D8               	bcf	status,0,c
  2083  003A9C  3655               	rlcf	___lbdiv@divisor^0,f,c
  2084  003A9E  2A57               	incf	___lbdiv@counter^0,f,c
  2085  003AA0                     l1298:
  2086  003AA0  FFFF               	dw	65535	; assembler added errata NOP
  2087  003AA2  AE55               	btfss	___lbdiv@divisor^0,7,c
  2088  003AA4  EF56  F01D         	goto	u261
  2089  003AA8  EF59  F01D         	goto	u260
  2090  003AAC                     u261:
  2091  003AAC  FFFF               	dw	65535	; assembler added errata NOP
  2092  003AAE  EF4C  F01D         	goto	l1294
  2093  003AB2                     u260:
  2094  003AB2  FFFF               	dw	65535	; assembler added errata NOP
  2095  003AB4                     l1300:
  2096  003AB4  FFFF               	dw	65535	; assembler added errata NOP
  2097  003AB6  90D8               	bcf	status,0,c
  2098  003AB8  3658               	rlcf	___lbdiv@quotient^0,f,c
  2099  003ABA  5055               	movf	___lbdiv@divisor^0,w,c
  2100  003ABC  5C56               	subwf	___lbdiv@dividend^0,w,c
  2101  003ABE  A0D8               	btfss	status,0,c
  2102  003AC0  EF64  F01D         	goto	u271
  2103  003AC4  EF67  F01D         	goto	u270
  2104  003AC8                     u271:
  2105  003AC8  FFFF               	dw	65535	; assembler added errata NOP
  2106  003ACA  EF6B  F01D         	goto	l1306
  2107  003ACE                     u270:
  2108  003ACE  FFFF               	dw	65535	; assembler added errata NOP
  2109  003AD0  5055               	movf	___lbdiv@divisor^0,w,c
  2110  003AD2  5E56               	subwf	___lbdiv@dividend^0,f,c
  2111  003AD4  8058               	bsf	___lbdiv@quotient^0,0,c
  2112  003AD6                     l1306:
  2113  003AD6  FFFF               	dw	65535	; assembler added errata NOP
  2114  003AD8  90D8               	bcf	status,0,c
  2115  003ADA  3255               	rrcf	___lbdiv@divisor^0,f,c
  2116  003ADC  2E57               	decfsz	___lbdiv@counter^0,f,c
  2117  003ADE  EF5A  F01D         	goto	l1300
  2118  003AE2                     l1310:
  2119  003AE2  FFFF               	dw	65535	; assembler added errata NOP
  2120  003AE4  5058               	movf	___lbdiv@quotient^0,w,c
  2121  003AE6  0012               	return		;funcret
  2122  003AE8  FFFF               	dw	65535	; errata NOP
  2123  003AEA                     __end_of___lbdiv:
  2124                           	opt callstack 0
  2125                           
  2126 ;; *************** function _init_config *****************
  2127 ;; Defined at:
  2128 ;;		line 123 in file "main.c"
  2129 ;; Parameters:    Size  Location     Type
  2130 ;;		None
  2131 ;; Auto vars:     Size  Location     Type
  2132 ;;		None
  2133 ;; Return value:  Size  Location     Type
  2134 ;;                  1    wreg      void 
  2135 ;; Registers used:
  2136 ;;		wreg, status,2
  2137 ;; Tracked objects:
  2138 ;;		On entry : 0/0
  2139 ;;		On exit  : 0/0
  2140 ;;		Unchanged: 0/0
  2141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2142 ;;      Params:         0       0       0       0       0       0       0
  2143 ;;      Locals:         0       0       0       0       0       0       0
  2144 ;;      Temps:          0       0       0       0       0       0       0
  2145 ;;      Totals:         0       0       0       0       0       0       0
  2146 ;;Total ram usage:        0 bytes
  2147 ;; Hardware stack levels used:    1
  2148 ;; This function calls:
  2149 ;;		Nothing
  2150 ;; This function is called by:
  2151 ;;		_main
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155                           	psect	text17
  2156  0038E8                     __ptext17:
  2157                           	opt callstack 0
  2158  0038E8                     _init_config:
  2159                           	opt callstack 0
  2160  0038E8  FFFF               	dw	65535	; assembler added errata NOP
  2161  0038EA                     
  2162                           ;main.c: 124: ADCON1 = 0X06;
  2163  0038EA  0E06               	movlw	6
  2164  0038EC  6EC1               	movwf	193,c	;volatile
  2165                           
  2166                           ;main.c: 126: TRISA = 0B00000000;
  2167  0038EE  0E00               	movlw	0
  2168  0038F0  6E92               	movwf	146,c	;volatile
  2169                           
  2170                           ;main.c: 127: LATA = 0;
  2171  0038F2  0E00               	movlw	0
  2172  0038F4  6E89               	movwf	137,c	;volatile
  2173                           
  2174                           ;main.c: 128: PORTA = 0;
  2175  0038F6  0E00               	movlw	0
  2176  0038F8  6E80               	movwf	128,c	;volatile
  2177  0038FA                     
  2178                           ;main.c: 130: TRISB = 0B11111111;
  2179  0038FA  6893               	setf	147,c	;volatile
  2180                           
  2181                           ;main.c: 131: LATB = 0;
  2182  0038FC  0E00               	movlw	0
  2183  0038FE  6E8A               	movwf	138,c	;volatile
  2184  003900                     
  2185                           ;main.c: 132: PORTB = 0B11111111;
  2186  003900  6881               	setf	129,c	;volatile
  2187  003902                     
  2188                           ;main.c: 134: TRISC = 0B11111111;
  2189  003902  6894               	setf	148,c	;volatile
  2190                           
  2191                           ;main.c: 135: LATC = 0;
  2192  003904  0E00               	movlw	0
  2193  003906  6E8B               	movwf	139,c	;volatile
  2194                           
  2195                           ;main.c: 136: PORTC = 0;
  2196  003908  0E00               	movlw	0
  2197  00390A  6E82               	movwf	130,c	;volatile
  2198                           
  2199                           ;main.c: 138: TRISD = 0B00000000;
  2200  00390C  0E00               	movlw	0
  2201  00390E  6E95               	movwf	149,c	;volatile
  2202                           
  2203                           ;main.c: 139: LATD = 0;
  2204  003910  0E00               	movlw	0
  2205  003912  6E8C               	movwf	140,c	;volatile
  2206                           
  2207                           ;main.c: 140: PORTD = 0;
  2208  003914  0E00               	movlw	0
  2209  003916  6E83               	movwf	131,c	;volatile
  2210                           
  2211                           ;main.c: 142: TRISE = 0B00000000;
  2212  003918  0E00               	movlw	0
  2213  00391A  6E96               	movwf	150,c	;volatile
  2214                           
  2215                           ;main.c: 143: LATE = 0;
  2216  00391C  0E00               	movlw	0
  2217  00391E  6E8D               	movwf	141,c	;volatile
  2218                           
  2219                           ;main.c: 144: PORTE = 0;
  2220  003920  0E00               	movlw	0
  2221  003922  6E84               	movwf	132,c	;volatile
  2222  003924  0012               	return		;funcret
  2223  003926  FFFF               	dw	65535	; errata NOP
  2224  003928                     __end_of_init_config:
  2225                           	opt callstack 0
  2226  003928  FFFF               	dw	65535	; assembler added errata NOP
  2227                           
  2228                           	psect	rparam
  2229  0000                     tosu	equ	0xFFF
  2230                           tosh	equ	0xFFE
  2231                           tosl	equ	0xFFD
  2232                           stkptr	equ	0xFFC
  2233                           pclatu	equ	0xFFB
  2234                           pclath	equ	0xFFA
  2235                           pcl	equ	0xFF9
  2236                           tblptru	equ	0xFF8
  2237                           tblptrh	equ	0xFF7
  2238                           tblptrl	equ	0xFF6
  2239                           tablat	equ	0xFF5
  2240                           prodh	equ	0xFF4
  2241                           prodl	equ	0xFF3
  2242                           indf0	equ	0xFEF
  2243                           postinc0	equ	0xFEE
  2244                           postdec0	equ	0xFED
  2245                           preinc0	equ	0xFEC
  2246                           plusw0	equ	0xFEB
  2247                           fsr0h	equ	0xFEA
  2248                           fsr0l	equ	0xFE9
  2249                           wreg	equ	0xFE8
  2250                           indf1	equ	0xFE7
  2251                           postinc1	equ	0xFE6
  2252                           postdec1	equ	0xFE5
  2253                           preinc1	equ	0xFE4
  2254                           plusw1	equ	0xFE3
  2255                           fsr1h	equ	0xFE2
  2256                           fsr1l	equ	0xFE1
  2257                           bsr	equ	0xFE0
  2258                           indf2	equ	0xFDF
  2259                           postinc2	equ	0xFDE
  2260                           postdec2	equ	0xFDD
  2261                           preinc2	equ	0xFDC
  2262                           plusw2	equ	0xFDB
  2263                           fsr2h	equ	0xFDA
  2264                           fsr2l	equ	0xFD9
  2265                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        84
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     27     111
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_show_error_message
    _show_error_message->_visualizar
    _visualizar->_tolower
    _operar->_no_es_primo
    _no_es_primo->_module
    _module->___lbmod
    _nand->_and
    _division->___lbdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0   13449
                                             12 COMRAM    15    15      0
                        _init_config
                             _operar
                 _show_error_message
                         _visualizar
 ---------------------------------------------------------------------------------
 (1) _show_error_message                                   1     1      0    4233
                                             11 COMRAM     1     1      0
                         _visualizar
 ---------------------------------------------------------------------------------
 (1) _visualizar                                          10     7      3    4233
                                              1 COMRAM    10     7      3
                            _tolower
 ---------------------------------------------------------------------------------
 (2) _tolower                                              1     1      0      67
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _operar                                               3     1      2    3993
                                              8 COMRAM     3     1      2
                                _and
                           _division
                             _module
                              _multi
                               _nand
                        _no_es_primo
                                 _or
                              _resta
                               _suma
                                _xor
 ---------------------------------------------------------------------------------
 (2) _xor                                                  2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _suma                                                 2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _resta                                                2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _or                                                   2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _no_es_primo                                          2     2      0     597
                                              6 COMRAM     2     2      0
                             _module
 ---------------------------------------------------------------------------------
 (3) _module                                               2     1      1     507
                                              4 COMRAM     2     1      1
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1     235
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _nand                                                 2     1      1     316
                                              2 COMRAM     2     1      1
                                _and
 ---------------------------------------------------------------------------------
 (3) _and                                                  2     1      1     196
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _multi                                                2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _division                                             3     2      1     381
                                              4 COMRAM     3     2      1
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1     238
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_config
   _operar
     _and
     _division
       ___lbdiv
     _module
       ___lbmod
     _multi
     _nand
       _and
     _no_es_primo
       _module
         ___lbmod
     _or
     _resta
     _suma
     _xor
   _show_error_message
     _visualizar
       _tolower
   _visualizar
     _tolower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1B      6F       1       87.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6F      15        0.0%
DATA                 0      0      6F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Feb 27 22:25:07 2020

                                                               l96 3E6C  
                                                               _or 380E  
                                                      __CFG_OSC$XT 000000  
                                                              l103 3EE0  
                                                              l122 3BF0  
                                                              l123 3B44  
                                                              l116 3924  
                                                              l134 3A70  
                                                              l161 3848  
                                                              l170 380A  
                                                              l155 382E  
                                                              l139 3D3E  
                                                              l164 3884  
                                                              ?_or 0055  
                                                              l173 3816  
                                                              l158 3822  
                                                              l167 385A  
                                                              l176 386E  
                                                              l185 3A10  
                                                              l179 383A  
                                                              l583 3AE6  
                                                              l852 38E4  
                                                              l589 3968  
                                                              _LA3 007C4B  
                                                              _LA5 007C4D  
                                                              u220 3958  
                                                              u300 3B64  
                                                              u221 3952  
                                                              u301 3B5E  
                                                              u230 38C8  
                                                              u310 3BF0  
                                                              u231 38C2  
                                                              u311 3BEA  
                                                              u320 39EA  
                                                              u240 38DC  
                                                              u400 3EF4  
                                                              u321 39E4  
                                                              u241 38D6  
                                                              u401 3EEE  
                                                              u250 3A8E  
                                                              u330 3A0C  
                                                              u410 3F7A  
                                                              u251 3A88  
                                                              u331 3A06  
                                                              u411 3F74  
                                                              u260 3AB2  
                                                              u340 3CB0  
                                                              u420 3FF6  
                                                              u261 3AAC  
                                                              u341 3CAA  
                                                              u421 3FF0  
                                                              u270 3ACE  
                                                              u350 3CCE  
                                                              u271 3AC8  
                                                              u351 3CC8  
                                                              u280 3B20  
                                                              u360 3DA4  
                                                              u281 3B1A  
                                                              u361 3D9E  
                                                              u290 3B3A  
                                                              u370 3DF6  
                                                              u291 3B34  
                                                              u371 3DF0  
                                                              u380 3E3A  
                                                              u437 3A66  
                                                              u381 3E34  
                                                              u390 3EC8  
                                                              u447 3BD2  
                                                              u391 3EC2  
                                                     __CFG_BOR$OFF 000000  
                                                              _and 3802  
                                                              _xor 3832  
                                                              wreg 000FE8  
                                                             ??_or 0056  
                                                     __CFG_LVP$OFF 000000  
                                                     __CFG_WDT$OFF 000000  
                                                             l1300 3AB4  
                                                             l1302 3AD0  
                                                             l1310 3AE2  
                                                             l1304 3AD4  
                                                             l1400 3BFE  
                                                             l1320 3AF2  
                                                             l1306 3AD6  
                                                             l1330 3B66  
                                                             l1314 3AEE  
                                                             l1308 3ADC  
                                                             l1260 3944  
                                                             l1412 3C1E  
                                                             l1340 3BDC  
                                                             l1332 3B94  
                                                             l1324 3B26  
                                                             l1500 3D8E  
                                                             ?_and 0055  
                                                             l1262 395A  
                                                             l1254 392E  
                                                             l1430 3C4E  
                                                             l1406 3C0E  
                                                             l1270 38B6  
                                                             l1342 3BDE  
                                                             l1334 3BC0  
                                                             l1326 3B3C  
                                                             l1510 3DE2  
                                                             l1502 3DA6  
                                                             l1352 3842  
                                                             l1264 395E  
                                                             l1256 3936  
                                                             l1280 3850  
                                                             l1344 382A  
                                                             l1424 3C3E  
                                                             l1272 38CA  
                                                             l1336 3BC6  
                                                             l1328 3B4A  
                                                             l1520 3E3C  
                                                             l1512 3DF8  
                                                             l1504 3DC0  
                                                             l1290 3A7C  
                                                             l1266 3966  
                                                             l1258 3940  
                                                             l1362 3812  
                                                             l1370 3836  
                                                             l1442 3C6E  
                                                             l1418 3C2E  
                                                             l1274 38DE  
                                                             l1338 3BCC  
                                                             l1530 3E8E  
                                                             l1522 3E44  
                                                             l1514 3E0A  
                                                             l1506 3DD8  
                                                             l1292 3A90  
                                                             l1356 3876  
                                                             l1284 3806  
                                                             l1348 381E  
                                                             l1460 3C9A  
                                                             l1436 3C5E  
                                                             l1276 38E0  
                                                             l1540 3EF6  
                                                             l1532 3EA4  
                                                             l1524 3E56  
                                                             l1516 3E0E  
                                                             l1508 3DDE  
                                                             l1390 38EA  
                                                             l1294 3A98  
                                                             l1358 3882  
                                                             l1366 3862  
                                                             l1382 39F2  
                                                             l1374 39C4  
                                                             l1462 3CB2  
                                                             l1454 3C8E  
                                                             l1542 3F02  
                                                             l1534 3EB6  
                                                             l1526 3E6E  
                                                             l1518 3E26  
                                                             l1392 38FA  
                                                             l1296 3A9E  
                                                             l1288 3A78  
                                                             l1376 39CC  
                                                             l1384 39F6  
                                                             l1464 3CD0  
                                                             l1448 3C7E  
                                                             l1480 3A60  
                                                             l1544 3F0C  
                                                             l1536 3ECA  
                                                             l1528 3E80  
                                                             l1560 3F80  
                                                             l1394 3900  
                                                             l1298 3AA0  
                                                             l1386 3A0E  
                                                             l1378 39EC  
                                                             l1554 3F2E  
                                                             l1546 3F12  
                                                             l1538 3ED6  
                                                             l1562 3FE0  
                                                             l1490 3D5E  
                                                             l1482 3D44  
                                                             l1396 3902  
                                                             l1468 3CD6  
                                                             l1476 3CDE  
                                                             l1564 3FE4  
                                                             l1556 3F66  
                                                             l1548 3F28  
                                                             l1484 3D4A  
                                                             l1398 3BFA  
                                                             l1478 3A18  
                                                             l1558 3F68  
                                                             l1486 3D52  
                                                             l1496 3D66  
                                                             l1488 3D58  
                                                             l1498 3D78  
                                                             ?_xor 0055  
                                                             _LATA 000F89  
                                                             _LATB 000F8A  
                                                             _LATC 000F8B  
                                                             _LATD 000F8C  
                                                             _LATE 000F8D  
                                                     __CFG_PWRT$ON 000000  
                                                             _main 3D44  
                                                             _nand 385E  
                                                             indf2 000FDF  
                                                             fsr1l 000FE1  
                                                             fsr2l 000FD9  
                                                             _suma 3826  
                                                             prodh 000FF4  
                                                             prodl 000FF3  
                                                             start 0002  
                                                     ___param_bank 000000  
                                                            ??_and 0056  
                                                            ??_xor 0056  
                                                            ?_main 0055  
                                                            ?_nand 0057  
                                                  __end_of___lbdiv 3AEA  
                                                  __end_of___lbmod 396C  
                                                            ?_suma 0055  
                                                     ?_init_config 0055  
                                                            _PORTA 000F80  
                                                            _PORTB 000F81  
                                                            _PORTC 000F82  
                                                            _PORTD 000F83  
                                                            _PORTE 000F84  
                                                            _TRISA 000F92  
                                                            _TRISB 000F93  
                                                            _TRISC 000F94  
                                                            _TRISD 000F95  
                                                            _TRISE 000F96  
                                                            _resta 381A  
                                                            _multi 383E  
                                                            main@i 0069  
                                                            main@x 006A  
                                                            tablat 000FF5  
                                                            status 000FD8  
                                                  __end_of_tolower 38E8  
                                                  ___lbdiv@divisor 0055  
                                                  ___lbdiv@counter 0057  
                                                     ?_no_es_primo 0055  
                                                  __initialization 3888  
                                                     __end_of_main 4000  
                                                     __end_of_nand 3872  
                                                     __end_of_suma 3832  
                                                           ??_main 0061  
                                                           ??_nand 0058  
                                                           ??_suma 0056  
                                                    __activetblptr 000002  
                                                           _ADCON1 000FC1  
                                                           ?_resta 0055  
                                                           ?_multi 0055  
                                                           _NUMERO 0001  
                                                 __end_of_division 3888  
                                                        ??___lbdiv 0056  
                                                        ??___lbmod 0056  
                                                           _module 384C  
                                                           _operar 3BF6  
                                               _show_error_message 3A16  
                                                    main@resultado 006D  
                                                     __pdataCOMRAM 0001  
                                                           tblptrh 000FF7  
                                                           tblptrl 000FF6  
                                                           tblptru 000FF8  
                                              ?_show_error_message 0055  
                                                        ??_tolower 0055  
                                                 ___lbdiv@dividend 0056  
                                                  ___lbmod@divisor 0055  
                                                       __accesstop 0080  
                                          __end_of__initialization 38A8  
                                                  ___lbmod@counter 0057  
                                                    ___rparam_used 000001  
                                                   __pcstackCOMRAM 0055  
                                             ??_show_error_message 0060  
                                                    __end_of_resta 3826  
                                                    __end_of_multi 384C  
                                                 ___lbdiv@quotient 0058  
                                                       __end_of_or 381A  
                                             __size_of_init_config 0040  
                                               visualizar@position 0056  
                                                          ??_resta 0056  
                                                          ??_multi 0056  
                                                   main@_resultado 0067  
                                             __size_of_no_es_primo 0056  
                                                          ?_module 0059  
                                                          ?_operar 005D  
                                                   no_es_primo@num 005B  
                                                          _SIMBOLO 0031  
                                                        ?_division 0059  
                                                   visualizar@from 0057  
                                                          __Hparam 0000  
                                                          __Lparam 0000  
                                                          ___lbdiv 3A74  
                                                          ___lbmod 392A  
                                                          __pcinit 3888  
                                                   _visualizar$162 005D  
                                                          __ramtop 0600  
                                                  __size_of_module 0012  
                                                  __size_of_operar 014E  
                                                          __ptext0 3D44  
                                                          __ptext1 3A16  
                                                          __ptext2 3AEA  
                                                          __ptext3 38B2  
                                                          __ptext4 3BF6  
                                                          __ptext5 3832  
                                                          __ptext6 3826  
                                                          __ptext7 381A  
                                                          __ptext8 380E  
                                                          __ptext9 39C0  
                                                      resta@oper_1 0056  
                                                      resta@oper_2 0055  
                                                     __size_of_and 000C  
                                                     __size_of_xor 000C  
                                                          _tolower 38B2  
                                             end_of_initialization 38A8  
                                                       ??_division 005A  
                                                    __Lmediumconst 0000  
                                                          postdec1 000FE5  
                                                          postinc0 000FEE  
                                                      multi@oper_1 0056  
                                                      multi@oper_2 0055  
                                                 ___lbmod@dividend 0056  
                                                      ___lbmod@rem 0058  
                                                       main@oper_1 006E  
                                                       main@oper_2 006F  
                                                       _visualizar 3AEA  
                                                       nand@oper_1 0058  
                                                       nand@oper_2 0057  
                                                    __pidataCOMRAM 396C  
                                                   __end_of_module 385E  
                                                   __end_of_operar 3D44  
                                              start_initialization 3888  
                                                 visualizar@enable 0058  
                                                   division@oper_1 005A  
                                                   division@oper_2 0059  
                                                      __end_of_and 380E  
                                                      __end_of_xor 383E  
                                                   division@result 005B  
                                                     no_es_primo@i 005C  
                                      __size_of_show_error_message 005E  
                                                         ??_module 005A  
                                                         ??_operar 005F  
                                                    ??_init_config 0055  
                                                __size_of_division 0016  
                                                      ?_visualizar 0056  
                                                    ??_no_es_primo 005B  
                                                         ?___lbdiv 0055  
                                                         ?___lbmod 0055  
                                                      visualizar@x 005F  
                                                     module@oper_1 005A  
                                                     module@oper_2 0059  
                                                        and@oper_1 0056  
                                                        and@oper_2 0055  
                                                    visualizar@SoN 005C  
                                                       operar@oper 005F  
                                                         ?_tolower 0055  
                                              __end_of_init_config 3928  
                                                   __size_of_resta 000C  
                                                   __size_of_multi 000E  
                                                      __size_of_or 000C  
                                              __end_of_no_es_primo 3A16  
                                                        main@i_154 006B  
                                              __size_of_visualizar 010C  
                                                        copy_data0 389C  
                                                       suma@oper_1 0056  
                                                       suma@oper_2 0055  
                                                         __Hrparam 0000  
                                                         __Lrparam 0000  
                                                 __size_of___lbdiv 0076  
                                                 __size_of___lbmod 0042  
                                                     operar@oper_1 005D  
                                                     operar@oper_2 005E  
                                                      _init_config 38E8  
                                                         _main$153 0064  
                                                         _main$149 0062  
                                                         __ptext10 384C  
                                                         __ptext11 392A  
                                                         __ptext12 385E  
                                                         __ptext13 3802  
                                                         __ptext14 383E  
                                                         __ptext15 3872  
                                                         __ptext16 3A74  
                                                         __ptext17 38E8  
                                                         _division 3872  
                                                 __size_of_tolower 0036  
                                                    __size_of_main 02BC  
                                                    __size_of_nand 0014  
                                                    __size_of_suma 000C  
                                                      _no_es_primo 39C0  
                                                         main@_SoN 0066  
                                                         main@oper 006C  
                                                         or@oper_1 0056  
                                                         or@oper_2 0055  
                                                        xor@oper_1 0056  
                                                        xor@oper_2 0055  
                                                     ??_visualizar 0059  
                                       __end_of_show_error_message 3A74  
                                                         tolower@c 0055  
                                               __end_of_visualizar 3BF6  
