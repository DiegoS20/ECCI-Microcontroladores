

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 26 16:27:09 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28  0000                     
    29                           ; Version 2.10
    30                           ; Generated 31/07/2019 GMT
    31                           ; 
    32                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F452 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     
    64                           	psect	idataCOMRAM
    65  003C23                     __pidataCOMRAM:
    66                           	opt callstack 0
    67                           
    68                           ;initializer for _NUMERO
    69  003C23  F8                 	db	248
    70  003C24  88                 	db	136
    71  003C25  F8                 	db	248
    72  003C26  40                 	db	64
    73  003C27  F8                 	db	248
    74  003C28  F8                 	db	248
    75  003C29  B8                 	db	184
    76  003C2A  A8                 	db	168
    77  003C2B  E8                 	db	232
    78  003C2C  A8                 	db	168
    79  003C2D  A8                 	db	168
    80  003C2E  F8                 	db	248
    81  003C2F  E0                 	db	224
    82  003C30  20                 	db	32
    83  003C31  F8                 	db	248
    84  003C32  E8                 	db	232
    85  003C33  A8                 	db	168
    86  003C34  B8                 	db	184
    87  003C35  F8                 	db	248
    88  003C36  A8                 	db	168
    89  003C37  B8                 	db	184
    90  003C38  80                 	db	128
    91  003C39  80                 	db	128
    92  003C3A  F8                 	db	248
    93  003C3B  F8                 	db	248
    94  003C3C  A8                 	db	168
    95  003C3D  F8                 	db	248
    96  003C3E  E0                 	db	224
    97  003C3F  A0                 	db	160
    98  003C40  F8                 	db	248
    99  003C41  F8                 	db	248
   100  003C42  A0                 	db	160
   101  003C43  F8                 	db	248
   102  003C44  F8                 	db	248
   103  003C45  28                 	db	40
   104  003C46  38                 	db	56
   105  003C47  F8                 	db	248
   106  003C48  88                 	db	136
   107  003C49  88                 	db	136
   108  003C4A  38                 	db	56
   109  003C4B  28                 	db	40
   110  003C4C  F8                 	db	248
   111  003C4D  F8                 	db	248
   112  003C4E  A8                 	db	168
   113  003C4F  A8                 	db	168
   114  003C50  F8                 	db	248
   115  003C51  A0                 	db	160
   116  003C52  A0                 	db	160
   117                           
   118                           ;initializer for _SIMBOLO
   119  003C53  20                 	db	32
   120  003C54  70                 	db	112
   121  003C55  20                 	db	32
   122  003C56  20                 	db	32
   123  003C57  20                 	db	32
   124  003C58  20                 	db	32
   125  003C59  50                 	db	80
   126  003C5A  20                 	db	32
   127  003C5B  50                 	db	80
   128  003C5C  10                 	db	16
   129  003C5D  20                 	db	32
   130  003C5E  40                 	db	64
   131  003C5F  70                 	db	112
   132  003C60  20                 	db	32
   133  003C61  70                 	db	112
   134  003C62  20                 	db	32
   135  003C63  40                 	db	64
   136  003C64  20                 	db	32
   137  003C65  40                 	db	64
   138  003C66  20                 	db	32
   139  003C67  40                 	db	64
   140  003C68  50                 	db	80
   141  003C69  60                 	db	96
   142  003C6A  50                 	db	80
   143  003C6B  60                 	db	96
   144  003C6C  50                 	db	80
   145  003C6D  60                 	db	96
   146  003C6E  80                 	db	128
   147  003C6F  F8                 	db	248
   148  003C70  80                 	db	128
   149  003C71  50                 	db	80
   150  003C72  50                 	db	80
   151  003C73  50                 	db	80
   152  0000                     _PORTE	set	3972
   153  0000                     _LATE	set	3981
   154  0000                     _TRISE	set	3990
   155  0000                     _PORTD	set	3971
   156  0000                     _LATD	set	3980
   157  0000                     _TRISD	set	3989
   158  0000                     _LATC	set	3979
   159  0000                     _TRISC	set	3988
   160  0000                     _LATB	set	3978
   161  0000                     _TRISB	set	3987
   162  0000                     _PORTA	set	3968
   163  0000                     _LATA	set	3977
   164  0000                     _TRISA	set	3986
   165  0000                     _ADCON1	set	4033
   166  0000                     _PORTC	set	3970
   167  0000                     _PORTB	set	3969
   168  0000                     _LA5	set	31821
   169  0000                     _LA3	set	31819
   170                           
   171                           ; #config settings
   172  0000                     
   173                           	psect	cinit
   174  003B0C                     __pcinit:
   175                           	opt callstack 0
   176  003B0C                     start_initialization:
   177                           	opt callstack 0
   178  003B0C                     __initialization:
   179                           	opt callstack 0
   180                           
   181                           ; Initialize objects allocated to COMRAM (81 bytes)
   182                           ; load TBLPTR registers with __pidataCOMRAM
   183  003B0C  0E23               	movlw	low __pidataCOMRAM
   184  003B0E  6EF6               	movwf	tblptrl,c
   185  003B10  0E3C               	movlw	high __pidataCOMRAM
   186  003B12  6EF7               	movwf	tblptrh,c
   187  003B14  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   188  003B16  6EF8               	movwf	tblptru,c
   189  003B18  EE00  F001         	lfsr	0,__pdataCOMRAM
   190  003B1C  EE10 F051          	lfsr	1,81
   191  003B20                     copy_data0:
   192  003B20  0009               	tblrd		*+
   193  003B22  CFF5 FFEE          	movff	tablat,postinc0
   194  003B26  50E5               	movf	postdec1,w,c
   195  003B28  50E1               	movf	fsr1l,w,c
   196  003B2A  E1FA               	bnz	copy_data0
   197  003B2C                     end_of_initialization:
   198                           	opt callstack 0
   199  003B2C                     __end_of__initialization:
   200                           	opt callstack 0
   201  003B2C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   202  003B2E  6EF8               	movwf	tblptru,c
   203  003B30  0100               	movlb	0
   204  003B32  EFE1  F01E         	goto	_main	;jump to C main() function
   205                           
   206                           	psect	dataCOMRAM
   207  000001                     __pdataCOMRAM:
   208                           	opt callstack 0
   209  000001                     _NUMERO:
   210                           	opt callstack 0
   211  000001                     	ds	48
   212  000031                     _SIMBOLO:
   213                           	opt callstack 0
   214  000031                     	ds	33
   215                           
   216                           	psect	cstackCOMRAM
   217  000052                     __pcstackCOMRAM:
   218                           	opt callstack 0
   219  000052                     suma@oper_2:
   220                           	opt callstack 0
   221  000052                     resta@oper_2:
   222                           	opt callstack 0
   223  000052                     multi@oper_2:
   224                           	opt callstack 0
   225  000052                     and@oper_2:
   226                           	opt callstack 0
   227  000052                     or@oper_2:
   228                           	opt callstack 0
   229  000052                     xor@oper_2:
   230                           	opt callstack 0
   231  000052                     ___lbdiv@divisor:
   232                           	opt callstack 0
   233  000052                     ___lbmod@divisor:
   234                           	opt callstack 0
   235  000052                     tolower@c:
   236                           	opt callstack 0
   237                           
   238                           ; 1 bytes @ 0x0
   239  000052                     	ds	1
   240  000053                     visualizar@position:
   241                           	opt callstack 0
   242  000053                     suma@oper_1:
   243                           	opt callstack 0
   244  000053                     multi@oper_1:
   245                           	opt callstack 0
   246  000053                     and@oper_1:
   247                           	opt callstack 0
   248  000053                     or@oper_1:
   249                           	opt callstack 0
   250  000053                     xor@oper_1:
   251                           	opt callstack 0
   252  000053                     ___lbdiv@dividend:
   253                           	opt callstack 0
   254  000053                     ___lbmod@dividend:
   255                           	opt callstack 0
   256                           
   257                           ; 1 bytes @ 0x1
   258  000053                     	ds	1
   259  000054                     visualizar@from:
   260                           	opt callstack 0
   261  000054                     resta@oper_1:
   262                           	opt callstack 0
   263  000054                     nand@oper_2:
   264                           	opt callstack 0
   265  000054                     ___lbdiv@counter:
   266                           	opt callstack 0
   267  000054                     ___lbmod@counter:
   268                           	opt callstack 0
   269                           
   270                           ; 1 bytes @ 0x2
   271  000054                     	ds	1
   272  000055                     visualizar@enable:
   273                           	opt callstack 0
   274  000055                     nand@oper_1:
   275                           	opt callstack 0
   276  000055                     ___lbdiv@quotient:
   277                           	opt callstack 0
   278  000055                     ___lbmod@rem:
   279                           	opt callstack 0
   280                           
   281                           ; 1 bytes @ 0x3
   282  000055                     	ds	1
   283  000056                     ??_visualizar:
   284  000056                     division@oper_2:
   285                           	opt callstack 0
   286  000056                     module@oper_2:
   287                           	opt callstack 0
   288                           
   289                           ; 1 bytes @ 0x4
   290  000056                     	ds	1
   291  000057                     division@oper_1:
   292                           	opt callstack 0
   293  000057                     module@oper_1:
   294                           	opt callstack 0
   295                           
   296                           ; 1 bytes @ 0x5
   297  000057                     	ds	1
   298  000058                     division@result:
   299                           	opt callstack 0
   300  000058                     no_es_primo@num:
   301                           	opt callstack 0
   302                           
   303                           ; 1 bytes @ 0x6
   304  000058                     	ds	1
   305  000059                     visualizar@SoN:
   306                           	opt callstack 0
   307  000059                     operar@oper_1:
   308                           	opt callstack 0
   309                           
   310                           ; 1 bytes @ 0x7
   311  000059                     	ds	1
   312  00005A                     operar@oper_2:
   313                           	opt callstack 0
   314  00005A                     _visualizar$154:
   315                           	opt callstack 0
   316                           
   317                           ; 2 bytes @ 0x8
   318  00005A                     	ds	1
   319  00005B                     operar@oper:
   320                           	opt callstack 0
   321                           
   322                           ; 1 bytes @ 0x9
   323  00005B                     	ds	1
   324  00005C                     visualizar@x:
   325                           	opt callstack 0
   326                           
   327                           ; 1 bytes @ 0xA
   328  00005C                     	ds	1
   329  00005D                     ??_main:
   330                           
   331                           ; 1 bytes @ 0xB
   332  00005D                     	ds	1
   333  00005E                     _main$145:
   334                           	opt callstack 0
   335                           
   336                           ; 2 bytes @ 0xC
   337  00005E                     	ds	2
   338  000060                     main@resultado:
   339                           	opt callstack 0
   340                           
   341                           ; 1 bytes @ 0xE
   342  000060                     	ds	1
   343  000061                     main@i:
   344                           	opt callstack 0
   345                           
   346                           ; 1 bytes @ 0xF
   347  000061                     	ds	1
   348  000062                     main@x:
   349                           	opt callstack 0
   350                           
   351                           ; 1 bytes @ 0x10
   352  000062                     	ds	1
   353  000063                     main@oper:
   354                           	opt callstack 0
   355                           
   356                           ; 1 bytes @ 0x11
   357  000063                     	ds	1
   358  000064                     main@oper_1:
   359                           	opt callstack 0
   360                           
   361                           ; 1 bytes @ 0x12
   362  000064                     	ds	1
   363  000065                     main@oper_2:
   364                           	opt callstack 0
   365                           
   366                           ; 1 bytes @ 0x13
   367  000065                     	ds	1
   368                           
   369 ;;
   370 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   371 ;;
   372 ;; *************** function _main *****************
   373 ;; Defined at:
   374 ;;		line 57 in file "main.c"
   375 ;; Parameters:    Size  Location     Type
   376 ;;		None
   377 ;; Auto vars:     Size  Location     Type
   378 ;;  x               1   16[COMRAM] unsigned char 
   379 ;;  i               1   15[COMRAM] unsigned char 
   380 ;;  oper_2          1   19[COMRAM] unsigned char 
   381 ;;  oper_1          1   18[COMRAM] unsigned char 
   382 ;;  oper            1   17[COMRAM] unsigned char 
   383 ;;  resultado       1   14[COMRAM] unsigned char 
   384 ;; Return value:  Size  Location     Type
   385 ;;                  1    wreg      void 
   386 ;; Registers used:
   387 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   388 ;; Tracked objects:
   389 ;;		On entry : 0/0
   390 ;;		On exit  : 0/0
   391 ;;		Unchanged: 0/0
   392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   393 ;;      Params:         0       0       0       0       0       0       0
   394 ;;      Locals:         8       0       0       0       0       0       0
   395 ;;      Temps:          1       0       0       0       0       0       0
   396 ;;      Totals:         9       0       0       0       0       0       0
   397 ;;Total ram usage:        9 bytes
   398 ;; Hardware stack levels required when called:    4
   399 ;; This function calls:
   400 ;;		_init_config
   401 ;;		_operar
   402 ;;		_visualizar
   403 ;; This function is called by:
   404 ;;		Startup code after reset
   405 ;; This function uses a non-reentrant model
   406 ;;
   407                           
   408                           	psect	text0
   409  003DC2                     __ptext0:
   410                           	opt callstack 0
   411  003DC2                     _main:
   412                           	opt callstack 27
   413  003DC2  FFFF               	dw	65535	; assembler added errata NOP
   414                           
   415                           ;main.c: 58: char oper_1;;main.c: 59: char oper_2;;main.c: 60: char oper;;main.c: 61: ch
      +                          ar resultado;;main.c: 63: init_config();
   416  003DC4  ECCF  F01D         	call	_init_config	;wreg free
   417  003DC8                     l1366:
   418  003DC8  FFFF               	dw	65535	; assembler added errata NOP
   419                           
   420                           ;main.c: 65: oper_1 = PORTB>>4;
   421  003DCA  3881               	swapf	129,w,c	;volatile
   422  003DCC  0B0F               	andlw	15
   423  003DCE  6E64               	movwf	main@oper_1^0,c
   424  003DD0                     
   425                           ;main.c: 66: oper_2 = PORTB&0X0F;
   426  003DD0  5081               	movf	129,w,c	;volatile
   427  003DD2  0B0F               	andlw	15
   428  003DD4  6E65               	movwf	main@oper_2^0,c
   429  003DD6                     
   430                           ;main.c: 67: oper = PORTC&0X0F;
   431  003DD6  5082               	movf	130,w,c	;volatile
   432  003DD8  0B0F               	andlw	15
   433  003DDA  6E63               	movwf	main@oper^0,c
   434  003DDC                     
   435                           ;main.c: 70: for (char i = 0; i < 200; i++) {
   436  003DDC  0E00               	movlw	0
   437  003DDE  6E61               	movwf	main@i^0,c
   438  003DE0  EF52  F01F         	goto	l1400
   439  003DE4                     l1378:
   440  003DE4  FFFF               	dw	65535	; assembler added errata NOP
   441                           
   442                           ;main.c: 73: resultado = oper_1 < oper_2 ? operar(oper, oper_2, oper_1) : operar(oper, o
      +                          per_1, oper_2);
   443  003DE6  5065               	movf	main@oper_2^0,w,c
   444  003DE8  5C64               	subwf	main@oper_1^0,w,c
   445  003DEA  A0D8               	btfss	status,0,c
   446  003DEC  EFFA  F01E         	goto	u281
   447  003DF0  EFFD  F01E         	goto	u280
   448  003DF4                     u281:
   449  003DF4  FFFF               	dw	65535	; assembler added errata NOP
   450  003DF6  EF0B  F01F         	goto	l1382
   451  003DFA                     u280:
   452  003DFA  FFFF               	dw	65535	; assembler added errata NOP
   453  003DFC  C064  F059         	movff	main@oper_1,operar@oper_1
   454  003E00  C065  F05A         	movff	main@oper_2,operar@oper_2
   455  003E04  5063               	movf	main@oper^0,w,c
   456  003E06  EC6A  F01F         	call	_operar
   457  003E0A  6E5D               	movwf	??_main^0,c
   458  003E0C  505D               	movf	??_main^0,w,c
   459  003E0E  6E5E               	movwf	_main$145^0,c
   460  003E10  6A5F               	clrf	(_main$145+1)^0,c
   461  003E12  EF17  F01F         	goto	l1384
   462  003E16                     l1382:
   463  003E16  FFFF               	dw	65535	; assembler added errata NOP
   464  003E18  C065  F059         	movff	main@oper_2,operar@oper_1
   465  003E1C  C064  F05A         	movff	main@oper_1,operar@oper_2
   466  003E20  5063               	movf	main@oper^0,w,c
   467  003E22  EC6A  F01F         	call	_operar
   468  003E26  6E5D               	movwf	??_main^0,c
   469  003E28  505D               	movf	??_main^0,w,c
   470  003E2A  6E5E               	movwf	_main$145^0,c
   471  003E2C  6A5F               	clrf	(_main$145+1)^0,c
   472  003E2E                     l1384:
   473  003E2E  FFFF               	dw	65535	; assembler added errata NOP
   474  003E30  C05E  F060         	movff	_main$145,main@resultado
   475  003E34                     
   476                           ;main.c: 74: char x = 0;
   477  003E34  0E00               	movlw	0
   478  003E36  6E62               	movwf	main@x^0,c
   479  003E38                     
   480                           ;main.c: 75: if (oper_1 < oper_2) {
   481  003E38  5065               	movf	main@oper_2^0,w,c
   482  003E3A  5C64               	subwf	main@oper_1^0,w,c
   483  003E3C  B0D8               	btfsc	status,0,c
   484  003E3E  EF23  F01F         	goto	u291
   485  003E42  EF26  F01F         	goto	u290
   486  003E46                     u291:
   487  003E46  FFFF               	dw	65535	; assembler added errata NOP
   488  003E48  EF32  F01F         	goto	l1394
   489  003E4C                     u290:
   490  003E4C  FFFF               	dw	65535	; assembler added errata NOP
   491  003E4E                     
   492                           ;main.c: 76: visualizar('s', 1, x, 1);
   493  003E4E  0E01               	movlw	1
   494  003E50  6E53               	movwf	visualizar@position^0,c
   495  003E52  0E00               	movlw	0
   496  003E54  6E54               	movwf	visualizar@from^0,c
   497  003E56  0E01               	movlw	1
   498  003E58  6E55               	movwf	visualizar@enable^0,c
   499  003E5A  0E73               	movlw	115
   500  003E5C  EC75  F01E         	call	_visualizar
   501  003E60                     
   502                           ;main.c: 77: x += 3;
   503  003E60  0E03               	movlw	3
   504  003E62  2662               	addwf	main@x^0,f,c
   505  003E64                     l1394:
   506  003E64  FFFF               	dw	65535	; assembler added errata NOP
   507                           
   508                           ;main.c: 78: };main.c: 80: visualizar('n', resultado, x, 1);
   509  003E66  C060  F053         	movff	main@resultado,visualizar@position
   510  003E6A  C062  F054         	movff	main@x,visualizar@from
   511  003E6E  0E01               	movlw	1
   512  003E70  6E55               	movwf	visualizar@enable^0,c
   513  003E72  0E6E               	movlw	110
   514  003E74  EC75  F01E         	call	_visualizar
   515                           
   516                           ;main.c: 81: break;
   517  003E78  EF5A  F01F         	goto	l1402
   518  003E7C                     l1396:
   519  003E7C  FFFF               	dw	65535	; assembler added errata NOP
   520                           
   521                           ;main.c: 83: resultado = operar(oper, oper_1, oper_2);
   522  003E7E  C064  F059         	movff	main@oper_1,operar@oper_1
   523  003E82  C065  F05A         	movff	main@oper_2,operar@oper_2
   524  003E86  5063               	movf	main@oper^0,w,c
   525  003E88  EC6A  F01F         	call	_operar
   526  003E8C  6E60               	movwf	main@resultado^0,c
   527  003E8E                     
   528                           ;main.c: 84: visualizar('n', resultado, 0, 1);
   529  003E8E  C060  F053         	movff	main@resultado,visualizar@position
   530  003E92  0E00               	movlw	0
   531  003E94  6E54               	movwf	visualizar@from^0,c
   532  003E96  0E01               	movlw	1
   533  003E98  6E55               	movwf	visualizar@enable^0,c
   534  003E9A  0E6E               	movlw	110
   535  003E9C  EC75  F01E         	call	_visualizar
   536                           
   537                           ;main.c: 85: }
   538  003EA0  EF5A  F01F         	goto	l1402
   539  003EA4                     l1400:
   540  003EA4  FFFF               	dw	65535	; assembler added errata NOP
   541  003EA6  5063               	movf	main@oper^0,w,c
   542                           
   543                           ; Switch size 1, requested type "simple"
   544                           ; Number of cases is 1, Range of values is 1 to 1
   545                           ; switch strategies available:
   546                           ; Name         Instructions Cycles
   547                           ; simple_byte            4     3 (average)
   548                           ;	Chosen strategy is simple_byte
   549  003EA8  0A01               	xorlw	1	; case 1
   550  003EAA  B4D8               	btfsc	status,2,c
   551  003EAC  EFF2  F01E         	goto	l1378
   552  003EB0  EF3E  F01F         	goto	l1396
   553  003EB4                     l1402:
   554  003EB4  FFFF               	dw	65535	; assembler added errata NOP
   555  003EB6  2A61               	incf	main@i^0,f,c
   556  003EB8  0EC7               	movlw	199
   557  003EBA  6461               	cpfsgt	main@i^0,c
   558  003EBC  EF62  F01F         	goto	u301
   559  003EC0  EF65  F01F         	goto	u300
   560  003EC4                     u301:
   561  003EC4  FFFF               	dw	65535	; assembler added errata NOP
   562  003EC6  EF52  F01F         	goto	l1400
   563  003ECA                     u300:
   564  003ECA  FFFF               	dw	65535	; assembler added errata NOP
   565  003ECC  EFE4  F01E         	goto	l1366
   566  003ED0  EF01  F000         	goto	start
   567  003ED4                     __end_of_main:
   568                           	opt callstack 0
   569                           
   570 ;; *************** function _visualizar *****************
   571 ;; Defined at:
   572 ;;		line 121 in file "main.c"
   573 ;; Parameters:    Size  Location     Type
   574 ;;  SoN             1    wreg     unsigned char 
   575 ;;  position        1    1[COMRAM] unsigned char 
   576 ;;  from            1    2[COMRAM] unsigned char 
   577 ;;  enable          1    3[COMRAM] unsigned char 
   578 ;; Auto vars:     Size  Location     Type
   579 ;;  SoN             1    7[COMRAM] unsigned char 
   580 ;;  x               1   10[COMRAM] unsigned char 
   581 ;; Return value:  Size  Location     Type
   582 ;;                  1    wreg      void 
   583 ;; Registers used:
   584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   585 ;; Tracked objects:
   586 ;;		On entry : 0/0
   587 ;;		On exit  : 0/0
   588 ;;		Unchanged: 0/0
   589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   590 ;;      Params:         3       0       0       0       0       0       0
   591 ;;      Locals:         4       0       0       0       0       0       0
   592 ;;      Temps:          3       0       0       0       0       0       0
   593 ;;      Totals:        10       0       0       0       0       0       0
   594 ;;Total ram usage:       10 bytes
   595 ;; Hardware stack levels used:    1
   596 ;; Hardware stack levels required when called:    1
   597 ;; This function calls:
   598 ;;		_tolower
   599 ;; This function is called by:
   600 ;;		_main
   601 ;;		_see_full_operation
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605                           	psect	text1
   606  003CEA                     __ptext1:
   607                           	opt callstack 0
   608  003CEA                     _visualizar:
   609                           	opt callstack 0
   610  003CEA  FFFF               	dw	65535	; assembler added errata NOP
   611                           
   612                           ;incstack = 0
   613                           ;visualizar@SoN stored from wreg
   614  003CEC  6E59               	movwf	visualizar@SoN^0,c
   615  003CEE                     
   616                           ;main.c: 122: for (char x = 0; x < 3; x++) {
   617  003CEE  0E00               	movlw	0
   618  003CF0  6E5C               	movwf	visualizar@x^0,c
   619  003CF2                     l1344:
   620  003CF2  FFFF               	dw	65535	; assembler added errata NOP
   621                           
   622                           ;main.c: 123: if (enable == 1) {
   623  003CF4  0455               	decf	visualizar@enable^0,w,c
   624  003CF6  A4D8               	btfss	status,2,c
   625  003CF8  EF80  F01E         	goto	u251
   626  003CFC  EF83  F01E         	goto	u250
   627  003D00                     u251:
   628  003D00  FFFF               	dw	65535	; assembler added errata NOP
   629  003D02  EF88  F01E         	goto	l97
   630  003D06                     u250:
   631  003D06  FFFF               	dw	65535	; assembler added errata NOP
   632  003D08                     
   633                           ;main.c: 124: LA3 = 1;
   634  003D08  8689               	bsf	3977,3,c	;volatile
   635                           
   636                           ;main.c: 125: LA5 = 0;
   637  003D0A  9A89               	bcf	3977,5,c	;volatile
   638                           
   639                           ;main.c: 126: } else {
   640  003D0C  EF8B  F01E         	goto	l1348
   641  003D10                     l97:
   642  003D10  FFFF               	dw	65535	; assembler added errata NOP
   643                           
   644                           ;main.c: 127: LA3 = 0;
   645  003D12  9689               	bcf	3977,3,c	;volatile
   646                           
   647                           ;main.c: 128: LA5 = 1;
   648  003D14  8A89               	bsf	3977,5,c	;volatile
   649  003D16                     l1348:
   650  003D16  FFFF               	dw	65535	; assembler added errata NOP
   651                           
   652                           ;main.c: 129: };main.c: 130: LATD = tolower(SoN) == 's' ? SIMBOLO[position][x] : NUMERO[
      +                          position][x];
   653  003D18  5059               	movf	visualizar@SoN^0,w,c
   654  003D1A  ECB4  F01D         	call	_tolower
   655  003D1E  0A73               	xorlw	115
   656  003D20  B4D8               	btfsc	status,2,c
   657  003D22  EF95  F01E         	goto	u261
   658  003D26  EF98  F01E         	goto	u260
   659  003D2A                     u261:
   660  003D2A  FFFF               	dw	65535	; assembler added errata NOP
   661  003D2C  EFB0  F01E         	goto	l1352
   662  003D30                     u260:
   663  003D30  FFFF               	dw	65535	; assembler added errata NOP
   664  003D32  5053               	movf	visualizar@position^0,w,c
   665  003D34  0D03               	mullw	3
   666  003D36  0E01               	movlw	low _NUMERO
   667  003D38  6E56               	movwf	??_visualizar^0,c
   668  003D3A  0E00               	movlw	high _NUMERO
   669  003D3C  6E57               	movwf	(??_visualizar+1)^0,c
   670  003D3E  50F3               	movf	243,w,c
   671  003D40  2656               	addwf	??_visualizar^0,f,c
   672  003D42  50F4               	movf	244,w,c
   673  003D44  2257               	addwfc	(??_visualizar+1)^0,f,c
   674  003D46  505C               	movf	visualizar@x^0,w,c
   675  003D48  2456               	addwf	??_visualizar^0,w,c
   676  003D4A  6ED9               	movwf	fsr2l,c
   677  003D4C  0E00               	movlw	0
   678  003D4E  2057               	addwfc	(??_visualizar+1)^0,w,c
   679  003D50  6EDA               	movwf	fsr2h,c
   680  003D52  50DF               	movf	indf2,w,c
   681  003D54  6E58               	movwf	(??_visualizar+2)^0,c
   682  003D56  5058               	movf	(??_visualizar+2)^0,w,c
   683  003D58  6E5A               	movwf	_visualizar$154^0,c
   684  003D5A  6A5B               	clrf	(_visualizar$154+1)^0,c
   685  003D5C  EFC6  F01E         	goto	l1354
   686  003D60                     l1352:
   687  003D60  FFFF               	dw	65535	; assembler added errata NOP
   688  003D62  5053               	movf	visualizar@position^0,w,c
   689  003D64  0D03               	mullw	3
   690  003D66  0E31               	movlw	low _SIMBOLO
   691  003D68  6E56               	movwf	??_visualizar^0,c
   692  003D6A  0E00               	movlw	high _SIMBOLO
   693  003D6C  6E57               	movwf	(??_visualizar+1)^0,c
   694  003D6E  50F3               	movf	243,w,c
   695  003D70  2656               	addwf	??_visualizar^0,f,c
   696  003D72  50F4               	movf	244,w,c
   697  003D74  2257               	addwfc	(??_visualizar+1)^0,f,c
   698  003D76  505C               	movf	visualizar@x^0,w,c
   699  003D78  2456               	addwf	??_visualizar^0,w,c
   700  003D7A  6ED9               	movwf	fsr2l,c
   701  003D7C  0E00               	movlw	0
   702  003D7E  2057               	addwfc	(??_visualizar+1)^0,w,c
   703  003D80  6EDA               	movwf	fsr2h,c
   704  003D82  50DF               	movf	indf2,w,c
   705  003D84  6E58               	movwf	(??_visualizar+2)^0,c
   706  003D86  5058               	movf	(??_visualizar+2)^0,w,c
   707  003D88  6E5A               	movwf	_visualizar$154^0,c
   708  003D8A  6A5B               	clrf	(_visualizar$154+1)^0,c
   709  003D8C                     l1354:
   710  003D8C  FFFF               	dw	65535	; assembler added errata NOP
   711  003D8E  C05A  FF8C         	movff	_visualizar$154,3980	;volatile
   712  003D92                     
   713                           ;main.c: 131: LATE = x + from;
   714  003D92  505C               	movf	visualizar@x^0,w,c
   715  003D94  2454               	addwf	visualizar@from^0,w,c
   716  003D96  6E8D               	movwf	141,c	;volatile
   717  003D98                     
   718                           ;main.c: 132: _delay((unsigned long)((5)*(4000000/4000.0)));
   719  003D98  0E05               	movlw	5
   720  003D9A  6E56               	movwf	??_visualizar^0,c
   721  003D9C  0EDF               	movlw	223
   722  003D9E                     u317:
   723  003D9E  FFFF               	dw	65535	; errata NOP
   724  003DA0  2EE8               	decfsz	wreg,f,c
   725  003DA2  D7FD               	bra	u317
   726  003DA4  2E56               	decfsz	??_visualizar^0,f,c
   727  003DA6  D7FB               	bra	u317
   728  003DA8  2A5C               	incf	visualizar@x^0,f,c
   729  003DAA  0E02               	movlw	2
   730  003DAC  645C               	cpfsgt	visualizar@x^0,c
   731  003DAE  EFDB  F01E         	goto	u271
   732  003DB2  EFDE  F01E         	goto	u270
   733  003DB6                     u271:
   734  003DB6  FFFF               	dw	65535	; assembler added errata NOP
   735  003DB8  EF79  F01E         	goto	l1344
   736  003DBC                     u270:
   737  003DBC  FFFF               	dw	65535	; assembler added errata NOP
   738  003DBE  0012               	return		;funcret
   739  003DC0  FFFF               	dw	65535	; errata NOP
   740  003DC2                     __end_of_visualizar:
   741                           	opt callstack 0
   742                           
   743 ;; *************** function _tolower *****************
   744 ;; Defined at:
   745 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\tolower.c"
   746 ;; Parameters:    Size  Location     Type
   747 ;;  c               1    wreg     unsigned char 
   748 ;; Auto vars:     Size  Location     Type
   749 ;;  c               1    0[COMRAM] unsigned char 
   750 ;; Return value:  Size  Location     Type
   751 ;;                  1    wreg      unsigned char 
   752 ;; Registers used:
   753 ;;		wreg, status,2, status,0
   754 ;; Tracked objects:
   755 ;;		On entry : 0/0
   756 ;;		On exit  : 0/0
   757 ;;		Unchanged: 0/0
   758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   759 ;;      Params:         0       0       0       0       0       0       0
   760 ;;      Locals:         1       0       0       0       0       0       0
   761 ;;      Temps:          0       0       0       0       0       0       0
   762 ;;      Totals:         1       0       0       0       0       0       0
   763 ;;Total ram usage:        1 bytes
   764 ;; Hardware stack levels used:    1
   765 ;; This function calls:
   766 ;;		Nothing
   767 ;; This function is called by:
   768 ;;		_visualizar
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           	psect	text2
   773  003B68                     __ptext2:
   774                           	opt callstack 0
   775  003B68                     _tolower:
   776                           	opt callstack 0
   777  003B68  FFFF               	dw	65535	; assembler added errata NOP
   778                           
   779                           ;incstack = 0
   780                           ;tolower@c stored from wreg
   781  003B6A  6E52               	movwf	tolower@c^0,c
   782  003B6C  0E5B               	movlw	91
   783  003B6E  6052               	cpfslt	tolower@c^0,c
   784  003B70  EFBC  F01D         	goto	u201
   785  003B74  EFBF  F01D         	goto	u200
   786  003B78                     u201:
   787  003B78  FFFF               	dw	65535	; assembler added errata NOP
   788  003B7A  EFCB  F01D         	goto	l1214
   789  003B7E                     u200:
   790  003B7E  FFFF               	dw	65535	; assembler added errata NOP
   791  003B80  0E40               	movlw	64
   792  003B82  6452               	cpfsgt	tolower@c^0,c
   793  003B84  EFC6  F01D         	goto	u211
   794  003B88  EFC9  F01D         	goto	u210
   795  003B8C                     u211:
   796  003B8C  FFFF               	dw	65535	; assembler added errata NOP
   797  003B8E  EFCB  F01D         	goto	l1214
   798  003B92                     u210:
   799  003B92  FFFF               	dw	65535	; assembler added errata NOP
   800  003B94  8A52               	bsf	tolower@c^0,5,c
   801  003B96                     l1214:
   802  003B96  FFFF               	dw	65535	; assembler added errata NOP
   803  003B98  5052               	movf	tolower@c^0,w,c
   804  003B9A  0012               	return		;funcret
   805  003B9C  FFFF               	dw	65535	; errata NOP
   806  003B9E                     __end_of_tolower:
   807                           	opt callstack 0
   808                           
   809 ;; *************** function _operar *****************
   810 ;; Defined at:
   811 ;;		line 144 in file "main.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;  oper            1    wreg     unsigned char 
   814 ;;  oper_1          1    7[COMRAM] unsigned char 
   815 ;;  oper_2          1    8[COMRAM] unsigned char 
   816 ;; Auto vars:     Size  Location     Type
   817 ;;  oper            1    9[COMRAM] unsigned char 
   818 ;; Return value:  Size  Location     Type
   819 ;;                  1    wreg      unsigned char 
   820 ;; Registers used:
   821 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   822 ;; Tracked objects:
   823 ;;		On entry : 0/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   827 ;;      Params:         2       0       0       0       0       0       0
   828 ;;      Locals:         1       0       0       0       0       0       0
   829 ;;      Temps:          0       0       0       0       0       0       0
   830 ;;      Totals:         3       0       0       0       0       0       0
   831 ;;Total ram usage:        3 bytes
   832 ;; Hardware stack levels used:    1
   833 ;; Hardware stack levels required when called:    3
   834 ;; This function calls:
   835 ;;		_and
   836 ;;		_division
   837 ;;		_module
   838 ;;		_multi
   839 ;;		_nand
   840 ;;		_no_es_primo
   841 ;;		_or
   842 ;;		_resta
   843 ;;		_suma
   844 ;;		_xor
   845 ;; This function is called by:
   846 ;;		_main
   847 ;; This function uses a non-reentrant model
   848 ;;
   849                           
   850                           	psect	text3
   851  003ED4                     __ptext3:
   852                           	opt callstack 0
   853  003ED4                     _operar:
   854                           	opt callstack 0
   855  003ED4  FFFF               	dw	65535	; assembler added errata NOP
   856                           
   857                           ;incstack = 0
   858                           ;operar@oper stored from wreg
   859  003ED6  6E5B               	movwf	operar@oper^0,c
   860  003ED8                     
   861                           ;main.c: 145: switch (oper) {
   862  003ED8  EFCD  F01F         	goto	l1336
   863  003EDC                     l1268:
   864  003EDC  FFFF               	dw	65535	; assembler added errata NOP
   865                           
   866                           ;main.c: 147: return suma(oper_1, oper_2);
   867  003EDE  C05A  F052         	movff	operar@oper_2,suma@oper_2
   868  003EE2  5059               	movf	operar@oper_1^0,w,c
   869  003EE4  EC55  F01D         	call	_suma
   870  003EE8  EFFD  F01F         	goto	l111
   871  003EEC                     l1274:
   872  003EEC  FFFF               	dw	65535	; assembler added errata NOP
   873                           
   874                           ;main.c: 150: return resta(oper_1, oper_2);
   875  003EEE  C05A  F052         	movff	operar@oper_2,resta@oper_2
   876  003EF2  5059               	movf	operar@oper_1^0,w,c
   877  003EF4  EC4F  F01D         	call	_resta
   878  003EF8  EFFD  F01F         	goto	l111
   879  003EFC                     l1280:
   880  003EFC  FFFF               	dw	65535	; assembler added errata NOP
   881                           
   882                           ;main.c: 153: return multi(oper_1, oper_2);
   883  003EFE  C05A  F052         	movff	operar@oper_2,multi@oper_2
   884  003F02  5059               	movf	operar@oper_1^0,w,c
   885  003F04  EC61  F01D         	call	_multi
   886  003F08  EFFD  F01F         	goto	l111
   887  003F0C                     l1286:
   888  003F0C  FFFF               	dw	65535	; assembler added errata NOP
   889                           
   890                           ;main.c: 156: return division(oper_1, oper_2);
   891  003F0E  C05A  F056         	movff	operar@oper_2,division@oper_2
   892  003F12  5059               	movf	operar@oper_1^0,w,c
   893  003F14  EC7B  F01D         	call	_division
   894  003F18  EFFD  F01F         	goto	l111
   895  003F1C                     l1292:
   896  003F1C  FFFF               	dw	65535	; assembler added errata NOP
   897                           
   898                           ;main.c: 159: return module(oper_1, oper_2);
   899  003F1E  C05A  F056         	movff	operar@oper_2,module@oper_2
   900  003F22  5059               	movf	operar@oper_1^0,w,c
   901  003F24  EC68  F01D         	call	_module
   902  003F28  EFFD  F01F         	goto	l111
   903  003F2C                     l1298:
   904  003F2C  FFFF               	dw	65535	; assembler added errata NOP
   905                           
   906                           ;main.c: 162: return and(oper_1, oper_2);
   907  003F2E  C05A  F052         	movff	operar@oper_2,and@oper_2
   908  003F32  5059               	movf	operar@oper_1^0,w,c
   909  003F34  EC43  F01D         	call	_and
   910  003F38  EFFD  F01F         	goto	l111
   911  003F3C                     l1304:
   912  003F3C  FFFF               	dw	65535	; assembler added errata NOP
   913                           
   914                           ;main.c: 165: return or(oper_1, oper_2);
   915  003F3E  C05A  F052         	movff	operar@oper_2,or@oper_2
   916  003F42  5059               	movf	operar@oper_1^0,w,c
   917  003F44  EC49  F01D         	call	_or
   918  003F48  EFFD  F01F         	goto	l111
   919  003F4C                     l1310:
   920  003F4C  FFFF               	dw	65535	; assembler added errata NOP
   921                           
   922                           ;main.c: 168: return nand(oper_1, oper_2);
   923  003F4E  C05A  F054         	movff	operar@oper_2,nand@oper_2
   924  003F52  5059               	movf	operar@oper_1^0,w,c
   925  003F54  EC71  F01D         	call	_nand
   926  003F58  EFFD  F01F         	goto	l111
   927  003F5C                     l1316:
   928  003F5C  FFFF               	dw	65535	; assembler added errata NOP
   929                           
   930                           ;main.c: 171: return xor(oper_1, oper_2);
   931  003F5E  C05A  F052         	movff	operar@oper_2,xor@oper_2
   932  003F62  5059               	movf	operar@oper_1^0,w,c
   933  003F64  EC5B  F01D         	call	_xor
   934  003F68  EFFD  F01F         	goto	l111
   935  003F6C                     l1322:
   936  003F6C  FFFF               	dw	65535	; assembler added errata NOP
   937                           
   938                           ;main.c: 174: return no_es_primo(oper_1);
   939  003F6E  5059               	movf	operar@oper_1^0,w,c
   940  003F70  EC9B  F01D         	call	_no_es_primo
   941  003F74  EFFD  F01F         	goto	l111
   942  003F78                     l1328:
   943  003F78  FFFF               	dw	65535	; assembler added errata NOP
   944                           
   945                           ;main.c: 177: return oper_1 == 2;
   946  003F7A  0E02               	movlw	2
   947  003F7C  1859               	xorwf	operar@oper_1^0,w,c
   948  003F7E  B4D8               	btfsc	status,2,c
   949  003F80  EFC4  F01F         	goto	u231
   950  003F84  EFC8  F01F         	goto	u230
   951  003F88                     u231:
   952  003F88  FFFF               	dw	65535	; assembler added errata NOP
   953  003F8A  0E01               	movlw	1
   954  003F8C  EFCA  F01F         	goto	u240
   955  003F90                     u230:
   956  003F90  FFFF               	dw	65535	; assembler added errata NOP
   957  003F92  0E00               	movlw	0
   958  003F94                     u240:
   959  003F94  FFFF               	dw	65535	; assembler added errata NOP
   960  003F96  EFFD  F01F         	goto	l111
   961  003F9A                     l1336:
   962  003F9A  FFFF               	dw	65535	; assembler added errata NOP
   963  003F9C  505B               	movf	operar@oper^0,w,c
   964                           
   965                           ; Switch size 1, requested type "simple"
   966                           ; Number of cases is 11, Range of values is 0 to 10
   967                           ; switch strategies available:
   968                           ; Name         Instructions Cycles
   969                           ; simple_byte           34    18 (average)
   970                           ;	Chosen strategy is simple_byte
   971  003F9E  0A00               	xorlw	0	; case 0
   972  003FA0  B4D8               	btfsc	status,2,c
   973  003FA2  EF6E  F01F         	goto	l1268
   974  003FA6  0A01               	xorlw	1	; case 1
   975  003FA8  B4D8               	btfsc	status,2,c
   976  003FAA  EF76  F01F         	goto	l1274
   977  003FAE  0A03               	xorlw	3	; case 2
   978  003FB0  B4D8               	btfsc	status,2,c
   979  003FB2  EF7E  F01F         	goto	l1280
   980  003FB6  0A01               	xorlw	1	; case 3
   981  003FB8  B4D8               	btfsc	status,2,c
   982  003FBA  EF86  F01F         	goto	l1286
   983  003FBE  0A07               	xorlw	7	; case 4
   984  003FC0  B4D8               	btfsc	status,2,c
   985  003FC2  EF8E  F01F         	goto	l1292
   986  003FC6  0A01               	xorlw	1	; case 5
   987  003FC8  B4D8               	btfsc	status,2,c
   988  003FCA  EF96  F01F         	goto	l1298
   989  003FCE  0A03               	xorlw	3	; case 6
   990  003FD0  B4D8               	btfsc	status,2,c
   991  003FD2  EF9E  F01F         	goto	l1304
   992  003FD6  0A01               	xorlw	1	; case 7
   993  003FD8  B4D8               	btfsc	status,2,c
   994  003FDA  EFA6  F01F         	goto	l1310
   995  003FDE  0A0F               	xorlw	15	; case 8
   996  003FE0  B4D8               	btfsc	status,2,c
   997  003FE2  EFAE  F01F         	goto	l1316
   998  003FE6  0A01               	xorlw	1	; case 9
   999  003FE8  B4D8               	btfsc	status,2,c
  1000  003FEA  EFB6  F01F         	goto	l1322
  1001  003FEE  0A03               	xorlw	3	; case 10
  1002  003FF0  B4D8               	btfsc	status,2,c
  1003  003FF2  EFBC  F01F         	goto	l1328
  1004  003FF6  EFFD  F01F         	goto	l111
  1005  003FFA                     l111:
  1006  003FFA  FFFF               	dw	65535	; assembler added errata NOP
  1007  003FFC  0012               	return		;funcret
  1008  003FFE  FFFF               	dw	65535	; errata NOP
  1009  004000                     __end_of_operar:
  1010                           	opt callstack 0
  1011                           
  1012 ;; *************** function _xor *****************
  1013 ;; Defined at:
  1014 ;;		line 221 in file "main.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;  oper_1          1    wreg     unsigned char 
  1017 ;;  oper_2          1    0[COMRAM] unsigned char 
  1018 ;; Auto vars:     Size  Location     Type
  1019 ;;  oper_1          1    1[COMRAM] unsigned char 
  1020 ;; Return value:  Size  Location     Type
  1021 ;;                  1    wreg      unsigned char 
  1022 ;; Registers used:
  1023 ;;		wreg, status,2, status,0
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1029 ;;      Params:         1       0       0       0       0       0       0
  1030 ;;      Locals:         1       0       0       0       0       0       0
  1031 ;;      Temps:          0       0       0       0       0       0       0
  1032 ;;      Totals:         2       0       0       0       0       0       0
  1033 ;;Total ram usage:        2 bytes
  1034 ;; Hardware stack levels used:    1
  1035 ;; This function calls:
  1036 ;;		Nothing
  1037 ;; This function is called by:
  1038 ;;		_operar
  1039 ;; This function uses a non-reentrant model
  1040 ;;
  1041                           
  1042                           	psect	text4
  1043  003AB6                     __ptext4:
  1044                           	opt callstack 0
  1045  003AB6                     _xor:
  1046                           	opt callstack 0
  1047  003AB6  FFFF               	dw	65535	; assembler added errata NOP
  1048                           
  1049                           ;incstack = 0
  1050                           ;xor@oper_1 stored from wreg
  1051  003AB8  6E53               	movwf	xor@oper_1^0,c
  1052  003ABA                     
  1053                           ;main.c: 222: return oper_1 ^ oper_2;
  1054  003ABA  5053               	movf	xor@oper_1^0,w,c
  1055  003ABC  1852               	xorwf	xor@oper_2^0,w,c
  1056  003ABE  0012               	return		;funcret
  1057  003AC0  FFFF               	dw	65535	; errata NOP
  1058  003AC2                     __end_of_xor:
  1059                           	opt callstack 0
  1060                           
  1061 ;; *************** function _suma *****************
  1062 ;; Defined at:
  1063 ;;		line 184 in file "main.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;  oper_1          1    wreg     unsigned char 
  1066 ;;  oper_2          1    0[COMRAM] unsigned char 
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;  oper_1          1    1[COMRAM] unsigned char 
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  1    wreg      unsigned char 
  1071 ;; Registers used:
  1072 ;;		wreg, status,2, status,0
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1078 ;;      Params:         1       0       0       0       0       0       0
  1079 ;;      Locals:         1       0       0       0       0       0       0
  1080 ;;      Temps:          0       0       0       0       0       0       0
  1081 ;;      Totals:         2       0       0       0       0       0       0
  1082 ;;Total ram usage:        2 bytes
  1083 ;; Hardware stack levels used:    1
  1084 ;; This function calls:
  1085 ;;		Nothing
  1086 ;; This function is called by:
  1087 ;;		_operar
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           	psect	text5
  1092  003AAA                     __ptext5:
  1093                           	opt callstack 0
  1094  003AAA                     _suma:
  1095                           	opt callstack 0
  1096  003AAA  FFFF               	dw	65535	; assembler added errata NOP
  1097                           
  1098                           ;incstack = 0
  1099                           ;suma@oper_1 stored from wreg
  1100  003AAC  6E53               	movwf	suma@oper_1^0,c
  1101  003AAE                     
  1102                           ;main.c: 185: return oper_1 + oper_2;
  1103  003AAE  5053               	movf	suma@oper_1^0,w,c
  1104  003AB0  2452               	addwf	suma@oper_2^0,w,c
  1105  003AB2  0012               	return		;funcret
  1106  003AB4  FFFF               	dw	65535	; errata NOP
  1107  003AB6                     __end_of_suma:
  1108                           	opt callstack 0
  1109                           
  1110 ;; *************** function _resta *****************
  1111 ;; Defined at:
  1112 ;;		line 188 in file "main.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;  oper_1          1    wreg     unsigned char 
  1115 ;;  oper_2          1    0[COMRAM] unsigned char 
  1116 ;; Auto vars:     Size  Location     Type
  1117 ;;  oper_1          1    2[COMRAM] unsigned char 
  1118 ;;  result          1    0        unsigned char 
  1119 ;; Return value:  Size  Location     Type
  1120 ;;                  1    wreg      unsigned char 
  1121 ;; Registers used:
  1122 ;;		wreg, status,2, status,0
  1123 ;; Tracked objects:
  1124 ;;		On entry : 0/0
  1125 ;;		On exit  : 0/0
  1126 ;;		Unchanged: 0/0
  1127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1128 ;;      Params:         1       0       0       0       0       0       0
  1129 ;;      Locals:         2       0       0       0       0       0       0
  1130 ;;      Temps:          0       0       0       0       0       0       0
  1131 ;;      Totals:         3       0       0       0       0       0       0
  1132 ;;Total ram usage:        3 bytes
  1133 ;; Hardware stack levels used:    1
  1134 ;; This function calls:
  1135 ;;		Nothing
  1136 ;; This function is called by:
  1137 ;;		_operar
  1138 ;; This function uses a non-reentrant model
  1139 ;;
  1140                           
  1141                           	psect	text6
  1142  003A9E                     __ptext6:
  1143                           	opt callstack 0
  1144  003A9E                     _resta:
  1145                           	opt callstack 0
  1146  003A9E  FFFF               	dw	65535	; assembler added errata NOP
  1147                           
  1148                           ;incstack = 0
  1149                           ;resta@oper_1 stored from wreg
  1150  003AA0  6E54               	movwf	resta@oper_1^0,c
  1151  003AA2                     
  1152                           ;main.c: 193: return oper_1 - oper_2;
  1153  003AA2  5052               	movf	resta@oper_2^0,w,c
  1154  003AA4  5C54               	subwf	resta@oper_1^0,w,c
  1155  003AA6  0012               	return		;funcret
  1156  003AA8  FFFF               	dw	65535	; errata NOP
  1157  003AAA                     __end_of_resta:
  1158                           	opt callstack 0
  1159                           
  1160 ;; *************** function _or *****************
  1161 ;; Defined at:
  1162 ;;		line 213 in file "main.c"
  1163 ;; Parameters:    Size  Location     Type
  1164 ;;  oper_1          1    wreg     unsigned char 
  1165 ;;  oper_2          1    0[COMRAM] unsigned char 
  1166 ;; Auto vars:     Size  Location     Type
  1167 ;;  oper_1          1    1[COMRAM] unsigned char 
  1168 ;; Return value:  Size  Location     Type
  1169 ;;                  1    wreg      unsigned char 
  1170 ;; Registers used:
  1171 ;;		wreg, status,2, status,0
  1172 ;; Tracked objects:
  1173 ;;		On entry : 0/0
  1174 ;;		On exit  : 0/0
  1175 ;;		Unchanged: 0/0
  1176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1177 ;;      Params:         1       0       0       0       0       0       0
  1178 ;;      Locals:         1       0       0       0       0       0       0
  1179 ;;      Temps:          0       0       0       0       0       0       0
  1180 ;;      Totals:         2       0       0       0       0       0       0
  1181 ;;Total ram usage:        2 bytes
  1182 ;; Hardware stack levels used:    1
  1183 ;; This function calls:
  1184 ;;		Nothing
  1185 ;; This function is called by:
  1186 ;;		_operar
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190                           	psect	text7
  1191  003A92                     __ptext7:
  1192                           	opt callstack 0
  1193  003A92                     _or:
  1194                           	opt callstack 0
  1195  003A92  FFFF               	dw	65535	; assembler added errata NOP
  1196                           
  1197                           ;incstack = 0
  1198                           ;or@oper_1 stored from wreg
  1199  003A94  6E53               	movwf	or@oper_1^0,c
  1200  003A96                     
  1201                           ;main.c: 214: return oper_1 | oper_2;
  1202  003A96  5053               	movf	or@oper_1^0,w,c
  1203  003A98  1052               	iorwf	or@oper_2^0,w,c
  1204  003A9A  0012               	return		;funcret
  1205  003A9C  FFFF               	dw	65535	; errata NOP
  1206  003A9E                     __end_of_or:
  1207                           	opt callstack 0
  1208                           
  1209 ;; *************** function _no_es_primo *****************
  1210 ;; Defined at:
  1211 ;;		line 225 in file "main.c"
  1212 ;; Parameters:    Size  Location     Type
  1213 ;;  num             1    wreg     unsigned char 
  1214 ;; Auto vars:     Size  Location     Type
  1215 ;;  num             1    6[COMRAM] unsigned char 
  1216 ;; Return value:  Size  Location     Type
  1217 ;;                  1    wreg      unsigned char 
  1218 ;; Registers used:
  1219 ;;		wreg, status,2, status,0, cstack
  1220 ;; Tracked objects:
  1221 ;;		On entry : 0/0
  1222 ;;		On exit  : 0/0
  1223 ;;		Unchanged: 0/0
  1224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1225 ;;      Params:         0       0       0       0       0       0       0
  1226 ;;      Locals:         1       0       0       0       0       0       0
  1227 ;;      Temps:          0       0       0       0       0       0       0
  1228 ;;      Totals:         1       0       0       0       0       0       0
  1229 ;;Total ram usage:        1 bytes
  1230 ;; Hardware stack levels used:    1
  1231 ;; Hardware stack levels required when called:    2
  1232 ;; This function calls:
  1233 ;;		_module
  1234 ;; This function is called by:
  1235 ;;		_operar
  1236 ;; This function uses a non-reentrant model
  1237 ;;
  1238                           
  1239                           	psect	text8
  1240  003B36                     __ptext8:
  1241                           	opt callstack 0
  1242  003B36                     _no_es_primo:
  1243                           	opt callstack 0
  1244  003B36  FFFF               	dw	65535	; assembler added errata NOP
  1245                           
  1246                           ;incstack = 0
  1247                           ;no_es_primo@num stored from wreg
  1248  003B38  6E58               	movwf	no_es_primo@num^0,c
  1249  003B3A                     
  1250                           ;main.c: 226: if (!module(num, 2)) {
  1251  003B3A  0E02               	movlw	2
  1252  003B3C  6E56               	movwf	module@oper_2^0,c
  1253  003B3E  5058               	movf	no_es_primo@num^0,w,c
  1254  003B40  EC68  F01D         	call	_module
  1255  003B44  0900               	iorlw	0
  1256  003B46  A4D8               	btfss	status,2,c
  1257  003B48  EFA8  F01D         	goto	u221
  1258  003B4C  EFAB  F01D         	goto	u220
  1259  003B50                     u221:
  1260  003B50  FFFF               	dw	65535	; assembler added errata NOP
  1261  003B52  EFAF  F01D         	goto	l1254
  1262  003B56                     u220:
  1263  003B56  FFFF               	dw	65535	; assembler added errata NOP
  1264  003B58                     
  1265                           ;main.c: 227: return 0;
  1266  003B58  0E00               	movlw	0
  1267  003B5A  EFB1  F01D         	goto	l154
  1268  003B5E                     l1254:
  1269  003B5E  FFFF               	dw	65535	; assembler added errata NOP
  1270                           
  1271                           ;main.c: 228: };main.c: 229: return 1;
  1272  003B60  0E01               	movlw	1
  1273  003B62                     l154:
  1274  003B62  FFFF               	dw	65535	; assembler added errata NOP
  1275  003B64  0012               	return		;funcret
  1276  003B66  FFFF               	dw	65535	; errata NOP
  1277  003B68                     __end_of_no_es_primo:
  1278                           	opt callstack 0
  1279                           
  1280 ;; *************** function _module *****************
  1281 ;; Defined at:
  1282 ;;		line 205 in file "main.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;  oper_1          1    wreg     unsigned char 
  1285 ;;  oper_2          1    4[COMRAM] unsigned char 
  1286 ;; Auto vars:     Size  Location     Type
  1287 ;;  oper_1          1    5[COMRAM] unsigned char 
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  1    wreg      unsigned char 
  1290 ;; Registers used:
  1291 ;;		wreg, status,2, status,0, cstack
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1297 ;;      Params:         1       0       0       0       0       0       0
  1298 ;;      Locals:         1       0       0       0       0       0       0
  1299 ;;      Temps:          0       0       0       0       0       0       0
  1300 ;;      Totals:         2       0       0       0       0       0       0
  1301 ;;Total ram usage:        2 bytes
  1302 ;; Hardware stack levels used:    1
  1303 ;; Hardware stack levels required when called:    1
  1304 ;; This function calls:
  1305 ;;		___lbmod
  1306 ;; This function is called by:
  1307 ;;		_operar
  1308 ;;		_no_es_primo
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           	psect	text9
  1313  003AD0                     __ptext9:
  1314                           	opt callstack 0
  1315  003AD0                     _module:
  1316                           	opt callstack 0
  1317  003AD0  FFFF               	dw	65535	; assembler added errata NOP
  1318                           
  1319                           ;incstack = 0
  1320                           ;module@oper_1 stored from wreg
  1321  003AD2  6E57               	movwf	module@oper_1^0,c
  1322  003AD4                     
  1323                           ;main.c: 206: return oper_1 % oper_2;
  1324  003AD4  C056  F052         	movff	module@oper_2,___lbmod@divisor
  1325  003AD8  5057               	movf	module@oper_1^0,w,c
  1326  003ADA  ECF0  F01D         	call	___lbmod
  1327  003ADE  0012               	return		;funcret
  1328  003AE0  FFFF               	dw	65535	; errata NOP
  1329  003AE2                     __end_of_module:
  1330                           	opt callstack 0
  1331                           
  1332 ;; *************** function ___lbmod *****************
  1333 ;; Defined at:
  1334 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lbmod.c"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;  dividend        1    wreg     unsigned char 
  1337 ;;  divisor         1    0[COMRAM] unsigned char 
  1338 ;; Auto vars:     Size  Location     Type
  1339 ;;  dividend        1    1[COMRAM] unsigned char 
  1340 ;;  rem             1    3[COMRAM] unsigned char 
  1341 ;;  counter         1    2[COMRAM] unsigned char 
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  1    wreg      unsigned char 
  1344 ;; Registers used:
  1345 ;;		wreg, status,2, status,0
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1351 ;;      Params:         1       0       0       0       0       0       0
  1352 ;;      Locals:         3       0       0       0       0       0       0
  1353 ;;      Temps:          0       0       0       0       0       0       0
  1354 ;;      Totals:         4       0       0       0       0       0       0
  1355 ;;Total ram usage:        4 bytes
  1356 ;; Hardware stack levels used:    1
  1357 ;; This function calls:
  1358 ;;		Nothing
  1359 ;; This function is called by:
  1360 ;;		_module
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           
  1364                           	psect	text10
  1365  003BE0                     __ptext10:
  1366                           	opt callstack 0
  1367  003BE0                     ___lbmod:
  1368                           	opt callstack 0
  1369  003BE0  FFFF               	dw	65535	; assembler added errata NOP
  1370                           
  1371                           ;incstack = 0
  1372                           ;___lbmod@dividend stored from wreg
  1373  003BE2  6E53               	movwf	___lbmod@dividend^0,c
  1374  003BE4  0E08               	movlw	8
  1375  003BE6  6E54               	movwf	___lbmod@counter^0,c
  1376  003BE8  0E00               	movlw	0
  1377  003BEA  6E55               	movwf	___lbmod@rem^0,c
  1378  003BEC                     l1160:
  1379  003BEC  FFFF               	dw	65535	; assembler added errata NOP
  1380  003BEE  90D8               	bcf	status,0,c
  1381  003BF0  3453               	rlcf	___lbmod@dividend^0,w,c
  1382  003BF2  3455               	rlcf	___lbmod@rem^0,w,c
  1383  003BF4  6E55               	movwf	___lbmod@rem^0,c
  1384  003BF6  90D8               	bcf	status,0,c
  1385  003BF8  3653               	rlcf	___lbmod@dividend^0,f,c
  1386  003BFA  5052               	movf	___lbmod@divisor^0,w,c
  1387  003BFC  5C55               	subwf	___lbmod@rem^0,w,c
  1388  003BFE  A0D8               	btfss	status,0,c
  1389  003C00  EF04  F01E         	goto	u161
  1390  003C04  EF07  F01E         	goto	u160
  1391  003C08                     u161:
  1392  003C08  FFFF               	dw	65535	; assembler added errata NOP
  1393  003C0A  EF0A  F01E         	goto	l1168
  1394  003C0E                     u160:
  1395  003C0E  FFFF               	dw	65535	; assembler added errata NOP
  1396  003C10  5052               	movf	___lbmod@divisor^0,w,c
  1397  003C12  5E55               	subwf	___lbmod@rem^0,f,c
  1398  003C14                     l1168:
  1399  003C14  FFFF               	dw	65535	; assembler added errata NOP
  1400  003C16  2E54               	decfsz	___lbmod@counter^0,f,c
  1401  003C18  EFF6  F01D         	goto	l1160
  1402  003C1C  5055               	movf	___lbmod@rem^0,w,c
  1403  003C1E  0012               	return		;funcret
  1404  003C20  FFFF               	dw	65535	; errata NOP
  1405  003C22                     __end_of___lbmod:
  1406                           	opt callstack 0
  1407                           
  1408 ;; *************** function _nand *****************
  1409 ;; Defined at:
  1410 ;;		line 217 in file "main.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;  oper_1          1    wreg     unsigned char 
  1413 ;;  oper_2          1    2[COMRAM] unsigned char 
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;  oper_1          1    3[COMRAM] unsigned char 
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  1    wreg      unsigned char 
  1418 ;; Registers used:
  1419 ;;		wreg, status,2, status,0, cstack
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1425 ;;      Params:         1       0       0       0       0       0       0
  1426 ;;      Locals:         1       0       0       0       0       0       0
  1427 ;;      Temps:          0       0       0       0       0       0       0
  1428 ;;      Totals:         2       0       0       0       0       0       0
  1429 ;;Total ram usage:        2 bytes
  1430 ;; Hardware stack levels used:    1
  1431 ;; Hardware stack levels required when called:    1
  1432 ;; This function calls:
  1433 ;;		_and
  1434 ;; This function is called by:
  1435 ;;		_operar
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           	psect	text11
  1440  003AE2                     __ptext11:
  1441                           	opt callstack 0
  1442  003AE2                     _nand:
  1443                           	opt callstack 0
  1444  003AE2  FFFF               	dw	65535	; assembler added errata NOP
  1445                           
  1446                           ;incstack = 0
  1447                           ;nand@oper_1 stored from wreg
  1448  003AE4  6E55               	movwf	nand@oper_1^0,c
  1449  003AE6                     
  1450                           ;main.c: 218: return ~(and(oper_1, oper_2));
  1451  003AE6  C054  F052         	movff	nand@oper_2,and@oper_2
  1452  003AEA  5055               	movf	nand@oper_1^0,w,c
  1453  003AEC  EC43  F01D         	call	_and
  1454  003AF0  0AFF               	xorlw	255
  1455  003AF2  0012               	return		;funcret
  1456  003AF4  FFFF               	dw	65535	; errata NOP
  1457  003AF6                     __end_of_nand:
  1458                           	opt callstack 0
  1459                           
  1460 ;; *************** function _and *****************
  1461 ;; Defined at:
  1462 ;;		line 209 in file "main.c"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;  oper_1          1    wreg     unsigned char 
  1465 ;;  oper_2          1    0[COMRAM] unsigned char 
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;  oper_1          1    1[COMRAM] unsigned char 
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  1    wreg      unsigned char 
  1470 ;; Registers used:
  1471 ;;		wreg, status,2, status,0
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1477 ;;      Params:         1       0       0       0       0       0       0
  1478 ;;      Locals:         1       0       0       0       0       0       0
  1479 ;;      Temps:          0       0       0       0       0       0       0
  1480 ;;      Totals:         2       0       0       0       0       0       0
  1481 ;;Total ram usage:        2 bytes
  1482 ;; Hardware stack levels used:    1
  1483 ;; This function calls:
  1484 ;;		Nothing
  1485 ;; This function is called by:
  1486 ;;		_operar
  1487 ;;		_nand
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491                           	psect	text12
  1492  003A86                     __ptext12:
  1493                           	opt callstack 0
  1494  003A86                     _and:
  1495                           	opt callstack 0
  1496  003A86  FFFF               	dw	65535	; assembler added errata NOP
  1497                           
  1498                           ;incstack = 0
  1499                           ;and@oper_1 stored from wreg
  1500  003A88  6E53               	movwf	and@oper_1^0,c
  1501  003A8A                     
  1502                           ;main.c: 210: return oper_1 & oper_2;
  1503  003A8A  5053               	movf	and@oper_1^0,w,c
  1504  003A8C  1452               	andwf	and@oper_2^0,w,c
  1505  003A8E  0012               	return		;funcret
  1506  003A90  FFFF               	dw	65535	; errata NOP
  1507  003A92                     __end_of_and:
  1508                           	opt callstack 0
  1509                           
  1510 ;; *************** function _multi *****************
  1511 ;; Defined at:
  1512 ;;		line 196 in file "main.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;  oper_1          1    wreg     unsigned char 
  1515 ;;  oper_2          1    0[COMRAM] unsigned char 
  1516 ;; Auto vars:     Size  Location     Type
  1517 ;;  oper_1          1    1[COMRAM] unsigned char 
  1518 ;; Return value:  Size  Location     Type
  1519 ;;                  1    wreg      unsigned char 
  1520 ;; Registers used:
  1521 ;;		wreg, status,2, status,0, prodl, prodh
  1522 ;; Tracked objects:
  1523 ;;		On entry : 0/0
  1524 ;;		On exit  : 0/0
  1525 ;;		Unchanged: 0/0
  1526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1527 ;;      Params:         1       0       0       0       0       0       0
  1528 ;;      Locals:         1       0       0       0       0       0       0
  1529 ;;      Temps:          0       0       0       0       0       0       0
  1530 ;;      Totals:         2       0       0       0       0       0       0
  1531 ;;Total ram usage:        2 bytes
  1532 ;; Hardware stack levels used:    1
  1533 ;; This function calls:
  1534 ;;		Nothing
  1535 ;; This function is called by:
  1536 ;;		_operar
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           	psect	text13
  1541  003AC2                     __ptext13:
  1542                           	opt callstack 0
  1543  003AC2                     _multi:
  1544                           	opt callstack 0
  1545  003AC2  FFFF               	dw	65535	; assembler added errata NOP
  1546                           
  1547                           ;incstack = 0
  1548                           ;multi@oper_1 stored from wreg
  1549  003AC4  6E53               	movwf	multi@oper_1^0,c
  1550  003AC6                     
  1551                           ;main.c: 197: return oper_1 * oper_2;
  1552  003AC6  5053               	movf	multi@oper_1^0,w,c
  1553  003AC8  0252               	mulwf	multi@oper_2^0,c
  1554  003ACA  50F3               	movf	243,w,c
  1555  003ACC  0012               	return		;funcret
  1556  003ACE  FFFF               	dw	65535	; errata NOP
  1557  003AD0                     __end_of_multi:
  1558                           	opt callstack 0
  1559                           
  1560 ;; *************** function _division *****************
  1561 ;; Defined at:
  1562 ;;		line 200 in file "main.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;  oper_1          1    wreg     unsigned char 
  1565 ;;  oper_2          1    4[COMRAM] unsigned char 
  1566 ;; Auto vars:     Size  Location     Type
  1567 ;;  oper_1          1    5[COMRAM] unsigned char 
  1568 ;;  result          1    6[COMRAM] unsigned char 
  1569 ;; Return value:  Size  Location     Type
  1570 ;;                  1    wreg      unsigned char 
  1571 ;; Registers used:
  1572 ;;		wreg, status,2, status,0, cstack
  1573 ;; Tracked objects:
  1574 ;;		On entry : 0/0
  1575 ;;		On exit  : 0/0
  1576 ;;		Unchanged: 0/0
  1577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1578 ;;      Params:         1       0       0       0       0       0       0
  1579 ;;      Locals:         2       0       0       0       0       0       0
  1580 ;;      Temps:          0       0       0       0       0       0       0
  1581 ;;      Totals:         3       0       0       0       0       0       0
  1582 ;;Total ram usage:        3 bytes
  1583 ;; Hardware stack levels used:    1
  1584 ;; Hardware stack levels required when called:    1
  1585 ;; This function calls:
  1586 ;;		___lbdiv
  1587 ;; This function is called by:
  1588 ;;		_operar
  1589 ;; This function uses a non-reentrant model
  1590 ;;
  1591                           
  1592                           	psect	text14
  1593  003AF6                     __ptext14:
  1594                           	opt callstack 0
  1595  003AF6                     _division:
  1596                           	opt callstack 0
  1597  003AF6  FFFF               	dw	65535	; assembler added errata NOP
  1598                           
  1599                           ;incstack = 0
  1600                           ;division@oper_1 stored from wreg
  1601  003AF8  6E57               	movwf	division@oper_1^0,c
  1602  003AFA                     
  1603                           ;main.c: 201: char result = oper_1 / oper_2;
  1604  003AFA  C056  F052         	movff	division@oper_2,___lbdiv@divisor
  1605  003AFE  5057               	movf	division@oper_1^0,w,c
  1606  003B00  EC3A  F01E         	call	___lbdiv
  1607  003B04  6E58               	movwf	division@result^0,c
  1608  003B06                     
  1609                           ;main.c: 202: return result;
  1610  003B06  5058               	movf	division@result^0,w,c
  1611  003B08  0012               	return		;funcret
  1612  003B0A  FFFF               	dw	65535	; errata NOP
  1613  003B0C                     __end_of_division:
  1614                           	opt callstack 0
  1615                           
  1616 ;; *************** function ___lbdiv *****************
  1617 ;; Defined at:
  1618 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lbdiv.c"
  1619 ;; Parameters:    Size  Location     Type
  1620 ;;  dividend        1    wreg     unsigned char 
  1621 ;;  divisor         1    0[COMRAM] unsigned char 
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;  dividend        1    1[COMRAM] unsigned char 
  1624 ;;  quotient        1    3[COMRAM] unsigned char 
  1625 ;;  counter         1    2[COMRAM] unsigned char 
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  1    wreg      unsigned char 
  1628 ;; Registers used:
  1629 ;;		wreg, status,2, status,0
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1635 ;;      Params:         1       0       0       0       0       0       0
  1636 ;;      Locals:         3       0       0       0       0       0       0
  1637 ;;      Temps:          0       0       0       0       0       0       0
  1638 ;;      Totals:         4       0       0       0       0       0       0
  1639 ;;Total ram usage:        4 bytes
  1640 ;; Hardware stack levels used:    1
  1641 ;; This function calls:
  1642 ;;		Nothing
  1643 ;; This function is called by:
  1644 ;;		_division
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           
  1648                           	psect	text15
  1649  003C74                     __ptext15:
  1650                           	opt callstack 0
  1651  003C74                     ___lbdiv:
  1652                           	opt callstack 0
  1653  003C74  FFFF               	dw	65535	; assembler added errata NOP
  1654                           
  1655                           ;incstack = 0
  1656                           ;___lbdiv@dividend stored from wreg
  1657  003C76  6E53               	movwf	___lbdiv@dividend^0,c
  1658  003C78  0E00               	movlw	0
  1659  003C7A  6E55               	movwf	___lbdiv@quotient^0,c
  1660  003C7C  5052               	movf	___lbdiv@divisor^0,w,c
  1661  003C7E  B4D8               	btfsc	status,2,c
  1662  003C80  EF44  F01E         	goto	u171
  1663  003C84  EF47  F01E         	goto	u170
  1664  003C88                     u171:
  1665  003C88  FFFF               	dw	65535	; assembler added errata NOP
  1666  003C8A  EF71  F01E         	goto	l1204
  1667  003C8E                     u170:
  1668  003C8E  FFFF               	dw	65535	; assembler added errata NOP
  1669  003C90  0E01               	movlw	1
  1670  003C92  6E54               	movwf	___lbdiv@counter^0,c
  1671  003C94  EF50  F01E         	goto	l1192
  1672  003C98                     l1188:
  1673  003C98  FFFF               	dw	65535	; assembler added errata NOP
  1674  003C9A  90D8               	bcf	status,0,c
  1675  003C9C  3652               	rlcf	___lbdiv@divisor^0,f,c
  1676  003C9E  2A54               	incf	___lbdiv@counter^0,f,c
  1677  003CA0                     l1192:
  1678  003CA0  FFFF               	dw	65535	; assembler added errata NOP
  1679  003CA2  AE52               	btfss	___lbdiv@divisor^0,7,c
  1680  003CA4  EF56  F01E         	goto	u181
  1681  003CA8  EF59  F01E         	goto	u180
  1682  003CAC                     u181:
  1683  003CAC  FFFF               	dw	65535	; assembler added errata NOP
  1684  003CAE  EF4C  F01E         	goto	l1188
  1685  003CB2                     u180:
  1686  003CB2  FFFF               	dw	65535	; assembler added errata NOP
  1687  003CB4                     l1194:
  1688  003CB4  FFFF               	dw	65535	; assembler added errata NOP
  1689  003CB6  90D8               	bcf	status,0,c
  1690  003CB8  3655               	rlcf	___lbdiv@quotient^0,f,c
  1691  003CBA  5052               	movf	___lbdiv@divisor^0,w,c
  1692  003CBC  5C53               	subwf	___lbdiv@dividend^0,w,c
  1693  003CBE  A0D8               	btfss	status,0,c
  1694  003CC0  EF64  F01E         	goto	u191
  1695  003CC4  EF67  F01E         	goto	u190
  1696  003CC8                     u191:
  1697  003CC8  FFFF               	dw	65535	; assembler added errata NOP
  1698  003CCA  EF6B  F01E         	goto	l1200
  1699  003CCE                     u190:
  1700  003CCE  FFFF               	dw	65535	; assembler added errata NOP
  1701  003CD0  5052               	movf	___lbdiv@divisor^0,w,c
  1702  003CD2  5E53               	subwf	___lbdiv@dividend^0,f,c
  1703  003CD4  8055               	bsf	___lbdiv@quotient^0,0,c
  1704  003CD6                     l1200:
  1705  003CD6  FFFF               	dw	65535	; assembler added errata NOP
  1706  003CD8  90D8               	bcf	status,0,c
  1707  003CDA  3252               	rrcf	___lbdiv@divisor^0,f,c
  1708  003CDC  2E54               	decfsz	___lbdiv@counter^0,f,c
  1709  003CDE  EF5A  F01E         	goto	l1194
  1710  003CE2                     l1204:
  1711  003CE2  FFFF               	dw	65535	; assembler added errata NOP
  1712  003CE4  5055               	movf	___lbdiv@quotient^0,w,c
  1713  003CE6  0012               	return		;funcret
  1714  003CE8  FFFF               	dw	65535	; errata NOP
  1715  003CEA                     __end_of___lbdiv:
  1716                           	opt callstack 0
  1717                           
  1718 ;; *************** function _init_config *****************
  1719 ;; Defined at:
  1720 ;;		line 90 in file "main.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;		None
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;		None
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  1    wreg      void 
  1727 ;; Registers used:
  1728 ;;		wreg, status,2
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1734 ;;      Params:         0       0       0       0       0       0       0
  1735 ;;      Locals:         0       0       0       0       0       0       0
  1736 ;;      Temps:          0       0       0       0       0       0       0
  1737 ;;      Totals:         0       0       0       0       0       0       0
  1738 ;;Total ram usage:        0 bytes
  1739 ;; Hardware stack levels used:    1
  1740 ;; This function calls:
  1741 ;;		Nothing
  1742 ;; This function is called by:
  1743 ;;		_main
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           	psect	text16
  1748  003B9E                     __ptext16:
  1749                           	opt callstack 0
  1750  003B9E                     _init_config:
  1751                           	opt callstack 0
  1752  003B9E  FFFF               	dw	65535	; assembler added errata NOP
  1753  003BA0                     
  1754                           ;main.c: 91: ADCON1 = 0X06;
  1755  003BA0  0E06               	movlw	6
  1756  003BA2  6EC1               	movwf	193,c	;volatile
  1757                           
  1758                           ;main.c: 93: TRISA = 0B00000000;
  1759  003BA4  0E00               	movlw	0
  1760  003BA6  6E92               	movwf	146,c	;volatile
  1761                           
  1762                           ;main.c: 94: LATA = 0;
  1763  003BA8  0E00               	movlw	0
  1764  003BAA  6E89               	movwf	137,c	;volatile
  1765                           
  1766                           ;main.c: 95: PORTA = 0;
  1767  003BAC  0E00               	movlw	0
  1768  003BAE  6E80               	movwf	128,c	;volatile
  1769  003BB0                     
  1770                           ;main.c: 97: TRISB = 0B11111111;
  1771  003BB0  6893               	setf	147,c	;volatile
  1772                           
  1773                           ;main.c: 98: LATB = 0;
  1774  003BB2  0E00               	movlw	0
  1775  003BB4  6E8A               	movwf	138,c	;volatile
  1776  003BB6                     
  1777                           ;main.c: 99: PORTB = 0B11111111;
  1778  003BB6  6881               	setf	129,c	;volatile
  1779  003BB8                     
  1780                           ;main.c: 101: TRISC = 0B11111111;
  1781  003BB8  6894               	setf	148,c	;volatile
  1782                           
  1783                           ;main.c: 102: LATC = 0;
  1784  003BBA  0E00               	movlw	0
  1785  003BBC  6E8B               	movwf	139,c	;volatile
  1786                           
  1787                           ;main.c: 103: PORTC = 0;
  1788  003BBE  0E00               	movlw	0
  1789  003BC0  6E82               	movwf	130,c	;volatile
  1790                           
  1791                           ;main.c: 105: TRISD = 0B00000000;
  1792  003BC2  0E00               	movlw	0
  1793  003BC4  6E95               	movwf	149,c	;volatile
  1794                           
  1795                           ;main.c: 106: LATD = 0;
  1796  003BC6  0E00               	movlw	0
  1797  003BC8  6E8C               	movwf	140,c	;volatile
  1798                           
  1799                           ;main.c: 107: PORTD = 0;
  1800  003BCA  0E00               	movlw	0
  1801  003BCC  6E83               	movwf	131,c	;volatile
  1802                           
  1803                           ;main.c: 109: TRISE = 0B00000000;
  1804  003BCE  0E00               	movlw	0
  1805  003BD0  6E96               	movwf	150,c	;volatile
  1806                           
  1807                           ;main.c: 110: LATE = 0;
  1808  003BD2  0E00               	movlw	0
  1809  003BD4  6E8D               	movwf	141,c	;volatile
  1810                           
  1811                           ;main.c: 111: PORTE = 0;
  1812  003BD6  0E00               	movlw	0
  1813  003BD8  6E84               	movwf	132,c	;volatile
  1814  003BDA  0012               	return		;funcret
  1815  003BDC  FFFF               	dw	65535	; errata NOP
  1816  003BDE                     __end_of_init_config:
  1817                           	opt callstack 0
  1818  003BDE  FFFF               	dw	65535	; assembler added errata NOP
  1819                           
  1820                           	psect	rparam
  1821  0000                     tosu	equ	0xFFF
  1822                           tosh	equ	0xFFE
  1823                           tosl	equ	0xFFD
  1824                           stkptr	equ	0xFFC
  1825                           pclatu	equ	0xFFB
  1826                           pclath	equ	0xFFA
  1827                           pcl	equ	0xFF9
  1828                           tblptru	equ	0xFF8
  1829                           tblptrh	equ	0xFF7
  1830                           tblptrl	equ	0xFF6
  1831                           tablat	equ	0xFF5
  1832                           prodh	equ	0xFF4
  1833                           prodl	equ	0xFF3
  1834                           indf0	equ	0xFEF
  1835                           postinc0	equ	0xFEE
  1836                           postdec0	equ	0xFED
  1837                           preinc0	equ	0xFEC
  1838                           plusw0	equ	0xFEB
  1839                           fsr0h	equ	0xFEA
  1840                           fsr0l	equ	0xFE9
  1841                           wreg	equ	0xFE8
  1842                           indf1	equ	0xFE7
  1843                           postinc1	equ	0xFE6
  1844                           postdec1	equ	0xFE5
  1845                           preinc1	equ	0xFE4
  1846                           plusw1	equ	0xFE3
  1847                           fsr1h	equ	0xFE2
  1848                           fsr1l	equ	0xFE1
  1849                           bsr	equ	0xFE0
  1850                           indf2	equ	0xFDF
  1851                           postinc2	equ	0xFDE
  1852                           postdec2	equ	0xFDD
  1853                           preinc2	equ	0xFDC
  1854                           plusw2	equ	0xFDB
  1855                           fsr2h	equ	0xFDA
  1856                           fsr2l	equ	0xFD9
  1857                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        81
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     20     101
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_visualizar
    _visualizar->_tolower
    _operar->_division
    _operar->_no_es_primo
    _no_es_primo->_module
    _module->___lbmod
    _nand->_and
    _division->___lbdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    5722
                                             11 COMRAM     9     9      0
                        _init_config
                             _operar
                         _visualizar
 ---------------------------------------------------------------------------------
 (1) _visualizar                                          10     7      3    1909
                                              1 COMRAM    10     7      3
                            _tolower
 ---------------------------------------------------------------------------------
 (2) _tolower                                              1     1      0      67
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _operar                                               3     1      2    3340
                                              7 COMRAM     3     1      2
                                _and
                           _division
                             _module
                              _multi
                               _nand
                        _no_es_primo
                                 _or
                              _resta
                               _suma
                                _xor
 ---------------------------------------------------------------------------------
 (2) _xor                                                  2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _suma                                                 2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _resta                                                3     2      1     165
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (2) _or                                                   2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _no_es_primo                                          1     1      0     453
                                              6 COMRAM     1     1      0
                             _module
 ---------------------------------------------------------------------------------
 (3) _module                                               2     1      1     431
                                              4 COMRAM     2     1      1
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1     235
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _nand                                                 2     1      1     316
                                              2 COMRAM     2     1      1
                                _and
 ---------------------------------------------------------------------------------
 (3) _and                                                  2     1      1     196
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _multi                                                2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _division                                             3     2      1     381
                                              4 COMRAM     3     2      1
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1     238
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_config
   _operar
     _and
     _division
       ___lbdiv
     _module
       ___lbmod
     _multi
     _nand
       _and
     _no_es_primo
       _module
         ___lbmod
     _or
     _resta
     _suma
     _xor
   _visualizar
     _tolower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     14      65       1       79.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      65      15        0.0%
DATA                 0      0      65       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 26 16:27:09 2020

                                                               l92 3BDA  
                                                               l97 3D10  
                                                               _or 3A92  
                                                      __CFG_OSC$XT 000000  
                                                              l111 3FFA  
                                                              l103 3DBE  
                                                              l132 3ACC  
                                                              l141 3A8E  
                                                              l126 3AB2  
                                                              l150 3ABE  
                                                              l135 3B08  
                                                              l144 3A9A  
                                                              l129 3AA6  
                                                              l138 3ADE  
                                                              l154 3B62  
                                                              l147 3AF2  
                                                              ?_or 0052  
                                                              l551 3CE6  
                                                              l820 3B9A  
                                                              l557 3C1E  
                                                              _LA3 007C4B  
                                                              _LA5 007C4D  
                                                              u200 3B7E  
                                                              u201 3B78  
                                                              u210 3B92  
                                                              u211 3B8C  
                                                              u220 3B56  
                                                              u300 3ECA  
                                                              u221 3B50  
                                                              u301 3EC4  
                                                              u230 3F90  
                                                              u231 3F88  
                                                              u160 3C0E  
                                                              u240 3F94  
                                                              u161 3C08  
                                                              u170 3C8E  
                                                              u250 3D06  
                                                              u171 3C88  
                                                              u251 3D00  
                                                              u180 3CB2  
                                                              u260 3D30  
                                                              u181 3CAC  
                                                              u317 3D9E  
                                                              u261 3D2A  
                                                              u190 3CCE  
                                                              u270 3DBC  
                                                              u191 3CC8  
                                                              u271 3DB6  
                                                              u280 3DFA  
                                                              u281 3DF4  
                                                              u290 3E4C  
                                                              u291 3E46  
                                                     __CFG_BOR$OFF 000000  
                                                              _and 3A86  
                                                              _xor 3AB6  
                                                              wreg 000FE8  
                                                             ??_or 0053  
                                                     __CFG_LVP$OFF 000000  
                                                     __CFG_WDT$OFF 000000  
                                                             l1200 3CD6  
                                                             l1202 3CDC  
                                                             l1210 3B80  
                                                             l1204 3CE2  
                                                             l1212 3B94  
                                                             l1230 3AFA  
                                                             l1222 3AA2  
                                                             l1310 3F4C  
                                                             l1214 3B96  
                                                             l1232 3B06  
                                                             l1240 3AE6  
                                                             l1160 3BEC  
                                                             l1304 3F3C  
                                                             l1208 3B6C  
                                                             l1400 3EA4  
                                                             l1226 3AC6  
                                                             l1170 3C1C  
                                                             l1162 3BF6  
                                                             l1250 3B58  
                                                             l1218 3AAE  
                                                             l1322 3F6C  
                                                             l1402 3EB4  
                                                             l1260 3BB0  
                                                             l1164 3BFA  
                                                             l1236 3A96  
                                                             l1244 3ABA  
                                                             l1316 3F5C  
                                                             l1404 3EB8  
                                                             ?_and 0052  
                                                             l1262 3BB6  
                                                             l1190 3C9E  
                                                             l1182 3C78  
                                                             l1166 3C10  
                                                             l1158 3BE4  
                                                             l1174 3AD4  
                                                             l1254 3B5E  
                                                             l1350 3D32  
                                                             l1264 3BB8  
                                                             l1192 3CA0  
                                                             l1184 3C7C  
                                                             l1168 3C14  
                                                             l1248 3B3A  
                                                             l1328 3F78  
                                                             l1280 3EFC  
                                                             l1336 3F9A  
                                                             l1360 3DA8  
                                                             l1352 3D60  
                                                             l1344 3CF2  
                                                             l1258 3BA0  
                                                             l1194 3CB4  
                                                             l1186 3C90  
                                                             l1178 3A8A  
                                                             l1274 3EEC  
                                                             l1266 3ED8  
                                                             l1362 3DAA  
                                                             l1354 3D8C  
                                                             l1346 3D08  
                                                             l1338 3CEE  
                                                             l1370 3DD6  
                                                             l1196 3CD0  
                                                             l1188 3C98  
                                                             l1292 3F1C  
                                                             l1268 3EDC  
                                                             l1356 3D92  
                                                             l1348 3D16  
                                                             l1380 3DFC  
                                                             l1372 3DDC  
                                                             l1364 3DC2  
                                                             l1198 3CD4  
                                                             l1286 3F0C  
                                                             l1358 3D98  
                                                             l1390 3E4E  
                                                             l1382 3E16  
                                                             l1366 3DC8  
                                                             l1392 3E60  
                                                             l1384 3E2E  
                                                             l1368 3DD0  
                                                             l1298 3F2C  
                                                             l1394 3E64  
                                                             l1386 3E34  
                                                             l1378 3DE4  
                                                             l1396 3E7C  
                                                             l1388 3E38  
                                                             l1398 3E8E  
                                                             ?_xor 0052  
                                                             _LATA 000F89  
                                                             _LATB 000F8A  
                                                             _LATC 000F8B  
                                                             _LATD 000F8C  
                                                             _LATE 000F8D  
                                                     __CFG_PWRT$ON 000000  
                                                             _main 3DC2  
                                                             _nand 3AE2  
                                                             indf2 000FDF  
                                                             fsr1l 000FE1  
                                                             fsr2l 000FD9  
                                                             _suma 3AAA  
                                                             prodh 000FF4  
                                                             prodl 000FF3  
                                                             start 0002  
                                                     ___param_bank 000000  
                                                            ??_and 0053  
                                                            ??_xor 0053  
                                                            ?_main 0052  
                                                            ?_nand 0054  
                                                  __end_of___lbdiv 3CEA  
                                                  __end_of___lbmod 3C22  
                                                            ?_suma 0052  
                                                     ?_init_config 0052  
                                                            _PORTA 000F80  
                                                            _PORTB 000F81  
                                                            _PORTC 000F82  
                                                            _PORTD 000F83  
                                                            _PORTE 000F84  
                                                            _TRISA 000F92  
                                                            _TRISB 000F93  
                                                            _TRISC 000F94  
                                                            _TRISD 000F95  
                                                            _TRISE 000F96  
                                                            _resta 3A9E  
                                                            _multi 3AC2  
                                                            main@i 0061  
                                                            main@x 0062  
                                                            tablat 000FF5  
                                                            status 000FD8  
                                                  __end_of_tolower 3B9E  
                                                  ___lbdiv@divisor 0052  
                                                  ___lbdiv@counter 0054  
                                                     ?_no_es_primo 0052  
                                                  __initialization 3B0C  
                                                     __end_of_main 3ED4  
                                                     __end_of_nand 3AF6  
                                                     __end_of_suma 3AB6  
                                                           ??_main 005D  
                                                           ??_nand 0055  
                                                           ??_suma 0053  
                                                    __activetblptr 000002  
                                                           _ADCON1 000FC1  
                                                           ?_resta 0052  
                                                           ?_multi 0052  
                                                           _NUMERO 0001  
                                                 __end_of_division 3B0C  
                                                        ??___lbdiv 0053  
                                                        ??___lbmod 0053  
                                                           _module 3AD0  
                                                           _operar 3ED4  
                                                    main@resultado 0060  
                                                     __pdataCOMRAM 0001  
                                                           tblptrh 000FF7  
                                                           tblptrl 000FF6  
                                                           tblptru 000FF8  
                                                        ??_tolower 0052  
                                                 ___lbdiv@dividend 0053  
                                                  ___lbmod@divisor 0052  
                                                       __accesstop 0080  
                                          __end_of__initialization 3B2C  
                                                  ___lbmod@counter 0054  
                                                    ___rparam_used 000001  
                                                   __pcstackCOMRAM 0052  
                                                    __end_of_resta 3AAA  
                                                    __end_of_multi 3AD0  
                                                 ___lbdiv@quotient 0055  
                                                       __end_of_or 3A9E  
                                             __size_of_init_config 0040  
                                               visualizar@position 0053  
                                                          ??_resta 0053  
                                                          ??_multi 0053  
                                             __size_of_no_es_primo 0032  
                                                          ?_module 0056  
                                                          ?_operar 0059  
                                                   no_es_primo@num 0058  
                                                          _SIMBOLO 0031  
                                                        ?_division 0056  
                                                   visualizar@from 0054  
                                                          __Hparam 0000  
                                                          __Lparam 0000  
                                                          ___lbdiv 3C74  
                                                          ___lbmod 3BE0  
                                                          __pcinit 3B0C  
                                                   _visualizar$154 005A  
                                                          __ramtop 0600  
                                                  __size_of_module 0012  
                                                  __size_of_operar 012C  
                                                          __ptext0 3DC2  
                                                          __ptext1 3CEA  
                                                          __ptext2 3B68  
                                                          __ptext3 3ED4  
                                                          __ptext4 3AB6  
                                                          __ptext5 3AAA  
                                                          __ptext6 3A9E  
                                                          __ptext7 3A92  
                                                          __ptext8 3B36  
                                                          __ptext9 3AD0  
                                                      resta@oper_1 0054  
                                                      resta@oper_2 0052  
                                                     __size_of_and 000C  
                                                     __size_of_xor 000C  
                                                          _tolower 3B68  
                                             end_of_initialization 3B2C  
                                                       ??_division 0057  
                                                    __Lmediumconst 0000  
                                                          postdec1 000FE5  
                                                          postinc0 000FEE  
                                                      multi@oper_1 0053  
                                                      multi@oper_2 0052  
                                                 ___lbmod@dividend 0053  
                                                      ___lbmod@rem 0055  
                                                       main@oper_1 0064  
                                                       main@oper_2 0065  
                                                       _visualizar 3CEA  
                                                       nand@oper_1 0055  
                                                       nand@oper_2 0054  
                                                    __pidataCOMRAM 3C23  
                                                   __end_of_module 3AE2  
                                                   __end_of_operar 4000  
                                              start_initialization 3B0C  
                                                 visualizar@enable 0055  
                                                   division@oper_1 0057  
                                                   division@oper_2 0056  
                                                      __end_of_and 3A92  
                                                      __end_of_xor 3AC2  
                                                   division@result 0058  
                                                         ??_module 0057  
                                                         ??_operar 005B  
                                                    ??_init_config 0052  
                                                __size_of_division 0016  
                                                      ?_visualizar 0053  
                                                    ??_no_es_primo 0058  
                                                         ?___lbdiv 0052  
                                                         ?___lbmod 0052  
                                                      visualizar@x 005C  
                                                     module@oper_1 0057  
                                                     module@oper_2 0056  
                                                        and@oper_1 0053  
                                                        and@oper_2 0052  
                                                    visualizar@SoN 0059  
                                                       operar@oper 005B  
                                                         ?_tolower 0052  
                                              __end_of_init_config 3BDE  
                                                   __size_of_resta 000C  
                                                   __size_of_multi 000E  
                                                      __size_of_or 000C  
                                              __end_of_no_es_primo 3B68  
                                              __size_of_visualizar 00D8  
                                                        copy_data0 3B20  
                                                       suma@oper_1 0053  
                                                       suma@oper_2 0052  
                                                         __Hrparam 0000  
                                                         __Lrparam 0000  
                                                 __size_of___lbdiv 0076  
                                                 __size_of___lbmod 0042  
                                                     operar@oper_1 0059  
                                                     operar@oper_2 005A  
                                                      _init_config 3B9E  
                                                         _main$145 005E  
                                                         __ptext10 3BE0  
                                                         __ptext11 3AE2  
                                                         __ptext12 3A86  
                                                         __ptext13 3AC2  
                                                         __ptext14 3AF6  
                                                         __ptext15 3C74  
                                                         __ptext16 3B9E  
                                                         _division 3AF6  
                                                 __size_of_tolower 0036  
                                                    __size_of_main 0112  
                                                    __size_of_nand 0014  
                                                    __size_of_suma 000C  
                                                      _no_es_primo 3B36  
                                                         main@oper 0063  
                                                         or@oper_1 0053  
                                                         or@oper_2 0052  
                                                        xor@oper_1 0053  
                                                        xor@oper_2 0052  
                                                     ??_visualizar 0056  
                                                         tolower@c 0052  
                                               __end_of_visualizar 3DC2  
