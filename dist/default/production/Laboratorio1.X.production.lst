

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 26 16:54:50 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29  0000                     
    30                           ; Version 2.10
    31                           ; Generated 31/07/2019 GMT
    32                           ; 
    33                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F452 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     
    65                           	psect	idataCOMRAM
    66  003B74                     __pidataCOMRAM:
    67                           	opt callstack 0
    68                           
    69                           ;initializer for _NUMERO
    70  003B74  F8                 	db	248
    71  003B75  88                 	db	136
    72  003B76  F8                 	db	248
    73  003B77  40                 	db	64
    74  003B78  F8                 	db	248
    75  003B79  F8                 	db	248
    76  003B7A  B8                 	db	184
    77  003B7B  A8                 	db	168
    78  003B7C  E8                 	db	232
    79  003B7D  A8                 	db	168
    80  003B7E  A8                 	db	168
    81  003B7F  F8                 	db	248
    82  003B80  E0                 	db	224
    83  003B81  20                 	db	32
    84  003B82  F8                 	db	248
    85  003B83  E8                 	db	232
    86  003B84  A8                 	db	168
    87  003B85  B8                 	db	184
    88  003B86  F8                 	db	248
    89  003B87  A8                 	db	168
    90  003B88  B8                 	db	184
    91  003B89  80                 	db	128
    92  003B8A  80                 	db	128
    93  003B8B  F8                 	db	248
    94  003B8C  F8                 	db	248
    95  003B8D  A8                 	db	168
    96  003B8E  F8                 	db	248
    97  003B8F  E0                 	db	224
    98  003B90  A0                 	db	160
    99  003B91  F8                 	db	248
   100  003B92  F8                 	db	248
   101  003B93  A0                 	db	160
   102  003B94  F8                 	db	248
   103  003B95  F8                 	db	248
   104  003B96  28                 	db	40
   105  003B97  38                 	db	56
   106  003B98  F8                 	db	248
   107  003B99  88                 	db	136
   108  003B9A  88                 	db	136
   109  003B9B  38                 	db	56
   110  003B9C  28                 	db	40
   111  003B9D  F8                 	db	248
   112  003B9E  F8                 	db	248
   113  003B9F  A8                 	db	168
   114  003BA0  A8                 	db	168
   115  003BA1  F8                 	db	248
   116  003BA2  A0                 	db	160
   117  003BA3  A0                 	db	160
   118                           
   119                           ;initializer for _SIMBOLO
   120  003BA4  20                 	db	32
   121  003BA5  70                 	db	112
   122  003BA6  20                 	db	32
   123  003BA7  20                 	db	32
   124  003BA8  20                 	db	32
   125  003BA9  20                 	db	32
   126  003BAA  50                 	db	80
   127  003BAB  20                 	db	32
   128  003BAC  50                 	db	80
   129  003BAD  10                 	db	16
   130  003BAE  20                 	db	32
   131  003BAF  40                 	db	64
   132  003BB0  70                 	db	112
   133  003BB1  20                 	db	32
   134  003BB2  70                 	db	112
   135  003BB3  20                 	db	32
   136  003BB4  40                 	db	64
   137  003BB5  20                 	db	32
   138  003BB6  40                 	db	64
   139  003BB7  20                 	db	32
   140  003BB8  40                 	db	64
   141  003BB9  50                 	db	80
   142  003BBA  60                 	db	96
   143  003BBB  50                 	db	80
   144  003BBC  60                 	db	96
   145  003BBD  50                 	db	80
   146  003BBE  60                 	db	96
   147  003BBF  80                 	db	128
   148  003BC0  F8                 	db	248
   149  003BC1  80                 	db	128
   150  003BC2  50                 	db	80
   151  003BC3  50                 	db	80
   152  003BC4  50                 	db	80
   153  003BC5  F8                 	db	248
   154  003BC6  B0                 	db	176
   155  003BC7  E8                 	db	232
   156  0000                     _PORTE	set	3972
   157  0000                     _LATE	set	3981
   158  0000                     _TRISE	set	3990
   159  0000                     _PORTD	set	3971
   160  0000                     _LATD	set	3980
   161  0000                     _TRISD	set	3989
   162  0000                     _LATC	set	3979
   163  0000                     _TRISC	set	3988
   164  0000                     _LATB	set	3978
   165  0000                     _TRISB	set	3987
   166  0000                     _PORTA	set	3968
   167  0000                     _LATA	set	3977
   168  0000                     _TRISA	set	3986
   169  0000                     _ADCON1	set	4033
   170  0000                     _PORTC	set	3970
   171  0000                     _PORTB	set	3969
   172  0000                     _LA5	set	31821
   173  0000                     _LA3	set	31819
   174                           
   175                           ; #config settings
   176  0000                     
   177                           	psect	cinit
   178  003A5E                     __pcinit:
   179                           	opt callstack 0
   180  003A5E                     start_initialization:
   181                           	opt callstack 0
   182  003A5E                     __initialization:
   183                           	opt callstack 0
   184                           
   185                           ; Initialize objects allocated to COMRAM (84 bytes)
   186                           ; load TBLPTR registers with __pidataCOMRAM
   187  003A5E  0E74               	movlw	low __pidataCOMRAM
   188  003A60  6EF6               	movwf	tblptrl,c
   189  003A62  0E3B               	movlw	high __pidataCOMRAM
   190  003A64  6EF7               	movwf	tblptrh,c
   191  003A66  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   192  003A68  6EF8               	movwf	tblptru,c
   193  003A6A  EE00  F001         	lfsr	0,__pdataCOMRAM
   194  003A6E  EE10 F054          	lfsr	1,84
   195  003A72                     copy_data0:
   196  003A72  0009               	tblrd		*+
   197  003A74  CFF5 FFEE          	movff	tablat,postinc0
   198  003A78  50E5               	movf	postdec1,w,c
   199  003A7A  50E1               	movf	fsr1l,w,c
   200  003A7C  E1FA               	bnz	copy_data0
   201  003A7E                     end_of_initialization:
   202                           	opt callstack 0
   203  003A7E                     __end_of__initialization:
   204                           	opt callstack 0
   205  003A7E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   206  003A80  6EF8               	movwf	tblptru,c
   207  003A82  0100               	movlb	0
   208  003A84  EF50  F01F         	goto	_main	;jump to C main() function
   209                           
   210                           	psect	dataCOMRAM
   211  000001                     __pdataCOMRAM:
   212                           	opt callstack 0
   213  000001                     _NUMERO:
   214                           	opt callstack 0
   215  000001                     	ds	48
   216  000031                     _SIMBOLO:
   217                           	opt callstack 0
   218  000031                     	ds	36
   219                           
   220                           	psect	cstackCOMRAM
   221  000055                     __pcstackCOMRAM:
   222                           	opt callstack 0
   223  000055                     suma@oper_2:
   224                           	opt callstack 0
   225  000055                     resta@oper_2:
   226                           	opt callstack 0
   227  000055                     multi@oper_2:
   228                           	opt callstack 0
   229  000055                     and@oper_2:
   230                           	opt callstack 0
   231  000055                     or@oper_2:
   232                           	opt callstack 0
   233  000055                     xor@oper_2:
   234                           	opt callstack 0
   235  000055                     ___lbdiv@divisor:
   236                           	opt callstack 0
   237  000055                     ___lbmod@divisor:
   238                           	opt callstack 0
   239  000055                     tolower@c:
   240                           	opt callstack 0
   241                           
   242                           ; 1 bytes @ 0x0
   243  000055                     	ds	1
   244  000056                     visualizar@position:
   245                           	opt callstack 0
   246  000056                     suma@oper_1:
   247                           	opt callstack 0
   248  000056                     resta@oper_1:
   249                           	opt callstack 0
   250  000056                     multi@oper_1:
   251                           	opt callstack 0
   252  000056                     and@oper_1:
   253                           	opt callstack 0
   254  000056                     or@oper_1:
   255                           	opt callstack 0
   256  000056                     xor@oper_1:
   257                           	opt callstack 0
   258  000056                     ___lbdiv@dividend:
   259                           	opt callstack 0
   260  000056                     ___lbmod@dividend:
   261                           	opt callstack 0
   262                           
   263                           ; 1 bytes @ 0x1
   264  000056                     	ds	1
   265  000057                     visualizar@from:
   266                           	opt callstack 0
   267  000057                     nand@oper_2:
   268                           	opt callstack 0
   269  000057                     ___lbdiv@counter:
   270                           	opt callstack 0
   271  000057                     ___lbmod@counter:
   272                           	opt callstack 0
   273                           
   274                           ; 1 bytes @ 0x2
   275  000057                     	ds	1
   276  000058                     visualizar@enable:
   277                           	opt callstack 0
   278  000058                     nand@oper_1:
   279                           	opt callstack 0
   280  000058                     ___lbdiv@quotient:
   281                           	opt callstack 0
   282  000058                     ___lbmod@rem:
   283                           	opt callstack 0
   284                           
   285                           ; 1 bytes @ 0x3
   286  000058                     	ds	1
   287  000059                     ??_visualizar:
   288  000059                     division@oper_2:
   289                           	opt callstack 0
   290  000059                     module@oper_2:
   291                           	opt callstack 0
   292                           
   293                           ; 1 bytes @ 0x4
   294  000059                     	ds	1
   295  00005A                     division@oper_1:
   296                           	opt callstack 0
   297  00005A                     module@oper_1:
   298                           	opt callstack 0
   299                           
   300                           ; 1 bytes @ 0x5
   301  00005A                     	ds	1
   302  00005B                     division@result:
   303                           	opt callstack 0
   304  00005B                     no_es_primo@num:
   305                           	opt callstack 0
   306                           
   307                           ; 1 bytes @ 0x6
   308  00005B                     	ds	1
   309  00005C                     visualizar@SoN:
   310                           	opt callstack 0
   311  00005C                     operar@oper_1:
   312                           	opt callstack 0
   313                           
   314                           ; 1 bytes @ 0x7
   315  00005C                     	ds	1
   316  00005D                     operar@oper_2:
   317                           	opt callstack 0
   318  00005D                     _visualizar$158:
   319                           	opt callstack 0
   320                           
   321                           ; 2 bytes @ 0x8
   322  00005D                     	ds	1
   323  00005E                     operar@oper:
   324                           	opt callstack 0
   325                           
   326                           ; 1 bytes @ 0x9
   327  00005E                     	ds	1
   328  00005F                     visualizar@x:
   329                           	opt callstack 0
   330                           
   331                           ; 1 bytes @ 0xA
   332  00005F                     	ds	1
   333  000060                     ??_show_error_message:
   334                           
   335                           ; 1 bytes @ 0xB
   336  000060                     	ds	1
   337  000061                     ??_main:
   338                           
   339                           ; 1 bytes @ 0xC
   340  000061                     	ds	1
   341  000062                     _main$149:
   342                           	opt callstack 0
   343                           
   344                           ; 2 bytes @ 0xD
   345  000062                     	ds	2
   346  000064                     main@i:
   347                           	opt callstack 0
   348                           
   349                           ; 1 bytes @ 0xF
   350  000064                     	ds	1
   351  000065                     main@x:
   352                           	opt callstack 0
   353                           
   354                           ; 1 bytes @ 0x10
   355  000065                     	ds	1
   356  000066                     main@resultado:
   357                           	opt callstack 0
   358                           
   359                           ; 1 bytes @ 0x11
   360  000066                     	ds	1
   361  000067                     main@oper:
   362                           	opt callstack 0
   363                           
   364                           ; 1 bytes @ 0x12
   365  000067                     	ds	1
   366  000068                     main@oper_1:
   367                           	opt callstack 0
   368                           
   369                           ; 1 bytes @ 0x13
   370  000068                     	ds	1
   371  000069                     main@oper_2:
   372                           	opt callstack 0
   373                           
   374                           ; 1 bytes @ 0x14
   375  000069                     	ds	1
   376                           
   377 ;;
   378 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   379 ;;
   380 ;; *************** function _main *****************
   381 ;; Defined at:
   382 ;;		line 58 in file "main.c"
   383 ;; Parameters:    Size  Location     Type
   384 ;;		None
   385 ;; Auto vars:     Size  Location     Type
   386 ;;  x               1   16[COMRAM] unsigned char 
   387 ;;  i               1   15[COMRAM] unsigned char 
   388 ;;  oper_2          1   20[COMRAM] unsigned char 
   389 ;;  oper_1          1   19[COMRAM] unsigned char 
   390 ;;  oper            1   18[COMRAM] unsigned char 
   391 ;;  resultado       1   17[COMRAM] unsigned char 
   392 ;; Return value:  Size  Location     Type
   393 ;;                  1    wreg      void 
   394 ;; Registers used:
   395 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   396 ;; Tracked objects:
   397 ;;		On entry : 0/0
   398 ;;		On exit  : 0/0
   399 ;;		Unchanged: 0/0
   400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   401 ;;      Params:         0       0       0       0       0       0       0
   402 ;;      Locals:         8       0       0       0       0       0       0
   403 ;;      Temps:          1       0       0       0       0       0       0
   404 ;;      Totals:         9       0       0       0       0       0       0
   405 ;;Total ram usage:        9 bytes
   406 ;; Hardware stack levels required when called:    4
   407 ;; This function calls:
   408 ;;		_init_config
   409 ;;		_operar
   410 ;;		_show_error_message
   411 ;;		_visualizar
   412 ;; This function is called by:
   413 ;;		Startup code after reset
   414 ;; This function uses a non-reentrant model
   415 ;;
   416                           
   417                           	psect	text0
   418  003EA0                     __ptext0:
   419                           	opt callstack 0
   420  003EA0                     _main:
   421                           	opt callstack 27
   422  003EA0  FFFF               	dw	65535	; assembler added errata NOP
   423                           
   424                           ;main.c: 59: char oper_1;;main.c: 60: char oper_2;;main.c: 61: char oper;;main.c: 62: ch
      +                          ar resultado;;main.c: 64: init_config();
   425  003EA2  EC78  F01D         	call	_init_config	;wreg free
   426  003EA6                     l1390:
   427  003EA6  FFFF               	dw	65535	; assembler added errata NOP
   428                           
   429                           ;main.c: 66: oper_1 = PORTB>>4;
   430  003EA8  3881               	swapf	129,w,c	;volatile
   431  003EAA  0B0F               	andlw	15
   432  003EAC  6E68               	movwf	main@oper_1^0,c
   433  003EAE                     
   434                           ;main.c: 67: oper_2 = PORTB&0X0F;
   435  003EAE  5081               	movf	129,w,c	;volatile
   436  003EB0  0B0F               	andlw	15
   437  003EB2  6E69               	movwf	main@oper_2^0,c
   438  003EB4                     
   439                           ;main.c: 68: oper = PORTC&0X0F;
   440  003EB4  5082               	movf	130,w,c	;volatile
   441  003EB6  0B0F               	andlw	15
   442  003EB8  6E67               	movwf	main@oper^0,c
   443  003EBA                     
   444                           ;main.c: 71: for (char i = 0; i < 200; i++) {
   445  003EBA  0E00               	movlw	0
   446  003EBC  6E64               	movwf	main@i^0,c
   447  003EBE  EFE4  F01F         	goto	l1432
   448  003EC2                     l1402:
   449  003EC2  FFFF               	dw	65535	; assembler added errata NOP
   450                           
   451                           ;main.c: 74: resultado = oper_1 < oper_2 ? operar(oper, oper_2, oper_1) : operar(oper, o
      +                          per_1, oper_2);
   452  003EC4  5069               	movf	main@oper_2^0,w,c
   453  003EC6  5C68               	subwf	main@oper_1^0,w,c
   454  003EC8  A0D8               	btfss	status,0,c
   455  003ECA  EF69  F01F         	goto	u291
   456  003ECE  EF6C  F01F         	goto	u290
   457  003ED2                     u291:
   458  003ED2  FFFF               	dw	65535	; assembler added errata NOP
   459  003ED4  EF7A  F01F         	goto	l1406
   460  003ED8                     u290:
   461  003ED8  FFFF               	dw	65535	; assembler added errata NOP
   462  003EDA  C068  F05C         	movff	main@oper_1,operar@oper_1
   463  003EDE  C069  F05D         	movff	main@oper_2,operar@oper_2
   464  003EE2  5067               	movf	main@oper^0,w,c
   465  003EE4  ECBA  F01E         	call	_operar
   466  003EE8  6E61               	movwf	??_main^0,c
   467  003EEA  5061               	movf	??_main^0,w,c
   468  003EEC  6E62               	movwf	_main$149^0,c
   469  003EEE  6A63               	clrf	(_main$149+1)^0,c
   470  003EF0  EF86  F01F         	goto	l1408
   471  003EF4                     l1406:
   472  003EF4  FFFF               	dw	65535	; assembler added errata NOP
   473  003EF6  C069  F05C         	movff	main@oper_2,operar@oper_1
   474  003EFA  C068  F05D         	movff	main@oper_1,operar@oper_2
   475  003EFE  5067               	movf	main@oper^0,w,c
   476  003F00  ECBA  F01E         	call	_operar
   477  003F04  6E61               	movwf	??_main^0,c
   478  003F06  5061               	movf	??_main^0,w,c
   479  003F08  6E62               	movwf	_main$149^0,c
   480  003F0A  6A63               	clrf	(_main$149+1)^0,c
   481  003F0C                     l1408:
   482  003F0C  FFFF               	dw	65535	; assembler added errata NOP
   483  003F0E  C062  F066         	movff	_main$149,main@resultado
   484  003F12                     
   485                           ;main.c: 75: char x = 0;
   486  003F12  0E00               	movlw	0
   487  003F14  6E65               	movwf	main@x^0,c
   488  003F16                     
   489                           ;main.c: 76: if (oper_1 < oper_2) {
   490  003F16  5069               	movf	main@oper_2^0,w,c
   491  003F18  5C68               	subwf	main@oper_1^0,w,c
   492  003F1A  B0D8               	btfsc	status,0,c
   493  003F1C  EF92  F01F         	goto	u301
   494  003F20  EF95  F01F         	goto	u300
   495  003F24                     u301:
   496  003F24  FFFF               	dw	65535	; assembler added errata NOP
   497  003F26  EFA1  F01F         	goto	l1418
   498  003F2A                     u300:
   499  003F2A  FFFF               	dw	65535	; assembler added errata NOP
   500  003F2C                     
   501                           ;main.c: 77: visualizar('s', 1, x, 1);
   502  003F2C  0E01               	movlw	1
   503  003F2E  6E56               	movwf	visualizar@position^0,c
   504  003F30  0E00               	movlw	0
   505  003F32  6E57               	movwf	visualizar@from^0,c
   506  003F34  0E01               	movlw	1
   507  003F36  6E58               	movwf	visualizar@enable^0,c
   508  003F38  0E73               	movlw	115
   509  003F3A  EC4E  F01E         	call	_visualizar
   510  003F3E                     
   511                           ;main.c: 78: x += 3;
   512  003F3E  0E03               	movlw	3
   513  003F40  2665               	addwf	main@x^0,f,c
   514  003F42                     l1418:
   515  003F42  FFFF               	dw	65535	; assembler added errata NOP
   516                           
   517                           ;main.c: 79: };main.c: 81: visualizar('n', resultado, x, 1);
   518  003F44  C066  F056         	movff	main@resultado,visualizar@position
   519  003F48  C065  F057         	movff	main@x,visualizar@from
   520  003F4C  0E01               	movlw	1
   521  003F4E  6E58               	movwf	visualizar@enable^0,c
   522  003F50  0E6E               	movlw	110
   523  003F52  EC4E  F01E         	call	_visualizar
   524                           
   525                           ;main.c: 82: break;
   526  003F56  EFF0  F01F         	goto	l1434
   527  003F5A                     l1420:
   528  003F5A  FFFF               	dw	65535	; assembler added errata NOP
   529                           
   530                           ;main.c: 84: if (oper_2 == 0) {
   531  003F5C  5069               	movf	main@oper_2^0,w,c
   532  003F5E  A4D8               	btfss	status,2,c
   533  003F60  EFB4  F01F         	goto	u311
   534  003F64  EFB7  F01F         	goto	u310
   535  003F68                     u311:
   536  003F68  FFFF               	dw	65535	; assembler added errata NOP
   537  003F6A  EFBC  F01F         	goto	l1424
   538  003F6E                     u310:
   539  003F6E  FFFF               	dw	65535	; assembler added errata NOP
   540  003F70                     
   541                           ;main.c: 85: show_error_message();
   542  003F70  ECE4  F01D         	call	_show_error_message	;wreg free
   543                           
   544                           ;main.c: 86: } else {
   545  003F74  EFF0  F01F         	goto	l1434
   546  003F78                     l1424:
   547  003F78  FFFF               	dw	65535	; assembler added errata NOP
   548                           
   549                           ;main.c: 87: resultado = operar(oper, oper_1, oper_2);
   550  003F7A  C068  F05C         	movff	main@oper_1,operar@oper_1
   551  003F7E  C069  F05D         	movff	main@oper_2,operar@oper_2
   552  003F82  5067               	movf	main@oper^0,w,c
   553  003F84  ECBA  F01E         	call	_operar
   554  003F88  6E66               	movwf	main@resultado^0,c
   555  003F8A                     
   556                           ;main.c: 88: visualizar('n', resultado, 0, 1);
   557  003F8A  C066  F056         	movff	main@resultado,visualizar@position
   558  003F8E  0E00               	movlw	0
   559  003F90  6E57               	movwf	visualizar@from^0,c
   560  003F92  0E01               	movlw	1
   561  003F94  6E58               	movwf	visualizar@enable^0,c
   562  003F96  0E6E               	movlw	110
   563  003F98  EC4E  F01E         	call	_visualizar
   564  003F9C  EFF0  F01F         	goto	l1434
   565  003FA0                     l1428:
   566  003FA0  FFFF               	dw	65535	; assembler added errata NOP
   567                           
   568                           ;main.c: 92: resultado = operar(oper, oper_1, oper_2);
   569  003FA2  C068  F05C         	movff	main@oper_1,operar@oper_1
   570  003FA6  C069  F05D         	movff	main@oper_2,operar@oper_2
   571  003FAA  5067               	movf	main@oper^0,w,c
   572  003FAC  ECBA  F01E         	call	_operar
   573  003FB0  6E66               	movwf	main@resultado^0,c
   574  003FB2                     
   575                           ;main.c: 93: visualizar('n', resultado, 0, 1);
   576  003FB2  C066  F056         	movff	main@resultado,visualizar@position
   577  003FB6  0E00               	movlw	0
   578  003FB8  6E57               	movwf	visualizar@from^0,c
   579  003FBA  0E01               	movlw	1
   580  003FBC  6E58               	movwf	visualizar@enable^0,c
   581  003FBE  0E6E               	movlw	110
   582  003FC0  EC4E  F01E         	call	_visualizar
   583                           
   584                           ;main.c: 94: }
   585  003FC4  EFF0  F01F         	goto	l1434
   586  003FC8                     l1432:
   587  003FC8  FFFF               	dw	65535	; assembler added errata NOP
   588  003FCA  5067               	movf	main@oper^0,w,c
   589                           
   590                           ; Switch size 1, requested type "simple"
   591                           ; Number of cases is 2, Range of values is 1 to 3
   592                           ; switch strategies available:
   593                           ; Name         Instructions Cycles
   594                           ; simple_byte            7     4 (average)
   595                           ;	Chosen strategy is simple_byte
   596  003FCC  0A01               	xorlw	1	; case 1
   597  003FCE  B4D8               	btfsc	status,2,c
   598  003FD0  EF61  F01F         	goto	l1402
   599  003FD4  0A02               	xorlw	2	; case 3
   600  003FD6  B4D8               	btfsc	status,2,c
   601  003FD8  EFAD  F01F         	goto	l1420
   602  003FDC  EFD0  F01F         	goto	l1428
   603  003FE0                     l1434:
   604  003FE0  FFFF               	dw	65535	; assembler added errata NOP
   605  003FE2  2A64               	incf	main@i^0,f,c
   606  003FE4  0EC7               	movlw	199
   607  003FE6  6464               	cpfsgt	main@i^0,c
   608  003FE8  EFF8  F01F         	goto	u321
   609  003FEC  EFFB  F01F         	goto	u320
   610  003FF0                     u321:
   611  003FF0  FFFF               	dw	65535	; assembler added errata NOP
   612  003FF2  EFE4  F01F         	goto	l1432
   613  003FF6                     u320:
   614  003FF6  FFFF               	dw	65535	; assembler added errata NOP
   615  003FF8  EF53  F01F         	goto	l1390
   616  003FFC  EF01  F000         	goto	start
   617  004000                     __end_of_main:
   618                           	opt callstack 0
   619                           
   620 ;; *************** function _show_error_message *****************
   621 ;; Defined at:
   622 ;;		line 153 in file "main.c"
   623 ;; Parameters:    Size  Location     Type
   624 ;;		None
   625 ;; Auto vars:     Size  Location     Type
   626 ;;		None
   627 ;; Return value:  Size  Location     Type
   628 ;;                  1    wreg      void 
   629 ;; Registers used:
   630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   631 ;; Tracked objects:
   632 ;;		On entry : 0/0
   633 ;;		On exit  : 0/0
   634 ;;		Unchanged: 0/0
   635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   636 ;;      Params:         0       0       0       0       0       0       0
   637 ;;      Locals:         0       0       0       0       0       0       0
   638 ;;      Temps:          1       0       0       0       0       0       0
   639 ;;      Totals:         1       0       0       0       0       0       0
   640 ;;Total ram usage:        1 bytes
   641 ;; Hardware stack levels used:    1
   642 ;; Hardware stack levels required when called:    2
   643 ;; This function calls:
   644 ;;		_visualizar
   645 ;; This function is called by:
   646 ;;		_main
   647 ;; This function uses a non-reentrant model
   648 ;;
   649                           
   650                           	psect	text1
   651  003BC8                     __ptext1:
   652                           	opt callstack 0
   653  003BC8                     _show_error_message:
   654                           	opt callstack 0
   655  003BC8  FFFF               	dw	65535	; assembler added errata NOP
   656  003BCA                     
   657                           ;main.c: 154: visualizar('n', 14, 0, 1);
   658  003BCA  0E0E               	movlw	14
   659  003BCC  6E56               	movwf	visualizar@position^0,c
   660  003BCE  0E00               	movlw	0
   661  003BD0  6E57               	movwf	visualizar@from^0,c
   662  003BD2  0E01               	movlw	1
   663  003BD4  6E58               	movwf	visualizar@enable^0,c
   664  003BD6  0E6E               	movlw	110
   665  003BD8  EC4E  F01E         	call	_visualizar
   666                           
   667                           ;main.c: 155: visualizar('s', 11, 4, 1);
   668  003BDC  0E0B               	movlw	11
   669  003BDE  6E56               	movwf	visualizar@position^0,c
   670  003BE0  0E04               	movlw	4
   671  003BE2  6E57               	movwf	visualizar@from^0,c
   672  003BE4  0E01               	movlw	1
   673  003BE6  6E58               	movwf	visualizar@enable^0,c
   674  003BE8  0E73               	movlw	115
   675  003BEA  EC4E  F01E         	call	_visualizar
   676                           
   677                           ;main.c: 156: visualizar('n', 14, 0, 2);
   678  003BEE  0E0E               	movlw	14
   679  003BF0  6E56               	movwf	visualizar@position^0,c
   680  003BF2  0E00               	movlw	0
   681  003BF4  6E57               	movwf	visualizar@from^0,c
   682  003BF6  0E02               	movlw	2
   683  003BF8  6E58               	movwf	visualizar@enable^0,c
   684  003BFA  0E6E               	movlw	110
   685  003BFC  EC4E  F01E         	call	_visualizar
   686                           
   687                           ;main.c: 157: visualizar('s', 11, 4, 2);
   688  003C00  0E0B               	movlw	11
   689  003C02  6E56               	movwf	visualizar@position^0,c
   690  003C04  0E04               	movlw	4
   691  003C06  6E57               	movwf	visualizar@from^0,c
   692  003C08  0E02               	movlw	2
   693  003C0A  6E58               	movwf	visualizar@enable^0,c
   694  003C0C  0E73               	movlw	115
   695  003C0E  EC4E  F01E         	call	_visualizar
   696  003C12                     
   697                           ;main.c: 158: _delay((unsigned long)((5)*(4000000/4000.0)));
   698  003C12  0E05               	movlw	5
   699  003C14  6E60               	movwf	??_show_error_message^0,c
   700  003C16  0EDF               	movlw	223
   701  003C18                     u337:
   702  003C18  FFFF               	dw	65535	; errata NOP
   703  003C1A  2EE8               	decfsz	wreg,f,c
   704  003C1C  D7FD               	bra	u337
   705  003C1E  2E60               	decfsz	??_show_error_message^0,f,c
   706  003C20  D7FB               	bra	u337
   707  003C22  0012               	return		;funcret
   708  003C24  FFFF               	dw	65535	; errata NOP
   709  003C26                     __end_of_show_error_message:
   710                           	opt callstack 0
   711                           
   712 ;; *************** function _visualizar *****************
   713 ;; Defined at:
   714 ;;		line 130 in file "main.c"
   715 ;; Parameters:    Size  Location     Type
   716 ;;  SoN             1    wreg     unsigned char 
   717 ;;  position        1    1[COMRAM] unsigned char 
   718 ;;  from            1    2[COMRAM] unsigned char 
   719 ;;  enable          1    3[COMRAM] unsigned char 
   720 ;; Auto vars:     Size  Location     Type
   721 ;;  SoN             1    7[COMRAM] unsigned char 
   722 ;;  x               1   10[COMRAM] unsigned char 
   723 ;; Return value:  Size  Location     Type
   724 ;;                  1    wreg      void 
   725 ;; Registers used:
   726 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   727 ;; Tracked objects:
   728 ;;		On entry : 0/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   732 ;;      Params:         3       0       0       0       0       0       0
   733 ;;      Locals:         4       0       0       0       0       0       0
   734 ;;      Temps:          3       0       0       0       0       0       0
   735 ;;      Totals:        10       0       0       0       0       0       0
   736 ;;Total ram usage:       10 bytes
   737 ;; Hardware stack levels used:    1
   738 ;; Hardware stack levels required when called:    1
   739 ;; This function calls:
   740 ;;		_tolower
   741 ;; This function is called by:
   742 ;;		_main
   743 ;;		_show_error_message
   744 ;;		_see_full_operation
   745 ;; This function uses a non-reentrant model
   746 ;;
   747                           
   748                           	psect	text2
   749  003C9C                     __ptext2:
   750                           	opt callstack 0
   751  003C9C                     _visualizar:
   752                           	opt callstack 0
   753  003C9C  FFFF               	dw	65535	; assembler added errata NOP
   754                           
   755                           ;incstack = 0
   756                           ;visualizar@SoN stored from wreg
   757  003C9E  6E5C               	movwf	visualizar@SoN^0,c
   758  003CA0                     
   759                           ;main.c: 131: for (char x = 0; x < 3; x++) {
   760  003CA0  0E00               	movlw	0
   761  003CA2  6E5F               	movwf	visualizar@x^0,c
   762  003CA4                     l1244:
   763  003CA4  FFFF               	dw	65535	; assembler added errata NOP
   764                           
   765                           ;main.c: 132: if (enable == 1) {
   766  003CA6  0458               	decf	visualizar@enable^0,w,c
   767  003CA8  A4D8               	btfss	status,2,c
   768  003CAA  EF59  F01E         	goto	u231
   769  003CAE  EF5C  F01E         	goto	u230
   770  003CB2                     u231:
   771  003CB2  FFFF               	dw	65535	; assembler added errata NOP
   772  003CB4  EF61  F01E         	goto	l102
   773  003CB8                     u230:
   774  003CB8  FFFF               	dw	65535	; assembler added errata NOP
   775  003CBA                     
   776                           ;main.c: 133: LA3 = 1;
   777  003CBA  8689               	bsf	3977,3,c	;volatile
   778                           
   779                           ;main.c: 134: LA5 = 0;
   780  003CBC  9A89               	bcf	3977,5,c	;volatile
   781                           
   782                           ;main.c: 135: } else {
   783  003CBE  EF64  F01E         	goto	l1248
   784  003CC2                     l102:
   785  003CC2  FFFF               	dw	65535	; assembler added errata NOP
   786                           
   787                           ;main.c: 136: LA3 = 0;
   788  003CC4  9689               	bcf	3977,3,c	;volatile
   789                           
   790                           ;main.c: 137: LA5 = 1;
   791  003CC6  8A89               	bsf	3977,5,c	;volatile
   792  003CC8                     l1248:
   793  003CC8  FFFF               	dw	65535	; assembler added errata NOP
   794                           
   795                           ;main.c: 138: };main.c: 139: LATD = tolower(SoN) == 's' ? SIMBOLO[position][x] : NUMERO[
      +                          position][x];
   796  003CCA  505C               	movf	visualizar@SoN^0,w,c
   797  003CCC  EC5D  F01D         	call	_tolower
   798  003CD0  0A73               	xorlw	115
   799  003CD2  B4D8               	btfsc	status,2,c
   800  003CD4  EF6E  F01E         	goto	u241
   801  003CD8  EF71  F01E         	goto	u240
   802  003CDC                     u241:
   803  003CDC  FFFF               	dw	65535	; assembler added errata NOP
   804  003CDE  EF89  F01E         	goto	l1252
   805  003CE2                     u240:
   806  003CE2  FFFF               	dw	65535	; assembler added errata NOP
   807  003CE4  5056               	movf	visualizar@position^0,w,c
   808  003CE6  0D03               	mullw	3
   809  003CE8  0E01               	movlw	low _NUMERO
   810  003CEA  6E59               	movwf	??_visualizar^0,c
   811  003CEC  0E00               	movlw	high _NUMERO
   812  003CEE  6E5A               	movwf	(??_visualizar+1)^0,c
   813  003CF0  50F3               	movf	243,w,c
   814  003CF2  2659               	addwf	??_visualizar^0,f,c
   815  003CF4  50F4               	movf	244,w,c
   816  003CF6  225A               	addwfc	(??_visualizar+1)^0,f,c
   817  003CF8  505F               	movf	visualizar@x^0,w,c
   818  003CFA  2459               	addwf	??_visualizar^0,w,c
   819  003CFC  6ED9               	movwf	fsr2l,c
   820  003CFE  0E00               	movlw	0
   821  003D00  205A               	addwfc	(??_visualizar+1)^0,w,c
   822  003D02  6EDA               	movwf	fsr2h,c
   823  003D04  50DF               	movf	indf2,w,c
   824  003D06  6E5B               	movwf	(??_visualizar+2)^0,c
   825  003D08  505B               	movf	(??_visualizar+2)^0,w,c
   826  003D0A  6E5D               	movwf	_visualizar$158^0,c
   827  003D0C  6A5E               	clrf	(_visualizar$158+1)^0,c
   828  003D0E  EF9F  F01E         	goto	l1254
   829  003D12                     l1252:
   830  003D12  FFFF               	dw	65535	; assembler added errata NOP
   831  003D14  5056               	movf	visualizar@position^0,w,c
   832  003D16  0D03               	mullw	3
   833  003D18  0E31               	movlw	low _SIMBOLO
   834  003D1A  6E59               	movwf	??_visualizar^0,c
   835  003D1C  0E00               	movlw	high _SIMBOLO
   836  003D1E  6E5A               	movwf	(??_visualizar+1)^0,c
   837  003D20  50F3               	movf	243,w,c
   838  003D22  2659               	addwf	??_visualizar^0,f,c
   839  003D24  50F4               	movf	244,w,c
   840  003D26  225A               	addwfc	(??_visualizar+1)^0,f,c
   841  003D28  505F               	movf	visualizar@x^0,w,c
   842  003D2A  2459               	addwf	??_visualizar^0,w,c
   843  003D2C  6ED9               	movwf	fsr2l,c
   844  003D2E  0E00               	movlw	0
   845  003D30  205A               	addwfc	(??_visualizar+1)^0,w,c
   846  003D32  6EDA               	movwf	fsr2h,c
   847  003D34  50DF               	movf	indf2,w,c
   848  003D36  6E5B               	movwf	(??_visualizar+2)^0,c
   849  003D38  505B               	movf	(??_visualizar+2)^0,w,c
   850  003D3A  6E5D               	movwf	_visualizar$158^0,c
   851  003D3C  6A5E               	clrf	(_visualizar$158+1)^0,c
   852  003D3E                     l1254:
   853  003D3E  FFFF               	dw	65535	; assembler added errata NOP
   854  003D40  C05D  FF8C         	movff	_visualizar$158,3980	;volatile
   855  003D44                     
   856                           ;main.c: 140: LATE = x + from;
   857  003D44  505F               	movf	visualizar@x^0,w,c
   858  003D46  2457               	addwf	visualizar@from^0,w,c
   859  003D48  6E8D               	movwf	141,c	;volatile
   860  003D4A                     
   861                           ;main.c: 141: _delay((unsigned long)((5)*(4000000/4000.0)));
   862  003D4A  0E05               	movlw	5
   863  003D4C  6E59               	movwf	??_visualizar^0,c
   864  003D4E  0EDF               	movlw	223
   865  003D50                     u347:
   866  003D50  FFFF               	dw	65535	; errata NOP
   867  003D52  2EE8               	decfsz	wreg,f,c
   868  003D54  D7FD               	bra	u347
   869  003D56  2E59               	decfsz	??_visualizar^0,f,c
   870  003D58  D7FB               	bra	u347
   871  003D5A  2A5F               	incf	visualizar@x^0,f,c
   872  003D5C  0E02               	movlw	2
   873  003D5E  645F               	cpfsgt	visualizar@x^0,c
   874  003D60  EFB4  F01E         	goto	u251
   875  003D64  EFB7  F01E         	goto	u250
   876  003D68                     u251:
   877  003D68  FFFF               	dw	65535	; assembler added errata NOP
   878  003D6A  EF52  F01E         	goto	l1244
   879  003D6E                     u250:
   880  003D6E  FFFF               	dw	65535	; assembler added errata NOP
   881  003D70  0012               	return		;funcret
   882  003D72  FFFF               	dw	65535	; errata NOP
   883  003D74                     __end_of_visualizar:
   884                           	opt callstack 0
   885                           
   886 ;; *************** function _tolower *****************
   887 ;; Defined at:
   888 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\tolower.c"
   889 ;; Parameters:    Size  Location     Type
   890 ;;  c               1    wreg     unsigned char 
   891 ;; Auto vars:     Size  Location     Type
   892 ;;  c               1    0[COMRAM] unsigned char 
   893 ;; Return value:  Size  Location     Type
   894 ;;                  1    wreg      unsigned char 
   895 ;; Registers used:
   896 ;;		wreg, status,2, status,0
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   902 ;;      Params:         0       0       0       0       0       0       0
   903 ;;      Locals:         1       0       0       0       0       0       0
   904 ;;      Temps:          0       0       0       0       0       0       0
   905 ;;      Totals:         1       0       0       0       0       0       0
   906 ;;Total ram usage:        1 bytes
   907 ;; Hardware stack levels used:    1
   908 ;; This function calls:
   909 ;;		Nothing
   910 ;; This function is called by:
   911 ;;		_visualizar
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915                           	psect	text3
   916  003ABA                     __ptext3:
   917                           	opt callstack 0
   918  003ABA                     _tolower:
   919                           	opt callstack 0
   920  003ABA  FFFF               	dw	65535	; assembler added errata NOP
   921                           
   922                           ;incstack = 0
   923                           ;tolower@c stored from wreg
   924  003ABC  6E55               	movwf	tolower@c^0,c
   925  003ABE  0E5B               	movlw	91
   926  003AC0  6055               	cpfslt	tolower@c^0,c
   927  003AC2  EF65  F01D         	goto	u181
   928  003AC6  EF68  F01D         	goto	u180
   929  003ACA                     u181:
   930  003ACA  FFFF               	dw	65535	; assembler added errata NOP
   931  003ACC  EF74  F01D         	goto	l1200
   932  003AD0                     u180:
   933  003AD0  FFFF               	dw	65535	; assembler added errata NOP
   934  003AD2  0E40               	movlw	64
   935  003AD4  6455               	cpfsgt	tolower@c^0,c
   936  003AD6  EF6F  F01D         	goto	u191
   937  003ADA  EF72  F01D         	goto	u190
   938  003ADE                     u191:
   939  003ADE  FFFF               	dw	65535	; assembler added errata NOP
   940  003AE0  EF74  F01D         	goto	l1200
   941  003AE4                     u190:
   942  003AE4  FFFF               	dw	65535	; assembler added errata NOP
   943  003AE6  8A55               	bsf	tolower@c^0,5,c
   944  003AE8                     l1200:
   945  003AE8  FFFF               	dw	65535	; assembler added errata NOP
   946  003AEA  5055               	movf	tolower@c^0,w,c
   947  003AEC  0012               	return		;funcret
   948  003AEE  FFFF               	dw	65535	; errata NOP
   949  003AF0                     __end_of_tolower:
   950                           	opt callstack 0
   951                           
   952 ;; *************** function _operar *****************
   953 ;; Defined at:
   954 ;;		line 161 in file "main.c"
   955 ;; Parameters:    Size  Location     Type
   956 ;;  oper            1    wreg     unsigned char 
   957 ;;  oper_1          1    7[COMRAM] unsigned char 
   958 ;;  oper_2          1    8[COMRAM] unsigned char 
   959 ;; Auto vars:     Size  Location     Type
   960 ;;  oper            1    9[COMRAM] unsigned char 
   961 ;; Return value:  Size  Location     Type
   962 ;;                  1    wreg      unsigned char 
   963 ;; Registers used:
   964 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   970 ;;      Params:         2       0       0       0       0       0       0
   971 ;;      Locals:         1       0       0       0       0       0       0
   972 ;;      Temps:          0       0       0       0       0       0       0
   973 ;;      Totals:         3       0       0       0       0       0       0
   974 ;;Total ram usage:        3 bytes
   975 ;; Hardware stack levels used:    1
   976 ;; Hardware stack levels required when called:    3
   977 ;; This function calls:
   978 ;;		_and
   979 ;;		_division
   980 ;;		_module
   981 ;;		_multi
   982 ;;		_nand
   983 ;;		_no_es_primo
   984 ;;		_or
   985 ;;		_resta
   986 ;;		_suma
   987 ;;		_xor
   988 ;; This function is called by:
   989 ;;		_main
   990 ;; This function uses a non-reentrant model
   991 ;;
   992                           
   993                           	psect	text4
   994  003D74                     __ptext4:
   995                           	opt callstack 0
   996  003D74                     _operar:
   997                           	opt callstack 0
   998  003D74  FFFF               	dw	65535	; assembler added errata NOP
   999                           
  1000                           ;incstack = 0
  1001                           ;operar@oper stored from wreg
  1002  003D76  6E5E               	movwf	operar@oper^0,c
  1003  003D78                     
  1004                           ;main.c: 162: switch (oper) {
  1005  003D78  EF1D  F01F         	goto	l1382
  1006  003D7C                     l1314:
  1007  003D7C  FFFF               	dw	65535	; assembler added errata NOP
  1008                           
  1009                           ;main.c: 164: return suma(oper_1, oper_2);
  1010  003D7E  C05D  F055         	movff	operar@oper_2,suma@oper_2
  1011  003D82  505C               	movf	operar@oper_1^0,w,c
  1012  003D84  ECFE  F01C         	call	_suma
  1013  003D88  EF4D  F01F         	goto	l119
  1014  003D8C                     l1320:
  1015  003D8C  FFFF               	dw	65535	; assembler added errata NOP
  1016                           
  1017                           ;main.c: 167: return resta(oper_1, oper_2);
  1018  003D8E  C05D  F055         	movff	operar@oper_2,resta@oper_2
  1019  003D92  505C               	movf	operar@oper_1^0,w,c
  1020  003D94  ECF8  F01C         	call	_resta
  1021  003D98  EF4D  F01F         	goto	l119
  1022  003D9C                     l1326:
  1023  003D9C  FFFF               	dw	65535	; assembler added errata NOP
  1024                           
  1025                           ;main.c: 170: return multi(oper_1, oper_2);
  1026  003D9E  C05D  F055         	movff	operar@oper_2,multi@oper_2
  1027  003DA2  505C               	movf	operar@oper_1^0,w,c
  1028  003DA4  EC0A  F01D         	call	_multi
  1029  003DA8  EF4D  F01F         	goto	l119
  1030  003DAC                     l1332:
  1031  003DAC  FFFF               	dw	65535	; assembler added errata NOP
  1032                           
  1033                           ;main.c: 173: return division(oper_1, oper_2);
  1034  003DAE  C05D  F059         	movff	operar@oper_2,division@oper_2
  1035  003DB2  505C               	movf	operar@oper_1^0,w,c
  1036  003DB4  EC24  F01D         	call	_division
  1037  003DB8  EF4D  F01F         	goto	l119
  1038  003DBC                     l1338:
  1039  003DBC  FFFF               	dw	65535	; assembler added errata NOP
  1040                           
  1041                           ;main.c: 176: return module(oper_1, oper_2);
  1042  003DBE  C05D  F059         	movff	operar@oper_2,module@oper_2
  1043  003DC2  505C               	movf	operar@oper_1^0,w,c
  1044  003DC4  EC11  F01D         	call	_module
  1045  003DC8  EF4D  F01F         	goto	l119
  1046  003DCC                     l1344:
  1047  003DCC  FFFF               	dw	65535	; assembler added errata NOP
  1048                           
  1049                           ;main.c: 179: return and(oper_1, oper_2);
  1050  003DCE  C05D  F055         	movff	operar@oper_2,and@oper_2
  1051  003DD2  505C               	movf	operar@oper_1^0,w,c
  1052  003DD4  ECEC  F01C         	call	_and
  1053  003DD8  EF4D  F01F         	goto	l119
  1054  003DDC                     l1350:
  1055  003DDC  FFFF               	dw	65535	; assembler added errata NOP
  1056                           
  1057                           ;main.c: 182: return or(oper_1, oper_2);
  1058  003DDE  C05D  F055         	movff	operar@oper_2,or@oper_2
  1059  003DE2  505C               	movf	operar@oper_1^0,w,c
  1060  003DE4  ECF2  F01C         	call	_or
  1061  003DE8  EF4D  F01F         	goto	l119
  1062  003DEC                     l1356:
  1063  003DEC  FFFF               	dw	65535	; assembler added errata NOP
  1064                           
  1065                           ;main.c: 185: return nand(oper_1, oper_2);
  1066  003DEE  C05D  F057         	movff	operar@oper_2,nand@oper_2
  1067  003DF2  505C               	movf	operar@oper_1^0,w,c
  1068  003DF4  EC1A  F01D         	call	_nand
  1069  003DF8  EF4D  F01F         	goto	l119
  1070  003DFC                     l1362:
  1071  003DFC  FFFF               	dw	65535	; assembler added errata NOP
  1072                           
  1073                           ;main.c: 188: return xor(oper_1, oper_2);
  1074  003DFE  C05D  F055         	movff	operar@oper_2,xor@oper_2
  1075  003E02  505C               	movf	operar@oper_1^0,w,c
  1076  003E04  EC04  F01D         	call	_xor
  1077  003E08  EF4D  F01F         	goto	l119
  1078  003E0C                     l1368:
  1079  003E0C  FFFF               	dw	65535	; assembler added errata NOP
  1080                           
  1081                           ;main.c: 191: return no_es_primo(oper_1);
  1082  003E0E  505C               	movf	operar@oper_1^0,w,c
  1083  003E10  EC44  F01D         	call	_no_es_primo
  1084  003E14  EF4D  F01F         	goto	l119
  1085  003E18                     l1374:
  1086  003E18  FFFF               	dw	65535	; assembler added errata NOP
  1087                           
  1088                           ;main.c: 194: return oper_1 == 2;
  1089  003E1A  0E02               	movlw	2
  1090  003E1C  185C               	xorwf	operar@oper_1^0,w,c
  1091  003E1E  B4D8               	btfsc	status,2,c
  1092  003E20  EF14  F01F         	goto	u271
  1093  003E24  EF18  F01F         	goto	u270
  1094  003E28                     u271:
  1095  003E28  FFFF               	dw	65535	; assembler added errata NOP
  1096  003E2A  0E01               	movlw	1
  1097  003E2C  EF1A  F01F         	goto	u280
  1098  003E30                     u270:
  1099  003E30  FFFF               	dw	65535	; assembler added errata NOP
  1100  003E32  0E00               	movlw	0
  1101  003E34                     u280:
  1102  003E34  FFFF               	dw	65535	; assembler added errata NOP
  1103  003E36  EF4D  F01F         	goto	l119
  1104  003E3A                     l1382:
  1105  003E3A  FFFF               	dw	65535	; assembler added errata NOP
  1106  003E3C  505E               	movf	operar@oper^0,w,c
  1107                           
  1108                           ; Switch size 1, requested type "simple"
  1109                           ; Number of cases is 11, Range of values is 0 to 10
  1110                           ; switch strategies available:
  1111                           ; Name         Instructions Cycles
  1112                           ; simple_byte           34    18 (average)
  1113                           ;	Chosen strategy is simple_byte
  1114  003E3E  0A00               	xorlw	0	; case 0
  1115  003E40  B4D8               	btfsc	status,2,c
  1116  003E42  EFBE  F01E         	goto	l1314
  1117  003E46  0A01               	xorlw	1	; case 1
  1118  003E48  B4D8               	btfsc	status,2,c
  1119  003E4A  EFC6  F01E         	goto	l1320
  1120  003E4E  0A03               	xorlw	3	; case 2
  1121  003E50  B4D8               	btfsc	status,2,c
  1122  003E52  EFCE  F01E         	goto	l1326
  1123  003E56  0A01               	xorlw	1	; case 3
  1124  003E58  B4D8               	btfsc	status,2,c
  1125  003E5A  EFD6  F01E         	goto	l1332
  1126  003E5E  0A07               	xorlw	7	; case 4
  1127  003E60  B4D8               	btfsc	status,2,c
  1128  003E62  EFDE  F01E         	goto	l1338
  1129  003E66  0A01               	xorlw	1	; case 5
  1130  003E68  B4D8               	btfsc	status,2,c
  1131  003E6A  EFE6  F01E         	goto	l1344
  1132  003E6E  0A03               	xorlw	3	; case 6
  1133  003E70  B4D8               	btfsc	status,2,c
  1134  003E72  EFEE  F01E         	goto	l1350
  1135  003E76  0A01               	xorlw	1	; case 7
  1136  003E78  B4D8               	btfsc	status,2,c
  1137  003E7A  EFF6  F01E         	goto	l1356
  1138  003E7E  0A0F               	xorlw	15	; case 8
  1139  003E80  B4D8               	btfsc	status,2,c
  1140  003E82  EFFE  F01E         	goto	l1362
  1141  003E86  0A01               	xorlw	1	; case 9
  1142  003E88  B4D8               	btfsc	status,2,c
  1143  003E8A  EF06  F01F         	goto	l1368
  1144  003E8E  0A03               	xorlw	3	; case 10
  1145  003E90  B4D8               	btfsc	status,2,c
  1146  003E92  EF0C  F01F         	goto	l1374
  1147  003E96  EF4D  F01F         	goto	l119
  1148  003E9A                     l119:
  1149  003E9A  FFFF               	dw	65535	; assembler added errata NOP
  1150  003E9C  0012               	return		;funcret
  1151  003E9E  FFFF               	dw	65535	; errata NOP
  1152  003EA0                     __end_of_operar:
  1153                           	opt callstack 0
  1154                           
  1155 ;; *************** function _xor *****************
  1156 ;; Defined at:
  1157 ;;		line 234 in file "main.c"
  1158 ;; Parameters:    Size  Location     Type
  1159 ;;  oper_1          1    wreg     unsigned char 
  1160 ;;  oper_2          1    0[COMRAM] unsigned char 
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;  oper_1          1    1[COMRAM] unsigned char 
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  1    wreg      unsigned char 
  1165 ;; Registers used:
  1166 ;;		wreg, status,2, status,0
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1172 ;;      Params:         1       0       0       0       0       0       0
  1173 ;;      Locals:         1       0       0       0       0       0       0
  1174 ;;      Temps:          0       0       0       0       0       0       0
  1175 ;;      Totals:         2       0       0       0       0       0       0
  1176 ;;Total ram usage:        2 bytes
  1177 ;; Hardware stack levels used:    1
  1178 ;; This function calls:
  1179 ;;		Nothing
  1180 ;; This function is called by:
  1181 ;;		_operar
  1182 ;; This function uses a non-reentrant model
  1183 ;;
  1184                           
  1185                           	psect	text5
  1186  003A08                     __ptext5:
  1187                           	opt callstack 0
  1188  003A08                     _xor:
  1189                           	opt callstack 0
  1190  003A08  FFFF               	dw	65535	; assembler added errata NOP
  1191                           
  1192                           ;incstack = 0
  1193                           ;xor@oper_1 stored from wreg
  1194  003A0A  6E56               	movwf	xor@oper_1^0,c
  1195  003A0C                     
  1196                           ;main.c: 235: return oper_1 ^ oper_2;
  1197  003A0C  5056               	movf	xor@oper_1^0,w,c
  1198  003A0E  1855               	xorwf	xor@oper_2^0,w,c
  1199  003A10  0012               	return		;funcret
  1200  003A12  FFFF               	dw	65535	; errata NOP
  1201  003A14                     __end_of_xor:
  1202                           	opt callstack 0
  1203                           
  1204 ;; *************** function _suma *****************
  1205 ;; Defined at:
  1206 ;;		line 201 in file "main.c"
  1207 ;; Parameters:    Size  Location     Type
  1208 ;;  oper_1          1    wreg     unsigned char 
  1209 ;;  oper_2          1    0[COMRAM] unsigned char 
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;  oper_1          1    1[COMRAM] unsigned char 
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  1    wreg      unsigned char 
  1214 ;; Registers used:
  1215 ;;		wreg, status,2, status,0
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1221 ;;      Params:         1       0       0       0       0       0       0
  1222 ;;      Locals:         1       0       0       0       0       0       0
  1223 ;;      Temps:          0       0       0       0       0       0       0
  1224 ;;      Totals:         2       0       0       0       0       0       0
  1225 ;;Total ram usage:        2 bytes
  1226 ;; Hardware stack levels used:    1
  1227 ;; This function calls:
  1228 ;;		Nothing
  1229 ;; This function is called by:
  1230 ;;		_operar
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           	psect	text6
  1235  0039FC                     __ptext6:
  1236                           	opt callstack 0
  1237  0039FC                     _suma:
  1238                           	opt callstack 0
  1239  0039FC  FFFF               	dw	65535	; assembler added errata NOP
  1240                           
  1241                           ;incstack = 0
  1242                           ;suma@oper_1 stored from wreg
  1243  0039FE  6E56               	movwf	suma@oper_1^0,c
  1244  003A00                     
  1245                           ;main.c: 202: return oper_1 + oper_2;
  1246  003A00  5056               	movf	suma@oper_1^0,w,c
  1247  003A02  2455               	addwf	suma@oper_2^0,w,c
  1248  003A04  0012               	return		;funcret
  1249  003A06  FFFF               	dw	65535	; errata NOP
  1250  003A08                     __end_of_suma:
  1251                           	opt callstack 0
  1252                           
  1253 ;; *************** function _resta *****************
  1254 ;; Defined at:
  1255 ;;		line 205 in file "main.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;  oper_1          1    wreg     unsigned char 
  1258 ;;  oper_2          1    0[COMRAM] unsigned char 
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;  oper_1          1    1[COMRAM] unsigned char 
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  1    wreg      unsigned char 
  1263 ;; Registers used:
  1264 ;;		wreg, status,2, status,0
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1270 ;;      Params:         1       0       0       0       0       0       0
  1271 ;;      Locals:         1       0       0       0       0       0       0
  1272 ;;      Temps:          0       0       0       0       0       0       0
  1273 ;;      Totals:         2       0       0       0       0       0       0
  1274 ;;Total ram usage:        2 bytes
  1275 ;; Hardware stack levels used:    1
  1276 ;; This function calls:
  1277 ;;		Nothing
  1278 ;; This function is called by:
  1279 ;;		_operar
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           	psect	text7
  1284  0039F0                     __ptext7:
  1285                           	opt callstack 0
  1286  0039F0                     _resta:
  1287                           	opt callstack 0
  1288  0039F0  FFFF               	dw	65535	; assembler added errata NOP
  1289                           
  1290                           ;incstack = 0
  1291                           ;resta@oper_1 stored from wreg
  1292  0039F2  6E56               	movwf	resta@oper_1^0,c
  1293  0039F4                     
  1294                           ;main.c: 206: return oper_1 - oper_2;
  1295  0039F4  5055               	movf	resta@oper_2^0,w,c
  1296  0039F6  5C56               	subwf	resta@oper_1^0,w,c
  1297  0039F8  0012               	return		;funcret
  1298  0039FA  FFFF               	dw	65535	; errata NOP
  1299  0039FC                     __end_of_resta:
  1300                           	opt callstack 0
  1301                           
  1302 ;; *************** function _or *****************
  1303 ;; Defined at:
  1304 ;;		line 226 in file "main.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;  oper_1          1    wreg     unsigned char 
  1307 ;;  oper_2          1    0[COMRAM] unsigned char 
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;  oper_1          1    1[COMRAM] unsigned char 
  1310 ;; Return value:  Size  Location     Type
  1311 ;;                  1    wreg      unsigned char 
  1312 ;; Registers used:
  1313 ;;		wreg, status,2, status,0
  1314 ;; Tracked objects:
  1315 ;;		On entry : 0/0
  1316 ;;		On exit  : 0/0
  1317 ;;		Unchanged: 0/0
  1318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1319 ;;      Params:         1       0       0       0       0       0       0
  1320 ;;      Locals:         1       0       0       0       0       0       0
  1321 ;;      Temps:          0       0       0       0       0       0       0
  1322 ;;      Totals:         2       0       0       0       0       0       0
  1323 ;;Total ram usage:        2 bytes
  1324 ;; Hardware stack levels used:    1
  1325 ;; This function calls:
  1326 ;;		Nothing
  1327 ;; This function is called by:
  1328 ;;		_operar
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           	psect	text8
  1333  0039E4                     __ptext8:
  1334                           	opt callstack 0
  1335  0039E4                     _or:
  1336                           	opt callstack 0
  1337  0039E4  FFFF               	dw	65535	; assembler added errata NOP
  1338                           
  1339                           ;incstack = 0
  1340                           ;or@oper_1 stored from wreg
  1341  0039E6  6E56               	movwf	or@oper_1^0,c
  1342  0039E8                     
  1343                           ;main.c: 227: return oper_1 | oper_2;
  1344  0039E8  5056               	movf	or@oper_1^0,w,c
  1345  0039EA  1055               	iorwf	or@oper_2^0,w,c
  1346  0039EC  0012               	return		;funcret
  1347  0039EE  FFFF               	dw	65535	; errata NOP
  1348  0039F0                     __end_of_or:
  1349                           	opt callstack 0
  1350                           
  1351 ;; *************** function _no_es_primo *****************
  1352 ;; Defined at:
  1353 ;;		line 238 in file "main.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;  num             1    wreg     unsigned char 
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;  num             1    6[COMRAM] unsigned char 
  1358 ;; Return value:  Size  Location     Type
  1359 ;;                  1    wreg      unsigned char 
  1360 ;; Registers used:
  1361 ;;		wreg, status,2, status,0, cstack
  1362 ;; Tracked objects:
  1363 ;;		On entry : 0/0
  1364 ;;		On exit  : 0/0
  1365 ;;		Unchanged: 0/0
  1366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1367 ;;      Params:         0       0       0       0       0       0       0
  1368 ;;      Locals:         1       0       0       0       0       0       0
  1369 ;;      Temps:          0       0       0       0       0       0       0
  1370 ;;      Totals:         1       0       0       0       0       0       0
  1371 ;;Total ram usage:        1 bytes
  1372 ;; Hardware stack levels used:    1
  1373 ;; Hardware stack levels required when called:    2
  1374 ;; This function calls:
  1375 ;;		_module
  1376 ;; This function is called by:
  1377 ;;		_operar
  1378 ;; This function uses a non-reentrant model
  1379 ;;
  1380                           
  1381                           	psect	text9
  1382  003A88                     __ptext9:
  1383                           	opt callstack 0
  1384  003A88                     _no_es_primo:
  1385                           	opt callstack 0
  1386  003A88  FFFF               	dw	65535	; assembler added errata NOP
  1387                           
  1388                           ;incstack = 0
  1389                           ;no_es_primo@num stored from wreg
  1390  003A8A  6E5B               	movwf	no_es_primo@num^0,c
  1391  003A8C                     
  1392                           ;main.c: 239: if (!module(num, 2)) {
  1393  003A8C  0E02               	movlw	2
  1394  003A8E  6E59               	movwf	module@oper_2^0,c
  1395  003A90  505B               	movf	no_es_primo@num^0,w,c
  1396  003A92  EC11  F01D         	call	_module
  1397  003A96  0900               	iorlw	0
  1398  003A98  A4D8               	btfss	status,2,c
  1399  003A9A  EF51  F01D         	goto	u261
  1400  003A9E  EF54  F01D         	goto	u260
  1401  003AA2                     u261:
  1402  003AA2  FFFF               	dw	65535	; assembler added errata NOP
  1403  003AA4  EF58  F01D         	goto	l1300
  1404  003AA8                     u260:
  1405  003AA8  FFFF               	dw	65535	; assembler added errata NOP
  1406  003AAA                     
  1407                           ;main.c: 240: return 0;
  1408  003AAA  0E00               	movlw	0
  1409  003AAC  EF5A  F01D         	goto	l162
  1410  003AB0                     l1300:
  1411  003AB0  FFFF               	dw	65535	; assembler added errata NOP
  1412                           
  1413                           ;main.c: 241: };main.c: 242: return 1;
  1414  003AB2  0E01               	movlw	1
  1415  003AB4                     l162:
  1416  003AB4  FFFF               	dw	65535	; assembler added errata NOP
  1417  003AB6  0012               	return		;funcret
  1418  003AB8  FFFF               	dw	65535	; errata NOP
  1419  003ABA                     __end_of_no_es_primo:
  1420                           	opt callstack 0
  1421                           
  1422 ;; *************** function _module *****************
  1423 ;; Defined at:
  1424 ;;		line 218 in file "main.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;  oper_1          1    wreg     unsigned char 
  1427 ;;  oper_2          1    4[COMRAM] unsigned char 
  1428 ;; Auto vars:     Size  Location     Type
  1429 ;;  oper_1          1    5[COMRAM] unsigned char 
  1430 ;; Return value:  Size  Location     Type
  1431 ;;                  1    wreg      unsigned char 
  1432 ;; Registers used:
  1433 ;;		wreg, status,2, status,0, cstack
  1434 ;; Tracked objects:
  1435 ;;		On entry : 0/0
  1436 ;;		On exit  : 0/0
  1437 ;;		Unchanged: 0/0
  1438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1439 ;;      Params:         1       0       0       0       0       0       0
  1440 ;;      Locals:         1       0       0       0       0       0       0
  1441 ;;      Temps:          0       0       0       0       0       0       0
  1442 ;;      Totals:         2       0       0       0       0       0       0
  1443 ;;Total ram usage:        2 bytes
  1444 ;; Hardware stack levels used:    1
  1445 ;; Hardware stack levels required when called:    1
  1446 ;; This function calls:
  1447 ;;		___lbmod
  1448 ;; This function is called by:
  1449 ;;		_operar
  1450 ;;		_no_es_primo
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454                           	psect	text10
  1455  003A22                     __ptext10:
  1456                           	opt callstack 0
  1457  003A22                     _module:
  1458                           	opt callstack 0
  1459  003A22  FFFF               	dw	65535	; assembler added errata NOP
  1460                           
  1461                           ;incstack = 0
  1462                           ;module@oper_1 stored from wreg
  1463  003A24  6E5A               	movwf	module@oper_1^0,c
  1464  003A26                     
  1465                           ;main.c: 219: return oper_1 % oper_2;
  1466  003A26  C059  F055         	movff	module@oper_2,___lbmod@divisor
  1467  003A2A  505A               	movf	module@oper_1^0,w,c
  1468  003A2C  EC99  F01D         	call	___lbmod
  1469  003A30  0012               	return		;funcret
  1470  003A32  FFFF               	dw	65535	; errata NOP
  1471  003A34                     __end_of_module:
  1472                           	opt callstack 0
  1473                           
  1474 ;; *************** function ___lbmod *****************
  1475 ;; Defined at:
  1476 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lbmod.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;  dividend        1    wreg     unsigned char 
  1479 ;;  divisor         1    0[COMRAM] unsigned char 
  1480 ;; Auto vars:     Size  Location     Type
  1481 ;;  dividend        1    1[COMRAM] unsigned char 
  1482 ;;  rem             1    3[COMRAM] unsigned char 
  1483 ;;  counter         1    2[COMRAM] unsigned char 
  1484 ;; Return value:  Size  Location     Type
  1485 ;;                  1    wreg      unsigned char 
  1486 ;; Registers used:
  1487 ;;		wreg, status,2, status,0
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1493 ;;      Params:         1       0       0       0       0       0       0
  1494 ;;      Locals:         3       0       0       0       0       0       0
  1495 ;;      Temps:          0       0       0       0       0       0       0
  1496 ;;      Totals:         4       0       0       0       0       0       0
  1497 ;;Total ram usage:        4 bytes
  1498 ;; Hardware stack levels used:    1
  1499 ;; This function calls:
  1500 ;;		Nothing
  1501 ;; This function is called by:
  1502 ;;		_module
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           	psect	text11
  1507  003B32                     __ptext11:
  1508                           	opt callstack 0
  1509  003B32                     ___lbmod:
  1510                           	opt callstack 0
  1511  003B32  FFFF               	dw	65535	; assembler added errata NOP
  1512                           
  1513                           ;incstack = 0
  1514                           ;___lbmod@dividend stored from wreg
  1515  003B34  6E56               	movwf	___lbmod@dividend^0,c
  1516  003B36  0E08               	movlw	8
  1517  003B38  6E57               	movwf	___lbmod@counter^0,c
  1518  003B3A  0E00               	movlw	0
  1519  003B3C  6E58               	movwf	___lbmod@rem^0,c
  1520  003B3E                     l1180:
  1521  003B3E  FFFF               	dw	65535	; assembler added errata NOP
  1522  003B40  90D8               	bcf	status,0,c
  1523  003B42  3456               	rlcf	___lbmod@dividend^0,w,c
  1524  003B44  3458               	rlcf	___lbmod@rem^0,w,c
  1525  003B46  6E58               	movwf	___lbmod@rem^0,c
  1526  003B48  90D8               	bcf	status,0,c
  1527  003B4A  3656               	rlcf	___lbmod@dividend^0,f,c
  1528  003B4C  5055               	movf	___lbmod@divisor^0,w,c
  1529  003B4E  5C58               	subwf	___lbmod@rem^0,w,c
  1530  003B50  A0D8               	btfss	status,0,c
  1531  003B52  EFAD  F01D         	goto	u171
  1532  003B56  EFB0  F01D         	goto	u170
  1533  003B5A                     u171:
  1534  003B5A  FFFF               	dw	65535	; assembler added errata NOP
  1535  003B5C  EFB3  F01D         	goto	l1188
  1536  003B60                     u170:
  1537  003B60  FFFF               	dw	65535	; assembler added errata NOP
  1538  003B62  5055               	movf	___lbmod@divisor^0,w,c
  1539  003B64  5E58               	subwf	___lbmod@rem^0,f,c
  1540  003B66                     l1188:
  1541  003B66  FFFF               	dw	65535	; assembler added errata NOP
  1542  003B68  2E57               	decfsz	___lbmod@counter^0,f,c
  1543  003B6A  EF9F  F01D         	goto	l1180
  1544  003B6E  5058               	movf	___lbmod@rem^0,w,c
  1545  003B70  0012               	return		;funcret
  1546  003B72  FFFF               	dw	65535	; errata NOP
  1547  003B74                     __end_of___lbmod:
  1548                           	opt callstack 0
  1549                           
  1550 ;; *************** function _nand *****************
  1551 ;; Defined at:
  1552 ;;		line 230 in file "main.c"
  1553 ;; Parameters:    Size  Location     Type
  1554 ;;  oper_1          1    wreg     unsigned char 
  1555 ;;  oper_2          1    2[COMRAM] unsigned char 
  1556 ;; Auto vars:     Size  Location     Type
  1557 ;;  oper_1          1    3[COMRAM] unsigned char 
  1558 ;; Return value:  Size  Location     Type
  1559 ;;                  1    wreg      unsigned char 
  1560 ;; Registers used:
  1561 ;;		wreg, status,2, status,0, cstack
  1562 ;; Tracked objects:
  1563 ;;		On entry : 0/0
  1564 ;;		On exit  : 0/0
  1565 ;;		Unchanged: 0/0
  1566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1567 ;;      Params:         1       0       0       0       0       0       0
  1568 ;;      Locals:         1       0       0       0       0       0       0
  1569 ;;      Temps:          0       0       0       0       0       0       0
  1570 ;;      Totals:         2       0       0       0       0       0       0
  1571 ;;Total ram usage:        2 bytes
  1572 ;; Hardware stack levels used:    1
  1573 ;; Hardware stack levels required when called:    1
  1574 ;; This function calls:
  1575 ;;		_and
  1576 ;; This function is called by:
  1577 ;;		_operar
  1578 ;; This function uses a non-reentrant model
  1579 ;;
  1580                           
  1581                           	psect	text12
  1582  003A34                     __ptext12:
  1583                           	opt callstack 0
  1584  003A34                     _nand:
  1585                           	opt callstack 0
  1586  003A34  FFFF               	dw	65535	; assembler added errata NOP
  1587                           
  1588                           ;incstack = 0
  1589                           ;nand@oper_1 stored from wreg
  1590  003A36  6E58               	movwf	nand@oper_1^0,c
  1591  003A38                     
  1592                           ;main.c: 231: return ~(and(oper_1, oper_2));
  1593  003A38  C057  F055         	movff	nand@oper_2,and@oper_2
  1594  003A3C  5058               	movf	nand@oper_1^0,w,c
  1595  003A3E  ECEC  F01C         	call	_and
  1596  003A42  0AFF               	xorlw	255
  1597  003A44  0012               	return		;funcret
  1598  003A46  FFFF               	dw	65535	; errata NOP
  1599  003A48                     __end_of_nand:
  1600                           	opt callstack 0
  1601                           
  1602 ;; *************** function _and *****************
  1603 ;; Defined at:
  1604 ;;		line 222 in file "main.c"
  1605 ;; Parameters:    Size  Location     Type
  1606 ;;  oper_1          1    wreg     unsigned char 
  1607 ;;  oper_2          1    0[COMRAM] unsigned char 
  1608 ;; Auto vars:     Size  Location     Type
  1609 ;;  oper_1          1    1[COMRAM] unsigned char 
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  1    wreg      unsigned char 
  1612 ;; Registers used:
  1613 ;;		wreg, status,2, status,0
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1619 ;;      Params:         1       0       0       0       0       0       0
  1620 ;;      Locals:         1       0       0       0       0       0       0
  1621 ;;      Temps:          0       0       0       0       0       0       0
  1622 ;;      Totals:         2       0       0       0       0       0       0
  1623 ;;Total ram usage:        2 bytes
  1624 ;; Hardware stack levels used:    1
  1625 ;; This function calls:
  1626 ;;		Nothing
  1627 ;; This function is called by:
  1628 ;;		_operar
  1629 ;;		_nand
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633                           	psect	text13
  1634  0039D8                     __ptext13:
  1635                           	opt callstack 0
  1636  0039D8                     _and:
  1637                           	opt callstack 0
  1638  0039D8  FFFF               	dw	65535	; assembler added errata NOP
  1639                           
  1640                           ;incstack = 0
  1641                           ;and@oper_1 stored from wreg
  1642  0039DA  6E56               	movwf	and@oper_1^0,c
  1643  0039DC                     
  1644                           ;main.c: 223: return oper_1 & oper_2;
  1645  0039DC  5056               	movf	and@oper_1^0,w,c
  1646  0039DE  1455               	andwf	and@oper_2^0,w,c
  1647  0039E0  0012               	return		;funcret
  1648  0039E2  FFFF               	dw	65535	; errata NOP
  1649  0039E4                     __end_of_and:
  1650                           	opt callstack 0
  1651                           
  1652 ;; *************** function _multi *****************
  1653 ;; Defined at:
  1654 ;;		line 209 in file "main.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;  oper_1          1    wreg     unsigned char 
  1657 ;;  oper_2          1    0[COMRAM] unsigned char 
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;  oper_1          1    1[COMRAM] unsigned char 
  1660 ;; Return value:  Size  Location     Type
  1661 ;;                  1    wreg      unsigned char 
  1662 ;; Registers used:
  1663 ;;		wreg, status,2, status,0, prodl, prodh
  1664 ;; Tracked objects:
  1665 ;;		On entry : 0/0
  1666 ;;		On exit  : 0/0
  1667 ;;		Unchanged: 0/0
  1668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1669 ;;      Params:         1       0       0       0       0       0       0
  1670 ;;      Locals:         1       0       0       0       0       0       0
  1671 ;;      Temps:          0       0       0       0       0       0       0
  1672 ;;      Totals:         2       0       0       0       0       0       0
  1673 ;;Total ram usage:        2 bytes
  1674 ;; Hardware stack levels used:    1
  1675 ;; This function calls:
  1676 ;;		Nothing
  1677 ;; This function is called by:
  1678 ;;		_operar
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           	psect	text14
  1683  003A14                     __ptext14:
  1684                           	opt callstack 0
  1685  003A14                     _multi:
  1686                           	opt callstack 0
  1687  003A14  FFFF               	dw	65535	; assembler added errata NOP
  1688                           
  1689                           ;incstack = 0
  1690                           ;multi@oper_1 stored from wreg
  1691  003A16  6E56               	movwf	multi@oper_1^0,c
  1692  003A18                     
  1693                           ;main.c: 210: return oper_1 * oper_2;
  1694  003A18  5056               	movf	multi@oper_1^0,w,c
  1695  003A1A  0255               	mulwf	multi@oper_2^0,c
  1696  003A1C  50F3               	movf	243,w,c
  1697  003A1E  0012               	return		;funcret
  1698  003A20  FFFF               	dw	65535	; errata NOP
  1699  003A22                     __end_of_multi:
  1700                           	opt callstack 0
  1701                           
  1702 ;; *************** function _division *****************
  1703 ;; Defined at:
  1704 ;;		line 213 in file "main.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;  oper_1          1    wreg     unsigned char 
  1707 ;;  oper_2          1    4[COMRAM] unsigned char 
  1708 ;; Auto vars:     Size  Location     Type
  1709 ;;  oper_1          1    5[COMRAM] unsigned char 
  1710 ;;  result          1    6[COMRAM] unsigned char 
  1711 ;; Return value:  Size  Location     Type
  1712 ;;                  1    wreg      unsigned char 
  1713 ;; Registers used:
  1714 ;;		wreg, status,2, status,0, cstack
  1715 ;; Tracked objects:
  1716 ;;		On entry : 0/0
  1717 ;;		On exit  : 0/0
  1718 ;;		Unchanged: 0/0
  1719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1720 ;;      Params:         1       0       0       0       0       0       0
  1721 ;;      Locals:         2       0       0       0       0       0       0
  1722 ;;      Temps:          0       0       0       0       0       0       0
  1723 ;;      Totals:         3       0       0       0       0       0       0
  1724 ;;Total ram usage:        3 bytes
  1725 ;; Hardware stack levels used:    1
  1726 ;; Hardware stack levels required when called:    1
  1727 ;; This function calls:
  1728 ;;		___lbdiv
  1729 ;; This function is called by:
  1730 ;;		_operar
  1731 ;; This function uses a non-reentrant model
  1732 ;;
  1733                           
  1734                           	psect	text15
  1735  003A48                     __ptext15:
  1736                           	opt callstack 0
  1737  003A48                     _division:
  1738                           	opt callstack 0
  1739  003A48  FFFF               	dw	65535	; assembler added errata NOP
  1740                           
  1741                           ;incstack = 0
  1742                           ;division@oper_1 stored from wreg
  1743  003A4A  6E5A               	movwf	division@oper_1^0,c
  1744  003A4C                     
  1745                           ;main.c: 214: char result = oper_1 / oper_2;
  1746  003A4C  C059  F055         	movff	division@oper_2,___lbdiv@divisor
  1747  003A50  505A               	movf	division@oper_1^0,w,c
  1748  003A52  EC13  F01E         	call	___lbdiv
  1749  003A56  6E5B               	movwf	division@result^0,c
  1750  003A58                     
  1751                           ;main.c: 215: return result;
  1752  003A58  505B               	movf	division@result^0,w,c
  1753  003A5A  0012               	return		;funcret
  1754  003A5C  FFFF               	dw	65535	; errata NOP
  1755  003A5E                     __end_of_division:
  1756                           	opt callstack 0
  1757                           
  1758 ;; *************** function ___lbdiv *****************
  1759 ;; Defined at:
  1760 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lbdiv.c"
  1761 ;; Parameters:    Size  Location     Type
  1762 ;;  dividend        1    wreg     unsigned char 
  1763 ;;  divisor         1    0[COMRAM] unsigned char 
  1764 ;; Auto vars:     Size  Location     Type
  1765 ;;  dividend        1    1[COMRAM] unsigned char 
  1766 ;;  quotient        1    3[COMRAM] unsigned char 
  1767 ;;  counter         1    2[COMRAM] unsigned char 
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  1    wreg      unsigned char 
  1770 ;; Registers used:
  1771 ;;		wreg, status,2, status,0
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1777 ;;      Params:         1       0       0       0       0       0       0
  1778 ;;      Locals:         3       0       0       0       0       0       0
  1779 ;;      Temps:          0       0       0       0       0       0       0
  1780 ;;      Totals:         4       0       0       0       0       0       0
  1781 ;;Total ram usage:        4 bytes
  1782 ;; Hardware stack levels used:    1
  1783 ;; This function calls:
  1784 ;;		Nothing
  1785 ;; This function is called by:
  1786 ;;		_division
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789                           
  1790                           	psect	text16
  1791  003C26                     __ptext16:
  1792                           	opt callstack 0
  1793  003C26                     ___lbdiv:
  1794                           	opt callstack 0
  1795  003C26  FFFF               	dw	65535	; assembler added errata NOP
  1796                           
  1797                           ;incstack = 0
  1798                           ;___lbdiv@dividend stored from wreg
  1799  003C28  6E56               	movwf	___lbdiv@dividend^0,c
  1800  003C2A  0E00               	movlw	0
  1801  003C2C  6E58               	movwf	___lbdiv@quotient^0,c
  1802  003C2E  5055               	movf	___lbdiv@divisor^0,w,c
  1803  003C30  B4D8               	btfsc	status,2,c
  1804  003C32  EF1D  F01E         	goto	u201
  1805  003C36  EF20  F01E         	goto	u200
  1806  003C3A                     u201:
  1807  003C3A  FFFF               	dw	65535	; assembler added errata NOP
  1808  003C3C  EF4A  F01E         	goto	l1234
  1809  003C40                     u200:
  1810  003C40  FFFF               	dw	65535	; assembler added errata NOP
  1811  003C42  0E01               	movlw	1
  1812  003C44  6E57               	movwf	___lbdiv@counter^0,c
  1813  003C46  EF29  F01E         	goto	l1222
  1814  003C4A                     l1218:
  1815  003C4A  FFFF               	dw	65535	; assembler added errata NOP
  1816  003C4C  90D8               	bcf	status,0,c
  1817  003C4E  3655               	rlcf	___lbdiv@divisor^0,f,c
  1818  003C50  2A57               	incf	___lbdiv@counter^0,f,c
  1819  003C52                     l1222:
  1820  003C52  FFFF               	dw	65535	; assembler added errata NOP
  1821  003C54  AE55               	btfss	___lbdiv@divisor^0,7,c
  1822  003C56  EF2F  F01E         	goto	u211
  1823  003C5A  EF32  F01E         	goto	u210
  1824  003C5E                     u211:
  1825  003C5E  FFFF               	dw	65535	; assembler added errata NOP
  1826  003C60  EF25  F01E         	goto	l1218
  1827  003C64                     u210:
  1828  003C64  FFFF               	dw	65535	; assembler added errata NOP
  1829  003C66                     l1224:
  1830  003C66  FFFF               	dw	65535	; assembler added errata NOP
  1831  003C68  90D8               	bcf	status,0,c
  1832  003C6A  3658               	rlcf	___lbdiv@quotient^0,f,c
  1833  003C6C  5055               	movf	___lbdiv@divisor^0,w,c
  1834  003C6E  5C56               	subwf	___lbdiv@dividend^0,w,c
  1835  003C70  A0D8               	btfss	status,0,c
  1836  003C72  EF3D  F01E         	goto	u221
  1837  003C76  EF40  F01E         	goto	u220
  1838  003C7A                     u221:
  1839  003C7A  FFFF               	dw	65535	; assembler added errata NOP
  1840  003C7C  EF44  F01E         	goto	l1230
  1841  003C80                     u220:
  1842  003C80  FFFF               	dw	65535	; assembler added errata NOP
  1843  003C82  5055               	movf	___lbdiv@divisor^0,w,c
  1844  003C84  5E56               	subwf	___lbdiv@dividend^0,f,c
  1845  003C86  8058               	bsf	___lbdiv@quotient^0,0,c
  1846  003C88                     l1230:
  1847  003C88  FFFF               	dw	65535	; assembler added errata NOP
  1848  003C8A  90D8               	bcf	status,0,c
  1849  003C8C  3255               	rrcf	___lbdiv@divisor^0,f,c
  1850  003C8E  2E57               	decfsz	___lbdiv@counter^0,f,c
  1851  003C90  EF33  F01E         	goto	l1224
  1852  003C94                     l1234:
  1853  003C94  FFFF               	dw	65535	; assembler added errata NOP
  1854  003C96  5058               	movf	___lbdiv@quotient^0,w,c
  1855  003C98  0012               	return		;funcret
  1856  003C9A  FFFF               	dw	65535	; errata NOP
  1857  003C9C                     __end_of___lbdiv:
  1858                           	opt callstack 0
  1859                           
  1860 ;; *************** function _init_config *****************
  1861 ;; Defined at:
  1862 ;;		line 99 in file "main.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;		None
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;		None
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  1    wreg      void 
  1869 ;; Registers used:
  1870 ;;		wreg, status,2
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1876 ;;      Params:         0       0       0       0       0       0       0
  1877 ;;      Locals:         0       0       0       0       0       0       0
  1878 ;;      Temps:          0       0       0       0       0       0       0
  1879 ;;      Totals:         0       0       0       0       0       0       0
  1880 ;;Total ram usage:        0 bytes
  1881 ;; Hardware stack levels used:    1
  1882 ;; This function calls:
  1883 ;;		Nothing
  1884 ;; This function is called by:
  1885 ;;		_main
  1886 ;; This function uses a non-reentrant model
  1887 ;;
  1888                           
  1889                           	psect	text17
  1890  003AF0                     __ptext17:
  1891                           	opt callstack 0
  1892  003AF0                     _init_config:
  1893                           	opt callstack 0
  1894  003AF0  FFFF               	dw	65535	; assembler added errata NOP
  1895  003AF2                     
  1896                           ;main.c: 100: ADCON1 = 0X06;
  1897  003AF2  0E06               	movlw	6
  1898  003AF4  6EC1               	movwf	193,c	;volatile
  1899                           
  1900                           ;main.c: 102: TRISA = 0B00000000;
  1901  003AF6  0E00               	movlw	0
  1902  003AF8  6E92               	movwf	146,c	;volatile
  1903                           
  1904                           ;main.c: 103: LATA = 0;
  1905  003AFA  0E00               	movlw	0
  1906  003AFC  6E89               	movwf	137,c	;volatile
  1907                           
  1908                           ;main.c: 104: PORTA = 0;
  1909  003AFE  0E00               	movlw	0
  1910  003B00  6E80               	movwf	128,c	;volatile
  1911  003B02                     
  1912                           ;main.c: 106: TRISB = 0B11111111;
  1913  003B02  6893               	setf	147,c	;volatile
  1914                           
  1915                           ;main.c: 107: LATB = 0;
  1916  003B04  0E00               	movlw	0
  1917  003B06  6E8A               	movwf	138,c	;volatile
  1918  003B08                     
  1919                           ;main.c: 108: PORTB = 0B11111111;
  1920  003B08  6881               	setf	129,c	;volatile
  1921  003B0A                     
  1922                           ;main.c: 110: TRISC = 0B11111111;
  1923  003B0A  6894               	setf	148,c	;volatile
  1924                           
  1925                           ;main.c: 111: LATC = 0;
  1926  003B0C  0E00               	movlw	0
  1927  003B0E  6E8B               	movwf	139,c	;volatile
  1928                           
  1929                           ;main.c: 112: PORTC = 0;
  1930  003B10  0E00               	movlw	0
  1931  003B12  6E82               	movwf	130,c	;volatile
  1932                           
  1933                           ;main.c: 114: TRISD = 0B00000000;
  1934  003B14  0E00               	movlw	0
  1935  003B16  6E95               	movwf	149,c	;volatile
  1936                           
  1937                           ;main.c: 115: LATD = 0;
  1938  003B18  0E00               	movlw	0
  1939  003B1A  6E8C               	movwf	140,c	;volatile
  1940                           
  1941                           ;main.c: 116: PORTD = 0;
  1942  003B1C  0E00               	movlw	0
  1943  003B1E  6E83               	movwf	131,c	;volatile
  1944                           
  1945                           ;main.c: 118: TRISE = 0B00000000;
  1946  003B20  0E00               	movlw	0
  1947  003B22  6E96               	movwf	150,c	;volatile
  1948                           
  1949                           ;main.c: 119: LATE = 0;
  1950  003B24  0E00               	movlw	0
  1951  003B26  6E8D               	movwf	141,c	;volatile
  1952                           
  1953                           ;main.c: 120: PORTE = 0;
  1954  003B28  0E00               	movlw	0
  1955  003B2A  6E84               	movwf	132,c	;volatile
  1956  003B2C  0012               	return		;funcret
  1957  003B2E  FFFF               	dw	65535	; errata NOP
  1958  003B30                     __end_of_init_config:
  1959                           	opt callstack 0
  1960  003B30  FFFF               	dw	65535	; assembler added errata NOP
  1961                           
  1962                           	psect	rparam
  1963  0000                     tosu	equ	0xFFF
  1964                           tosh	equ	0xFFE
  1965                           tosl	equ	0xFFD
  1966                           stkptr	equ	0xFFC
  1967                           pclatu	equ	0xFFB
  1968                           pclath	equ	0xFFA
  1969                           pcl	equ	0xFF9
  1970                           tblptru	equ	0xFF8
  1971                           tblptrh	equ	0xFF7
  1972                           tblptrl	equ	0xFF6
  1973                           tablat	equ	0xFF5
  1974                           prodh	equ	0xFF4
  1975                           prodl	equ	0xFF3
  1976                           indf0	equ	0xFEF
  1977                           postinc0	equ	0xFEE
  1978                           postdec0	equ	0xFED
  1979                           preinc0	equ	0xFEC
  1980                           plusw0	equ	0xFEB
  1981                           fsr0h	equ	0xFEA
  1982                           fsr0l	equ	0xFE9
  1983                           wreg	equ	0xFE8
  1984                           indf1	equ	0xFE7
  1985                           postinc1	equ	0xFE6
  1986                           postdec1	equ	0xFE5
  1987                           preinc1	equ	0xFE4
  1988                           plusw1	equ	0xFE3
  1989                           fsr1h	equ	0xFE2
  1990                           fsr1l	equ	0xFE1
  1991                           bsr	equ	0xFE0
  1992                           indf2	equ	0xFDF
  1993                           postinc2	equ	0xFDE
  1994                           postdec2	equ	0xFDD
  1995                           preinc2	equ	0xFDC
  1996                           plusw2	equ	0xFDB
  1997                           fsr2h	equ	0xFDA
  1998                           fsr2l	equ	0xFD9
  1999                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        84
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     21     105
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_show_error_message
    _show_error_message->_visualizar
    _visualizar->_tolower
    _operar->_division
    _operar->_no_es_primo
    _no_es_primo->_module
    _module->___lbmod
    _nand->_and
    _division->___lbdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   10129
                                             12 COMRAM     9     9      0
                        _init_config
                             _operar
                 _show_error_message
                         _visualizar
 ---------------------------------------------------------------------------------
 (1) _show_error_message                                   1     1      0    3049
                                             11 COMRAM     1     1      0
                         _visualizar
 ---------------------------------------------------------------------------------
 (1) _visualizar                                          10     7      3    3049
                                              1 COMRAM    10     7      3
                            _tolower
 ---------------------------------------------------------------------------------
 (2) _tolower                                              1     1      0      67
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _operar                                               3     1      2    3447
                                              7 COMRAM     3     1      2
                                _and
                           _division
                             _module
                              _multi
                               _nand
                        _no_es_primo
                                 _or
                              _resta
                               _suma
                                _xor
 ---------------------------------------------------------------------------------
 (2) _xor                                                  2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _suma                                                 2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _resta                                                2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _or                                                   2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _no_es_primo                                          1     1      0     453
                                              6 COMRAM     1     1      0
                             _module
 ---------------------------------------------------------------------------------
 (3) _module                                               2     1      1     431
                                              4 COMRAM     2     1      1
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1     235
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _nand                                                 2     1      1     316
                                              2 COMRAM     2     1      1
                                _and
 ---------------------------------------------------------------------------------
 (3) _and                                                  2     1      1     196
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _multi                                                2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _division                                             3     2      1     381
                                              4 COMRAM     3     2      1
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1     238
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_config
   _operar
     _and
     _division
       ___lbdiv
     _module
       ___lbmod
     _multi
     _nand
       _and
     _no_es_primo
       _module
         ___lbmod
     _or
     _resta
     _suma
     _xor
   _show_error_message
     _visualizar
       _tolower
   _visualizar
     _tolower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     15      69       1       82.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      69      15        0.0%
DATA                 0      0      69       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 26 16:54:50 2020

                                                               l97 3B2C  
                                                               _or 39E4  
                                                      __CFG_OSC$XT 000000  
                                                              l102 3CC2  
                                                              l114 3C22  
                                                              l140 3A1E  
                                                              l108 3D70  
                                                              l134 3A04  
                                                              l143 3A5A  
                                                              l119 3E9A  
                                                              l152 39EC  
                                                              l137 39F8  
                                                              l146 3A30  
                                                              l162 3AB4  
                                                              l155 3A44  
                                                              ?_or 0055  
                                                              l149 39E0  
                                                              l158 3A10  
                                                              l565 3B70  
                                                              l559 3C98  
                                                              l828 3AEC  
                                                              _LA3 007C4B  
                                                              _LA5 007C4D  
                                                              u200 3C40  
                                                              u201 3C3A  
                                                              u210 3C64  
                                                              u211 3C5E  
                                                              u220 3C80  
                                                              u300 3F2A  
                                                              u221 3C7A  
                                                              u301 3F24  
                                                              u230 3CB8  
                                                              u310 3F6E  
                                                              u231 3CB2  
                                                              u311 3F68  
                                                              u240 3CE2  
                                                              u320 3FF6  
                                                              u241 3CDC  
                                                              u321 3FF0  
                                                              u170 3B60  
                                                              u250 3D6E  
                                                              u171 3B5A  
                                                              u251 3D68  
                                                              u260 3AA8  
                                                              u180 3AD0  
                                                              u261 3AA2  
                                                              u181 3ACA  
                                                              u270 3E30  
                                                              u190 3AE4  
                                                              u271 3E28  
                                                              u191 3ADE  
                                                              u280 3E34  
                                                              u337 3C18  
                                                              u290 3ED8  
                                                              u347 3D50  
                                                              u291 3ED2  
                                                     __CFG_BOR$OFF 000000  
                                                              _and 39D8  
                                                              _xor 3A08  
                                                              wreg 000FE8  
                                                             ??_or 0056  
                                                     __CFG_LVP$OFF 000000  
                                                     __CFG_WDT$OFF 000000  
                                                             l1200 3AE8  
                                                             l1220 3C50  
                                                             l1212 3C2A  
                                                             l1204 3A26  
                                                             l1300 3AB0  
                                                             l1310 3B0A  
                                                             l1230 3C88  
                                                             l1222 3C52  
                                                             l1214 3C2E  
                                                             l1304 3AF2  
                                                             l1232 3C8E  
                                                             l1224 3C66  
                                                             l1216 3C42  
                                                             l1208 39DC  
                                                             l1320 3D8C  
                                                             l1312 3D78  
                                                             l1306 3B02  
                                                             l1226 3C82  
                                                             l1218 3C4A  
                                                             l1234 3C94  
                                                             l1314 3D7C  
                                                             l1250 3CE4  
                                                             l1410 3F12  
                                                             l1402 3EC2  
                                                             l1308 3B08  
                                                             l1228 3C86  
                                                             l1180 3B3E  
                                                             l1332 3DAC  
                                                             l1260 3D5A  
                                                             l1252 3D12  
                                                             l1244 3CA4  
                                                             l1420 3F5A  
                                                             l1412 3F16  
                                                             l1404 3EDA  
                                                             ?_and 0055  
                                                             l1190 3B6E  
                                                             l1182 3B48  
                                                             l1350 3DDC  
                                                             l1326 3D9C  
                                                             l1262 3D5C  
                                                             l1254 3D3E  
                                                             l1246 3CBA  
                                                             l1238 3CA0  
                                                             l1430 3FB2  
                                                             l1422 3F70  
                                                             l1414 3F2C  
                                                             l1406 3EF4  
                                                             l1272 3A18  
                                                             l1184 3B4C  
                                                             l1264 3A00  
                                                             l1344 3DCC  
                                                             l1256 3D44  
                                                             l1248 3CC8  
                                                             l1424 3F78  
                                                             l1416 3F3E  
                                                             l1408 3F0C  
                                                             l1432 3FC8  
                                                             l1186 3B62  
                                                             l1178 3B36  
                                                             l1282 39E8  
                                                             l1290 3A0C  
                                                             l1362 3DFC  
                                                             l1338 3DBC  
                                                             l1194 3ABE  
                                                             l1258 3D4A  
                                                             l1426 3F8A  
                                                             l1434 3FE0  
                                                             l1418 3F42  
                                                             l1276 3A4C  
                                                             l1188 3B66  
                                                             l1268 39F4  
                                                             l1356 3DEC  
                                                             l1196 3AD2  
                                                             l1436 3FE4  
                                                             l1428 3FA0  
                                                             l1278 3A58  
                                                             l1286 3A38  
                                                             l1294 3A8C  
                                                             l1374 3E18  
                                                             l1382 3E3A  
                                                             l1198 3AE6  
                                                             l1390 3EA6  
                                                             l1296 3AAA  
                                                             l1368 3E0C  
                                                             l1384 3BCA  
                                                             l1392 3EAE  
                                                             l1386 3C12  
                                                             l1394 3EB4  
                                                             l1396 3EBA  
                                                             l1388 3EA0  
                                                             ?_xor 0055  
                                                             _LATA 000F89  
                                                             _LATB 000F8A  
                                                             _LATC 000F8B  
                                                             _LATD 000F8C  
                                                             _LATE 000F8D  
                                                     __CFG_PWRT$ON 000000  
                                                             _main 3EA0  
                                                             _nand 3A34  
                                                             indf2 000FDF  
                                                             fsr1l 000FE1  
                                                             fsr2l 000FD9  
                                                             _suma 39FC  
                                                             prodh 000FF4  
                                                             prodl 000FF3  
                                                             start 0002  
                                                     ___param_bank 000000  
                                                            ??_and 0056  
                                                            ??_xor 0056  
                                                            ?_main 0055  
                                                            ?_nand 0057  
                                                  __end_of___lbdiv 3C9C  
                                                  __end_of___lbmod 3B74  
                                                            ?_suma 0055  
                                                     ?_init_config 0055  
                                                            _PORTA 000F80  
                                                            _PORTB 000F81  
                                                            _PORTC 000F82  
                                                            _PORTD 000F83  
                                                            _PORTE 000F84  
                                                            _TRISA 000F92  
                                                            _TRISB 000F93  
                                                            _TRISC 000F94  
                                                            _TRISD 000F95  
                                                            _TRISE 000F96  
                                                            _resta 39F0  
                                                            _multi 3A14  
                                                            main@i 0064  
                                                            main@x 0065  
                                                            tablat 000FF5  
                                                            status 000FD8  
                                                  __end_of_tolower 3AF0  
                                                  ___lbdiv@divisor 0055  
                                                  ___lbdiv@counter 0057  
                                                     ?_no_es_primo 0055  
                                                  __initialization 3A5E  
                                                     __end_of_main 4000  
                                                     __end_of_nand 3A48  
                                                     __end_of_suma 3A08  
                                                           ??_main 0061  
                                                           ??_nand 0058  
                                                           ??_suma 0056  
                                                    __activetblptr 000002  
                                                           _ADCON1 000FC1  
                                                           ?_resta 0055  
                                                           ?_multi 0055  
                                                           _NUMERO 0001  
                                                 __end_of_division 3A5E  
                                                        ??___lbdiv 0056  
                                                        ??___lbmod 0056  
                                                           _module 3A22  
                                                           _operar 3D74  
                                               _show_error_message 3BC8  
                                                    main@resultado 0066  
                                                     __pdataCOMRAM 0001  
                                                           tblptrh 000FF7  
                                                           tblptrl 000FF6  
                                                           tblptru 000FF8  
                                              ?_show_error_message 0055  
                                                        ??_tolower 0055  
                                                 ___lbdiv@dividend 0056  
                                                  ___lbmod@divisor 0055  
                                                       __accesstop 0080  
                                          __end_of__initialization 3A7E  
                                                  ___lbmod@counter 0057  
                                                    ___rparam_used 000001  
                                                   __pcstackCOMRAM 0055  
                                             ??_show_error_message 0060  
                                                    __end_of_resta 39FC  
                                                    __end_of_multi 3A22  
                                                 ___lbdiv@quotient 0058  
                                                       __end_of_or 39F0  
                                             __size_of_init_config 0040  
                                               visualizar@position 0056  
                                                          ??_resta 0056  
                                                          ??_multi 0056  
                                             __size_of_no_es_primo 0032  
                                                          ?_module 0059  
                                                          ?_operar 005C  
                                                   no_es_primo@num 005B  
                                                          _SIMBOLO 0031  
                                                        ?_division 0059  
                                                   visualizar@from 0057  
                                                          __Hparam 0000  
                                                          __Lparam 0000  
                                                          ___lbdiv 3C26  
                                                          ___lbmod 3B32  
                                                          __pcinit 3A5E  
                                                   _visualizar$158 005D  
                                                          __ramtop 0600  
                                                  __size_of_module 0012  
                                                  __size_of_operar 012C  
                                                          __ptext0 3EA0  
                                                          __ptext1 3BC8  
                                                          __ptext2 3C9C  
                                                          __ptext3 3ABA  
                                                          __ptext4 3D74  
                                                          __ptext5 3A08  
                                                          __ptext6 39FC  
                                                          __ptext7 39F0  
                                                          __ptext8 39E4  
                                                          __ptext9 3A88  
                                                      resta@oper_1 0056  
                                                      resta@oper_2 0055  
                                                     __size_of_and 000C  
                                                     __size_of_xor 000C  
                                                          _tolower 3ABA  
                                             end_of_initialization 3A7E  
                                                       ??_division 005A  
                                                    __Lmediumconst 0000  
                                                          postdec1 000FE5  
                                                          postinc0 000FEE  
                                                      multi@oper_1 0056  
                                                      multi@oper_2 0055  
                                                 ___lbmod@dividend 0056  
                                                      ___lbmod@rem 0058  
                                                       main@oper_1 0068  
                                                       main@oper_2 0069  
                                                       _visualizar 3C9C  
                                                       nand@oper_1 0058  
                                                       nand@oper_2 0057  
                                                    __pidataCOMRAM 3B74  
                                                   __end_of_module 3A34  
                                                   __end_of_operar 3EA0  
                                              start_initialization 3A5E  
                                                 visualizar@enable 0058  
                                                   division@oper_1 005A  
                                                   division@oper_2 0059  
                                                      __end_of_and 39E4  
                                                      __end_of_xor 3A14  
                                                   division@result 005B  
                                      __size_of_show_error_message 005E  
                                                         ??_module 005A  
                                                         ??_operar 005E  
                                                    ??_init_config 0055  
                                                __size_of_division 0016  
                                                      ?_visualizar 0056  
                                                    ??_no_es_primo 005B  
                                                         ?___lbdiv 0055  
                                                         ?___lbmod 0055  
                                                      visualizar@x 005F  
                                                     module@oper_1 005A  
                                                     module@oper_2 0059  
                                                        and@oper_1 0056  
                                                        and@oper_2 0055  
                                                    visualizar@SoN 005C  
                                                       operar@oper 005E  
                                                         ?_tolower 0055  
                                              __end_of_init_config 3B30  
                                                   __size_of_resta 000C  
                                                   __size_of_multi 000E  
                                                      __size_of_or 000C  
                                              __end_of_no_es_primo 3ABA  
                                              __size_of_visualizar 00D8  
                                                        copy_data0 3A72  
                                                       suma@oper_1 0056  
                                                       suma@oper_2 0055  
                                                         __Hrparam 0000  
                                                         __Lrparam 0000  
                                                 __size_of___lbdiv 0076  
                                                 __size_of___lbmod 0042  
                                                     operar@oper_1 005C  
                                                     operar@oper_2 005D  
                                                      _init_config 3AF0  
                                                         _main$149 0062  
                                                         __ptext10 3A22  
                                                         __ptext11 3B32  
                                                         __ptext12 3A34  
                                                         __ptext13 39D8  
                                                         __ptext14 3A14  
                                                         __ptext15 3A48  
                                                         __ptext16 3C26  
                                                         __ptext17 3AF0  
                                                         _division 3A48  
                                                 __size_of_tolower 0036  
                                                    __size_of_main 0160  
                                                    __size_of_nand 0014  
                                                    __size_of_suma 000C  
                                                      _no_es_primo 3A88  
                                                         main@oper 0067  
                                                         or@oper_1 0056  
                                                         or@oper_2 0055  
                                                        xor@oper_1 0056  
                                                        xor@oper_2 0055  
                                                     ??_visualizar 0059  
                                       __end_of_show_error_message 3C26  
                                                         tolower@c 0055  
                                               __end_of_visualizar 3D74  
