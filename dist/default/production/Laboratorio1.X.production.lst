

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 26 00:35:52 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31  0000                     
    32                           ; Version 2.10
    33                           ; Generated 31/07/2019 GMT
    34                           ; 
    35                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F452 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     
    67                           	psect	idataCOMRAM
    68  003C4B                     __pidataCOMRAM:
    69                           	opt callstack 0
    70                           
    71                           ;initializer for _NUMERO
    72  003C4B  F8                 	db	248
    73  003C4C  88                 	db	136
    74  003C4D  F8                 	db	248
    75  003C4E  40                 	db	64
    76  003C4F  F8                 	db	248
    77  003C50  F8                 	db	248
    78  003C51  B8                 	db	184
    79  003C52  A8                 	db	168
    80  003C53  E8                 	db	232
    81  003C54  A8                 	db	168
    82  003C55  A8                 	db	168
    83  003C56  F8                 	db	248
    84  003C57  E0                 	db	224
    85  003C58  20                 	db	32
    86  003C59  F8                 	db	248
    87  003C5A  E8                 	db	232
    88  003C5B  A8                 	db	168
    89  003C5C  B8                 	db	184
    90  003C5D  F8                 	db	248
    91  003C5E  A8                 	db	168
    92  003C5F  B8                 	db	184
    93  003C60  80                 	db	128
    94  003C61  80                 	db	128
    95  003C62  F8                 	db	248
    96  003C63  F8                 	db	248
    97  003C64  A8                 	db	168
    98  003C65  F8                 	db	248
    99  003C66  E0                 	db	224
   100  003C67  A0                 	db	160
   101  003C68  F8                 	db	248
   102  003C69  F8                 	db	248
   103  003C6A  A0                 	db	160
   104  003C6B  F8                 	db	248
   105  003C6C  F8                 	db	248
   106  003C6D  28                 	db	40
   107  003C6E  38                 	db	56
   108  003C6F  F8                 	db	248
   109  003C70  88                 	db	136
   110  003C71  88                 	db	136
   111  003C72  38                 	db	56
   112  003C73  28                 	db	40
   113  003C74  F8                 	db	248
   114  003C75  F8                 	db	248
   115  003C76  A8                 	db	168
   116  003C77  A8                 	db	168
   117  003C78  F8                 	db	248
   118  003C79  A0                 	db	160
   119  003C7A  A0                 	db	160
   120                           
   121                           ;initializer for _SIMBOLO
   122  003C7B  20                 	db	32
   123  003C7C  70                 	db	112
   124  003C7D  20                 	db	32
   125  003C7E  20                 	db	32
   126  003C7F  20                 	db	32
   127  003C80  20                 	db	32
   128  003C81  50                 	db	80
   129  003C82  20                 	db	32
   130  003C83  50                 	db	80
   131  003C84  10                 	db	16
   132  003C85  20                 	db	32
   133  003C86  40                 	db	64
   134  003C87  70                 	db	112
   135  003C88  20                 	db	32
   136  003C89  70                 	db	112
   137  003C8A  20                 	db	32
   138  003C8B  40                 	db	64
   139  003C8C  20                 	db	32
   140  003C8D  40                 	db	64
   141  003C8E  20                 	db	32
   142  003C8F  40                 	db	64
   143  003C90  50                 	db	80
   144  003C91  60                 	db	96
   145  003C92  50                 	db	80
   146  003C93  60                 	db	96
   147  003C94  50                 	db	80
   148  003C95  60                 	db	96
   149  003C96  80                 	db	128
   150  003C97  F8                 	db	248
   151  003C98  80                 	db	128
   152  003C99  50                 	db	80
   153  003C9A  50                 	db	80
   154  003C9B  50                 	db	80
   155                           
   156                           	psect	nvCOMRAM
   157  000063                     __pnvCOMRAM:
   158                           	opt callstack 0
   159  000063                     _resultado:
   160                           	opt callstack 0
   161  000063                     	ds	1
   162  000064                     _oper:
   163                           	opt callstack 0
   164  000064                     	ds	1
   165  000065                     _oper_2:
   166                           	opt callstack 0
   167  000065                     	ds	1
   168  000066                     _oper_1:
   169                           	opt callstack 0
   170  000066                     	ds	1
   171  0000                     _PORTE	set	3972
   172  0000                     _LATE	set	3981
   173  0000                     _TRISE	set	3990
   174  0000                     _PORTD	set	3971
   175  0000                     _LATD	set	3980
   176  0000                     _TRISD	set	3989
   177  0000                     _LATC	set	3979
   178  0000                     _TRISC	set	3988
   179  0000                     _LATB	set	3978
   180  0000                     _TRISB	set	3987
   181  0000                     _PORTA	set	3968
   182  0000                     _LATA	set	3977
   183  0000                     _TRISA	set	3986
   184  0000                     _ADCON1	set	4033
   185  0000                     _PORTC	set	3970
   186  0000                     _PORTB	set	3969
   187  0000                     _LA5	set	31821
   188  0000                     _LA3	set	31819
   189                           
   190                           ; #config settings
   191  0000                     
   192                           	psect	cinit
   193  003B32                     __pcinit:
   194                           	opt callstack 0
   195  003B32                     start_initialization:
   196                           	opt callstack 0
   197  003B32                     __initialization:
   198                           	opt callstack 0
   199                           
   200                           ; Initialize objects allocated to COMRAM (81 bytes)
   201                           ; load TBLPTR registers with __pidataCOMRAM
   202  003B32  0E4B               	movlw	low __pidataCOMRAM
   203  003B34  6EF6               	movwf	tblptrl,c
   204  003B36  0E3C               	movlw	high __pidataCOMRAM
   205  003B38  6EF7               	movwf	tblptrh,c
   206  003B3A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   207  003B3C  6EF8               	movwf	tblptru,c
   208  003B3E  EE00  F001         	lfsr	0,__pdataCOMRAM
   209  003B42  EE10 F051          	lfsr	1,81
   210  003B46                     copy_data0:
   211  003B46  0009               	tblrd		*+
   212  003B48  CFF5 FFEE          	movff	tablat,postinc0
   213  003B4C  50E5               	movf	postdec1,w,c
   214  003B4E  50E1               	movf	fsr1l,w,c
   215  003B50  E1FA               	bnz	copy_data0
   216                           
   217                           ; Clear objects allocated to COMRAM (1 bytes)
   218  003B52  6A67               	clrf	__pbssCOMRAM& (0+255),c
   219  003B54                     end_of_initialization:
   220                           	opt callstack 0
   221  003B54                     __end_of__initialization:
   222                           	opt callstack 0
   223  003B54  0E00               	movlw	low (__Lmediumconst shr (0+16))
   224  003B56  6EF8               	movwf	tblptru,c
   225  003B58  0100               	movlb	0
   226  003B5A  EFB9  F01E         	goto	_main	;jump to C main() function
   227                           
   228                           	psect	bssCOMRAM
   229  000067                     __pbssCOMRAM:
   230                           	opt callstack 0
   231  000067                     _input:
   232                           	opt callstack 0
   233  000067                     	ds	1
   234                           
   235                           	psect	dataCOMRAM
   236  000001                     __pdataCOMRAM:
   237                           	opt callstack 0
   238  000001                     _NUMERO:
   239                           	opt callstack 0
   240  000001                     	ds	48
   241  000031                     _SIMBOLO:
   242                           	opt callstack 0
   243  000031                     	ds	33
   244                           
   245                           	psect	cstackCOMRAM
   246  000052                     __pcstackCOMRAM:
   247                           	opt callstack 0
   248  000052                     suma@oper_2:
   249                           	opt callstack 0
   250  000052                     resta@oper_2:
   251                           	opt callstack 0
   252  000052                     multi@oper_2:
   253                           	opt callstack 0
   254  000052                     and@oper_2:
   255                           	opt callstack 0
   256  000052                     or@oper_2:
   257                           	opt callstack 0
   258  000052                     xor@oper_2:
   259                           	opt callstack 0
   260  000052                     ___lbdiv@divisor:
   261                           	opt callstack 0
   262  000052                     ___lbmod@divisor:
   263                           	opt callstack 0
   264  000052                     tolower@c:
   265                           	opt callstack 0
   266                           
   267                           ; 1 bytes @ 0x0
   268  000052                     	ds	1
   269  000053                     visualizar@position:
   270                           	opt callstack 0
   271  000053                     suma@oper_1:
   272                           	opt callstack 0
   273  000053                     multi@oper_1:
   274                           	opt callstack 0
   275  000053                     and@oper_1:
   276                           	opt callstack 0
   277  000053                     or@oper_1:
   278                           	opt callstack 0
   279  000053                     xor@oper_1:
   280                           	opt callstack 0
   281  000053                     ___lbdiv@dividend:
   282                           	opt callstack 0
   283  000053                     ___lbmod@dividend:
   284                           	opt callstack 0
   285                           
   286                           ; 1 bytes @ 0x1
   287  000053                     	ds	1
   288  000054                     visualizar@from:
   289                           	opt callstack 0
   290  000054                     resta@oper_1:
   291                           	opt callstack 0
   292  000054                     nand@oper_2:
   293                           	opt callstack 0
   294  000054                     ___lbdiv@counter:
   295                           	opt callstack 0
   296  000054                     ___lbmod@counter:
   297                           	opt callstack 0
   298                           
   299                           ; 1 bytes @ 0x2
   300  000054                     	ds	1
   301  000055                     visualizar@enable:
   302                           	opt callstack 0
   303  000055                     nand@oper_1:
   304                           	opt callstack 0
   305  000055                     ___lbdiv@quotient:
   306                           	opt callstack 0
   307  000055                     ___lbmod@rem:
   308                           	opt callstack 0
   309                           
   310                           ; 1 bytes @ 0x3
   311  000055                     	ds	1
   312  000056                     ??_visualizar:
   313  000056                     division@oper_2:
   314                           	opt callstack 0
   315  000056                     module@oper_2:
   316                           	opt callstack 0
   317                           
   318                           ; 1 bytes @ 0x4
   319  000056                     	ds	1
   320  000057                     division@oper_1:
   321                           	opt callstack 0
   322  000057                     module@oper_1:
   323                           	opt callstack 0
   324                           
   325                           ; 1 bytes @ 0x5
   326  000057                     	ds	1
   327  000058                     division@result:
   328                           	opt callstack 0
   329  000058                     no_es_primo@num:
   330                           	opt callstack 0
   331                           
   332                           ; 1 bytes @ 0x6
   333  000058                     	ds	1
   334  000059                     visualizar@SoN:
   335                           	opt callstack 0
   336  000059                     operar@oper_1:
   337                           	opt callstack 0
   338                           
   339                           ; 1 bytes @ 0x7
   340  000059                     	ds	1
   341  00005A                     operar@oper_2:
   342                           	opt callstack 0
   343  00005A                     _visualizar$161:
   344                           	opt callstack 0
   345                           
   346                           ; 2 bytes @ 0x8
   347  00005A                     	ds	1
   348  00005B                     operar@oper:
   349                           	opt callstack 0
   350                           
   351                           ; 1 bytes @ 0x9
   352  00005B                     	ds	1
   353  00005C                     visualizar@x:
   354                           	opt callstack 0
   355                           
   356                           ; 1 bytes @ 0xA
   357  00005C                     	ds	1
   358  00005D                     see_full_operation@oper_2:
   359                           	opt callstack 0
   360                           
   361                           ; 1 bytes @ 0xB
   362  00005D                     	ds	1
   363  00005E                     see_full_operation@oper:
   364                           	opt callstack 0
   365                           
   366                           ; 1 bytes @ 0xC
   367  00005E                     	ds	1
   368  00005F                     ??_see_full_operation:
   369                           
   370                           ; 1 bytes @ 0xD
   371  00005F                     	ds	1
   372  000060                     see_full_operation@oper_1:
   373                           	opt callstack 0
   374                           
   375                           ; 1 bytes @ 0xE
   376  000060                     	ds	1
   377  000061                     main@i:
   378                           	opt callstack 0
   379                           
   380                           ; 1 bytes @ 0xF
   381  000061                     	ds	1
   382  000062                     main@i_153:
   383                           	opt callstack 0
   384                           
   385                           ; 1 bytes @ 0x10
   386  000062                     	ds	1
   387                           
   388 ;;
   389 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   390 ;;
   391 ;; *************** function _main *****************
   392 ;; Defined at:
   393 ;;		line 63 in file "main.c"
   394 ;; Parameters:    Size  Location     Type
   395 ;;		None
   396 ;; Auto vars:     Size  Location     Type
   397 ;;  i               1   16[COMRAM] unsigned char 
   398 ;;  i               1   15[COMRAM] unsigned char 
   399 ;; Return value:  Size  Location     Type
   400 ;;                  1    wreg      void 
   401 ;; Registers used:
   402 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   403 ;; Tracked objects:
   404 ;;		On entry : 0/0
   405 ;;		On exit  : 0/0
   406 ;;		Unchanged: 0/0
   407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   408 ;;      Params:         0       0       0       0       0       0       0
   409 ;;      Locals:         2       0       0       0       0       0       0
   410 ;;      Temps:          0       0       0       0       0       0       0
   411 ;;      Totals:         2       0       0       0       0       0       0
   412 ;;Total ram usage:        2 bytes
   413 ;; Hardware stack levels required when called:    4
   414 ;; This function calls:
   415 ;;		_init_config
   416 ;;		_operar
   417 ;;		_see_full_operation
   418 ;;		_visualizar
   419 ;; This function is called by:
   420 ;;		Startup code after reset
   421 ;; This function uses a non-reentrant model
   422 ;;
   423                           
   424                           	psect	text0
   425  003D72                     __ptext0:
   426                           	opt callstack 0
   427  003D72                     _main:
   428                           	opt callstack 27
   429  003D72  FFFF               	dw	65535	; assembler added errata NOP
   430                           
   431                           ;main.c: 65: init_config();
   432  003D74  ECE3  F01D         	call	_init_config	;wreg free
   433  003D78                     l1355:
   434  003D78  FFFF               	dw	65535	; assembler added errata NOP
   435                           
   436                           ;main.c: 67: oper_1 = PORTB>>4;
   437  003D7A  3881               	swapf	129,w,c	;volatile
   438  003D7C  0B0F               	andlw	15
   439  003D7E  6E66               	movwf	_oper_1^0,c
   440  003D80                     
   441                           ;main.c: 68: oper_2 = PORTB&0X0F;
   442  003D80  5081               	movf	129,w,c	;volatile
   443  003D82  0B0F               	andlw	15
   444  003D84  6E65               	movwf	_oper_2^0,c
   445  003D86                     
   446                           ;main.c: 69: oper = PORTC&0X0F;
   447  003D86  5082               	movf	130,w,c	;volatile
   448  003D88  0B0F               	andlw	15
   449  003D8A  6E64               	movwf	_oper^0,c
   450  003D8C                     
   451                           ;main.c: 70: resultado = operar(oper, oper_1, oper_2);
   452  003D8C  C066  F059         	movff	_oper_1,operar@oper_1
   453  003D90  C065  F05A         	movff	_oper_2,operar@oper_2
   454  003D94  5064               	movf	_oper^0,w,c
   455  003D96  EC6A  F01F         	call	_operar
   456  003D9A  6E63               	movwf	_resultado^0,c
   457  003D9C                     
   458                           ;main.c: 72: for (char i = 0; i < 200; i++) {
   459  003D9C  0E00               	movlw	0
   460  003D9E  6E61               	movwf	main@i^0,c
   461  003DA0                     l1369:
   462  003DA0  FFFF               	dw	65535	; assembler added errata NOP
   463                           
   464                           ;main.c: 73: see_full_operation(oper_1, oper_2, oper);
   465  003DA2  C065  F05D         	movff	_oper_2,see_full_operation@oper_2
   466  003DA6  C064  F05E         	movff	_oper,see_full_operation@oper
   467  003DAA  5066               	movf	_oper_1^0,w,c
   468  003DAC  EC4E  F01E         	call	_see_full_operation
   469  003DB0  2A61               	incf	main@i^0,f,c
   470  003DB2  0EC7               	movlw	199
   471  003DB4  6461               	cpfsgt	main@i^0,c
   472  003DB6  EFDF  F01E         	goto	u271
   473  003DBA  EFE2  F01E         	goto	u270
   474  003DBE                     u271:
   475  003DBE  FFFF               	dw	65535	; assembler added errata NOP
   476  003DC0  EFD0  F01E         	goto	l1369
   477  003DC4                     u270:
   478  003DC4  FFFF               	dw	65535	; assembler added errata NOP
   479  003DC6                     
   480                           ;main.c: 74: };main.c: 76: for (char i = 0; i < 200; i++) {
   481  003DC6  0E00               	movlw	0
   482  003DC8  6E62               	movwf	main@i_153^0,c
   483  003DCA                     l1381:
   484  003DCA  FFFF               	dw	65535	; assembler added errata NOP
   485                           
   486                           ;main.c: 77: visualizar('n', resultado, 0, 1);
   487  003DCC  C063  F053         	movff	_resultado,visualizar@position
   488  003DD0  0E00               	movlw	0
   489  003DD2  6E54               	movwf	visualizar@from^0,c
   490  003DD4  0E01               	movlw	1
   491  003DD6  6E55               	movwf	visualizar@enable^0,c
   492  003DD8  0E6E               	movlw	110
   493  003DDA  ECFE  F01E         	call	_visualizar
   494  003DDE  2A62               	incf	main@i_153^0,f,c
   495  003DE0  0EC7               	movlw	199
   496  003DE2  6462               	cpfsgt	main@i_153^0,c
   497  003DE4  EFF6  F01E         	goto	u281
   498  003DE8  EFF9  F01E         	goto	u280
   499  003DEC                     u281:
   500  003DEC  FFFF               	dw	65535	; assembler added errata NOP
   501  003DEE  EFE5  F01E         	goto	l1381
   502  003DF2                     u280:
   503  003DF2  FFFF               	dw	65535	; assembler added errata NOP
   504  003DF4  EFBC  F01E         	goto	l1355
   505  003DF8  EF01  F000         	goto	start
   506  003DFC                     __end_of_main:
   507                           	opt callstack 0
   508                           
   509 ;; *************** function _see_full_operation *****************
   510 ;; Defined at:
   511 ;;		line 128 in file "main.c"
   512 ;; Parameters:    Size  Location     Type
   513 ;;  oper_1          1    wreg     unsigned char 
   514 ;;  oper_2          1   11[COMRAM] unsigned char 
   515 ;;  oper            1   12[COMRAM] unsigned char 
   516 ;; Auto vars:     Size  Location     Type
   517 ;;  oper_1          1   14[COMRAM] unsigned char 
   518 ;; Return value:  Size  Location     Type
   519 ;;                  1    wreg      void 
   520 ;; Registers used:
   521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   522 ;; Tracked objects:
   523 ;;		On entry : 0/0
   524 ;;		On exit  : 0/0
   525 ;;		Unchanged: 0/0
   526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   527 ;;      Params:         2       0       0       0       0       0       0
   528 ;;      Locals:         1       0       0       0       0       0       0
   529 ;;      Temps:          1       0       0       0       0       0       0
   530 ;;      Totals:         4       0       0       0       0       0       0
   531 ;;Total ram usage:        4 bytes
   532 ;; Hardware stack levels used:    1
   533 ;; Hardware stack levels required when called:    2
   534 ;; This function calls:
   535 ;;		_visualizar
   536 ;; This function is called by:
   537 ;;		_main
   538 ;; This function uses a non-reentrant model
   539 ;;
   540                           
   541                           	psect	text1
   542  003C9C                     __ptext1:
   543                           	opt callstack 0
   544  003C9C                     _see_full_operation:
   545                           	opt callstack 0
   546  003C9C  FFFF               	dw	65535	; assembler added errata NOP
   547                           
   548                           ;incstack = 0
   549                           ;see_full_operation@oper_1 stored from wreg
   550  003C9E  6E60               	movwf	see_full_operation@oper_1^0,c
   551  003CA0                     
   552                           ;main.c: 129: visualizar('n', oper_1, 0, 1);
   553  003CA0  C060  F053         	movff	see_full_operation@oper_1,visualizar@position
   554  003CA4  0E00               	movlw	0
   555  003CA6  6E54               	movwf	visualizar@from^0,c
   556  003CA8  0E01               	movlw	1
   557  003CAA  6E55               	movwf	visualizar@enable^0,c
   558  003CAC  0E6E               	movlw	110
   559  003CAE  ECFE  F01E         	call	_visualizar
   560                           
   561                           ;main.c: 130: visualizar('s', oper, 4, 1);
   562  003CB2  C05E  F053         	movff	see_full_operation@oper,visualizar@position
   563  003CB6  0E04               	movlw	4
   564  003CB8  6E54               	movwf	visualizar@from^0,c
   565  003CBA  0E01               	movlw	1
   566  003CBC  6E55               	movwf	visualizar@enable^0,c
   567  003CBE  0E73               	movlw	115
   568  003CC0  ECFE  F01E         	call	_visualizar
   569                           
   570                           ;main.c: 131: visualizar('n', oper_2, 0, 2);
   571  003CC4  C05D  F053         	movff	see_full_operation@oper_2,visualizar@position
   572  003CC8  0E00               	movlw	0
   573  003CCA  6E54               	movwf	visualizar@from^0,c
   574  003CCC  0E02               	movlw	2
   575  003CCE  6E55               	movwf	visualizar@enable^0,c
   576  003CD0  0E6E               	movlw	110
   577  003CD2  ECFE  F01E         	call	_visualizar
   578                           
   579                           ;main.c: 132: visualizar('s', 10, 4, 2);
   580  003CD6  0E0A               	movlw	10
   581  003CD8  6E53               	movwf	visualizar@position^0,c
   582  003CDA  0E04               	movlw	4
   583  003CDC  6E54               	movwf	visualizar@from^0,c
   584  003CDE  0E02               	movlw	2
   585  003CE0  6E55               	movwf	visualizar@enable^0,c
   586  003CE2  0E73               	movlw	115
   587  003CE4  ECFE  F01E         	call	_visualizar
   588  003CE8                     
   589                           ;main.c: 133: _delay((unsigned long)((5)*(4000000/4000.0)));
   590  003CE8  0E05               	movlw	5
   591  003CEA  6E5F               	movwf	??_see_full_operation^0,c
   592  003CEC  0EDF               	movlw	223
   593  003CEE                     u297:
   594  003CEE  FFFF               	dw	65535	; errata NOP
   595  003CF0  2EE8               	decfsz	wreg,f,c
   596  003CF2  D7FD               	bra	u297
   597  003CF4  2E5F               	decfsz	??_see_full_operation^0,f,c
   598  003CF6  D7FB               	bra	u297
   599  003CF8  0012               	return		;funcret
   600  003CFA  FFFF               	dw	65535	; errata NOP
   601  003CFC                     __end_of_see_full_operation:
   602                           	opt callstack 0
   603                           
   604 ;; *************** function _visualizar *****************
   605 ;; Defined at:
   606 ;;		line 113 in file "main.c"
   607 ;; Parameters:    Size  Location     Type
   608 ;;  SoN             1    wreg     unsigned char 
   609 ;;  position        1    1[COMRAM] unsigned char 
   610 ;;  from            1    2[COMRAM] unsigned char 
   611 ;;  enable          1    3[COMRAM] unsigned char 
   612 ;; Auto vars:     Size  Location     Type
   613 ;;  SoN             1    7[COMRAM] unsigned char 
   614 ;;  x               1   10[COMRAM] unsigned char 
   615 ;; Return value:  Size  Location     Type
   616 ;;                  1    wreg      void 
   617 ;; Registers used:
   618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   619 ;; Tracked objects:
   620 ;;		On entry : 0/0
   621 ;;		On exit  : 0/0
   622 ;;		Unchanged: 0/0
   623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   624 ;;      Params:         3       0       0       0       0       0       0
   625 ;;      Locals:         4       0       0       0       0       0       0
   626 ;;      Temps:          3       0       0       0       0       0       0
   627 ;;      Totals:        10       0       0       0       0       0       0
   628 ;;Total ram usage:       10 bytes
   629 ;; Hardware stack levels used:    1
   630 ;; Hardware stack levels required when called:    1
   631 ;; This function calls:
   632 ;;		_tolower
   633 ;; This function is called by:
   634 ;;		_main
   635 ;;		_see_full_operation
   636 ;; This function uses a non-reentrant model
   637 ;;
   638                           
   639                           	psect	text2
   640  003DFC                     __ptext2:
   641                           	opt callstack 0
   642  003DFC                     _visualizar:
   643                           	opt callstack 0
   644  003DFC  FFFF               	dw	65535	; assembler added errata NOP
   645                           
   646                           ;incstack = 0
   647                           ;visualizar@SoN stored from wreg
   648  003DFE  6E59               	movwf	visualizar@SoN^0,c
   649  003E00                     
   650                           ;main.c: 114: for (char x = 0; x < 3; x++) {
   651  003E00  0E00               	movlw	0
   652  003E02  6E5C               	movwf	visualizar@x^0,c
   653  003E04                     l1219:
   654  003E04  FFFF               	dw	65535	; assembler added errata NOP
   655                           
   656                           ;main.c: 115: LATD = tolower(SoN) == 's' ? SIMBOLO[position][x] : NUMERO[position][x];
   657  003E06  5059               	movf	visualizar@SoN^0,w,c
   658  003E08  ECC8  F01D         	call	_tolower
   659  003E0C  0A73               	xorlw	115
   660  003E0E  B4D8               	btfsc	status,2,c
   661  003E10  EF0C  F01F         	goto	u211
   662  003E14  EF0F  F01F         	goto	u210
   663  003E18                     u211:
   664  003E18  FFFF               	dw	65535	; assembler added errata NOP
   665  003E1A  EF27  F01F         	goto	l1223
   666  003E1E                     u210:
   667  003E1E  FFFF               	dw	65535	; assembler added errata NOP
   668  003E20  5053               	movf	visualizar@position^0,w,c
   669  003E22  0D03               	mullw	3
   670  003E24  0E01               	movlw	low _NUMERO
   671  003E26  6E56               	movwf	??_visualizar^0,c
   672  003E28  0E00               	movlw	high _NUMERO
   673  003E2A  6E57               	movwf	(??_visualizar+1)^0,c
   674  003E2C  50F3               	movf	243,w,c
   675  003E2E  2656               	addwf	??_visualizar^0,f,c
   676  003E30  50F4               	movf	244,w,c
   677  003E32  2257               	addwfc	(??_visualizar+1)^0,f,c
   678  003E34  505C               	movf	visualizar@x^0,w,c
   679  003E36  2456               	addwf	??_visualizar^0,w,c
   680  003E38  6ED9               	movwf	fsr2l,c
   681  003E3A  0E00               	movlw	0
   682  003E3C  2057               	addwfc	(??_visualizar+1)^0,w,c
   683  003E3E  6EDA               	movwf	fsr2h,c
   684  003E40  50DF               	movf	indf2,w,c
   685  003E42  6E58               	movwf	(??_visualizar+2)^0,c
   686  003E44  5058               	movf	(??_visualizar+2)^0,w,c
   687  003E46  6E5A               	movwf	_visualizar$161^0,c
   688  003E48  6A5B               	clrf	(_visualizar$161+1)^0,c
   689  003E4A  EF3D  F01F         	goto	l1225
   690  003E4E                     l1223:
   691  003E4E  FFFF               	dw	65535	; assembler added errata NOP
   692  003E50  5053               	movf	visualizar@position^0,w,c
   693  003E52  0D03               	mullw	3
   694  003E54  0E31               	movlw	low _SIMBOLO
   695  003E56  6E56               	movwf	??_visualizar^0,c
   696  003E58  0E00               	movlw	high _SIMBOLO
   697  003E5A  6E57               	movwf	(??_visualizar+1)^0,c
   698  003E5C  50F3               	movf	243,w,c
   699  003E5E  2656               	addwf	??_visualizar^0,f,c
   700  003E60  50F4               	movf	244,w,c
   701  003E62  2257               	addwfc	(??_visualizar+1)^0,f,c
   702  003E64  505C               	movf	visualizar@x^0,w,c
   703  003E66  2456               	addwf	??_visualizar^0,w,c
   704  003E68  6ED9               	movwf	fsr2l,c
   705  003E6A  0E00               	movlw	0
   706  003E6C  2057               	addwfc	(??_visualizar+1)^0,w,c
   707  003E6E  6EDA               	movwf	fsr2h,c
   708  003E70  50DF               	movf	indf2,w,c
   709  003E72  6E58               	movwf	(??_visualizar+2)^0,c
   710  003E74  5058               	movf	(??_visualizar+2)^0,w,c
   711  003E76  6E5A               	movwf	_visualizar$161^0,c
   712  003E78  6A5B               	clrf	(_visualizar$161+1)^0,c
   713  003E7A                     l1225:
   714  003E7A  FFFF               	dw	65535	; assembler added errata NOP
   715  003E7C  C05A  FF8C         	movff	_visualizar$161,3980	;volatile
   716  003E80                     
   717                           ;main.c: 116: LATE = x + from;
   718  003E80  505C               	movf	visualizar@x^0,w,c
   719  003E82  2454               	addwf	visualizar@from^0,w,c
   720  003E84  6E8D               	movwf	141,c	;volatile
   721  003E86                     
   722                           ;main.c: 117: if (enable == 1) {
   723  003E86  0455               	decf	visualizar@enable^0,w,c
   724  003E88  A4D8               	btfss	status,2,c
   725  003E8A  EF49  F01F         	goto	u221
   726  003E8E  EF4C  F01F         	goto	u220
   727  003E92                     u221:
   728  003E92  FFFF               	dw	65535	; assembler added errata NOP
   729  003E94  EF51  F01F         	goto	l106
   730  003E98                     u220:
   731  003E98  FFFF               	dw	65535	; assembler added errata NOP
   732  003E9A                     
   733                           ;main.c: 118: LA3 = 1;
   734  003E9A  8689               	bsf	3977,3,c	;volatile
   735                           
   736                           ;main.c: 119: LA5 = 0;
   737  003E9C  9A89               	bcf	3977,5,c	;volatile
   738                           
   739                           ;main.c: 120: } else {
   740  003E9E  EF54  F01F         	goto	l1233
   741  003EA2                     l106:
   742  003EA2  FFFF               	dw	65535	; assembler added errata NOP
   743                           
   744                           ;main.c: 121: LA3 = 0;
   745  003EA4  9689               	bcf	3977,3,c	;volatile
   746                           
   747                           ;main.c: 122: LA5 = 1;
   748  003EA6  8A89               	bsf	3977,5,c	;volatile
   749  003EA8                     l1233:
   750  003EA8  FFFF               	dw	65535	; assembler added errata NOP
   751                           
   752                           ;main.c: 123: };main.c: 124: _delay((unsigned long)((5)*(4000000/4000.0)));
   753  003EAA  0E05               	movlw	5
   754  003EAC  6E56               	movwf	??_visualizar^0,c
   755  003EAE  0EDF               	movlw	223
   756  003EB0                     u307:
   757  003EB0  FFFF               	dw	65535	; errata NOP
   758  003EB2  2EE8               	decfsz	wreg,f,c
   759  003EB4  D7FD               	bra	u307
   760  003EB6  2E56               	decfsz	??_visualizar^0,f,c
   761  003EB8  D7FB               	bra	u307
   762  003EBA  2A5C               	incf	visualizar@x^0,f,c
   763  003EBC  0E02               	movlw	2
   764  003EBE  645C               	cpfsgt	visualizar@x^0,c
   765  003EC0  EF64  F01F         	goto	u231
   766  003EC4  EF67  F01F         	goto	u230
   767  003EC8                     u231:
   768  003EC8  FFFF               	dw	65535	; assembler added errata NOP
   769  003ECA  EF02  F01F         	goto	l1219
   770  003ECE                     u230:
   771  003ECE  FFFF               	dw	65535	; assembler added errata NOP
   772  003ED0  0012               	return		;funcret
   773  003ED2  FFFF               	dw	65535	; errata NOP
   774  003ED4                     __end_of_visualizar:
   775                           	opt callstack 0
   776                           
   777 ;; *************** function _tolower *****************
   778 ;; Defined at:
   779 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\tolower.c"
   780 ;; Parameters:    Size  Location     Type
   781 ;;  c               1    wreg     unsigned char 
   782 ;; Auto vars:     Size  Location     Type
   783 ;;  c               1    0[COMRAM] unsigned char 
   784 ;; Return value:  Size  Location     Type
   785 ;;                  1    wreg      unsigned char 
   786 ;; Registers used:
   787 ;;		wreg, status,2, status,0
   788 ;; Tracked objects:
   789 ;;		On entry : 0/0
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   793 ;;      Params:         0       0       0       0       0       0       0
   794 ;;      Locals:         1       0       0       0       0       0       0
   795 ;;      Temps:          0       0       0       0       0       0       0
   796 ;;      Totals:         1       0       0       0       0       0       0
   797 ;;Total ram usage:        1 bytes
   798 ;; Hardware stack levels used:    1
   799 ;; This function calls:
   800 ;;		Nothing
   801 ;; This function is called by:
   802 ;;		_visualizar
   803 ;; This function uses a non-reentrant model
   804 ;;
   805                           
   806                           	psect	text3
   807  003B90                     __ptext3:
   808                           	opt callstack 0
   809  003B90                     _tolower:
   810                           	opt callstack 0
   811  003B90  FFFF               	dw	65535	; assembler added errata NOP
   812                           
   813                           ;incstack = 0
   814                           ;tolower@c stored from wreg
   815  003B92  6E52               	movwf	tolower@c^0,c
   816  003B94  0E5B               	movlw	91
   817  003B96  6052               	cpfslt	tolower@c^0,c
   818  003B98  EFD0  F01D         	goto	u161
   819  003B9C  EFD3  F01D         	goto	u160
   820  003BA0                     u161:
   821  003BA0  FFFF               	dw	65535	; assembler added errata NOP
   822  003BA2  EFDF  F01D         	goto	l1175
   823  003BA6                     u160:
   824  003BA6  FFFF               	dw	65535	; assembler added errata NOP
   825  003BA8  0E40               	movlw	64
   826  003BAA  6452               	cpfsgt	tolower@c^0,c
   827  003BAC  EFDA  F01D         	goto	u171
   828  003BB0  EFDD  F01D         	goto	u170
   829  003BB4                     u171:
   830  003BB4  FFFF               	dw	65535	; assembler added errata NOP
   831  003BB6  EFDF  F01D         	goto	l1175
   832  003BBA                     u170:
   833  003BBA  FFFF               	dw	65535	; assembler added errata NOP
   834  003BBC  8A52               	bsf	tolower@c^0,5,c
   835  003BBE                     l1175:
   836  003BBE  FFFF               	dw	65535	; assembler added errata NOP
   837  003BC0  5052               	movf	tolower@c^0,w,c
   838  003BC2  0012               	return		;funcret
   839  003BC4  FFFF               	dw	65535	; errata NOP
   840  003BC6                     __end_of_tolower:
   841                           	opt callstack 0
   842                           
   843 ;; *************** function _operar *****************
   844 ;; Defined at:
   845 ;;		line 136 in file "main.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;  oper            1    wreg     unsigned char 
   848 ;;  oper_1          1    7[COMRAM] unsigned char 
   849 ;;  oper_2          1    8[COMRAM] unsigned char 
   850 ;; Auto vars:     Size  Location     Type
   851 ;;  oper            1    9[COMRAM] unsigned char 
   852 ;; Return value:  Size  Location     Type
   853 ;;                  1    wreg      unsigned char 
   854 ;; Registers used:
   855 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   861 ;;      Params:         2       0       0       0       0       0       0
   862 ;;      Locals:         1       0       0       0       0       0       0
   863 ;;      Temps:          0       0       0       0       0       0       0
   864 ;;      Totals:         3       0       0       0       0       0       0
   865 ;;Total ram usage:        3 bytes
   866 ;; Hardware stack levels used:    1
   867 ;; Hardware stack levels required when called:    3
   868 ;; This function calls:
   869 ;;		_and
   870 ;;		_division
   871 ;;		_module
   872 ;;		_multi
   873 ;;		_nand
   874 ;;		_no_es_primo
   875 ;;		_or
   876 ;;		_resta
   877 ;;		_suma
   878 ;;		_xor
   879 ;; This function is called by:
   880 ;;		_main
   881 ;; This function uses a non-reentrant model
   882 ;;
   883                           
   884                           	psect	text4
   885  003ED4                     __ptext4:
   886                           	opt callstack 0
   887  003ED4                     _operar:
   888                           	opt callstack 0
   889  003ED4  FFFF               	dw	65535	; assembler added errata NOP
   890                           
   891                           ;incstack = 0
   892                           ;operar@oper stored from wreg
   893  003ED6  6E5B               	movwf	operar@oper^0,c
   894  003ED8                     
   895                           ;main.c: 137: switch (oper) {
   896  003ED8  EFCD  F01F         	goto	l1347
   897  003EDC                     l1279:
   898  003EDC  FFFF               	dw	65535	; assembler added errata NOP
   899                           
   900                           ;main.c: 139: return suma(oper_1, oper_2);
   901  003EDE  C05A  F052         	movff	operar@oper_2,suma@oper_2
   902  003EE2  5059               	movf	operar@oper_1^0,w,c
   903  003EE4  EC68  F01D         	call	_suma
   904  003EE8  EFFD  F01F         	goto	l116
   905  003EEC                     l1285:
   906  003EEC  FFFF               	dw	65535	; assembler added errata NOP
   907                           
   908                           ;main.c: 142: return resta(oper_1, oper_2);
   909  003EEE  C05A  F052         	movff	operar@oper_2,resta@oper_2
   910  003EF2  5059               	movf	operar@oper_1^0,w,c
   911  003EF4  EC62  F01D         	call	_resta
   912  003EF8  EFFD  F01F         	goto	l116
   913  003EFC                     l1291:
   914  003EFC  FFFF               	dw	65535	; assembler added errata NOP
   915                           
   916                           ;main.c: 145: return multi(oper_1, oper_2);
   917  003EFE  C05A  F052         	movff	operar@oper_2,multi@oper_2
   918  003F02  5059               	movf	operar@oper_1^0,w,c
   919  003F04  EC74  F01D         	call	_multi
   920  003F08  EFFD  F01F         	goto	l116
   921  003F0C                     l1297:
   922  003F0C  FFFF               	dw	65535	; assembler added errata NOP
   923                           
   924                           ;main.c: 148: return division(oper_1, oper_2);
   925  003F0E  C05A  F056         	movff	operar@oper_2,division@oper_2
   926  003F12  5059               	movf	operar@oper_1^0,w,c
   927  003F14  EC8E  F01D         	call	_division
   928  003F18  EFFD  F01F         	goto	l116
   929  003F1C                     l1303:
   930  003F1C  FFFF               	dw	65535	; assembler added errata NOP
   931                           
   932                           ;main.c: 151: return module(oper_1, oper_2);
   933  003F1E  C05A  F056         	movff	operar@oper_2,module@oper_2
   934  003F22  5059               	movf	operar@oper_1^0,w,c
   935  003F24  EC7B  F01D         	call	_module
   936  003F28  EFFD  F01F         	goto	l116
   937  003F2C                     l1309:
   938  003F2C  FFFF               	dw	65535	; assembler added errata NOP
   939                           
   940                           ;main.c: 154: return and(oper_1, oper_2);
   941  003F2E  C05A  F052         	movff	operar@oper_2,and@oper_2
   942  003F32  5059               	movf	operar@oper_1^0,w,c
   943  003F34  EC56  F01D         	call	_and
   944  003F38  EFFD  F01F         	goto	l116
   945  003F3C                     l1315:
   946  003F3C  FFFF               	dw	65535	; assembler added errata NOP
   947                           
   948                           ;main.c: 157: return or(oper_1, oper_2);
   949  003F3E  C05A  F052         	movff	operar@oper_2,or@oper_2
   950  003F42  5059               	movf	operar@oper_1^0,w,c
   951  003F44  EC5C  F01D         	call	_or
   952  003F48  EFFD  F01F         	goto	l116
   953  003F4C                     l1321:
   954  003F4C  FFFF               	dw	65535	; assembler added errata NOP
   955                           
   956                           ;main.c: 160: return nand(oper_1, oper_2);
   957  003F4E  C05A  F054         	movff	operar@oper_2,nand@oper_2
   958  003F52  5059               	movf	operar@oper_1^0,w,c
   959  003F54  EC84  F01D         	call	_nand
   960  003F58  EFFD  F01F         	goto	l116
   961  003F5C                     l1327:
   962  003F5C  FFFF               	dw	65535	; assembler added errata NOP
   963                           
   964                           ;main.c: 163: return xor(oper_1, oper_2);
   965  003F5E  C05A  F052         	movff	operar@oper_2,xor@oper_2
   966  003F62  5059               	movf	operar@oper_1^0,w,c
   967  003F64  EC6E  F01D         	call	_xor
   968  003F68  EFFD  F01F         	goto	l116
   969  003F6C                     l1333:
   970  003F6C  FFFF               	dw	65535	; assembler added errata NOP
   971                           
   972                           ;main.c: 166: return no_es_primo(oper_1);
   973  003F6E  5059               	movf	operar@oper_1^0,w,c
   974  003F70  ECAF  F01D         	call	_no_es_primo
   975  003F74  EFFD  F01F         	goto	l116
   976  003F78                     l1339:
   977  003F78  FFFF               	dw	65535	; assembler added errata NOP
   978                           
   979                           ;main.c: 169: return oper_1 == 2;
   980  003F7A  0E02               	movlw	2
   981  003F7C  1859               	xorwf	operar@oper_1^0,w,c
   982  003F7E  B4D8               	btfsc	status,2,c
   983  003F80  EFC4  F01F         	goto	u251
   984  003F84  EFC8  F01F         	goto	u250
   985  003F88                     u251:
   986  003F88  FFFF               	dw	65535	; assembler added errata NOP
   987  003F8A  0E01               	movlw	1
   988  003F8C  EFCA  F01F         	goto	u260
   989  003F90                     u250:
   990  003F90  FFFF               	dw	65535	; assembler added errata NOP
   991  003F92  0E00               	movlw	0
   992  003F94                     u260:
   993  003F94  FFFF               	dw	65535	; assembler added errata NOP
   994  003F96  EFFD  F01F         	goto	l116
   995  003F9A                     l1347:
   996  003F9A  FFFF               	dw	65535	; assembler added errata NOP
   997  003F9C  505B               	movf	operar@oper^0,w,c
   998                           
   999                           ; Switch size 1, requested type "simple"
  1000                           ; Number of cases is 11, Range of values is 0 to 10
  1001                           ; switch strategies available:
  1002                           ; Name         Instructions Cycles
  1003                           ; simple_byte           34    18 (average)
  1004                           ;	Chosen strategy is simple_byte
  1005  003F9E  0A00               	xorlw	0	; case 0
  1006  003FA0  B4D8               	btfsc	status,2,c
  1007  003FA2  EF6E  F01F         	goto	l1279
  1008  003FA6  0A01               	xorlw	1	; case 1
  1009  003FA8  B4D8               	btfsc	status,2,c
  1010  003FAA  EF76  F01F         	goto	l1285
  1011  003FAE  0A03               	xorlw	3	; case 2
  1012  003FB0  B4D8               	btfsc	status,2,c
  1013  003FB2  EF7E  F01F         	goto	l1291
  1014  003FB6  0A01               	xorlw	1	; case 3
  1015  003FB8  B4D8               	btfsc	status,2,c
  1016  003FBA  EF86  F01F         	goto	l1297
  1017  003FBE  0A07               	xorlw	7	; case 4
  1018  003FC0  B4D8               	btfsc	status,2,c
  1019  003FC2  EF8E  F01F         	goto	l1303
  1020  003FC6  0A01               	xorlw	1	; case 5
  1021  003FC8  B4D8               	btfsc	status,2,c
  1022  003FCA  EF96  F01F         	goto	l1309
  1023  003FCE  0A03               	xorlw	3	; case 6
  1024  003FD0  B4D8               	btfsc	status,2,c
  1025  003FD2  EF9E  F01F         	goto	l1315
  1026  003FD6  0A01               	xorlw	1	; case 7
  1027  003FD8  B4D8               	btfsc	status,2,c
  1028  003FDA  EFA6  F01F         	goto	l1321
  1029  003FDE  0A0F               	xorlw	15	; case 8
  1030  003FE0  B4D8               	btfsc	status,2,c
  1031  003FE2  EFAE  F01F         	goto	l1327
  1032  003FE6  0A01               	xorlw	1	; case 9
  1033  003FE8  B4D8               	btfsc	status,2,c
  1034  003FEA  EFB6  F01F         	goto	l1333
  1035  003FEE  0A03               	xorlw	3	; case 10
  1036  003FF0  B4D8               	btfsc	status,2,c
  1037  003FF2  EFBC  F01F         	goto	l1339
  1038  003FF6  EFFD  F01F         	goto	l116
  1039  003FFA                     l116:
  1040  003FFA  FFFF               	dw	65535	; assembler added errata NOP
  1041  003FFC  0012               	return		;funcret
  1042  003FFE  FFFF               	dw	65535	; errata NOP
  1043  004000                     __end_of_operar:
  1044                           	opt callstack 0
  1045                           
  1046 ;; *************** function _xor *****************
  1047 ;; Defined at:
  1048 ;;		line 213 in file "main.c"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;  oper_1          1    wreg     unsigned char 
  1051 ;;  oper_2          1    0[COMRAM] unsigned char 
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;  oper_1          1    1[COMRAM] unsigned char 
  1054 ;; Return value:  Size  Location     Type
  1055 ;;                  1    wreg      unsigned char 
  1056 ;; Registers used:
  1057 ;;		wreg, status,2, status,0
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1063 ;;      Params:         1       0       0       0       0       0       0
  1064 ;;      Locals:         1       0       0       0       0       0       0
  1065 ;;      Temps:          0       0       0       0       0       0       0
  1066 ;;      Totals:         2       0       0       0       0       0       0
  1067 ;;Total ram usage:        2 bytes
  1068 ;; Hardware stack levels used:    1
  1069 ;; This function calls:
  1070 ;;		Nothing
  1071 ;; This function is called by:
  1072 ;;		_operar
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076                           	psect	text5
  1077  003ADC                     __ptext5:
  1078                           	opt callstack 0
  1079  003ADC                     _xor:
  1080                           	opt callstack 0
  1081  003ADC  FFFF               	dw	65535	; assembler added errata NOP
  1082                           
  1083                           ;incstack = 0
  1084                           ;xor@oper_1 stored from wreg
  1085  003ADE  6E53               	movwf	xor@oper_1^0,c
  1086  003AE0                     
  1087                           ;main.c: 214: return oper_1 ^ oper_2;
  1088  003AE0  5053               	movf	xor@oper_1^0,w,c
  1089  003AE2  1852               	xorwf	xor@oper_2^0,w,c
  1090  003AE4  0012               	return		;funcret
  1091  003AE6  FFFF               	dw	65535	; errata NOP
  1092  003AE8                     __end_of_xor:
  1093                           	opt callstack 0
  1094                           
  1095 ;; *************** function _suma *****************
  1096 ;; Defined at:
  1097 ;;		line 176 in file "main.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;  oper_1          1    wreg     unsigned char 
  1100 ;;  oper_2          1    0[COMRAM] unsigned char 
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;  oper_1          1    1[COMRAM] unsigned char 
  1103 ;; Return value:  Size  Location     Type
  1104 ;;                  1    wreg      unsigned char 
  1105 ;; Registers used:
  1106 ;;		wreg, status,2, status,0
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1112 ;;      Params:         1       0       0       0       0       0       0
  1113 ;;      Locals:         1       0       0       0       0       0       0
  1114 ;;      Temps:          0       0       0       0       0       0       0
  1115 ;;      Totals:         2       0       0       0       0       0       0
  1116 ;;Total ram usage:        2 bytes
  1117 ;; Hardware stack levels used:    1
  1118 ;; This function calls:
  1119 ;;		Nothing
  1120 ;; This function is called by:
  1121 ;;		_operar
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           	psect	text6
  1126  003AD0                     __ptext6:
  1127                           	opt callstack 0
  1128  003AD0                     _suma:
  1129                           	opt callstack 0
  1130  003AD0  FFFF               	dw	65535	; assembler added errata NOP
  1131                           
  1132                           ;incstack = 0
  1133                           ;suma@oper_1 stored from wreg
  1134  003AD2  6E53               	movwf	suma@oper_1^0,c
  1135  003AD4                     
  1136                           ;main.c: 177: return oper_1 + oper_2;
  1137  003AD4  5053               	movf	suma@oper_1^0,w,c
  1138  003AD6  2452               	addwf	suma@oper_2^0,w,c
  1139  003AD8  0012               	return		;funcret
  1140  003ADA  FFFF               	dw	65535	; errata NOP
  1141  003ADC                     __end_of_suma:
  1142                           	opt callstack 0
  1143                           
  1144 ;; *************** function _resta *****************
  1145 ;; Defined at:
  1146 ;;		line 180 in file "main.c"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;  oper_1          1    wreg     unsigned char 
  1149 ;;  oper_2          1    0[COMRAM] unsigned char 
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;  oper_1          1    2[COMRAM] unsigned char 
  1152 ;;  result          1    0        unsigned char 
  1153 ;; Return value:  Size  Location     Type
  1154 ;;                  1    wreg      unsigned char 
  1155 ;; Registers used:
  1156 ;;		wreg, status,2, status,0
  1157 ;; Tracked objects:
  1158 ;;		On entry : 0/0
  1159 ;;		On exit  : 0/0
  1160 ;;		Unchanged: 0/0
  1161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1162 ;;      Params:         1       0       0       0       0       0       0
  1163 ;;      Locals:         2       0       0       0       0       0       0
  1164 ;;      Temps:          0       0       0       0       0       0       0
  1165 ;;      Totals:         3       0       0       0       0       0       0
  1166 ;;Total ram usage:        3 bytes
  1167 ;; Hardware stack levels used:    1
  1168 ;; This function calls:
  1169 ;;		Nothing
  1170 ;; This function is called by:
  1171 ;;		_operar
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175                           	psect	text7
  1176  003AC4                     __ptext7:
  1177                           	opt callstack 0
  1178  003AC4                     _resta:
  1179                           	opt callstack 0
  1180  003AC4  FFFF               	dw	65535	; assembler added errata NOP
  1181                           
  1182                           ;incstack = 0
  1183                           ;resta@oper_1 stored from wreg
  1184  003AC6  6E54               	movwf	resta@oper_1^0,c
  1185  003AC8                     
  1186                           ;main.c: 185: return oper_1 - oper_2;
  1187  003AC8  5052               	movf	resta@oper_2^0,w,c
  1188  003ACA  5C54               	subwf	resta@oper_1^0,w,c
  1189  003ACC  0012               	return		;funcret
  1190  003ACE  FFFF               	dw	65535	; errata NOP
  1191  003AD0                     __end_of_resta:
  1192                           	opt callstack 0
  1193                           
  1194 ;; *************** function _or *****************
  1195 ;; Defined at:
  1196 ;;		line 205 in file "main.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;  oper_1          1    wreg     unsigned char 
  1199 ;;  oper_2          1    0[COMRAM] unsigned char 
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;  oper_1          1    1[COMRAM] unsigned char 
  1202 ;; Return value:  Size  Location     Type
  1203 ;;                  1    wreg      unsigned char 
  1204 ;; Registers used:
  1205 ;;		wreg, status,2, status,0
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1211 ;;      Params:         1       0       0       0       0       0       0
  1212 ;;      Locals:         1       0       0       0       0       0       0
  1213 ;;      Temps:          0       0       0       0       0       0       0
  1214 ;;      Totals:         2       0       0       0       0       0       0
  1215 ;;Total ram usage:        2 bytes
  1216 ;; Hardware stack levels used:    1
  1217 ;; This function calls:
  1218 ;;		Nothing
  1219 ;; This function is called by:
  1220 ;;		_operar
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224                           	psect	text8
  1225  003AB8                     __ptext8:
  1226                           	opt callstack 0
  1227  003AB8                     _or:
  1228                           	opt callstack 0
  1229  003AB8  FFFF               	dw	65535	; assembler added errata NOP
  1230                           
  1231                           ;incstack = 0
  1232                           ;or@oper_1 stored from wreg
  1233  003ABA  6E53               	movwf	or@oper_1^0,c
  1234  003ABC                     
  1235                           ;main.c: 206: return oper_1 | oper_2;
  1236  003ABC  5053               	movf	or@oper_1^0,w,c
  1237  003ABE  1052               	iorwf	or@oper_2^0,w,c
  1238  003AC0  0012               	return		;funcret
  1239  003AC2  FFFF               	dw	65535	; errata NOP
  1240  003AC4                     __end_of_or:
  1241                           	opt callstack 0
  1242                           
  1243 ;; *************** function _no_es_primo *****************
  1244 ;; Defined at:
  1245 ;;		line 217 in file "main.c"
  1246 ;; Parameters:    Size  Location     Type
  1247 ;;  num             1    wreg     unsigned char 
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;  num             1    6[COMRAM] unsigned char 
  1250 ;; Return value:  Size  Location     Type
  1251 ;;                  1    wreg      unsigned char 
  1252 ;; Registers used:
  1253 ;;		wreg, status,2, status,0, cstack
  1254 ;; Tracked objects:
  1255 ;;		On entry : 0/0
  1256 ;;		On exit  : 0/0
  1257 ;;		Unchanged: 0/0
  1258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1259 ;;      Params:         0       0       0       0       0       0       0
  1260 ;;      Locals:         1       0       0       0       0       0       0
  1261 ;;      Temps:          0       0       0       0       0       0       0
  1262 ;;      Totals:         1       0       0       0       0       0       0
  1263 ;;Total ram usage:        1 bytes
  1264 ;; Hardware stack levels used:    1
  1265 ;; Hardware stack levels required when called:    2
  1266 ;; This function calls:
  1267 ;;		_module
  1268 ;; This function is called by:
  1269 ;;		_operar
  1270 ;; This function uses a non-reentrant model
  1271 ;;
  1272                           
  1273                           	psect	text9
  1274  003B5E                     __ptext9:
  1275                           	opt callstack 0
  1276  003B5E                     _no_es_primo:
  1277                           	opt callstack 0
  1278  003B5E  FFFF               	dw	65535	; assembler added errata NOP
  1279                           
  1280                           ;incstack = 0
  1281                           ;no_es_primo@num stored from wreg
  1282  003B60  6E58               	movwf	no_es_primo@num^0,c
  1283  003B62                     
  1284                           ;main.c: 218: if (!module(num, 2)) {
  1285  003B62  0E02               	movlw	2
  1286  003B64  6E56               	movwf	module@oper_2^0,c
  1287  003B66  5058               	movf	no_es_primo@num^0,w,c
  1288  003B68  EC7B  F01D         	call	_module
  1289  003B6C  0900               	iorlw	0
  1290  003B6E  A4D8               	btfss	status,2,c
  1291  003B70  EFBC  F01D         	goto	u241
  1292  003B74  EFBF  F01D         	goto	u240
  1293  003B78                     u241:
  1294  003B78  FFFF               	dw	65535	; assembler added errata NOP
  1295  003B7A  EFC3  F01D         	goto	l1273
  1296  003B7E                     u240:
  1297  003B7E  FFFF               	dw	65535	; assembler added errata NOP
  1298  003B80                     
  1299                           ;main.c: 219: return 0;
  1300  003B80  0E00               	movlw	0
  1301  003B82  EFC5  F01D         	goto	l159
  1302  003B86                     l1273:
  1303  003B86  FFFF               	dw	65535	; assembler added errata NOP
  1304                           
  1305                           ;main.c: 220: };main.c: 221: return 1;
  1306  003B88  0E01               	movlw	1
  1307  003B8A                     l159:
  1308  003B8A  FFFF               	dw	65535	; assembler added errata NOP
  1309  003B8C  0012               	return		;funcret
  1310  003B8E  FFFF               	dw	65535	; errata NOP
  1311  003B90                     __end_of_no_es_primo:
  1312                           	opt callstack 0
  1313                           
  1314 ;; *************** function _module *****************
  1315 ;; Defined at:
  1316 ;;		line 197 in file "main.c"
  1317 ;; Parameters:    Size  Location     Type
  1318 ;;  oper_1          1    wreg     unsigned char 
  1319 ;;  oper_2          1    4[COMRAM] unsigned char 
  1320 ;; Auto vars:     Size  Location     Type
  1321 ;;  oper_1          1    5[COMRAM] unsigned char 
  1322 ;; Return value:  Size  Location     Type
  1323 ;;                  1    wreg      unsigned char 
  1324 ;; Registers used:
  1325 ;;		wreg, status,2, status,0, cstack
  1326 ;; Tracked objects:
  1327 ;;		On entry : 0/0
  1328 ;;		On exit  : 0/0
  1329 ;;		Unchanged: 0/0
  1330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1331 ;;      Params:         1       0       0       0       0       0       0
  1332 ;;      Locals:         1       0       0       0       0       0       0
  1333 ;;      Temps:          0       0       0       0       0       0       0
  1334 ;;      Totals:         2       0       0       0       0       0       0
  1335 ;;Total ram usage:        2 bytes
  1336 ;; Hardware stack levels used:    1
  1337 ;; Hardware stack levels required when called:    1
  1338 ;; This function calls:
  1339 ;;		___lbmod
  1340 ;; This function is called by:
  1341 ;;		_operar
  1342 ;;		_no_es_primo
  1343 ;; This function uses a non-reentrant model
  1344 ;;
  1345                           
  1346                           	psect	text10
  1347  003AF6                     __ptext10:
  1348                           	opt callstack 0
  1349  003AF6                     _module:
  1350                           	opt callstack 0
  1351  003AF6  FFFF               	dw	65535	; assembler added errata NOP
  1352                           
  1353                           ;incstack = 0
  1354                           ;module@oper_1 stored from wreg
  1355  003AF8  6E57               	movwf	module@oper_1^0,c
  1356  003AFA                     
  1357                           ;main.c: 198: return oper_1 % oper_2;
  1358  003AFA  C056  F052         	movff	module@oper_2,___lbmod@divisor
  1359  003AFE  5057               	movf	module@oper_1^0,w,c
  1360  003B00  EC04  F01E         	call	___lbmod
  1361  003B04  0012               	return		;funcret
  1362  003B06  FFFF               	dw	65535	; errata NOP
  1363  003B08                     __end_of_module:
  1364                           	opt callstack 0
  1365                           
  1366 ;; *************** function ___lbmod *****************
  1367 ;; Defined at:
  1368 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lbmod.c"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;  dividend        1    wreg     unsigned char 
  1371 ;;  divisor         1    0[COMRAM] unsigned char 
  1372 ;; Auto vars:     Size  Location     Type
  1373 ;;  dividend        1    1[COMRAM] unsigned char 
  1374 ;;  rem             1    3[COMRAM] unsigned char 
  1375 ;;  counter         1    2[COMRAM] unsigned char 
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  1    wreg      unsigned char 
  1378 ;; Registers used:
  1379 ;;		wreg, status,2, status,0
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1385 ;;      Params:         1       0       0       0       0       0       0
  1386 ;;      Locals:         3       0       0       0       0       0       0
  1387 ;;      Temps:          0       0       0       0       0       0       0
  1388 ;;      Totals:         4       0       0       0       0       0       0
  1389 ;;Total ram usage:        4 bytes
  1390 ;; Hardware stack levels used:    1
  1391 ;; This function calls:
  1392 ;;		Nothing
  1393 ;; This function is called by:
  1394 ;;		_module
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           
  1398                           	psect	text11
  1399  003C08                     __ptext11:
  1400                           	opt callstack 0
  1401  003C08                     ___lbmod:
  1402                           	opt callstack 0
  1403  003C08  FFFF               	dw	65535	; assembler added errata NOP
  1404                           
  1405                           ;incstack = 0
  1406                           ;___lbmod@dividend stored from wreg
  1407  003C0A  6E53               	movwf	___lbmod@dividend^0,c
  1408  003C0C  0E08               	movlw	8
  1409  003C0E  6E54               	movwf	___lbmod@counter^0,c
  1410  003C10  0E00               	movlw	0
  1411  003C12  6E55               	movwf	___lbmod@rem^0,c
  1412  003C14                     l1155:
  1413  003C14  FFFF               	dw	65535	; assembler added errata NOP
  1414  003C16  90D8               	bcf	status,0,c
  1415  003C18  3453               	rlcf	___lbmod@dividend^0,w,c
  1416  003C1A  3455               	rlcf	___lbmod@rem^0,w,c
  1417  003C1C  6E55               	movwf	___lbmod@rem^0,c
  1418  003C1E  90D8               	bcf	status,0,c
  1419  003C20  3653               	rlcf	___lbmod@dividend^0,f,c
  1420  003C22  5052               	movf	___lbmod@divisor^0,w,c
  1421  003C24  5C55               	subwf	___lbmod@rem^0,w,c
  1422  003C26  A0D8               	btfss	status,0,c
  1423  003C28  EF18  F01E         	goto	u151
  1424  003C2C  EF1B  F01E         	goto	u150
  1425  003C30                     u151:
  1426  003C30  FFFF               	dw	65535	; assembler added errata NOP
  1427  003C32  EF1E  F01E         	goto	l1163
  1428  003C36                     u150:
  1429  003C36  FFFF               	dw	65535	; assembler added errata NOP
  1430  003C38  5052               	movf	___lbmod@divisor^0,w,c
  1431  003C3A  5E55               	subwf	___lbmod@rem^0,f,c
  1432  003C3C                     l1163:
  1433  003C3C  FFFF               	dw	65535	; assembler added errata NOP
  1434  003C3E  2E54               	decfsz	___lbmod@counter^0,f,c
  1435  003C40  EF0A  F01E         	goto	l1155
  1436  003C44  5055               	movf	___lbmod@rem^0,w,c
  1437  003C46  0012               	return		;funcret
  1438  003C48  FFFF               	dw	65535	; errata NOP
  1439  003C4A                     __end_of___lbmod:
  1440                           	opt callstack 0
  1441                           
  1442 ;; *************** function _nand *****************
  1443 ;; Defined at:
  1444 ;;		line 209 in file "main.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;  oper_1          1    wreg     unsigned char 
  1447 ;;  oper_2          1    2[COMRAM] unsigned char 
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;  oper_1          1    3[COMRAM] unsigned char 
  1450 ;; Return value:  Size  Location     Type
  1451 ;;                  1    wreg      unsigned char 
  1452 ;; Registers used:
  1453 ;;		wreg, status,2, status,0, cstack
  1454 ;; Tracked objects:
  1455 ;;		On entry : 0/0
  1456 ;;		On exit  : 0/0
  1457 ;;		Unchanged: 0/0
  1458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1459 ;;      Params:         1       0       0       0       0       0       0
  1460 ;;      Locals:         1       0       0       0       0       0       0
  1461 ;;      Temps:          0       0       0       0       0       0       0
  1462 ;;      Totals:         2       0       0       0       0       0       0
  1463 ;;Total ram usage:        2 bytes
  1464 ;; Hardware stack levels used:    1
  1465 ;; Hardware stack levels required when called:    1
  1466 ;; This function calls:
  1467 ;;		_and
  1468 ;; This function is called by:
  1469 ;;		_operar
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473                           	psect	text12
  1474  003B08                     __ptext12:
  1475                           	opt callstack 0
  1476  003B08                     _nand:
  1477                           	opt callstack 0
  1478  003B08  FFFF               	dw	65535	; assembler added errata NOP
  1479                           
  1480                           ;incstack = 0
  1481                           ;nand@oper_1 stored from wreg
  1482  003B0A  6E55               	movwf	nand@oper_1^0,c
  1483  003B0C                     
  1484                           ;main.c: 210: return ~(and(oper_1, oper_2));
  1485  003B0C  C054  F052         	movff	nand@oper_2,and@oper_2
  1486  003B10  5055               	movf	nand@oper_1^0,w,c
  1487  003B12  EC56  F01D         	call	_and
  1488  003B16  0AFF               	xorlw	255
  1489  003B18  0012               	return		;funcret
  1490  003B1A  FFFF               	dw	65535	; errata NOP
  1491  003B1C                     __end_of_nand:
  1492                           	opt callstack 0
  1493                           
  1494 ;; *************** function _and *****************
  1495 ;; Defined at:
  1496 ;;		line 201 in file "main.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;  oper_1          1    wreg     unsigned char 
  1499 ;;  oper_2          1    0[COMRAM] unsigned char 
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;  oper_1          1    1[COMRAM] unsigned char 
  1502 ;; Return value:  Size  Location     Type
  1503 ;;                  1    wreg      unsigned char 
  1504 ;; Registers used:
  1505 ;;		wreg, status,2, status,0
  1506 ;; Tracked objects:
  1507 ;;		On entry : 0/0
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1511 ;;      Params:         1       0       0       0       0       0       0
  1512 ;;      Locals:         1       0       0       0       0       0       0
  1513 ;;      Temps:          0       0       0       0       0       0       0
  1514 ;;      Totals:         2       0       0       0       0       0       0
  1515 ;;Total ram usage:        2 bytes
  1516 ;; Hardware stack levels used:    1
  1517 ;; This function calls:
  1518 ;;		Nothing
  1519 ;; This function is called by:
  1520 ;;		_operar
  1521 ;;		_nand
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524                           
  1525                           	psect	text13
  1526  003AAC                     __ptext13:
  1527                           	opt callstack 0
  1528  003AAC                     _and:
  1529                           	opt callstack 0
  1530  003AAC  FFFF               	dw	65535	; assembler added errata NOP
  1531                           
  1532                           ;incstack = 0
  1533                           ;and@oper_1 stored from wreg
  1534  003AAE  6E53               	movwf	and@oper_1^0,c
  1535  003AB0                     
  1536                           ;main.c: 202: return oper_1 & oper_2;
  1537  003AB0  5053               	movf	and@oper_1^0,w,c
  1538  003AB2  1452               	andwf	and@oper_2^0,w,c
  1539  003AB4  0012               	return		;funcret
  1540  003AB6  FFFF               	dw	65535	; errata NOP
  1541  003AB8                     __end_of_and:
  1542                           	opt callstack 0
  1543                           
  1544 ;; *************** function _multi *****************
  1545 ;; Defined at:
  1546 ;;		line 188 in file "main.c"
  1547 ;; Parameters:    Size  Location     Type
  1548 ;;  oper_1          1    wreg     unsigned char 
  1549 ;;  oper_2          1    0[COMRAM] unsigned char 
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;  oper_1          1    1[COMRAM] unsigned char 
  1552 ;; Return value:  Size  Location     Type
  1553 ;;                  1    wreg      unsigned char 
  1554 ;; Registers used:
  1555 ;;		wreg, status,2, status,0, prodl, prodh
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1561 ;;      Params:         1       0       0       0       0       0       0
  1562 ;;      Locals:         1       0       0       0       0       0       0
  1563 ;;      Temps:          0       0       0       0       0       0       0
  1564 ;;      Totals:         2       0       0       0       0       0       0
  1565 ;;Total ram usage:        2 bytes
  1566 ;; Hardware stack levels used:    1
  1567 ;; This function calls:
  1568 ;;		Nothing
  1569 ;; This function is called by:
  1570 ;;		_operar
  1571 ;; This function uses a non-reentrant model
  1572 ;;
  1573                           
  1574                           	psect	text14
  1575  003AE8                     __ptext14:
  1576                           	opt callstack 0
  1577  003AE8                     _multi:
  1578                           	opt callstack 0
  1579  003AE8  FFFF               	dw	65535	; assembler added errata NOP
  1580                           
  1581                           ;incstack = 0
  1582                           ;multi@oper_1 stored from wreg
  1583  003AEA  6E53               	movwf	multi@oper_1^0,c
  1584  003AEC                     
  1585                           ;main.c: 189: return oper_1 * oper_2;
  1586  003AEC  5053               	movf	multi@oper_1^0,w,c
  1587  003AEE  0252               	mulwf	multi@oper_2^0,c
  1588  003AF0  50F3               	movf	243,w,c
  1589  003AF2  0012               	return		;funcret
  1590  003AF4  FFFF               	dw	65535	; errata NOP
  1591  003AF6                     __end_of_multi:
  1592                           	opt callstack 0
  1593                           
  1594 ;; *************** function _division *****************
  1595 ;; Defined at:
  1596 ;;		line 192 in file "main.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;  oper_1          1    wreg     unsigned char 
  1599 ;;  oper_2          1    4[COMRAM] unsigned char 
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;  oper_1          1    5[COMRAM] unsigned char 
  1602 ;;  result          1    6[COMRAM] unsigned char 
  1603 ;; Return value:  Size  Location     Type
  1604 ;;                  1    wreg      unsigned char 
  1605 ;; Registers used:
  1606 ;;		wreg, status,2, status,0, cstack
  1607 ;; Tracked objects:
  1608 ;;		On entry : 0/0
  1609 ;;		On exit  : 0/0
  1610 ;;		Unchanged: 0/0
  1611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1612 ;;      Params:         1       0       0       0       0       0       0
  1613 ;;      Locals:         2       0       0       0       0       0       0
  1614 ;;      Temps:          0       0       0       0       0       0       0
  1615 ;;      Totals:         3       0       0       0       0       0       0
  1616 ;;Total ram usage:        3 bytes
  1617 ;; Hardware stack levels used:    1
  1618 ;; Hardware stack levels required when called:    1
  1619 ;; This function calls:
  1620 ;;		___lbdiv
  1621 ;; This function is called by:
  1622 ;;		_operar
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           
  1626                           	psect	text15
  1627  003B1C                     __ptext15:
  1628                           	opt callstack 0
  1629  003B1C                     _division:
  1630                           	opt callstack 0
  1631  003B1C  FFFF               	dw	65535	; assembler added errata NOP
  1632                           
  1633                           ;incstack = 0
  1634                           ;division@oper_1 stored from wreg
  1635  003B1E  6E57               	movwf	division@oper_1^0,c
  1636  003B20                     
  1637                           ;main.c: 193: char result = oper_1 / oper_2;
  1638  003B20  C056  F052         	movff	division@oper_2,___lbdiv@divisor
  1639  003B24  5057               	movf	division@oper_1^0,w,c
  1640  003B26  EC7E  F01E         	call	___lbdiv
  1641  003B2A  6E58               	movwf	division@result^0,c
  1642  003B2C                     
  1643                           ;main.c: 194: return result;
  1644  003B2C  5058               	movf	division@result^0,w,c
  1645  003B2E  0012               	return		;funcret
  1646  003B30  FFFF               	dw	65535	; errata NOP
  1647  003B32                     __end_of_division:
  1648                           	opt callstack 0
  1649                           
  1650 ;; *************** function ___lbdiv *****************
  1651 ;; Defined at:
  1652 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lbdiv.c"
  1653 ;; Parameters:    Size  Location     Type
  1654 ;;  dividend        1    wreg     unsigned char 
  1655 ;;  divisor         1    0[COMRAM] unsigned char 
  1656 ;; Auto vars:     Size  Location     Type
  1657 ;;  dividend        1    1[COMRAM] unsigned char 
  1658 ;;  quotient        1    3[COMRAM] unsigned char 
  1659 ;;  counter         1    2[COMRAM] unsigned char 
  1660 ;; Return value:  Size  Location     Type
  1661 ;;                  1    wreg      unsigned char 
  1662 ;; Registers used:
  1663 ;;		wreg, status,2, status,0
  1664 ;; Tracked objects:
  1665 ;;		On entry : 0/0
  1666 ;;		On exit  : 0/0
  1667 ;;		Unchanged: 0/0
  1668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1669 ;;      Params:         1       0       0       0       0       0       0
  1670 ;;      Locals:         3       0       0       0       0       0       0
  1671 ;;      Temps:          0       0       0       0       0       0       0
  1672 ;;      Totals:         4       0       0       0       0       0       0
  1673 ;;Total ram usage:        4 bytes
  1674 ;; Hardware stack levels used:    1
  1675 ;; This function calls:
  1676 ;;		Nothing
  1677 ;; This function is called by:
  1678 ;;		_division
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           	psect	text16
  1683  003CFC                     __ptext16:
  1684                           	opt callstack 0
  1685  003CFC                     ___lbdiv:
  1686                           	opt callstack 0
  1687  003CFC  FFFF               	dw	65535	; assembler added errata NOP
  1688                           
  1689                           ;incstack = 0
  1690                           ;___lbdiv@dividend stored from wreg
  1691  003CFE  6E53               	movwf	___lbdiv@dividend^0,c
  1692  003D00  0E00               	movlw	0
  1693  003D02  6E55               	movwf	___lbdiv@quotient^0,c
  1694  003D04  5052               	movf	___lbdiv@divisor^0,w,c
  1695  003D06  B4D8               	btfsc	status,2,c
  1696  003D08  EF88  F01E         	goto	u181
  1697  003D0C  EF8B  F01E         	goto	u180
  1698  003D10                     u181:
  1699  003D10  FFFF               	dw	65535	; assembler added errata NOP
  1700  003D12  EFB5  F01E         	goto	l1209
  1701  003D16                     u180:
  1702  003D16  FFFF               	dw	65535	; assembler added errata NOP
  1703  003D18  0E01               	movlw	1
  1704  003D1A  6E54               	movwf	___lbdiv@counter^0,c
  1705  003D1C  EF94  F01E         	goto	l1197
  1706  003D20                     l1193:
  1707  003D20  FFFF               	dw	65535	; assembler added errata NOP
  1708  003D22  90D8               	bcf	status,0,c
  1709  003D24  3652               	rlcf	___lbdiv@divisor^0,f,c
  1710  003D26  2A54               	incf	___lbdiv@counter^0,f,c
  1711  003D28                     l1197:
  1712  003D28  FFFF               	dw	65535	; assembler added errata NOP
  1713  003D2A  AE52               	btfss	___lbdiv@divisor^0,7,c
  1714  003D2C  EF9A  F01E         	goto	u191
  1715  003D30  EF9D  F01E         	goto	u190
  1716  003D34                     u191:
  1717  003D34  FFFF               	dw	65535	; assembler added errata NOP
  1718  003D36  EF90  F01E         	goto	l1193
  1719  003D3A                     u190:
  1720  003D3A  FFFF               	dw	65535	; assembler added errata NOP
  1721  003D3C                     l1199:
  1722  003D3C  FFFF               	dw	65535	; assembler added errata NOP
  1723  003D3E  90D8               	bcf	status,0,c
  1724  003D40  3655               	rlcf	___lbdiv@quotient^0,f,c
  1725  003D42  5052               	movf	___lbdiv@divisor^0,w,c
  1726  003D44  5C53               	subwf	___lbdiv@dividend^0,w,c
  1727  003D46  A0D8               	btfss	status,0,c
  1728  003D48  EFA8  F01E         	goto	u201
  1729  003D4C  EFAB  F01E         	goto	u200
  1730  003D50                     u201:
  1731  003D50  FFFF               	dw	65535	; assembler added errata NOP
  1732  003D52  EFAF  F01E         	goto	l1205
  1733  003D56                     u200:
  1734  003D56  FFFF               	dw	65535	; assembler added errata NOP
  1735  003D58  5052               	movf	___lbdiv@divisor^0,w,c
  1736  003D5A  5E53               	subwf	___lbdiv@dividend^0,f,c
  1737  003D5C  8055               	bsf	___lbdiv@quotient^0,0,c
  1738  003D5E                     l1205:
  1739  003D5E  FFFF               	dw	65535	; assembler added errata NOP
  1740  003D60  90D8               	bcf	status,0,c
  1741  003D62  3252               	rrcf	___lbdiv@divisor^0,f,c
  1742  003D64  2E54               	decfsz	___lbdiv@counter^0,f,c
  1743  003D66  EF9E  F01E         	goto	l1199
  1744  003D6A                     l1209:
  1745  003D6A  FFFF               	dw	65535	; assembler added errata NOP
  1746  003D6C  5055               	movf	___lbdiv@quotient^0,w,c
  1747  003D6E  0012               	return		;funcret
  1748  003D70  FFFF               	dw	65535	; errata NOP
  1749  003D72                     __end_of___lbdiv:
  1750                           	opt callstack 0
  1751                           
  1752 ;; *************** function _init_config *****************
  1753 ;; Defined at:
  1754 ;;		line 82 in file "main.c"
  1755 ;; Parameters:    Size  Location     Type
  1756 ;;		None
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;		None
  1759 ;; Return value:  Size  Location     Type
  1760 ;;                  1    wreg      void 
  1761 ;; Registers used:
  1762 ;;		wreg, status,2
  1763 ;; Tracked objects:
  1764 ;;		On entry : 0/0
  1765 ;;		On exit  : 0/0
  1766 ;;		Unchanged: 0/0
  1767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1768 ;;      Params:         0       0       0       0       0       0       0
  1769 ;;      Locals:         0       0       0       0       0       0       0
  1770 ;;      Temps:          0       0       0       0       0       0       0
  1771 ;;      Totals:         0       0       0       0       0       0       0
  1772 ;;Total ram usage:        0 bytes
  1773 ;; Hardware stack levels used:    1
  1774 ;; This function calls:
  1775 ;;		Nothing
  1776 ;; This function is called by:
  1777 ;;		_main
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781                           	psect	text17
  1782  003BC6                     __ptext17:
  1783                           	opt callstack 0
  1784  003BC6                     _init_config:
  1785                           	opt callstack 0
  1786  003BC6  FFFF               	dw	65535	; assembler added errata NOP
  1787  003BC8                     
  1788                           ;main.c: 83: ADCON1 = 0X06;
  1789  003BC8  0E06               	movlw	6
  1790  003BCA  6EC1               	movwf	193,c	;volatile
  1791                           
  1792                           ;main.c: 85: TRISA = 0B00000000;
  1793  003BCC  0E00               	movlw	0
  1794  003BCE  6E92               	movwf	146,c	;volatile
  1795                           
  1796                           ;main.c: 86: LATA = 0;
  1797  003BD0  0E00               	movlw	0
  1798  003BD2  6E89               	movwf	137,c	;volatile
  1799                           
  1800                           ;main.c: 87: PORTA = 0;
  1801  003BD4  0E00               	movlw	0
  1802  003BD6  6E80               	movwf	128,c	;volatile
  1803  003BD8                     
  1804                           ;main.c: 89: TRISB = 0B11111111;
  1805  003BD8  6893               	setf	147,c	;volatile
  1806                           
  1807                           ;main.c: 90: LATB = 0;
  1808  003BDA  0E00               	movlw	0
  1809  003BDC  6E8A               	movwf	138,c	;volatile
  1810  003BDE                     
  1811                           ;main.c: 91: PORTB = 0B11111111;
  1812  003BDE  6881               	setf	129,c	;volatile
  1813  003BE0                     
  1814                           ;main.c: 93: TRISC = 0B11111111;
  1815  003BE0  6894               	setf	148,c	;volatile
  1816                           
  1817                           ;main.c: 94: LATC = 0;
  1818  003BE2  0E00               	movlw	0
  1819  003BE4  6E8B               	movwf	139,c	;volatile
  1820                           
  1821                           ;main.c: 95: PORTC = 0;
  1822  003BE6  0E00               	movlw	0
  1823  003BE8  6E82               	movwf	130,c	;volatile
  1824                           
  1825                           ;main.c: 97: TRISD = 0B00000000;
  1826  003BEA  0E00               	movlw	0
  1827  003BEC  6E95               	movwf	149,c	;volatile
  1828                           
  1829                           ;main.c: 98: LATD = 0;
  1830  003BEE  0E00               	movlw	0
  1831  003BF0  6E8C               	movwf	140,c	;volatile
  1832                           
  1833                           ;main.c: 99: PORTD = 0;
  1834  003BF2  0E00               	movlw	0
  1835  003BF4  6E83               	movwf	131,c	;volatile
  1836                           
  1837                           ;main.c: 101: TRISE = 0B00000000;
  1838  003BF6  0E00               	movlw	0
  1839  003BF8  6E96               	movwf	150,c	;volatile
  1840                           
  1841                           ;main.c: 102: LATE = 0;
  1842  003BFA  0E00               	movlw	0
  1843  003BFC  6E8D               	movwf	141,c	;volatile
  1844                           
  1845                           ;main.c: 103: PORTE = 0;
  1846  003BFE  0E00               	movlw	0
  1847  003C00  6E84               	movwf	132,c	;volatile
  1848  003C02  0012               	return		;funcret
  1849  003C04  FFFF               	dw	65535	; errata NOP
  1850  003C06                     __end_of_init_config:
  1851                           	opt callstack 0
  1852  003C06  FFFF               	dw	65535	; assembler added errata NOP
  1853                           
  1854                           	psect	rparam
  1855  0000                     tosu	equ	0xFFF
  1856                           tosh	equ	0xFFE
  1857                           tosl	equ	0xFFD
  1858                           stkptr	equ	0xFFC
  1859                           pclatu	equ	0xFFB
  1860                           pclath	equ	0xFFA
  1861                           pcl	equ	0xFF9
  1862                           tblptru	equ	0xFF8
  1863                           tblptrh	equ	0xFF7
  1864                           tblptrl	equ	0xFF6
  1865                           tablat	equ	0xFF5
  1866                           prodh	equ	0xFF4
  1867                           prodl	equ	0xFF3
  1868                           indf0	equ	0xFEF
  1869                           postinc0	equ	0xFEE
  1870                           postdec0	equ	0xFED
  1871                           preinc0	equ	0xFEC
  1872                           plusw0	equ	0xFEB
  1873                           fsr0h	equ	0xFEA
  1874                           fsr0l	equ	0xFE9
  1875                           wreg	equ	0xFE8
  1876                           indf1	equ	0xFE7
  1877                           postinc1	equ	0xFE6
  1878                           postdec1	equ	0xFE5
  1879                           preinc1	equ	0xFE4
  1880                           plusw1	equ	0xFE3
  1881                           fsr1h	equ	0xFE2
  1882                           fsr1l	equ	0xFE1
  1883                           bsr	equ	0xFE0
  1884                           indf2	equ	0xFDF
  1885                           postinc2	equ	0xFDE
  1886                           postdec2	equ	0xFDD
  1887                           preinc2	equ	0xFDC
  1888                           plusw2	equ	0xFDB
  1889                           fsr2h	equ	0xFDA
  1890                           fsr2l	equ	0xFD9
  1891                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        81
    BSS         1
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     17     103
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_see_full_operation
    _see_full_operation->_visualizar
    _visualizar->_tolower
    _operar->_division
    _operar->_no_es_primo
    _no_es_primo->_module
    _module->___lbmod
    _nand->_and
    _division->___lbdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6252
                                             15 COMRAM     2     2      0
                        _init_config
                             _operar
                 _see_full_operation
                         _visualizar
 ---------------------------------------------------------------------------------
 (1) _see_full_operation                                   4     2      2    1671
                                             11 COMRAM     4     2      2
                         _visualizar
 ---------------------------------------------------------------------------------
 (1) _visualizar                                          10     7      3    1453
                                              1 COMRAM    10     7      3
                            _tolower
 ---------------------------------------------------------------------------------
 (2) _tolower                                              1     1      0      67
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _operar                                               3     1      2    3036
                                              7 COMRAM     3     1      2
                                _and
                           _division
                             _module
                              _multi
                               _nand
                        _no_es_primo
                                 _or
                              _resta
                               _suma
                                _xor
 ---------------------------------------------------------------------------------
 (2) _xor                                                  2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _suma                                                 2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _resta                                                3     2      1     165
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (2) _or                                                   2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _no_es_primo                                          1     1      0     453
                                              6 COMRAM     1     1      0
                             _module
 ---------------------------------------------------------------------------------
 (3) _module                                               2     1      1     431
                                              4 COMRAM     2     1      1
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1     235
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _nand                                                 2     1      1     316
                                              2 COMRAM     2     1      1
                                _and
 ---------------------------------------------------------------------------------
 (3) _and                                                  2     1      1     196
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _multi                                                2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _division                                             3     2      1     381
                                              4 COMRAM     3     2      1
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1     238
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_config
   _operar
     _and
     _division
       ___lbdiv
     _module
       ___lbmod
     _multi
     _nand
       _and
     _no_es_primo
       _module
         ___lbmod
     _or
     _resta
     _suma
     _xor
   _see_full_operation
     _visualizar
       _tolower
   _visualizar
     _tolower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     11      67       1       81.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      67      15        0.0%
DATA                 0      0      67       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 26 00:35:52 2020

                                                               l97 3C02  
                                                               _or 3AB8  
                                                      __CFG_OSC$XT 000000  
                                                              l111 3CF8  
                                                              l106 3EA2  
                                                              l131 3AD8  
                                                              l140 3B2E  
                                                              l116 3FFA  
                                                              l108 3ED0  
                                                              l134 3ACC  
                                                              l143 3B04  
                                                              l152 3B18  
                                                              l137 3AF2  
                                                              l146 3AB4  
                                                              l155 3AE4  
                                                              ?_or 0052  
                                                              l149 3AC0  
                                                              l159 3B8A  
                                                              l562 3C46  
                                                              l556 3D6E  
                                                              l825 3BC2  
                                                              _LA3 007C4B  
                                                              _LA5 007C4D  
                                                              u200 3D56  
                                                              u201 3D50  
                                                              u210 3E1E  
                                                              u211 3E18  
                                                              u220 3E98  
                                                              u221 3E92  
                                                              u150 3C36  
                                                              u230 3ECE  
                                                              u151 3C30  
                                                              u231 3EC8  
                                                              u240 3B7E  
                                                              u160 3BA6  
                                                              u241 3B78  
                                                              u161 3BA0  
                                                              u250 3F90  
                                                              u170 3BBA  
                                                              u251 3F88  
                                                              u171 3BB4  
                                                              u307 3EB0  
                                                              u180 3D16  
                                                              u260 3F94  
                                                              u181 3D10  
                                                              u190 3D3A  
                                                              u270 3DC4  
                                                              u191 3D34  
                                                              u271 3DBE  
                                                              u280 3DF2  
                                                              u281 3DEC  
                                                              u297 3CEE  
                                                     __CFG_BOR$OFF 000000  
                                                              _and 3AAC  
                                                              _xor 3ADC  
                                                              wreg 000FE8  
                                                             ??_or 0053  
                                                     __CFG_LVP$OFF 000000  
                                                     __CFG_WDT$OFF 000000  
                                                             l1041 3BE0  
                                                             l1201 3D58  
                                                             l1035 3BC8  
                                                             l1203 3D5C  
                                                             l1037 3BD8  
                                                             l1205 3D5E  
                                                             l1221 3E20  
                                                             l1213 3E00  
                                                             l1039 3BDE  
                                                             l1207 3D64  
                                                             l1303 3F1C  
                                                             l1231 3E9A  
                                                             l1223 3E4E  
                                                             l1209 3D6A  
                                                             l1161 3C38  
                                                             l1153 3C0C  
                                                             l1241 3AC8  
                                                             l1321 3F4C  
                                                             l1233 3EA8  
                                                             l1225 3E7A  
                                                             l1251 3B2C  
                                                             l1163 3C3C  
                                                             l1155 3C14  
                                                             l1315 3F3C  
                                                             l1171 3BA8  
                                                             l1235 3EBA  
                                                             l1227 3E80  
                                                             l1219 3E04  
                                                             ?_and 0052  
                                                             l1245 3AEC  
                                                             l1165 3C44  
                                                             l1157 3C1E  
                                                             l1237 3AD4  
                                                             l1333 3F6C  
                                                             l1309 3F2C  
                                                             l1173 3BBC  
                                                             l1229 3E86  
                                                             l1191 3D18  
                                                             l1183 3AB0  
                                                             l1159 3C22  
                                                             l1255 3ABC  
                                                             l1263 3AE0  
                                                             l1327 3F5C  
                                                             l1175 3BBE  
                                                             l1351 3CE8  
                                                             l1193 3D20  
                                                             l1249 3B20  
                                                             l1273 3B86  
                                                             l1169 3B94  
                                                             l1361 3D8C  
                                                             l1353 3D72  
                                                             l1195 3D26  
                                                             l1187 3D00  
                                                             l1259 3B0C  
                                                             l1179 3AFA  
                                                             l1267 3B62  
                                                             l1339 3F78  
                                                             l1291 3EFC  
                                                             l1347 3F9A  
                                                             l1371 3DB0  
                                                             l1363 3D9C  
                                                             l1355 3D78  
                                                             l1197 3D28  
                                                             l1189 3D04  
                                                             l1269 3B80  
                                                             l1285 3EEC  
                                                             l1277 3ED8  
                                                             l1349 3CA0  
                                                             l1381 3DCA  
                                                             l1373 3DB2  
                                                             l1357 3D80  
                                                             l1199 3D3C  
                                                             l1279 3EDC  
                                                             l1383 3DDE  
                                                             l1375 3DC6  
                                                             l1359 3D86  
                                                             l1297 3F0C  
                                                             l1385 3DE0  
                                                             l1369 3DA0  
                                                             ?_xor 0052  
                                                             _LATA 000F89  
                                                             _LATB 000F8A  
                                                             _LATC 000F8B  
                                                             _LATD 000F8C  
                                                             _LATE 000F8D  
                                      __size_of_see_full_operation 0060  
                                                     __CFG_PWRT$ON 000000  
                                                             _main 3D72  
                                                             _nand 3B08  
                                                             _oper 0064  
                                                             indf2 000FDF  
                                                             fsr1l 000FE1  
                                                             fsr2l 000FD9  
                                                             _suma 3AD0  
                                                             prodh 000FF4  
                                                             prodl 000FF3  
                                                             start 0002  
                                                     ___param_bank 000000  
                                                            ??_and 0053  
                                                            ??_xor 0053  
                                                            ?_main 0052  
                                                            ?_nand 0054  
                                                  __end_of___lbdiv 3D72  
                                                  __end_of___lbmod 3C4A  
                                                            ?_suma 0052  
                                                     ?_init_config 0052  
                                                            _PORTA 000F80  
                                                            _PORTB 000F81  
                                                            _PORTC 000F82  
                                                            _PORTD 000F83  
                                                            _PORTE 000F84  
                                                            _TRISA 000F92  
                                                            _TRISB 000F93  
                                                            _TRISC 000F94  
                                                            _TRISD 000F95  
                                                            _TRISE 000F96  
                                                            _input 0067  
                                                            _resta 3AC4  
                                                            _multi 3AE8  
                                                            main@i 0061  
                                                            tablat 000FF5  
                                                            status 000FD8  
                                                  __end_of_tolower 3BC6  
                                                  ___lbdiv@divisor 0052  
                                                  ___lbdiv@counter 0054  
                                                     ?_no_es_primo 0052  
                                                  __initialization 3B32  
                                                     __end_of_main 3DFC  
                                                     __end_of_nand 3B1C  
                                                     __end_of_suma 3ADC  
                                                           ??_main 0061  
                                                           ??_nand 0055  
                                                           ??_suma 0053  
                                                    __activetblptr 000002  
                                                           _ADCON1 000FC1  
                                                           ?_resta 0052  
                                                           ?_multi 0052  
                                                           _NUMERO 0001  
                                                 __end_of_division 3B32  
                                                        ??___lbdiv 0053  
                                                        ??___lbmod 0053  
                                         see_full_operation@oper_1 0060  
                                         see_full_operation@oper_2 005D  
                                                           _oper_1 0066  
                                                           _oper_2 0065  
                                                           _module 3AF6  
                                                           _operar 3ED4  
                                                     __pdataCOMRAM 0001  
                                                           tblptrh 000FF7  
                                                           tblptrl 000FF6  
                                                           tblptru 000FF8  
                                                        ??_tolower 0052  
                                                 ___lbdiv@dividend 0053  
                                                  ___lbmod@divisor 0052  
                                                       __accesstop 0080  
                                          __end_of__initialization 3B54  
                                                  ___lbmod@counter 0054  
                                                    ___rparam_used 000001  
                                                   __pcstackCOMRAM 0052  
                                                    __end_of_resta 3AD0  
                                                    __end_of_multi 3AF6  
                                                 ___lbdiv@quotient 0055  
                                                       __end_of_or 3AC4  
                                             __size_of_init_config 0040  
                                               visualizar@position 0053  
                                                          ??_resta 0053  
                                                          ??_multi 0053  
                                                       __pnvCOMRAM 0063  
                                             __size_of_no_es_primo 0032  
                                                          ?_module 0056  
                                                          ?_operar 0059  
                                                   no_es_primo@num 0058  
                                                          _SIMBOLO 0031  
                                       __end_of_see_full_operation 3CFC  
                                                        ?_division 0056  
                                                   visualizar@from 0054  
                                                          __Hparam 0000  
                                                          __Lparam 0000  
                                                          ___lbdiv 3CFC  
                                                          ___lbmod 3C08  
                                                          __pcinit 3B32  
                                                   _visualizar$161 005A  
                                                          __ramtop 0600  
                                                  __size_of_module 0012  
                                                  __size_of_operar 012C  
                                                          __ptext0 3D72  
                                                          __ptext1 3C9C  
                                                          __ptext2 3DFC  
                                                          __ptext3 3B90  
                                                          __ptext4 3ED4  
                                                          __ptext5 3ADC  
                                                          __ptext6 3AD0  
                                                          __ptext7 3AC4  
                                                          __ptext8 3AB8  
                                                          __ptext9 3B5E  
                                                      resta@oper_1 0054  
                                                      resta@oper_2 0052  
                                                     __size_of_and 000C  
                                                     __size_of_xor 000C  
                                                          _tolower 3B90  
                                             end_of_initialization 3B54  
                                                       ??_division 0057  
                                                    __Lmediumconst 0000  
                                                          postdec1 000FE5  
                                                          postinc0 000FEE  
                                                      multi@oper_1 0053  
                                                      multi@oper_2 0052  
                                                 ___lbmod@dividend 0053  
                                                      ___lbmod@rem 0055  
                                                       _visualizar 3DFC  
                                                       nand@oper_1 0055  
                                                       nand@oper_2 0054  
                                                    __pidataCOMRAM 3C4B  
                                           see_full_operation@oper 005E  
                                                   __end_of_module 3B08  
                                                   __end_of_operar 4000  
                                              start_initialization 3B32  
                                                 visualizar@enable 0055  
                                                   division@oper_1 0057  
                                                   division@oper_2 0056  
                                                      __end_of_and 3AB8  
                                                      __end_of_xor 3AE8  
                                                   division@result 0058  
                                                         ??_module 0057  
                                                         ??_operar 005B  
                                                    ??_init_config 0052  
                                                      __pbssCOMRAM 0067  
                                                __size_of_division 0016  
                                                      ?_visualizar 0053  
                                                    ??_no_es_primo 0058  
                                               _see_full_operation 3C9C  
                                                         ?___lbdiv 0052  
                                                         ?___lbmod 0052  
                                                      visualizar@x 005C  
                                                     module@oper_1 0057  
                                                     module@oper_2 0056  
                                                        and@oper_1 0053  
                                                        and@oper_2 0052  
                                              ?_see_full_operation 005D  
                                                    visualizar@SoN 0059  
                                                       operar@oper 005B  
                                                         ?_tolower 0052  
                                              __end_of_init_config 3C06  
                                                   __size_of_resta 000C  
                                                   __size_of_multi 000E  
                                             ??_see_full_operation 005F  
                                                      __size_of_or 000C  
                                                        _resultado 0063  
                                              __end_of_no_es_primo 3B90  
                                                        main@i_153 0062  
                                              __size_of_visualizar 00D8  
                                                        copy_data0 3B46  
                                                       suma@oper_1 0053  
                                                       suma@oper_2 0052  
                                                         __Hrparam 0000  
                                                         __Lrparam 0000  
                                                 __size_of___lbdiv 0076  
                                                 __size_of___lbmod 0042  
                                                     operar@oper_1 0059  
                                                     operar@oper_2 005A  
                                                      _init_config 3BC6  
                                                         __ptext10 3AF6  
                                                         __ptext11 3C08  
                                                         __ptext12 3B08  
                                                         __ptext13 3AAC  
                                                         __ptext14 3AE8  
                                                         __ptext15 3B1C  
                                                         __ptext16 3CFC  
                                                         __ptext17 3BC6  
                                                         _division 3B1C  
                                                 __size_of_tolower 0036  
                                                    __size_of_main 008A  
                                                    __size_of_nand 0014  
                                                    __size_of_suma 000C  
                                                      _no_es_primo 3B5E  
                                                         or@oper_1 0053  
                                                         or@oper_2 0052  
                                                        xor@oper_1 0053  
                                                        xor@oper_2 0052  
                                                     ??_visualizar 0056  
                                                         tolower@c 0052  
                                               __end_of_visualizar 3ED4  
