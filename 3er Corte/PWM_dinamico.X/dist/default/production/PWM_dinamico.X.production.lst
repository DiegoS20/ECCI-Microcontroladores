

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue May 05 14:34:53 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37  0000                     
    38                           ; Version 2.05
    39                           ; Generated 20/12/2018 GMT
    40                           ; 
    41                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F452 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     
    73                           	psect	idataBANK1
    74  000FF4                     __pidataBANK1:
    75                           	opt callstack 0
    76                           
    77                           ;initializer for _cu2
    78  000FF4  19                 	db	25
    79                           
    80                           ;initializer for _cu1
    81  000FF5  4B                 	db	75
    82                           
    83                           	psect	smallconst
    84  000600                     __psmallconst:
    85                           	opt callstack 0
    86  000600  00                 	db	0
    87  000601                     _dpowers:
    88                           	opt callstack 0
    89  000601  0001               	dw	1
    90  000603  000A               	dw	10
    91  000605  0064               	dw	100
    92  000607  03E8               	dw	1000
    93  000609  2710               	dw	10000
    94  00060B                     __end_of_dpowers:
    95                           	opt callstack 0
    96  0000                     _TXREG	set	4013
    97  0000                     _TXSTAbits	set	4012
    98  0000                     _RCREG	set	4014
    99  0000                     _PIR1bits	set	3998
   100  0000                     _T2CON	set	4042
   101  0000                     _CCPR2L	set	4027
   102  0000                     _CCPR1L	set	4030
   103  0000                     _PR2	set	4043
   104  0000                     _CCP2CON	set	4026
   105  0000                     _CCP1CON	set	4029
   106  0000                     _RCSTA	set	4011
   107  0000                     _TXSTA	set	4012
   108  0000                     _IPR1	set	3999
   109  0000                     _PIR1	set	3998
   110  0000                     _PIE1	set	3997
   111  0000                     _SPBRG	set	4015
   112  0000                     _RCONbits	set	4048
   113  0000                     _INTCON	set	4082
   114  0000                     _PORTD	set	3971
   115  0000                     _PORTC	set	3970
   116  0000                     _LATD	set	3980
   117  0000                     _LATC	set	3979
   118  0000                     _TRISD	set	3989
   119  0000                     _TRISC	set	3988
   120  0000                     _LC4	set	31836
   121  0000                     _LC3	set	31835
   122  00060B                     STR_8:
   123  00060B  45                 	db	69	;'E'
   124  00060C  6C                 	db	108	;'l'
   125  00060D  20                 	db	32
   126  00060E  76                 	db	118	;'v'
   127  00060F  61                 	db	97	;'a'
   128  000610  6C                 	db	108	;'l'
   129  000611  6F                 	db	111	;'o'
   130  000612  72                 	db	114	;'r'
   131  000613  20                 	db	32
   132  000614  64                 	db	100	;'d'
   133  000615  65                 	db	101	;'e'
   134  000616  20                 	db	32
   135  000617  6C                 	db	108	;'l'
   136  000618  61                 	db	97	;'a'
   137  000619  20                 	db	32
   138  00061A  73                 	db	115	;'s'
   139  00061B  65                 	db	101	;'e'
   140  00061C  6E                 	db	110	;'n'
   141  00061D  69                 	db	105	;'i'
   142  00061E  61                 	db	97	;'a'
   143  00061F  6C                 	db	108	;'l'
   144  000620  20                 	db	32
   145  000621  64                 	db	100	;'d'
   146  000622  65                 	db	101	;'e'
   147  000623  62                 	db	98	;'b'
   148  000624  65                 	db	101	;'e'
   149  000625  20                 	db	32
   150  000626  65                 	db	101	;'e'
   151  000627  73                 	db	115	;'s'
   152  000628  74                 	db	116	;'t'
   153  000629  61                 	db	97	;'a'
   154  00062A  72                 	db	114	;'r'
   155  00062B  20                 	db	32
   156  00062C  65                 	db	101	;'e'
   157  00062D  6E                 	db	110	;'n'
   158  00062E  74                 	db	116	;'t'
   159  00062F  72                 	db	114	;'r'
   160  000630  65                 	db	101	;'e'
   161  000631  20                 	db	32
   162  000632  30                 	db	48	;'0'
   163  000633  20                 	db	32
   164  000634  79                 	db	121	;'y'
   165  000635  20                 	db	32
   166  000636  31                 	db	49	;'1'
   167  000637  30                 	db	48	;'0'
   168  000638  30                 	db	48	;'0'
   169  000639  0A                 	db	10
   170  00063A  0D                 	db	13
   171  00063B  00                 	db	0
   172  00063C                     STR_12:
   173  00063C  53                 	db	83	;'S'
   174  00063D  6F                 	db	111	;'o'
   175  00063E  6C                 	db	108	;'l'
   176  00063F  6F                 	db	111	;'o'
   177  000640  20                 	db	32
   178  000641  70                 	db	112	;'p'
   179  000642  75                 	db	117	;'u'
   180  000643  65                 	db	101	;'e'
   181  000644  64                 	db	100	;'d'
   182  000645  65                 	db	101	;'e'
   183  000646  73                 	db	115	;'s'
   184  000647  20                 	db	32
   185  000648  65                 	db	101	;'e'
   186  000649  6E                 	db	110	;'n'
   187  00064A  76                 	db	118	;'v'
   188  00064B  69                 	db	105	;'i'
   189  00064C  61                 	db	97	;'a'
   190  00064D  72                 	db	114	;'r'
   191  00064E  20                 	db	32
   192  00064F  6E                 	db	110	;'n'
   193  000650  75                 	db	117	;'u'
   194  000651  6D                 	db	109	;'m'
   195  000652  65                 	db	101	;'e'
   196  000653  72                 	db	114	;'r'
   197  000654  6F                 	db	111	;'o'
   198  000655  73                 	db	115	;'s'
   199  000656  0A                 	db	10
   200  000657  0D                 	db	13
   201  000658  00                 	db	0
   202  000659                     STR_9:
   203  000659  4C                 	db	76	;'L'
   204  00065A  61                 	db	97	;'a'
   205  00065B  20                 	db	32
   206  00065C  6F                 	db	111	;'o'
   207  00065D  70                 	db	112	;'p'
   208  00065E  63                 	db	99	;'c'
   209  00065F  69                 	db	105	;'i'
   210  000660  6F                 	db	111	;'o'
   211  000661  6E                 	db	110	;'n'
   212  000662  20                 	db	32
   213  000663  6E                 	db	110	;'n'
   214  000664  6F                 	db	111	;'o'
   215  000665  20                 	db	32
   216  000666  65                 	db	101	;'e'
   217  000667  73                 	db	115	;'s'
   218  000668  20                 	db	32
   219  000669  76                 	db	118	;'v'
   220  00066A  61                 	db	97	;'a'
   221  00066B  6C                 	db	108	;'l'
   222  00066C  69                 	db	105	;'i'
   223  00066D  64                 	db	100	;'d'
   224  00066E  61                 	db	97	;'a'
   225  00066F  0A                 	db	10
   226  000670  0D                 	db	13
   227  000671  00                 	db	0
   228  000672                     STR_3:
   229  000672  41                 	db	65	;'A'
   230  000673  6D                 	db	109	;'m'
   231  000674  62                 	db	98	;'b'
   232  000675  61                 	db	97	;'a'
   233  000676  73                 	db	115	;'s'
   234  000677  20                 	db	32
   235  000678  73                 	db	115	;'s'
   236  000679  65                 	db	101	;'e'
   237  00067A  6E                 	db	110	;'n'
   238  00067B  69                 	db	105	;'i'
   239  00067C  61                 	db	97	;'a'
   240  00067D  6C                 	db	108	;'l'
   241  00067E  65                 	db	101	;'e'
   242  00067F  73                 	db	115	;'s'
   243  000680  3A                 	db	58	;':'
   244  000681  20                 	db	32
   245  000682  62                 	db	98	;'b'
   246  000683  20                 	db	32
   247  000684  0A                 	db	10
   248  000685  0D                 	db	13
   249  000686  00                 	db	0
   250  000687                     STR_1:
   251  000687  53                 	db	83	;'S'
   252  000688  65                 	db	101	;'e'
   253  000689  6E                 	db	110	;'n'
   254  00068A  69                 	db	105	;'i'
   255  00068B  61                 	db	97	;'a'
   256  00068C  6C                 	db	108	;'l'
   257  00068D  20                 	db	32
   258  00068E  31                 	db	49	;'1'
   259  00068F  3A                 	db	58	;':'
   260  000690  20                 	db	32
   261  000691  6F                 	db	111	;'o'
   262  000692  20                 	db	32
   263  000693  0A                 	db	10
   264  000694  0D                 	db	13
   265  000695  00                 	db	0
   266  000696                     STR_2:
   267  000696  53                 	db	83	;'S'
   268  000697  65                 	db	101	;'e'
   269  000698  6E                 	db	110	;'n'
   270  000699  69                 	db	105	;'i'
   271  00069A  61                 	db	97	;'a'
   272  00069B  6C                 	db	108	;'l'
   273  00069C  20                 	db	32
   274  00069D  32                 	db	50	;'2'
   275  00069E  3A                 	db	58	;':'
   276  00069F  20                 	db	32
   277  0006A0  74                 	db	116	;'t'
   278  0006A1  20                 	db	32
   279  0006A2  0A                 	db	10
   280  0006A3  0D                 	db	13
   281  0006A4  00                 	db	0
   282  0006A5                     STR_5:
   283  0006A5  46                 	db	70	;'F'
   284  0006A6  72                 	db	114	;'r'
   285  0006A7  65                 	db	101	;'e'
   286  0006A8  71                 	db	113	;'q'
   287  0006A9  3A                 	db	58	;':'
   288  0006AA  32                 	db	50	;'2'
   289  0006AB  39                 	db	57	;'9'
   290  0006AC  2E                 	db	46
   291  0006AD  34                 	db	52	;'4'
   292  0006AE  6B                 	db	107	;'k'
   293  0006AF  48                 	db	72	;'H'
   294  0006B0  7A                 	db	122	;'z'
   295  0006B1  00                 	db	0
   296  0006B2                     STR_7:
   297  0006B2  43                 	db	67	;'C'
   298  0006B3  55                 	db	85	;'U'
   299  0006B4  32                 	db	50	;'2'
   300  0006B5  3A                 	db	58	;':'
   301  0006B6  25                 	db	37
   302  0006B7  69                 	db	105	;'i'
   303  0006B8  25                 	db	37
   304  0006B9  25                 	db	37
   305  0006BA  20                 	db	32
   306  0006BB  20                 	db	32
   307  0006BC  00                 	db	0
   308  0006BD                     STR_6:
   309  0006BD  43                 	db	67	;'C'
   310  0006BE  55                 	db	85	;'U'
   311  0006BF  31                 	db	49	;'1'
   312  0006C0  3A                 	db	58	;':'
   313  0006C1  25                 	db	37
   314  0006C2  69                 	db	105	;'i'
   315  0006C3  25                 	db	37
   316  0006C4  25                 	db	37
   317  0006C5  20                 	db	32
   318  0006C6  00                 	db	0
   319  0000                     
   320                           ; #config settings
   321  0006C7  00                 	db	0	; dummy byte at the end
   322  0000                     
   323                           	psect	cinit
   324  000EB8                     __pcinit:
   325                           	opt callstack 0
   326  000EB8                     start_initialization:
   327                           	opt callstack 0
   328  000EB8                     __initialization:
   329                           	opt callstack 0
   330                           
   331                           ; Initialize objects allocated to BANK1 (2 bytes)
   332                           ; load TBLPTR registers with __pidataBANK1
   333  000EB8  0EF4               	movlw	low __pidataBANK1
   334  000EBA  6EF6               	movwf	tblptrl,c
   335  000EBC  0E0F               	movlw	high __pidataBANK1
   336  000EBE  6EF7               	movwf	tblptrh,c
   337  000EC0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   338  000EC2  6EF8               	movwf	tblptru,c
   339  000EC4  0009               	tblrd		*+	;fetch initializer
   340  000EC6  CFF5 F1CE          	movff	tablat,__pdataBANK1
   341  000ECA  0009               	tblrd		*+	;fetch initializer
   342  000ECC  CFF5 F1CF          	movff	tablat,__pdataBANK1+1
   343                           
   344                           ; Clear objects allocated to BANK1 (5 bytes)
   345  000ED0  0101               	movlb	1
   346  000ED2  6BCD               	clrf	(__pbssBANK1+4)& (0+255),b
   347  000ED4  6BCC               	clrf	(__pbssBANK1+3)& (0+255),b
   348  000ED6  6BCB               	clrf	(__pbssBANK1+2)& (0+255),b
   349  000ED8  6BCA               	clrf	(__pbssBANK1+1)& (0+255),b
   350  000EDA  6BC9               	clrf	__pbssBANK1& (0+255),b
   351  000EDC                     end_of_initialization:
   352                           	opt callstack 0
   353  000EDC                     __end_of__initialization:
   354                           	opt callstack 0
   355  000EDC  9033               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   356  000EDE  9233               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   357  000EE0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   358  000EE2  6EF8               	movwf	tblptru,c
   359  000EE4  0100               	movlb	0
   360  000EE6  EF64  F003         	goto	_main	;jump to C main() function
   361                           
   362                           	psect	bssBANK1
   363  0001C9                     __pbssBANK1:
   364                           	opt callstack 0
   365  0001C9                     _cu_flag:
   366                           	opt callstack 0
   367  0001C9                     	ds	1
   368  0001CA                     _cu_changed:
   369                           	opt callstack 0
   370  0001CA                     	ds	1
   371  0001CB                     _cu:
   372                           	opt callstack 0
   373  0001CB                     	ds	3
   374                           
   375                           	psect	dataBANK1
   376  0001CE                     __pdataBANK1:
   377                           	opt callstack 0
   378  0001CE                     _cu2:
   379                           	opt callstack 0
   380  0001CE                     	ds	1
   381  0001CF                     _cu1:
   382                           	opt callstack 0
   383  0001CF                     	ds	1
   384                           
   385                           	psect	cstackBANK1
   386  000100                     __pcstackBANK1:
   387                           	opt callstack 0
   388  000100                     main@f1_m:
   389                           	opt callstack 0
   390                           
   391                           ; 50 bytes @ 0x0
   392  000100                     	ds	50
   393  000132                     main@f2_m:
   394                           	opt callstack 0
   395                           
   396                           ; 50 bytes @ 0x32
   397  000132                     	ds	50
   398  000164                     main@f1_m_306:
   399                           	opt callstack 0
   400                           
   401                           ; 50 bytes @ 0x64
   402  000164                     	ds	50
   403  000196                     main@f2_m_308:
   404                           	opt callstack 0
   405                           
   406                           ; 50 bytes @ 0x96
   407  000196                     	ds	50
   408  0001C8                     main@i:
   409                           	opt callstack 0
   410                           
   411                           ; 1 bytes @ 0xC8
   412  0001C8                     	ds	1
   413                           
   414                           	psect	cstackCOMRAM
   415  000001                     __pcstackCOMRAM:
   416                           	opt callstack 0
   417  000001                     ??i2_isdigit:
   418  000001                     ?i2_strlen:
   419                           	opt callstack 0
   420  000001                     i2strlen@s:
   421                           	opt callstack 0
   422                           
   423                           ; 2 bytes @ 0x0
   424  000001                     	ds	1
   425  000002                     i2isdigit@c:
   426                           	opt callstack 0
   427                           
   428                           ; 1 bytes @ 0x1
   429  000002                     	ds	1
   430  000003                     i2_isdigit$834:
   431                           	opt callstack 0
   432  000003                     i2strlen@cp:
   433                           	opt callstack 0
   434                           
   435                           ; 2 bytes @ 0x2
   436  000003                     	ds	2
   437  000005                     i2transmit@response:
   438                           	opt callstack 0
   439                           
   440                           ; 2 bytes @ 0x4
   441  000005                     	ds	2
   442  000007                     ??i2_transmit:
   443                           
   444                           ; 1 bytes @ 0x6
   445  000007                     	ds	2
   446  000009                     i2transmit@i:
   447                           	opt callstack 0
   448                           
   449                           ; 1 bytes @ 0x8
   450  000009                     	ds	1
   451  00000A                     ??_capture:
   452                           
   453                           ; 1 bytes @ 0x9
   454  00000A                     	ds	8
   455  000012                     capture@data_received:
   456                           	opt callstack 0
   457                           
   458                           ; 1 bytes @ 0x11
   459  000012                     	ds	1
   460  000013                     ??_isdigit:
   461  000013                     ?_strlen:
   462                           	opt callstack 0
   463  000013                     ?___wmul:
   464                           	opt callstack 0
   465  000013                     R_I@dato:
   466                           	opt callstack 0
   467  000013                     R_D@dato:
   468                           	opt callstack 0
   469  000013                     ___wmul@multiplier:
   470                           	opt callstack 0
   471  000013                     strlen@s:
   472                           	opt callstack 0
   473                           
   474                           ; 2 bytes @ 0x12
   475  000013                     	ds	1
   476  000014                     ??_init_LCD:
   477  000014                     _isdigit$834:
   478                           	opt callstack 0
   479                           
   480                           ; 1 bytes @ 0x13
   481  000014                     	ds	1
   482  000015                     isdigit@c:
   483                           	opt callstack 0
   484  000015                     ___wmul@multiplicand:
   485                           	opt callstack 0
   486  000015                     strlen@cp:
   487                           	opt callstack 0
   488                           
   489                           ; 2 bytes @ 0x14
   490  000015                     	ds	2
   491  000017                     print_message_onLCD@message:
   492                           	opt callstack 0
   493  000017                     transmit@response:
   494                           	opt callstack 0
   495  000017                     ___wmul@product:
   496                           	opt callstack 0
   497                           
   498                           ; 2 bytes @ 0x16
   499  000017                     	ds	2
   500  000019                     ??_transmit:
   501  000019                     ?_atoi:
   502                           	opt callstack 0
   503  000019                     ?___lwdiv:
   504                           	opt callstack 0
   505  000019                     print_message_onLCD@place:
   506                           	opt callstack 0
   507  000019                     ___lwdiv@dividend:
   508                           	opt callstack 0
   509  000019                     atoi@s:
   510                           	opt callstack 0
   511                           
   512                           ; 2 bytes @ 0x18
   513  000019                     	ds	1
   514  00001A                     ??_print_message_onLCD:
   515                           
   516                           ; 1 bytes @ 0x19
   517  00001A                     	ds	1
   518  00001B                     ??_atoi:
   519  00001B                     transmit@i:
   520                           	opt callstack 0
   521  00001B                     ___lwdiv@divisor:
   522                           	opt callstack 0
   523                           
   524                           ; 2 bytes @ 0x1A
   525  00001B                     	ds	1
   526  00001C                     print_message_onLCD@i:
   527                           	opt callstack 0
   528                           
   529                           ; 1 bytes @ 0x1B
   530  00001C                     	ds	1
   531  00001D                     atoi@sign:
   532                           	opt callstack 0
   533  00001D                     ___lwdiv@quotient:
   534                           	opt callstack 0
   535                           
   536                           ; 2 bytes @ 0x1C
   537  00001D                     	ds	1
   538  00001E                     atoi@a:
   539                           	opt callstack 0
   540                           
   541                           ; 2 bytes @ 0x1D
   542  00001E                     	ds	1
   543  00001F                     ___lwdiv@counter:
   544                           	opt callstack 0
   545                           
   546                           ; 1 bytes @ 0x1E
   547  00001F                     	ds	1
   548  000020                     ?___lwmod:
   549                           	opt callstack 0
   550  000020                     PWM1@ciclo_util:
   551                           	opt callstack 0
   552  000020                     PWM2@ciclo_util:
   553                           	opt callstack 0
   554  000020                     ___lwmod@dividend:
   555                           	opt callstack 0
   556                           
   557                           ; 2 bytes @ 0x1F
   558  000020                     	ds	2
   559  000022                     ??_PWM1:
   560  000022                     ??_PWM2:
   561  000022                     ___lwmod@divisor:
   562                           	opt callstack 0
   563                           
   564                           ; 2 bytes @ 0x21
   565  000022                     	ds	2
   566  000024                     ___lwmod@counter:
   567                           	opt callstack 0
   568  000024                     PWM1@t_alto:
   569                           	opt callstack 0
   570  000024                     PWM2@t_alto:
   571                           	opt callstack 0
   572                           
   573                           ; 2 bytes @ 0x23
   574  000024                     	ds	1
   575  000025                     ?_sprintf:
   576                           	opt callstack 0
   577  000025                     sprintf@sp:
   578                           	opt callstack 0
   579                           
   580                           ; 2 bytes @ 0x24
   581  000025                     	ds	2
   582  000027                     sprintf@f:
   583                           	opt callstack 0
   584                           
   585                           ; 2 bytes @ 0x26
   586  000027                     	ds	4
   587  00002B                     ??_sprintf:
   588                           
   589                           ; 1 bytes @ 0x2A
   590  00002B                     	ds	1
   591  00002C                     sprintf@ap:
   592                           	opt callstack 0
   593                           
   594                           ; 2 bytes @ 0x2B
   595  00002C                     	ds	2
   596  00002E                     sprintf@flag:
   597                           	opt callstack 0
   598                           
   599                           ; 1 bytes @ 0x2D
   600  00002E                     	ds	1
   601  00002F                     sprintf@prec:
   602                           	opt callstack 0
   603                           
   604                           ; 1 bytes @ 0x2E
   605  00002F                     	ds	1
   606  000030                     sprintf@val:
   607                           	opt callstack 0
   608                           
   609                           ; 2 bytes @ 0x2F
   610  000030                     	ds	2
   611  000032                     sprintf@c:
   612                           	opt callstack 0
   613                           
   614                           ; 1 bytes @ 0x31
   615  000032                     	ds	1
   616  000033                     
   617                           ; 1 bytes @ 0x32
   618 ;;
   619 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   620 ;;
   621 ;; *************** function _main *****************
   622 ;; Defined at:
   623 ;;		line 40 in file "main.c"
   624 ;; Parameters:    Size  Location     Type
   625 ;;		None
   626 ;; Auto vars:     Size  Location     Type
   627 ;;  i               1  200[BANK1 ] unsigned char 
   628 ;;  f2_m           50  150[BANK1 ] unsigned char [50]
   629 ;;  f1_m           50  100[BANK1 ] unsigned char [50]
   630 ;;  f2_m           50   50[BANK1 ] unsigned char [50]
   631 ;;  f1_m           50    0[BANK1 ] unsigned char [50]
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   641 ;;      Params:         0       0       0       0       0       0       0
   642 ;;      Locals:         0       0     201       0       0       0       0
   643 ;;      Temps:          0       0       0       0       0       0       0
   644 ;;      Totals:         0       0     201       0       0       0       0
   645 ;;Total ram usage:      201 bytes
   646 ;; Hardware stack levels required when called:    5
   647 ;; This function calls:
   648 ;;		_PWM1
   649 ;;		_PWM2
   650 ;;		_PWM_config
   651 ;;		_atoi
   652 ;;		_init_LCD
   653 ;;		_initial_config
   654 ;;		_print_message_onLCD
   655 ;;		_serial_transmi_init_config
   656 ;;		_sprintf
   657 ;;		_transmit
   658 ;; This function is called by:
   659 ;;		Startup code after reset
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           	psect	text0
   664  0006C8                     __ptext0:
   665                           	opt callstack 0
   666  0006C8                     _main:
   667                           	opt callstack 0
   668  0006C8  FFFF               	dw	65535	; assembler added errata NOP
   669                           
   670                           ;main.c: 41: initial_config();
   671                           
   672                           ;incstack = 0
   673  0006CA  ECC0  F007         	call	_initial_config	;wreg free
   674                           
   675                           ;main.c: 42: serial_transmi_init_config();
   676  0006CE  EC8A  F007         	call	_serial_transmi_init_config	;wreg free
   677                           
   678                           ;main.c: 43: PWM_config();
   679  0006D2  ECCF  F007         	call	_PWM_config	;wreg free
   680                           
   681                           ;main.c: 44: init_LCD();
   682  0006D6  EC6A  F006         	call	_init_LCD	;wreg free
   683                           
   684                           ;main.c: 46: transmit("Senial 1: o \n\r");
   685  0006DA  0E87               	movlw	low STR_1
   686  0006DC  6E17               	movwf	transmit@response,c
   687  0006DE  0E06               	movlw	high STR_1
   688  0006E0  6E18               	movwf	transmit@response+1,c
   689  0006E2  EC96  F006         	call	_transmit	;wreg free
   690                           
   691                           ;main.c: 47: transmit("Senial 2: t \n\r");
   692  0006E6  0E96               	movlw	low STR_2
   693  0006E8  6E17               	movwf	transmit@response,c
   694  0006EA  0E06               	movlw	high STR_2
   695  0006EC  6E18               	movwf	transmit@response+1,c
   696  0006EE  EC96  F006         	call	_transmit	;wreg free
   697                           
   698                           ;main.c: 48: transmit("Ambas seniales: b \n\r");
   699  0006F2  0E72               	movlw	low STR_3
   700  0006F4  6E17               	movwf	transmit@response,c
   701  0006F6  0E06               	movlw	high STR_3
   702  0006F8  6E18               	movwf	transmit@response+1,c
   703  0006FA  EC96  F006         	call	_transmit	;wreg free
   704                           
   705                           ;main.c: 49: transmit("\n\r");
   706  0006FE  0E84               	movlw	low (STR_3+18)
   707  000700  6E17               	movwf	transmit@response,c
   708  000702  0E06               	movlw	high (STR_3+18)
   709  000704  6E18               	movwf	transmit@response+1,c
   710  000706  EC96  F006         	call	_transmit	;wreg free
   711                           
   712                           ;main.c: 51: PWM1(cu1);
   713  00070A  C1CF  F020         	movff	_cu1,PWM1@ciclo_util
   714  00070E  6A21               	clrf	PWM1@ciclo_util+1,c
   715  000710  ECC5  F005         	call	_PWM1	;wreg free
   716                           
   717                           ;main.c: 52: PWM2(cu2);
   718  000714  C1CE  F020         	movff	_cu2,PWM2@ciclo_util
   719  000718  6A21               	clrf	PWM2@ciclo_util+1,c
   720  00071A  EC89  F005         	call	_PWM2	;wreg free
   721                           
   722                           ;main.c: 53: print_message_onLCD("Freq:29.4kHz", 128);
   723  00071E  0EA5               	movlw	low STR_5
   724  000720  6E17               	movwf	print_message_onLCD@message,c
   725  000722  0E06               	movlw	high STR_5
   726  000724  6E18               	movwf	print_message_onLCD@message+1,c
   727  000726  0E80               	movlw	128
   728  000728  6E19               	movwf	print_message_onLCD@place,c
   729  00072A  EC01  F006         	call	_print_message_onLCD	;wreg free
   730                           
   731                           ;main.c: 54: char f1_m[50];;main.c: 55: sprintf(f1_m, "CU1:%i%% ", cu1);
   732  00072E  0E00               	movlw	low main@f1_m
   733  000730  6E25               	movwf	sprintf@sp,c
   734  000732  0E01               	movlw	high main@f1_m
   735  000734  6E26               	movwf	sprintf@sp+1,c
   736  000736  0EBD               	movlw	low STR_6
   737  000738  6E27               	movwf	sprintf@f,c
   738  00073A  0E06               	movlw	high STR_6
   739  00073C  6E28               	movwf	sprintf@f+1,c
   740  00073E  C1CF  F029         	movff	_cu1,?_sprintf+4
   741  000742  6A2A               	clrf	?_sprintf+5,c
   742  000744  EC61  F004         	call	_sprintf	;wreg free
   743                           
   744                           ;main.c: 56: print_message_onLCD(f1_m, 192);
   745  000748  0E00               	movlw	low main@f1_m
   746  00074A  6E17               	movwf	print_message_onLCD@message,c
   747  00074C  0E01               	movlw	high main@f1_m
   748  00074E  6E18               	movwf	print_message_onLCD@message+1,c
   749  000750  0EC0               	movlw	192
   750  000752  6E19               	movwf	print_message_onLCD@place,c
   751  000754  EC01  F006         	call	_print_message_onLCD	;wreg free
   752                           
   753                           ;main.c: 57: char f2_m[50];;main.c: 58: sprintf(f2_m, "CU2:%i%%  ", cu2);
   754  000758  0E32               	movlw	low main@f2_m
   755  00075A  6E25               	movwf	sprintf@sp,c
   756  00075C  0E01               	movlw	high main@f2_m
   757  00075E  6E26               	movwf	sprintf@sp+1,c
   758  000760  0EB2               	movlw	low STR_7
   759  000762  6E27               	movwf	sprintf@f,c
   760  000764  0E06               	movlw	high STR_7
   761  000766  6E28               	movwf	sprintf@f+1,c
   762  000768  C1CE  F029         	movff	_cu2,?_sprintf+4
   763  00076C  6A2A               	clrf	?_sprintf+5,c
   764  00076E  EC61  F004         	call	_sprintf	;wreg free
   765                           
   766                           ;main.c: 59: print_message_onLCD(f2_m, 0);
   767  000772  0E32               	movlw	low main@f2_m
   768  000774  6E17               	movwf	print_message_onLCD@message,c
   769  000776  0E01               	movlw	high main@f2_m
   770  000778  6E18               	movwf	print_message_onLCD@message+1,c
   771  00077A  0E00               	movlw	0
   772  00077C  6E19               	movwf	print_message_onLCD@place,c
   773  00077E  EC01  F006         	call	_print_message_onLCD	;wreg free
   774  000782                     l1601:
   775  000782  FFFF               	dw	65535	; assembler added errata NOP
   776                           
   777                           ;main.c: 62: if (cu_changed) {
   778  000784  0101               	movlb	1	; () banked
   779  000786  51CA               	movf	_cu_changed& (0+255),w,b
   780  000788  B4D8               	btfsc	status,2,c
   781  00078A  D7FB               	goto	l1601
   782                           
   783                           ; BSR set to: 1
   784                           ;main.c: 63: if (100 < atoi(cu)) {
   785  00078C  0ECB               	movlw	low _cu
   786  00078E  6E19               	movwf	atoi@s,c
   787  000790  0E01               	movlw	high _cu
   788  000792  6E1A               	movwf	atoi@s+1,c
   789  000794  EC18  F005         	call	_atoi	;wreg free
   790  000798  BE1A               	btfsc	?_atoi+1,7,c
   791  00079A  D03D               	goto	l1617
   792  00079C  501A               	movf	?_atoi+1,w,c
   793  00079E  E104               	bnz	u780
   794  0007A0  0E65               	movlw	101
   795  0007A2  5C19               	subwf	?_atoi,w,c
   796  0007A4  A0D8               	btfss	status,0,c
   797  0007A6  D037               	goto	l1617
   798  0007A8                     u780:
   799                           
   800                           ;main.c: 64: transmit("El valor de la senial debe estar entre 0 y 100\n\r");
   801  0007A8  0E0B               	movlw	low STR_8
   802  0007AA  6E17               	movwf	transmit@response,c
   803  0007AC  0E06               	movlw	high STR_8
   804  0007AE  6E18               	movwf	transmit@response+1,c
   805  0007B0  EC96  F006         	call	_transmit	;wreg free
   806                           
   807                           ;main.c: 65: } else {
   808  0007B4  D072               	goto	l1629
   809  0007B6                     l1607:
   810  0007B6  FFFF               	dw	65535	; assembler added errata NOP
   811                           
   812                           ; BSR set to: 1
   813                           ;main.c: 68: cu1 = atoi(cu);
   814  0007B8  0ECB               	movlw	low _cu
   815  0007BA  6E19               	movwf	atoi@s,c
   816  0007BC  0E01               	movlw	high _cu
   817  0007BE  6E1A               	movwf	atoi@s+1,c
   818  0007C0  EC18  F005         	call	_atoi	;wreg free
   819  0007C4  5019               	movf	?_atoi,w,c
   820  0007C6  0101               	movlb	1	; () banked
   821  0007C8  6FCF               	movwf	_cu1& (0+255),b
   822                           
   823                           ;main.c: 69: break;
   824  0007CA  D032               	goto	l1619
   825  0007CC                     l1609:
   826  0007CC  FFFF               	dw	65535	; assembler added errata NOP
   827                           
   828                           ; BSR set to: 1
   829                           ;main.c: 71: cu2 = atoi(cu);
   830  0007CE  0ECB               	movlw	low _cu
   831  0007D0  6E19               	movwf	atoi@s,c
   832  0007D2  0E01               	movlw	high _cu
   833  0007D4  6E1A               	movwf	atoi@s+1,c
   834  0007D6  EC18  F005         	call	_atoi	;wreg free
   835  0007DA  D010               	goto	L1
   836  0007DC                     l1611:
   837  0007DC  FFFF               	dw	65535	; assembler added errata NOP
   838                           
   839                           ; BSR set to: 1
   840                           ;main.c: 74: cu1 = atoi(cu);
   841  0007DE  0ECB               	movlw	low _cu
   842  0007E0  6E19               	movwf	atoi@s,c
   843  0007E2  0E01               	movlw	high _cu
   844  0007E4  6E1A               	movwf	atoi@s+1,c
   845  0007E6  EC18  F005         	call	_atoi	;wreg free
   846  0007EA  5019               	movf	?_atoi,w,c
   847  0007EC  0101               	movlb	1	; () banked
   848  0007EE  6FCF               	movwf	_cu1& (0+255),b
   849                           
   850                           ;main.c: 75: cu2 = atoi(cu);
   851  0007F0  0ECB               	movlw	low _cu
   852  0007F2  6E19               	movwf	atoi@s,c
   853  0007F4  0E01               	movlw	high _cu
   854  0007F6  6E1A               	movwf	atoi@s+1,c
   855  0007F8  EC18  F005         	call	_atoi	;wreg free
   856  0007FC                     L1:
   857  0007FC  FFFF               	dw	65535	; assembler added errata NOP
   858  0007FE  5019               	movf	?_atoi,w,c
   859  000800  0101               	movlb	1	; () banked
   860  000802  6FCE               	movwf	_cu2& (0+255),b
   861                           
   862                           ;main.c: 76: break;
   863  000804  D015               	goto	l1619
   864  000806                     l1613:
   865  000806  FFFF               	dw	65535	; assembler added errata NOP
   866                           
   867                           ; BSR set to: 1
   868                           ;main.c: 78: transmit("La opcion no es valida\n\r");
   869  000808  0E59               	movlw	low STR_9
   870  00080A  6E17               	movwf	transmit@response,c
   871  00080C  0E06               	movlw	high STR_9
   872  00080E  6E18               	movwf	transmit@response+1,c
   873  000810  EC96  F006         	call	_transmit	;wreg free
   874                           
   875                           ;main.c: 79: break;
   876  000814  D00D               	goto	l1619
   877  000816                     l1617:
   878  000816  FFFF               	dw	65535	; assembler added errata NOP
   879  000818  0101               	movlb	1	; () banked
   880  00081A  51C9               	movf	_cu_flag& (0+255),w,b
   881                           
   882                           ; Switch size 1, requested type "simple"
   883                           ; Number of cases is 3, Range of values is 98 to 116
   884                           ; switch strategies available:
   885                           ; Name         Instructions Cycles
   886                           ; simple_byte           10     6 (average)
   887                           ;	Chosen strategy is simple_byte
   888  00081C  0A62               	xorlw	98	; case 98
   889  00081E  B4D8               	btfsc	status,2,c
   890  000820  D7DD               	goto	l1611
   891  000822  0A0D               	xorlw	13	; case 111
   892  000824  B4D8               	btfsc	status,2,c
   893  000826  D7C7               	goto	l1607
   894  000828  0A1B               	xorlw	27	; case 116
   895  00082A  B4D8               	btfsc	status,2,c
   896  00082C  D7CF               	goto	l1609
   897  00082E  D7EB               	goto	l1613
   898  000830                     l1619:
   899  000830  FFFF               	dw	65535	; assembler added errata NOP
   900                           
   901                           ;main.c: 81: PWM1(cu1);
   902  000832  C1CF  F020         	movff	_cu1,PWM1@ciclo_util
   903  000836  6A21               	clrf	PWM1@ciclo_util+1,c
   904  000838  ECC5  F005         	call	_PWM1	;wreg free
   905                           
   906                           ;main.c: 82: PWM2(cu2);
   907  00083C  C1CE  F020         	movff	_cu2,PWM2@ciclo_util
   908  000840  6A21               	clrf	PWM2@ciclo_util+1,c
   909  000842  EC89  F005         	call	_PWM2	;wreg free
   910                           
   911                           ;main.c: 83: char f1_m[50];;main.c: 84: sprintf(f1_m, "CU1:%i%% ", cu1);
   912  000846  0E64               	movlw	low main@f1_m_306
   913  000848  6E25               	movwf	sprintf@sp,c
   914  00084A  0E01               	movlw	high main@f1_m_306
   915  00084C  6E26               	movwf	sprintf@sp+1,c
   916  00084E  0EBD               	movlw	low STR_6
   917  000850  6E27               	movwf	sprintf@f,c
   918  000852  0E06               	movlw	high STR_6
   919  000854  6E28               	movwf	sprintf@f+1,c
   920  000856  C1CF  F029         	movff	_cu1,?_sprintf+4
   921  00085A  6A2A               	clrf	?_sprintf+5,c
   922  00085C  EC61  F004         	call	_sprintf	;wreg free
   923                           
   924                           ;main.c: 85: print_message_onLCD(f1_m, 192);
   925  000860  0E64               	movlw	low main@f1_m_306
   926  000862  6E17               	movwf	print_message_onLCD@message,c
   927  000864  0E01               	movlw	high main@f1_m_306
   928  000866  6E18               	movwf	print_message_onLCD@message+1,c
   929  000868  0EC0               	movlw	192
   930  00086A  6E19               	movwf	print_message_onLCD@place,c
   931  00086C  EC01  F006         	call	_print_message_onLCD	;wreg free
   932                           
   933                           ;main.c: 86: char f2_m[50];;main.c: 87: sprintf(f2_m, "CU2:%i%%  ", cu2);
   934  000870  0E96               	movlw	low main@f2_m_308
   935  000872  6E25               	movwf	sprintf@sp,c
   936  000874  0E01               	movlw	high main@f2_m_308
   937  000876  6E26               	movwf	sprintf@sp+1,c
   938  000878  0EB2               	movlw	low STR_7
   939  00087A  6E27               	movwf	sprintf@f,c
   940  00087C  0E06               	movlw	high STR_7
   941  00087E  6E28               	movwf	sprintf@f+1,c
   942  000880  C1CE  F029         	movff	_cu2,?_sprintf+4
   943  000884  6A2A               	clrf	?_sprintf+5,c
   944  000886  EC61  F004         	call	_sprintf	;wreg free
   945                           
   946                           ;main.c: 88: print_message_onLCD(f2_m, 0);
   947  00088A  0E96               	movlw	low main@f2_m_308
   948  00088C  6E17               	movwf	print_message_onLCD@message,c
   949  00088E  0E01               	movlw	high main@f2_m_308
   950  000890  6E18               	movwf	print_message_onLCD@message+1,c
   951  000892  0E00               	movlw	0
   952  000894  6E19               	movwf	print_message_onLCD@place,c
   953  000896  EC01  F006         	call	_print_message_onLCD	;wreg free
   954  00089A                     l1629:
   955  00089A  FFFF               	dw	65535	; assembler added errata NOP
   956                           
   957                           ;main.c: 89: };main.c: 90: for (char i = 0; i < 3; i++) {
   958  00089C  0E00               	movlw	0
   959  00089E  0101               	movlb	1	; () banked
   960  0008A0  6FC8               	movwf	main@i& (0+255),b
   961  0008A2                     l1635:
   962  0008A2  FFFF               	dw	65535	; assembler added errata NOP
   963                           
   964                           ; BSR set to: 1
   965                           ;main.c: 91: cu[i] = '\0';
   966  0008A4  0ECB               	movlw	low _cu
   967  0008A6  25C8               	addwf	main@i& (0+255),w,b
   968  0008A8  6ED9               	movwf	fsr2l,c
   969  0008AA  6ADA               	clrf	fsr2h,c
   970  0008AC  0E01               	movlw	high _cu
   971  0008AE  22DA               	addwfc	fsr2h,f,c
   972  0008B0  0E00               	movlw	0
   973  0008B2  6EDF               	movwf	indf2,c
   974                           
   975                           ; BSR set to: 1
   976  0008B4  2BC8               	incf	main@i& (0+255),f,b
   977                           
   978                           ; BSR set to: 1
   979  0008B6  0E02               	movlw	2
   980  0008B8  65C8               	cpfsgt	main@i& (0+255),b
   981  0008BA  D7F3               	goto	l1635
   982                           
   983                           ; BSR set to: 1
   984                           ;main.c: 92: };main.c: 93: cu_changed = 0;
   985  0008BC  0E00               	movlw	0
   986  0008BE  6FCA               	movwf	_cu_changed& (0+255),b
   987  0008C0  D760               	goto	l1601
   988  0008C2                     __end_of_main:
   989                           	opt callstack 0
   990                           
   991 ;; *************** function _transmit *****************
   992 ;; Defined at:
   993 ;;		line 207 in file "main.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;  response        2   22[COMRAM] PTR unsigned char 
   996 ;;		 -> STR_12(29), STR_9(25), STR_8(49), STR_4(3), 
   997 ;;		 -> STR_3(21), STR_2(15), STR_1(15), 
   998 ;; Auto vars:     Size  Location     Type
   999 ;;  i               1   26[COMRAM] unsigned char 
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  1    wreg      void 
  1002 ;; Registers used:
  1003 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1009 ;;      Params:         2       0       0       0       0       0       0
  1010 ;;      Locals:         1       0       0       0       0       0       0
  1011 ;;      Temps:          2       0       0       0       0       0       0
  1012 ;;      Totals:         5       0       0       0       0       0       0
  1013 ;;Total ram usage:        5 bytes
  1014 ;; Hardware stack levels used:    1
  1015 ;; Hardware stack levels required when called:    4
  1016 ;; This function calls:
  1017 ;;		_strlen
  1018 ;; This function is called by:
  1019 ;;		_main
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023                           	psect	text1
  1024  000D2C                     __ptext1:
  1025                           	opt callstack 0
  1026  000D2C                     _transmit:
  1027                           	opt callstack 0
  1028  000D2C  FFFF               	dw	65535	; assembler added errata NOP
  1029                           
  1030                           ;main.c: 208: for (char i = 0; i < strlen(response); i++) {
  1031                           
  1032                           ; BSR set to: 1
  1033                           ;incstack = 0
  1034  000D2E  0E00               	movlw	0
  1035  000D30  6E1B               	movwf	transmit@i,c
  1036  000D32  D012               	goto	l1431
  1037  000D34                     l149:
  1038  000D34  FFFF               	dw	65535	; assembler added errata NOP
  1039  000D36  A2AC               	btfss	4012,1,c	;volatile
  1040  000D38  D7FD               	goto	l149
  1041                           
  1042                           ;main.c: 213: TXREG = response[i];
  1043  000D3A  501B               	movf	transmit@i,w,c
  1044  000D3C  2417               	addwf	transmit@response,w,c
  1045  000D3E  6E19               	movwf	??_transmit& (0+255),c
  1046  000D40  0E00               	movlw	0
  1047  000D42  2018               	addwfc	transmit@response+1,w,c
  1048  000D44  6E1A               	movwf	(??_transmit+1)& (0+255),c
  1049  000D46  C019  FFF6         	movff	??_transmit,tblptrl
  1050  000D4A  C01A  FFF7         	movff	??_transmit+1,tblptrh
  1051  000D4E                     	if	0	;tblptru may be non-zero
  1052  000D4E                     	endif
  1053  000D4E                     	if	0	;tblptru may be non-zero
  1054  000D4E                     	endif
  1055  000D4E  0008               	tblrd		*
  1056  000D50  FFFF               	dw	65535	; errata NOP
  1057  000D52  CFF5 FFAD          	movff	tablat,4013	;volatile
  1058  000D56  2A1B               	incf	transmit@i,f,c
  1059  000D58                     l1431:
  1060  000D58  FFFF               	dw	65535	; assembler added errata NOP
  1061  000D5A  C017  F013         	movff	transmit@response,strlen@s
  1062  000D5E  C018  F014         	movff	transmit@response+1,strlen@s+1
  1063  000D62  EC10  F007         	call	_strlen	;wreg free
  1064  000D66  501B               	movf	transmit@i,w,c
  1065  000D68  6E19               	movwf	??_transmit& (0+255),c
  1066  000D6A  6A1A               	clrf	(??_transmit+1)& (0+255),c
  1067  000D6C  5013               	movf	?_strlen,w,c
  1068  000D6E  5C19               	subwf	??_transmit,w,c
  1069  000D70  5014               	movf	?_strlen+1,w,c
  1070  000D72  581A               	subwfb	??_transmit+1,w,c
  1071  000D74  B0D8               	btfsc	status,0,c
  1072  000D76  0012               	return		;funcret
  1073  000D78  FFFF               	dw	65535	; assembler added errata NOP
  1074  000D7A  D7DC               	goto	l149
  1075  000D7C  FFFF               	dw	65535	; errata NOP
  1076  000D7E                     __end_of_transmit:
  1077                           	opt callstack 0
  1078                           
  1079 ;; *************** function _sprintf *****************
  1080 ;; Defined at:
  1081 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;  sp              2   36[COMRAM] PTR unsigned char 
  1084 ;;		 -> main@f2_m_308(50), main@f1_m_306(50), main@f2_m(50), main@f1_m(50), 
  1085 ;;  f               2   38[COMRAM] PTR const unsigned char 
  1086 ;;		 -> STR_11(11), STR_10(10), STR_7(11), STR_6(10), 
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;  tmpval          4    0        struct .
  1089 ;;  cp              3    0        PTR const unsigned char 
  1090 ;;  val             2   47[COMRAM] unsigned int 
  1091 ;;  ap              2   43[COMRAM] PTR void [1]
  1092 ;;		 -> ?_sprintf(2), 
  1093 ;;  len             2    0        unsigned int 
  1094 ;;  c               1   49[COMRAM] unsigned char 
  1095 ;;  prec            1   46[COMRAM] char 
  1096 ;;  flag            1   45[COMRAM] unsigned char 
  1097 ;; Return value:  Size  Location     Type
  1098 ;;                  2   36[COMRAM] int 
  1099 ;; Registers used:
  1100 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1101 ;; Tracked objects:
  1102 ;;		On entry : 0/0
  1103 ;;		On exit  : 0/0
  1104 ;;		Unchanged: 0/0
  1105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1106 ;;      Params:         6       0       0       0       0       0       0
  1107 ;;      Locals:         7       0       0       0       0       0       0
  1108 ;;      Temps:          1       0       0       0       0       0       0
  1109 ;;      Totals:        14       0       0       0       0       0       0
  1110 ;;Total ram usage:       14 bytes
  1111 ;; Hardware stack levels used:    1
  1112 ;; Hardware stack levels required when called:    4
  1113 ;; This function calls:
  1114 ;;		___lwdiv
  1115 ;;		___lwmod
  1116 ;; This function is called by:
  1117 ;;		_main
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           	psect	text2
  1122  0008C2                     __ptext2:
  1123                           	opt callstack 0
  1124  0008C2                     _sprintf:
  1125                           	opt callstack 0
  1126  0008C2  FFFF               	dw	65535	; assembler added errata NOP
  1127                           
  1128                           ;doprnt.c: 502: va_list ap;;doprnt.c: 507: char c;;doprnt.c: 516: signed char prec;;dopr
      +                          nt.c: 520: unsigned char flag;;doprnt.c: 535: union {;doprnt.c: 536: unsigned long vd;;d
      +                          oprnt.c: 537: double integ;;doprnt.c: 538: } tmpval;;doprnt.c: 540: unsigned int val;;do
      +                          prnt.c: 541: unsigned len;;doprnt.c: 542: const char * cp;;doprnt.c: 545: *ap = __va_sta
      +                          rt();
  1129                           
  1130                           ;incstack = 0
  1131  0008C4  0E29               	movlw	low (?_sprintf+4)
  1132  0008C6  6E2C               	movwf	sprintf@ap,c
  1133  0008C8  0E00               	movlw	high (?_sprintf+4)
  1134  0008CA  6E2D               	movwf	sprintf@ap+1,c
  1135                           
  1136                           ;doprnt.c: 548: while((c = *f++)) {
  1137  0008CC  D09A               	goto	u650
  1138  0008CE                     l1467:
  1139  0008CE  FFFF               	dw	65535	; assembler added errata NOP
  1140                           
  1141                           ;doprnt.c: 550: if(c != '%')
  1142  0008D0  0E25               	movlw	37
  1143  0008D2  1832               	xorwf	sprintf@c,w,c
  1144  0008D4  B4D8               	btfsc	status,2,c
  1145  0008D6  D00A               	goto	l1473
  1146  0008D8                     u600:
  1147  0008D8  FFFF               	dw	65535	; assembler added errata NOP
  1148                           
  1149                           ;doprnt.c: 552: {;doprnt.c: 553: ((*sp++ = (c)));
  1150  0008DA  C025  FFD9         	movff	sprintf@sp,fsr2l
  1151  0008DE  C026  FFDA         	movff	sprintf@sp+1,fsr2h
  1152  0008E2  C032  FFDF         	movff	sprintf@c,indf2
  1153  0008E6  4A25               	infsnz	sprintf@sp,f,c
  1154  0008E8  2A26               	incf	sprintf@sp+1,f,c
  1155                           
  1156                           ;doprnt.c: 554: continue;
  1157  0008EA  D08B               	goto	u650
  1158  0008EC                     l1473:
  1159  0008EC  FFFF               	dw	65535	; assembler added errata NOP
  1160                           
  1161                           ;doprnt.c: 555: };doprnt.c: 560: flag = 0;
  1162  0008EE  0E00               	movlw	0
  1163  0008F0  6E2E               	movwf	sprintf@flag,c
  1164                           
  1165                           ;doprnt.c: 654: switch(c = *f++) {
  1166  0008F2  C027  FFF6         	movff	sprintf@f,tblptrl
  1167  0008F6  C028  FFF7         	movff	sprintf@f+1,tblptrh
  1168  0008FA  4A27               	infsnz	sprintf@f,f,c
  1169  0008FC  2A28               	incf	sprintf@f+1,f,c
  1170  0008FE                     	if	0	;tblptru may be non-zero
  1171  0008FE                     	endif
  1172  0008FE                     	if	0	;tblptru may be non-zero
  1173  0008FE                     	endif
  1174  0008FE  0008               	tblrd		*
  1175  000900  FFFF               	dw	65535	; errata NOP
  1176  000902  CFF5 F032          	movff	tablat,sprintf@c
  1177  000906  5032               	movf	sprintf@c,w,c
  1178                           
  1179                           ; Switch size 1, requested type "simple"
  1180                           ; Number of cases is 3, Range of values is 0 to 105
  1181                           ; switch strategies available:
  1182                           ; Name         Instructions Cycles
  1183                           ; simple_byte           10     6 (average)
  1184                           ;	Chosen strategy is simple_byte
  1185  000908  0A00               	xorlw	0	; case 0
  1186  00090A  B4D8               	btfsc	status,2,c
  1187  00090C  D088               	goto	u660
  1188  00090E  0A64               	xorlw	100	; case 100
  1189  000910  B4D8               	btfsc	status,2,c
  1190  000912  D003               	goto	l1483
  1191  000914  0A0D               	xorlw	13	; case 105
  1192  000916  A4D8               	btfss	status,2,c
  1193  000918  D7DF               	goto	u600
  1194  00091A                     l1483:
  1195  00091A  FFFF               	dw	65535	; assembler added errata NOP
  1196                           
  1197                           ;doprnt.c: 1272: {;doprnt.c: 1278: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1198  00091C  C02C  FFD9         	movff	sprintf@ap,fsr2l
  1199  000920  C02D  FFDA         	movff	sprintf@ap+1,fsr2h
  1200  000924  CFDE F030          	movff	postinc2,sprintf@val
  1201  000928  CFDD F031          	movff	postdec2,sprintf@val+1
  1202  00092C  0E02               	movlw	2
  1203  00092E  262C               	addwf	sprintf@ap,f,c
  1204  000930  0E00               	movlw	0
  1205  000932  222D               	addwfc	sprintf@ap+1,f,c
  1206                           
  1207                           ;doprnt.c: 1280: if((int)val < 0) {
  1208  000934  AE31               	btfss	sprintf@val+1,7,c
  1209  000936  D006               	goto	l1493
  1210                           
  1211                           ;doprnt.c: 1281: flag |= 0x03;
  1212  000938  0E03               	movlw	3
  1213  00093A  122E               	iorwf	sprintf@flag,f,c
  1214                           
  1215                           ;doprnt.c: 1282: val = -val;
  1216  00093C  6C30               	negf	sprintf@val,c
  1217  00093E  1E31               	comf	sprintf@val+1,f,c
  1218  000940  B0D8               	btfsc	status,0,c
  1219  000942  2A31               	incf	sprintf@val+1,f,c
  1220  000944                     l1493:
  1221  000944  FFFF               	dw	65535	; assembler added errata NOP
  1222                           
  1223                           ;doprnt.c: 1283: };doprnt.c: 1285: };doprnt.c: 1324: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  1224  000946  0E01               	movlw	1
  1225  000948  6E32               	movwf	sprintf@c,c
  1226  00094A                     l1499:
  1227  00094A  FFFF               	dw	65535	; assembler added errata NOP
  1228                           
  1229                           ;doprnt.c: 1325: if(val < dpowers[c])
  1230  00094C  5032               	movf	sprintf@c,w,c
  1231  00094E  0D02               	mullw	2
  1232  000950  0E01               	movlw	low _dpowers
  1233  000952  24F3               	addwf	prodl,w,c
  1234  000954  6EF6               	movwf	tblptrl,c
  1235  000956  0E06               	movlw	high _dpowers
  1236  000958  20F4               	addwfc	prodh,w,c
  1237  00095A  6EF7               	movwf	tblptrh,c
  1238  00095C                     	if	0	;There are less than 3 active tblptr bytes
  1239  00095C                     	endif
  1240  00095C  0009               	tblrd		*+
  1241  00095E  FFFF               	dw	65535	; errata NOP
  1242  000960  50F5               	movf	tablat,w,c
  1243  000962  5C30               	subwf	sprintf@val,w,c
  1244  000964  0009               	tblrd		*+
  1245  000966  FFFF               	dw	65535	; errata NOP
  1246  000968  50F5               	movf	tablat,w,c
  1247  00096A  5831               	subwfb	sprintf@val+1,w,c
  1248  00096C  A0D8               	btfss	status,0,c
  1249  00096E  D005               	goto	u630
  1250  000970  2A32               	incf	sprintf@c,f,c
  1251  000972  0E05               	movlw	5
  1252  000974  1832               	xorwf	sprintf@c,w,c
  1253  000976  A4D8               	btfss	status,2,c
  1254  000978  D7E8               	goto	l1499
  1255  00097A                     u630:
  1256  00097A  FFFF               	dw	65535	; assembler added errata NOP
  1257                           
  1258                           ;doprnt.c: 1441: {;doprnt.c: 1457: if(flag & 0x03)
  1259  00097C  C02E  F02B         	movff	sprintf@flag,??_sprintf
  1260  000980  0E03               	movlw	3
  1261  000982  162B               	andwf	??_sprintf,f,c
  1262  000984  B4D8               	btfsc	status,2,c
  1263  000986  D008               	goto	l1513
  1264                           
  1265                           ;doprnt.c: 1458: ((*sp++ = ('-')));
  1266  000988  C025  FFD9         	movff	sprintf@sp,fsr2l
  1267  00098C  C026  FFDA         	movff	sprintf@sp+1,fsr2h
  1268  000990  0E2D               	movlw	45
  1269  000992  6EDF               	movwf	indf2,c
  1270  000994  4A25               	infsnz	sprintf@sp,f,c
  1271  000996  2A26               	incf	sprintf@sp+1,f,c
  1272  000998                     l1513:
  1273  000998  FFFF               	dw	65535	; assembler added errata NOP
  1274                           
  1275                           ;doprnt.c: 1488: };doprnt.c: 1491: prec = c;
  1276  00099A  C032  F02F         	movff	sprintf@c,sprintf@prec
  1277                           
  1278                           ;doprnt.c: 1493: while(prec--) {
  1279  00099E  D02C               	goto	l1521
  1280  0009A0                     l1515:
  1281  0009A0  FFFF               	dw	65535	; assembler added errata NOP
  1282                           
  1283                           ;doprnt.c: 1497: {;doprnt.c: 1508: c = (val / dpowers[prec]) % 10 + '0';
  1284  0009A2  502F               	movf	sprintf@prec,w,c
  1285  0009A4  0D02               	mullw	2
  1286  0009A6  0E01               	movlw	low _dpowers
  1287  0009A8  24F3               	addwf	prodl,w,c
  1288  0009AA  6EF6               	movwf	tblptrl,c
  1289  0009AC  0E06               	movlw	high _dpowers
  1290  0009AE  20F4               	addwfc	prodh,w,c
  1291  0009B0  6EF7               	movwf	tblptrh,c
  1292  0009B2                     	if	0	;There are less than 3 active tblptr bytes
  1293  0009B2                     	endif
  1294  0009B2  0009               	tblrd		*+
  1295  0009B4  FFFF               	dw	65535	; errata NOP
  1296  0009B6  CFF5 F01B          	movff	tablat,___lwdiv@divisor
  1297  0009BA  000A               	tblrd		*-
  1298  0009BC  FFFF               	dw	65535	; errata NOP
  1299  0009BE  CFF5 F01C          	movff	tablat,___lwdiv@divisor+1
  1300  0009C2  C030  F019         	movff	sprintf@val,___lwdiv@dividend
  1301  0009C6  C031  F01A         	movff	sprintf@val+1,___lwdiv@dividend+1
  1302  0009CA  EC3A  F006         	call	___lwdiv	;wreg free
  1303  0009CE  C019  F020         	movff	?___lwdiv,___lwmod@dividend
  1304  0009D2  C01A  F021         	movff	?___lwdiv+1,___lwmod@dividend+1
  1305  0009D6  0E00               	movlw	0
  1306  0009D8  6E23               	movwf	___lwmod@divisor+1,c
  1307  0009DA  0E0A               	movlw	10
  1308  0009DC  6E22               	movwf	___lwmod@divisor,c
  1309  0009DE  ECE8  F006         	call	___lwmod	;wreg free
  1310  0009E2  5020               	movf	?___lwmod,w,c
  1311  0009E4  0F30               	addlw	48
  1312  0009E6  6E32               	movwf	sprintf@c,c
  1313                           
  1314                           ;doprnt.c: 1542: };doprnt.c: 1543: ((*sp++ = (c)));
  1315  0009E8  C025  FFD9         	movff	sprintf@sp,fsr2l
  1316  0009EC  C026  FFDA         	movff	sprintf@sp+1,fsr2h
  1317  0009F0  C032  FFDF         	movff	sprintf@c,indf2
  1318  0009F4  4A25               	infsnz	sprintf@sp,f,c
  1319  0009F6  2A26               	incf	sprintf@sp+1,f,c
  1320  0009F8                     l1521:
  1321  0009F8  FFFF               	dw	65535	; assembler added errata NOP
  1322  0009FA  062F               	decf	sprintf@prec,f,c
  1323  0009FC  282F               	incf	sprintf@prec,w,c
  1324  0009FE  A4D8               	btfss	status,2,c
  1325  000A00  D7CF               	goto	l1515
  1326  000A02                     u650:
  1327  000A02  FFFF               	dw	65535	; assembler added errata NOP
  1328  000A04  C027  FFF6         	movff	sprintf@f,tblptrl
  1329  000A08  C028  FFF7         	movff	sprintf@f+1,tblptrh
  1330  000A0C  4A27               	infsnz	sprintf@f,f,c
  1331  000A0E  2A28               	incf	sprintf@f+1,f,c
  1332  000A10                     	if	0	;tblptru may be non-zero
  1333  000A10                     	endif
  1334  000A10                     	if	0	;tblptru may be non-zero
  1335  000A10                     	endif
  1336  000A10  0008               	tblrd		*
  1337  000A12  FFFF               	dw	65535	; errata NOP
  1338  000A14  CFF5 F032          	movff	tablat,sprintf@c
  1339  000A18  5032               	movf	sprintf@c,w,c
  1340  000A1A  A4D8               	btfss	status,2,c
  1341  000A1C  D758               	goto	l1467
  1342  000A1E                     u660:
  1343  000A1E  FFFF               	dw	65535	; assembler added errata NOP
  1344                           
  1345                           ;doprnt.c: 1557: *sp = 0;
  1346  000A20  C025  FFD9         	movff	sprintf@sp,fsr2l
  1347  000A24  C026  FFDA         	movff	sprintf@sp+1,fsr2h
  1348  000A28  0E00               	movlw	0
  1349  000A2A  6EDF               	movwf	indf2,c
  1350  000A2C  0012               	return		;funcret
  1351  000A2E  FFFF               	dw	65535	; errata NOP
  1352  000A30                     __end_of_sprintf:
  1353                           	opt callstack 0
  1354                           
  1355 ;; *************** function ___lwmod *****************
  1356 ;; Defined at:
  1357 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;  dividend        2   31[COMRAM] unsigned int 
  1360 ;;  divisor         2   33[COMRAM] unsigned int 
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;  counter         1   35[COMRAM] unsigned char 
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  2   31[COMRAM] unsigned int 
  1365 ;; Registers used:
  1366 ;;		wreg, status,2, status,0
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1372 ;;      Params:         4       0       0       0       0       0       0
  1373 ;;      Locals:         1       0       0       0       0       0       0
  1374 ;;      Temps:          0       0       0       0       0       0       0
  1375 ;;      Totals:         5       0       0       0       0       0       0
  1376 ;;Total ram usage:        5 bytes
  1377 ;; Hardware stack levels used:    1
  1378 ;; Hardware stack levels required when called:    3
  1379 ;; This function calls:
  1380 ;;		Nothing
  1381 ;; This function is called by:
  1382 ;;		_sprintf
  1383 ;; This function uses a non-reentrant model
  1384 ;;
  1385                           
  1386                           	psect	text3
  1387  000DD0                     __ptext3:
  1388                           	opt callstack 0
  1389  000DD0                     ___lwmod:
  1390                           	opt callstack 0
  1391  000DD0  FFFF               	dw	65535	; assembler added errata NOP
  1392                           
  1393                           ;incstack = 0
  1394  000DD2  5022               	movf	___lwmod@divisor,w,c
  1395  000DD4  1023               	iorwf	___lwmod@divisor+1,w,c
  1396  000DD6  B4D8               	btfsc	status,2,c
  1397  000DD8  D01C               	goto	l679
  1398  000DDA  0E01               	movlw	1
  1399  000DDC  6E24               	movwf	___lwmod@counter,c
  1400  000DDE  D005               	goto	l1389
  1401  000DE0                     l1387:
  1402  000DE0  FFFF               	dw	65535	; assembler added errata NOP
  1403  000DE2  90D8               	bcf	status,0,c
  1404  000DE4  3622               	rlcf	___lwmod@divisor,f,c
  1405  000DE6  3623               	rlcf	___lwmod@divisor+1,f,c
  1406  000DE8  2A24               	incf	___lwmod@counter,f,c
  1407  000DEA                     l1389:
  1408  000DEA  FFFF               	dw	65535	; assembler added errata NOP
  1409  000DEC  AE23               	btfss	___lwmod@divisor+1,7,c
  1410  000DEE  D7F8               	goto	l1387
  1411  000DF0                     u510:
  1412  000DF0  FFFF               	dw	65535	; assembler added errata NOP
  1413  000DF2  5022               	movf	___lwmod@divisor,w,c
  1414  000DF4  5C20               	subwf	___lwmod@dividend,w,c
  1415  000DF6  5023               	movf	___lwmod@divisor+1,w,c
  1416  000DF8  5821               	subwfb	___lwmod@dividend+1,w,c
  1417  000DFA  A0D8               	btfss	status,0,c
  1418  000DFC  D004               	goto	l1395
  1419  000DFE  5022               	movf	___lwmod@divisor,w,c
  1420  000E00  5E20               	subwf	___lwmod@dividend,f,c
  1421  000E02  5023               	movf	___lwmod@divisor+1,w,c
  1422  000E04  5A21               	subwfb	___lwmod@dividend+1,f,c
  1423  000E06                     l1395:
  1424  000E06  FFFF               	dw	65535	; assembler added errata NOP
  1425  000E08  90D8               	bcf	status,0,c
  1426  000E0A  3223               	rrcf	___lwmod@divisor+1,f,c
  1427  000E0C  3222               	rrcf	___lwmod@divisor,f,c
  1428  000E0E  2E24               	decfsz	___lwmod@counter,f,c
  1429  000E10  D7EF               	goto	u510
  1430  000E12                     l679:
  1431  000E12  FFFF               	dw	65535	; assembler added errata NOP
  1432  000E14  C020  F020         	movff	___lwmod@dividend,?___lwmod
  1433  000E18  C021  F021         	movff	___lwmod@dividend+1,?___lwmod+1
  1434  000E1C  0012               	return		;funcret
  1435  000E1E  FFFF               	dw	65535	; errata NOP
  1436  000E20                     __end_of___lwmod:
  1437                           	opt callstack 0
  1438                           
  1439 ;; *************** function _serial_transmi_init_config *****************
  1440 ;; Defined at:
  1441 ;;		line 115 in file "main.c"
  1442 ;; Parameters:    Size  Location     Type
  1443 ;;		None
  1444 ;; Auto vars:     Size  Location     Type
  1445 ;;		None
  1446 ;; Return value:  Size  Location     Type
  1447 ;;                  1    wreg      void 
  1448 ;; Registers used:
  1449 ;;		wreg, status,2
  1450 ;; Tracked objects:
  1451 ;;		On entry : 0/0
  1452 ;;		On exit  : 0/0
  1453 ;;		Unchanged: 0/0
  1454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1455 ;;      Params:         0       0       0       0       0       0       0
  1456 ;;      Locals:         0       0       0       0       0       0       0
  1457 ;;      Temps:          0       0       0       0       0       0       0
  1458 ;;      Totals:         0       0       0       0       0       0       0
  1459 ;;Total ram usage:        0 bytes
  1460 ;; Hardware stack levels used:    1
  1461 ;; Hardware stack levels required when called:    3
  1462 ;; This function calls:
  1463 ;;		Nothing
  1464 ;; This function is called by:
  1465 ;;		_main
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           	psect	text4
  1470  000F14                     __ptext4:
  1471                           	opt callstack 0
  1472  000F14                     _serial_transmi_init_config:
  1473                           	opt callstack 0
  1474  000F14  FFFF               	dw	65535	; assembler added errata NOP
  1475                           
  1476                           ;main.c: 116: INTCON = 0B11000000;
  1477                           
  1478                           ;incstack = 0
  1479  000F16  0EC0               	movlw	192
  1480  000F18  6EF2               	movwf	4082,c	;volatile
  1481                           
  1482                           ;main.c: 117: RCONbits.IPEN = 0;
  1483  000F1A  9ED0               	bcf	4048,7,c	;volatile
  1484                           
  1485                           ;main.c: 118: SPBRG = 25;
  1486  000F1C  0E19               	movlw	25
  1487  000F1E  6EAF               	movwf	4015,c	;volatile
  1488                           
  1489                           ;main.c: 119: PIE1 = 0B00100000;
  1490  000F20  0E20               	movlw	32
  1491  000F22  6E9D               	movwf	3997,c	;volatile
  1492                           
  1493                           ;main.c: 120: PIR1 = 0B00010000;
  1494  000F24  0E10               	movlw	16
  1495  000F26  6E9E               	movwf	3998,c	;volatile
  1496                           
  1497                           ;main.c: 121: IPR1 = 0B00100000;
  1498  000F28  0E20               	movlw	32
  1499  000F2A  6E9F               	movwf	3999,c	;volatile
  1500                           
  1501                           ;main.c: 122: TXSTA = 0B00100110;
  1502  000F2C  0E26               	movlw	38
  1503  000F2E  6EAC               	movwf	4012,c	;volatile
  1504                           
  1505                           ;main.c: 123: RCSTA = 0B10010000;
  1506  000F30  0E90               	movlw	144
  1507  000F32  6EAB               	movwf	4011,c	;volatile
  1508  000F34  0012               	return		;funcret
  1509  000F36  FFFF               	dw	65535	; errata NOP
  1510  000F38                     __end_of_serial_transmi_init_config:
  1511                           	opt callstack 0
  1512                           
  1513 ;; *************** function _print_message_onLCD *****************
  1514 ;; Defined at:
  1515 ;;		line 177 in file "main.c"
  1516 ;; Parameters:    Size  Location     Type
  1517 ;;  message         2   22[COMRAM] PTR unsigned char 
  1518 ;;		 -> main@f2_m_308(50), main@f1_m_306(50), main@f2_m(50), main@f1_m(50), 
  1519 ;;		 -> STR_5(13), 
  1520 ;;  place           1   24[COMRAM] unsigned char 
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;  i               1   27[COMRAM] unsigned char 
  1523 ;; Return value:  Size  Location     Type
  1524 ;;                  1    wreg      void 
  1525 ;; Registers used:
  1526 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1532 ;;      Params:         3       0       0       0       0       0       0
  1533 ;;      Locals:         1       0       0       0       0       0       0
  1534 ;;      Temps:          2       0       0       0       0       0       0
  1535 ;;      Totals:         6       0       0       0       0       0       0
  1536 ;;Total ram usage:        6 bytes
  1537 ;; Hardware stack levels used:    1
  1538 ;; Hardware stack levels required when called:    4
  1539 ;; This function calls:
  1540 ;;		_R_D
  1541 ;;		_R_I
  1542 ;;		_strlen
  1543 ;; This function is called by:
  1544 ;;		_main
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548                           	psect	text5
  1549  000C02                     __ptext5:
  1550                           	opt callstack 0
  1551  000C02                     _print_message_onLCD:
  1552                           	opt callstack 0
  1553  000C02  FFFF               	dw	65535	; assembler added errata NOP
  1554                           
  1555                           ;main.c: 178: if (place > 0) {
  1556                           
  1557                           ;incstack = 0
  1558  000C04  5019               	movf	print_message_onLCD@place,w,c
  1559  000C06  B4D8               	btfsc	status,2,c
  1560  000C08  D003               	goto	l1457
  1561                           
  1562                           ;main.c: 179: R_I(place);
  1563  000C0A  5019               	movf	print_message_onLCD@place,w,c
  1564  000C0C  ECEC  F007         	call	_R_I
  1565  000C10                     l1457:
  1566  000C10  FFFF               	dw	65535	; assembler added errata NOP
  1567                           
  1568                           ;main.c: 180: };main.c: 181: for (char i = 0; i < strlen(message); i++) {
  1569  000C12  0E00               	movlw	0
  1570  000C14  6E1C               	movwf	print_message_onLCD@i,c
  1571  000C16  D01B               	goto	l1463
  1572  000C18                     l1459:
  1573  000C18  FFFF               	dw	65535	; assembler added errata NOP
  1574                           
  1575                           ;main.c: 182: R_D(message[i]);
  1576  000C1A  501C               	movf	print_message_onLCD@i,w,c
  1577  000C1C  2417               	addwf	print_message_onLCD@message,w,c
  1578  000C1E  6E1A               	movwf	??_print_message_onLCD& (0+255),c
  1579  000C20  0E00               	movlw	0
  1580  000C22  2018               	addwfc	print_message_onLCD@message+1,w,c
  1581  000C24  6E1B               	movwf	(??_print_message_onLCD+1)& (0+255),c
  1582  000C26  C01A  FFF6         	movff	??_print_message_onLCD,tblptrl
  1583  000C2A  C01B  FFF7         	movff	??_print_message_onLCD+1,tblptrh
  1584  000C2E  6AF8               	clrf	tblptru,c
  1585  000C30  0E05               	movlw	(high __ramtop+-1)
  1586  000C32  64F7               	cpfsgt	tblptrh,c
  1587  000C34  D004               	bra	u587
  1588  000C36  0008               	tblrd		*
  1589  000C38  FFFF               	dw	65535	; errata NOP
  1590  000C3A  50F5               	movf	tablat,w,c
  1591  000C3C  D005               	bra	u580
  1592  000C3E                     u587:
  1593  000C3E  CFF6 FFE9          	movff	tblptrl,fsr0l
  1594  000C42  CFF7 FFEA          	movff	tblptrh,fsr0h
  1595  000C46  50EF               	movf	indf0,w,c
  1596  000C48                     u580:
  1597  000C48  ECDE  F007         	call	_R_D
  1598  000C4C  2A1C               	incf	print_message_onLCD@i,f,c
  1599  000C4E                     l1463:
  1600  000C4E  FFFF               	dw	65535	; assembler added errata NOP
  1601  000C50  C017  F013         	movff	print_message_onLCD@message,strlen@s
  1602  000C54  C018  F014         	movff	print_message_onLCD@message+1,strlen@s+1
  1603  000C58  EC10  F007         	call	_strlen	;wreg free
  1604  000C5C  501C               	movf	print_message_onLCD@i,w,c
  1605  000C5E  6E1A               	movwf	??_print_message_onLCD& (0+255),c
  1606  000C60  6A1B               	clrf	(??_print_message_onLCD+1)& (0+255),c
  1607  000C62  5013               	movf	?_strlen,w,c
  1608  000C64  5C1A               	subwf	??_print_message_onLCD,w,c
  1609  000C66  5014               	movf	?_strlen+1,w,c
  1610  000C68  581B               	subwfb	??_print_message_onLCD+1,w,c
  1611  000C6A  B0D8               	btfsc	status,0,c
  1612  000C6C  0012               	return		;funcret
  1613  000C6E  FFFF               	dw	65535	; assembler added errata NOP
  1614  000C70  D7D3               	goto	l1459
  1615  000C72  FFFF               	dw	65535	; errata NOP
  1616  000C74                     __end_of_print_message_onLCD:
  1617                           	opt callstack 0
  1618                           
  1619 ;; *************** function _strlen *****************
  1620 ;; Defined at:
  1621 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strlen.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  s               2   18[COMRAM] PTR const unsigned char 
  1624 ;;		 -> STR_12(29), main@f2_m_308(50), main@f1_m_306(50), STR_9(25), 
  1625 ;;		 -> STR_8(49), cu(3), main@f2_m(50), main@f1_m(50), 
  1626 ;;		 -> STR_5(13), STR_4(3), STR_3(21), STR_2(15), 
  1627 ;;		 -> STR_1(15), 
  1628 ;; Auto vars:     Size  Location     Type
  1629 ;;  cp              2   20[COMRAM] PTR const unsigned char 
  1630 ;;		 -> STR_12(29), main@f2_m_308(50), main@f1_m_306(50), STR_9(25), 
  1631 ;;		 -> STR_8(49), cu(3), main@f2_m(50), main@f1_m(50), 
  1632 ;;		 -> STR_5(13), STR_4(3), STR_3(21), STR_2(15), 
  1633 ;;		 -> STR_1(15), 
  1634 ;; Return value:  Size  Location     Type
  1635 ;;                  2   18[COMRAM] unsigned int 
  1636 ;; Registers used:
  1637 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1643 ;;      Params:         2       0       0       0       0       0       0
  1644 ;;      Locals:         2       0       0       0       0       0       0
  1645 ;;      Temps:          0       0       0       0       0       0       0
  1646 ;;      Totals:         4       0       0       0       0       0       0
  1647 ;;Total ram usage:        4 bytes
  1648 ;; Hardware stack levels used:    1
  1649 ;; Hardware stack levels required when called:    3
  1650 ;; This function calls:
  1651 ;;		Nothing
  1652 ;; This function is called by:
  1653 ;;		_print_message_onLCD
  1654 ;;		_transmit
  1655 ;; This function uses a non-reentrant model
  1656 ;;
  1657                           
  1658                           	psect	text6
  1659  000E20                     __ptext6:
  1660                           	opt callstack 0
  1661  000E20                     _strlen:
  1662                           	opt callstack 0
  1663  000E20  FFFF               	dw	65535	; assembler added errata NOP
  1664                           
  1665                           ;incstack = 0
  1666  000E22  C013  F015         	movff	strlen@s,strlen@cp
  1667  000E26  C014  F016         	movff	strlen@s+1,strlen@cp+1
  1668  000E2A  D003               	goto	l1337
  1669  000E2C                     l1335:
  1670  000E2C  FFFF               	dw	65535	; assembler added errata NOP
  1671  000E2E  4A15               	infsnz	strlen@cp,f,c
  1672  000E30  2A16               	incf	strlen@cp+1,f,c
  1673  000E32                     l1337:
  1674  000E32  FFFF               	dw	65535	; assembler added errata NOP
  1675  000E34  C015  FFF6         	movff	strlen@cp,tblptrl
  1676  000E38  C016  FFF7         	movff	strlen@cp+1,tblptrh
  1677  000E3C  6AF8               	clrf	tblptru,c
  1678  000E3E  0E05               	movlw	(high __ramtop+-1)
  1679  000E40  64F7               	cpfsgt	tblptrh,c
  1680  000E42  D004               	bra	u437
  1681  000E44  0008               	tblrd		*
  1682  000E46  FFFF               	dw	65535	; errata NOP
  1683  000E48  50F5               	movf	tablat,w,c
  1684  000E4A  D005               	bra	u430
  1685  000E4C                     u437:
  1686  000E4C  CFF6 FFE9          	movff	tblptrl,fsr0l
  1687  000E50  CFF7 FFEA          	movff	tblptrh,fsr0h
  1688  000E54  50EF               	movf	indf0,w,c
  1689  000E56                     u430:
  1690  000E56  0900               	iorlw	0
  1691  000E58  A4D8               	btfss	status,2,c
  1692  000E5A  D7E8               	goto	l1335
  1693  000E5C  5013               	movf	strlen@s,w,c
  1694  000E5E  5C15               	subwf	strlen@cp,w,c
  1695  000E60  6E13               	movwf	?_strlen,c
  1696  000E62  5014               	movf	strlen@s+1,w,c
  1697  000E64  5816               	subwfb	strlen@cp+1,w,c
  1698  000E66  6E14               	movwf	?_strlen+1,c
  1699  000E68  0012               	return		;funcret
  1700  000E6A  FFFF               	dw	65535	; errata NOP
  1701  000E6C                     __end_of_strlen:
  1702                           	opt callstack 0
  1703                           
  1704 ;; *************** function _R_D *****************
  1705 ;; Defined at:
  1706 ;;		line 168 in file "main.c"
  1707 ;; Parameters:    Size  Location     Type
  1708 ;;  dato            1    wreg     unsigned char 
  1709 ;; Auto vars:     Size  Location     Type
  1710 ;;  dato            1   18[COMRAM] unsigned char 
  1711 ;; Return value:  Size  Location     Type
  1712 ;;                  1    wreg      void 
  1713 ;; Registers used:
  1714 ;;		wreg, status,2, cstack
  1715 ;; Tracked objects:
  1716 ;;		On entry : 0/0
  1717 ;;		On exit  : 0/0
  1718 ;;		Unchanged: 0/0
  1719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1720 ;;      Params:         0       0       0       0       0       0       0
  1721 ;;      Locals:         1       0       0       0       0       0       0
  1722 ;;      Temps:          0       0       0       0       0       0       0
  1723 ;;      Totals:         1       0       0       0       0       0       0
  1724 ;;Total ram usage:        1 bytes
  1725 ;; Hardware stack levels used:    1
  1726 ;; Hardware stack levels required when called:    3
  1727 ;; This function calls:
  1728 ;;		Nothing
  1729 ;; This function is called by:
  1730 ;;		_print_message_onLCD
  1731 ;; This function uses a non-reentrant model
  1732 ;;
  1733                           
  1734                           	psect	text7
  1735  000FBC                     __ptext7:
  1736                           	opt callstack 0
  1737  000FBC                     _R_D:
  1738                           	opt callstack 0
  1739  000FBC  FFFF               	dw	65535	; assembler added errata NOP
  1740                           
  1741                           ;incstack = 0
  1742                           ;R_D@dato stored from wreg
  1743  000FBE  6E13               	movwf	R_D@dato,c
  1744                           
  1745                           ;main.c: 169: LC3 = 0;
  1746  000FC0  968B               	bcf	3979,3,c	;volatile
  1747                           
  1748                           ;main.c: 170: LC4 = 1;
  1749  000FC2  888B               	bsf	3979,4,c	;volatile
  1750                           
  1751                           ;main.c: 171: LATD = dato;
  1752  000FC4  C013  FF8C         	movff	R_D@dato,3980	;volatile
  1753                           
  1754                           ;main.c: 172: LC3 = 1;
  1755  000FC8  868B               	bsf	3979,3,c	;volatile
  1756                           
  1757                           ;main.c: 173: _delay((unsigned long)((100)*(4000000/4000000.0)));
  1758  000FCA  0E19               	movlw	25
  1759  000FCC                     u857:
  1760  000FCC  FFFF               	dw	65535	; errata NOP
  1761  000FCE  2EE8               	decfsz	wreg,f,c
  1762  000FD0  D7FD               	bra	u857
  1763                           
  1764                           ;main.c: 174: LC3 = 0;
  1765  000FD2  968B               	bcf	3979,3,c	;volatile
  1766  000FD4  0012               	return		;funcret
  1767  000FD6  FFFF               	dw	65535	; errata NOP
  1768  000FD8                     __end_of_R_D:
  1769                           	opt callstack 0
  1770                           
  1771 ;; *************** function _initial_config *****************
  1772 ;; Defined at:
  1773 ;;		line 99 in file "main.c"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;		None
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;		None
  1778 ;; Return value:  Size  Location     Type
  1779 ;;                  1    wreg      void 
  1780 ;; Registers used:
  1781 ;;		wreg, status,2
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1787 ;;      Params:         0       0       0       0       0       0       0
  1788 ;;      Locals:         0       0       0       0       0       0       0
  1789 ;;      Temps:          0       0       0       0       0       0       0
  1790 ;;      Totals:         0       0       0       0       0       0       0
  1791 ;;Total ram usage:        0 bytes
  1792 ;; Hardware stack levels used:    1
  1793 ;; Hardware stack levels required when called:    3
  1794 ;; This function calls:
  1795 ;;		Nothing
  1796 ;; This function is called by:
  1797 ;;		_main
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801                           	psect	text8
  1802  000F80                     __ptext8:
  1803                           	opt callstack 0
  1804  000F80                     _initial_config:
  1805                           	opt callstack 0
  1806  000F80  FFFF               	dw	65535	; assembler added errata NOP
  1807                           
  1808                           ;main.c: 105: TRISC = 0B10000000;
  1809                           
  1810                           ;incstack = 0
  1811  000F82  0E80               	movlw	128
  1812  000F84  6E94               	movwf	3988,c	;volatile
  1813                           
  1814                           ;main.c: 106: TRISD = 0X00;
  1815  000F86  0E00               	movlw	0
  1816  000F88  6E95               	movwf	3989,c	;volatile
  1817                           
  1818                           ;main.c: 109: LATC = 0;
  1819  000F8A  0E00               	movlw	0
  1820  000F8C  6E8B               	movwf	3979,c	;volatile
  1821                           
  1822                           ;main.c: 110: LATD = 0;
  1823  000F8E  0E00               	movlw	0
  1824  000F90  6E8C               	movwf	3980,c	;volatile
  1825                           
  1826                           ;main.c: 111: PORTC = 0;
  1827  000F92  0E00               	movlw	0
  1828  000F94  6E82               	movwf	3970,c	;volatile
  1829                           
  1830                           ;main.c: 112: PORTD = 0;
  1831  000F96  0E00               	movlw	0
  1832  000F98  6E83               	movwf	3971,c	;volatile
  1833  000F9A  0012               	return		;funcret
  1834  000F9C  FFFF               	dw	65535	; errata NOP
  1835  000F9E                     __end_of_initial_config:
  1836                           	opt callstack 0
  1837                           
  1838 ;; *************** function _init_LCD *****************
  1839 ;; Defined at:
  1840 ;;		line 147 in file "main.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;		None
  1843 ;; Auto vars:     Size  Location     Type
  1844 ;;		None
  1845 ;; Return value:  Size  Location     Type
  1846 ;;                  1    wreg      void 
  1847 ;; Registers used:
  1848 ;;		wreg, status,2, cstack
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1854 ;;      Params:         0       0       0       0       0       0       0
  1855 ;;      Locals:         0       0       0       0       0       0       0
  1856 ;;      Temps:          1       0       0       0       0       0       0
  1857 ;;      Totals:         1       0       0       0       0       0       0
  1858 ;;Total ram usage:        1 bytes
  1859 ;; Hardware stack levels used:    1
  1860 ;; Hardware stack levels required when called:    4
  1861 ;; This function calls:
  1862 ;;		_R_I
  1863 ;; This function is called by:
  1864 ;;		_main
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868                           	psect	text9
  1869  000CD4                     __ptext9:
  1870                           	opt callstack 0
  1871  000CD4                     _init_LCD:
  1872                           	opt callstack 0
  1873  000CD4  FFFF               	dw	65535	; assembler added errata NOP
  1874                           
  1875                           ;main.c: 148: _delay((unsigned long)((20)*(4000000/4000.0)));
  1876                           
  1877                           ;incstack = 0
  1878  000CD6  0E14               	movlw	20
  1879  000CD8  6E14               	movwf	??_init_LCD& (0+255),c
  1880  000CDA  0E7D               	movlw	125
  1881  000CDC                     u867:
  1882  000CDC  FFFF               	dw	65535	; errata NOP
  1883  000CDE  2EE8               	decfsz	wreg,f,c
  1884  000CE0  D7FD               	bra	u867
  1885  000CE2  2E14               	decfsz	??_init_LCD& (0+255),f,c
  1886  000CE4  D7FB               	bra	u867
  1887  000CE6  D000               	nop2	
  1888                           
  1889                           ;main.c: 150: R_I(0X30);
  1890  000CE8  0E30               	movlw	48
  1891  000CEA  ECEC  F007         	call	_R_I
  1892                           
  1893                           ;main.c: 151: _delay((unsigned long)((5)*(4000000/4000.0)));
  1894  000CEE  0E05               	movlw	5
  1895  000CF0  6E14               	movwf	??_init_LCD& (0+255),c
  1896  000CF2  0EDF               	movlw	223
  1897  000CF4                     u877:
  1898  000CF4  FFFF               	dw	65535	; errata NOP
  1899  000CF6  2EE8               	decfsz	wreg,f,c
  1900  000CF8  D7FD               	bra	u877
  1901  000CFA  2E14               	decfsz	??_init_LCD& (0+255),f,c
  1902  000CFC  D7FB               	bra	u877
  1903                           
  1904                           ;main.c: 152: R_I(0X30);
  1905  000CFE  0E30               	movlw	48
  1906  000D00  ECEC  F007         	call	_R_I
  1907                           
  1908                           ;main.c: 153: R_I(0X3C);
  1909  000D04  0E3C               	movlw	60
  1910  000D06  ECEC  F007         	call	_R_I
  1911                           
  1912                           ;main.c: 154: R_I(0X0C);
  1913  000D0A  0E0C               	movlw	12
  1914  000D0C  ECEC  F007         	call	_R_I
  1915                           
  1916                           ;main.c: 155: R_I(0X01);
  1917  000D10  0E01               	movlw	1
  1918  000D12  ECEC  F007         	call	_R_I
  1919                           
  1920                           ;main.c: 156: _delay((unsigned long)((20)*(4000000/4000.0)));
  1921  000D16  0E14               	movlw	20
  1922  000D18  6E14               	movwf	??_init_LCD& (0+255),c
  1923  000D1A  0E7D               	movlw	125
  1924  000D1C                     u887:
  1925  000D1C  FFFF               	dw	65535	; errata NOP
  1926  000D1E  2EE8               	decfsz	wreg,f,c
  1927  000D20  D7FD               	bra	u887
  1928  000D22  2E14               	decfsz	??_init_LCD& (0+255),f,c
  1929  000D24  D7FB               	bra	u887
  1930  000D26  D000               	nop2	
  1931  000D28  0012               	return		;funcret
  1932  000D2A  FFFF               	dw	65535	; errata NOP
  1933  000D2C                     __end_of_init_LCD:
  1934                           	opt callstack 0
  1935                           
  1936 ;; *************** function _R_I *****************
  1937 ;; Defined at:
  1938 ;;		line 159 in file "main.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;  dato            1    wreg     unsigned char 
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;  dato            1   18[COMRAM] unsigned char 
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  1    wreg      void 
  1945 ;; Registers used:
  1946 ;;		wreg, status,2, cstack
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1952 ;;      Params:         0       0       0       0       0       0       0
  1953 ;;      Locals:         1       0       0       0       0       0       0
  1954 ;;      Temps:          0       0       0       0       0       0       0
  1955 ;;      Totals:         1       0       0       0       0       0       0
  1956 ;;Total ram usage:        1 bytes
  1957 ;; Hardware stack levels used:    1
  1958 ;; Hardware stack levels required when called:    3
  1959 ;; This function calls:
  1960 ;;		Nothing
  1961 ;; This function is called by:
  1962 ;;		_init_LCD
  1963 ;;		_print_message_onLCD
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967                           	psect	text10
  1968  000FD8                     __ptext10:
  1969                           	opt callstack 0
  1970  000FD8                     _R_I:
  1971                           	opt callstack 0
  1972  000FD8  FFFF               	dw	65535	; assembler added errata NOP
  1973                           
  1974                           ;incstack = 0
  1975                           ;R_I@dato stored from wreg
  1976  000FDA  6E13               	movwf	R_I@dato,c
  1977                           
  1978                           ;main.c: 160: LC3 = 0;
  1979  000FDC  968B               	bcf	3979,3,c	;volatile
  1980                           
  1981                           ;main.c: 161: LC4 = 0;
  1982  000FDE  988B               	bcf	3979,4,c	;volatile
  1983                           
  1984                           ;main.c: 162: LATD = dato;
  1985  000FE0  C013  FF8C         	movff	R_I@dato,3980	;volatile
  1986                           
  1987                           ;main.c: 163: LC3 = 1;
  1988  000FE4  868B               	bsf	3979,3,c	;volatile
  1989                           
  1990                           ;main.c: 164: _delay((unsigned long)((100)*(4000000/4000000.0)));
  1991  000FE6  0E19               	movlw	25
  1992  000FE8                     u897:
  1993  000FE8  FFFF               	dw	65535	; errata NOP
  1994  000FEA  2EE8               	decfsz	wreg,f,c
  1995  000FEC  D7FD               	bra	u897
  1996                           
  1997                           ;main.c: 165: LC3 = 0;
  1998  000FEE  968B               	bcf	3979,3,c	;volatile
  1999  000FF0  0012               	return		;funcret
  2000  000FF2  FFFF               	dw	65535	; errata NOP
  2001  000FF4                     __end_of_R_I:
  2002                           	opt callstack 0
  2003                           
  2004 ;; *************** function _atoi *****************
  2005 ;; Defined at:
  2006 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\atoi.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;  s               2   24[COMRAM] PTR const unsigned char 
  2009 ;;		 -> cu(3), 
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;  a               2   29[COMRAM] int 
  2012 ;;  sign            1   28[COMRAM] unsigned char 
  2013 ;; Return value:  Size  Location     Type
  2014 ;;                  2   24[COMRAM] int 
  2015 ;; Registers used:
  2016 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2017 ;; Tracked objects:
  2018 ;;		On entry : 0/0
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2022 ;;      Params:         2       0       0       0       0       0       0
  2023 ;;      Locals:         3       0       0       0       0       0       0
  2024 ;;      Temps:          2       0       0       0       0       0       0
  2025 ;;      Totals:         7       0       0       0       0       0       0
  2026 ;;Total ram usage:        7 bytes
  2027 ;; Hardware stack levels used:    1
  2028 ;; Hardware stack levels required when called:    4
  2029 ;; This function calls:
  2030 ;;		___wmul
  2031 ;;		_isdigit
  2032 ;; This function is called by:
  2033 ;;		_main
  2034 ;; This function uses a non-reentrant model
  2035 ;;
  2036                           
  2037                           	psect	text11
  2038  000A30                     __ptext11:
  2039                           	opt callstack 0
  2040  000A30                     _atoi:
  2041                           	opt callstack 0
  2042  000A30  FFFF               	dw	65535	; assembler added errata NOP
  2043                           
  2044                           ;incstack = 0
  2045  000A32  D003               	goto	l1533
  2046  000A34                     l1531:
  2047  000A34  FFFF               	dw	65535	; assembler added errata NOP
  2048  000A36  4A19               	infsnz	atoi@s,f,c
  2049  000A38  2A1A               	incf	atoi@s+1,f,c
  2050  000A3A                     l1533:
  2051  000A3A  FFFF               	dw	65535	; assembler added errata NOP
  2052  000A3C  C019  FFD9         	movff	atoi@s,fsr2l
  2053  000A40  C01A  FFDA         	movff	atoi@s+1,fsr2h
  2054  000A44  0E20               	movlw	32
  2055  000A46  18DE               	xorwf	postinc2,w,c
  2056  000A48  B4D8               	btfsc	status,2,c
  2057  000A4A  D7F4               	goto	l1531
  2058  000A4C  C019  FFD9         	movff	atoi@s,fsr2l
  2059  000A50  C01A  FFDA         	movff	atoi@s+1,fsr2h
  2060  000A54  0E09               	movlw	9
  2061  000A56  18DE               	xorwf	postinc2,w,c
  2062  000A58  B4D8               	btfsc	status,2,c
  2063  000A5A  D7EC               	goto	l1531
  2064  000A5C  0E00               	movlw	0
  2065  000A5E  6E1F               	movwf	atoi@a+1,c
  2066  000A60  0E00               	movlw	0
  2067  000A62  6E1E               	movwf	atoi@a,c
  2068  000A64  0E00               	movlw	0
  2069  000A66  6E1D               	movwf	atoi@sign,c
  2070  000A68  C019  FFD9         	movff	atoi@s,fsr2l
  2071  000A6C  C01A  FFDA         	movff	atoi@s+1,fsr2h
  2072  000A70  0E2D               	movlw	45
  2073  000A72  18DE               	xorwf	postinc2,w,c
  2074  000A74  A4D8               	btfss	status,2,c
  2075  000A76  D002               	goto	l1543
  2076  000A78  2A1D               	incf	atoi@sign,f,c
  2077  000A7A  D009               	goto	u700
  2078  000A7C                     l1543:
  2079  000A7C  FFFF               	dw	65535	; assembler added errata NOP
  2080  000A7E  C019  FFD9         	movff	atoi@s,fsr2l
  2081  000A82  C01A  FFDA         	movff	atoi@s+1,fsr2h
  2082  000A86  0E2B               	movlw	43
  2083  000A88  18DE               	xorwf	postinc2,w,c
  2084  000A8A  A4D8               	btfss	status,2,c
  2085  000A8C  D020               	goto	l1551
  2086  000A8E                     u700:
  2087  000A8E  FFFF               	dw	65535	; assembler added errata NOP
  2088  000A90  4A19               	infsnz	atoi@s,f,c
  2089  000A92  2A1A               	incf	atoi@s+1,f,c
  2090  000A94  D01C               	goto	l1551
  2091  000A96                     l1547:
  2092  000A96  FFFF               	dw	65535	; assembler added errata NOP
  2093  000A98  C01E  F013         	movff	atoi@a,___wmul@multiplier
  2094  000A9C  C01F  F014         	movff	atoi@a+1,___wmul@multiplier+1
  2095  000AA0  0E00               	movlw	0
  2096  000AA2  6E16               	movwf	___wmul@multiplicand+1,c
  2097  000AA4  0E0A               	movlw	10
  2098  000AA6  6E15               	movwf	___wmul@multiplicand,c
  2099  000AA8  EC75  F007         	call	___wmul	;wreg free
  2100  000AAC  C019  FFD9         	movff	atoi@s,fsr2l
  2101  000AB0  C01A  FFDA         	movff	atoi@s+1,fsr2h
  2102  000AB4  50DF               	movf	indf2,w,c
  2103  000AB6  6E1B               	movwf	??_atoi& (0+255),c
  2104  000AB8  501B               	movf	??_atoi,w,c
  2105  000ABA  2613               	addwf	?___wmul,f,c
  2106  000ABC  0E00               	movlw	0
  2107  000ABE  2214               	addwfc	?___wmul+1,f,c
  2108  000AC0  0ED0               	movlw	208
  2109  000AC2  2413               	addwf	?___wmul,w,c
  2110  000AC4  6E1E               	movwf	atoi@a,c
  2111  000AC6  0EFF               	movlw	255
  2112  000AC8  2014               	addwfc	?___wmul+1,w,c
  2113  000ACA  6E1F               	movwf	atoi@a+1,c
  2114  000ACC  D7E0               	goto	u700
  2115  000ACE                     l1551:
  2116  000ACE  FFFF               	dw	65535	; assembler added errata NOP
  2117  000AD0  C019  FFD9         	movff	atoi@s,fsr2l
  2118  000AD4  C01A  FFDA         	movff	atoi@s+1,fsr2h
  2119  000AD8  50DF               	movf	indf2,w,c
  2120  000ADA  EC9C  F007         	call	_isdigit
  2121  000ADE  B0D8               	btfsc	status,0,c
  2122  000AE0  D7DA               	goto	l1547
  2123  000AE2  501D               	movf	atoi@sign,w,c
  2124  000AE4  B4D8               	btfsc	status,2,c
  2125  000AE6  D00D               	goto	l863
  2126  000AE8  C01E  F01B         	movff	atoi@a,??_atoi
  2127  000AEC  C01F  F01C         	movff	atoi@a+1,??_atoi+1
  2128  000AF0  1E1B               	comf	??_atoi,f,c
  2129  000AF2  1E1C               	comf	??_atoi+1,f,c
  2130  000AF4  4A1B               	infsnz	??_atoi,f,c
  2131  000AF6  2A1C               	incf	??_atoi+1,f,c
  2132  000AF8  C01B  F019         	movff	??_atoi,?_atoi
  2133  000AFC  C01C  F01A         	movff	??_atoi+1,?_atoi+1
  2134  000B00  D005               	goto	l864
  2135  000B02                     l863:
  2136  000B02  FFFF               	dw	65535	; assembler added errata NOP
  2137  000B04  C01E  F019         	movff	atoi@a,?_atoi
  2138  000B08  C01F  F01A         	movff	atoi@a+1,?_atoi+1
  2139  000B0C                     l864:
  2140  000B0C  FFFF               	dw	65535	; assembler added errata NOP
  2141  000B0E  0012               	return		;funcret
  2142  000B10  FFFF               	dw	65535	; errata NOP
  2143  000B12                     __end_of_atoi:
  2144                           	opt callstack 0
  2145                           
  2146 ;; *************** function _isdigit *****************
  2147 ;; Defined at:
  2148 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
  2149 ;; Parameters:    Size  Location     Type
  2150 ;;  c               1    wreg     unsigned char 
  2151 ;; Auto vars:     Size  Location     Type
  2152 ;;  c               1   20[COMRAM] unsigned char 
  2153 ;; Return value:  Size  Location     Type
  2154 ;;		None               void
  2155 ;; Registers used:
  2156 ;;		wreg, status,2, status,0
  2157 ;; Tracked objects:
  2158 ;;		On entry : 0/0
  2159 ;;		On exit  : 0/0
  2160 ;;		Unchanged: 0/0
  2161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2162 ;;      Params:         0       0       0       0       0       0       0
  2163 ;;      Locals:         2       0       0       0       0       0       0
  2164 ;;      Temps:          1       0       0       0       0       0       0
  2165 ;;      Totals:         3       0       0       0       0       0       0
  2166 ;;Total ram usage:        3 bytes
  2167 ;; Hardware stack levels used:    1
  2168 ;; Hardware stack levels required when called:    3
  2169 ;; This function calls:
  2170 ;;		Nothing
  2171 ;; This function is called by:
  2172 ;;		_atoi
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176                           	psect	text12
  2177  000F38                     __ptext12:
  2178                           	opt callstack 0
  2179  000F38                     _isdigit:
  2180                           	opt callstack 0
  2181  000F38  FFFF               	dw	65535	; assembler added errata NOP
  2182                           
  2183                           ;incstack = 0
  2184                           ;isdigit@c stored from wreg
  2185  000F3A  6E15               	movwf	isdigit@c,c
  2186  000F3C  0E00               	movlw	0
  2187  000F3E  6E14               	movwf	_isdigit$834,c
  2188  000F40  0E3A               	movlw	58
  2189  000F42  6015               	cpfslt	isdigit@c,c
  2190  000F44  D005               	goto	l1351
  2191  000F46  0E2F               	movlw	47
  2192  000F48  6415               	cpfsgt	isdigit@c,c
  2193  000F4A  D002               	goto	l1351
  2194  000F4C  0E01               	movlw	1
  2195  000F4E  6E14               	movwf	_isdigit$834,c
  2196  000F50                     l1351:
  2197  000F50  FFFF               	dw	65535	; assembler added errata NOP
  2198  000F52  C014  F013         	movff	_isdigit$834,??_isdigit
  2199  000F56  3013               	rrcf	??_isdigit,w,c
  2200  000F58  0012               	return		;funcret
  2201  000F5A  FFFF               	dw	65535	; errata NOP
  2202  000F5C                     __end_of_isdigit:
  2203                           	opt callstack 0
  2204                           
  2205 ;; *************** function _PWM_config *****************
  2206 ;; Defined at:
  2207 ;;		line 126 in file "main.c"
  2208 ;; Parameters:    Size  Location     Type
  2209 ;;		None
  2210 ;; Auto vars:     Size  Location     Type
  2211 ;;		None
  2212 ;; Return value:  Size  Location     Type
  2213 ;;                  1    wreg      void 
  2214 ;; Registers used:
  2215 ;;		wreg, status,2
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2221 ;;      Params:         0       0       0       0       0       0       0
  2222 ;;      Locals:         0       0       0       0       0       0       0
  2223 ;;      Temps:          0       0       0       0       0       0       0
  2224 ;;      Totals:         0       0       0       0       0       0       0
  2225 ;;Total ram usage:        0 bytes
  2226 ;; Hardware stack levels used:    1
  2227 ;; Hardware stack levels required when called:    3
  2228 ;; This function calls:
  2229 ;;		Nothing
  2230 ;; This function is called by:
  2231 ;;		_main
  2232 ;; This function uses a non-reentrant model
  2233 ;;
  2234                           
  2235                           	psect	text13
  2236  000F9E                     __ptext13:
  2237                           	opt callstack 0
  2238  000F9E                     _PWM_config:
  2239                           	opt callstack 0
  2240  000F9E  FFFF               	dw	65535	; assembler added errata NOP
  2241                           
  2242                           ;main.c: 127: CCP1CON = 0B00011100;
  2243                           
  2244                           ;incstack = 0
  2245  000FA0  0E1C               	movlw	28
  2246  000FA2  6EBD               	movwf	4029,c	;volatile
  2247                           
  2248                           ;main.c: 128: CCP2CON = 0B00011100;
  2249  000FA4  0E1C               	movlw	28
  2250  000FA6  6EBA               	movwf	4026,c	;volatile
  2251                           
  2252                           ;main.c: 133: PR2 = 0X21;
  2253  000FA8  0E21               	movlw	33
  2254  000FAA  6ECB               	movwf	4043,c	;volatile
  2255                           
  2256                           ;main.c: 138: CCPR1L = 0B01010011;
  2257  000FAC  0E53               	movlw	83
  2258  000FAE  6EBE               	movwf	4030,c	;volatile
  2259                           
  2260                           ;main.c: 139: CCPR2L = 0B01010011;
  2261  000FB0  0E53               	movlw	83
  2262  000FB2  6EBB               	movwf	4027,c	;volatile
  2263                           
  2264                           ;main.c: 144: T2CON = 0B00000100;
  2265  000FB4  0E04               	movlw	4
  2266  000FB6  6ECA               	movwf	4042,c	;volatile
  2267  000FB8  0012               	return		;funcret
  2268  000FBA  FFFF               	dw	65535	; errata NOP
  2269  000FBC                     __end_of_PWM_config:
  2270                           	opt callstack 0
  2271                           
  2272 ;; *************** function _PWM2 *****************
  2273 ;; Defined at:
  2274 ;;		line 249 in file "main.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;  ciclo_util      2   31[COMRAM] unsigned int 
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;  t_alto          2   35[COMRAM] unsigned int 
  2279 ;; Return value:  Size  Location     Type
  2280 ;;                  1    wreg      void 
  2281 ;; Registers used:
  2282 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2288 ;;      Params:         2       0       0       0       0       0       0
  2289 ;;      Locals:         2       0       0       0       0       0       0
  2290 ;;      Temps:          2       0       0       0       0       0       0
  2291 ;;      Totals:         6       0       0       0       0       0       0
  2292 ;;Total ram usage:        6 bytes
  2293 ;; Hardware stack levels used:    1
  2294 ;; Hardware stack levels required when called:    4
  2295 ;; This function calls:
  2296 ;;		___lwdiv
  2297 ;;		___wmul
  2298 ;; This function is called by:
  2299 ;;		_main
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           	psect	text14
  2304  000B12                     __ptext14:
  2305                           	opt callstack 0
  2306  000B12                     _PWM2:
  2307                           	opt callstack 0
  2308  000B12  FFFF               	dw	65535	; assembler added errata NOP
  2309                           
  2310                           ;main.c: 250: unsigned int t_alto = (136 * ciclo_util) / 100;
  2311                           
  2312                           ;incstack = 0
  2313  000B14  C020  F013         	movff	PWM2@ciclo_util,___wmul@multiplier
  2314  000B18  C021  F014         	movff	PWM2@ciclo_util+1,___wmul@multiplier+1
  2315  000B1C  0E00               	movlw	0
  2316  000B1E  6E16               	movwf	___wmul@multiplicand+1,c
  2317  000B20  0E88               	movlw	136
  2318  000B22  6E15               	movwf	___wmul@multiplicand,c
  2319  000B24  EC75  F007         	call	___wmul	;wreg free
  2320  000B28  C013  F019         	movff	?___wmul,___lwdiv@dividend
  2321  000B2C  C014  F01A         	movff	?___wmul+1,___lwdiv@dividend+1
  2322  000B30  0E00               	movlw	0
  2323  000B32  6E1C               	movwf	___lwdiv@divisor+1,c
  2324  000B34  0E64               	movlw	100
  2325  000B36  6E1B               	movwf	___lwdiv@divisor,c
  2326  000B38  EC3A  F006         	call	___lwdiv	;wreg free
  2327  000B3C  C019  F024         	movff	?___lwdiv,PWM2@t_alto
  2328  000B40  C01A  F025         	movff	?___lwdiv+1,PWM2@t_alto+1
  2329                           
  2330                           ;main.c: 251: CCPR2L = t_alto>>2;
  2331  000B44  C024  F022         	movff	PWM2@t_alto,??_PWM2
  2332  000B48  C025  F023         	movff	PWM2@t_alto+1,??_PWM2+1
  2333  000B4C  90D8               	bcf	status,0,c
  2334  000B4E  3223               	rrcf	??_PWM2+1,f,c
  2335  000B50  3222               	rrcf	??_PWM2,f,c
  2336  000B52  90D8               	bcf	status,0,c
  2337  000B54  3223               	rrcf	??_PWM2+1,f,c
  2338  000B56  3222               	rrcf	??_PWM2,f,c
  2339  000B58  5022               	movf	??_PWM2,w,c
  2340  000B5A  6EBB               	movwf	4027,c	;volatile
  2341                           
  2342                           ;main.c: 252: t_alto = (t_alto<<4)&0x0030;
  2343  000B5C  C024  F022         	movff	PWM2@t_alto,??_PWM2
  2344  000B60  C025  F023         	movff	PWM2@t_alto+1,??_PWM2+1
  2345  000B64  3A22               	swapf	??_PWM2,f,c
  2346  000B66  3A23               	swapf	??_PWM2+1,f,c
  2347  000B68  0EF0               	movlw	240
  2348  000B6A  1623               	andwf	??_PWM2+1,f,c
  2349  000B6C  5022               	movf	??_PWM2,w,c
  2350  000B6E  0B0F               	andlw	15
  2351  000B70  1223               	iorwf	??_PWM2+1,f,c
  2352  000B72  0EF0               	movlw	240
  2353  000B74  1622               	andwf	??_PWM2,f,c
  2354  000B76  0E30               	movlw	48
  2355  000B78  1422               	andwf	??_PWM2,w,c
  2356  000B7A  6E24               	movwf	PWM2@t_alto,c
  2357  000B7C  6A25               	clrf	PWM2@t_alto+1,c
  2358                           
  2359                           ;main.c: 253: CCP2CON &= 0XCF;
  2360  000B7E  0ECF               	movlw	207
  2361  000B80  16BA               	andwf	4026,f,c	;volatile
  2362                           
  2363                           ;main.c: 254: CCP2CON |= t_alto;
  2364  000B82  5024               	movf	PWM2@t_alto,w,c
  2365  000B84  12BA               	iorwf	4026,f,c	;volatile
  2366  000B86  0012               	return		;funcret
  2367  000B88  FFFF               	dw	65535	; errata NOP
  2368  000B8A                     __end_of_PWM2:
  2369                           	opt callstack 0
  2370                           
  2371 ;; *************** function _PWM1 *****************
  2372 ;; Defined at:
  2373 ;;		line 217 in file "main.c"
  2374 ;; Parameters:    Size  Location     Type
  2375 ;;  ciclo_util      2   31[COMRAM] unsigned int 
  2376 ;; Auto vars:     Size  Location     Type
  2377 ;;  t_alto          2   35[COMRAM] unsigned int 
  2378 ;; Return value:  Size  Location     Type
  2379 ;;                  1    wreg      void 
  2380 ;; Registers used:
  2381 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2382 ;; Tracked objects:
  2383 ;;		On entry : 0/0
  2384 ;;		On exit  : 0/0
  2385 ;;		Unchanged: 0/0
  2386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2387 ;;      Params:         2       0       0       0       0       0       0
  2388 ;;      Locals:         2       0       0       0       0       0       0
  2389 ;;      Temps:          2       0       0       0       0       0       0
  2390 ;;      Totals:         6       0       0       0       0       0       0
  2391 ;;Total ram usage:        6 bytes
  2392 ;; Hardware stack levels used:    1
  2393 ;; Hardware stack levels required when called:    4
  2394 ;; This function calls:
  2395 ;;		___lwdiv
  2396 ;;		___wmul
  2397 ;; This function is called by:
  2398 ;;		_main
  2399 ;; This function uses a non-reentrant model
  2400 ;;
  2401                           
  2402                           	psect	text15
  2403  000B8A                     __ptext15:
  2404                           	opt callstack 0
  2405  000B8A                     _PWM1:
  2406                           	opt callstack 0
  2407  000B8A  FFFF               	dw	65535	; assembler added errata NOP
  2408                           
  2409                           ;main.c: 223: unsigned int t_alto = (136 * ciclo_util) / 100;
  2410                           
  2411                           ;incstack = 0
  2412  000B8C  C020  F013         	movff	PWM1@ciclo_util,___wmul@multiplier
  2413  000B90  C021  F014         	movff	PWM1@ciclo_util+1,___wmul@multiplier+1
  2414  000B94  0E00               	movlw	0
  2415  000B96  6E16               	movwf	___wmul@multiplicand+1,c
  2416  000B98  0E88               	movlw	136
  2417  000B9A  6E15               	movwf	___wmul@multiplicand,c
  2418  000B9C  EC75  F007         	call	___wmul	;wreg free
  2419  000BA0  C013  F019         	movff	?___wmul,___lwdiv@dividend
  2420  000BA4  C014  F01A         	movff	?___wmul+1,___lwdiv@dividend+1
  2421  000BA8  0E00               	movlw	0
  2422  000BAA  6E1C               	movwf	___lwdiv@divisor+1,c
  2423  000BAC  0E64               	movlw	100
  2424  000BAE  6E1B               	movwf	___lwdiv@divisor,c
  2425  000BB0  EC3A  F006         	call	___lwdiv	;wreg free
  2426  000BB4  C019  F024         	movff	?___lwdiv,PWM1@t_alto
  2427  000BB8  C01A  F025         	movff	?___lwdiv+1,PWM1@t_alto+1
  2428                           
  2429                           ;main.c: 229: CCPR1L = t_alto>>2;
  2430  000BBC  C024  F022         	movff	PWM1@t_alto,??_PWM1
  2431  000BC0  C025  F023         	movff	PWM1@t_alto+1,??_PWM1+1
  2432  000BC4  90D8               	bcf	status,0,c
  2433  000BC6  3223               	rrcf	??_PWM1+1,f,c
  2434  000BC8  3222               	rrcf	??_PWM1,f,c
  2435  000BCA  90D8               	bcf	status,0,c
  2436  000BCC  3223               	rrcf	??_PWM1+1,f,c
  2437  000BCE  3222               	rrcf	??_PWM1,f,c
  2438  000BD0  5022               	movf	??_PWM1,w,c
  2439  000BD2  6EBE               	movwf	4030,c	;volatile
  2440                           
  2441                           ;main.c: 235: t_alto = (t_alto<<4)&0x0030;
  2442  000BD4  C024  F022         	movff	PWM1@t_alto,??_PWM1
  2443  000BD8  C025  F023         	movff	PWM1@t_alto+1,??_PWM1+1
  2444  000BDC  3A22               	swapf	??_PWM1,f,c
  2445  000BDE  3A23               	swapf	??_PWM1+1,f,c
  2446  000BE0  0EF0               	movlw	240
  2447  000BE2  1623               	andwf	??_PWM1+1,f,c
  2448  000BE4  5022               	movf	??_PWM1,w,c
  2449  000BE6  0B0F               	andlw	15
  2450  000BE8  1223               	iorwf	??_PWM1+1,f,c
  2451  000BEA  0EF0               	movlw	240
  2452  000BEC  1622               	andwf	??_PWM1,f,c
  2453  000BEE  0E30               	movlw	48
  2454  000BF0  1422               	andwf	??_PWM1,w,c
  2455  000BF2  6E24               	movwf	PWM1@t_alto,c
  2456  000BF4  6A25               	clrf	PWM1@t_alto+1,c
  2457                           
  2458                           ;main.c: 241: CCP1CON &= 0XCF;
  2459  000BF6  0ECF               	movlw	207
  2460  000BF8  16BD               	andwf	4029,f,c	;volatile
  2461                           
  2462                           ;main.c: 246: CCP1CON |= t_alto;
  2463  000BFA  5024               	movf	PWM1@t_alto,w,c
  2464  000BFC  12BD               	iorwf	4029,f,c	;volatile
  2465  000BFE  0012               	return		;funcret
  2466  000C00  FFFF               	dw	65535	; errata NOP
  2467  000C02                     __end_of_PWM1:
  2468                           	opt callstack 0
  2469                           
  2470 ;; *************** function ___wmul *****************
  2471 ;; Defined at:
  2472 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  2473 ;; Parameters:    Size  Location     Type
  2474 ;;  multiplier      2   18[COMRAM] unsigned int 
  2475 ;;  multiplicand    2   20[COMRAM] unsigned int 
  2476 ;; Auto vars:     Size  Location     Type
  2477 ;;  product         2   22[COMRAM] unsigned int 
  2478 ;; Return value:  Size  Location     Type
  2479 ;;                  2   18[COMRAM] unsigned int 
  2480 ;; Registers used:
  2481 ;;		wreg, status,2, status,0, prodl, prodh
  2482 ;; Tracked objects:
  2483 ;;		On entry : 0/0
  2484 ;;		On exit  : 0/0
  2485 ;;		Unchanged: 0/0
  2486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2487 ;;      Params:         4       0       0       0       0       0       0
  2488 ;;      Locals:         2       0       0       0       0       0       0
  2489 ;;      Temps:          0       0       0       0       0       0       0
  2490 ;;      Totals:         6       0       0       0       0       0       0
  2491 ;;Total ram usage:        6 bytes
  2492 ;; Hardware stack levels used:    1
  2493 ;; Hardware stack levels required when called:    3
  2494 ;; This function calls:
  2495 ;;		Nothing
  2496 ;; This function is called by:
  2497 ;;		_PWM1
  2498 ;;		_PWM2
  2499 ;;		_atoi
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502                           
  2503                           	psect	text16
  2504  000EEA                     __ptext16:
  2505                           	opt callstack 0
  2506  000EEA                     ___wmul:
  2507                           	opt callstack 0
  2508  000EEA  FFFF               	dw	65535	; assembler added errata NOP
  2509                           
  2510                           ;incstack = 0
  2511  000EEC  5013               	movf	___wmul@multiplier,w,c
  2512  000EEE  0215               	mulwf	___wmul@multiplicand,c
  2513  000EF0  CFF3 F017          	movff	prodl,___wmul@product
  2514  000EF4  CFF4 F018          	movff	prodh,___wmul@product+1
  2515  000EF8  5013               	movf	___wmul@multiplier,w,c
  2516  000EFA  0216               	mulwf	___wmul@multiplicand+1,c
  2517  000EFC  50F3               	movf	prodl,w,c
  2518  000EFE  2618               	addwf	___wmul@product+1,f,c
  2519  000F00  5014               	movf	___wmul@multiplier+1,w,c
  2520  000F02  0215               	mulwf	___wmul@multiplicand,c
  2521  000F04  50F3               	movf	prodl,w,c
  2522  000F06  2618               	addwf	___wmul@product+1,f,c
  2523  000F08  C017  F013         	movff	___wmul@product,?___wmul
  2524  000F0C  C018  F014         	movff	___wmul@product+1,?___wmul+1
  2525  000F10  0012               	return		;funcret
  2526  000F12  FFFF               	dw	65535	; errata NOP
  2527  000F14                     __end_of___wmul:
  2528                           	opt callstack 0
  2529                           
  2530 ;; *************** function ___lwdiv *****************
  2531 ;; Defined at:
  2532 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;  dividend        2   24[COMRAM] unsigned int 
  2535 ;;  divisor         2   26[COMRAM] unsigned int 
  2536 ;; Auto vars:     Size  Location     Type
  2537 ;;  quotient        2   28[COMRAM] unsigned int 
  2538 ;;  counter         1   30[COMRAM] unsigned char 
  2539 ;; Return value:  Size  Location     Type
  2540 ;;                  2   24[COMRAM] unsigned int 
  2541 ;; Registers used:
  2542 ;;		wreg, status,2, status,0
  2543 ;; Tracked objects:
  2544 ;;		On entry : 0/0
  2545 ;;		On exit  : 0/0
  2546 ;;		Unchanged: 0/0
  2547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2548 ;;      Params:         4       0       0       0       0       0       0
  2549 ;;      Locals:         3       0       0       0       0       0       0
  2550 ;;      Temps:          0       0       0       0       0       0       0
  2551 ;;      Totals:         7       0       0       0       0       0       0
  2552 ;;Total ram usage:        7 bytes
  2553 ;; Hardware stack levels used:    1
  2554 ;; Hardware stack levels required when called:    3
  2555 ;; This function calls:
  2556 ;;		Nothing
  2557 ;; This function is called by:
  2558 ;;		_PWM1
  2559 ;;		_PWM2
  2560 ;;		_sprintf
  2561 ;; This function uses a non-reentrant model
  2562 ;;
  2563                           
  2564                           	psect	text17
  2565  000C74                     __ptext17:
  2566                           	opt callstack 0
  2567  000C74                     ___lwdiv:
  2568                           	opt callstack 0
  2569  000C74  FFFF               	dw	65535	; assembler added errata NOP
  2570                           
  2571                           ;incstack = 0
  2572  000C76  0E00               	movlw	0
  2573  000C78  6E1E               	movwf	___lwdiv@quotient+1,c
  2574  000C7A  0E00               	movlw	0
  2575  000C7C  6E1D               	movwf	___lwdiv@quotient,c
  2576  000C7E  501B               	movf	___lwdiv@divisor,w,c
  2577  000C80  101C               	iorwf	___lwdiv@divisor+1,w,c
  2578  000C82  B4D8               	btfsc	status,2,c
  2579  000C84  D020               	goto	l669
  2580  000C86  0E01               	movlw	1
  2581  000C88  6E1F               	movwf	___lwdiv@counter,c
  2582  000C8A  D005               	goto	l1369
  2583  000C8C                     l1367:
  2584  000C8C  FFFF               	dw	65535	; assembler added errata NOP
  2585  000C8E  90D8               	bcf	status,0,c
  2586  000C90  361B               	rlcf	___lwdiv@divisor,f,c
  2587  000C92  361C               	rlcf	___lwdiv@divisor+1,f,c
  2588  000C94  2A1F               	incf	___lwdiv@counter,f,c
  2589  000C96                     l1369:
  2590  000C96  FFFF               	dw	65535	; assembler added errata NOP
  2591  000C98  AE1C               	btfss	___lwdiv@divisor+1,7,c
  2592  000C9A  D7F8               	goto	l1367
  2593  000C9C                     u480:
  2594  000C9C  FFFF               	dw	65535	; assembler added errata NOP
  2595  000C9E  90D8               	bcf	status,0,c
  2596  000CA0  361D               	rlcf	___lwdiv@quotient,f,c
  2597  000CA2  361E               	rlcf	___lwdiv@quotient+1,f,c
  2598  000CA4  501B               	movf	___lwdiv@divisor,w,c
  2599  000CA6  5C19               	subwf	___lwdiv@dividend,w,c
  2600  000CA8  501C               	movf	___lwdiv@divisor+1,w,c
  2601  000CAA  581A               	subwfb	___lwdiv@dividend+1,w,c
  2602  000CAC  A0D8               	btfss	status,0,c
  2603  000CAE  D005               	goto	l1379
  2604  000CB0  501B               	movf	___lwdiv@divisor,w,c
  2605  000CB2  5E19               	subwf	___lwdiv@dividend,f,c
  2606  000CB4  501C               	movf	___lwdiv@divisor+1,w,c
  2607  000CB6  5A1A               	subwfb	___lwdiv@dividend+1,f,c
  2608  000CB8  801D               	bsf	___lwdiv@quotient,0,c
  2609  000CBA                     l1379:
  2610  000CBA  FFFF               	dw	65535	; assembler added errata NOP
  2611  000CBC  90D8               	bcf	status,0,c
  2612  000CBE  321C               	rrcf	___lwdiv@divisor+1,f,c
  2613  000CC0  321B               	rrcf	___lwdiv@divisor,f,c
  2614  000CC2  2E1F               	decfsz	___lwdiv@counter,f,c
  2615  000CC4  D7EB               	goto	u480
  2616  000CC6                     l669:
  2617  000CC6  FFFF               	dw	65535	; assembler added errata NOP
  2618  000CC8  C01D  F019         	movff	___lwdiv@quotient,?___lwdiv
  2619  000CCC  C01E  F01A         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2620  000CD0  0012               	return		;funcret
  2621  000CD2  FFFF               	dw	65535	; errata NOP
  2622  000CD4                     __end_of___lwdiv:
  2623                           	opt callstack 0
  2624                           
  2625 ;; *************** function _capture *****************
  2626 ;; Defined at:
  2627 ;;		line 186 in file "main.c"
  2628 ;; Parameters:    Size  Location     Type
  2629 ;;		None
  2630 ;; Auto vars:     Size  Location     Type
  2631 ;;  data_receive    1   17[COMRAM] unsigned char 
  2632 ;; Return value:  Size  Location     Type
  2633 ;;                  1    wreg      void 
  2634 ;; Registers used:
  2635 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2636 ;; Tracked objects:
  2637 ;;		On entry : 0/0
  2638 ;;		On exit  : 0/0
  2639 ;;		Unchanged: 0/0
  2640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2641 ;;      Params:         0       0       0       0       0       0       0
  2642 ;;      Locals:         1       0       0       0       0       0       0
  2643 ;;      Temps:          8       0       0       0       0       0       0
  2644 ;;      Totals:         9       0       0       0       0       0       0
  2645 ;;Total ram usage:        9 bytes
  2646 ;; Hardware stack levels used:    1
  2647 ;; Hardware stack levels required when called:    2
  2648 ;; This function calls:
  2649 ;;		i2_isdigit
  2650 ;;		i2_strlen
  2651 ;;		i2_transmit
  2652 ;; This function is called by:
  2653 ;;		Interrupt level 2
  2654 ;; This function uses a non-reentrant model
  2655 ;;
  2656                           
  2657                           	psect	intcode
  2658  000008                     __pintcode:
  2659                           	opt callstack 0
  2660  000008                     _capture:
  2661                           	opt callstack 0
  2662  000008  FFFF               	dw	65535	; assembler added errata NOP
  2663                           
  2664                           ;incstack = 0
  2665  00000A  8233               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2666  00000C  CFE9 F00A          	movff	fsr0l,??_capture
  2667  000010  CFEA F00B          	movff	fsr0h,??_capture+1
  2668  000014  CFD9 F00C          	movff	fsr2l,??_capture+2
  2669  000018  CFDA F00D          	movff	fsr2h,??_capture+3
  2670  00001C  CFF6 F00E          	movff	tblptrl,??_capture+4
  2671  000020  CFF7 F00F          	movff	tblptrh,??_capture+5
  2672  000024  CFF8 F010          	movff	tblptru,??_capture+6
  2673  000028  CFF5 F011          	movff	tablat,??_capture+7
  2674                           
  2675                           ;main.c: 190: if (PIR1bits.RCIF) {
  2676  00002C  AA9E               	btfss	3998,5,c	;volatile
  2677  00002E  D032               	goto	i2l144
  2678                           
  2679                           ;main.c: 191: char data_received = RCREG;
  2680  000030  CFAE F012          	movff	4014,capture@data_received	;volatile
  2681                           
  2682                           ;main.c: 192: if (data_received != 'o' && data_received != 't' && data_received != 'b') 
      +                          {
  2683  000034  0E6F               	movlw	111
  2684  000036  1812               	xorwf	capture@data_received,w,c
  2685  000038  B4D8               	btfsc	status,2,c
  2686  00003A  D024               	goto	i2l1659
  2687  00003C  0E74               	movlw	116
  2688  00003E  1812               	xorwf	capture@data_received,w,c
  2689  000040  B4D8               	btfsc	status,2,c
  2690  000042  D020               	goto	i2l1659
  2691  000044  0E62               	movlw	98
  2692  000046  1812               	xorwf	capture@data_received,w,c
  2693  000048  B4D8               	btfsc	status,2,c
  2694  00004A  D01C               	goto	i2l1659
  2695                           
  2696                           ;main.c: 193: if (!isdigit(data_received)) {
  2697  00004C  5012               	movf	capture@data_received,w,c
  2698  00004E  ECAE  F007         	call	i2_isdigit
  2699  000052  B0D8               	btfsc	status,0,c
  2700  000054  D007               	goto	i2l1657
  2701                           
  2702                           ;main.c: 194: transmit("Solo puedes enviar numeros\n\r");
  2703  000056  0E3C               	movlw	low STR_12
  2704  000058  6E05               	movwf	i2transmit@response,c
  2705  00005A  0E06               	movlw	high STR_12
  2706  00005C  6E06               	movwf	i2transmit@response+1,c
  2707  00005E  ECBF  F006         	call	i2_transmit	;wreg free
  2708                           
  2709                           ;main.c: 195: } else {
  2710  000062  D016               	goto	i2l1663
  2711  000064                     i2l1657:
  2712  000064  FFFF               	dw	65535	; assembler added errata NOP
  2713                           
  2714                           ;main.c: 196: cu[strlen(cu)] = data_received;
  2715  000066  0ECB               	movlw	low _cu
  2716  000068  6E01               	movwf	i2strlen@s,c
  2717  00006A  0E01               	movlw	high _cu
  2718  00006C  6E02               	movwf	i2strlen@s+1,c
  2719  00006E  EC36  F007         	call	i2_strlen	;wreg free
  2720  000072  0ECB               	movlw	low _cu
  2721  000074  2401               	addwf	?i2_strlen,w,c
  2722  000076  6ED9               	movwf	fsr2l,c
  2723  000078  0E01               	movlw	high _cu
  2724  00007A  2002               	addwfc	?i2_strlen+1,w,c
  2725  00007C  6EDA               	movwf	fsr2h,c
  2726  00007E  C012  FFDF         	movff	capture@data_received,indf2
  2727  000082  D006               	goto	i2l1663
  2728  000084                     i2l1659:
  2729  000084  FFFF               	dw	65535	; assembler added errata NOP
  2730                           
  2731                           ;main.c: 199: cu_changed = 1;
  2732  000086  0E01               	movlw	1
  2733  000088  0101               	movlb	1	; () banked
  2734  00008A  6FCA               	movwf	_cu_changed& (0+255),b
  2735                           
  2736                           ; BSR set to: 1
  2737                           ;main.c: 200: cu_flag = data_received;
  2738  00008C  C012  F1C9         	movff	capture@data_received,_cu_flag
  2739  000090                     i2l1663:
  2740  000090  FFFF               	dw	65535	; assembler added errata NOP
  2741                           
  2742                           ;main.c: 201: };main.c: 203: PIR1bits.RCIF = 0;
  2743  000092  9A9E               	bcf	3998,5,c	;volatile
  2744  000094                     i2l144:
  2745  000094  FFFF               	dw	65535	; assembler added errata NOP
  2746  000096  C011  FFF5         	movff	??_capture+7,tablat
  2747  00009A  C010  FFF8         	movff	??_capture+6,tblptru
  2748  00009E  C00F  FFF7         	movff	??_capture+5,tblptrh
  2749  0000A2  C00E  FFF6         	movff	??_capture+4,tblptrl
  2750  0000A6  C00D  FFDA         	movff	??_capture+3,fsr2h
  2751  0000AA  C00C  FFD9         	movff	??_capture+2,fsr2l
  2752  0000AE  C00B  FFEA         	movff	??_capture+1,fsr0h
  2753  0000B2  C00A  FFE9         	movff	??_capture,fsr0l
  2754  0000B6  9233               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2755  0000B8  0011               	retfie		f
  2756  0000BA  FFFF               	dw	65535	; errata NOP
  2757  0000BC                     __end_of_capture:
  2758                           	opt callstack 0
  2759                           
  2760 ;; *************** function i2_transmit *****************
  2761 ;; Defined at:
  2762 ;;		line 207 in file "main.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;  response        2    4[COMRAM] PTR unsigned char 
  2765 ;;		 -> STR_12(29), STR_9(25), STR_8(49), STR_4(3), 
  2766 ;;		 -> STR_3(21), STR_2(15), STR_1(15), 
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;  transmit        1    8[COMRAM] unsigned char 
  2769 ;; Return value:  Size  Location     Type
  2770 ;;                  1    wreg      void 
  2771 ;; Registers used:
  2772 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2773 ;; Tracked objects:
  2774 ;;		On entry : 0/0
  2775 ;;		On exit  : 0/0
  2776 ;;		Unchanged: 0/0
  2777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2778 ;;      Params:         2       0       0       0       0       0       0
  2779 ;;      Locals:         1       0       0       0       0       0       0
  2780 ;;      Temps:          2       0       0       0       0       0       0
  2781 ;;      Totals:         5       0       0       0       0       0       0
  2782 ;;Total ram usage:        5 bytes
  2783 ;; Hardware stack levels used:    1
  2784 ;; Hardware stack levels required when called:    1
  2785 ;; This function calls:
  2786 ;;		i2_strlen
  2787 ;; This function is called by:
  2788 ;;		_capture
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791                           
  2792                           	psect	text19
  2793  000D7E                     __ptext19:
  2794                           	opt callstack 0
  2795  000D7E                     i2_transmit:
  2796                           	opt callstack 0
  2797  000D7E  FFFF               	dw	65535	; assembler added errata NOP
  2798                           
  2799                           ;main.c: 208: for (char i = 0; i < strlen(response); i++) {
  2800                           
  2801                           ;incstack = 0
  2802  000D80  0E00               	movlw	0
  2803  000D82  6E09               	movwf	i2transmit@i,c
  2804  000D84  D012               	goto	i2l1563
  2805  000D86                     i2l149:
  2806  000D86  FFFF               	dw	65535	; assembler added errata NOP
  2807  000D88  A2AC               	btfss	4012,1,c	;volatile
  2808  000D8A  D7FD               	goto	i2l149
  2809                           
  2810                           ;main.c: 213: TXREG = response[i];
  2811  000D8C  5009               	movf	i2transmit@i,w,c
  2812  000D8E  2405               	addwf	i2transmit@response,w,c
  2813  000D90  6E07               	movwf	??i2_transmit& (0+255),c
  2814  000D92  0E00               	movlw	0
  2815  000D94  2006               	addwfc	i2transmit@response+1,w,c
  2816  000D96  6E08               	movwf	(??i2_transmit+1)& (0+255),c
  2817  000D98  C007  FFF6         	movff	??i2_transmit,tblptrl
  2818  000D9C  C008  FFF7         	movff	??i2_transmit+1,tblptrh
  2819  000DA0                     	if	0	;tblptru may be non-zero
  2820  000DA0                     	endif
  2821  000DA0                     	if	0	;tblptru may be non-zero
  2822  000DA0                     	endif
  2823  000DA0  0008               	tblrd		*
  2824  000DA2  FFFF               	dw	65535	; errata NOP
  2825  000DA4  CFF5 FFAD          	movff	tablat,4013	;volatile
  2826  000DA8  2A09               	incf	i2transmit@i,f,c
  2827  000DAA                     i2l1563:
  2828  000DAA  FFFF               	dw	65535	; assembler added errata NOP
  2829  000DAC  C005  F001         	movff	i2transmit@response,i2strlen@s
  2830  000DB0  C006  F002         	movff	i2transmit@response+1,i2strlen@s+1
  2831  000DB4  EC36  F007         	call	i2_strlen	;wreg free
  2832  000DB8  5009               	movf	i2transmit@i,w,c
  2833  000DBA  6E07               	movwf	??i2_transmit& (0+255),c
  2834  000DBC  6A08               	clrf	(??i2_transmit+1)& (0+255),c
  2835  000DBE  5001               	movf	?i2_strlen,w,c
  2836  000DC0  5C07               	subwf	??i2_transmit,w,c
  2837  000DC2  5002               	movf	?i2_strlen+1,w,c
  2838  000DC4  5808               	subwfb	??i2_transmit+1,w,c
  2839  000DC6  B0D8               	btfsc	status,0,c
  2840  000DC8  0012               	return		;funcret
  2841  000DCA  FFFF               	dw	65535	; assembler added errata NOP
  2842  000DCC  D7DC               	goto	i2l149
  2843  000DCE  FFFF               	dw	65535	; errata NOP
  2844  000DD0                     __end_ofi2_transmit:
  2845                           	opt callstack 0
  2846                           
  2847 ;; *************** function i2_strlen *****************
  2848 ;; Defined at:
  2849 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strlen.c"
  2850 ;; Parameters:    Size  Location     Type
  2851 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2852 ;;		 -> STR_12(29), main@f2_m_308(50), main@f1_m_306(50), STR_9(25), 
  2853 ;;		 -> STR_8(49), cu(3), main@f2_m(50), main@f1_m(50), 
  2854 ;;		 -> STR_5(13), STR_4(3), STR_3(21), STR_2(15), 
  2855 ;;		 -> STR_1(15), 
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;  strlen          2    2[COMRAM] PTR const unsigned char 
  2858 ;;		 -> STR_12(29), main@f2_m_308(50), main@f1_m_306(50), STR_9(25), 
  2859 ;;		 -> STR_8(49), cu(3), main@f2_m(50), main@f1_m(50), 
  2860 ;;		 -> STR_5(13), STR_4(3), STR_3(21), STR_2(15), 
  2861 ;;		 -> STR_1(15), 
  2862 ;; Return value:  Size  Location     Type
  2863 ;;                  2    0[COMRAM] unsigned int 
  2864 ;; Registers used:
  2865 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  2866 ;; Tracked objects:
  2867 ;;		On entry : 0/0
  2868 ;;		On exit  : 0/0
  2869 ;;		Unchanged: 0/0
  2870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2871 ;;      Params:         2       0       0       0       0       0       0
  2872 ;;      Locals:         2       0       0       0       0       0       0
  2873 ;;      Temps:          0       0       0       0       0       0       0
  2874 ;;      Totals:         4       0       0       0       0       0       0
  2875 ;;Total ram usage:        4 bytes
  2876 ;; Hardware stack levels used:    1
  2877 ;; This function calls:
  2878 ;;		Nothing
  2879 ;; This function is called by:
  2880 ;;		_capture
  2881 ;;		i2_transmit
  2882 ;; This function uses a non-reentrant model
  2883 ;;
  2884                           
  2885                           	psect	text20
  2886  000E6C                     __ptext20:
  2887                           	opt callstack 0
  2888  000E6C                     i2_strlen:
  2889                           	opt callstack 0
  2890  000E6C  FFFF               	dw	65535	; assembler added errata NOP
  2891                           
  2892                           ;incstack = 0
  2893  000E6E  C001  F003         	movff	i2strlen@s,i2strlen@cp
  2894  000E72  C002  F004         	movff	i2strlen@s+1,i2strlen@cp+1
  2895  000E76  D003               	goto	i2l1403
  2896  000E78                     i2l1401:
  2897  000E78  FFFF               	dw	65535	; assembler added errata NOP
  2898  000E7A  4A03               	infsnz	i2strlen@cp,f,c
  2899  000E7C  2A04               	incf	i2strlen@cp+1,f,c
  2900  000E7E                     i2l1403:
  2901  000E7E  FFFF               	dw	65535	; assembler added errata NOP
  2902  000E80  C003  FFF6         	movff	i2strlen@cp,tblptrl
  2903  000E84  C004  FFF7         	movff	i2strlen@cp+1,tblptrh
  2904  000E88  6AF8               	clrf	tblptru,c
  2905  000E8A  0E05               	movlw	(high __ramtop+-1)
  2906  000E8C  64F7               	cpfsgt	tblptrh,c
  2907  000E8E  D004               	bra	i2u53_47
  2908  000E90  0008               	tblrd		*
  2909  000E92  FFFF               	dw	65535	; errata NOP
  2910  000E94  50F5               	movf	tablat,w,c
  2911  000E96  D005               	bra	i2u53_40
  2912  000E98                     i2u53_47:
  2913  000E98  CFF6 FFE9          	movff	tblptrl,fsr0l
  2914  000E9C  CFF7 FFEA          	movff	tblptrh,fsr0h
  2915  000EA0  50EF               	movf	indf0,w,c
  2916  000EA2                     i2u53_40:
  2917  000EA2  0900               	iorlw	0
  2918  000EA4  A4D8               	btfss	status,2,c
  2919  000EA6  D7E8               	goto	i2l1401
  2920  000EA8  5001               	movf	i2strlen@s,w,c
  2921  000EAA  5C03               	subwf	i2strlen@cp,w,c
  2922  000EAC  6E01               	movwf	?i2_strlen,c
  2923  000EAE  5002               	movf	i2strlen@s+1,w,c
  2924  000EB0  5804               	subwfb	i2strlen@cp+1,w,c
  2925  000EB2  6E02               	movwf	?i2_strlen+1,c
  2926  000EB4  0012               	return		;funcret
  2927  000EB6  FFFF               	dw	65535	; errata NOP
  2928  000EB8                     __end_ofi2_strlen:
  2929                           	opt callstack 0
  2930                           
  2931 ;; *************** function i2_isdigit *****************
  2932 ;; Defined at:
  2933 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;  c               1    wreg     unsigned char 
  2936 ;; Auto vars:     Size  Location     Type
  2937 ;;  c               1    1[COMRAM] unsigned char 
  2938 ;; Return value:  Size  Location     Type
  2939 ;;		None               void
  2940 ;; Registers used:
  2941 ;;		wreg, status,2, status,0
  2942 ;; Tracked objects:
  2943 ;;		On entry : 0/0
  2944 ;;		On exit  : 0/0
  2945 ;;		Unchanged: 0/0
  2946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2947 ;;      Params:         0       0       0       0       0       0       0
  2948 ;;      Locals:         2       0       0       0       0       0       0
  2949 ;;      Temps:          1       0       0       0       0       0       0
  2950 ;;      Totals:         3       0       0       0       0       0       0
  2951 ;;Total ram usage:        3 bytes
  2952 ;; Hardware stack levels used:    1
  2953 ;; This function calls:
  2954 ;;		Nothing
  2955 ;; This function is called by:
  2956 ;;		_capture
  2957 ;; This function uses a non-reentrant model
  2958 ;;
  2959                           
  2960                           	psect	text21
  2961  000F5C                     __ptext21:
  2962                           	opt callstack 0
  2963  000F5C                     i2_isdigit:
  2964                           	opt callstack 0
  2965  000F5C  FFFF               	dw	65535	; assembler added errata NOP
  2966                           
  2967                           ;incstack = 0
  2968                           ;i2isdigit@c stored from wreg
  2969  000F5E  6E02               	movwf	i2isdigit@c,c
  2970  000F60  0E00               	movlw	0
  2971  000F62  6E03               	movwf	i2_isdigit$834,c
  2972  000F64  0E3A               	movlw	58
  2973  000F66  6002               	cpfslt	i2isdigit@c,c
  2974  000F68  D005               	goto	i2l1573
  2975  000F6A  0E2F               	movlw	47
  2976  000F6C  6402               	cpfsgt	i2isdigit@c,c
  2977  000F6E  D002               	goto	i2l1573
  2978  000F70  0E01               	movlw	1
  2979  000F72  6E03               	movwf	i2_isdigit$834,c
  2980  000F74                     i2l1573:
  2981  000F74  FFFF               	dw	65535	; assembler added errata NOP
  2982  000F76  C003  F001         	movff	i2_isdigit$834,??i2_isdigit
  2983  000F7A  3001               	rrcf	??i2_isdigit,w,c
  2984  000F7C  0012               	return		;funcret
  2985  000F7E  FFFF               	dw	65535	; errata NOP
  2986  000F80                     __end_ofi2_isdigit:
  2987                           	opt callstack 0
  2988                           
  2989                           	psect	rparam
  2990  0000                     
  2991                           	psect	temp
  2992  000033                     btemp:
  2993                           	opt callstack 0
  2994  000033                     	ds	1
  2995  0000                     int$flags	set	btemp
  2996  0000                     wtemp8	set	btemp+1
  2997  0000                     ttemp5	set	btemp+1
  2998  0000                     ttemp6	set	btemp+4
  2999  0000                     ttemp7	set	btemp+8
  3000                           tosu	equ	0xFFF
  3001                           tosh	equ	0xFFE
  3002                           tosl	equ	0xFFD
  3003                           stkptr	equ	0xFFC
  3004                           pclatu	equ	0xFFB
  3005                           pclath	equ	0xFFA
  3006                           pcl	equ	0xFF9
  3007                           tblptru	equ	0xFF8
  3008                           tblptrh	equ	0xFF7
  3009                           tblptrl	equ	0xFF6
  3010                           tablat	equ	0xFF5
  3011                           prodh	equ	0xFF4
  3012                           prodl	equ	0xFF3
  3013                           indf0	equ	0xFEF
  3014                           postinc0	equ	0xFEE
  3015                           postdec0	equ	0xFED
  3016                           preinc0	equ	0xFEC
  3017                           plusw0	equ	0xFEB
  3018                           fsr0h	equ	0xFEA
  3019                           fsr0l	equ	0xFE9
  3020                           wreg	equ	0xFE8
  3021                           indf1	equ	0xFE7
  3022                           postinc1	equ	0xFE6
  3023                           postdec1	equ	0xFE5
  3024                           preinc1	equ	0xFE4
  3025                           plusw1	equ	0xFE3
  3026                           fsr1h	equ	0xFE2
  3027                           fsr1l	equ	0xFE1
  3028                           bsr	equ	0xFE0
  3029                           indf2	equ	0xFDF
  3030                           postinc2	equ	0xFDE
  3031                           postdec2	equ	0xFDD
  3032                           preinc2	equ	0xFDC
  3033                           plusw2	equ	0xFDB
  3034                           fsr2h	equ	0xFDA
  3035                           fsr2l	equ	0xFD9
  3036                           status	equ	0xFD8


Data Sizes:
    Strings     188
    Constant    10
    Data        2
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     50      50
    BANK0           128      0       0
    BANK1           256    201     208
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_12(CODE[29]), main@f2_m_308(BANK1[50]), main@f1_m_306(BANK1[50]), STR_9(CODE[25]), 
		 -> STR_8(CODE[49]), cu(BANK1[3]), main@f2_m(BANK1[50]), main@f1_m(BANK1[50]), 
		 -> STR_5(CODE[13]), STR_4(CODE[3]), STR_3(CODE[21]), STR_2(CODE[15]), 
		 -> STR_1(CODE[15]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_12(CODE[29]), main@f2_m_308(BANK1[50]), main@f1_m_306(BANK1[50]), STR_9(CODE[25]), 
		 -> STR_8(CODE[49]), cu(BANK1[3]), main@f2_m(BANK1[50]), main@f1_m(BANK1[50]), 
		 -> STR_5(CODE[13]), STR_4(CODE[3]), STR_3(CODE[21]), STR_2(CODE[15]), 
		 -> STR_1(CODE[15]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> cu(BANK1[3]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_11(CODE[11]), STR_10(CODE[10]), STR_7(CODE[11]), STR_6(CODE[10]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> main@f2_m_308(BANK1[50]), main@f1_m_306(BANK1[50]), main@f2_m(BANK1[50]), main@f1_m(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    transmit@response	PTR unsigned char  size(2) Largest target is 49
		 -> STR_12(CODE[29]), STR_9(CODE[25]), STR_8(CODE[49]), STR_4(CODE[3]), 
		 -> STR_3(CODE[21]), STR_2(CODE[15]), STR_1(CODE[15]), 

    print_message_onLCD@message	PTR unsigned char  size(2) Largest target is 50
		 -> main@f2_m_308(BANK1[50]), main@f1_m_306(BANK1[50]), main@f2_m(BANK1[50]), main@f1_m(BANK1[50]), 
		 -> STR_5(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _transmit->_strlen
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _print_message_onLCD->_strlen
    _init_LCD->_R_I
    _atoi->___wmul
    _PWM2->___lwdiv
    _PWM1->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _capture in COMRAM

    _capture->i2_transmit
    i2_transmit->i2_strlen

Critical Paths under _main in BANK0

    None.

Critical Paths under _capture in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _capture in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _capture in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _capture in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _capture in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _capture in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               201   201      0    8736
                                              0 BANK1    201   201      0
                               _PWM1
                               _PWM2
                         _PWM_config
                               _atoi
                           _init_LCD
                     _initial_config
                _print_message_onLCD
         _serial_transmi_init_config
                            _sprintf
                           _transmit
 ---------------------------------------------------------------------------------
 (1) _transmit                                             5     3      2     888
                                             22 COMRAM     5     3      2
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    17      6    2059
                                             36 COMRAM    14     8      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                             31 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _serial_transmi_init_config                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _print_message_onLCD                                  6     3      3    1230
                                             22 COMRAM     6     3      3
                                _R_D
                                _R_I
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     292
                                             18 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _R_D                                                  1     1      0      22
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initial_config                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_LCD                                             1     1      0      22
                                             19 COMRAM     1     1      0
                                _R_I
 ---------------------------------------------------------------------------------
 (2) _R_I                                                  1     1      0      22
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _atoi                                                 7     5      2    1291
                                             24 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _PWM_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM2                                                 6     4      2    1475
                                             31 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _PWM1                                                 6     4      2    1475
                                             31 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     615
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     618
                                             24 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _capture                                              9     9      0     601
                                              9 COMRAM     9     9      0
                          i2_isdigit
                           i2_strlen
                         i2_transmit
 ---------------------------------------------------------------------------------
 (4) i2_transmit                                           5     3      2     258
                                              4 COMRAM     5     3      2
                           i2_strlen
 ---------------------------------------------------------------------------------
 (5) i2_strlen                                             4     2      2     142
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) i2_isdigit                                            3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM1
     ___lwdiv
       ___wmul (ARG)
     ___wmul
   _PWM2
     ___lwdiv
       ___wmul (ARG)
     ___wmul
   _PWM_config
   _atoi
     ___wmul
     _isdigit
   _init_LCD
     _R_I
   _initial_config
   _print_message_onLCD
     _R_D
     _R_I
     _strlen
   _serial_transmi_init_config
   _sprintf
     ___lwdiv
       ___wmul (ARG)
     ___lwmod
       ___lwdiv (ARG)
         ___wmul (ARG)
   _transmit
     _strlen

 _capture (ROOT)
   i2_isdigit
   i2_strlen
   i2_transmit
     i2_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C9      D0       7       81.3%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     32      32       1       39.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     102      15        0.0%
DATA                 0      0     102       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue May 05 14:34:53 2020

                                                     main@f1_m_306 0164  
                                                     main@f2_m_308 0196  
                                                               _cu 01CB  
                                              ___wmul@multiplicand 0015  
                                                      __CFG_OSC$XT 000000  
                                                              l149 0D34  
                                                              l669 0CC6  
                                                              l863 0B02  
                                                              l679 0E12  
                                                              l864 0B0C  
                                                              _LC3 007C5B  
                                                              _LC4 007C5C  
                                                              u430 0E56  
                                                              u510 0DF0  
                                                              _PR2 000FCB  
                                                              u600 08D8  
                                                              u700 0A8E  
                                                              u437 0E4C  
                                                              u630 097A  
                                                              u480 0C9C  
                                                              u650 0A02  
                                                              u580 0C48  
                                                              u660 0A1E  
                                                              u587 0C3E  
                                                              u780 07A8  
                                                              u857 0FCC  
                                                              u867 0CDC  
                                                              u877 0CF4  
                                                              u887 0D1C  
                                                              u897 0FE8  
                                                              _R_D 0FBC  
                                                              _R_I 0FD8  
                                                     __CFG_BOR$OFF 000000  
                                                              _cu1 01CF  
                                                              _cu2 01CE  
                                                       _PWM_config 0F9E  
                                                              wreg 000FE8  
                                                 ??_initial_config 0013  
                                                     __CFG_LVP$OFF 000000  
                                                             ?_R_D 0001  
                                                             ?_R_I 0001  
                                                     __CFG_WDT$OFF 000000  
                                                             l1351 0F50  
                                                             l1335 0E2C  
                                                             l1431 0D58  
                                                             l1337 0E32  
                                                             l1521 09F8  
                                                             l1513 0998  
                                                             l1601 0782  
                                                             l1531 0A34  
                                                             l1515 09A0  
                                                             l1611 07DC  
                                                             l1533 0A3A  
                                                             l1613 0806  
                                                             l1367 0C8C  
                                                             l1551 0ACE  
                                                             l1543 0A7C  
                                                             l1463 0C4E  
                                                             l1607 07B6  
                                                             l1369 0C96  
                                                             l1457 0C10  
                                                             l1473 08EC  
                                                             l1609 07CC  
                                                             l1617 0816  
                                                             l1379 0CBA  
                                                             l1547 0A96  
                                                             l1459 0C18  
                                                             l1395 0E06  
                                                             l1387 0DE0  
                                                             l1483 091A  
                                                             l1467 08CE  
                                                             l1635 08A2  
                                                             l1619 0830  
                                                             l1389 0DEA  
                                                             l1493 0944  
                                                             l1629 089A  
                                                             l1499 094A  
                                                             STR_1 0687  
                                                             STR_2 0696  
                                                             STR_3 0672  
                                                             STR_4 0684  
                                                             STR_5 06A5  
                                                             STR_6 06BD  
                                                             STR_7 06B2  
                                                             STR_8 060B  
                                                             STR_9 0659  
                                                             _LATC 000F8B  
                                                             _LATD 000F8C  
                                                             _IPR1 000F9F  
                                                             _PIE1 000F9D  
                                                             _PIR1 000F9E  
                                                             _PWM1 0B8A  
                                                             _PWM2 0B12  
                                                     __CFG_PWRT$ON 000000  
                                                             _atoi 0A30  
                                                             _main 06C8  
                                                             fsr0h 000FEA  
                                                             indf0 000FEF  
                                                             fsr2h 000FDA  
                                                             fsr0l 000FE9  
                                                             indf2 000FDF  
                                                             fsr2l 000FD9  
                                                             btemp 0033  
                                                             prodh 000FF4  
                                                             prodl 000FF3  
                                                             start 00BC  
                                                     ___param_bank 000000  
                                                            ??_R_D 0013  
                                                            ??_R_I 0013  
                                                       i2_transmit 0D7E  
                                                            ?_PWM1 0020  
                                                            ?_PWM2 0020  
                                                            ?_atoi 0019  
                                                            ?_main 0001  
                                                            STR_10 06BD  
                                                            STR_11 06B2  
                                                            STR_12 063C  
                                                            _T2CON 000FCA  
                                                  __end_of___lwdiv 0CD4  
                                                  __end_of___lwmod 0E20  
                                                            i2l144 0094  
                                                            i2l149 0D86  
                                                            _RCREG 000FAE  
                                                            _RCSTA 000FAB  
                                                            _SPBRG 000FAF  
                                                            _PORTC 000F82  
                                                            _PORTD 000F83  
                                                            _TRISC 000F94  
                                                            _TRISD 000F95  
                                                            _TXREG 000FAD  
                                                            _TXSTA 000FAC  
                                                  __end_of_capture 00BC  
                                                       i2isdigit@c 0002  
                                                  __end_of_dpowers 060B  
                                                  __end_of_isdigit 0F5C  
                                                            atoi@a 001E  
                                                            atoi@s 0019  
                                                            main@i 01C8  
                                                            tablat 000FF5  
                                                            ttemp5 0034  
                                                            ttemp6 0037  
                                                            ttemp7 003B  
                                                            status 000FD8  
                                                            wtemp8 0034  
                                                  __end_of_sprintf 0A30  
                                                   PWM1@ciclo_util 0020  
                                                 __end_ofi2_strlen 0EB8  
                                                     __end_of_PWM1 0C02  
                                                     __end_of_PWM2 0B8A  
                                                  __initialization 0EB8  
                                                     __end_of_atoi 0B12  
                                                     __end_of_main 08C2  
                                             print_message_onLCD@i 001C  
                                               __size_ofi2_isdigit 0024  
                                                           ??_PWM1 0022  
                                                           ??_PWM2 0022  
                                                           ??_atoi 001B  
                                                           ??_main 0033  
                                                    __activetblptr 000002  
                                                   PWM2@ciclo_util 0020  
                                                      ?_PWM_config 0001  
                                                       i2strlen@cp 0003  
                                                           _CCPR1L 000FBE  
                                                           _CCPR2L 000FBB  
                                                           i2l1401 0E78  
                                                           i2l1403 0E7E  
                                                           i2l1563 0DAA  
                                                           i2l1573 0F74  
                                                           i2l1663 0090  
                                                           i2l1657 0064  
                                                           i2l1659 0084  
                                                           _INTCON 000FF2  
                                                           ___wmul 0EEA  
                                                        ??___lwdiv 001D  
                                                 __end_of_init_LCD 0D2C  
                                                        ??___lwmod 0024  
                                                      ?i2_transmit 0005  
                                                        ??_capture 000A  
                                                           _strlen 0E20  
                                         print_message_onLCD@place 0019  
                                                        ??_isdigit 0013  
                                                     __mediumconst 0000  
                                                           tblptrh 000FF7  
                                                           tblptrl 000FF6  
                                                           tblptru 000FF8  
                                                 __end_of_transmit 0D7E  
                                                        ??_sprintf 002B  
                                                __end_ofi2_isdigit 0F80  
                                                       __accesstop 0080  
                                          __end_of__initialization 0EDC  
                                                    ___rparam_used 000001  
                                              __size_of_PWM_config 001E  
                                                   __pcstackCOMRAM 0001  
                                                     __pidataBANK1 0FF4  
                                                      i2transmit@i 0009  
                                                        ?i2_strlen 0001  
                                      __end_of_print_message_onLCD 0C74  
                                                       __pbssBANK1 01C9  
                                              __size_ofi2_transmit 0052  
                                                          ?___wmul 0013  
                                                          _CCP1CON 000FBD  
                                                          _CCP2CON 000FBA  
                                                          R_D@dato 0013  
                                                          ?_strlen 0013  
                                                       _cu_changed 01CA  
                                                          R_I@dato 0013  
                                                          i2u53_40 0EA2  
                                                          i2u53_47 0E98  
                                                       ??i2_strlen 0003  
                                                        ?_init_LCD 0001  
                                                          __Hparam 0000  
                                     ??_serial_transmi_init_config 0013  
                                                          __Lparam 0000  
                                                  __size_of___wmul 002A  
                                                          ___lwdiv 0C74  
                                                          ___lwmod 0DD0  
                                                        ?_transmit 0017  
                                                     __psmallconst 0600  
                                                          __pcinit 0EB8  
                                                          __ramtop 0600  
                                                          _capture 0008  
                                                          __ptext0 06C8  
                                                          __ptext1 0D2C  
                                                          __ptext2 08C2  
                                                          __ptext3 0DD0  
                                                          __ptext4 0F14  
                                                          __ptext5 0C02  
                                                          __ptext6 0E20  
                                                          __ptext7 0FBC  
                                                          __ptext8 0F80  
                                                          __ptext9 0CD4  
                                                          _cu_flag 01C9  
                                                  __size_of_strlen 004C  
                                                     __size_of_R_D 001C  
                                                     __size_of_R_I 001C  
                                                    i2_isdigit$834 0003  
                                                          _dpowers 0601  
                                                     ??_PWM_config 0013  
                                                          _isdigit 0F38  
                                                          _sprintf 08C2  
                                             end_of_initialization 0EDC  
                              __size_of_serial_transmi_init_config 0024  
                                                       ??_init_LCD 0014  
                                                    __Lmediumconst 0000  
                                          __size_of_initial_config 001E  
                                               __end_of_PWM_config 0FBC  
                                                          postdec2 000FDD  
                                                          postinc2 000FDE  
                                                     ??i2_transmit 0007  
                                                       ??_transmit 0019  
                                                          strlen@s 0013  
                                               __end_ofi2_transmit 0DD0  
                                                        _TXSTAbits 000FAC  
                                                        i2_isdigit 0F5C  
                                                   __end_of___wmul 0F14  
                                                   __end_of_strlen 0E6C  
                                              start_initialization 0EB8  
                                                 transmit@response 0017  
                                                      __end_of_R_D 0FD8  
                                                      __end_of_R_I 0FF4  
                                                __size_ofi2_strlen 004C  
                                                        i2strlen@s 0001  
                               __end_of_serial_transmi_init_config 0F38  
                                       _serial_transmi_init_config 0F14  
                                                       ?i2_isdigit 0001  
                                                         ??___wmul 0017  
                                                      __pdataBANK1 01CE  
                                                         ??_strlen 0015  
                                                    __pcstackBANK1 0100  
                                                      sprintf@flag 002E  
                                                   _initial_config 0F80  
                                                      sprintf@prec 002F  
                                             capture@data_received 0012  
                                                __size_of_init_LCD 0058  
                                     __size_of_print_message_onLCD 0072  
                                       print_message_onLCD@message 0017  
                                                 ___lwdiv@dividend 0019  
                                                        __pintcode 0008  
                                                         ?___lwdiv 0019  
                                                         ?___lwmod 0020  
                                                         ?_capture 0001  
                                                __size_of_transmit 0052  
                                                      __smallconst 0600  
                                                         ?_isdigit 0001  
                                                       PWM1@t_alto 0024  
                                                       PWM2@t_alto 0024  
                                                 ___lwdiv@quotient 001D  
                                                         ?_sprintf 0025  
                                           __end_of_initial_config 0F9E  
                                                   ___wmul@product 0017  
                                                      ??i2_isdigit 0001  
                                                         _PIR1bits 000F9E  
                                                         _RCONbits 000FD0  
                                                ___wmul@multiplier 0013  
                                                         i2_strlen 0E6C  
                                                  ?_initial_config 0001  
                                                         __Hrparam 0000  
                                                         __Lrparam 0000  
                                                 __size_of___lwdiv 0060  
                                                 __size_of___lwmod 0050  
                                                      _isdigit$834 0014  
                                                 __size_of_capture 00B4  
                                                       sprintf@val 0030  
                                                 __size_of_isdigit 0024  
                                                  ___lwdiv@divisor 001B  
                                                  ___lwdiv@counter 001F  
                                                         __ptext10 0FD8  
                                                         __ptext11 0A30  
                                                         __ptext20 0E6C  
                                                         __ptext12 0F38  
                                                         __ptext21 0F5C  
                                                         __ptext13 0F9E  
                                                         __ptext14 0B12  
                                                         __ptext15 0B8A  
                                                         __ptext16 0EEA  
                                                         __ptext17 0C74  
                                                         __ptext19 0D7E  
                                                 __size_of_sprintf 016E  
                                                    __size_of_PWM1 0078  
                                                    __size_of_PWM2 0078  
                                                         _init_LCD 0CD4  
                                                    __size_of_atoi 00E2  
                                                    __size_of_main 01FA  
                                      ?_serial_transmi_init_config 0001  
                                                         int$flags 0033  
                                                         atoi@sign 001D  
                                                         main@f1_m 0100  
                                                         main@f2_m 0132  
                                                         _transmit 0D2C  
                                              _print_message_onLCD 0C02  
                                                        transmit@i 001B  
                                                         isdigit@c 0015  
                                                         intlevel2 0FF6  
                                                        sprintf@ap 002C  
                                                        sprintf@sp 0025  
                                               i2transmit@response 0005  
                                                 ___lwmod@dividend 0020  
                                             ?_print_message_onLCD 0017  
                                                         sprintf@c 0032  
                                                         sprintf@f 0027  
                                                  ___lwmod@divisor 0022  
                                                         strlen@cp 0015  
                                                  ___lwmod@counter 0024  
                                            ??_print_message_onLCD 001A  
