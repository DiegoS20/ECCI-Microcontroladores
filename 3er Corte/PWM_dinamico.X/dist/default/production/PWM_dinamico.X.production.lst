

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun May 03 20:04:46 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37  0000                     
    38                           ; Version 2.05
    39                           ; Generated 20/12/2018 GMT
    40                           ; 
    41                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F452 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     
    73                           	psect	idataBANK0
    74  000FA2                     __pidataBANK0:
    75                           	opt callstack 0
    76                           
    77                           ;initializer for _cu2
    78  000FA2  19                 	db	25
    79                           
    80                           ;initializer for _cu1
    81  000FA3  4B                 	db	75
    82                           
    83                           	psect	smallconst
    84  000600                     __psmallconst:
    85                           	opt callstack 0
    86  000600  00                 	db	0
    87  000601                     _dpowers:
    88                           	opt callstack 0
    89  000601  0001               	dw	1
    90  000603  000A               	dw	10
    91  000605  0064               	dw	100
    92  000607  03E8               	dw	1000
    93  000609  2710               	dw	10000
    94  00060B                     __end_of_dpowers:
    95                           	opt callstack 0
    96  0000                     _TXREG	set	4013
    97  0000                     _TXSTAbits	set	4012
    98  0000                     _RCREG	set	4014
    99  0000                     _PIR1bits	set	3998
   100  0000                     _T2CON	set	4042
   101  0000                     _CCPR2L	set	4027
   102  0000                     _CCPR1L	set	4030
   103  0000                     _PR2	set	4043
   104  0000                     _CCP2CON	set	4026
   105  0000                     _CCP1CON	set	4029
   106  0000                     _RCSTA	set	4011
   107  0000                     _TXSTA	set	4012
   108  0000                     _IPR1	set	3999
   109  0000                     _PIR1	set	3998
   110  0000                     _PIE1	set	3997
   111  0000                     _SPBRG	set	4015
   112  0000                     _RCONbits	set	4048
   113  0000                     _INTCON	set	4082
   114  0000                     _PORTD	set	3971
   115  0000                     _PORTC	set	3970
   116  0000                     _LATD	set	3980
   117  0000                     _LATC	set	3979
   118  0000                     _TRISD	set	3989
   119  0000                     _TRISC	set	3988
   120  0000                     _LC4	set	31836
   121  0000                     _LC3	set	31835
   122  00060B                     STR_6:
   123  00060B  45                 	db	69	;'E'
   124  00060C  6C                 	db	108	;'l'
   125  00060D  20                 	db	32
   126  00060E  76                 	db	118	;'v'
   127  00060F  61                 	db	97	;'a'
   128  000610  6C                 	db	108	;'l'
   129  000611  6F                 	db	111	;'o'
   130  000612  72                 	db	114	;'r'
   131  000613  20                 	db	32
   132  000614  64                 	db	100	;'d'
   133  000615  65                 	db	101	;'e'
   134  000616  20                 	db	32
   135  000617  6C                 	db	108	;'l'
   136  000618  61                 	db	97	;'a'
   137  000619  20                 	db	32
   138  00061A  73                 	db	115	;'s'
   139  00061B  65                 	db	101	;'e'
   140  00061C  6E                 	db	110	;'n'
   141  00061D  69                 	db	105	;'i'
   142  00061E  61                 	db	97	;'a'
   143  00061F  6C                 	db	108	;'l'
   144  000620  20                 	db	32
   145  000621  64                 	db	100	;'d'
   146  000622  65                 	db	101	;'e'
   147  000623  62                 	db	98	;'b'
   148  000624  65                 	db	101	;'e'
   149  000625  20                 	db	32
   150  000626  65                 	db	101	;'e'
   151  000627  73                 	db	115	;'s'
   152  000628  74                 	db	116	;'t'
   153  000629  61                 	db	97	;'a'
   154  00062A  72                 	db	114	;'r'
   155  00062B  20                 	db	32
   156  00062C  65                 	db	101	;'e'
   157  00062D  6E                 	db	110	;'n'
   158  00062E  74                 	db	116	;'t'
   159  00062F  72                 	db	114	;'r'
   160  000630  65                 	db	101	;'e'
   161  000631  20                 	db	32
   162  000632  30                 	db	48	;'0'
   163  000633  20                 	db	32
   164  000634  79                 	db	121	;'y'
   165  000635  20                 	db	32
   166  000636  31                 	db	49	;'1'
   167  000637  30                 	db	48	;'0'
   168  000638  30                 	db	48	;'0'
   169  000639  0A                 	db	10
   170  00063A  0D                 	db	13
   171  00063B  00                 	db	0
   172  00063C                     STR_10:
   173  00063C  53                 	db	83	;'S'
   174  00063D  6F                 	db	111	;'o'
   175  00063E  6C                 	db	108	;'l'
   176  00063F  6F                 	db	111	;'o'
   177  000640  20                 	db	32
   178  000641  70                 	db	112	;'p'
   179  000642  75                 	db	117	;'u'
   180  000643  65                 	db	101	;'e'
   181  000644  64                 	db	100	;'d'
   182  000645  65                 	db	101	;'e'
   183  000646  73                 	db	115	;'s'
   184  000647  20                 	db	32
   185  000648  65                 	db	101	;'e'
   186  000649  6E                 	db	110	;'n'
   187  00064A  76                 	db	118	;'v'
   188  00064B  69                 	db	105	;'i'
   189  00064C  61                 	db	97	;'a'
   190  00064D  72                 	db	114	;'r'
   191  00064E  20                 	db	32
   192  00064F  6E                 	db	110	;'n'
   193  000650  75                 	db	117	;'u'
   194  000651  6D                 	db	109	;'m'
   195  000652  65                 	db	101	;'e'
   196  000653  72                 	db	114	;'r'
   197  000654  6F                 	db	111	;'o'
   198  000655  73                 	db	115	;'s'
   199  000656  0A                 	db	10
   200  000657  0D                 	db	13
   201  000658  00                 	db	0
   202  000659                     STR_7:
   203  000659  4C                 	db	76	;'L'
   204  00065A  61                 	db	97	;'a'
   205  00065B  20                 	db	32
   206  00065C  6F                 	db	111	;'o'
   207  00065D  70                 	db	112	;'p'
   208  00065E  63                 	db	99	;'c'
   209  00065F  69                 	db	105	;'i'
   210  000660  6F                 	db	111	;'o'
   211  000661  6E                 	db	110	;'n'
   212  000662  20                 	db	32
   213  000663  6E                 	db	110	;'n'
   214  000664  6F                 	db	111	;'o'
   215  000665  20                 	db	32
   216  000666  65                 	db	101	;'e'
   217  000667  73                 	db	115	;'s'
   218  000668  20                 	db	32
   219  000669  76                 	db	118	;'v'
   220  00066A  61                 	db	97	;'a'
   221  00066B  6C                 	db	108	;'l'
   222  00066C  69                 	db	105	;'i'
   223  00066D  64                 	db	100	;'d'
   224  00066E  61                 	db	97	;'a'
   225  00066F  0A                 	db	10
   226  000670  0D                 	db	13
   227  000671  00                 	db	0
   228  000672                     STR_3:
   229  000672  41                 	db	65	;'A'
   230  000673  6D                 	db	109	;'m'
   231  000674  62                 	db	98	;'b'
   232  000675  61                 	db	97	;'a'
   233  000676  73                 	db	115	;'s'
   234  000677  20                 	db	32
   235  000678  73                 	db	115	;'s'
   236  000679  65                 	db	101	;'e'
   237  00067A  6E                 	db	110	;'n'
   238  00067B  69                 	db	105	;'i'
   239  00067C  61                 	db	97	;'a'
   240  00067D  6C                 	db	108	;'l'
   241  00067E  65                 	db	101	;'e'
   242  00067F  73                 	db	115	;'s'
   243  000680  3A                 	db	58	;':'
   244  000681  20                 	db	32
   245  000682  62                 	db	98	;'b'
   246  000683  20                 	db	32
   247  000684  0A                 	db	10
   248  000685  0D                 	db	13
   249  000686  00                 	db	0
   250  000687                     STR_1:
   251  000687  53                 	db	83	;'S'
   252  000688  65                 	db	101	;'e'
   253  000689  6E                 	db	110	;'n'
   254  00068A  69                 	db	105	;'i'
   255  00068B  61                 	db	97	;'a'
   256  00068C  6C                 	db	108	;'l'
   257  00068D  20                 	db	32
   258  00068E  31                 	db	49	;'1'
   259  00068F  3A                 	db	58	;':'
   260  000690  20                 	db	32
   261  000691  6F                 	db	111	;'o'
   262  000692  20                 	db	32
   263  000693  0A                 	db	10
   264  000694  0D                 	db	13
   265  000695  00                 	db	0
   266  000696                     STR_2:
   267  000696  53                 	db	83	;'S'
   268  000697  65                 	db	101	;'e'
   269  000698  6E                 	db	110	;'n'
   270  000699  69                 	db	105	;'i'
   271  00069A  61                 	db	97	;'a'
   272  00069B  6C                 	db	108	;'l'
   273  00069C  20                 	db	32
   274  00069D  32                 	db	50	;'2'
   275  00069E  3A                 	db	58	;':'
   276  00069F  20                 	db	32
   277  0006A0  74                 	db	116	;'t'
   278  0006A1  20                 	db	32
   279  0006A2  0A                 	db	10
   280  0006A3  0D                 	db	13
   281  0006A4  00                 	db	0
   282  0006A5                     STR_5:
   283  0006A5  46                 	db	70	;'F'
   284  0006A6  72                 	db	114	;'r'
   285  0006A7  65                 	db	101	;'e'
   286  0006A8  71                 	db	113	;'q'
   287  0006A9  3A                 	db	58	;':'
   288  0006AA  32                 	db	50	;'2'
   289  0006AB  39                 	db	57	;'9'
   290  0006AC  2E                 	db	46
   291  0006AD  34                 	db	52	;'4'
   292  0006AE  6B                 	db	107	;'k'
   293  0006AF  48                 	db	72	;'H'
   294  0006B0  7A                 	db	122	;'z'
   295  0006B1  00                 	db	0
   296  0006B2                     STR_9:
   297  0006B2  43                 	db	67	;'C'
   298  0006B3  55                 	db	85	;'U'
   299  0006B4  32                 	db	50	;'2'
   300  0006B5  3A                 	db	58	;':'
   301  0006B6  25                 	db	37
   302  0006B7  69                 	db	105	;'i'
   303  0006B8  25                 	db	37
   304  0006B9  25                 	db	37
   305  0006BA  20                 	db	32
   306  0006BB  20                 	db	32
   307  0006BC  00                 	db	0
   308  0006BD                     STR_8:
   309  0006BD  43                 	db	67	;'C'
   310  0006BE  55                 	db	85	;'U'
   311  0006BF  31                 	db	49	;'1'
   312  0006C0  3A                 	db	58	;':'
   313  0006C1  25                 	db	37
   314  0006C2  69                 	db	105	;'i'
   315  0006C3  25                 	db	37
   316  0006C4  25                 	db	37
   317  0006C5  20                 	db	32
   318  0006C6  00                 	db	0
   319  0000                     
   320                           ; #config settings
   321  0006C7  00                 	db	0	; dummy byte at the end
   322  0000                     
   323                           	psect	cinit
   324  000E66                     __pcinit:
   325                           	opt callstack 0
   326  000E66                     start_initialization:
   327                           	opt callstack 0
   328  000E66                     __initialization:
   329                           	opt callstack 0
   330                           
   331                           ; Initialize objects allocated to BANK0 (2 bytes)
   332                           ; load TBLPTR registers with __pidataBANK0
   333  000E66  0EA2               	movlw	low __pidataBANK0
   334  000E68  6EF6               	movwf	tblptrl,c
   335  000E6A  0E0F               	movlw	high __pidataBANK0
   336  000E6C  6EF7               	movwf	tblptrh,c
   337  000E6E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   338  000E70  6EF8               	movwf	tblptru,c
   339  000E72  0009               	tblrd		*+	;fetch initializer
   340  000E74  CFF5 F0EA          	movff	tablat,__pdataBANK0
   341  000E78  0009               	tblrd		*+	;fetch initializer
   342  000E7A  CFF5 F0EB          	movff	tablat,__pdataBANK0+1
   343                           
   344                           ; Clear objects allocated to BANK0 (5 bytes)
   345  000E7E  0100               	movlb	0
   346  000E80  6BE9               	clrf	(__pbssBANK0+4)& (0+255),b
   347  000E82  6BE8               	clrf	(__pbssBANK0+3)& (0+255),b
   348  000E84  6BE7               	clrf	(__pbssBANK0+2)& (0+255),b
   349  000E86  6BE6               	clrf	(__pbssBANK0+1)& (0+255),b
   350  000E88  6BE5               	clrf	__pbssBANK0& (0+255),b
   351  000E8A                     end_of_initialization:
   352                           	opt callstack 0
   353  000E8A                     __end_of__initialization:
   354                           	opt callstack 0
   355  000E8A  9033               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   356  000E8C  9233               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   357  000E8E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   358  000E90  6EF8               	movwf	tblptru,c
   359  000E92  0100               	movlb	0
   360  000E94  EF64  F003         	goto	_main	;jump to C main() function
   361                           
   362                           	psect	bssBANK0
   363  0000E5                     __pbssBANK0:
   364                           	opt callstack 0
   365  0000E5                     _cu_flag:
   366                           	opt callstack 0
   367  0000E5                     	ds	1
   368  0000E6                     _cu_changed:
   369                           	opt callstack 0
   370  0000E6                     	ds	1
   371  0000E7                     _cu:
   372                           	opt callstack 0
   373  0000E7                     	ds	3
   374                           
   375                           	psect	dataBANK0
   376  0000EA                     __pdataBANK0:
   377                           	opt callstack 0
   378  0000EA                     _cu2:
   379                           	opt callstack 0
   380  0000EA                     	ds	1
   381  0000EB                     _cu1:
   382                           	opt callstack 0
   383  0000EB                     	ds	1
   384                           
   385                           	psect	cstackBANK0
   386  000080                     __pcstackBANK0:
   387                           	opt callstack 0
   388  000080                     main@f1_m:
   389                           	opt callstack 0
   390                           
   391                           ; 50 bytes @ 0x0
   392  000080                     	ds	50
   393  0000B2                     main@f2_m:
   394                           	opt callstack 0
   395                           
   396                           ; 50 bytes @ 0x32
   397  0000B2                     	ds	50
   398  0000E4                     main@i:
   399                           	opt callstack 0
   400                           
   401                           ; 1 bytes @ 0x64
   402  0000E4                     	ds	1
   403                           
   404                           	psect	cstackCOMRAM
   405  000001                     __pcstackCOMRAM:
   406                           	opt callstack 0
   407  000001                     ??i2_isdigit:
   408  000001                     ?i2_strlen:
   409                           	opt callstack 0
   410  000001                     i2strlen@s:
   411                           	opt callstack 0
   412                           
   413                           ; 2 bytes @ 0x0
   414  000001                     	ds	1
   415  000002                     i2isdigit@c:
   416                           	opt callstack 0
   417                           
   418                           ; 1 bytes @ 0x1
   419  000002                     	ds	1
   420  000003                     i2_isdigit$830:
   421                           	opt callstack 0
   422  000003                     i2strlen@cp:
   423                           	opt callstack 0
   424                           
   425                           ; 2 bytes @ 0x2
   426  000003                     	ds	2
   427  000005                     i2transmit@response:
   428                           	opt callstack 0
   429                           
   430                           ; 2 bytes @ 0x4
   431  000005                     	ds	2
   432  000007                     ??i2_transmit:
   433                           
   434                           ; 1 bytes @ 0x6
   435  000007                     	ds	2
   436  000009                     i2transmit@i:
   437                           	opt callstack 0
   438                           
   439                           ; 1 bytes @ 0x8
   440  000009                     	ds	1
   441  00000A                     ??_capture:
   442                           
   443                           ; 1 bytes @ 0x9
   444  00000A                     	ds	8
   445  000012                     capture@data_received:
   446                           	opt callstack 0
   447                           
   448                           ; 1 bytes @ 0x11
   449  000012                     	ds	1
   450  000013                     ??_isdigit:
   451  000013                     ?_strlen:
   452                           	opt callstack 0
   453  000013                     ?___wmul:
   454                           	opt callstack 0
   455  000013                     R_I@dato:
   456                           	opt callstack 0
   457  000013                     R_D@dato:
   458                           	opt callstack 0
   459  000013                     ___wmul@multiplier:
   460                           	opt callstack 0
   461  000013                     strlen@s:
   462                           	opt callstack 0
   463                           
   464                           ; 2 bytes @ 0x12
   465  000013                     	ds	1
   466  000014                     ??_init_LCD:
   467  000014                     _isdigit$830:
   468                           	opt callstack 0
   469                           
   470                           ; 1 bytes @ 0x13
   471  000014                     	ds	1
   472  000015                     isdigit@c:
   473                           	opt callstack 0
   474  000015                     ___wmul@multiplicand:
   475                           	opt callstack 0
   476  000015                     strlen@cp:
   477                           	opt callstack 0
   478                           
   479                           ; 2 bytes @ 0x14
   480  000015                     	ds	2
   481  000017                     print_message_onLCD@message:
   482                           	opt callstack 0
   483  000017                     transmit@response:
   484                           	opt callstack 0
   485  000017                     ___wmul@product:
   486                           	opt callstack 0
   487                           
   488                           ; 2 bytes @ 0x16
   489  000017                     	ds	2
   490  000019                     ??_transmit:
   491  000019                     ?_atoi:
   492                           	opt callstack 0
   493  000019                     ?___lwdiv:
   494                           	opt callstack 0
   495  000019                     print_message_onLCD@place:
   496                           	opt callstack 0
   497  000019                     ___lwdiv@dividend:
   498                           	opt callstack 0
   499  000019                     atoi@s:
   500                           	opt callstack 0
   501                           
   502                           ; 2 bytes @ 0x18
   503  000019                     	ds	1
   504  00001A                     ??_print_message_onLCD:
   505                           
   506                           ; 1 bytes @ 0x19
   507  00001A                     	ds	1
   508  00001B                     ??_atoi:
   509  00001B                     transmit@i:
   510                           	opt callstack 0
   511  00001B                     ___lwdiv@divisor:
   512                           	opt callstack 0
   513                           
   514                           ; 2 bytes @ 0x1A
   515  00001B                     	ds	1
   516  00001C                     print_message_onLCD@i:
   517                           	opt callstack 0
   518                           
   519                           ; 1 bytes @ 0x1B
   520  00001C                     	ds	1
   521  00001D                     atoi@sign:
   522                           	opt callstack 0
   523  00001D                     ___lwdiv@quotient:
   524                           	opt callstack 0
   525                           
   526                           ; 2 bytes @ 0x1C
   527  00001D                     	ds	1
   528  00001E                     atoi@a:
   529                           	opt callstack 0
   530                           
   531                           ; 2 bytes @ 0x1D
   532  00001E                     	ds	1
   533  00001F                     ___lwdiv@counter:
   534                           	opt callstack 0
   535                           
   536                           ; 1 bytes @ 0x1E
   537  00001F                     	ds	1
   538  000020                     ?___lwmod:
   539                           	opt callstack 0
   540  000020                     PWM1@ciclo_util:
   541                           	opt callstack 0
   542  000020                     PWM2@ciclo_util:
   543                           	opt callstack 0
   544  000020                     ___lwmod@dividend:
   545                           	opt callstack 0
   546                           
   547                           ; 2 bytes @ 0x1F
   548  000020                     	ds	2
   549  000022                     ??_PWM1:
   550  000022                     ??_PWM2:
   551  000022                     ___lwmod@divisor:
   552                           	opt callstack 0
   553                           
   554                           ; 2 bytes @ 0x21
   555  000022                     	ds	2
   556  000024                     ___lwmod@counter:
   557                           	opt callstack 0
   558  000024                     PWM1@t_alto:
   559                           	opt callstack 0
   560  000024                     PWM2@t_alto:
   561                           	opt callstack 0
   562                           
   563                           ; 2 bytes @ 0x23
   564  000024                     	ds	1
   565  000025                     ?_sprintf:
   566                           	opt callstack 0
   567  000025                     sprintf@sp:
   568                           	opt callstack 0
   569                           
   570                           ; 2 bytes @ 0x24
   571  000025                     	ds	2
   572  000027                     sprintf@f:
   573                           	opt callstack 0
   574                           
   575                           ; 2 bytes @ 0x26
   576  000027                     	ds	4
   577  00002B                     ??_sprintf:
   578                           
   579                           ; 1 bytes @ 0x2A
   580  00002B                     	ds	1
   581  00002C                     sprintf@ap:
   582                           	opt callstack 0
   583                           
   584                           ; 2 bytes @ 0x2B
   585  00002C                     	ds	2
   586  00002E                     sprintf@flag:
   587                           	opt callstack 0
   588                           
   589                           ; 1 bytes @ 0x2D
   590  00002E                     	ds	1
   591  00002F                     sprintf@prec:
   592                           	opt callstack 0
   593                           
   594                           ; 1 bytes @ 0x2E
   595  00002F                     	ds	1
   596  000030                     sprintf@val:
   597                           	opt callstack 0
   598                           
   599                           ; 2 bytes @ 0x2F
   600  000030                     	ds	2
   601  000032                     sprintf@c:
   602                           	opt callstack 0
   603                           
   604                           ; 1 bytes @ 0x31
   605  000032                     	ds	1
   606  000033                     
   607                           ; 1 bytes @ 0x32
   608 ;;
   609 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   610 ;;
   611 ;; *************** function _main *****************
   612 ;; Defined at:
   613 ;;		line 40 in file "main.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;		None
   616 ;; Auto vars:     Size  Location     Type
   617 ;;  i               1  100[BANK0 ] unsigned char 
   618 ;;  f2_m           50   50[BANK0 ] unsigned char [50]
   619 ;;  f1_m           50    0[BANK0 ] unsigned char [50]
   620 ;; Return value:  Size  Location     Type
   621 ;;                  1    wreg      void 
   622 ;; Registers used:
   623 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   624 ;; Tracked objects:
   625 ;;		On entry : 0/0
   626 ;;		On exit  : 0/0
   627 ;;		Unchanged: 0/0
   628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   629 ;;      Params:         0       0       0       0       0       0       0
   630 ;;      Locals:         0     101       0       0       0       0       0
   631 ;;      Temps:          0       0       0       0       0       0       0
   632 ;;      Totals:         0     101       0       0       0       0       0
   633 ;;Total ram usage:      101 bytes
   634 ;; Hardware stack levels required when called:    5
   635 ;; This function calls:
   636 ;;		_PWM1
   637 ;;		_PWM2
   638 ;;		_PWM_config
   639 ;;		_atoi
   640 ;;		_init_LCD
   641 ;;		_initial_config
   642 ;;		_print_message_onLCD
   643 ;;		_serial_transmi_init_config
   644 ;;		_sprintf
   645 ;;		_transmit
   646 ;; This function is called by:
   647 ;;		Startup code after reset
   648 ;; This function uses a non-reentrant model
   649 ;;
   650                           
   651                           	psect	text0
   652  0006C8                     __ptext0:
   653                           	opt callstack 0
   654  0006C8                     _main:
   655                           	opt callstack 0
   656  0006C8  FFFF               	dw	65535	; assembler added errata NOP
   657                           
   658                           ;main.c: 41: initial_config();
   659                           
   660                           ;incstack = 0
   661  0006CA  EC97  F007         	call	_initial_config	;wreg free
   662                           
   663                           ;main.c: 42: serial_transmi_init_config();
   664  0006CE  EC61  F007         	call	_serial_transmi_init_config	;wreg free
   665                           
   666                           ;main.c: 43: PWM_config();
   667  0006D2  ECA6  F007         	call	_PWM_config	;wreg free
   668                           
   669                           ;main.c: 44: init_LCD();
   670  0006D6  EC41  F006         	call	_init_LCD	;wreg free
   671                           
   672                           ;main.c: 46: transmit("Senial 1: o \n\r");
   673  0006DA  0E87               	movlw	low STR_1
   674  0006DC  6E17               	movwf	transmit@response,c
   675  0006DE  0E06               	movlw	high STR_1
   676  0006E0  6E18               	movwf	transmit@response+1,c
   677  0006E2  EC6D  F006         	call	_transmit	;wreg free
   678                           
   679                           ;main.c: 47: transmit("Senial 2: t \n\r");
   680  0006E6  0E96               	movlw	low STR_2
   681  0006E8  6E17               	movwf	transmit@response,c
   682  0006EA  0E06               	movlw	high STR_2
   683  0006EC  6E18               	movwf	transmit@response+1,c
   684  0006EE  EC6D  F006         	call	_transmit	;wreg free
   685                           
   686                           ;main.c: 48: transmit("Ambas seniales: b \n\r");
   687  0006F2  0E72               	movlw	low STR_3
   688  0006F4  6E17               	movwf	transmit@response,c
   689  0006F6  0E06               	movlw	high STR_3
   690  0006F8  6E18               	movwf	transmit@response+1,c
   691  0006FA  EC6D  F006         	call	_transmit	;wreg free
   692                           
   693                           ;main.c: 49: transmit("\n\r");
   694  0006FE  0E84               	movlw	low (STR_3+18)
   695  000700  6E17               	movwf	transmit@response,c
   696  000702  0E06               	movlw	high (STR_3+18)
   697  000704  6E18               	movwf	transmit@response+1,c
   698  000706  EC6D  F006         	call	_transmit	;wreg free
   699                           
   700                           ;main.c: 51: PWM1(cu1);
   701  00070A  C0EB  F020         	movff	_cu1,PWM1@ciclo_util
   702  00070E  6A21               	clrf	PWM1@ciclo_util+1,c
   703  000710  EC9C  F005         	call	_PWM1	;wreg free
   704                           
   705                           ;main.c: 52: PWM2(cu2);
   706  000714  C0EA  F020         	movff	_cu2,PWM2@ciclo_util
   707  000718  6A21               	clrf	PWM2@ciclo_util+1,c
   708  00071A  EC60  F005         	call	_PWM2	;wreg free
   709                           
   710                           ;main.c: 53: print_message_onLCD("Freq:29.4kHz", 128);
   711  00071E  0EA5               	movlw	low STR_5
   712  000720  6E17               	movwf	print_message_onLCD@message,c
   713  000722  0E06               	movlw	high STR_5
   714  000724  6E18               	movwf	print_message_onLCD@message+1,c
   715  000726  0E80               	movlw	128
   716  000728  6E19               	movwf	print_message_onLCD@place,c
   717  00072A  ECD8  F005         	call	_print_message_onLCD	;wreg free
   718  00072E                     l1585:
   719  00072E  FFFF               	dw	65535	; assembler added errata NOP
   720                           
   721                           ;main.c: 56: if (cu_changed) {
   722  000730  0100               	movlb	0	; () banked
   723  000732  51E6               	movf	_cu_changed& (0+255),w,b
   724  000734  B4D8               	btfsc	status,2,c
   725  000736  D070               	goto	l1619
   726                           
   727                           ; BSR set to: 0
   728                           ;main.c: 57: if (100 < atoi(cu)) {
   729  000738  0EE7               	movlw	low _cu
   730  00073A  6E19               	movwf	atoi@s,c
   731  00073C  0E00               	movlw	high _cu
   732  00073E  6E1A               	movwf	atoi@s+1,c
   733  000740  ECEF  F004         	call	_atoi	;wreg free
   734  000744  BE1A               	btfsc	?_atoi+1,7,c
   735  000746  D03D               	goto	l1601
   736  000748  501A               	movf	?_atoi+1,w,c
   737  00074A  E104               	bnz	u780
   738  00074C  0E65               	movlw	101
   739  00074E  5C19               	subwf	?_atoi,w,c
   740  000750  A0D8               	btfss	status,0,c
   741  000752  D037               	goto	l1601
   742  000754                     u780:
   743                           
   744                           ;main.c: 58: transmit("El valor de la senial debe estar entre 0 y 100\n\r");
   745  000754  0E0B               	movlw	low STR_6
   746  000756  6E17               	movwf	transmit@response,c
   747  000758  0E06               	movlw	high STR_6
   748  00075A  6E18               	movwf	transmit@response+1,c
   749  00075C  EC6D  F006         	call	_transmit	;wreg free
   750                           
   751                           ;main.c: 59: } else {
   752  000760  D048               	goto	l1605
   753  000762                     l1591:
   754  000762  FFFF               	dw	65535	; assembler added errata NOP
   755                           
   756                           ; BSR set to: 0
   757                           ;main.c: 62: cu1 = atoi(cu);
   758  000764  0EE7               	movlw	low _cu
   759  000766  6E19               	movwf	atoi@s,c
   760  000768  0E00               	movlw	high _cu
   761  00076A  6E1A               	movwf	atoi@s+1,c
   762  00076C  ECEF  F004         	call	_atoi	;wreg free
   763  000770  5019               	movf	?_atoi,w,c
   764  000772  0100               	movlb	0	; () banked
   765  000774  6FEB               	movwf	_cu1& (0+255),b
   766                           
   767                           ;main.c: 63: break;
   768  000776  D032               	goto	l1603
   769  000778                     l1593:
   770  000778  FFFF               	dw	65535	; assembler added errata NOP
   771                           
   772                           ; BSR set to: 0
   773                           ;main.c: 65: cu2 = atoi(cu);
   774  00077A  0EE7               	movlw	low _cu
   775  00077C  6E19               	movwf	atoi@s,c
   776  00077E  0E00               	movlw	high _cu
   777  000780  6E1A               	movwf	atoi@s+1,c
   778  000782  ECEF  F004         	call	_atoi	;wreg free
   779  000786  D010               	goto	L1
   780  000788                     l1595:
   781  000788  FFFF               	dw	65535	; assembler added errata NOP
   782                           
   783                           ; BSR set to: 0
   784                           ;main.c: 68: cu1 = atoi(cu);
   785  00078A  0EE7               	movlw	low _cu
   786  00078C  6E19               	movwf	atoi@s,c
   787  00078E  0E00               	movlw	high _cu
   788  000790  6E1A               	movwf	atoi@s+1,c
   789  000792  ECEF  F004         	call	_atoi	;wreg free
   790  000796  5019               	movf	?_atoi,w,c
   791  000798  0100               	movlb	0	; () banked
   792  00079A  6FEB               	movwf	_cu1& (0+255),b
   793                           
   794                           ;main.c: 69: cu2 = atoi(cu);
   795  00079C  0EE7               	movlw	low _cu
   796  00079E  6E19               	movwf	atoi@s,c
   797  0007A0  0E00               	movlw	high _cu
   798  0007A2  6E1A               	movwf	atoi@s+1,c
   799  0007A4  ECEF  F004         	call	_atoi	;wreg free
   800  0007A8                     L1:
   801  0007A8  FFFF               	dw	65535	; assembler added errata NOP
   802  0007AA  5019               	movf	?_atoi,w,c
   803  0007AC  0100               	movlb	0	; () banked
   804  0007AE  6FEA               	movwf	_cu2& (0+255),b
   805                           
   806                           ;main.c: 70: break;
   807  0007B0  D015               	goto	l1603
   808  0007B2                     l1597:
   809  0007B2  FFFF               	dw	65535	; assembler added errata NOP
   810                           
   811                           ; BSR set to: 0
   812                           ;main.c: 72: transmit("La opcion no es valida\n\r");
   813  0007B4  0E59               	movlw	low STR_7
   814  0007B6  6E17               	movwf	transmit@response,c
   815  0007B8  0E06               	movlw	high STR_7
   816  0007BA  6E18               	movwf	transmit@response+1,c
   817  0007BC  EC6D  F006         	call	_transmit	;wreg free
   818                           
   819                           ;main.c: 73: break;
   820  0007C0  D00D               	goto	l1603
   821  0007C2                     l1601:
   822  0007C2  FFFF               	dw	65535	; assembler added errata NOP
   823  0007C4  0100               	movlb	0	; () banked
   824  0007C6  51E5               	movf	_cu_flag& (0+255),w,b
   825                           
   826                           ; Switch size 1, requested type "simple"
   827                           ; Number of cases is 3, Range of values is 98 to 116
   828                           ; switch strategies available:
   829                           ; Name         Instructions Cycles
   830                           ; simple_byte           10     6 (average)
   831                           ;	Chosen strategy is simple_byte
   832  0007C8  0A62               	xorlw	98	; case 98
   833  0007CA  B4D8               	btfsc	status,2,c
   834  0007CC  D7DD               	goto	l1595
   835  0007CE  0A0D               	xorlw	13	; case 111
   836  0007D0  B4D8               	btfsc	status,2,c
   837  0007D2  D7C7               	goto	l1591
   838  0007D4  0A1B               	xorlw	27	; case 116
   839  0007D6  B4D8               	btfsc	status,2,c
   840  0007D8  D7CF               	goto	l1593
   841  0007DA  D7EB               	goto	l1597
   842  0007DC                     l1603:
   843  0007DC  FFFF               	dw	65535	; assembler added errata NOP
   844                           
   845                           ;main.c: 75: PWM1(cu1);
   846  0007DE  C0EB  F020         	movff	_cu1,PWM1@ciclo_util
   847  0007E2  6A21               	clrf	PWM1@ciclo_util+1,c
   848  0007E4  EC9C  F005         	call	_PWM1	;wreg free
   849                           
   850                           ;main.c: 76: PWM2(cu2);
   851  0007E8  C0EA  F020         	movff	_cu2,PWM2@ciclo_util
   852  0007EC  6A21               	clrf	PWM2@ciclo_util+1,c
   853  0007EE  EC60  F005         	call	_PWM2	;wreg free
   854  0007F2                     l1605:
   855  0007F2  FFFF               	dw	65535	; assembler added errata NOP
   856                           
   857                           ;main.c: 77: };main.c: 78: for (char i = 0; i < 3; i++) {
   858  0007F4  0E00               	movlw	0
   859  0007F6  0100               	movlb	0	; () banked
   860  0007F8  6FE4               	movwf	main@i& (0+255),b
   861  0007FA                     l1611:
   862  0007FA  FFFF               	dw	65535	; assembler added errata NOP
   863                           
   864                           ; BSR set to: 0
   865                           ;main.c: 79: cu[i] = '\0';
   866  0007FC  0EE7               	movlw	low _cu
   867  0007FE  25E4               	addwf	main@i& (0+255),w,b
   868  000800  6ED9               	movwf	fsr2l,c
   869  000802  6ADA               	clrf	fsr2h,c
   870  000804  0E00               	movlw	high _cu
   871  000806  22DA               	addwfc	fsr2h,f,c
   872  000808  0E00               	movlw	0
   873  00080A  6EDF               	movwf	indf2,c
   874                           
   875                           ; BSR set to: 0
   876  00080C  2BE4               	incf	main@i& (0+255),f,b
   877                           
   878                           ; BSR set to: 0
   879  00080E  0E02               	movlw	2
   880  000810  65E4               	cpfsgt	main@i& (0+255),b
   881  000812  D7F3               	goto	l1611
   882                           
   883                           ; BSR set to: 0
   884                           ;main.c: 80: };main.c: 81: cu_changed = 0;
   885  000814  0E00               	movlw	0
   886  000816  6FE6               	movwf	_cu_changed& (0+255),b
   887  000818                     l1619:
   888  000818  FFFF               	dw	65535	; assembler added errata NOP
   889                           
   890                           ; BSR set to: 0
   891                           ;main.c: 82: };main.c: 83: char f1_m[50];;main.c: 84: sprintf(f1_m, "CU1:%i%% ", cu1);
   892  00081A  0E80               	movlw	low main@f1_m
   893  00081C  6E25               	movwf	sprintf@sp,c
   894  00081E  0E00               	movlw	high main@f1_m
   895  000820  6E26               	movwf	sprintf@sp+1,c
   896  000822  0EBD               	movlw	low STR_8
   897  000824  6E27               	movwf	sprintf@f,c
   898  000826  0E06               	movlw	high STR_8
   899  000828  6E28               	movwf	sprintf@f+1,c
   900  00082A  C0EB  F029         	movff	_cu1,?_sprintf+4
   901  00082E  6A2A               	clrf	?_sprintf+5,c
   902  000830  EC38  F004         	call	_sprintf	;wreg free
   903                           
   904                           ;main.c: 85: print_message_onLCD(f1_m, 192);
   905  000834  0E80               	movlw	low main@f1_m
   906  000836  6E17               	movwf	print_message_onLCD@message,c
   907  000838  0E00               	movlw	high main@f1_m
   908  00083A  6E18               	movwf	print_message_onLCD@message+1,c
   909  00083C  0EC0               	movlw	192
   910  00083E  6E19               	movwf	print_message_onLCD@place,c
   911  000840  ECD8  F005         	call	_print_message_onLCD	;wreg free
   912                           
   913                           ;main.c: 86: char f2_m[50];;main.c: 87: sprintf(f2_m, "CU2:%i%%  ", cu2);
   914  000844  0EB2               	movlw	low main@f2_m
   915  000846  6E25               	movwf	sprintf@sp,c
   916  000848  0E00               	movlw	high main@f2_m
   917  00084A  6E26               	movwf	sprintf@sp+1,c
   918  00084C  0EB2               	movlw	low STR_9
   919  00084E  6E27               	movwf	sprintf@f,c
   920  000850  0E06               	movlw	high STR_9
   921  000852  6E28               	movwf	sprintf@f+1,c
   922  000854  C0EA  F029         	movff	_cu2,?_sprintf+4
   923  000858  6A2A               	clrf	?_sprintf+5,c
   924  00085A  EC38  F004         	call	_sprintf	;wreg free
   925                           
   926                           ;main.c: 88: print_message_onLCD(f2_m, 0);
   927  00085E  0EB2               	movlw	low main@f2_m
   928  000860  6E17               	movwf	print_message_onLCD@message,c
   929  000862  0E00               	movlw	high main@f2_m
   930  000864  6E18               	movwf	print_message_onLCD@message+1,c
   931  000866  0E00               	movlw	0
   932  000868  6E19               	movwf	print_message_onLCD@place,c
   933  00086A  ECD8  F005         	call	_print_message_onLCD	;wreg free
   934  00086E  D75F               	goto	l1585
   935  000870                     __end_of_main:
   936                           	opt callstack 0
   937                           
   938 ;; *************** function _transmit *****************
   939 ;; Defined at:
   940 ;;		line 206 in file "main.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;  response        2   22[COMRAM] PTR unsigned char 
   943 ;;		 -> STR_10(29), STR_7(25), STR_6(49), STR_4(3), 
   944 ;;		 -> STR_3(21), STR_2(15), STR_1(15), 
   945 ;; Auto vars:     Size  Location     Type
   946 ;;  i               1   26[COMRAM] unsigned char 
   947 ;; Return value:  Size  Location     Type
   948 ;;                  1    wreg      void 
   949 ;; Registers used:
   950 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   951 ;; Tracked objects:
   952 ;;		On entry : 0/0
   953 ;;		On exit  : 0/0
   954 ;;		Unchanged: 0/0
   955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   956 ;;      Params:         2       0       0       0       0       0       0
   957 ;;      Locals:         1       0       0       0       0       0       0
   958 ;;      Temps:          2       0       0       0       0       0       0
   959 ;;      Totals:         5       0       0       0       0       0       0
   960 ;;Total ram usage:        5 bytes
   961 ;; Hardware stack levels used:    1
   962 ;; Hardware stack levels required when called:    4
   963 ;; This function calls:
   964 ;;		_strlen
   965 ;; This function is called by:
   966 ;;		_main
   967 ;; This function uses a non-reentrant model
   968 ;;
   969                           
   970                           	psect	text1
   971  000CDA                     __ptext1:
   972                           	opt callstack 0
   973  000CDA                     _transmit:
   974                           	opt callstack 0
   975  000CDA  FFFF               	dw	65535	; assembler added errata NOP
   976                           
   977                           ;main.c: 207: for (char i = 0; i < strlen(response); i++) {
   978                           
   979                           ;incstack = 0
   980  000CDC  0E00               	movlw	0
   981  000CDE  6E1B               	movwf	transmit@i,c
   982  000CE0  D012               	goto	l1423
   983  000CE2                     l149:
   984  000CE2  FFFF               	dw	65535	; assembler added errata NOP
   985  000CE4  A2AC               	btfss	4012,1,c	;volatile
   986  000CE6  D7FD               	goto	l149
   987                           
   988                           ;main.c: 212: TXREG = response[i];
   989  000CE8  501B               	movf	transmit@i,w,c
   990  000CEA  2417               	addwf	transmit@response,w,c
   991  000CEC  6E19               	movwf	??_transmit& (0+255),c
   992  000CEE  0E00               	movlw	0
   993  000CF0  2018               	addwfc	transmit@response+1,w,c
   994  000CF2  6E1A               	movwf	(??_transmit+1)& (0+255),c
   995  000CF4  C019  FFF6         	movff	??_transmit,tblptrl
   996  000CF8  C01A  FFF7         	movff	??_transmit+1,tblptrh
   997  000CFC                     	if	0	;tblptru may be non-zero
   998  000CFC                     	endif
   999  000CFC                     	if	0	;tblptru may be non-zero
  1000  000CFC                     	endif
  1001  000CFC  0008               	tblrd		*
  1002  000CFE  FFFF               	dw	65535	; errata NOP
  1003  000D00  CFF5 FFAD          	movff	tablat,4013	;volatile
  1004  000D04  2A1B               	incf	transmit@i,f,c
  1005  000D06                     l1423:
  1006  000D06  FFFF               	dw	65535	; assembler added errata NOP
  1007  000D08  C017  F013         	movff	transmit@response,strlen@s
  1008  000D0C  C018  F014         	movff	transmit@response+1,strlen@s+1
  1009  000D10  ECE7  F006         	call	_strlen	;wreg free
  1010  000D14  501B               	movf	transmit@i,w,c
  1011  000D16  6E19               	movwf	??_transmit& (0+255),c
  1012  000D18  6A1A               	clrf	(??_transmit+1)& (0+255),c
  1013  000D1A  5013               	movf	?_strlen,w,c
  1014  000D1C  5C19               	subwf	??_transmit,w,c
  1015  000D1E  5014               	movf	?_strlen+1,w,c
  1016  000D20  581A               	subwfb	??_transmit+1,w,c
  1017  000D22  B0D8               	btfsc	status,0,c
  1018  000D24  0012               	return		;funcret
  1019  000D26  FFFF               	dw	65535	; assembler added errata NOP
  1020  000D28  D7DC               	goto	l149
  1021  000D2A  FFFF               	dw	65535	; errata NOP
  1022  000D2C                     __end_of_transmit:
  1023                           	opt callstack 0
  1024                           
  1025 ;; *************** function _sprintf *****************
  1026 ;; Defined at:
  1027 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;  sp              2   36[COMRAM] PTR unsigned char 
  1030 ;;		 -> main@f2_m(50), main@f1_m(50), 
  1031 ;;  f               2   38[COMRAM] PTR const unsigned char 
  1032 ;;		 -> STR_9(11), STR_8(10), 
  1033 ;; Auto vars:     Size  Location     Type
  1034 ;;  tmpval          4    0        struct .
  1035 ;;  cp              3    0        PTR const unsigned char 
  1036 ;;  val             2   47[COMRAM] unsigned int 
  1037 ;;  ap              2   43[COMRAM] PTR void [1]
  1038 ;;		 -> ?_sprintf(2), 
  1039 ;;  len             2    0        unsigned int 
  1040 ;;  c               1   49[COMRAM] unsigned char 
  1041 ;;  prec            1   46[COMRAM] char 
  1042 ;;  flag            1   45[COMRAM] unsigned char 
  1043 ;; Return value:  Size  Location     Type
  1044 ;;                  2   36[COMRAM] int 
  1045 ;; Registers used:
  1046 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1052 ;;      Params:         6       0       0       0       0       0       0
  1053 ;;      Locals:         7       0       0       0       0       0       0
  1054 ;;      Temps:          1       0       0       0       0       0       0
  1055 ;;      Totals:        14       0       0       0       0       0       0
  1056 ;;Total ram usage:       14 bytes
  1057 ;; Hardware stack levels used:    1
  1058 ;; Hardware stack levels required when called:    4
  1059 ;; This function calls:
  1060 ;;		___lwdiv
  1061 ;;		___lwmod
  1062 ;; This function is called by:
  1063 ;;		_main
  1064 ;; This function uses a non-reentrant model
  1065 ;;
  1066                           
  1067                           	psect	text2
  1068  000870                     __ptext2:
  1069                           	opt callstack 0
  1070  000870                     _sprintf:
  1071                           	opt callstack 0
  1072  000870  FFFF               	dw	65535	; assembler added errata NOP
  1073                           
  1074                           ;doprnt.c: 502: va_list ap;;doprnt.c: 507: char c;;doprnt.c: 516: signed char prec;;dopr
      +                          nt.c: 520: unsigned char flag;;doprnt.c: 535: union {;doprnt.c: 536: unsigned long vd;;d
      +                          oprnt.c: 537: double integ;;doprnt.c: 538: } tmpval;;doprnt.c: 540: unsigned int val;;do
      +                          prnt.c: 541: unsigned len;;doprnt.c: 542: const char * cp;;doprnt.c: 545: *ap = __va_sta
      +                          rt();
  1075                           
  1076                           ;incstack = 0
  1077  000872  0E29               	movlw	low (?_sprintf+4)
  1078  000874  6E2C               	movwf	sprintf@ap,c
  1079  000876  0E00               	movlw	high (?_sprintf+4)
  1080  000878  6E2D               	movwf	sprintf@ap+1,c
  1081                           
  1082                           ;doprnt.c: 548: while((c = *f++)) {
  1083  00087A  D09A               	goto	u710
  1084  00087C                     l1487:
  1085  00087C  FFFF               	dw	65535	; assembler added errata NOP
  1086                           
  1087                           ;doprnt.c: 550: if(c != '%')
  1088  00087E  0E25               	movlw	37
  1089  000880  1832               	xorwf	sprintf@c,w,c
  1090  000882  B4D8               	btfsc	status,2,c
  1091  000884  D00A               	goto	l1493
  1092  000886                     u660:
  1093  000886  FFFF               	dw	65535	; assembler added errata NOP
  1094                           
  1095                           ;doprnt.c: 552: {;doprnt.c: 553: ((*sp++ = (c)));
  1096  000888  C025  FFD9         	movff	sprintf@sp,fsr2l
  1097  00088C  C026  FFDA         	movff	sprintf@sp+1,fsr2h
  1098  000890  C032  FFDF         	movff	sprintf@c,indf2
  1099  000894  4A25               	infsnz	sprintf@sp,f,c
  1100  000896  2A26               	incf	sprintf@sp+1,f,c
  1101                           
  1102                           ;doprnt.c: 554: continue;
  1103  000898  D08B               	goto	u710
  1104  00089A                     l1493:
  1105  00089A  FFFF               	dw	65535	; assembler added errata NOP
  1106                           
  1107                           ;doprnt.c: 555: };doprnt.c: 560: flag = 0;
  1108  00089C  0E00               	movlw	0
  1109  00089E  6E2E               	movwf	sprintf@flag,c
  1110                           
  1111                           ;doprnt.c: 654: switch(c = *f++) {
  1112  0008A0  C027  FFF6         	movff	sprintf@f,tblptrl
  1113  0008A4  C028  FFF7         	movff	sprintf@f+1,tblptrh
  1114  0008A8  4A27               	infsnz	sprintf@f,f,c
  1115  0008AA  2A28               	incf	sprintf@f+1,f,c
  1116  0008AC                     	if	0	;tblptru may be non-zero
  1117  0008AC                     	endif
  1118  0008AC                     	if	0	;tblptru may be non-zero
  1119  0008AC                     	endif
  1120  0008AC  0008               	tblrd		*
  1121  0008AE  FFFF               	dw	65535	; errata NOP
  1122  0008B0  CFF5 F032          	movff	tablat,sprintf@c
  1123  0008B4  5032               	movf	sprintf@c,w,c
  1124                           
  1125                           ; Switch size 1, requested type "simple"
  1126                           ; Number of cases is 3, Range of values is 0 to 105
  1127                           ; switch strategies available:
  1128                           ; Name         Instructions Cycles
  1129                           ; simple_byte           10     6 (average)
  1130                           ;	Chosen strategy is simple_byte
  1131  0008B6  0A00               	xorlw	0	; case 0
  1132  0008B8  B4D8               	btfsc	status,2,c
  1133  0008BA  D088               	goto	u720
  1134  0008BC  0A64               	xorlw	100	; case 100
  1135  0008BE  B4D8               	btfsc	status,2,c
  1136  0008C0  D003               	goto	l1503
  1137  0008C2  0A0D               	xorlw	13	; case 105
  1138  0008C4  A4D8               	btfss	status,2,c
  1139  0008C6  D7DF               	goto	u660
  1140  0008C8                     l1503:
  1141  0008C8  FFFF               	dw	65535	; assembler added errata NOP
  1142                           
  1143                           ;doprnt.c: 1272: {;doprnt.c: 1278: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1144  0008CA  C02C  FFD9         	movff	sprintf@ap,fsr2l
  1145  0008CE  C02D  FFDA         	movff	sprintf@ap+1,fsr2h
  1146  0008D2  CFDE F030          	movff	postinc2,sprintf@val
  1147  0008D6  CFDD F031          	movff	postdec2,sprintf@val+1
  1148  0008DA  0E02               	movlw	2
  1149  0008DC  262C               	addwf	sprintf@ap,f,c
  1150  0008DE  0E00               	movlw	0
  1151  0008E0  222D               	addwfc	sprintf@ap+1,f,c
  1152                           
  1153                           ;doprnt.c: 1280: if((int)val < 0) {
  1154  0008E2  AE31               	btfss	sprintf@val+1,7,c
  1155  0008E4  D006               	goto	l1513
  1156                           
  1157                           ;doprnt.c: 1281: flag |= 0x03;
  1158  0008E6  0E03               	movlw	3
  1159  0008E8  122E               	iorwf	sprintf@flag,f,c
  1160                           
  1161                           ;doprnt.c: 1282: val = -val;
  1162  0008EA  6C30               	negf	sprintf@val,c
  1163  0008EC  1E31               	comf	sprintf@val+1,f,c
  1164  0008EE  B0D8               	btfsc	status,0,c
  1165  0008F0  2A31               	incf	sprintf@val+1,f,c
  1166  0008F2                     l1513:
  1167  0008F2  FFFF               	dw	65535	; assembler added errata NOP
  1168                           
  1169                           ;doprnt.c: 1283: };doprnt.c: 1285: };doprnt.c: 1324: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  1170  0008F4  0E01               	movlw	1
  1171  0008F6  6E32               	movwf	sprintf@c,c
  1172  0008F8                     l1519:
  1173  0008F8  FFFF               	dw	65535	; assembler added errata NOP
  1174                           
  1175                           ;doprnt.c: 1325: if(val < dpowers[c])
  1176  0008FA  5032               	movf	sprintf@c,w,c
  1177  0008FC  0D02               	mullw	2
  1178  0008FE  0E01               	movlw	low _dpowers
  1179  000900  24F3               	addwf	prodl,w,c
  1180  000902  6EF6               	movwf	tblptrl,c
  1181  000904  0E06               	movlw	high _dpowers
  1182  000906  20F4               	addwfc	prodh,w,c
  1183  000908  6EF7               	movwf	tblptrh,c
  1184  00090A                     	if	0	;There are less than 3 active tblptr bytes
  1185  00090A                     	endif
  1186  00090A  0009               	tblrd		*+
  1187  00090C  FFFF               	dw	65535	; errata NOP
  1188  00090E  50F5               	movf	tablat,w,c
  1189  000910  5C30               	subwf	sprintf@val,w,c
  1190  000912  0009               	tblrd		*+
  1191  000914  FFFF               	dw	65535	; errata NOP
  1192  000916  50F5               	movf	tablat,w,c
  1193  000918  5831               	subwfb	sprintf@val+1,w,c
  1194  00091A  A0D8               	btfss	status,0,c
  1195  00091C  D005               	goto	u690
  1196  00091E  2A32               	incf	sprintf@c,f,c
  1197  000920  0E05               	movlw	5
  1198  000922  1832               	xorwf	sprintf@c,w,c
  1199  000924  A4D8               	btfss	status,2,c
  1200  000926  D7E8               	goto	l1519
  1201  000928                     u690:
  1202  000928  FFFF               	dw	65535	; assembler added errata NOP
  1203                           
  1204                           ;doprnt.c: 1441: {;doprnt.c: 1457: if(flag & 0x03)
  1205  00092A  C02E  F02B         	movff	sprintf@flag,??_sprintf
  1206  00092E  0E03               	movlw	3
  1207  000930  162B               	andwf	??_sprintf,f,c
  1208  000932  B4D8               	btfsc	status,2,c
  1209  000934  D008               	goto	l1533
  1210                           
  1211                           ;doprnt.c: 1458: ((*sp++ = ('-')));
  1212  000936  C025  FFD9         	movff	sprintf@sp,fsr2l
  1213  00093A  C026  FFDA         	movff	sprintf@sp+1,fsr2h
  1214  00093E  0E2D               	movlw	45
  1215  000940  6EDF               	movwf	indf2,c
  1216  000942  4A25               	infsnz	sprintf@sp,f,c
  1217  000944  2A26               	incf	sprintf@sp+1,f,c
  1218  000946                     l1533:
  1219  000946  FFFF               	dw	65535	; assembler added errata NOP
  1220                           
  1221                           ;doprnt.c: 1488: };doprnt.c: 1491: prec = c;
  1222  000948  C032  F02F         	movff	sprintf@c,sprintf@prec
  1223                           
  1224                           ;doprnt.c: 1493: while(prec--) {
  1225  00094C  D02C               	goto	l1541
  1226  00094E                     l1535:
  1227  00094E  FFFF               	dw	65535	; assembler added errata NOP
  1228                           
  1229                           ;doprnt.c: 1497: {;doprnt.c: 1508: c = (val / dpowers[prec]) % 10 + '0';
  1230  000950  502F               	movf	sprintf@prec,w,c
  1231  000952  0D02               	mullw	2
  1232  000954  0E01               	movlw	low _dpowers
  1233  000956  24F3               	addwf	prodl,w,c
  1234  000958  6EF6               	movwf	tblptrl,c
  1235  00095A  0E06               	movlw	high _dpowers
  1236  00095C  20F4               	addwfc	prodh,w,c
  1237  00095E  6EF7               	movwf	tblptrh,c
  1238  000960                     	if	0	;There are less than 3 active tblptr bytes
  1239  000960                     	endif
  1240  000960  0009               	tblrd		*+
  1241  000962  FFFF               	dw	65535	; errata NOP
  1242  000964  CFF5 F01B          	movff	tablat,___lwdiv@divisor
  1243  000968  000A               	tblrd		*-
  1244  00096A  FFFF               	dw	65535	; errata NOP
  1245  00096C  CFF5 F01C          	movff	tablat,___lwdiv@divisor+1
  1246  000970  C030  F019         	movff	sprintf@val,___lwdiv@dividend
  1247  000974  C031  F01A         	movff	sprintf@val+1,___lwdiv@dividend+1
  1248  000978  EC11  F006         	call	___lwdiv	;wreg free
  1249  00097C  C019  F020         	movff	?___lwdiv,___lwmod@dividend
  1250  000980  C01A  F021         	movff	?___lwdiv+1,___lwmod@dividend+1
  1251  000984  0E00               	movlw	0
  1252  000986  6E23               	movwf	___lwmod@divisor+1,c
  1253  000988  0E0A               	movlw	10
  1254  00098A  6E22               	movwf	___lwmod@divisor,c
  1255  00098C  ECBF  F006         	call	___lwmod	;wreg free
  1256  000990  5020               	movf	?___lwmod,w,c
  1257  000992  0F30               	addlw	48
  1258  000994  6E32               	movwf	sprintf@c,c
  1259                           
  1260                           ;doprnt.c: 1542: };doprnt.c: 1543: ((*sp++ = (c)));
  1261  000996  C025  FFD9         	movff	sprintf@sp,fsr2l
  1262  00099A  C026  FFDA         	movff	sprintf@sp+1,fsr2h
  1263  00099E  C032  FFDF         	movff	sprintf@c,indf2
  1264  0009A2  4A25               	infsnz	sprintf@sp,f,c
  1265  0009A4  2A26               	incf	sprintf@sp+1,f,c
  1266  0009A6                     l1541:
  1267  0009A6  FFFF               	dw	65535	; assembler added errata NOP
  1268  0009A8  062F               	decf	sprintf@prec,f,c
  1269  0009AA  282F               	incf	sprintf@prec,w,c
  1270  0009AC  A4D8               	btfss	status,2,c
  1271  0009AE  D7CF               	goto	l1535
  1272  0009B0                     u710:
  1273  0009B0  FFFF               	dw	65535	; assembler added errata NOP
  1274  0009B2  C027  FFF6         	movff	sprintf@f,tblptrl
  1275  0009B6  C028  FFF7         	movff	sprintf@f+1,tblptrh
  1276  0009BA  4A27               	infsnz	sprintf@f,f,c
  1277  0009BC  2A28               	incf	sprintf@f+1,f,c
  1278  0009BE                     	if	0	;tblptru may be non-zero
  1279  0009BE                     	endif
  1280  0009BE                     	if	0	;tblptru may be non-zero
  1281  0009BE                     	endif
  1282  0009BE  0008               	tblrd		*
  1283  0009C0  FFFF               	dw	65535	; errata NOP
  1284  0009C2  CFF5 F032          	movff	tablat,sprintf@c
  1285  0009C6  5032               	movf	sprintf@c,w,c
  1286  0009C8  A4D8               	btfss	status,2,c
  1287  0009CA  D758               	goto	l1487
  1288  0009CC                     u720:
  1289  0009CC  FFFF               	dw	65535	; assembler added errata NOP
  1290                           
  1291                           ;doprnt.c: 1557: *sp = 0;
  1292  0009CE  C025  FFD9         	movff	sprintf@sp,fsr2l
  1293  0009D2  C026  FFDA         	movff	sprintf@sp+1,fsr2h
  1294  0009D6  0E00               	movlw	0
  1295  0009D8  6EDF               	movwf	indf2,c
  1296  0009DA  0012               	return		;funcret
  1297  0009DC  FFFF               	dw	65535	; errata NOP
  1298  0009DE                     __end_of_sprintf:
  1299                           	opt callstack 0
  1300                           
  1301 ;; *************** function ___lwmod *****************
  1302 ;; Defined at:
  1303 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  1304 ;; Parameters:    Size  Location     Type
  1305 ;;  dividend        2   31[COMRAM] unsigned int 
  1306 ;;  divisor         2   33[COMRAM] unsigned int 
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;  counter         1   35[COMRAM] unsigned char 
  1309 ;; Return value:  Size  Location     Type
  1310 ;;                  2   31[COMRAM] unsigned int 
  1311 ;; Registers used:
  1312 ;;		wreg, status,2, status,0
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1318 ;;      Params:         4       0       0       0       0       0       0
  1319 ;;      Locals:         1       0       0       0       0       0       0
  1320 ;;      Temps:          0       0       0       0       0       0       0
  1321 ;;      Totals:         5       0       0       0       0       0       0
  1322 ;;Total ram usage:        5 bytes
  1323 ;; Hardware stack levels used:    1
  1324 ;; Hardware stack levels required when called:    3
  1325 ;; This function calls:
  1326 ;;		Nothing
  1327 ;; This function is called by:
  1328 ;;		_sprintf
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           	psect	text3
  1333  000D7E                     __ptext3:
  1334                           	opt callstack 0
  1335  000D7E                     ___lwmod:
  1336                           	opt callstack 0
  1337  000D7E  FFFF               	dw	65535	; assembler added errata NOP
  1338                           
  1339                           ;incstack = 0
  1340  000D80  5022               	movf	___lwmod@divisor,w,c
  1341  000D82  1023               	iorwf	___lwmod@divisor+1,w,c
  1342  000D84  B4D8               	btfsc	status,2,c
  1343  000D86  D01C               	goto	l679
  1344  000D88  0E01               	movlw	1
  1345  000D8A  6E24               	movwf	___lwmod@counter,c
  1346  000D8C  D005               	goto	l1381
  1347  000D8E                     l1379:
  1348  000D8E  FFFF               	dw	65535	; assembler added errata NOP
  1349  000D90  90D8               	bcf	status,0,c
  1350  000D92  3622               	rlcf	___lwmod@divisor,f,c
  1351  000D94  3623               	rlcf	___lwmod@divisor+1,f,c
  1352  000D96  2A24               	incf	___lwmod@counter,f,c
  1353  000D98                     l1381:
  1354  000D98  FFFF               	dw	65535	; assembler added errata NOP
  1355  000D9A  AE23               	btfss	___lwmod@divisor+1,7,c
  1356  000D9C  D7F8               	goto	l1379
  1357  000D9E                     u510:
  1358  000D9E  FFFF               	dw	65535	; assembler added errata NOP
  1359  000DA0  5022               	movf	___lwmod@divisor,w,c
  1360  000DA2  5C20               	subwf	___lwmod@dividend,w,c
  1361  000DA4  5023               	movf	___lwmod@divisor+1,w,c
  1362  000DA6  5821               	subwfb	___lwmod@dividend+1,w,c
  1363  000DA8  A0D8               	btfss	status,0,c
  1364  000DAA  D004               	goto	l1387
  1365  000DAC  5022               	movf	___lwmod@divisor,w,c
  1366  000DAE  5E20               	subwf	___lwmod@dividend,f,c
  1367  000DB0  5023               	movf	___lwmod@divisor+1,w,c
  1368  000DB2  5A21               	subwfb	___lwmod@dividend+1,f,c
  1369  000DB4                     l1387:
  1370  000DB4  FFFF               	dw	65535	; assembler added errata NOP
  1371  000DB6  90D8               	bcf	status,0,c
  1372  000DB8  3223               	rrcf	___lwmod@divisor+1,f,c
  1373  000DBA  3222               	rrcf	___lwmod@divisor,f,c
  1374  000DBC  2E24               	decfsz	___lwmod@counter,f,c
  1375  000DBE  D7EF               	goto	u510
  1376  000DC0                     l679:
  1377  000DC0  FFFF               	dw	65535	; assembler added errata NOP
  1378  000DC2  C020  F020         	movff	___lwmod@dividend,?___lwmod
  1379  000DC6  C021  F021         	movff	___lwmod@dividend+1,?___lwmod+1
  1380  000DCA  0012               	return		;funcret
  1381  000DCC  FFFF               	dw	65535	; errata NOP
  1382  000DCE                     __end_of___lwmod:
  1383                           	opt callstack 0
  1384                           
  1385 ;; *************** function _serial_transmi_init_config *****************
  1386 ;; Defined at:
  1387 ;;		line 109 in file "main.c"
  1388 ;; Parameters:    Size  Location     Type
  1389 ;;		None
  1390 ;; Auto vars:     Size  Location     Type
  1391 ;;		None
  1392 ;; Return value:  Size  Location     Type
  1393 ;;                  1    wreg      void 
  1394 ;; Registers used:
  1395 ;;		wreg, status,2
  1396 ;; Tracked objects:
  1397 ;;		On entry : 0/0
  1398 ;;		On exit  : 0/0
  1399 ;;		Unchanged: 0/0
  1400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1401 ;;      Params:         0       0       0       0       0       0       0
  1402 ;;      Locals:         0       0       0       0       0       0       0
  1403 ;;      Temps:          0       0       0       0       0       0       0
  1404 ;;      Totals:         0       0       0       0       0       0       0
  1405 ;;Total ram usage:        0 bytes
  1406 ;; Hardware stack levels used:    1
  1407 ;; Hardware stack levels required when called:    3
  1408 ;; This function calls:
  1409 ;;		Nothing
  1410 ;; This function is called by:
  1411 ;;		_main
  1412 ;; This function uses a non-reentrant model
  1413 ;;
  1414                           
  1415                           	psect	text4
  1416  000EC2                     __ptext4:
  1417                           	opt callstack 0
  1418  000EC2                     _serial_transmi_init_config:
  1419                           	opt callstack 0
  1420  000EC2  FFFF               	dw	65535	; assembler added errata NOP
  1421                           
  1422                           ;main.c: 110: INTCON = 0B11000000;
  1423                           
  1424                           ;incstack = 0
  1425  000EC4  0EC0               	movlw	192
  1426  000EC6  6EF2               	movwf	4082,c	;volatile
  1427                           
  1428                           ;main.c: 111: RCONbits.IPEN = 0;
  1429  000EC8  9ED0               	bcf	4048,7,c	;volatile
  1430                           
  1431                           ;main.c: 112: SPBRG = 25;
  1432  000ECA  0E19               	movlw	25
  1433  000ECC  6EAF               	movwf	4015,c	;volatile
  1434                           
  1435                           ;main.c: 113: PIE1 = 0B00100000;
  1436  000ECE  0E20               	movlw	32
  1437  000ED0  6E9D               	movwf	3997,c	;volatile
  1438                           
  1439                           ;main.c: 114: PIR1 = 0B00010000;
  1440  000ED2  0E10               	movlw	16
  1441  000ED4  6E9E               	movwf	3998,c	;volatile
  1442                           
  1443                           ;main.c: 115: IPR1 = 0B00100000;
  1444  000ED6  0E20               	movlw	32
  1445  000ED8  6E9F               	movwf	3999,c	;volatile
  1446                           
  1447                           ;main.c: 116: TXSTA = 0B00100110;
  1448  000EDA  0E26               	movlw	38
  1449  000EDC  6EAC               	movwf	4012,c	;volatile
  1450                           
  1451                           ;main.c: 117: RCSTA = 0B10010000;
  1452  000EDE  0E90               	movlw	144
  1453  000EE0  6EAB               	movwf	4011,c	;volatile
  1454  000EE2  0012               	return		;funcret
  1455  000EE4  FFFF               	dw	65535	; errata NOP
  1456  000EE6                     __end_of_serial_transmi_init_config:
  1457                           	opt callstack 0
  1458                           
  1459 ;; *************** function _print_message_onLCD *****************
  1460 ;; Defined at:
  1461 ;;		line 176 in file "main.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;  message         2   22[COMRAM] PTR unsigned char 
  1464 ;;		 -> main@f2_m(50), main@f1_m(50), STR_5(13), 
  1465 ;;  place           1   24[COMRAM] unsigned char 
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;  i               1   27[COMRAM] unsigned char 
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  1    wreg      void 
  1470 ;; Registers used:
  1471 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1477 ;;      Params:         3       0       0       0       0       0       0
  1478 ;;      Locals:         1       0       0       0       0       0       0
  1479 ;;      Temps:          2       0       0       0       0       0       0
  1480 ;;      Totals:         6       0       0       0       0       0       0
  1481 ;;Total ram usage:        6 bytes
  1482 ;; Hardware stack levels used:    1
  1483 ;; Hardware stack levels required when called:    4
  1484 ;; This function calls:
  1485 ;;		_R_D
  1486 ;;		_R_I
  1487 ;;		_strlen
  1488 ;; This function is called by:
  1489 ;;		_main
  1490 ;; This function uses a non-reentrant model
  1491 ;;
  1492                           
  1493                           	psect	text5
  1494  000BB0                     __ptext5:
  1495                           	opt callstack 0
  1496  000BB0                     _print_message_onLCD:
  1497                           	opt callstack 0
  1498  000BB0  FFFF               	dw	65535	; assembler added errata NOP
  1499                           
  1500                           ;main.c: 177: if (place > 0) {
  1501                           
  1502                           ;incstack = 0
  1503  000BB2  5019               	movf	print_message_onLCD@place,w,c
  1504  000BB4  B4D8               	btfsc	status,2,c
  1505  000BB6  D003               	goto	l1449
  1506                           
  1507                           ;main.c: 178: R_I(place);
  1508  000BB8  5019               	movf	print_message_onLCD@place,w,c
  1509  000BBA  ECC3  F007         	call	_R_I
  1510  000BBE                     l1449:
  1511  000BBE  FFFF               	dw	65535	; assembler added errata NOP
  1512                           
  1513                           ;main.c: 179: };main.c: 180: for (char i = 0; i < strlen(message); i++) {
  1514  000BC0  0E00               	movlw	0
  1515  000BC2  6E1C               	movwf	print_message_onLCD@i,c
  1516  000BC4  D01B               	goto	l1455
  1517  000BC6                     l1451:
  1518  000BC6  FFFF               	dw	65535	; assembler added errata NOP
  1519                           
  1520                           ;main.c: 181: R_D(message[i]);
  1521  000BC8  501C               	movf	print_message_onLCD@i,w,c
  1522  000BCA  2417               	addwf	print_message_onLCD@message,w,c
  1523  000BCC  6E1A               	movwf	??_print_message_onLCD& (0+255),c
  1524  000BCE  0E00               	movlw	0
  1525  000BD0  2018               	addwfc	print_message_onLCD@message+1,w,c
  1526  000BD2  6E1B               	movwf	(??_print_message_onLCD+1)& (0+255),c
  1527  000BD4  C01A  FFF6         	movff	??_print_message_onLCD,tblptrl
  1528  000BD8  C01B  FFF7         	movff	??_print_message_onLCD+1,tblptrh
  1529  000BDC  6AF8               	clrf	tblptru,c
  1530  000BDE  0E05               	movlw	(high __ramtop+-1)
  1531  000BE0  64F7               	cpfsgt	tblptrh,c
  1532  000BE2  D004               	bra	u587
  1533  000BE4  0008               	tblrd		*
  1534  000BE6  FFFF               	dw	65535	; errata NOP
  1535  000BE8  50F5               	movf	tablat,w,c
  1536  000BEA  D005               	bra	u580
  1537  000BEC                     u587:
  1538  000BEC  CFF6 FFE9          	movff	tblptrl,fsr0l
  1539  000BF0  CFF7 FFEA          	movff	tblptrh,fsr0h
  1540  000BF4  50EF               	movf	indf0,w,c
  1541  000BF6                     u580:
  1542  000BF6  ECB5  F007         	call	_R_D
  1543  000BFA  2A1C               	incf	print_message_onLCD@i,f,c
  1544  000BFC                     l1455:
  1545  000BFC  FFFF               	dw	65535	; assembler added errata NOP
  1546  000BFE  C017  F013         	movff	print_message_onLCD@message,strlen@s
  1547  000C02  C018  F014         	movff	print_message_onLCD@message+1,strlen@s+1
  1548  000C06  ECE7  F006         	call	_strlen	;wreg free
  1549  000C0A  501C               	movf	print_message_onLCD@i,w,c
  1550  000C0C  6E1A               	movwf	??_print_message_onLCD& (0+255),c
  1551  000C0E  6A1B               	clrf	(??_print_message_onLCD+1)& (0+255),c
  1552  000C10  5013               	movf	?_strlen,w,c
  1553  000C12  5C1A               	subwf	??_print_message_onLCD,w,c
  1554  000C14  5014               	movf	?_strlen+1,w,c
  1555  000C16  581B               	subwfb	??_print_message_onLCD+1,w,c
  1556  000C18  B0D8               	btfsc	status,0,c
  1557  000C1A  0012               	return		;funcret
  1558  000C1C  FFFF               	dw	65535	; assembler added errata NOP
  1559  000C1E  D7D3               	goto	l1451
  1560  000C20  FFFF               	dw	65535	; errata NOP
  1561  000C22                     __end_of_print_message_onLCD:
  1562                           	opt callstack 0
  1563                           
  1564 ;; *************** function _strlen *****************
  1565 ;; Defined at:
  1566 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strlen.c"
  1567 ;; Parameters:    Size  Location     Type
  1568 ;;  s               2   18[COMRAM] PTR const unsigned char 
  1569 ;;		 -> STR_10(29), main@f2_m(50), main@f1_m(50), STR_7(25), 
  1570 ;;		 -> STR_6(49), cu(3), STR_5(13), STR_4(3), 
  1571 ;;		 -> STR_3(21), STR_2(15), STR_1(15), 
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;  cp              2   20[COMRAM] PTR const unsigned char 
  1574 ;;		 -> STR_10(29), main@f2_m(50), main@f1_m(50), STR_7(25), 
  1575 ;;		 -> STR_6(49), cu(3), STR_5(13), STR_4(3), 
  1576 ;;		 -> STR_3(21), STR_2(15), STR_1(15), 
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  2   18[COMRAM] unsigned int 
  1579 ;; Registers used:
  1580 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1586 ;;      Params:         2       0       0       0       0       0       0
  1587 ;;      Locals:         2       0       0       0       0       0       0
  1588 ;;      Temps:          0       0       0       0       0       0       0
  1589 ;;      Totals:         4       0       0       0       0       0       0
  1590 ;;Total ram usage:        4 bytes
  1591 ;; Hardware stack levels used:    1
  1592 ;; Hardware stack levels required when called:    3
  1593 ;; This function calls:
  1594 ;;		Nothing
  1595 ;; This function is called by:
  1596 ;;		_print_message_onLCD
  1597 ;;		_transmit
  1598 ;; This function uses a non-reentrant model
  1599 ;;
  1600                           
  1601                           	psect	text6
  1602  000DCE                     __ptext6:
  1603                           	opt callstack 0
  1604  000DCE                     _strlen:
  1605                           	opt callstack 0
  1606  000DCE  FFFF               	dw	65535	; assembler added errata NOP
  1607                           
  1608                           ;incstack = 0
  1609  000DD0  C013  F015         	movff	strlen@s,strlen@cp
  1610  000DD4  C014  F016         	movff	strlen@s+1,strlen@cp+1
  1611  000DD8  D003               	goto	l1329
  1612  000DDA                     l1327:
  1613  000DDA  FFFF               	dw	65535	; assembler added errata NOP
  1614  000DDC  4A15               	infsnz	strlen@cp,f,c
  1615  000DDE  2A16               	incf	strlen@cp+1,f,c
  1616  000DE0                     l1329:
  1617  000DE0  FFFF               	dw	65535	; assembler added errata NOP
  1618  000DE2  C015  FFF6         	movff	strlen@cp,tblptrl
  1619  000DE6  C016  FFF7         	movff	strlen@cp+1,tblptrh
  1620  000DEA  6AF8               	clrf	tblptru,c
  1621  000DEC  0E05               	movlw	(high __ramtop+-1)
  1622  000DEE  64F7               	cpfsgt	tblptrh,c
  1623  000DF0  D004               	bra	u437
  1624  000DF2  0008               	tblrd		*
  1625  000DF4  FFFF               	dw	65535	; errata NOP
  1626  000DF6  50F5               	movf	tablat,w,c
  1627  000DF8  D005               	bra	u430
  1628  000DFA                     u437:
  1629  000DFA  CFF6 FFE9          	movff	tblptrl,fsr0l
  1630  000DFE  CFF7 FFEA          	movff	tblptrh,fsr0h
  1631  000E02  50EF               	movf	indf0,w,c
  1632  000E04                     u430:
  1633  000E04  0900               	iorlw	0
  1634  000E06  A4D8               	btfss	status,2,c
  1635  000E08  D7E8               	goto	l1327
  1636  000E0A  5013               	movf	strlen@s,w,c
  1637  000E0C  5C15               	subwf	strlen@cp,w,c
  1638  000E0E  6E13               	movwf	?_strlen,c
  1639  000E10  5014               	movf	strlen@s+1,w,c
  1640  000E12  5816               	subwfb	strlen@cp+1,w,c
  1641  000E14  6E14               	movwf	?_strlen+1,c
  1642  000E16  0012               	return		;funcret
  1643  000E18  FFFF               	dw	65535	; errata NOP
  1644  000E1A                     __end_of_strlen:
  1645                           	opt callstack 0
  1646                           
  1647 ;; *************** function _R_D *****************
  1648 ;; Defined at:
  1649 ;;		line 167 in file "main.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;  dato            1    wreg     unsigned char 
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;  dato            1   18[COMRAM] unsigned char 
  1654 ;; Return value:  Size  Location     Type
  1655 ;;                  1    wreg      void 
  1656 ;; Registers used:
  1657 ;;		wreg, status,2, cstack
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1663 ;;      Params:         0       0       0       0       0       0       0
  1664 ;;      Locals:         1       0       0       0       0       0       0
  1665 ;;      Temps:          0       0       0       0       0       0       0
  1666 ;;      Totals:         1       0       0       0       0       0       0
  1667 ;;Total ram usage:        1 bytes
  1668 ;; Hardware stack levels used:    1
  1669 ;; Hardware stack levels required when called:    3
  1670 ;; This function calls:
  1671 ;;		Nothing
  1672 ;; This function is called by:
  1673 ;;		_print_message_onLCD
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           	psect	text7
  1678  000F6A                     __ptext7:
  1679                           	opt callstack 0
  1680  000F6A                     _R_D:
  1681                           	opt callstack 0
  1682  000F6A  FFFF               	dw	65535	; assembler added errata NOP
  1683                           
  1684                           ;incstack = 0
  1685                           ;R_D@dato stored from wreg
  1686  000F6C  6E13               	movwf	R_D@dato,c
  1687                           
  1688                           ;main.c: 168: LC3 = 0;
  1689  000F6E  968B               	bcf	3979,3,c	;volatile
  1690                           
  1691                           ;main.c: 169: LC4 = 1;
  1692  000F70  888B               	bsf	3979,4,c	;volatile
  1693                           
  1694                           ;main.c: 170: LATD = dato;
  1695  000F72  C013  FF8C         	movff	R_D@dato,3980	;volatile
  1696                           
  1697                           ;main.c: 171: LC3 = 1;
  1698  000F76  868B               	bsf	3979,3,c	;volatile
  1699                           
  1700                           ;main.c: 172: _delay((unsigned long)((100)*(4000000/4000000.0)));
  1701  000F78  0E19               	movlw	25
  1702  000F7A                     u857:
  1703  000F7A  FFFF               	dw	65535	; errata NOP
  1704  000F7C  2EE8               	decfsz	wreg,f,c
  1705  000F7E  D7FD               	bra	u857
  1706                           
  1707                           ;main.c: 173: LC3 = 0;
  1708  000F80  968B               	bcf	3979,3,c	;volatile
  1709  000F82  0012               	return		;funcret
  1710  000F84  FFFF               	dw	65535	; errata NOP
  1711  000F86                     __end_of_R_D:
  1712                           	opt callstack 0
  1713                           
  1714 ;; *************** function _initial_config *****************
  1715 ;; Defined at:
  1716 ;;		line 93 in file "main.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;		None
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;		None
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  1    wreg      void 
  1723 ;; Registers used:
  1724 ;;		wreg, status,2
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1730 ;;      Params:         0       0       0       0       0       0       0
  1731 ;;      Locals:         0       0       0       0       0       0       0
  1732 ;;      Temps:          0       0       0       0       0       0       0
  1733 ;;      Totals:         0       0       0       0       0       0       0
  1734 ;;Total ram usage:        0 bytes
  1735 ;; Hardware stack levels used:    1
  1736 ;; Hardware stack levels required when called:    3
  1737 ;; This function calls:
  1738 ;;		Nothing
  1739 ;; This function is called by:
  1740 ;;		_main
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           	psect	text8
  1745  000F2E                     __ptext8:
  1746                           	opt callstack 0
  1747  000F2E                     _initial_config:
  1748                           	opt callstack 0
  1749  000F2E  FFFF               	dw	65535	; assembler added errata NOP
  1750                           
  1751                           ;main.c: 99: TRISC = 0B10000000;
  1752                           
  1753                           ;incstack = 0
  1754  000F30  0E80               	movlw	128
  1755  000F32  6E94               	movwf	3988,c	;volatile
  1756                           
  1757                           ;main.c: 100: TRISD = 0X00;
  1758  000F34  0E00               	movlw	0
  1759  000F36  6E95               	movwf	3989,c	;volatile
  1760                           
  1761                           ;main.c: 103: LATC = 0;
  1762  000F38  0E00               	movlw	0
  1763  000F3A  6E8B               	movwf	3979,c	;volatile
  1764                           
  1765                           ;main.c: 104: LATD = 0;
  1766  000F3C  0E00               	movlw	0
  1767  000F3E  6E8C               	movwf	3980,c	;volatile
  1768                           
  1769                           ;main.c: 105: PORTC = 0;
  1770  000F40  0E00               	movlw	0
  1771  000F42  6E82               	movwf	3970,c	;volatile
  1772                           
  1773                           ;main.c: 106: PORTD = 0;
  1774  000F44  0E00               	movlw	0
  1775  000F46  6E83               	movwf	3971,c	;volatile
  1776  000F48  0012               	return		;funcret
  1777  000F4A  FFFF               	dw	65535	; errata NOP
  1778  000F4C                     __end_of_initial_config:
  1779                           	opt callstack 0
  1780                           
  1781 ;; *************** function _init_LCD *****************
  1782 ;; Defined at:
  1783 ;;		line 146 in file "main.c"
  1784 ;; Parameters:    Size  Location     Type
  1785 ;;		None
  1786 ;; Auto vars:     Size  Location     Type
  1787 ;;		None
  1788 ;; Return value:  Size  Location     Type
  1789 ;;                  1    wreg      void 
  1790 ;; Registers used:
  1791 ;;		wreg, status,2, cstack
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1797 ;;      Params:         0       0       0       0       0       0       0
  1798 ;;      Locals:         0       0       0       0       0       0       0
  1799 ;;      Temps:          1       0       0       0       0       0       0
  1800 ;;      Totals:         1       0       0       0       0       0       0
  1801 ;;Total ram usage:        1 bytes
  1802 ;; Hardware stack levels used:    1
  1803 ;; Hardware stack levels required when called:    4
  1804 ;; This function calls:
  1805 ;;		_R_I
  1806 ;; This function is called by:
  1807 ;;		_main
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811                           	psect	text9
  1812  000C82                     __ptext9:
  1813                           	opt callstack 0
  1814  000C82                     _init_LCD:
  1815                           	opt callstack 0
  1816  000C82  FFFF               	dw	65535	; assembler added errata NOP
  1817                           
  1818                           ;main.c: 147: _delay((unsigned long)((20)*(4000000/4000.0)));
  1819                           
  1820                           ;incstack = 0
  1821  000C84  0E14               	movlw	20
  1822  000C86  6E14               	movwf	??_init_LCD& (0+255),c
  1823  000C88  0E7D               	movlw	125
  1824  000C8A                     u867:
  1825  000C8A  FFFF               	dw	65535	; errata NOP
  1826  000C8C  2EE8               	decfsz	wreg,f,c
  1827  000C8E  D7FD               	bra	u867
  1828  000C90  2E14               	decfsz	??_init_LCD& (0+255),f,c
  1829  000C92  D7FB               	bra	u867
  1830  000C94  D000               	nop2	
  1831                           
  1832                           ;main.c: 149: R_I(0X30);
  1833  000C96  0E30               	movlw	48
  1834  000C98  ECC3  F007         	call	_R_I
  1835                           
  1836                           ;main.c: 150: _delay((unsigned long)((5)*(4000000/4000.0)));
  1837  000C9C  0E05               	movlw	5
  1838  000C9E  6E14               	movwf	??_init_LCD& (0+255),c
  1839  000CA0  0EDF               	movlw	223
  1840  000CA2                     u877:
  1841  000CA2  FFFF               	dw	65535	; errata NOP
  1842  000CA4  2EE8               	decfsz	wreg,f,c
  1843  000CA6  D7FD               	bra	u877
  1844  000CA8  2E14               	decfsz	??_init_LCD& (0+255),f,c
  1845  000CAA  D7FB               	bra	u877
  1846                           
  1847                           ;main.c: 151: R_I(0X30);
  1848  000CAC  0E30               	movlw	48
  1849  000CAE  ECC3  F007         	call	_R_I
  1850                           
  1851                           ;main.c: 152: R_I(0X3C);
  1852  000CB2  0E3C               	movlw	60
  1853  000CB4  ECC3  F007         	call	_R_I
  1854                           
  1855                           ;main.c: 153: R_I(0X0C);
  1856  000CB8  0E0C               	movlw	12
  1857  000CBA  ECC3  F007         	call	_R_I
  1858                           
  1859                           ;main.c: 154: R_I(0X01);
  1860  000CBE  0E01               	movlw	1
  1861  000CC0  ECC3  F007         	call	_R_I
  1862                           
  1863                           ;main.c: 155: _delay((unsigned long)((20)*(4000000/4000.0)));
  1864  000CC4  0E14               	movlw	20
  1865  000CC6  6E14               	movwf	??_init_LCD& (0+255),c
  1866  000CC8  0E7D               	movlw	125
  1867  000CCA                     u887:
  1868  000CCA  FFFF               	dw	65535	; errata NOP
  1869  000CCC  2EE8               	decfsz	wreg,f,c
  1870  000CCE  D7FD               	bra	u887
  1871  000CD0  2E14               	decfsz	??_init_LCD& (0+255),f,c
  1872  000CD2  D7FB               	bra	u887
  1873  000CD4  D000               	nop2	
  1874  000CD6  0012               	return		;funcret
  1875  000CD8  FFFF               	dw	65535	; errata NOP
  1876  000CDA                     __end_of_init_LCD:
  1877                           	opt callstack 0
  1878                           
  1879 ;; *************** function _R_I *****************
  1880 ;; Defined at:
  1881 ;;		line 158 in file "main.c"
  1882 ;; Parameters:    Size  Location     Type
  1883 ;;  dato            1    wreg     unsigned char 
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;  dato            1   18[COMRAM] unsigned char 
  1886 ;; Return value:  Size  Location     Type
  1887 ;;                  1    wreg      void 
  1888 ;; Registers used:
  1889 ;;		wreg, status,2, cstack
  1890 ;; Tracked objects:
  1891 ;;		On entry : 0/0
  1892 ;;		On exit  : 0/0
  1893 ;;		Unchanged: 0/0
  1894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1895 ;;      Params:         0       0       0       0       0       0       0
  1896 ;;      Locals:         1       0       0       0       0       0       0
  1897 ;;      Temps:          0       0       0       0       0       0       0
  1898 ;;      Totals:         1       0       0       0       0       0       0
  1899 ;;Total ram usage:        1 bytes
  1900 ;; Hardware stack levels used:    1
  1901 ;; Hardware stack levels required when called:    3
  1902 ;; This function calls:
  1903 ;;		Nothing
  1904 ;; This function is called by:
  1905 ;;		_init_LCD
  1906 ;;		_print_message_onLCD
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           	psect	text10
  1911  000F86                     __ptext10:
  1912                           	opt callstack 0
  1913  000F86                     _R_I:
  1914                           	opt callstack 0
  1915  000F86  FFFF               	dw	65535	; assembler added errata NOP
  1916                           
  1917                           ;incstack = 0
  1918                           ;R_I@dato stored from wreg
  1919  000F88  6E13               	movwf	R_I@dato,c
  1920                           
  1921                           ;main.c: 159: LC3 = 0;
  1922  000F8A  968B               	bcf	3979,3,c	;volatile
  1923                           
  1924                           ;main.c: 160: LC4 = 0;
  1925  000F8C  988B               	bcf	3979,4,c	;volatile
  1926                           
  1927                           ;main.c: 161: LATD = dato;
  1928  000F8E  C013  FF8C         	movff	R_I@dato,3980	;volatile
  1929                           
  1930                           ;main.c: 162: LC3 = 1;
  1931  000F92  868B               	bsf	3979,3,c	;volatile
  1932                           
  1933                           ;main.c: 163: _delay((unsigned long)((100)*(4000000/4000000.0)));
  1934  000F94  0E19               	movlw	25
  1935  000F96                     u897:
  1936  000F96  FFFF               	dw	65535	; errata NOP
  1937  000F98  2EE8               	decfsz	wreg,f,c
  1938  000F9A  D7FD               	bra	u897
  1939                           
  1940                           ;main.c: 164: LC3 = 0;
  1941  000F9C  968B               	bcf	3979,3,c	;volatile
  1942  000F9E  0012               	return		;funcret
  1943  000FA0  FFFF               	dw	65535	; errata NOP
  1944  000FA2                     __end_of_R_I:
  1945                           	opt callstack 0
  1946                           
  1947 ;; *************** function _atoi *****************
  1948 ;; Defined at:
  1949 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\atoi.c"
  1950 ;; Parameters:    Size  Location     Type
  1951 ;;  s               2   24[COMRAM] PTR const unsigned char 
  1952 ;;		 -> cu(3), 
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;  a               2   29[COMRAM] int 
  1955 ;;  sign            1   28[COMRAM] unsigned char 
  1956 ;; Return value:  Size  Location     Type
  1957 ;;                  2   24[COMRAM] int 
  1958 ;; Registers used:
  1959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1965 ;;      Params:         2       0       0       0       0       0       0
  1966 ;;      Locals:         3       0       0       0       0       0       0
  1967 ;;      Temps:          2       0       0       0       0       0       0
  1968 ;;      Totals:         7       0       0       0       0       0       0
  1969 ;;Total ram usage:        7 bytes
  1970 ;; Hardware stack levels used:    1
  1971 ;; Hardware stack levels required when called:    4
  1972 ;; This function calls:
  1973 ;;		___wmul
  1974 ;;		_isdigit
  1975 ;; This function is called by:
  1976 ;;		_main
  1977 ;; This function uses a non-reentrant model
  1978 ;;
  1979                           
  1980                           	psect	text11
  1981  0009DE                     __ptext11:
  1982                           	opt callstack 0
  1983  0009DE                     _atoi:
  1984                           	opt callstack 0
  1985  0009DE  FFFF               	dw	65535	; assembler added errata NOP
  1986                           
  1987                           ;incstack = 0
  1988  0009E0  D003               	goto	l1461
  1989  0009E2                     l1459:
  1990  0009E2  FFFF               	dw	65535	; assembler added errata NOP
  1991  0009E4  4A19               	infsnz	atoi@s,f,c
  1992  0009E6  2A1A               	incf	atoi@s+1,f,c
  1993  0009E8                     l1461:
  1994  0009E8  FFFF               	dw	65535	; assembler added errata NOP
  1995  0009EA  C019  FFD9         	movff	atoi@s,fsr2l
  1996  0009EE  C01A  FFDA         	movff	atoi@s+1,fsr2h
  1997  0009F2  0E20               	movlw	32
  1998  0009F4  18DE               	xorwf	postinc2,w,c
  1999  0009F6  B4D8               	btfsc	status,2,c
  2000  0009F8  D7F4               	goto	l1459
  2001  0009FA  C019  FFD9         	movff	atoi@s,fsr2l
  2002  0009FE  C01A  FFDA         	movff	atoi@s+1,fsr2h
  2003  000A02  0E09               	movlw	9
  2004  000A04  18DE               	xorwf	postinc2,w,c
  2005  000A06  B4D8               	btfsc	status,2,c
  2006  000A08  D7EC               	goto	l1459
  2007  000A0A  0E00               	movlw	0
  2008  000A0C  6E1F               	movwf	atoi@a+1,c
  2009  000A0E  0E00               	movlw	0
  2010  000A10  6E1E               	movwf	atoi@a,c
  2011  000A12  0E00               	movlw	0
  2012  000A14  6E1D               	movwf	atoi@sign,c
  2013  000A16  C019  FFD9         	movff	atoi@s,fsr2l
  2014  000A1A  C01A  FFDA         	movff	atoi@s+1,fsr2h
  2015  000A1E  0E2D               	movlw	45
  2016  000A20  18DE               	xorwf	postinc2,w,c
  2017  000A22  A4D8               	btfss	status,2,c
  2018  000A24  D002               	goto	l1471
  2019  000A26  2A1D               	incf	atoi@sign,f,c
  2020  000A28  D009               	goto	u630
  2021  000A2A                     l1471:
  2022  000A2A  FFFF               	dw	65535	; assembler added errata NOP
  2023  000A2C  C019  FFD9         	movff	atoi@s,fsr2l
  2024  000A30  C01A  FFDA         	movff	atoi@s+1,fsr2h
  2025  000A34  0E2B               	movlw	43
  2026  000A36  18DE               	xorwf	postinc2,w,c
  2027  000A38  A4D8               	btfss	status,2,c
  2028  000A3A  D020               	goto	l1479
  2029  000A3C                     u630:
  2030  000A3C  FFFF               	dw	65535	; assembler added errata NOP
  2031  000A3E  4A19               	infsnz	atoi@s,f,c
  2032  000A40  2A1A               	incf	atoi@s+1,f,c
  2033  000A42  D01C               	goto	l1479
  2034  000A44                     l1475:
  2035  000A44  FFFF               	dw	65535	; assembler added errata NOP
  2036  000A46  C01E  F013         	movff	atoi@a,___wmul@multiplier
  2037  000A4A  C01F  F014         	movff	atoi@a+1,___wmul@multiplier+1
  2038  000A4E  0E00               	movlw	0
  2039  000A50  6E16               	movwf	___wmul@multiplicand+1,c
  2040  000A52  0E0A               	movlw	10
  2041  000A54  6E15               	movwf	___wmul@multiplicand,c
  2042  000A56  EC4C  F007         	call	___wmul	;wreg free
  2043  000A5A  C019  FFD9         	movff	atoi@s,fsr2l
  2044  000A5E  C01A  FFDA         	movff	atoi@s+1,fsr2h
  2045  000A62  50DF               	movf	indf2,w,c
  2046  000A64  6E1B               	movwf	??_atoi& (0+255),c
  2047  000A66  501B               	movf	??_atoi,w,c
  2048  000A68  2613               	addwf	?___wmul,f,c
  2049  000A6A  0E00               	movlw	0
  2050  000A6C  2214               	addwfc	?___wmul+1,f,c
  2051  000A6E  0ED0               	movlw	208
  2052  000A70  2413               	addwf	?___wmul,w,c
  2053  000A72  6E1E               	movwf	atoi@a,c
  2054  000A74  0EFF               	movlw	255
  2055  000A76  2014               	addwfc	?___wmul+1,w,c
  2056  000A78  6E1F               	movwf	atoi@a+1,c
  2057  000A7A  D7E0               	goto	u630
  2058  000A7C                     l1479:
  2059  000A7C  FFFF               	dw	65535	; assembler added errata NOP
  2060  000A7E  C019  FFD9         	movff	atoi@s,fsr2l
  2061  000A82  C01A  FFDA         	movff	atoi@s+1,fsr2h
  2062  000A86  50DF               	movf	indf2,w,c
  2063  000A88  EC73  F007         	call	_isdigit
  2064  000A8C  B0D8               	btfsc	status,0,c
  2065  000A8E  D7DA               	goto	l1475
  2066  000A90  501D               	movf	atoi@sign,w,c
  2067  000A92  B4D8               	btfsc	status,2,c
  2068  000A94  D00D               	goto	l863
  2069  000A96  C01E  F01B         	movff	atoi@a,??_atoi
  2070  000A9A  C01F  F01C         	movff	atoi@a+1,??_atoi+1
  2071  000A9E  1E1B               	comf	??_atoi,f,c
  2072  000AA0  1E1C               	comf	??_atoi+1,f,c
  2073  000AA2  4A1B               	infsnz	??_atoi,f,c
  2074  000AA4  2A1C               	incf	??_atoi+1,f,c
  2075  000AA6  C01B  F019         	movff	??_atoi,?_atoi
  2076  000AAA  C01C  F01A         	movff	??_atoi+1,?_atoi+1
  2077  000AAE  D005               	goto	l864
  2078  000AB0                     l863:
  2079  000AB0  FFFF               	dw	65535	; assembler added errata NOP
  2080  000AB2  C01E  F019         	movff	atoi@a,?_atoi
  2081  000AB6  C01F  F01A         	movff	atoi@a+1,?_atoi+1
  2082  000ABA                     l864:
  2083  000ABA  FFFF               	dw	65535	; assembler added errata NOP
  2084  000ABC  0012               	return		;funcret
  2085  000ABE  FFFF               	dw	65535	; errata NOP
  2086  000AC0                     __end_of_atoi:
  2087                           	opt callstack 0
  2088                           
  2089 ;; *************** function _isdigit *****************
  2090 ;; Defined at:
  2091 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;  c               1    wreg     unsigned char 
  2094 ;; Auto vars:     Size  Location     Type
  2095 ;;  c               1   20[COMRAM] unsigned char 
  2096 ;; Return value:  Size  Location     Type
  2097 ;;		None               void
  2098 ;; Registers used:
  2099 ;;		wreg, status,2, status,0
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2105 ;;      Params:         0       0       0       0       0       0       0
  2106 ;;      Locals:         2       0       0       0       0       0       0
  2107 ;;      Temps:          1       0       0       0       0       0       0
  2108 ;;      Totals:         3       0       0       0       0       0       0
  2109 ;;Total ram usage:        3 bytes
  2110 ;; Hardware stack levels used:    1
  2111 ;; Hardware stack levels required when called:    3
  2112 ;; This function calls:
  2113 ;;		Nothing
  2114 ;; This function is called by:
  2115 ;;		_atoi
  2116 ;; This function uses a non-reentrant model
  2117 ;;
  2118                           
  2119                           	psect	text12
  2120  000EE6                     __ptext12:
  2121                           	opt callstack 0
  2122  000EE6                     _isdigit:
  2123                           	opt callstack 0
  2124  000EE6  FFFF               	dw	65535	; assembler added errata NOP
  2125                           
  2126                           ;incstack = 0
  2127                           ;isdigit@c stored from wreg
  2128  000EE8  6E15               	movwf	isdigit@c,c
  2129  000EEA  0E00               	movlw	0
  2130  000EEC  6E14               	movwf	_isdigit$830,c
  2131  000EEE  0E3A               	movlw	58
  2132  000EF0  6015               	cpfslt	isdigit@c,c
  2133  000EF2  D005               	goto	l1343
  2134  000EF4  0E2F               	movlw	47
  2135  000EF6  6415               	cpfsgt	isdigit@c,c
  2136  000EF8  D002               	goto	l1343
  2137  000EFA  0E01               	movlw	1
  2138  000EFC  6E14               	movwf	_isdigit$830,c
  2139  000EFE                     l1343:
  2140  000EFE  FFFF               	dw	65535	; assembler added errata NOP
  2141  000F00  C014  F013         	movff	_isdigit$830,??_isdigit
  2142  000F04  3013               	rrcf	??_isdigit,w,c
  2143  000F06  0012               	return		;funcret
  2144  000F08  FFFF               	dw	65535	; errata NOP
  2145  000F0A                     __end_of_isdigit:
  2146                           	opt callstack 0
  2147                           
  2148 ;; *************** function _PWM_config *****************
  2149 ;; Defined at:
  2150 ;;		line 120 in file "main.c"
  2151 ;; Parameters:    Size  Location     Type
  2152 ;;		None
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;		None
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  1    wreg      void 
  2157 ;; Registers used:
  2158 ;;		wreg, status,2
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2164 ;;      Params:         0       0       0       0       0       0       0
  2165 ;;      Locals:         0       0       0       0       0       0       0
  2166 ;;      Temps:          0       0       0       0       0       0       0
  2167 ;;      Totals:         0       0       0       0       0       0       0
  2168 ;;Total ram usage:        0 bytes
  2169 ;; Hardware stack levels used:    1
  2170 ;; Hardware stack levels required when called:    3
  2171 ;; This function calls:
  2172 ;;		Nothing
  2173 ;; This function is called by:
  2174 ;;		_main
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           	psect	text13
  2179  000F4C                     __ptext13:
  2180                           	opt callstack 0
  2181  000F4C                     _PWM_config:
  2182                           	opt callstack 0
  2183  000F4C  FFFF               	dw	65535	; assembler added errata NOP
  2184                           
  2185                           ;main.c: 124: CCP1CON = 0B00011100;
  2186                           
  2187                           ;incstack = 0
  2188  000F4E  0E1C               	movlw	28
  2189  000F50  6EBD               	movwf	4029,c	;volatile
  2190                           
  2191                           ;main.c: 125: CCP2CON = 0B00011100;
  2192  000F52  0E1C               	movlw	28
  2193  000F54  6EBA               	movwf	4026,c	;volatile
  2194                           
  2195                           ;main.c: 130: PR2 = 0X21;
  2196  000F56  0E21               	movlw	33
  2197  000F58  6ECB               	movwf	4043,c	;volatile
  2198                           
  2199                           ;main.c: 135: CCPR1L = 0B01010011;
  2200  000F5A  0E53               	movlw	83
  2201  000F5C  6EBE               	movwf	4030,c	;volatile
  2202                           
  2203                           ;main.c: 136: CCPR2L = 0B01010011;
  2204  000F5E  0E53               	movlw	83
  2205  000F60  6EBB               	movwf	4027,c	;volatile
  2206                           
  2207                           ;main.c: 143: T2CON = 0B00000100;
  2208  000F62  0E04               	movlw	4
  2209  000F64  6ECA               	movwf	4042,c	;volatile
  2210  000F66  0012               	return		;funcret
  2211  000F68  FFFF               	dw	65535	; errata NOP
  2212  000F6A                     __end_of_PWM_config:
  2213                           	opt callstack 0
  2214                           
  2215 ;; *************** function _PWM2 *****************
  2216 ;; Defined at:
  2217 ;;		line 248 in file "main.c"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;  ciclo_util      2   31[COMRAM] unsigned int 
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;  t_alto          2   35[COMRAM] unsigned int 
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  1    wreg      void 
  2224 ;; Registers used:
  2225 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2231 ;;      Params:         2       0       0       0       0       0       0
  2232 ;;      Locals:         2       0       0       0       0       0       0
  2233 ;;      Temps:          2       0       0       0       0       0       0
  2234 ;;      Totals:         6       0       0       0       0       0       0
  2235 ;;Total ram usage:        6 bytes
  2236 ;; Hardware stack levels used:    1
  2237 ;; Hardware stack levels required when called:    4
  2238 ;; This function calls:
  2239 ;;		___lwdiv
  2240 ;;		___wmul
  2241 ;; This function is called by:
  2242 ;;		_main
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246                           	psect	text14
  2247  000AC0                     __ptext14:
  2248                           	opt callstack 0
  2249  000AC0                     _PWM2:
  2250                           	opt callstack 0
  2251  000AC0  FFFF               	dw	65535	; assembler added errata NOP
  2252                           
  2253                           ;main.c: 249: unsigned int t_alto = (136 * ciclo_util) / 100;
  2254                           
  2255                           ;incstack = 0
  2256  000AC2  C020  F013         	movff	PWM2@ciclo_util,___wmul@multiplier
  2257  000AC6  C021  F014         	movff	PWM2@ciclo_util+1,___wmul@multiplier+1
  2258  000ACA  0E00               	movlw	0
  2259  000ACC  6E16               	movwf	___wmul@multiplicand+1,c
  2260  000ACE  0E88               	movlw	136
  2261  000AD0  6E15               	movwf	___wmul@multiplicand,c
  2262  000AD2  EC4C  F007         	call	___wmul	;wreg free
  2263  000AD6  C013  F019         	movff	?___wmul,___lwdiv@dividend
  2264  000ADA  C014  F01A         	movff	?___wmul+1,___lwdiv@dividend+1
  2265  000ADE  0E00               	movlw	0
  2266  000AE0  6E1C               	movwf	___lwdiv@divisor+1,c
  2267  000AE2  0E64               	movlw	100
  2268  000AE4  6E1B               	movwf	___lwdiv@divisor,c
  2269  000AE6  EC11  F006         	call	___lwdiv	;wreg free
  2270  000AEA  C019  F024         	movff	?___lwdiv,PWM2@t_alto
  2271  000AEE  C01A  F025         	movff	?___lwdiv+1,PWM2@t_alto+1
  2272                           
  2273                           ;main.c: 250: CCPR2L = t_alto>>2;
  2274  000AF2  C024  F022         	movff	PWM2@t_alto,??_PWM2
  2275  000AF6  C025  F023         	movff	PWM2@t_alto+1,??_PWM2+1
  2276  000AFA  90D8               	bcf	status,0,c
  2277  000AFC  3223               	rrcf	??_PWM2+1,f,c
  2278  000AFE  3222               	rrcf	??_PWM2,f,c
  2279  000B00  90D8               	bcf	status,0,c
  2280  000B02  3223               	rrcf	??_PWM2+1,f,c
  2281  000B04  3222               	rrcf	??_PWM2,f,c
  2282  000B06  5022               	movf	??_PWM2,w,c
  2283  000B08  6EBB               	movwf	4027,c	;volatile
  2284                           
  2285                           ;main.c: 251: t_alto = (t_alto<<4)&0x0030;
  2286  000B0A  C024  F022         	movff	PWM2@t_alto,??_PWM2
  2287  000B0E  C025  F023         	movff	PWM2@t_alto+1,??_PWM2+1
  2288  000B12  3A22               	swapf	??_PWM2,f,c
  2289  000B14  3A23               	swapf	??_PWM2+1,f,c
  2290  000B16  0EF0               	movlw	240
  2291  000B18  1623               	andwf	??_PWM2+1,f,c
  2292  000B1A  5022               	movf	??_PWM2,w,c
  2293  000B1C  0B0F               	andlw	15
  2294  000B1E  1223               	iorwf	??_PWM2+1,f,c
  2295  000B20  0EF0               	movlw	240
  2296  000B22  1622               	andwf	??_PWM2,f,c
  2297  000B24  0E30               	movlw	48
  2298  000B26  1422               	andwf	??_PWM2,w,c
  2299  000B28  6E24               	movwf	PWM2@t_alto,c
  2300  000B2A  6A25               	clrf	PWM2@t_alto+1,c
  2301                           
  2302                           ;main.c: 252: CCP2CON &= 0XCF;
  2303  000B2C  0ECF               	movlw	207
  2304  000B2E  16BA               	andwf	4026,f,c	;volatile
  2305                           
  2306                           ;main.c: 253: CCP2CON |= t_alto;
  2307  000B30  5024               	movf	PWM2@t_alto,w,c
  2308  000B32  12BA               	iorwf	4026,f,c	;volatile
  2309  000B34  0012               	return		;funcret
  2310  000B36  FFFF               	dw	65535	; errata NOP
  2311  000B38                     __end_of_PWM2:
  2312                           	opt callstack 0
  2313                           
  2314 ;; *************** function _PWM1 *****************
  2315 ;; Defined at:
  2316 ;;		line 216 in file "main.c"
  2317 ;; Parameters:    Size  Location     Type
  2318 ;;  ciclo_util      2   31[COMRAM] unsigned int 
  2319 ;; Auto vars:     Size  Location     Type
  2320 ;;  t_alto          2   35[COMRAM] unsigned int 
  2321 ;; Return value:  Size  Location     Type
  2322 ;;                  1    wreg      void 
  2323 ;; Registers used:
  2324 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2325 ;; Tracked objects:
  2326 ;;		On entry : 0/0
  2327 ;;		On exit  : 0/0
  2328 ;;		Unchanged: 0/0
  2329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2330 ;;      Params:         2       0       0       0       0       0       0
  2331 ;;      Locals:         2       0       0       0       0       0       0
  2332 ;;      Temps:          2       0       0       0       0       0       0
  2333 ;;      Totals:         6       0       0       0       0       0       0
  2334 ;;Total ram usage:        6 bytes
  2335 ;; Hardware stack levels used:    1
  2336 ;; Hardware stack levels required when called:    4
  2337 ;; This function calls:
  2338 ;;		___lwdiv
  2339 ;;		___wmul
  2340 ;; This function is called by:
  2341 ;;		_main
  2342 ;; This function uses a non-reentrant model
  2343 ;;
  2344                           
  2345                           	psect	text15
  2346  000B38                     __ptext15:
  2347                           	opt callstack 0
  2348  000B38                     _PWM1:
  2349                           	opt callstack 0
  2350  000B38  FFFF               	dw	65535	; assembler added errata NOP
  2351                           
  2352                           ;main.c: 222: unsigned int t_alto = (136 * ciclo_util) / 100;
  2353                           
  2354                           ;incstack = 0
  2355  000B3A  C020  F013         	movff	PWM1@ciclo_util,___wmul@multiplier
  2356  000B3E  C021  F014         	movff	PWM1@ciclo_util+1,___wmul@multiplier+1
  2357  000B42  0E00               	movlw	0
  2358  000B44  6E16               	movwf	___wmul@multiplicand+1,c
  2359  000B46  0E88               	movlw	136
  2360  000B48  6E15               	movwf	___wmul@multiplicand,c
  2361  000B4A  EC4C  F007         	call	___wmul	;wreg free
  2362  000B4E  C013  F019         	movff	?___wmul,___lwdiv@dividend
  2363  000B52  C014  F01A         	movff	?___wmul+1,___lwdiv@dividend+1
  2364  000B56  0E00               	movlw	0
  2365  000B58  6E1C               	movwf	___lwdiv@divisor+1,c
  2366  000B5A  0E64               	movlw	100
  2367  000B5C  6E1B               	movwf	___lwdiv@divisor,c
  2368  000B5E  EC11  F006         	call	___lwdiv	;wreg free
  2369  000B62  C019  F024         	movff	?___lwdiv,PWM1@t_alto
  2370  000B66  C01A  F025         	movff	?___lwdiv+1,PWM1@t_alto+1
  2371                           
  2372                           ;main.c: 228: CCPR1L = t_alto>>2;
  2373  000B6A  C024  F022         	movff	PWM1@t_alto,??_PWM1
  2374  000B6E  C025  F023         	movff	PWM1@t_alto+1,??_PWM1+1
  2375  000B72  90D8               	bcf	status,0,c
  2376  000B74  3223               	rrcf	??_PWM1+1,f,c
  2377  000B76  3222               	rrcf	??_PWM1,f,c
  2378  000B78  90D8               	bcf	status,0,c
  2379  000B7A  3223               	rrcf	??_PWM1+1,f,c
  2380  000B7C  3222               	rrcf	??_PWM1,f,c
  2381  000B7E  5022               	movf	??_PWM1,w,c
  2382  000B80  6EBE               	movwf	4030,c	;volatile
  2383                           
  2384                           ;main.c: 234: t_alto = (t_alto<<4)&0x0030;
  2385  000B82  C024  F022         	movff	PWM1@t_alto,??_PWM1
  2386  000B86  C025  F023         	movff	PWM1@t_alto+1,??_PWM1+1
  2387  000B8A  3A22               	swapf	??_PWM1,f,c
  2388  000B8C  3A23               	swapf	??_PWM1+1,f,c
  2389  000B8E  0EF0               	movlw	240
  2390  000B90  1623               	andwf	??_PWM1+1,f,c
  2391  000B92  5022               	movf	??_PWM1,w,c
  2392  000B94  0B0F               	andlw	15
  2393  000B96  1223               	iorwf	??_PWM1+1,f,c
  2394  000B98  0EF0               	movlw	240
  2395  000B9A  1622               	andwf	??_PWM1,f,c
  2396  000B9C  0E30               	movlw	48
  2397  000B9E  1422               	andwf	??_PWM1,w,c
  2398  000BA0  6E24               	movwf	PWM1@t_alto,c
  2399  000BA2  6A25               	clrf	PWM1@t_alto+1,c
  2400                           
  2401                           ;main.c: 240: CCP1CON &= 0XCF;
  2402  000BA4  0ECF               	movlw	207
  2403  000BA6  16BD               	andwf	4029,f,c	;volatile
  2404                           
  2405                           ;main.c: 245: CCP1CON |= t_alto;
  2406  000BA8  5024               	movf	PWM1@t_alto,w,c
  2407  000BAA  12BD               	iorwf	4029,f,c	;volatile
  2408  000BAC  0012               	return		;funcret
  2409  000BAE  FFFF               	dw	65535	; errata NOP
  2410  000BB0                     __end_of_PWM1:
  2411                           	opt callstack 0
  2412                           
  2413 ;; *************** function ___wmul *****************
  2414 ;; Defined at:
  2415 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;  multiplier      2   18[COMRAM] unsigned int 
  2418 ;;  multiplicand    2   20[COMRAM] unsigned int 
  2419 ;; Auto vars:     Size  Location     Type
  2420 ;;  product         2   22[COMRAM] unsigned int 
  2421 ;; Return value:  Size  Location     Type
  2422 ;;                  2   18[COMRAM] unsigned int 
  2423 ;; Registers used:
  2424 ;;		wreg, status,2, status,0, prodl, prodh
  2425 ;; Tracked objects:
  2426 ;;		On entry : 0/0
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2430 ;;      Params:         4       0       0       0       0       0       0
  2431 ;;      Locals:         2       0       0       0       0       0       0
  2432 ;;      Temps:          0       0       0       0       0       0       0
  2433 ;;      Totals:         6       0       0       0       0       0       0
  2434 ;;Total ram usage:        6 bytes
  2435 ;; Hardware stack levels used:    1
  2436 ;; Hardware stack levels required when called:    3
  2437 ;; This function calls:
  2438 ;;		Nothing
  2439 ;; This function is called by:
  2440 ;;		_PWM1
  2441 ;;		_PWM2
  2442 ;;		_atoi
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446                           	psect	text16
  2447  000E98                     __ptext16:
  2448                           	opt callstack 0
  2449  000E98                     ___wmul:
  2450                           	opt callstack 0
  2451  000E98  FFFF               	dw	65535	; assembler added errata NOP
  2452                           
  2453                           ;incstack = 0
  2454  000E9A  5013               	movf	___wmul@multiplier,w,c
  2455  000E9C  0215               	mulwf	___wmul@multiplicand,c
  2456  000E9E  CFF3 F017          	movff	prodl,___wmul@product
  2457  000EA2  CFF4 F018          	movff	prodh,___wmul@product+1
  2458  000EA6  5013               	movf	___wmul@multiplier,w,c
  2459  000EA8  0216               	mulwf	___wmul@multiplicand+1,c
  2460  000EAA  50F3               	movf	prodl,w,c
  2461  000EAC  2618               	addwf	___wmul@product+1,f,c
  2462  000EAE  5014               	movf	___wmul@multiplier+1,w,c
  2463  000EB0  0215               	mulwf	___wmul@multiplicand,c
  2464  000EB2  50F3               	movf	prodl,w,c
  2465  000EB4  2618               	addwf	___wmul@product+1,f,c
  2466  000EB6  C017  F013         	movff	___wmul@product,?___wmul
  2467  000EBA  C018  F014         	movff	___wmul@product+1,?___wmul+1
  2468  000EBE  0012               	return		;funcret
  2469  000EC0  FFFF               	dw	65535	; errata NOP
  2470  000EC2                     __end_of___wmul:
  2471                           	opt callstack 0
  2472                           
  2473 ;; *************** function ___lwdiv *****************
  2474 ;; Defined at:
  2475 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  2476 ;; Parameters:    Size  Location     Type
  2477 ;;  dividend        2   24[COMRAM] unsigned int 
  2478 ;;  divisor         2   26[COMRAM] unsigned int 
  2479 ;; Auto vars:     Size  Location     Type
  2480 ;;  quotient        2   28[COMRAM] unsigned int 
  2481 ;;  counter         1   30[COMRAM] unsigned char 
  2482 ;; Return value:  Size  Location     Type
  2483 ;;                  2   24[COMRAM] unsigned int 
  2484 ;; Registers used:
  2485 ;;		wreg, status,2, status,0
  2486 ;; Tracked objects:
  2487 ;;		On entry : 0/0
  2488 ;;		On exit  : 0/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2491 ;;      Params:         4       0       0       0       0       0       0
  2492 ;;      Locals:         3       0       0       0       0       0       0
  2493 ;;      Temps:          0       0       0       0       0       0       0
  2494 ;;      Totals:         7       0       0       0       0       0       0
  2495 ;;Total ram usage:        7 bytes
  2496 ;; Hardware stack levels used:    1
  2497 ;; Hardware stack levels required when called:    3
  2498 ;; This function calls:
  2499 ;;		Nothing
  2500 ;; This function is called by:
  2501 ;;		_PWM1
  2502 ;;		_PWM2
  2503 ;;		_sprintf
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507                           	psect	text17
  2508  000C22                     __ptext17:
  2509                           	opt callstack 0
  2510  000C22                     ___lwdiv:
  2511                           	opt callstack 0
  2512  000C22  FFFF               	dw	65535	; assembler added errata NOP
  2513                           
  2514                           ;incstack = 0
  2515  000C24  0E00               	movlw	0
  2516  000C26  6E1E               	movwf	___lwdiv@quotient+1,c
  2517  000C28  0E00               	movlw	0
  2518  000C2A  6E1D               	movwf	___lwdiv@quotient,c
  2519  000C2C  501B               	movf	___lwdiv@divisor,w,c
  2520  000C2E  101C               	iorwf	___lwdiv@divisor+1,w,c
  2521  000C30  B4D8               	btfsc	status,2,c
  2522  000C32  D020               	goto	l669
  2523  000C34  0E01               	movlw	1
  2524  000C36  6E1F               	movwf	___lwdiv@counter,c
  2525  000C38  D005               	goto	l1361
  2526  000C3A                     l1359:
  2527  000C3A  FFFF               	dw	65535	; assembler added errata NOP
  2528  000C3C  90D8               	bcf	status,0,c
  2529  000C3E  361B               	rlcf	___lwdiv@divisor,f,c
  2530  000C40  361C               	rlcf	___lwdiv@divisor+1,f,c
  2531  000C42  2A1F               	incf	___lwdiv@counter,f,c
  2532  000C44                     l1361:
  2533  000C44  FFFF               	dw	65535	; assembler added errata NOP
  2534  000C46  AE1C               	btfss	___lwdiv@divisor+1,7,c
  2535  000C48  D7F8               	goto	l1359
  2536  000C4A                     u480:
  2537  000C4A  FFFF               	dw	65535	; assembler added errata NOP
  2538  000C4C  90D8               	bcf	status,0,c
  2539  000C4E  361D               	rlcf	___lwdiv@quotient,f,c
  2540  000C50  361E               	rlcf	___lwdiv@quotient+1,f,c
  2541  000C52  501B               	movf	___lwdiv@divisor,w,c
  2542  000C54  5C19               	subwf	___lwdiv@dividend,w,c
  2543  000C56  501C               	movf	___lwdiv@divisor+1,w,c
  2544  000C58  581A               	subwfb	___lwdiv@dividend+1,w,c
  2545  000C5A  A0D8               	btfss	status,0,c
  2546  000C5C  D005               	goto	l1371
  2547  000C5E  501B               	movf	___lwdiv@divisor,w,c
  2548  000C60  5E19               	subwf	___lwdiv@dividend,f,c
  2549  000C62  501C               	movf	___lwdiv@divisor+1,w,c
  2550  000C64  5A1A               	subwfb	___lwdiv@dividend+1,f,c
  2551  000C66  801D               	bsf	___lwdiv@quotient,0,c
  2552  000C68                     l1371:
  2553  000C68  FFFF               	dw	65535	; assembler added errata NOP
  2554  000C6A  90D8               	bcf	status,0,c
  2555  000C6C  321C               	rrcf	___lwdiv@divisor+1,f,c
  2556  000C6E  321B               	rrcf	___lwdiv@divisor,f,c
  2557  000C70  2E1F               	decfsz	___lwdiv@counter,f,c
  2558  000C72  D7EB               	goto	u480
  2559  000C74                     l669:
  2560  000C74  FFFF               	dw	65535	; assembler added errata NOP
  2561  000C76  C01D  F019         	movff	___lwdiv@quotient,?___lwdiv
  2562  000C7A  C01E  F01A         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2563  000C7E  0012               	return		;funcret
  2564  000C80  FFFF               	dw	65535	; errata NOP
  2565  000C82                     __end_of___lwdiv:
  2566                           	opt callstack 0
  2567                           
  2568 ;; *************** function _capture *****************
  2569 ;; Defined at:
  2570 ;;		line 185 in file "main.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;		None
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;  data_receive    1   17[COMRAM] unsigned char 
  2575 ;; Return value:  Size  Location     Type
  2576 ;;                  1    wreg      void 
  2577 ;; Registers used:
  2578 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2584 ;;      Params:         0       0       0       0       0       0       0
  2585 ;;      Locals:         1       0       0       0       0       0       0
  2586 ;;      Temps:          8       0       0       0       0       0       0
  2587 ;;      Totals:         9       0       0       0       0       0       0
  2588 ;;Total ram usage:        9 bytes
  2589 ;; Hardware stack levels used:    1
  2590 ;; Hardware stack levels required when called:    2
  2591 ;; This function calls:
  2592 ;;		i2_isdigit
  2593 ;;		i2_strlen
  2594 ;;		i2_transmit
  2595 ;; This function is called by:
  2596 ;;		Interrupt level 2
  2597 ;; This function uses a non-reentrant model
  2598 ;;
  2599                           
  2600                           	psect	intcode
  2601  000008                     __pintcode:
  2602                           	opt callstack 0
  2603  000008                     _capture:
  2604                           	opt callstack 0
  2605  000008  FFFF               	dw	65535	; assembler added errata NOP
  2606                           
  2607                           ;incstack = 0
  2608  00000A  8233               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2609  00000C  CFE9 F00A          	movff	fsr0l,??_capture
  2610  000010  CFEA F00B          	movff	fsr0h,??_capture+1
  2611  000014  CFD9 F00C          	movff	fsr2l,??_capture+2
  2612  000018  CFDA F00D          	movff	fsr2h,??_capture+3
  2613  00001C  CFF6 F00E          	movff	tblptrl,??_capture+4
  2614  000020  CFF7 F00F          	movff	tblptrh,??_capture+5
  2615  000024  CFF8 F010          	movff	tblptru,??_capture+6
  2616  000028  CFF5 F011          	movff	tablat,??_capture+7
  2617                           
  2618                           ;main.c: 189: if (PIR1bits.RCIF) {
  2619  00002C  AA9E               	btfss	3998,5,c	;volatile
  2620  00002E  D032               	goto	i2l144
  2621                           
  2622                           ;main.c: 190: char data_received = RCREG;
  2623  000030  CFAE F012          	movff	4014,capture@data_received	;volatile
  2624                           
  2625                           ;main.c: 191: if (data_received != 'o' && data_received != 't' && data_received != 'b') 
      +                          {
  2626  000034  0E6F               	movlw	111
  2627  000036  1812               	xorwf	capture@data_received,w,c
  2628  000038  B4D8               	btfsc	status,2,c
  2629  00003A  D024               	goto	i2l1643
  2630  00003C  0E74               	movlw	116
  2631  00003E  1812               	xorwf	capture@data_received,w,c
  2632  000040  B4D8               	btfsc	status,2,c
  2633  000042  D020               	goto	i2l1643
  2634  000044  0E62               	movlw	98
  2635  000046  1812               	xorwf	capture@data_received,w,c
  2636  000048  B4D8               	btfsc	status,2,c
  2637  00004A  D01C               	goto	i2l1643
  2638                           
  2639                           ;main.c: 192: if (!isdigit(data_received)) {
  2640  00004C  5012               	movf	capture@data_received,w,c
  2641  00004E  EC85  F007         	call	i2_isdigit
  2642  000052  B0D8               	btfsc	status,0,c
  2643  000054  D007               	goto	i2l1641
  2644                           
  2645                           ;main.c: 193: transmit("Solo puedes enviar numeros\n\r");
  2646  000056  0E3C               	movlw	low STR_10
  2647  000058  6E05               	movwf	i2transmit@response,c
  2648  00005A  0E06               	movlw	high STR_10
  2649  00005C  6E06               	movwf	i2transmit@response+1,c
  2650  00005E  EC96  F006         	call	i2_transmit	;wreg free
  2651                           
  2652                           ;main.c: 194: } else {
  2653  000062  D016               	goto	i2l1647
  2654  000064                     i2l1641:
  2655  000064  FFFF               	dw	65535	; assembler added errata NOP
  2656                           
  2657                           ;main.c: 195: cu[strlen(cu)] = data_received;
  2658  000066  0EE7               	movlw	low _cu
  2659  000068  6E01               	movwf	i2strlen@s,c
  2660  00006A  0E00               	movlw	high _cu
  2661  00006C  6E02               	movwf	i2strlen@s+1,c
  2662  00006E  EC0D  F007         	call	i2_strlen	;wreg free
  2663  000072  0EE7               	movlw	low _cu
  2664  000074  2401               	addwf	?i2_strlen,w,c
  2665  000076  6ED9               	movwf	fsr2l,c
  2666  000078  0E00               	movlw	high _cu
  2667  00007A  2002               	addwfc	?i2_strlen+1,w,c
  2668  00007C  6EDA               	movwf	fsr2h,c
  2669  00007E  C012  FFDF         	movff	capture@data_received,indf2
  2670  000082  D006               	goto	i2l1647
  2671  000084                     i2l1643:
  2672  000084  FFFF               	dw	65535	; assembler added errata NOP
  2673                           
  2674                           ;main.c: 198: cu_changed = 1;
  2675  000086  0E01               	movlw	1
  2676  000088  0100               	movlb	0	; () banked
  2677  00008A  6FE6               	movwf	_cu_changed& (0+255),b
  2678                           
  2679                           ; BSR set to: 0
  2680                           ;main.c: 199: cu_flag = data_received;
  2681  00008C  C012  F0E5         	movff	capture@data_received,_cu_flag
  2682  000090                     i2l1647:
  2683  000090  FFFF               	dw	65535	; assembler added errata NOP
  2684                           
  2685                           ;main.c: 200: };main.c: 202: PIR1bits.RCIF = 0;
  2686  000092  9A9E               	bcf	3998,5,c	;volatile
  2687  000094                     i2l144:
  2688  000094  FFFF               	dw	65535	; assembler added errata NOP
  2689  000096  C011  FFF5         	movff	??_capture+7,tablat
  2690  00009A  C010  FFF8         	movff	??_capture+6,tblptru
  2691  00009E  C00F  FFF7         	movff	??_capture+5,tblptrh
  2692  0000A2  C00E  FFF6         	movff	??_capture+4,tblptrl
  2693  0000A6  C00D  FFDA         	movff	??_capture+3,fsr2h
  2694  0000AA  C00C  FFD9         	movff	??_capture+2,fsr2l
  2695  0000AE  C00B  FFEA         	movff	??_capture+1,fsr0h
  2696  0000B2  C00A  FFE9         	movff	??_capture,fsr0l
  2697  0000B6  9233               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2698  0000B8  0011               	retfie		f
  2699  0000BA  FFFF               	dw	65535	; errata NOP
  2700  0000BC                     __end_of_capture:
  2701                           	opt callstack 0
  2702                           
  2703 ;; *************** function i2_transmit *****************
  2704 ;; Defined at:
  2705 ;;		line 206 in file "main.c"
  2706 ;; Parameters:    Size  Location     Type
  2707 ;;  response        2    4[COMRAM] PTR unsigned char 
  2708 ;;		 -> STR_10(29), STR_7(25), STR_6(49), STR_4(3), 
  2709 ;;		 -> STR_3(21), STR_2(15), STR_1(15), 
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;  transmit        1    8[COMRAM] unsigned char 
  2712 ;; Return value:  Size  Location     Type
  2713 ;;                  1    wreg      void 
  2714 ;; Registers used:
  2715 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2716 ;; Tracked objects:
  2717 ;;		On entry : 0/0
  2718 ;;		On exit  : 0/0
  2719 ;;		Unchanged: 0/0
  2720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2721 ;;      Params:         2       0       0       0       0       0       0
  2722 ;;      Locals:         1       0       0       0       0       0       0
  2723 ;;      Temps:          2       0       0       0       0       0       0
  2724 ;;      Totals:         5       0       0       0       0       0       0
  2725 ;;Total ram usage:        5 bytes
  2726 ;; Hardware stack levels used:    1
  2727 ;; Hardware stack levels required when called:    1
  2728 ;; This function calls:
  2729 ;;		i2_strlen
  2730 ;; This function is called by:
  2731 ;;		_capture
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735                           	psect	text19
  2736  000D2C                     __ptext19:
  2737                           	opt callstack 0
  2738  000D2C                     i2_transmit:
  2739                           	opt callstack 0
  2740  000D2C  FFFF               	dw	65535	; assembler added errata NOP
  2741                           
  2742                           ;main.c: 207: for (char i = 0; i < strlen(response); i++) {
  2743                           
  2744                           ;incstack = 0
  2745  000D2E  0E00               	movlw	0
  2746  000D30  6E09               	movwf	i2transmit@i,c
  2747  000D32  D012               	goto	i2l1555
  2748  000D34                     i2l149:
  2749  000D34  FFFF               	dw	65535	; assembler added errata NOP
  2750  000D36  A2AC               	btfss	4012,1,c	;volatile
  2751  000D38  D7FD               	goto	i2l149
  2752                           
  2753                           ;main.c: 212: TXREG = response[i];
  2754  000D3A  5009               	movf	i2transmit@i,w,c
  2755  000D3C  2405               	addwf	i2transmit@response,w,c
  2756  000D3E  6E07               	movwf	??i2_transmit& (0+255),c
  2757  000D40  0E00               	movlw	0
  2758  000D42  2006               	addwfc	i2transmit@response+1,w,c
  2759  000D44  6E08               	movwf	(??i2_transmit+1)& (0+255),c
  2760  000D46  C007  FFF6         	movff	??i2_transmit,tblptrl
  2761  000D4A  C008  FFF7         	movff	??i2_transmit+1,tblptrh
  2762  000D4E                     	if	0	;tblptru may be non-zero
  2763  000D4E                     	endif
  2764  000D4E                     	if	0	;tblptru may be non-zero
  2765  000D4E                     	endif
  2766  000D4E  0008               	tblrd		*
  2767  000D50  FFFF               	dw	65535	; errata NOP
  2768  000D52  CFF5 FFAD          	movff	tablat,4013	;volatile
  2769  000D56  2A09               	incf	i2transmit@i,f,c
  2770  000D58                     i2l1555:
  2771  000D58  FFFF               	dw	65535	; assembler added errata NOP
  2772  000D5A  C005  F001         	movff	i2transmit@response,i2strlen@s
  2773  000D5E  C006  F002         	movff	i2transmit@response+1,i2strlen@s+1
  2774  000D62  EC0D  F007         	call	i2_strlen	;wreg free
  2775  000D66  5009               	movf	i2transmit@i,w,c
  2776  000D68  6E07               	movwf	??i2_transmit& (0+255),c
  2777  000D6A  6A08               	clrf	(??i2_transmit+1)& (0+255),c
  2778  000D6C  5001               	movf	?i2_strlen,w,c
  2779  000D6E  5C07               	subwf	??i2_transmit,w,c
  2780  000D70  5002               	movf	?i2_strlen+1,w,c
  2781  000D72  5808               	subwfb	??i2_transmit+1,w,c
  2782  000D74  B0D8               	btfsc	status,0,c
  2783  000D76  0012               	return		;funcret
  2784  000D78  FFFF               	dw	65535	; assembler added errata NOP
  2785  000D7A  D7DC               	goto	i2l149
  2786  000D7C  FFFF               	dw	65535	; errata NOP
  2787  000D7E                     __end_ofi2_transmit:
  2788                           	opt callstack 0
  2789                           
  2790 ;; *************** function i2_strlen *****************
  2791 ;; Defined at:
  2792 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strlen.c"
  2793 ;; Parameters:    Size  Location     Type
  2794 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2795 ;;		 -> STR_10(29), main@f2_m(50), main@f1_m(50), STR_7(25), 
  2796 ;;		 -> STR_6(49), cu(3), STR_5(13), STR_4(3), 
  2797 ;;		 -> STR_3(21), STR_2(15), STR_1(15), 
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;  strlen          2    2[COMRAM] PTR const unsigned char 
  2800 ;;		 -> STR_10(29), main@f2_m(50), main@f1_m(50), STR_7(25), 
  2801 ;;		 -> STR_6(49), cu(3), STR_5(13), STR_4(3), 
  2802 ;;		 -> STR_3(21), STR_2(15), STR_1(15), 
  2803 ;; Return value:  Size  Location     Type
  2804 ;;                  2    0[COMRAM] unsigned int 
  2805 ;; Registers used:
  2806 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  2807 ;; Tracked objects:
  2808 ;;		On entry : 0/0
  2809 ;;		On exit  : 0/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2812 ;;      Params:         2       0       0       0       0       0       0
  2813 ;;      Locals:         2       0       0       0       0       0       0
  2814 ;;      Temps:          0       0       0       0       0       0       0
  2815 ;;      Totals:         4       0       0       0       0       0       0
  2816 ;;Total ram usage:        4 bytes
  2817 ;; Hardware stack levels used:    1
  2818 ;; This function calls:
  2819 ;;		Nothing
  2820 ;; This function is called by:
  2821 ;;		_capture
  2822 ;;		i2_transmit
  2823 ;; This function uses a non-reentrant model
  2824 ;;
  2825                           
  2826                           	psect	text20
  2827  000E1A                     __ptext20:
  2828                           	opt callstack 0
  2829  000E1A                     i2_strlen:
  2830                           	opt callstack 0
  2831  000E1A  FFFF               	dw	65535	; assembler added errata NOP
  2832                           
  2833                           ;incstack = 0
  2834  000E1C  C001  F003         	movff	i2strlen@s,i2strlen@cp
  2835  000E20  C002  F004         	movff	i2strlen@s+1,i2strlen@cp+1
  2836  000E24  D003               	goto	i2l1395
  2837  000E26                     i2l1393:
  2838  000E26  FFFF               	dw	65535	; assembler added errata NOP
  2839  000E28  4A03               	infsnz	i2strlen@cp,f,c
  2840  000E2A  2A04               	incf	i2strlen@cp+1,f,c
  2841  000E2C                     i2l1395:
  2842  000E2C  FFFF               	dw	65535	; assembler added errata NOP
  2843  000E2E  C003  FFF6         	movff	i2strlen@cp,tblptrl
  2844  000E32  C004  FFF7         	movff	i2strlen@cp+1,tblptrh
  2845  000E36  6AF8               	clrf	tblptru,c
  2846  000E38  0E05               	movlw	(high __ramtop+-1)
  2847  000E3A  64F7               	cpfsgt	tblptrh,c
  2848  000E3C  D004               	bra	i2u53_47
  2849  000E3E  0008               	tblrd		*
  2850  000E40  FFFF               	dw	65535	; errata NOP
  2851  000E42  50F5               	movf	tablat,w,c
  2852  000E44  D005               	bra	i2u53_40
  2853  000E46                     i2u53_47:
  2854  000E46  CFF6 FFE9          	movff	tblptrl,fsr0l
  2855  000E4A  CFF7 FFEA          	movff	tblptrh,fsr0h
  2856  000E4E  50EF               	movf	indf0,w,c
  2857  000E50                     i2u53_40:
  2858  000E50  0900               	iorlw	0
  2859  000E52  A4D8               	btfss	status,2,c
  2860  000E54  D7E8               	goto	i2l1393
  2861  000E56  5001               	movf	i2strlen@s,w,c
  2862  000E58  5C03               	subwf	i2strlen@cp,w,c
  2863  000E5A  6E01               	movwf	?i2_strlen,c
  2864  000E5C  5002               	movf	i2strlen@s+1,w,c
  2865  000E5E  5804               	subwfb	i2strlen@cp+1,w,c
  2866  000E60  6E02               	movwf	?i2_strlen+1,c
  2867  000E62  0012               	return		;funcret
  2868  000E64  FFFF               	dw	65535	; errata NOP
  2869  000E66                     __end_ofi2_strlen:
  2870                           	opt callstack 0
  2871                           
  2872 ;; *************** function i2_isdigit *****************
  2873 ;; Defined at:
  2874 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
  2875 ;; Parameters:    Size  Location     Type
  2876 ;;  c               1    wreg     unsigned char 
  2877 ;; Auto vars:     Size  Location     Type
  2878 ;;  c               1    1[COMRAM] unsigned char 
  2879 ;; Return value:  Size  Location     Type
  2880 ;;		None               void
  2881 ;; Registers used:
  2882 ;;		wreg, status,2, status,0
  2883 ;; Tracked objects:
  2884 ;;		On entry : 0/0
  2885 ;;		On exit  : 0/0
  2886 ;;		Unchanged: 0/0
  2887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2888 ;;      Params:         0       0       0       0       0       0       0
  2889 ;;      Locals:         2       0       0       0       0       0       0
  2890 ;;      Temps:          1       0       0       0       0       0       0
  2891 ;;      Totals:         3       0       0       0       0       0       0
  2892 ;;Total ram usage:        3 bytes
  2893 ;; Hardware stack levels used:    1
  2894 ;; This function calls:
  2895 ;;		Nothing
  2896 ;; This function is called by:
  2897 ;;		_capture
  2898 ;; This function uses a non-reentrant model
  2899 ;;
  2900                           
  2901                           	psect	text21
  2902  000F0A                     __ptext21:
  2903                           	opt callstack 0
  2904  000F0A                     i2_isdigit:
  2905                           	opt callstack 0
  2906  000F0A  FFFF               	dw	65535	; assembler added errata NOP
  2907                           
  2908                           ;incstack = 0
  2909                           ;i2isdigit@c stored from wreg
  2910  000F0C  6E02               	movwf	i2isdigit@c,c
  2911  000F0E  0E00               	movlw	0
  2912  000F10  6E03               	movwf	i2_isdigit$830,c
  2913  000F12  0E3A               	movlw	58
  2914  000F14  6002               	cpfslt	i2isdigit@c,c
  2915  000F16  D005               	goto	i2l1565
  2916  000F18  0E2F               	movlw	47
  2917  000F1A  6402               	cpfsgt	i2isdigit@c,c
  2918  000F1C  D002               	goto	i2l1565
  2919  000F1E  0E01               	movlw	1
  2920  000F20  6E03               	movwf	i2_isdigit$830,c
  2921  000F22                     i2l1565:
  2922  000F22  FFFF               	dw	65535	; assembler added errata NOP
  2923  000F24  C003  F001         	movff	i2_isdigit$830,??i2_isdigit
  2924  000F28  3001               	rrcf	??i2_isdigit,w,c
  2925  000F2A  0012               	return		;funcret
  2926  000F2C  FFFF               	dw	65535	; errata NOP
  2927  000F2E                     __end_ofi2_isdigit:
  2928                           	opt callstack 0
  2929                           
  2930                           	psect	rparam
  2931  0000                     
  2932                           	psect	temp
  2933  000033                     btemp:
  2934                           	opt callstack 0
  2935  000033                     	ds	1
  2936  0000                     int$flags	set	btemp
  2937  0000                     wtemp8	set	btemp+1
  2938  0000                     ttemp5	set	btemp+1
  2939  0000                     ttemp6	set	btemp+4
  2940  0000                     ttemp7	set	btemp+8
  2941                           tosu	equ	0xFFF
  2942                           tosh	equ	0xFFE
  2943                           tosl	equ	0xFFD
  2944                           stkptr	equ	0xFFC
  2945                           pclatu	equ	0xFFB
  2946                           pclath	equ	0xFFA
  2947                           pcl	equ	0xFF9
  2948                           tblptru	equ	0xFF8
  2949                           tblptrh	equ	0xFF7
  2950                           tblptrl	equ	0xFF6
  2951                           tablat	equ	0xFF5
  2952                           prodh	equ	0xFF4
  2953                           prodl	equ	0xFF3
  2954                           indf0	equ	0xFEF
  2955                           postinc0	equ	0xFEE
  2956                           postdec0	equ	0xFED
  2957                           preinc0	equ	0xFEC
  2958                           plusw0	equ	0xFEB
  2959                           fsr0h	equ	0xFEA
  2960                           fsr0l	equ	0xFE9
  2961                           wreg	equ	0xFE8
  2962                           indf1	equ	0xFE7
  2963                           postinc1	equ	0xFE6
  2964                           postdec1	equ	0xFE5
  2965                           preinc1	equ	0xFE4
  2966                           plusw1	equ	0xFE3
  2967                           fsr1h	equ	0xFE2
  2968                           fsr1l	equ	0xFE1
  2969                           bsr	equ	0xFE0
  2970                           indf2	equ	0xFDF
  2971                           postinc2	equ	0xFDE
  2972                           postdec2	equ	0xFDD
  2973                           preinc2	equ	0xFDC
  2974                           plusw2	equ	0xFDB
  2975                           fsr2h	equ	0xFDA
  2976                           fsr2l	equ	0xFD9
  2977                           status	equ	0xFD8


Data Sizes:
    Strings     188
    Constant    10
    Data        2
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     50      50
    BANK0           128    101     108
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_10(CODE[29]), main@f2_m(BANK0[50]), main@f1_m(BANK0[50]), STR_7(CODE[25]), 
		 -> STR_6(CODE[49]), cu(BANK0[3]), STR_5(CODE[13]), STR_4(CODE[3]), 
		 -> STR_3(CODE[21]), STR_2(CODE[15]), STR_1(CODE[15]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_10(CODE[29]), main@f2_m(BANK0[50]), main@f1_m(BANK0[50]), STR_7(CODE[25]), 
		 -> STR_6(CODE[49]), cu(BANK0[3]), STR_5(CODE[13]), STR_4(CODE[3]), 
		 -> STR_3(CODE[21]), STR_2(CODE[15]), STR_1(CODE[15]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> cu(BANK0[3]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_9(CODE[11]), STR_8(CODE[10]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> main@f2_m(BANK0[50]), main@f1_m(BANK0[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    transmit@response	PTR unsigned char  size(2) Largest target is 49
		 -> STR_10(CODE[29]), STR_7(CODE[25]), STR_6(CODE[49]), STR_4(CODE[3]), 
		 -> STR_3(CODE[21]), STR_2(CODE[15]), STR_1(CODE[15]), 

    print_message_onLCD@message	PTR unsigned char  size(2) Largest target is 50
		 -> main@f2_m(BANK0[50]), main@f1_m(BANK0[50]), STR_5(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _transmit->_strlen
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _print_message_onLCD->_strlen
    _init_LCD->_R_I
    _atoi->___wmul
    _PWM2->___lwdiv
    _PWM1->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _capture in COMRAM

    _capture->i2_transmit
    i2_transmit->i2_strlen

Critical Paths under _main in BANK0

    None.

Critical Paths under _capture in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _capture in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _capture in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _capture in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _capture in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _capture in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               101   101      0    8014
                                              0 BANK0    101   101      0
                               _PWM1
                               _PWM2
                         _PWM_config
                               _atoi
                           _init_LCD
                     _initial_config
                _print_message_onLCD
         _serial_transmi_init_config
                            _sprintf
                           _transmit
 ---------------------------------------------------------------------------------
 (1) _transmit                                             5     3      2     888
                                             22 COMRAM     5     3      2
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    17      6    1755
                                             36 COMRAM    14     8      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                             31 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _serial_transmi_init_config                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _print_message_onLCD                                  6     3      3     926
                                             22 COMRAM     6     3      3
                                _R_D
                                _R_I
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     292
                                             18 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _R_D                                                  1     1      0      22
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initial_config                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_LCD                                             1     1      0      22
                                             19 COMRAM     1     1      0
                                _R_I
 ---------------------------------------------------------------------------------
 (2) _R_I                                                  1     1      0      22
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _atoi                                                 7     5      2    1291
                                             24 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _PWM_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM2                                                 6     4      2    1475
                                             31 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _PWM1                                                 6     4      2    1475
                                             31 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     615
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     618
                                             24 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _capture                                              9     9      0     601
                                              9 COMRAM     9     9      0
                          i2_isdigit
                           i2_strlen
                         i2_transmit
 ---------------------------------------------------------------------------------
 (4) i2_transmit                                           5     3      2     258
                                              4 COMRAM     5     3      2
                           i2_strlen
 ---------------------------------------------------------------------------------
 (5) i2_strlen                                             4     2      2     142
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) i2_isdigit                                            3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM1
     ___lwdiv
       ___wmul (ARG)
     ___wmul
   _PWM2
     ___lwdiv
       ___wmul (ARG)
     ___wmul
   _PWM_config
   _atoi
     ___wmul
     _isdigit
   _init_LCD
     _R_I
   _initial_config
   _print_message_onLCD
     _R_D
     _R_I
     _strlen
   _serial_transmi_init_config
   _sprintf
     ___lwdiv
       ___wmul (ARG)
     ___lwmod
       ___lwdiv (ARG)
         ___wmul (ARG)
   _transmit
     _strlen

 _capture (ROOT)
   i2_isdigit
   i2_strlen
   i2_transmit
     i2_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     65      6C       5       84.4%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     32      32       1       39.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9E      15        0.0%
DATA                 0      0      9E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun May 03 20:04:46 2020

                                                               _cu 00E7  
                                              ___wmul@multiplicand 0015  
                                                      __CFG_OSC$XT 000000  
                                                              l149 0CE2  
                                                              l669 0C74  
                                                              l863 0AB0  
                                                              l679 0DC0  
                                                              l864 0ABA  
                                                              _LC3 007C5B  
                                                              _LC4 007C5C  
                                                              u430 0E04  
                                                              u510 0D9E  
                                                              _PR2 000FCB  
                                                              u437 0DFA  
                                                              u630 0A3C  
                                                              u710 09B0  
                                                              u480 0C4A  
                                                              u720 09CC  
                                                              u580 0BF6  
                                                              u660 0886  
                                                              u690 0928  
                                                              u587 0BEC  
                                                              u780 0754  
                                                              u857 0F7A  
                                                              u867 0C8A  
                                                              u877 0CA2  
                                                              u887 0CCA  
                                                              u897 0F96  
                                                              _R_D 0F6A  
                                                              _R_I 0F86  
                                                     __CFG_BOR$OFF 000000  
                                                              _cu1 00EB  
                                                              _cu2 00EA  
                                                       _PWM_config 0F4C  
                                                              wreg 000FE8  
                                                 ??_initial_config 0013  
                                                     __CFG_LVP$OFF 000000  
                                                             ?_R_D 0001  
                                                             ?_R_I 0001  
                                                     __CFG_WDT$OFF 000000  
                                                             l1343 0EFE  
                                                             l1327 0DDA  
                                                             l1503 08C8  
                                                             l1423 0D06  
                                                             l1361 0C44  
                                                             l1329 0DE0  
                                                             l1513 08F2  
                                                             l1601 07C2  
                                                             l1371 0C68  
                                                             l1451 0BC6  
                                                             l1611 07FA  
                                                             l1603 07DC  
                                                             l1461 09E8  
                                                             l1381 0D98  
                                                             l1541 09A6  
                                                             l1533 0946  
                                                             l1605 07F2  
                                                             l1359 0C3A  
                                                             l1471 0A2A  
                                                             l1455 0BFC  
                                                             l1535 094E  
                                                             l1519 08F8  
                                                             l1449 0BBE  
                                                             l1475 0A44  
                                                             l1459 09E2  
                                                             l1387 0DB4  
                                                             l1379 0D8E  
                                                             l1619 0818  
                                                             l1493 089A  
                                                             l1479 0A7C  
                                                             l1487 087C  
                                                             l1591 0762  
                                                             l1593 0778  
                                                             l1585 072E  
                                                             l1595 0788  
                                                             l1597 07B2  
                                                             STR_1 0687  
                                                             STR_2 0696  
                                                             STR_3 0672  
                                                             STR_4 0684  
                                                             STR_5 06A5  
                                                             STR_6 060B  
                                                             STR_7 0659  
                                                             STR_8 06BD  
                                                             STR_9 06B2  
                                                             _LATC 000F8B  
                                                             _LATD 000F8C  
                                                             _IPR1 000F9F  
                                                             _PIE1 000F9D  
                                                             _PIR1 000F9E  
                                                             _PWM1 0B38  
                                                             _PWM2 0AC0  
                                                     __CFG_PWRT$ON 000000  
                                                             _atoi 09DE  
                                                             _main 06C8  
                                                             fsr0h 000FEA  
                                                             indf0 000FEF  
                                                             fsr2h 000FDA  
                                                             fsr0l 000FE9  
                                                             indf2 000FDF  
                                                             fsr2l 000FD9  
                                                             btemp 0033  
                                                             prodh 000FF4  
                                                             prodl 000FF3  
                                                             start 00BC  
                                                     ___param_bank 000000  
                                                            ??_R_D 0013  
                                                            ??_R_I 0013  
                                                       i2_transmit 0D2C  
                                                            ?_PWM1 0020  
                                                            ?_PWM2 0020  
                                                            ?_atoi 0019  
                                                            ?_main 0001  
                                                            STR_10 063C  
                                                            _T2CON 000FCA  
                                                  __end_of___lwdiv 0C82  
                                                  __end_of___lwmod 0DCE  
                                                            i2l144 0094  
                                                            i2l149 0D34  
                                                            _RCREG 000FAE  
                                                            _RCSTA 000FAB  
                                                            _SPBRG 000FAF  
                                                            _PORTC 000F82  
                                                            _PORTD 000F83  
                                                            _TRISC 000F94  
                                                            _TRISD 000F95  
                                                            _TXREG 000FAD  
                                                            _TXSTA 000FAC  
                                                  __end_of_capture 00BC  
                                                       i2isdigit@c 0002  
                                                  __end_of_dpowers 060B  
                                                  __end_of_isdigit 0F0A  
                                                            atoi@a 001E  
                                                            atoi@s 0019  
                                                            main@i 00E4  
                                                            tablat 000FF5  
                                                            ttemp5 0034  
                                                            ttemp6 0037  
                                                            ttemp7 003B  
                                                            status 000FD8  
                                                            wtemp8 0034  
                                                  __end_of_sprintf 09DE  
                                                   PWM1@ciclo_util 0020  
                                                 __end_ofi2_strlen 0E66  
                                                     __end_of_PWM1 0BB0  
                                                     __end_of_PWM2 0B38  
                                                  __initialization 0E66  
                                                     __end_of_atoi 0AC0  
                                                     __end_of_main 0870  
                                             print_message_onLCD@i 001C  
                                               __size_ofi2_isdigit 0024  
                                                           ??_PWM1 0022  
                                                           ??_PWM2 0022  
                                                           ??_atoi 001B  
                                                           ??_main 0033  
                                                    __activetblptr 000002  
                                                   PWM2@ciclo_util 0020  
                                                      ?_PWM_config 0001  
                                                       i2strlen@cp 0003  
                                                           _CCPR1L 000FBE  
                                                           _CCPR2L 000FBB  
                                                           i2l1393 0E26  
                                                           i2l1641 0064  
                                                           i2l1395 0E2C  
                                                           i2l1555 0D58  
                                                           i2l1643 0084  
                                                           i2l1565 0F22  
                                                           i2l1647 0090  
                                                           _INTCON 000FF2  
                                                           ___wmul 0E98  
                                                        ??___lwdiv 001D  
                                                 __end_of_init_LCD 0CDA  
                                                        ??___lwmod 0024  
                                                      ?i2_transmit 0005  
                                                        ??_capture 000A  
                                                           _strlen 0DCE  
                                         print_message_onLCD@place 0019  
                                                        ??_isdigit 0013  
                                                     __mediumconst 0000  
                                                           tblptrh 000FF7  
                                                           tblptrl 000FF6  
                                                           tblptru 000FF8  
                                                 __end_of_transmit 0D2C  
                                                        ??_sprintf 002B  
                                                __end_ofi2_isdigit 0F2E  
                                                       __accesstop 0080  
                                          __end_of__initialization 0E8A  
                                                    ___rparam_used 000001  
                                              __size_of_PWM_config 001E  
                                                   __pcstackCOMRAM 0001  
                                                     __pidataBANK0 0FA2  
                                                      i2transmit@i 0009  
                                                        ?i2_strlen 0001  
                                      __end_of_print_message_onLCD 0C22  
                                                       __pbssBANK0 00E5  
                                              __size_ofi2_transmit 0052  
                                                          ?___wmul 0013  
                                                          _CCP1CON 000FBD  
                                                          _CCP2CON 000FBA  
                                                          R_D@dato 0013  
                                                          ?_strlen 0013  
                                                       _cu_changed 00E6  
                                                          R_I@dato 0013  
                                                          i2u53_40 0E50  
                                                          i2u53_47 0E46  
                                                       ??i2_strlen 0003  
                                                        ?_init_LCD 0001  
                                                          __Hparam 0000  
                                     ??_serial_transmi_init_config 0013  
                                                          __Lparam 0000  
                                                  __size_of___wmul 002A  
                                                          ___lwdiv 0C22  
                                                          ___lwmod 0D7E  
                                                        ?_transmit 0017  
                                                     __psmallconst 0600  
                                                          __pcinit 0E66  
                                                          __ramtop 0600  
                                                          _capture 0008  
                                                          __ptext0 06C8  
                                                          __ptext1 0CDA  
                                                          __ptext2 0870  
                                                          __ptext3 0D7E  
                                                          __ptext4 0EC2  
                                                          __ptext5 0BB0  
                                                          __ptext6 0DCE  
                                                          __ptext7 0F6A  
                                                          __ptext8 0F2E  
                                                          __ptext9 0C82  
                                                          _cu_flag 00E5  
                                                  __size_of_strlen 004C  
                                                     __size_of_R_D 001C  
                                                     __size_of_R_I 001C  
                                                    i2_isdigit$830 0003  
                                                          _dpowers 0601  
                                                     ??_PWM_config 0013  
                                                          _isdigit 0EE6  
                                                          _sprintf 0870  
                                             end_of_initialization 0E8A  
                              __size_of_serial_transmi_init_config 0024  
                                                       ??_init_LCD 0014  
                                                    __Lmediumconst 0000  
                                          __size_of_initial_config 001E  
                                               __end_of_PWM_config 0F6A  
                                                          postdec2 000FDD  
                                                          postinc2 000FDE  
                                                     ??i2_transmit 0007  
                                                       ??_transmit 0019  
                                                          strlen@s 0013  
                                               __end_ofi2_transmit 0D7E  
                                                        _TXSTAbits 000FAC  
                                                        i2_isdigit 0F0A  
                                                   __end_of___wmul 0EC2  
                                                   __end_of_strlen 0E1A  
                                              start_initialization 0E66  
                                                 transmit@response 0017  
                                                      __end_of_R_D 0F86  
                                                      __end_of_R_I 0FA2  
                                                __size_ofi2_strlen 004C  
                                                        i2strlen@s 0001  
                               __end_of_serial_transmi_init_config 0EE6  
                                       _serial_transmi_init_config 0EC2  
                                                       ?i2_isdigit 0001  
                                                         ??___wmul 0017  
                                                      __pdataBANK0 00EA  
                                                         ??_strlen 0015  
                                                    __pcstackBANK0 0080  
                                                      sprintf@flag 002E  
                                                   _initial_config 0F2E  
                                                      sprintf@prec 002F  
                                             capture@data_received 0012  
                                                __size_of_init_LCD 0058  
                                     __size_of_print_message_onLCD 0072  
                                       print_message_onLCD@message 0017  
                                                 ___lwdiv@dividend 0019  
                                                        __pintcode 0008  
                                                         ?___lwdiv 0019  
                                                         ?___lwmod 0020  
                                                         ?_capture 0001  
                                                __size_of_transmit 0052  
                                                      __smallconst 0600  
                                                         ?_isdigit 0001  
                                                       PWM1@t_alto 0024  
                                                       PWM2@t_alto 0024  
                                                 ___lwdiv@quotient 001D  
                                                         ?_sprintf 0025  
                                           __end_of_initial_config 0F4C  
                                                   ___wmul@product 0017  
                                                      ??i2_isdigit 0001  
                                                         _PIR1bits 000F9E  
                                                         _RCONbits 000FD0  
                                                ___wmul@multiplier 0013  
                                                         i2_strlen 0E1A  
                                                  ?_initial_config 0001  
                                                         __Hrparam 0000  
                                                         __Lrparam 0000  
                                                 __size_of___lwdiv 0060  
                                                 __size_of___lwmod 0050  
                                                      _isdigit$830 0014  
                                                 __size_of_capture 00B4  
                                                       sprintf@val 0030  
                                                 __size_of_isdigit 0024  
                                                  ___lwdiv@divisor 001B  
                                                  ___lwdiv@counter 001F  
                                                         __ptext10 0F86  
                                                         __ptext11 09DE  
                                                         __ptext20 0E1A  
                                                         __ptext12 0EE6  
                                                         __ptext21 0F0A  
                                                         __ptext13 0F4C  
                                                         __ptext14 0AC0  
                                                         __ptext15 0B38  
                                                         __ptext16 0E98  
                                                         __ptext17 0C22  
                                                         __ptext19 0D2C  
                                                 __size_of_sprintf 016E  
                                                    __size_of_PWM1 0078  
                                                    __size_of_PWM2 0078  
                                                         _init_LCD 0C82  
                                                    __size_of_atoi 00E2  
                                                    __size_of_main 01A8  
                                      ?_serial_transmi_init_config 0001  
                                                         int$flags 0033  
                                                         atoi@sign 001D  
                                                         main@f1_m 0080  
                                                         main@f2_m 00B2  
                                                         _transmit 0CDA  
                                              _print_message_onLCD 0BB0  
                                                        transmit@i 001B  
                                                         isdigit@c 0015  
                                                         intlevel2 0FA4  
                                                        sprintf@ap 002C  
                                                        sprintf@sp 0025  
                                               i2transmit@response 0005  
                                                 ___lwmod@dividend 0020  
                                             ?_print_message_onLCD 0017  
                                                         sprintf@c 0032  
                                                         sprintf@f 0027  
                                                  ___lwmod@divisor 0022  
                                                         strlen@cp 0015  
                                                  ___lwmod@counter 0024  
                                            ??_print_message_onLCD 001A  
