

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Apr 03 18:36:23 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43  0000                     
    44                           ; Version 2.05
    45                           ; Generated 20/12/2018 GMT
    46                           ; 
    47                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F452 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     
    79                           	psect	mediumconst
    80  007EC8                     __pmediumconst:
    81                           	opt callstack 0
    82  007EC8  00                 	db	0
    83  007EC9                     __powers_:
    84                           	opt callstack 0
    85  007EC9  0000               	dw	0
    86  007ECB  3F80               	dw	16256
    87  007ECD  0000               	dw	0
    88  007ECF  4120               	dw	16672
    89  007ED1  0000               	dw	0
    90  007ED3  42C8               	dw	17096
    91  007ED5  0000               	dw	0
    92  007ED7  447A               	dw	17530
    93  007ED9  4000               	dw	16384
    94  007EDB  461C               	dw	17948
    95  007EDD  5000               	dw	20480
    96  007EDF  47C3               	dw	18371
    97  007EE1  2400               	dw	9216
    98  007EE3  4974               	dw	18804
    99  007EE5  9680               	dw	38528
   100  007EE7  4B18               	dw	19224
   101  007EE9  BC20               	dw	48160
   102  007EEB  4CBE               	dw	19646
   103  007EED  6B28               	dw	27432
   104  007EEF  4E6E               	dw	20078
   105  007EF1  02F9               	dw	761
   106  007EF3  5015               	dw	20501
   107  007EF5  78EC               	dw	30956
   108  007EF7  60AD               	dw	24749
   109  007EF9  F2CA               	dw	62154
   110  007EFB  7149               	dw	29001
   111  007EFD                     __end_of__powers_:
   112                           	opt callstack 0
   113  007EFD                     __npowers_:
   114                           	opt callstack 0
   115  007EFD  0000               	dw	0
   116  007EFF  3F80               	dw	16256
   117  007F01  CCCD               	dw	52429
   118  007F03  3DCC               	dw	15820
   119  007F05  D70A               	dw	55050
   120  007F07  3C23               	dw	15395
   121  007F09  126F               	dw	4719
   122  007F0B  3A83               	dw	14979
   123  007F0D  B717               	dw	46871
   124  007F0F  38D1               	dw	14545
   125  007F11  C5AC               	dw	50604
   126  007F13  3727               	dw	14119
   127  007F15  37BD               	dw	14269
   128  007F17  3586               	dw	13702
   129  007F19  BF95               	dw	49045
   130  007F1B  33D6               	dw	13270
   131  007F1D  CC77               	dw	52343
   132  007F1F  322B               	dw	12843
   133  007F21  705F               	dw	28767
   134  007F23  3089               	dw	12425
   135  007F25  E6FF               	dw	59135
   136  007F27  2EDB               	dw	11995
   137  007F29  E508               	dw	58632
   138  007F2B  1E3C               	dw	7740
   139  007F2D  4260               	dw	16992
   140  007F2F  0DA2               	dw	3490
   141  007F31                     __end_of__npowers_:
   142                           	opt callstack 0
   143  007F31                     _dpowers:
   144                           	opt callstack 0
   145  007F31  0001               	dw	1
   146  007F33  0000               	dw	0
   147  007F35  000A               	dw	10
   148  007F37  0000               	dw	0
   149  007F39  0064               	dw	100
   150  007F3B  0000               	dw	0
   151  007F3D  03E8               	dw	1000
   152  007F3F  0000               	dw	0
   153  007F41  2710               	dw	10000
   154  007F43  0000               	dw	0
   155  007F45  86A0               	dw	34464
   156  007F47  0001               	dw	1
   157  007F49  4240               	dw	16960
   158  007F4B  000F               	dw	15
   159  007F4D  9680               	dw	38528
   160  007F4F  0098               	dw	152
   161  007F51  E100               	dw	57600
   162  007F53  05F5               	dw	1525
   163  007F55  CA00               	dw	51712
   164  007F57  3B9A               	dw	15258
   165  007F59                     __end_of_dpowers:
   166                           	opt callstack 0
   167  0000                     _PORTE	set	3972
   168  0000                     _PORTD	set	3971
   169  0000                     _PORTC	set	3970
   170  0000                     _PORTB	set	3969
   171  0000                     _PORTA	set	3968
   172  0000                     _LATE	set	3981
   173  0000                     _LATD	set	3980
   174  0000                     _LATC	set	3979
   175  0000                     _LATB	set	3978
   176  0000                     _LATA	set	3977
   177  0000                     _ADCON1	set	4033
   178  0000                     _TRISD	set	3989
   179  0000                     _TRISC	set	3988
   180  0000                     _TRISA	set	3986
   181  0000                     _ADRESL	set	4035
   182  0000                     _ADRESH	set	4036
   183  0000                     _ADCON0	set	4034
   184  0000                     _LC4	set	31836
   185  0000                     _LC3	set	31835
   186  0000                     _GO_DONE	set	32274
   187  007F59                     STR_4:
   188  007F59  54                 	db	84	;'T'
   189  007F5A  65                 	db	101	;'e'
   190  007F5B  6D                 	db	109	;'m'
   191  007F5C  70                 	db	112	;'p'
   192  007F5D  3A                 	db	58	;':'
   193  007F5E  20                 	db	32
   194  007F5F  25                 	db	37
   195  007F60  2E                 	db	46
   196  007F61  30                 	db	48	;'0'
   197  007F62  66                 	db	102	;'f'
   198  007F63  43                 	db	67	;'C'
   199  007F64  20                 	db	32
   200  007F65  20                 	db	32
   201  007F66  20                 	db	32
   202  007F67  20                 	db	32
   203  007F68  20                 	db	32
   204  007F69  20                 	db	32
   205  007F6A  20                 	db	32
   206  007F6B  00                 	db	0
   207  007F6C                     STR_3:
   208  007F6C  56                 	db	86	;'V'
   209  007F6D  6F                 	db	111	;'o'
   210  007F6E  6C                 	db	108	;'l'
   211  007F6F  74                 	db	116	;'t'
   212  007F70  61                 	db	97	;'a'
   213  007F71  6A                 	db	106	;'j'
   214  007F72  65                 	db	101	;'e'
   215  007F73  3A                 	db	58	;':'
   216  007F74  20                 	db	32
   217  007F75  25                 	db	37
   218  007F76  30                 	db	48	;'0'
   219  007F77  2E                 	db	46
   220  007F78  32                 	db	50	;'2'
   221  007F79  66                 	db	102	;'f'
   222  007F7A  56                 	db	86	;'V'
   223  007F7B  20                 	db	32
   224  007F7C  20                 	db	32
   225  007F7D  20                 	db	32
   226  007F7E  00                 	db	0
   227  007F7F                     STR_10:
   228  007F7F  20                 	db	32
   229  007F80  20                 	db	32
   230  007F81  20                 	db	32
   231  007F82  20                 	db	32
   232  007F83  20                 	db	32
   233  007F84  45                 	db	69	;'E'
   234  007F85  4C                 	db	76	;'L'
   235  007F86  20                 	db	32
   236  007F87  46                 	db	70	;'F'
   237  007F88  49                 	db	73	;'I'
   238  007F89  4E                 	db	78	;'N'
   239  007F8A  20                 	db	32
   240  007F8B  20                 	db	32
   241  007F8C  20                 	db	32
   242  007F8D  20                 	db	32
   243  007F8E  20                 	db	32
   244  007F8F  00                 	db	0
   245  007F90                     STR_7:
   246  007F90  20                 	db	32
   247  007F91  20                 	db	32
   248  007F92  20                 	db	32
   249  007F93  20                 	db	32
   250  007F94  20                 	db	32
   251  007F95  52                 	db	82	;'R'
   252  007F96  49                 	db	73	;'I'
   253  007F97  45                 	db	69	;'E'
   254  007F98  53                 	db	83	;'S'
   255  007F99  47                 	db	71	;'G'
   256  007F9A  4F                 	db	79	;'O'
   257  007F9B  20                 	db	32
   258  007F9C  20                 	db	32
   259  007F9D  20                 	db	32
   260  007F9E  20                 	db	32
   261  007F9F  20                 	db	32
   262  007FA0  00                 	db	0
   263  007FA1                     STR_6:
   264  007FA1  20                 	db	32
   265  007FA2  20                 	db	32
   266  007FA3  41                 	db	65	;'A'
   267  007FA4  4C                 	db	76	;'L'
   268  007FA5  54                 	db	84	;'T'
   269  007FA6  4F                 	db	79	;'O'
   270  007FA7  20                 	db	32
   271  007FA8  56                 	db	86	;'V'
   272  007FA9  4F                 	db	79	;'O'
   273  007FAA  4C                 	db	76	;'L'
   274  007FAB  54                 	db	84	;'T'
   275  007FAC  41                 	db	65	;'A'
   276  007FAD  4A                 	db	74	;'J'
   277  007FAE  45                 	db	69	;'E'
   278  007FAF  20                 	db	32
   279  007FB0  20                 	db	32
   280  007FB1  00                 	db	0
   281  007FB2                     STR_8:
   282  007FB2  20                 	db	32
   283  007FB3  44                 	db	68	;'D'
   284  007FB4  45                 	db	69	;'E'
   285  007FB5  20                 	db	32
   286  007FB6  44                 	db	68	;'D'
   287  007FB7  45                 	db	69	;'E'
   288  007FB8  53                 	db	83	;'S'
   289  007FB9  54                 	db	84	;'T'
   290  007FBA  52                 	db	82	;'R'
   291  007FBB  55                 	db	85	;'U'
   292  007FBC  43                 	db	67	;'C'
   293  007FBD  43                 	db	67	;'C'
   294  007FBE  49                 	db	73	;'I'
   295  007FBF  4F                 	db	79	;'O'
   296  007FC0  4E                 	db	78	;'N'
   297  007FC1  20                 	db	32
   298  007FC2  00                 	db	0
   299  007FC3                     STR_9:
   300  007FC3  20                 	db	32
   301  007FC4  20                 	db	32
   302  007FC5  20                 	db	32
   303  007FC6  20                 	db	32
   304  007FC7  20                 	db	32
   305  007FC8  4C                 	db	76	;'L'
   306  007FC9  4C                 	db	76	;'L'
   307  007FCA  45                 	db	69	;'E'
   308  007FCB  47                 	db	71	;'G'
   309  007FCC  4F                 	db	79	;'O'
   310  007FCD  20                 	db	32
   311  007FCE  20                 	db	32
   312  007FCF  20                 	db	32
   313  007FD0  20                 	db	32
   314  007FD1  20                 	db	32
   315  007FD2  00                 	db	0
   316  007FD3                     STR_5:
   317  007FD3  20                 	db	32
   318  007FD4  20                 	db	32
   319  007FD5  20                 	db	32
   320  007FD6  20                 	db	32
   321  007FD7  50                 	db	80	;'P'
   322  007FD8  45                 	db	69	;'E'
   323  007FD9  4C                 	db	76	;'L'
   324  007FDA  49                 	db	73	;'I'
   325  007FDB  47                 	db	71	;'G'
   326  007FDC  52                 	db	82	;'R'
   327  007FDD  4F                 	db	79	;'O'
   328  007FDE  20                 	db	32
   329  007FDF  20                 	db	32
   330  007FE0  20                 	db	32
   331  007FE1  00                 	db	0
   332  007FE2                     STR_2:
   333  007FE2  44                 	db	68	;'D'
   334  007FE3  69                 	db	105	;'i'
   335  007FE4  65                 	db	101	;'e'
   336  007FE5  67                 	db	103	;'g'
   337  007FE6  6F                 	db	111	;'o'
   338  007FE7  20                 	db	32
   339  007FE8  2D                 	db	45
   340  007FE9  20                 	db	32
   341  007FEA  38                 	db	56	;'8'
   342  007FEB  34                 	db	52	;'4'
   343  007FEC  30                 	db	48	;'0'
   344  007FED  31                 	db	49	;'1'
   345  007FEE  30                 	db	48	;'0'
   346  007FEF  00                 	db	0
   347  007FF0                     STR_1:
   348  007FF0  43                 	db	67	;'C'
   349  007FF1  4F                 	db	79	;'O'
   350  007FF2  4E                 	db	78	;'N'
   351  007FF3  56                 	db	86	;'V'
   352  007FF4  45                 	db	69	;'E'
   353  007FF5  52                 	db	82	;'R'
   354  007FF6  53                 	db	83	;'S'
   355  007FF7  4F                 	db	79	;'O'
   356  007FF8  52                 	db	82	;'R'
   357  007FF9  20                 	db	32
   358  007FFA  41                 	db	65	;'A'
   359  007FFB  44                 	db	68	;'D'
   360  007FFC  43                 	db	67	;'C'
   361  007FFD  00                 	db	0
   362                           
   363                           ; #config settings
   364  007FFE  00                 	db	0	; dummy byte at the end
   365  0000                     
   366                           	psect	cinit
   367  001676                     __pcinit:
   368                           	opt callstack 0
   369  001676                     start_initialization:
   370                           	opt callstack 0
   371  001676                     __initialization:
   372                           	opt callstack 0
   373                           
   374                           ; Clear objects allocated to BANK0 (20 bytes)
   375  001676  EE00  F0A1         	lfsr	0,__pbssBANK0
   376  00167A  0E14               	movlw	20
   377  00167C                     clear_0:
   378  00167C  6AEE               	clrf	postinc0,c
   379  00167E  06E8               	decf	wreg,f,c
   380  001680  E1FD               	bnz	clear_0
   381  001682                     end_of_initialization:
   382                           	opt callstack 0
   383  001682                     __end_of__initialization:
   384                           	opt callstack 0
   385  001682  0E00               	movlw	low (__Lmediumconst shr (0+16))
   386  001684  6EF8               	movwf	tblptru,c
   387  001686  0100               	movlb	0
   388  001688  EF64  F011         	goto	_main	;jump to C main() function
   389                           
   390                           	psect	bssBANK0
   391  0000A1                     __pbssBANK0:
   392                           	opt callstack 0
   393  0000A1                     	ds	20
   394                           
   395                           	psect	cstackBANK0
   396  000080                     __pcstackBANK0:
   397                           	opt callstack 0
   398  000080                     main@message:
   399                           	opt callstack 0
   400                           
   401                           ; 20 bytes @ 0x0
   402  000080                     	ds	20
   403  000094                     _main$99:
   404                           	opt callstack 0
   405                           
   406                           ; 2 bytes @ 0x14
   407  000094                     	ds	2
   408  000096                     main@in:
   409                           	opt callstack 0
   410                           
   411                           ; 2 bytes @ 0x16
   412  000096                     	ds	2
   413  000098                     main@volt:
   414                           	opt callstack 0
   415                           
   416                           ; 4 bytes @ 0x18
   417  000098                     	ds	4
   418  00009C                     main@temp:
   419                           	opt callstack 0
   420                           
   421                           ; 4 bytes @ 0x1C
   422  00009C                     	ds	4
   423  0000A0                     main@canal:
   424                           	opt callstack 0
   425                           
   426                           ; 1 bytes @ 0x20
   427  0000A0                     	ds	1
   428                           
   429                           	psect	cstackCOMRAM
   430  000001                     __pcstackCOMRAM:
   431                           	opt callstack 0
   432  000001                     ??_isdigit:
   433  000001                     ?_strlen:
   434                           	opt callstack 0
   435  000001                     ?___wmul:
   436                           	opt callstack 0
   437  000001                     ?___awmod:
   438                           	opt callstack 0
   439  000001                     ?___lwmod:
   440                           	opt callstack 0
   441  000001                     ?__tdiv_to_l_:
   442                           	opt callstack 0
   443  000001                     ?__div_to_l_:
   444                           	opt callstack 0
   445  000001                     ?___lldiv:
   446                           	opt callstack 0
   447  000001                     ?___flneg:
   448                           	opt callstack 0
   449  000001                     ?___llmod:
   450                           	opt callstack 0
   451  000001                     ?___xxtofl:
   452                           	opt callstack 0
   453  000001                     R_I@dato:
   454                           	opt callstack 0
   455  000001                     R_D@dato:
   456                           	opt callstack 0
   457  000001                     ___wmul@multiplier:
   458                           	opt callstack 0
   459  000001                     ___awmod@dividend:
   460                           	opt callstack 0
   461  000001                     ___lwmod@dividend:
   462                           	opt callstack 0
   463  000001                     strlen@s:
   464                           	opt callstack 0
   465  000001                     ___lldiv@dividend:
   466                           	opt callstack 0
   467  000001                     __div_to_l_@f1:
   468                           	opt callstack 0
   469  000001                     ___fleq@ff1:
   470                           	opt callstack 0
   471  000001                     ___flge@ff1:
   472                           	opt callstack 0
   473  000001                     ___flneg@f1:
   474                           	opt callstack 0
   475  000001                     __tdiv_to_l_@f1:
   476                           	opt callstack 0
   477  000001                     ___llmod@dividend:
   478                           	opt callstack 0
   479  000001                     ___xxtofl@val:
   480                           	opt callstack 0
   481                           
   482                           ; 4 bytes @ 0x0
   483  000001                     	ds	1
   484  000002                     ??_init_LCD:
   485  000002                     _isdigit$632:
   486                           	opt callstack 0
   487                           
   488                           ; 1 bytes @ 0x1
   489  000002                     	ds	1
   490  000003                     isdigit@c:
   491                           	opt callstack 0
   492  000003                     ___wmul@multiplicand:
   493                           	opt callstack 0
   494  000003                     ___awmod@divisor:
   495                           	opt callstack 0
   496  000003                     ___lwmod@divisor:
   497                           	opt callstack 0
   498  000003                     strlen@cp:
   499                           	opt callstack 0
   500                           
   501                           ; 2 bytes @ 0x2
   502  000003                     	ds	2
   503  000005                     ??___xxtofl:
   504  000005                     ___awmod@counter:
   505                           	opt callstack 0
   506  000005                     ___lwmod@counter:
   507                           	opt callstack 0
   508  000005                     print_message_onLCD@message:
   509                           	opt callstack 0
   510  000005                     ___wmul@product:
   511                           	opt callstack 0
   512  000005                     ___lldiv@divisor:
   513                           	opt callstack 0
   514  000005                     __div_to_l_@f2:
   515                           	opt callstack 0
   516  000005                     ___fleq@ff2:
   517                           	opt callstack 0
   518  000005                     ___flge@ff2:
   519                           	opt callstack 0
   520  000005                     __tdiv_to_l_@f2:
   521                           	opt callstack 0
   522  000005                     ___llmod@divisor:
   523                           	opt callstack 0
   524                           
   525                           ; 4 bytes @ 0x4
   526  000005                     	ds	1
   527  000006                     ?___lwdiv:
   528                           	opt callstack 0
   529  000006                     ___awmod@sign:
   530                           	opt callstack 0
   531  000006                     ___lwdiv@dividend:
   532                           	opt callstack 0
   533                           
   534                           ; 2 bytes @ 0x5
   535  000006                     	ds	1
   536  000007                     ??_print_message_onLCD:
   537  000007                     ?___awdiv:
   538                           	opt callstack 0
   539  000007                     ___awdiv@dividend:
   540                           	opt callstack 0
   541                           
   542                           ; 2 bytes @ 0x6
   543  000007                     	ds	1
   544  000008                     ___lwdiv@divisor:
   545                           	opt callstack 0
   546                           
   547                           ; 2 bytes @ 0x7
   548  000008                     	ds	1
   549  000009                     ??__tdiv_to_l_:
   550  000009                     ??___fleq:
   551  000009                     ??___flge:
   552  000009                     print_message_onLCD@i:
   553                           	opt callstack 0
   554  000009                     ___llmod@counter:
   555                           	opt callstack 0
   556  000009                     ___xxtofl@sign:
   557                           	opt callstack 0
   558  000009                     ___awdiv@divisor:
   559                           	opt callstack 0
   560  000009                     ___lldiv@quotient:
   561                           	opt callstack 0
   562  000009                     __div_to_l_@quot:
   563                           	opt callstack 0
   564                           
   565                           ; 4 bytes @ 0x8
   566  000009                     	ds	1
   567  00000A                     ___xxtofl@exp:
   568                           	opt callstack 0
   569  00000A                     ___lwdiv@quotient:
   570                           	opt callstack 0
   571                           
   572                           ; 2 bytes @ 0x9
   573  00000A                     	ds	1
   574  00000B                     ___awdiv@counter:
   575                           	opt callstack 0
   576  00000B                     ___xxtofl@arg:
   577                           	opt callstack 0
   578                           
   579                           ; 4 bytes @ 0xA
   580  00000B                     	ds	1
   581  00000C                     ___awdiv@sign:
   582                           	opt callstack 0
   583  00000C                     ___lwdiv@counter:
   584                           	opt callstack 0
   585  00000C                     __tdiv_to_l_@quot:
   586                           	opt callstack 0
   587                           
   588                           ; 4 bytes @ 0xB
   589  00000C                     	ds	1
   590  00000D                     ___lldiv@counter:
   591                           	opt callstack 0
   592  00000D                     __div_to_l_@cntr:
   593                           	opt callstack 0
   594  00000D                     ___awdiv@quotient:
   595                           	opt callstack 0
   596                           
   597                           ; 2 bytes @ 0xC
   598  00000D                     	ds	1
   599  00000E                     __div_to_l_@exp1:
   600                           	opt callstack 0
   601                           
   602                           ; 1 bytes @ 0xD
   603  00000E                     	ds	1
   604  00000F                     ?___flmul:
   605                           	opt callstack 0
   606  00000F                     ___flmul@b:
   607                           	opt callstack 0
   608                           
   609                           ; 4 bytes @ 0xE
   610  00000F                     	ds	1
   611  000010                     __tdiv_to_l_@cntr:
   612                           	opt callstack 0
   613                           
   614                           ; 1 bytes @ 0xF
   615  000010                     	ds	1
   616  000011                     __tdiv_to_l_@exp1:
   617                           	opt callstack 0
   618                           
   619                           ; 1 bytes @ 0x10
   620  000011                     	ds	2
   621  000013                     ___flmul@a:
   622                           	opt callstack 0
   623                           
   624                           ; 4 bytes @ 0x12
   625  000013                     	ds	4
   626  000017                     ??___flmul:
   627                           
   628                           ; 1 bytes @ 0x16
   629  000017                     	ds	4
   630  00001B                     ___flmul@sign:
   631                           	opt callstack 0
   632                           
   633                           ; 1 bytes @ 0x1A
   634  00001B                     	ds	1
   635  00001C                     ___flmul@grs:
   636                           	opt callstack 0
   637                           
   638                           ; 4 bytes @ 0x1B
   639  00001C                     	ds	4
   640  000020                     ___flmul@aexp:
   641                           	opt callstack 0
   642                           
   643                           ; 1 bytes @ 0x1F
   644  000020                     	ds	1
   645  000021                     ___flmul@bexp:
   646                           	opt callstack 0
   647                           
   648                           ; 1 bytes @ 0x20
   649  000021                     	ds	1
   650  000022                     ___flmul@prod:
   651                           	opt callstack 0
   652                           
   653                           ; 4 bytes @ 0x21
   654  000022                     	ds	4
   655  000026                     ___flmul@temp:
   656                           	opt callstack 0
   657                           
   658                           ; 2 bytes @ 0x25
   659  000026                     	ds	2
   660  000028                     ?___fldiv:
   661                           	opt callstack 0
   662  000028                     ?_fround:
   663                           	opt callstack 0
   664  000028                     ?_scale:
   665                           	opt callstack 0
   666  000028                     ___fldiv@b:
   667                           	opt callstack 0
   668                           
   669                           ; 4 bytes @ 0x27
   670  000028                     	ds	4
   671  00002C                     ___fldiv@a:
   672                           	opt callstack 0
   673  00002C                     _fround$814:
   674                           	opt callstack 0
   675  00002C                     _scale$815:
   676                           	opt callstack 0
   677                           
   678                           ; 4 bytes @ 0x2B
   679  00002C                     	ds	4
   680  000030                     ??___fldiv:
   681  000030                     scale@scl:
   682                           	opt callstack 0
   683  000030                     _fround$813:
   684                           	opt callstack 0
   685                           
   686                           ; 4 bytes @ 0x2F
   687  000030                     	ds	1
   688  000031                     ?___fltol:
   689                           	opt callstack 0
   690  000031                     ___fltol@f1:
   691                           	opt callstack 0
   692                           
   693                           ; 4 bytes @ 0x30
   694  000031                     	ds	3
   695  000034                     fround@prec:
   696                           	opt callstack 0
   697  000034                     ___fldiv@rem:
   698                           	opt callstack 0
   699                           
   700                           ; 4 bytes @ 0x33
   701  000034                     	ds	1
   702  000035                     ??___fltol:
   703  000035                     ?___fladd:
   704                           	opt callstack 0
   705  000035                     ___fladd@b:
   706                           	opt callstack 0
   707                           
   708                           ; 4 bytes @ 0x34
   709  000035                     	ds	3
   710  000038                     ___fldiv@sign:
   711                           	opt callstack 0
   712                           
   713                           ; 1 bytes @ 0x37
   714  000038                     	ds	1
   715  000039                     ___fltol@sign1:
   716                           	opt callstack 0
   717  000039                     ___fldiv@new_exp:
   718                           	opt callstack 0
   719  000039                     ___fladd@a:
   720                           	opt callstack 0
   721                           
   722                           ; 4 bytes @ 0x38
   723  000039                     	ds	1
   724  00003A                     ___fltol@exp1:
   725                           	opt callstack 0
   726                           
   727                           ; 1 bytes @ 0x39
   728  00003A                     	ds	1
   729  00003B                     ___fldiv@grs:
   730                           	opt callstack 0
   731                           
   732                           ; 4 bytes @ 0x3A
   733  00003B                     	ds	2
   734  00003D                     ??___fladd:
   735                           
   736                           ; 1 bytes @ 0x3C
   737  00003D                     	ds	2
   738  00003F                     ___fldiv@bexp:
   739                           	opt callstack 0
   740                           
   741                           ; 1 bytes @ 0x3E
   742  00003F                     	ds	1
   743  000040                     ___fldiv@aexp:
   744                           	opt callstack 0
   745                           
   746                           ; 1 bytes @ 0x3F
   747  000040                     	ds	1
   748  000041                     ?_get_voltage:
   749                           	opt callstack 0
   750  000041                     ___fladd@signs:
   751                           	opt callstack 0
   752  000041                     get_voltage@ac_in:
   753                           	opt callstack 0
   754                           
   755                           ; 2 bytes @ 0x40
   756  000041                     	ds	1
   757  000042                     ___fladd@aexp:
   758                           	opt callstack 0
   759                           
   760                           ; 1 bytes @ 0x41
   761  000042                     	ds	1
   762  000043                     ___fladd@bexp:
   763                           	opt callstack 0
   764                           
   765                           ; 1 bytes @ 0x42
   766  000043                     	ds	1
   767  000044                     ___fladd@grs:
   768                           	opt callstack 0
   769                           
   770                           ; 1 bytes @ 0x43
   771  000044                     	ds	1
   772  000045                     ?_get_temp:
   773                           	opt callstack 0
   774  000045                     ?___flsub:
   775                           	opt callstack 0
   776  000045                     get_temp@ac_in:
   777                           	opt callstack 0
   778  000045                     ___flsub@b:
   779                           	opt callstack 0
   780                           
   781                           ; 4 bytes @ 0x44
   782  000045                     	ds	4
   783  000049                     get_temp@r:
   784                           	opt callstack 0
   785  000049                     ___flsub@a:
   786                           	opt callstack 0
   787                           
   788                           ; 4 bytes @ 0x48
   789  000049                     	ds	4
   790  00004D                     ?_sprintf:
   791                           	opt callstack 0
   792  00004D                     sprintf@sp:
   793                           	opt callstack 0
   794                           
   795                           ; 2 bytes @ 0x4C
   796  00004D                     	ds	2
   797  00004F                     sprintf@f:
   798                           	opt callstack 0
   799                           
   800                           ; 2 bytes @ 0x4E
   801  00004F                     	ds	6
   802  000055                     ??_sprintf:
   803                           
   804                           ; 1 bytes @ 0x54
   805  000055                     	ds	4
   806  000059                     _sprintf$816:
   807                           	opt callstack 0
   808                           
   809                           ; 4 bytes @ 0x58
   810  000059                     	ds	4
   811  00005D                     sprintf@ap:
   812                           	opt callstack 0
   813                           
   814                           ; 2 bytes @ 0x5C
   815  00005D                     	ds	2
   816  00005F                     sprintf@val:
   817                           	opt callstack 0
   818                           
   819                           ; 4 bytes @ 0x5E
   820  00005F                     	ds	4
   821  000063                     sprintf@tmpval:
   822                           	opt callstack 0
   823                           
   824                           ; 4 bytes @ 0x62
   825  000063                     	ds	4
   826  000067                     sprintf@eexp:
   827                           	opt callstack 0
   828                           
   829                           ; 2 bytes @ 0x66
   830  000067                     	ds	2
   831  000069                     sprintf@flag:
   832                           	opt callstack 0
   833                           
   834                           ; 2 bytes @ 0x68
   835  000069                     	ds	2
   836  00006B                     sprintf@width:
   837                           	opt callstack 0
   838                           
   839                           ; 2 bytes @ 0x6A
   840  00006B                     	ds	2
   841  00006D                     sprintf@fval:
   842                           	opt callstack 0
   843                           
   844                           ; 4 bytes @ 0x6C
   845  00006D                     	ds	4
   846  000071                     sprintf@prec:
   847                           	opt callstack 0
   848                           
   849                           ; 2 bytes @ 0x70
   850  000071                     	ds	2
   851  000073                     sprintf@c:
   852                           	opt callstack 0
   853                           
   854                           ; 1 bytes @ 0x72
   855  000073                     	ds	1
   856  000074                     ??_main:
   857                           
   858                           ; 1 bytes @ 0x73
   859  000074                     	ds	2
   860                           
   861 ;;
   862 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   863 ;;
   864 ;; *************** function _main *****************
   865 ;; Defined at:
   866 ;;		line 31 in file "main.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;		None
   869 ;; Auto vars:     Size  Location     Type
   870 ;;  message        20    0[BANK0 ] unsigned char [20]
   871 ;;  in              2   22[BANK0 ] unsigned int 
   872 ;;  temp            4   28[BANK0 ] float 
   873 ;;  volt            4   24[BANK0 ] float 
   874 ;;  canal           1   32[BANK0 ] unsigned char 
   875 ;; Return value:  Size  Location     Type
   876 ;;                  1    wreg      void 
   877 ;; Registers used:
   878 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   879 ;; Tracked objects:
   880 ;;		On entry : 0/0
   881 ;;		On exit  : 0/0
   882 ;;		Unchanged: 0/0
   883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   884 ;;      Params:         0       0       0       0       0       0       0
   885 ;;      Locals:         0      33       0       0       0       0       0
   886 ;;      Temps:          2       0       0       0       0       0       0
   887 ;;      Totals:         2      33       0       0       0       0       0
   888 ;;Total ram usage:       35 bytes
   889 ;; Hardware stack levels required when called:    3
   890 ;; This function calls:
   891 ;;		_R_I
   892 ;;		___flge
   893 ;;		_get_temp
   894 ;;		_get_voltage
   895 ;;		_init_LCD
   896 ;;		_initial_config
   897 ;;		_print_message_onLCD
   898 ;;		_sprintf
   899 ;; This function is called by:
   900 ;;		Startup code after reset
   901 ;; This function uses a non-reentrant model
   902 ;;
   903                           
   904                           	psect	text0
   905  0022C8                     __ptext0:
   906                           	opt callstack 0
   907  0022C8                     _main:
   908                           	opt callstack 0
   909  0022C8  FFFF               	dw	65535	; assembler added errata NOP
   910                           
   911                           ;main.c: 32: initial_config();
   912                           
   913                           ;incstack = 0
   914  0022CA  ECA3  F00B         	call	_initial_config	;wreg free
   915                           
   916                           ;main.c: 33: init_LCD();
   917  0022CE  EC37  F00C         	call	_init_LCD	;wreg free
   918                           
   919                           ;main.c: 34: R_I(128);
   920  0022D2  0E80               	movlw	128
   921  0022D4  EC46  F00B         	call	_R_I
   922                           
   923                           ;main.c: 35: print_message_onLCD("CONVERSOR ADC");
   924  0022D8  0EF0               	movlw	low STR_1
   925  0022DA  6E05               	movwf	print_message_onLCD@message,c
   926  0022DC  0E7F               	movlw	high STR_1
   927  0022DE  6E06               	movwf	print_message_onLCD@message+1,c
   928  0022E0  EC93  F00C         	call	_print_message_onLCD	;wreg free
   929                           
   930                           ;main.c: 37: R_I(192);
   931  0022E4  0EC0               	movlw	192
   932  0022E6  EC46  F00B         	call	_R_I
   933                           
   934                           ;main.c: 38: print_message_onLCD("Diego - 84010");
   935  0022EA  0EE2               	movlw	low STR_2
   936  0022EC  6E05               	movwf	print_message_onLCD@message,c
   937  0022EE  0E7F               	movlw	high STR_2
   938  0022F0  6E06               	movwf	print_message_onLCD@message+1,c
   939  0022F2  EC93  F00C         	call	_print_message_onLCD	;wreg free
   940                           
   941                           ;main.c: 39: _delay((unsigned long)((3000)*(4000000/4000.0)));
   942  0022F6  0E0C               	movlw	12
   943  0022F8  6E75               	movwf	(??_main+1)& (0+255),c
   944  0022FA  0E6C               	movlw	108
   945  0022FC  6E74               	movwf	??_main& (0+255),c
   946  0022FE  0EF3               	movlw	243
   947  002300                     u4437:
   948  002300  FFFF               	dw	65535	; errata NOP
   949  002302  2EE8               	decfsz	wreg,f,c
   950  002304  D7FD               	bra	u4437
   951  002306  2E74               	decfsz	??_main& (0+255),f,c
   952  002308  D7FB               	bra	u4437
   953  00230A  2E75               	decfsz	(??_main+1)& (0+255),f,c
   954  00230C  D7F9               	bra	u4437
   955                           
   956                           ;main.c: 41: R_I(0X01);
   957  00230E  0E01               	movlw	1
   958  002310  EC46  F00B         	call	_R_I
   959                           
   960                           ;main.c: 43: char canal = 0;
   961  002314  0E00               	movlw	0
   962  002316  0100               	movlb	0	; () banked
   963  002318  FFFF               	dw	65535	; assembler added errata NOP
   964  00231A  6FA0               	movwf	main@canal& (0+255),b
   965                           
   966                           ; BSR set to: 0
   967                           ;main.c: 47: ADCON0 = canal ? 0B01001001 : 0B01000001;
   968  00231C  51A0               	movf	main@canal& (0+255),w,b
   969  00231E  A4D8               	btfss	status,2,c
   970  002320  D004               	goto	l3793
   971                           
   972                           ; BSR set to: 0
   973  002322  0E00               	movlw	0
   974  002324  6F95               	movwf	(_main$99+1)& (0+255),b
   975  002326  0E41               	movlw	65
   976  002328  D004               	goto	L1
   977  00232A                     l3793:
   978  00232A  FFFF               	dw	65535	; assembler added errata NOP
   979                           
   980                           ; BSR set to: 0
   981  00232C  0E00               	movlw	0
   982  00232E  6F95               	movwf	(_main$99+1)& (0+255),b
   983  002330  0E49               	movlw	73
   984  002332                     L1:
   985  002332  FFFF               	dw	65535	; assembler added errata NOP
   986  002334  6F94               	movwf	_main$99& (0+255),b
   987                           
   988                           ; BSR set to: 0
   989  002336  C094  FFC2         	movff	_main$99,4034	;volatile
   990                           
   991                           ; BSR set to: 0
   992                           ;main.c: 48: _delay((unsigned long)((20)*(4000000/4000000.0)));
   993  00233A  0E05               	movlw	5
   994  00233C                     u4447:
   995  00233C  FFFF               	dw	65535	; errata NOP
   996  00233E  2EE8               	decfsz	wreg,f,c
   997  002340  D7FD               	bra	u4447
   998                           
   999                           ;main.c: 49: GO_DONE = 1;
  1000  002342  84C2               	bsf	4034,2,c	;volatile
  1001  002344                     l68:
  1002  002344  FFFF               	dw	65535	; assembler added errata NOP
  1003  002346  B4C2               	btfsc	4034,2,c	;volatile
  1004  002348  D7FD               	goto	l68
  1005                           
  1006                           ;main.c: 53: unsigned int in = (ADRESH<<8) | ADRESL;
  1007  00234A  50C3               	movf	4035,w,c	;volatile
  1008  00234C  CFC4 F074          	movff	4036,??_main	;volatile
  1009  002350  6A75               	clrf	(??_main+1)& (0+255),c
  1010  002352  C074  F075         	movff	??_main,??_main+1
  1011  002356  6A74               	clrf	??_main,c
  1012  002358  1074               	iorwf	??_main,w,c
  1013  00235A  0100               	movlb	0	; () banked
  1014  00235C  6F96               	movwf	main@in& (0+255),b
  1015  00235E  5075               	movf	??_main+1,w,c
  1016  002360  6F97               	movwf	(main@in+1)& (0+255),b
  1017                           
  1018                           ; BSR set to: 0
  1019                           ;main.c: 54: _delay((unsigned long)((50)*(4000000/4000.0)));
  1020  002362  0E31               	movlw	49
  1021  002364  6E74               	movwf	??_main& (0+255),c
  1022  002366  0EBB               	movlw	187
  1023  002368                     u4457:
  1024  002368  FFFF               	dw	65535	; errata NOP
  1025  00236A  2EE8               	decfsz	wreg,f,c
  1026  00236C  D7FD               	bra	u4457
  1027  00236E  2E74               	decfsz	??_main& (0+255),f,c
  1028  002370  D7FB               	bra	u4457
  1029                           
  1030                           ;main.c: 55: char message[20] = "";
  1031  002372  EE20  F080         	lfsr	2,main@message
  1032  002376  0E13               	movlw	19
  1033  002378                     u4351:
  1034  002378  6ADE               	clrf	postinc2,c
  1035  00237A  06E8               	decf	wreg,f,c
  1036  00237C  E2FD               	bc	u4351
  1037                           
  1038                           ;main.c: 56: if (!canal) {
  1039  00237E  0100               	movlb	0	; () banked
  1040  002380  51A0               	movf	main@canal& (0+255),w,b
  1041  002382  A4D8               	btfss	status,2,c
  1042  002384  D024               	goto	l3815
  1043                           
  1044                           ; BSR set to: 0
  1045                           ;main.c: 57: volt = get_voltage(in);
  1046  002386  C096  F041         	movff	main@in,get_voltage@ac_in
  1047  00238A  C097  F042         	movff	main@in+1,get_voltage@ac_in+1
  1048  00238E  ECC5  F00C         	call	_get_voltage	;wreg free
  1049  002392  C041  F098         	movff	?_get_voltage,main@volt
  1050  002396  C042  F099         	movff	?_get_voltage+1,main@volt+1
  1051  00239A  C043  F09A         	movff	?_get_voltage+2,main@volt+2
  1052  00239E  C044  F09B         	movff	?_get_voltage+3,main@volt+3
  1053                           
  1054                           ;main.c: 58: R_I(128);
  1055  0023A2  0E80               	movlw	128
  1056  0023A4  EC46  F00B         	call	_R_I
  1057                           
  1058                           ;main.c: 59: sprintf(message, "Voltaje: %0.2fV   ", volt);
  1059  0023A8  0E80               	movlw	low main@message
  1060  0023AA  6E4D               	movwf	sprintf@sp,c
  1061  0023AC  0E00               	movlw	high main@message
  1062  0023AE  6E4E               	movwf	sprintf@sp+1,c
  1063  0023B0  0E6C               	movlw	low STR_3
  1064  0023B2  6E4F               	movwf	sprintf@f,c
  1065  0023B4  0E7F               	movlw	high STR_3
  1066  0023B6  6E50               	movwf	sprintf@f+1,c
  1067  0023B8  C098  F051         	movff	main@volt,?_sprintf+4
  1068  0023BC  C099  F052         	movff	main@volt+1,?_sprintf+5
  1069  0023C0  C09A  F053         	movff	main@volt+2,?_sprintf+6
  1070  0023C4  C09B  F054         	movff	main@volt+3,?_sprintf+7
  1071  0023C8  ECCE  F01A         	call	_sprintf	;wreg free
  1072                           
  1073                           ;main.c: 60: } else {
  1074  0023CC  D024               	goto	l3821
  1075  0023CE                     l3815:
  1076  0023CE  FFFF               	dw	65535	; assembler added errata NOP
  1077                           
  1078                           ; BSR set to: 0
  1079                           ;main.c: 61: temp = get_temp(in);
  1080  0023D0  C096  F045         	movff	main@in,get_temp@ac_in
  1081  0023D4  C097  F046         	movff	main@in+1,get_temp@ac_in+1
  1082  0023D8  EC32  F00F         	call	_get_temp	;wreg free
  1083  0023DC  C045  F09C         	movff	?_get_temp,main@temp
  1084  0023E0  C046  F09D         	movff	?_get_temp+1,main@temp+1
  1085  0023E4  C047  F09E         	movff	?_get_temp+2,main@temp+2
  1086  0023E8  C048  F09F         	movff	?_get_temp+3,main@temp+3
  1087                           
  1088                           ;main.c: 62: R_I(192);
  1089  0023EC  0EC0               	movlw	192
  1090  0023EE  EC46  F00B         	call	_R_I
  1091                           
  1092                           ;main.c: 63: sprintf(message, "Temp: %.0fC       ", temp);
  1093  0023F2  0E80               	movlw	low main@message
  1094  0023F4  6E4D               	movwf	sprintf@sp,c
  1095  0023F6  0E00               	movlw	high main@message
  1096  0023F8  6E4E               	movwf	sprintf@sp+1,c
  1097  0023FA  0E59               	movlw	low STR_4
  1098  0023FC  6E4F               	movwf	sprintf@f,c
  1099  0023FE  0E7F               	movlw	high STR_4
  1100  002400  6E50               	movwf	sprintf@f+1,c
  1101  002402  C09C  F051         	movff	main@temp,?_sprintf+4
  1102  002406  C09D  F052         	movff	main@temp+1,?_sprintf+5
  1103  00240A  C09E  F053         	movff	main@temp+2,?_sprintf+6
  1104  00240E  C09F  F054         	movff	main@temp+3,?_sprintf+7
  1105  002412  ECCE  F01A         	call	_sprintf	;wreg free
  1106  002416                     l3821:
  1107  002416  FFFF               	dw	65535	; assembler added errata NOP
  1108                           
  1109                           ;main.c: 64: };main.c: 66: if (volt > 3.8) {
  1110  002418  0E33               	movlw	51
  1111  00241A  6E01               	movwf	___flge@ff1,c
  1112  00241C  0E33               	movlw	51
  1113  00241E  6E02               	movwf	___flge@ff1+1,c
  1114  002420  0E73               	movlw	115
  1115  002422  6E03               	movwf	___flge@ff1+2,c
  1116  002424  0E40               	movlw	64
  1117  002426  6E04               	movwf	___flge@ff1+3,c
  1118  002428  C098  F005         	movff	main@volt,___flge@ff2
  1119  00242C  C099  F006         	movff	main@volt+1,___flge@ff2+1
  1120  002430  C09A  F007         	movff	main@volt+2,___flge@ff2+2
  1121  002434  C09B  F008         	movff	main@volt+3,___flge@ff2+3
  1122  002438  ECC2  F00E         	call	___flge	;wreg free
  1123  00243C  B0D8               	btfsc	status,0,c
  1124  00243E  D013               	goto	l3829
  1125                           
  1126                           ;main.c: 67: R_I(128);
  1127  002440  0E80               	movlw	128
  1128  002442  EC46  F00B         	call	_R_I
  1129                           
  1130                           ;main.c: 68: print_message_onLCD("    PELIGRO   ");
  1131  002446  0ED3               	movlw	low STR_5
  1132  002448  6E05               	movwf	print_message_onLCD@message,c
  1133  00244A  0E7F               	movlw	high STR_5
  1134  00244C  6E06               	movwf	print_message_onLCD@message+1,c
  1135  00244E  EC93  F00C         	call	_print_message_onLCD	;wreg free
  1136                           
  1137                           ;main.c: 69: R_I(192);
  1138  002452  0EC0               	movlw	192
  1139  002454  EC46  F00B         	call	_R_I
  1140                           
  1141                           ;main.c: 70: print_message_onLCD("  ALTO VOLTAJE  ");
  1142  002458  0EA1               	movlw	low STR_6
  1143  00245A  6E05               	movwf	print_message_onLCD@message,c
  1144  00245C  0E7F               	movlw	high STR_6
  1145  00245E  6E06               	movwf	print_message_onLCD@message+1,c
  1146  002460  EC93  F00C         	call	_print_message_onLCD	;wreg free
  1147                           
  1148                           ;main.c: 71: } else if (volt <= 0.29 && temp >= 61) {
  1149  002464  D06B               	goto	l3849
  1150  002466                     l3829:
  1151  002466  FFFF               	dw	65535	; assembler added errata NOP
  1152  002468  0EE1               	movlw	225
  1153  00246A  6E01               	movwf	___flge@ff1,c
  1154  00246C  0E7A               	movlw	122
  1155  00246E  6E02               	movwf	___flge@ff1+1,c
  1156  002470  0E94               	movlw	148
  1157  002472  6E03               	movwf	___flge@ff1+2,c
  1158  002474  0E3E               	movlw	62
  1159  002476  6E04               	movwf	___flge@ff1+3,c
  1160  002478  C098  F005         	movff	main@volt,___flge@ff2
  1161  00247C  C099  F006         	movff	main@volt+1,___flge@ff2+1
  1162  002480  C09A  F007         	movff	main@volt+2,___flge@ff2+2
  1163  002484  C09B  F008         	movff	main@volt+3,___flge@ff2+3
  1164  002488  ECC2  F00E         	call	___flge	;wreg free
  1165  00248C  A0D8               	btfss	status,0,c
  1166  00248E  D027               	goto	l3839
  1167  002490  C09C  F001         	movff	main@temp,___flge@ff1
  1168  002494  C09D  F002         	movff	main@temp+1,___flge@ff1+1
  1169  002498  C09E  F003         	movff	main@temp+2,___flge@ff1+2
  1170  00249C  C09F  F004         	movff	main@temp+3,___flge@ff1+3
  1171  0024A0  0E00               	movlw	0
  1172  0024A2  6E05               	movwf	___flge@ff2,c
  1173  0024A4  0E00               	movlw	0
  1174  0024A6  6E06               	movwf	___flge@ff2+1,c
  1175  0024A8  0E74               	movlw	116
  1176  0024AA  6E07               	movwf	___flge@ff2+2,c
  1177  0024AC  0E42               	movlw	66
  1178  0024AE  6E08               	movwf	___flge@ff2+3,c
  1179  0024B0  ECC2  F00E         	call	___flge	;wreg free
  1180  0024B4  A0D8               	btfss	status,0,c
  1181  0024B6  D013               	goto	l3839
  1182                           
  1183                           ;main.c: 72: R_I(128);
  1184  0024B8  0E80               	movlw	128
  1185  0024BA  EC46  F00B         	call	_R_I
  1186                           
  1187                           ;main.c: 73: print_message_onLCD("     RIESGO     ");
  1188  0024BE  0E90               	movlw	low STR_7
  1189  0024C0  6E05               	movwf	print_message_onLCD@message,c
  1190  0024C2  0E7F               	movlw	high STR_7
  1191  0024C4  6E06               	movwf	print_message_onLCD@message+1,c
  1192  0024C6  EC93  F00C         	call	_print_message_onLCD	;wreg free
  1193                           
  1194                           ;main.c: 74: R_I(192);
  1195  0024CA  0EC0               	movlw	192
  1196  0024CC  EC46  F00B         	call	_R_I
  1197                           
  1198                           ;main.c: 75: print_message_onLCD(" DE DESTRUCCION ");
  1199  0024D0  0EB2               	movlw	low STR_8
  1200  0024D2  6E05               	movwf	print_message_onLCD@message,c
  1201  0024D4  0E7F               	movlw	high STR_8
  1202  0024D6  6E06               	movwf	print_message_onLCD@message+1,c
  1203  0024D8  EC93  F00C         	call	_print_message_onLCD	;wreg free
  1204                           
  1205                           ;main.c: 76: } else if (temp < 5) {
  1206  0024DC  D02F               	goto	l3849
  1207  0024DE                     l3839:
  1208  0024DE  FFFF               	dw	65535	; assembler added errata NOP
  1209  0024E0  C09C  F001         	movff	main@temp,___flge@ff1
  1210  0024E4  C09D  F002         	movff	main@temp+1,___flge@ff1+1
  1211  0024E8  C09E  F003         	movff	main@temp+2,___flge@ff1+2
  1212  0024EC  C09F  F004         	movff	main@temp+3,___flge@ff1+3
  1213  0024F0  0E00               	movlw	0
  1214  0024F2  6E05               	movwf	___flge@ff2,c
  1215  0024F4  0E00               	movlw	0
  1216  0024F6  6E06               	movwf	___flge@ff2+1,c
  1217  0024F8  0EA0               	movlw	160
  1218  0024FA  6E07               	movwf	___flge@ff2+2,c
  1219  0024FC  0E40               	movlw	64
  1220  0024FE  6E08               	movwf	___flge@ff2+3,c
  1221  002500  ECC2  F00E         	call	___flge	;wreg free
  1222  002504  B0D8               	btfsc	status,0,c
  1223  002506  D013               	goto	l3847
  1224                           
  1225                           ;main.c: 77: R_I(128);
  1226  002508  0E80               	movlw	128
  1227  00250A  EC46  F00B         	call	_R_I
  1228                           
  1229                           ;main.c: 78: print_message_onLCD("     LLEGO     ");
  1230  00250E  0EC3               	movlw	low STR_9
  1231  002510  6E05               	movwf	print_message_onLCD@message,c
  1232  002512  0E7F               	movlw	high STR_9
  1233  002514  6E06               	movwf	print_message_onLCD@message+1,c
  1234  002516  EC93  F00C         	call	_print_message_onLCD	;wreg free
  1235                           
  1236                           ;main.c: 79: R_I(192);
  1237  00251A  0EC0               	movlw	192
  1238  00251C  EC46  F00B         	call	_R_I
  1239                           
  1240                           ;main.c: 80: print_message_onLCD("     EL FIN     ");
  1241  002520  0E7F               	movlw	low STR_10
  1242  002522  6E05               	movwf	print_message_onLCD@message,c
  1243  002524  0E7F               	movlw	high STR_10
  1244  002526  6E06               	movwf	print_message_onLCD@message+1,c
  1245  002528  EC93  F00C         	call	_print_message_onLCD	;wreg free
  1246                           
  1247                           ;main.c: 81: } else {
  1248  00252C  D007               	goto	l3849
  1249  00252E                     l3847:
  1250  00252E  FFFF               	dw	65535	; assembler added errata NOP
  1251                           
  1252                           ;main.c: 82: print_message_onLCD(message);
  1253  002530  0E80               	movlw	low main@message
  1254  002532  6E05               	movwf	print_message_onLCD@message,c
  1255  002534  0E00               	movlw	high main@message
  1256  002536  6E06               	movwf	print_message_onLCD@message+1,c
  1257  002538  EC93  F00C         	call	_print_message_onLCD	;wreg free
  1258  00253C                     l3849:
  1259  00253C  FFFF               	dw	65535	; assembler added errata NOP
  1260                           
  1261                           ;main.c: 83: };main.c: 86: _delay((unsigned long)((10)*(4000000/4000.0)));
  1262  00253E  0E0A               	movlw	10
  1263  002540  6E74               	movwf	??_main& (0+255),c
  1264  002542  0EBE               	movlw	190
  1265  002544                     u4467:
  1266  002544  FFFF               	dw	65535	; errata NOP
  1267  002546  2EE8               	decfsz	wreg,f,c
  1268  002548  D7FD               	bra	u4467
  1269  00254A  2E74               	decfsz	??_main& (0+255),f,c
  1270  00254C  D7FB               	bra	u4467
  1271  00254E  D000               	nop2	
  1272                           
  1273                           ;main.c: 87: canal = canal ? 0 : 1;
  1274  002550  0100               	movlb	0	; () banked
  1275  002552  51A0               	movf	main@canal& (0+255),w,b
  1276  002554  A4D8               	btfss	status,2,c
  1277  002556  D002               	goto	u4410
  1278  002558  0E01               	movlw	1
  1279  00255A  D6DE               	goto	L2
  1280  00255C                     u4410:
  1281  00255C  FFFF               	dw	65535	; assembler added errata NOP
  1282  00255E  0E00               	movlw	0
  1283  002560  D6DB               	goto	L2
  1284  002562                     __end_of_main:
  1285                           	opt callstack 0
  1286                           
  1287 ;; *************** function _sprintf *****************
  1288 ;; Defined at:
  1289 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;  sp              2   76[COMRAM] PTR unsigned char 
  1292 ;;		 -> main@message(20), 
  1293 ;;  f               2   78[COMRAM] PTR const unsigned char 
  1294 ;;		 -> STR_4(19), STR_3(19), 
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;  fval            4  108[COMRAM] PTR const unsigned char 
  1297 ;;  tmpval          4   98[COMRAM] struct .
  1298 ;;  val             4   94[COMRAM] unsigned long 
  1299 ;;  cp              3    0        PTR const unsigned char 
  1300 ;;  prec            2  112[COMRAM] int 
  1301 ;;  width           2  106[COMRAM] int 
  1302 ;;  flag            2  104[COMRAM] unsigned short 
  1303 ;;  eexp            2  102[COMRAM] int 
  1304 ;;  ap              2   92[COMRAM] PTR void [1]
  1305 ;;		 -> ?_sprintf(2), 
  1306 ;;  len             2    0        unsigned int 
  1307 ;;  c               1  114[COMRAM] unsigned char 
  1308 ;;  d               1    0        unsigned char 
  1309 ;; Return value:  Size  Location     Type
  1310 ;;                  2   76[COMRAM] int 
  1311 ;; Registers used:
  1312 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1318 ;;      Params:         8       0       0       0       0       0       0
  1319 ;;      Locals:        27       0       0       0       0       0       0
  1320 ;;      Temps:          4       0       0       0       0       0       0
  1321 ;;      Totals:        39       0       0       0       0       0       0
  1322 ;;Total ram usage:       39 bytes
  1323 ;; Hardware stack levels used:    1
  1324 ;; Hardware stack levels required when called:    2
  1325 ;; This function calls:
  1326 ;;		___awdiv
  1327 ;;		___fladd
  1328 ;;		___fleq
  1329 ;;		___flge
  1330 ;;		___flmul
  1331 ;;		___flneg
  1332 ;;		___flsub
  1333 ;;		___fltol
  1334 ;;		___lldiv
  1335 ;;		___llmod
  1336 ;;		___wmul
  1337 ;;		___xxtofl
  1338 ;;		__div_to_l_
  1339 ;;		__tdiv_to_l_
  1340 ;;		_fround
  1341 ;;		_isdigit
  1342 ;;		_scale
  1343 ;; This function is called by:
  1344 ;;		_main
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348                           	psect	text1
  1349  00359C                     __ptext1:
  1350                           	opt callstack 0
  1351  00359C                     _sprintf:
  1352                           	opt callstack 0
  1353  00359C  FFFF               	dw	65535	; assembler added errata NOP
  1354                           
  1355                           ;doprnt.c: 502: va_list ap;;doprnt.c: 507: char c;;doprnt.c: 509: int width;;doprnt.c: 5
      +                          12: int prec;;doprnt.c: 520: unsigned short flag;;doprnt.c: 527: char d;;doprnt.c: 528: 
      +                          double fval;;doprnt.c: 529: int eexp;;doprnt.c: 535: union {;doprnt.c: 536: unsigned lon
      +                          g vd;;doprnt.c: 537: double integ;;doprnt.c: 538: } tmpval;;doprnt.c: 540: unsigned long
      +                           val;;doprnt.c: 541: unsigned len;;doprnt.c: 542: const char * cp;;doprnt.c: 545: *ap = 
      +                          __va_start();
  1356                           
  1357                           ; BSR set to: 0
  1358                           ;incstack = 0
  1359  00359E  0E51               	movlw	low (?_sprintf+4)
  1360  0035A0  6E5D               	movwf	sprintf@ap,c
  1361  0035A2  0E00               	movlw	high (?_sprintf+4)
  1362  0035A4  6E5E               	movwf	sprintf@ap+1,c
  1363                           
  1364                           ;doprnt.c: 548: while((c = *f++)) {
  1365  0035A6  EFE8  F01F         	goto	l3763
  1366  0035AA                     l3471:
  1367  0035AA  FFFF               	dw	65535	; assembler added errata NOP
  1368                           
  1369                           ;doprnt.c: 550: if(c != '%')
  1370  0035AC  0E25               	movlw	37
  1371  0035AE  1873               	xorwf	sprintf@c,w,c
  1372  0035B0  B4D8               	btfsc	status,2,c
  1373  0035B2  D00B               	goto	l3477
  1374                           
  1375                           ;doprnt.c: 552: {;doprnt.c: 553: ((*sp++ = (c)));
  1376  0035B4  C04D  FFD9         	movff	sprintf@sp,fsr2l
  1377  0035B8  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  1378  0035BC  C073  FFDF         	movff	sprintf@c,indf2
  1379  0035C0                     l3475:
  1380  0035C0  FFFF               	dw	65535	; assembler added errata NOP
  1381  0035C2  4A4D               	infsnz	sprintf@sp,f,c
  1382  0035C4  2A4E               	incf	sprintf@sp+1,f,c
  1383                           
  1384                           ;doprnt.c: 554: continue;
  1385  0035C6  EFE8  F01F         	goto	l3763
  1386  0035CA                     l3477:
  1387  0035CA  FFFF               	dw	65535	; assembler added errata NOP
  1388                           
  1389                           ;doprnt.c: 555: };doprnt.c: 558: width = 0;
  1390  0035CC  0E00               	movlw	0
  1391  0035CE  6E6C               	movwf	sprintf@width+1,c
  1392  0035D0  0E00               	movlw	0
  1393  0035D2  6E6B               	movwf	sprintf@width,c
  1394                           
  1395                           ;doprnt.c: 560: flag = 0;
  1396  0035D4  0E00               	movlw	0
  1397  0035D6  6E6A               	movwf	sprintf@flag+1,c
  1398  0035D8  0E00               	movlw	0
  1399  0035DA  6E69               	movwf	sprintf@flag,c
  1400  0035DC  D004               	goto	l3483
  1401  0035DE                     l3479:
  1402  0035DE  FFFF               	dw	65535	; assembler added errata NOP
  1403                           
  1404                           ;doprnt.c: 592: flag |= 0x04;
  1405  0035E0  8469               	bsf	sprintf@flag,2,c
  1406                           
  1407                           ;doprnt.c: 593: f++;
  1408  0035E2  4A4F               	infsnz	sprintf@f,f,c
  1409  0035E4  2A50               	incf	sprintf@f+1,f,c
  1410  0035E6                     l3483:
  1411  0035E6  FFFF               	dw	65535	; assembler added errata NOP
  1412  0035E8  C04F  FFF6         	movff	sprintf@f,tblptrl
  1413  0035EC  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1414  0035F0                     	if	0	;tblptru may be non-zero
  1415  0035F0                     	endif
  1416  0035F0                     	if	0	;tblptru may be non-zero
  1417  0035F0                     	endif
  1418  0035F0  0008               	tblrd		*
  1419  0035F2  FFFF               	dw	65535	; errata NOP
  1420  0035F4  50F5               	movf	tablat,w,c
  1421                           
  1422                           ; Switch size 1, requested type "simple"
  1423                           ; Number of cases is 1, Range of values is 48 to 48
  1424                           ; switch strategies available:
  1425                           ; Name         Instructions Cycles
  1426                           ; simple_byte            4     3 (average)
  1427                           ;	Chosen strategy is simple_byte
  1428  0035F6  0A30               	xorlw	48	; case 48
  1429  0035F8  B4D8               	btfsc	status,2,c
  1430  0035FA  D7F1               	goto	l3479
  1431                           
  1432                           ;doprnt.c: 609: if(isdigit((unsigned)*f)) {
  1433  0035FC  C04F  FFF6         	movff	sprintf@f,tblptrl
  1434  003600  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1435  003604                     	if	0	;tblptru may be non-zero
  1436  003604                     	endif
  1437  003604                     	if	0	;tblptru may be non-zero
  1438  003604                     	endif
  1439  003604  0008               	tblrd		*
  1440  003606  FFFF               	dw	65535	; errata NOP
  1441  003608  50F5               	movf	tablat,w,c
  1442  00360A  EC62  F00B         	call	_isdigit
  1443  00360E  A0D8               	btfss	status,0,c
  1444  003610  D035               	goto	u3840
  1445                           
  1446                           ;doprnt.c: 610: width = 0;
  1447  003612  0E00               	movlw	0
  1448  003614  6E6C               	movwf	sprintf@width+1,c
  1449  003616  0E00               	movlw	0
  1450  003618  6E6B               	movwf	sprintf@width,c
  1451  00361A                     l3489:
  1452  00361A  FFFF               	dw	65535	; assembler added errata NOP
  1453                           
  1454                           ;doprnt.c: 612: width *= 10;
  1455  00361C  C06B  F001         	movff	sprintf@width,___wmul@multiplier
  1456  003620  C06C  F002         	movff	sprintf@width+1,___wmul@multiplier+1
  1457  003624  0E00               	movlw	0
  1458  003626  6E04               	movwf	___wmul@multiplicand+1,c
  1459  003628  0E0A               	movlw	10
  1460  00362A  6E03               	movwf	___wmul@multiplicand,c
  1461  00362C  EC74  F00B         	call	___wmul	;wreg free
  1462  003630  C001  F06B         	movff	?___wmul,sprintf@width
  1463  003634  C002  F06C         	movff	?___wmul+1,sprintf@width+1
  1464                           
  1465                           ;doprnt.c: 613: width += *f++ - '0';
  1466  003638  0ED0               	movlw	208
  1467  00363A  6E55               	movwf	??_sprintf& (0+255),c
  1468  00363C  0EFF               	movlw	255
  1469  00363E  6E56               	movwf	(??_sprintf+1)& (0+255),c
  1470  003640  C04F  FFF6         	movff	sprintf@f,tblptrl
  1471  003644  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1472  003648                     	if	0	;tblptru may be non-zero
  1473  003648                     	endif
  1474  003648                     	if	0	;tblptru may be non-zero
  1475  003648                     	endif
  1476  003648  0008               	tblrd		*
  1477  00364A  FFFF               	dw	65535	; errata NOP
  1478  00364C  50F5               	movf	tablat,w,c
  1479  00364E  6E57               	movwf	(??_sprintf+2)& (0+255),c
  1480  003650  6A58               	clrf	(??_sprintf+3)& (0+255),c
  1481  003652  5055               	movf	??_sprintf,w,c
  1482  003654  2657               	addwf	??_sprintf+2,f,c
  1483  003656  5056               	movf	??_sprintf+1,w,c
  1484  003658  2258               	addwfc	??_sprintf+3,f,c
  1485  00365A  5057               	movf	??_sprintf+2,w,c
  1486  00365C  266B               	addwf	sprintf@width,f,c
  1487  00365E  5058               	movf	??_sprintf+3,w,c
  1488  003660  226C               	addwfc	sprintf@width+1,f,c
  1489  003662  4A4F               	infsnz	sprintf@f,f,c
  1490  003664  2A50               	incf	sprintf@f+1,f,c
  1491                           
  1492                           ;doprnt.c: 614: } while(isdigit((unsigned)*f));
  1493  003666  C04F  FFF6         	movff	sprintf@f,tblptrl
  1494  00366A  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1495  00366E                     	if	0	;tblptru may be non-zero
  1496  00366E                     	endif
  1497  00366E                     	if	0	;tblptru may be non-zero
  1498  00366E                     	endif
  1499  00366E  0008               	tblrd		*
  1500  003670  FFFF               	dw	65535	; errata NOP
  1501  003672  50F5               	movf	tablat,w,c
  1502  003674  EC62  F00B         	call	_isdigit
  1503  003678  B0D8               	btfsc	status,0,c
  1504  00367A  D7CF               	goto	l3489
  1505  00367C                     u3840:
  1506  00367C  FFFF               	dw	65535	; assembler added errata NOP
  1507                           
  1508                           ;doprnt.c: 620: };doprnt.c: 623: if(*f == '.') {
  1509  00367E  C04F  FFF6         	movff	sprintf@f,tblptrl
  1510  003682  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1511  003686                     	if	0	;tblptru may be non-zero
  1512  003686                     	endif
  1513  003686                     	if	0	;tblptru may be non-zero
  1514  003686                     	endif
  1515  003686  0008               	tblrd		*
  1516  003688  FFFF               	dw	65535	; errata NOP
  1517  00368A  50F5               	movf	tablat,w,c
  1518  00368C  0A2E               	xorlw	46
  1519  00368E  A4D8               	btfss	status,2,c
  1520  003690  D032               	goto	l3509
  1521                           
  1522                           ;doprnt.c: 624: flag |= 0x4000;
  1523  003692  8C6A               	bsf	sprintf@flag+1,6,c
  1524                           
  1525                           ;doprnt.c: 625: f++;
  1526  003694  4A4F               	infsnz	sprintf@f,f,c
  1527  003696  2A50               	incf	sprintf@f+1,f,c
  1528                           
  1529                           ;doprnt.c: 639: {;doprnt.c: 640: prec = 0;
  1530  003698  0E00               	movlw	0
  1531  00369A  6E72               	movwf	sprintf@prec+1,c
  1532  00369C  0E00               	movlw	0
  1533  00369E  6E71               	movwf	sprintf@prec,c
  1534                           
  1535                           ;doprnt.c: 641: while(isdigit((unsigned)*f))
  1536  0036A0  D01D               	goto	l3507
  1537  0036A2                     l3503:
  1538  0036A2  FFFF               	dw	65535	; assembler added errata NOP
  1539                           
  1540                           ;doprnt.c: 642: prec = prec*10 + *f++ - '0';
  1541  0036A4  C071  F001         	movff	sprintf@prec,___wmul@multiplier
  1542  0036A8  C072  F002         	movff	sprintf@prec+1,___wmul@multiplier+1
  1543  0036AC  0E00               	movlw	0
  1544  0036AE  6E04               	movwf	___wmul@multiplicand+1,c
  1545  0036B0  0E0A               	movlw	10
  1546  0036B2  6E03               	movwf	___wmul@multiplicand,c
  1547  0036B4  EC74  F00B         	call	___wmul	;wreg free
  1548  0036B8  C04F  FFF6         	movff	sprintf@f,tblptrl
  1549  0036BC  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1550  0036C0                     	if	0	;tblptru may be non-zero
  1551  0036C0                     	endif
  1552  0036C0                     	if	0	;tblptru may be non-zero
  1553  0036C0                     	endif
  1554  0036C0  0008               	tblrd		*
  1555  0036C2  FFFF               	dw	65535	; errata NOP
  1556  0036C4  50F5               	movf	tablat,w,c
  1557  0036C6  2601               	addwf	?___wmul,f,c
  1558  0036C8  0E00               	movlw	0
  1559  0036CA  2202               	addwfc	?___wmul+1,f,c
  1560  0036CC  0ED0               	movlw	208
  1561  0036CE  2401               	addwf	?___wmul,w,c
  1562  0036D0  6E71               	movwf	sprintf@prec,c
  1563  0036D2  0EFF               	movlw	255
  1564  0036D4  2002               	addwfc	?___wmul+1,w,c
  1565  0036D6  6E72               	movwf	sprintf@prec+1,c
  1566  0036D8  4A4F               	infsnz	sprintf@f,f,c
  1567  0036DA  2A50               	incf	sprintf@f+1,f,c
  1568  0036DC                     l3507:
  1569  0036DC  FFFF               	dw	65535	; assembler added errata NOP
  1570  0036DE  C04F  FFF6         	movff	sprintf@f,tblptrl
  1571  0036E2  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1572  0036E6                     	if	0	;tblptru may be non-zero
  1573  0036E6                     	endif
  1574  0036E6                     	if	0	;tblptru may be non-zero
  1575  0036E6                     	endif
  1576  0036E6  0008               	tblrd		*
  1577  0036E8  FFFF               	dw	65535	; errata NOP
  1578  0036EA  50F5               	movf	tablat,w,c
  1579  0036EC  EC62  F00B         	call	_isdigit
  1580  0036F0  A0D8               	btfss	status,0,c
  1581  0036F2  D00B               	goto	l3517
  1582  0036F4  D7D6               	goto	l3503
  1583  0036F6                     l3509:
  1584  0036F6  FFFF               	dw	65535	; assembler added errata NOP
  1585                           
  1586                           ;doprnt.c: 645: prec = 0;
  1587  0036F8  0E00               	movlw	0
  1588  0036FA  6E72               	movwf	sprintf@prec+1,c
  1589  0036FC  0E00               	movlw	0
  1590  0036FE  6E71               	movwf	sprintf@prec,c
  1591                           
  1592                           ;doprnt.c: 647: flag |= 0x1000;
  1593  003700  886A               	bsf	sprintf@flag+1,4,c
  1594  003702  D003               	goto	l3517
  1595  003704                     l3513:
  1596  003704  FFFF               	dw	65535	; assembler added errata NOP
  1597                           
  1598                           ;doprnt.c: 682: flag |= 0x400;
  1599  003706  846A               	bsf	sprintf@flag+1,2,c
  1600                           
  1601                           ;doprnt.c: 683: break;
  1602  003708  D015               	goto	l3519
  1603  00370A                     l3517:
  1604  00370A  FFFF               	dw	65535	; assembler added errata NOP
  1605  00370C  C04F  FFF6         	movff	sprintf@f,tblptrl
  1606  003710  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1607  003714  4A4F               	infsnz	sprintf@f,f,c
  1608  003716  2A50               	incf	sprintf@f+1,f,c
  1609  003718                     	if	0	;tblptru may be non-zero
  1610  003718                     	endif
  1611  003718                     	if	0	;tblptru may be non-zero
  1612  003718                     	endif
  1613  003718  0008               	tblrd		*
  1614  00371A  FFFF               	dw	65535	; errata NOP
  1615  00371C  CFF5 F073          	movff	tablat,sprintf@c
  1616  003720  5073               	movf	sprintf@c,w,c
  1617                           
  1618                           ; Switch size 1, requested type "simple"
  1619                           ; Number of cases is 2, Range of values is 0 to 102
  1620                           ; switch strategies available:
  1621                           ; Name         Instructions Cycles
  1622                           ; simple_byte            7     4 (average)
  1623                           ;	Chosen strategy is simple_byte
  1624  003722  0A00               	xorlw	0	; case 0
  1625  003724  B4D8               	btfsc	status,2,c
  1626  003726  EFF7  F01F         	goto	u4310
  1627  00372A  0A66               	xorlw	102	; case 102
  1628  00372C  B4D8               	btfsc	status,2,c
  1629  00372E  D7EA               	goto	l3513
  1630  003730  EFE8  F01F         	goto	l3763
  1631  003734                     l3519:
  1632  003734  FFFF               	dw	65535	; assembler added errata NOP
  1633                           
  1634                           ;doprnt.c: 844: if(flag & (0x700)) {
  1635  003736  0E07               	movlw	7
  1636  003738  146A               	andwf	sprintf@flag+1,w,c
  1637  00373A  B4D8               	btfsc	status,2,c
  1638  00373C  D38B               	goto	l3699
  1639                           
  1640                           ;doprnt.c: 846: if(flag & 0x1000)
  1641  00373E  A86A               	btfss	sprintf@flag+1,4,c
  1642  003740  D004               	goto	l3525
  1643                           
  1644                           ;doprnt.c: 848: prec = 6;
  1645  003742  0E00               	movlw	0
  1646  003744  6E72               	movwf	sprintf@prec+1,c
  1647  003746  0E06               	movlw	6
  1648  003748  6E71               	movwf	sprintf@prec,c
  1649  00374A                     l3525:
  1650  00374A  FFFF               	dw	65535	; assembler added errata NOP
  1651                           
  1652                           ;doprnt.c: 849: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1653  00374C  C05D  FFD9         	movff	sprintf@ap,fsr2l
  1654  003750  C05E  FFDA         	movff	sprintf@ap+1,fsr2h
  1655  003754  CFDE F06D          	movff	postinc2,sprintf@fval
  1656  003758  CFDE F06E          	movff	postinc2,sprintf@fval+1
  1657  00375C  CFDE F06F          	movff	postinc2,sprintf@fval+2
  1658  003760  CFDE F070          	movff	postinc2,sprintf@fval+3
  1659  003764  0E04               	movlw	4
  1660  003766  265D               	addwf	sprintf@ap,f,c
  1661  003768  0E00               	movlw	0
  1662  00376A  225E               	addwfc	sprintf@ap+1,f,c
  1663                           
  1664                           ;doprnt.c: 850: if(fval < 0.0) {
  1665  00376C  AE70               	btfss	sprintf@fval+3,7,c
  1666  00376E  D014               	goto	l3535
  1667                           
  1668                           ;doprnt.c: 851: fval = -fval;
  1669  003770  C06D  F001         	movff	sprintf@fval,___flneg@f1
  1670  003774  C06E  F002         	movff	sprintf@fval+1,___flneg@f1+1
  1671  003778  C06F  F003         	movff	sprintf@fval+2,___flneg@f1+2
  1672  00377C  C070  F004         	movff	sprintf@fval+3,___flneg@f1+3
  1673  003780  EC89  F00B         	call	___flneg	;wreg free
  1674  003784  C001  F06D         	movff	?___flneg,sprintf@fval
  1675  003788  C002  F06E         	movff	?___flneg+1,sprintf@fval+1
  1676  00378C  C003  F06F         	movff	?___flneg+2,sprintf@fval+2
  1677  003790  C004  F070         	movff	?___flneg+3,sprintf@fval+3
  1678                           
  1679                           ;doprnt.c: 852: flag |= 0x03;
  1680  003794  0E03               	movlw	3
  1681  003796  1269               	iorwf	sprintf@flag,f,c
  1682  003798                     l3535:
  1683  003798  FFFF               	dw	65535	; assembler added errata NOP
  1684                           
  1685                           ;doprnt.c: 853: };doprnt.c: 854: eexp = 0;
  1686  00379A  0E00               	movlw	0
  1687  00379C  6E68               	movwf	sprintf@eexp+1,c
  1688  00379E  0E00               	movlw	0
  1689  0037A0  6E67               	movwf	sprintf@eexp,c
  1690                           
  1691                           ;doprnt.c: 855: if( fval!=0) {
  1692  0037A2  C06D  F001         	movff	sprintf@fval,___fleq@ff1
  1693  0037A6  C06E  F002         	movff	sprintf@fval+1,___fleq@ff1+1
  1694  0037AA  C06F  F003         	movff	sprintf@fval+2,___fleq@ff1+2
  1695  0037AE  C070  F004         	movff	sprintf@fval+3,___fleq@ff1+3
  1696  0037B2  0E00               	movlw	0
  1697  0037B4  6E05               	movwf	___fleq@ff2,c
  1698  0037B6  0E00               	movlw	0
  1699  0037B8  6E06               	movwf	___fleq@ff2+1,c
  1700  0037BA  0E00               	movlw	0
  1701  0037BC  6E07               	movwf	___fleq@ff2+2,c
  1702  0037BE  0E00               	movlw	0
  1703  0037C0  6E08               	movwf	___fleq@ff2+3,c
  1704  0037C2  ECC1  F00D         	call	___fleq	;wreg free
  1705  0037C6  B0D8               	btfsc	status,0,c
  1706  0037C8  D081               	goto	l3563
  1707                           
  1708                           ;doprnt.c: 856: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
  1709  0037CA  346F               	rlcf	sprintf@fval+2,w,c
  1710  0037CC  3470               	rlcf	sprintf@fval+3,w,c
  1711  0037CE  0F82               	addlw	130
  1712  0037D0  6E67               	movwf	sprintf@eexp,c
  1713  0037D2  6A68               	clrf	sprintf@eexp+1,c
  1714  0037D4  0EFF               	movlw	255
  1715  0037D6  2268               	addwfc	sprintf@eexp+1,f,c
  1716                           
  1717                           ;doprnt.c: 857: eexp--;
  1718  0037D8  0667               	decf	sprintf@eexp,f,c
  1719  0037DA  A0D8               	btfss	status,0,c
  1720  0037DC  0668               	decf	sprintf@eexp+1,f,c
  1721                           
  1722                           ;doprnt.c: 858: eexp *= 3;
  1723  0037DE  C067  F001         	movff	sprintf@eexp,___wmul@multiplier
  1724  0037E2  C068  F002         	movff	sprintf@eexp+1,___wmul@multiplier+1
  1725  0037E6  0E00               	movlw	0
  1726  0037E8  6E04               	movwf	___wmul@multiplicand+1,c
  1727  0037EA  0E03               	movlw	3
  1728  0037EC  6E03               	movwf	___wmul@multiplicand,c
  1729  0037EE  EC74  F00B         	call	___wmul	;wreg free
  1730  0037F2  C001  F067         	movff	?___wmul,sprintf@eexp
  1731  0037F6  C002  F068         	movff	?___wmul+1,sprintf@eexp+1
  1732                           
  1733                           ;doprnt.c: 859: eexp /= 10;
  1734  0037FA  C067  F007         	movff	sprintf@eexp,___awdiv@dividend
  1735  0037FE  C068  F008         	movff	sprintf@eexp+1,___awdiv@dividend+1
  1736  003802  0E00               	movlw	0
  1737  003804  6E0A               	movwf	___awdiv@divisor+1,c
  1738  003806  0E0A               	movlw	10
  1739  003808  6E09               	movwf	___awdiv@divisor,c
  1740  00380A  EC0C  F00E         	call	___awdiv	;wreg free
  1741  00380E  C007  F067         	movff	?___awdiv,sprintf@eexp
  1742  003812  C008  F068         	movff	?___awdiv+1,sprintf@eexp+1
  1743                           
  1744                           ;doprnt.c: 860: if(eexp < 0)
  1745  003816  AE68               	btfss	sprintf@eexp+1,7,c
  1746  003818  D003               	goto	l3551
  1747                           
  1748                           ;doprnt.c: 861: eexp--;
  1749  00381A  0667               	decf	sprintf@eexp,f,c
  1750  00381C  A0D8               	btfss	status,0,c
  1751  00381E  0668               	decf	sprintf@eexp+1,f,c
  1752  003820                     l3551:
  1753  003820  FFFF               	dw	65535	; assembler added errata NOP
  1754                           
  1755                           ;doprnt.c: 865: tmpval.integ = scale(-eexp);
  1756  003822  5067               	movf	sprintf@eexp,w,c
  1757  003824  0800               	sublw	0
  1758  003826  ECC6  F018         	call	_scale
  1759  00382A  C028  F063         	movff	?_scale,sprintf@tmpval
  1760  00382E  C029  F064         	movff	?_scale+1,sprintf@tmpval+1
  1761  003832  C02A  F065         	movff	?_scale+2,sprintf@tmpval+2
  1762  003836  C02B  F066         	movff	?_scale+3,sprintf@tmpval+3
  1763                           
  1764                           ;doprnt.c: 866: tmpval.integ *= fval;
  1765  00383A  C063  F00F         	movff	sprintf@tmpval,___flmul@b
  1766  00383E  C064  F010         	movff	sprintf@tmpval+1,___flmul@b+1
  1767  003842  C065  F011         	movff	sprintf@tmpval+2,___flmul@b+2
  1768  003846  C066  F012         	movff	sprintf@tmpval+3,___flmul@b+3
  1769  00384A  C06D  F013         	movff	sprintf@fval,___flmul@a
  1770  00384E  C06E  F014         	movff	sprintf@fval+1,___flmul@a+1
  1771  003852  C06F  F015         	movff	sprintf@fval+2,___flmul@a+2
  1772  003856  C070  F016         	movff	sprintf@fval+3,___flmul@a+3
  1773  00385A  EC05  F017         	call	___flmul	;wreg free
  1774  00385E  C00F  F063         	movff	?___flmul,sprintf@tmpval
  1775  003862  C010  F064         	movff	?___flmul+1,sprintf@tmpval+1
  1776  003866  C011  F065         	movff	?___flmul+2,sprintf@tmpval+2
  1777  00386A  C012  F066         	movff	?___flmul+3,sprintf@tmpval+3
  1778                           
  1779                           ;doprnt.c: 867: if(tmpval.integ < 1.0)
  1780  00386E  C063  F001         	movff	sprintf@tmpval,___flge@ff1
  1781  003872  C064  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  1782  003876  C065  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  1783  00387A  C066  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  1784  00387E  0E00               	movlw	0
  1785  003880  6E05               	movwf	___flge@ff2,c
  1786  003882  0E00               	movlw	0
  1787  003884  6E06               	movwf	___flge@ff2+1,c
  1788  003886  0E80               	movlw	128
  1789  003888  6E07               	movwf	___flge@ff2+2,c
  1790  00388A  0E3F               	movlw	63
  1791  00388C  6E08               	movwf	___flge@ff2+3,c
  1792  00388E  ECC2  F00E         	call	___flge	;wreg free
  1793  003892  B0D8               	btfsc	status,0,c
  1794  003894  D004               	goto	l3559
  1795                           
  1796                           ;doprnt.c: 868: eexp--;
  1797  003896  0667               	decf	sprintf@eexp,f,c
  1798  003898  A0D8               	btfss	status,0,c
  1799  00389A  0668               	decf	sprintf@eexp+1,f,c
  1800  00389C  D017               	goto	l3563
  1801  00389E                     l3559:
  1802  00389E  FFFF               	dw	65535	; assembler added errata NOP
  1803                           
  1804                           ;doprnt.c: 869: else if(tmpval.integ >= 10.0)
  1805  0038A0  C063  F001         	movff	sprintf@tmpval,___flge@ff1
  1806  0038A4  C064  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  1807  0038A8  C065  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  1808  0038AC  C066  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  1809  0038B0  0E00               	movlw	0
  1810  0038B2  6E05               	movwf	___flge@ff2,c
  1811  0038B4  0E00               	movlw	0
  1812  0038B6  6E06               	movwf	___flge@ff2+1,c
  1813  0038B8  0E20               	movlw	32
  1814  0038BA  6E07               	movwf	___flge@ff2+2,c
  1815  0038BC  0E41               	movlw	65
  1816  0038BE  6E08               	movwf	___flge@ff2+3,c
  1817  0038C0  ECC2  F00E         	call	___flge	;wreg free
  1818  0038C4  A0D8               	btfss	status,0,c
  1819  0038C6  D002               	goto	l3563
  1820                           
  1821                           ;doprnt.c: 870: eexp++;
  1822  0038C8  4A67               	infsnz	sprintf@eexp,f,c
  1823  0038CA  2A68               	incf	sprintf@eexp+1,f,c
  1824  0038CC                     l3563:
  1825  0038CC  FFFF               	dw	65535	; assembler added errata NOP
  1826                           
  1827                           ;doprnt.c: 871: };doprnt.c: 1131: if(prec <= 12)
  1828  0038CE  BE72               	btfsc	sprintf@prec+1,7,c
  1829  0038D0  D006               	goto	u3940
  1830  0038D2  5072               	movf	sprintf@prec+1,w,c
  1831  0038D4  E122               	bnz	l3567
  1832  0038D6  0E0D               	movlw	13
  1833  0038D8  5C71               	subwf	sprintf@prec,w,c
  1834  0038DA  B0D8               	btfsc	status,0,c
  1835  0038DC  D01E               	goto	l3567
  1836  0038DE                     u3940:
  1837  0038DE  FFFF               	dw	65535	; assembler added errata NOP
  1838                           
  1839                           ;doprnt.c: 1132: fval += fround((unsigned int)prec);
  1840  0038E0  C06D  F035         	movff	sprintf@fval,___fladd@b
  1841  0038E4  C06E  F036         	movff	sprintf@fval+1,___fladd@b+1
  1842  0038E8  C06F  F037         	movff	sprintf@fval+2,___fladd@b+2
  1843  0038EC  C070  F038         	movff	sprintf@fval+3,___fladd@b+3
  1844  0038F0  5071               	movf	sprintf@prec,w,c
  1845  0038F2  ECB1  F012         	call	_fround
  1846  0038F6  C028  F039         	movff	?_fround,___fladd@a
  1847  0038FA  C029  F03A         	movff	?_fround+1,___fladd@a+1
  1848  0038FE  C02A  F03B         	movff	?_fround+2,___fladd@a+2
  1849  003902  C02B  F03C         	movff	?_fround+3,___fladd@a+3
  1850  003906  EC63  F015         	call	___fladd	;wreg free
  1851  00390A  C035  F06D         	movff	?___fladd,sprintf@fval
  1852  00390E  C036  F06E         	movff	?___fladd+1,sprintf@fval+1
  1853  003912  C037  F06F         	movff	?___fladd+2,sprintf@fval+2
  1854  003916  C038  F070         	movff	?___fladd+3,sprintf@fval+3
  1855  00391A                     l3567:
  1856  00391A  FFFF               	dw	65535	; assembler added errata NOP
  1857                           
  1858                           ;doprnt.c: 1135: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  1859  00391C  BE68               	btfsc	sprintf@eexp+1,7,c
  1860  00391E  D006               	goto	u3950
  1861  003920  5068               	movf	sprintf@eexp+1,w,c
  1862  003922  E131               	bnz	l3575
  1863  003924  0E0A               	movlw	10
  1864  003926  5C67               	subwf	sprintf@eexp,w,c
  1865  003928  B0D8               	btfsc	status,0,c
  1866  00392A  D02C               	goto	u3980
  1867  00392C                     u3950:
  1868  00392C  FFFF               	dw	65535	; assembler added errata NOP
  1869  00392E  C06D  F001         	movff	sprintf@fval,___fleq@ff1
  1870  003932  C06E  F002         	movff	sprintf@fval+1,___fleq@ff1+1
  1871  003936  C06F  F003         	movff	sprintf@fval+2,___fleq@ff1+2
  1872  00393A  C070  F004         	movff	sprintf@fval+3,___fleq@ff1+3
  1873  00393E  0E00               	movlw	0
  1874  003940  6E05               	movwf	___fleq@ff2,c
  1875  003942  0E00               	movlw	0
  1876  003944  6E06               	movwf	___fleq@ff2+1,c
  1877  003946  0E00               	movlw	0
  1878  003948  6E07               	movwf	___fleq@ff2+2,c
  1879  00394A  0E00               	movlw	0
  1880  00394C  6E08               	movwf	___fleq@ff2+3,c
  1881  00394E  ECC1  F00D         	call	___fleq	;wreg free
  1882  003952  B0D8               	btfsc	status,0,c
  1883  003954  D062               	goto	l3589
  1884  003956  C06D  F031         	movff	sprintf@fval,___fltol@f1
  1885  00395A  C06E  F032         	movff	sprintf@fval+1,___fltol@f1+1
  1886  00395E  C06F  F033         	movff	sprintf@fval+2,___fltol@f1+2
  1887  003962  C070  F034         	movff	sprintf@fval+3,___fltol@f1+3
  1888  003966  EC58  F00E         	call	___fltol	;wreg free
  1889  00396A  5031               	movf	?___fltol,w,c
  1890  00396C  1032               	iorwf	?___fltol+1,w,c
  1891  00396E  1033               	iorwf	?___fltol+2,w,c
  1892  003970  1034               	iorwf	?___fltol+3,w,c
  1893  003972  B4D8               	btfsc	status,2,c
  1894  003974  BE68               	btfsc	sprintf@eexp+1,7,c
  1895  003976  D051               	goto	l3589
  1896  003978  5068               	movf	sprintf@eexp+1,w,c
  1897  00397A  E104               	bnz	u3980
  1898  00397C  0E02               	movlw	2
  1899  00397E  5C67               	subwf	sprintf@eexp,w,c
  1900  003980  A0D8               	btfss	status,0,c
  1901  003982  D04B               	goto	l3589
  1902  003984                     u3980:
  1903  003984  FFFF               	dw	65535	; assembler added errata NOP
  1904  003986                     l3575:
  1905                           
  1906                           ;doprnt.c: 1139: if(tmpval.integ < 4.294967296){
  1907  003986  C063  F001         	movff	sprintf@tmpval,___flge@ff1
  1908  00398A  C064  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  1909  00398E  C065  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  1910  003992  C066  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  1911  003996  0E5F               	movlw	95
  1912  003998  6E05               	movwf	___flge@ff2,c
  1913  00399A  0E70               	movlw	112
  1914  00399C  6E06               	movwf	___flge@ff2+1,c
  1915  00399E  0E89               	movlw	137
  1916  0039A0  6E07               	movwf	___flge@ff2+2,c
  1917  0039A2  0E40               	movlw	64
  1918  0039A4  6E08               	movwf	___flge@ff2+3,c
  1919  0039A6  ECC2  F00E         	call	___flge	;wreg free
  1920  0039AA  B0D8               	btfsc	status,0,c
  1921  0039AC  D002               	goto	l3579
  1922                           
  1923                           ;doprnt.c: 1140: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1924  0039AE  0EF7               	movlw	247
  1925  0039B0  D002               	goto	L3
  1926  0039B2                     l3579:
  1927  0039B2  FFFF               	dw	65535	; assembler added errata NOP
  1928                           
  1929                           ;doprnt.c: 1142: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1930  0039B4  0EF8               	movlw	248
  1931  0039B6                     L3:
  1932  0039B6  FFFF               	dw	65535	; assembler added errata NOP
  1933  0039B8  2667               	addwf	sprintf@eexp,f,c
  1934  0039BA  0EFF               	movlw	255
  1935  0039BC  2268               	addwfc	sprintf@eexp+1,f,c
  1936                           
  1937                           ;doprnt.c: 1145: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  1938  0039BE  5067               	movf	sprintf@eexp,w,c
  1939  0039C0  ECC6  F018         	call	_scale
  1940  0039C4  C028  F063         	movff	?_scale,sprintf@tmpval
  1941  0039C8  C029  F064         	movff	?_scale+1,sprintf@tmpval+1
  1942  0039CC  C02A  F065         	movff	?_scale+2,sprintf@tmpval+2
  1943  0039D0  C02B  F066         	movff	?_scale+3,sprintf@tmpval+3
  1944  0039D4  C06D  F001         	movff	sprintf@fval,__div_to_l_@f1
  1945  0039D8  C06E  F002         	movff	sprintf@fval+1,__div_to_l_@f1+1
  1946  0039DC  C06F  F003         	movff	sprintf@fval+2,__div_to_l_@f1+2
  1947  0039E0  C070  F004         	movff	sprintf@fval+3,__div_to_l_@f1+3
  1948  0039E4  C063  F005         	movff	sprintf@tmpval,__div_to_l_@f2
  1949  0039E8  C064  F006         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  1950  0039EC  C065  F007         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  1951  0039F0  C066  F008         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  1952  0039F4  ECA5  F00F         	call	__div_to_l_	;wreg free
  1953  0039F8  C001  F05F         	movff	?__div_to_l_,sprintf@val
  1954  0039FC  C002  F060         	movff	?__div_to_l_+1,sprintf@val+1
  1955  003A00  C003  F061         	movff	?__div_to_l_+2,sprintf@val+2
  1956  003A04  C004  F062         	movff	?__div_to_l_+3,sprintf@val+3
  1957                           
  1958                           ;doprnt.c: 1148: fval = 0.0;
  1959  003A08  0E00               	movlw	0
  1960  003A0A  6E6D               	movwf	sprintf@fval,c
  1961  003A0C  0E00               	movlw	0
  1962  003A0E  6E6E               	movwf	sprintf@fval+1,c
  1963  003A10  0E00               	movlw	0
  1964  003A12  6E6F               	movwf	sprintf@fval+2,c
  1965  003A14  0E00               	movlw	0
  1966  003A16  6E70               	movwf	sprintf@fval+3,c
  1967                           
  1968                           ;doprnt.c: 1149: } else {
  1969  003A18  D03C               	goto	l3593
  1970  003A1A                     l3589:
  1971  003A1A  FFFF               	dw	65535	; assembler added errata NOP
  1972                           
  1973                           ;doprnt.c: 1150: val = (unsigned long)fval;
  1974  003A1C  C06D  F031         	movff	sprintf@fval,___fltol@f1
  1975  003A20  C06E  F032         	movff	sprintf@fval+1,___fltol@f1+1
  1976  003A24  C06F  F033         	movff	sprintf@fval+2,___fltol@f1+2
  1977  003A28  C070  F034         	movff	sprintf@fval+3,___fltol@f1+3
  1978  003A2C  EC58  F00E         	call	___fltol	;wreg free
  1979  003A30  C031  F05F         	movff	?___fltol,sprintf@val
  1980  003A34  C032  F060         	movff	?___fltol+1,sprintf@val+1
  1981  003A38  C033  F061         	movff	?___fltol+2,sprintf@val+2
  1982  003A3C  C034  F062         	movff	?___fltol+3,sprintf@val+3
  1983                           
  1984                           ;doprnt.c: 1151: fval -= (double)val;
  1985  003A40  C06D  F045         	movff	sprintf@fval,___flsub@b
  1986  003A44  C06E  F046         	movff	sprintf@fval+1,___flsub@b+1
  1987  003A48  C06F  F047         	movff	sprintf@fval+2,___flsub@b+2
  1988  003A4C  C070  F048         	movff	sprintf@fval+3,___flsub@b+3
  1989  003A50  C05F  F001         	movff	sprintf@val,___xxtofl@val
  1990  003A54  C060  F002         	movff	sprintf@val+1,___xxtofl@val+1
  1991  003A58  C061  F003         	movff	sprintf@val+2,___xxtofl@val+2
  1992  003A5C  C062  F004         	movff	sprintf@val+3,___xxtofl@val+3
  1993  003A60  0E00               	movlw	0
  1994  003A62  ECB6  F010         	call	___xxtofl
  1995  003A66  C001  F049         	movff	?___xxtofl,___flsub@a
  1996  003A6A  C002  F04A         	movff	?___xxtofl+1,___flsub@a+1
  1997  003A6E  C003  F04B         	movff	?___xxtofl+2,___flsub@a+2
  1998  003A72  C004  F04C         	movff	?___xxtofl+3,___flsub@a+3
  1999  003A76  ECC4  F00B         	call	___flsub	;wreg free
  2000  003A7A  C045  F06D         	movff	?___flsub,sprintf@fval
  2001  003A7E  C046  F06E         	movff	?___flsub+1,sprintf@fval+1
  2002  003A82  C047  F06F         	movff	?___flsub+2,sprintf@fval+2
  2003  003A86  C048  F070         	movff	?___flsub+3,sprintf@fval+3
  2004                           
  2005                           ;doprnt.c: 1152: eexp = 0;
  2006  003A8A  0E00               	movlw	0
  2007  003A8C  6E68               	movwf	sprintf@eexp+1,c
  2008  003A8E  0E00               	movlw	0
  2009  003A90  6E67               	movwf	sprintf@eexp,c
  2010  003A92                     l3593:
  2011  003A92  FFFF               	dw	65535	; assembler added errata NOP
  2012                           
  2013                           ;doprnt.c: 1153: };doprnt.c: 1155: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  2014  003A94  0E01               	movlw	1
  2015  003A96  6E73               	movwf	sprintf@c,c
  2016  003A98                     l3599:
  2017  003A98  FFFF               	dw	65535	; assembler added errata NOP
  2018                           
  2019                           ;doprnt.c: 1156: if(val < dpowers[c])
  2020  003A9A  5073               	movf	sprintf@c,w,c
  2021  003A9C  0D04               	mullw	4
  2022  003A9E  0E31               	movlw	low _dpowers
  2023  003AA0  24F3               	addwf	prodl,w,c
  2024  003AA2  6EF6               	movwf	tblptrl,c
  2025  003AA4  0E7F               	movlw	high _dpowers
  2026  003AA6  20F4               	addwfc	prodh,w,c
  2027  003AA8  6EF7               	movwf	tblptrh,c
  2028  003AAA                     	if	0	;There are less than 3 active tblptr bytes
  2029  003AAA                     	endif
  2030  003AAA  0009               	tblrd		*+
  2031  003AAC  FFFF               	dw	65535	; errata NOP
  2032  003AAE  50F5               	movf	tablat,w,c
  2033  003AB0  5C5F               	subwf	sprintf@val,w,c
  2034  003AB2  0009               	tblrd		*+
  2035  003AB4  FFFF               	dw	65535	; errata NOP
  2036  003AB6  50F5               	movf	tablat,w,c
  2037  003AB8  5860               	subwfb	sprintf@val+1,w,c
  2038  003ABA  0009               	tblrd		*+
  2039  003ABC  FFFF               	dw	65535	; errata NOP
  2040  003ABE  50F5               	movf	tablat,w,c
  2041  003AC0  5861               	subwfb	sprintf@val+2,w,c
  2042  003AC2  0009               	tblrd		*+
  2043  003AC4  FFFF               	dw	65535	; errata NOP
  2044  003AC6  50F5               	movf	tablat,w,c
  2045  003AC8  5862               	subwfb	sprintf@val+3,w,c
  2046  003ACA  A0D8               	btfss	status,0,c
  2047  003ACC  D005               	goto	u4010
  2048  003ACE  2A73               	incf	sprintf@c,f,c
  2049  003AD0  0E0A               	movlw	10
  2050  003AD2  1873               	xorwf	sprintf@c,w,c
  2051  003AD4  A4D8               	btfss	status,2,c
  2052  003AD6  D7E0               	goto	l3599
  2053  003AD8                     u4010:
  2054  003AD8  FFFF               	dw	65535	; assembler added errata NOP
  2055                           
  2056                           ;doprnt.c: 1161: width -= prec + c + eexp;
  2057  003ADA  5073               	movf	sprintf@c,w,c
  2058  003ADC  2471               	addwf	sprintf@prec,w,c
  2059  003ADE  6E55               	movwf	??_sprintf& (0+255),c
  2060  003AE0  0E00               	movlw	0
  2061  003AE2  2072               	addwfc	sprintf@prec+1,w,c
  2062  003AE4  6E56               	movwf	(??_sprintf+1)& (0+255),c
  2063  003AE6  5067               	movf	sprintf@eexp,w,c
  2064  003AE8  2655               	addwf	??_sprintf,f,c
  2065  003AEA  5068               	movf	sprintf@eexp+1,w,c
  2066  003AEC  2256               	addwfc	??_sprintf+1,f,c
  2067  003AEE  5055               	movf	??_sprintf,w,c
  2068  003AF0  5E6B               	subwf	sprintf@width,f,c
  2069  003AF2  5056               	movf	??_sprintf+1,w,c
  2070  003AF4  5A6C               	subwfb	sprintf@width+1,f,c
  2071                           
  2072                           ;doprnt.c: 1162: if(;doprnt.c: 1166: prec)
  2073  003AF6  5071               	movf	sprintf@prec,w,c
  2074  003AF8  1072               	iorwf	sprintf@prec+1,w,c
  2075  003AFA  B4D8               	btfsc	status,2,c
  2076  003AFC  D003               	goto	l3611
  2077                           
  2078                           ;doprnt.c: 1167: width--;
  2079  003AFE  066B               	decf	sprintf@width,f,c
  2080  003B00  A0D8               	btfss	status,0,c
  2081  003B02  066C               	decf	sprintf@width+1,f,c
  2082  003B04                     l3611:
  2083  003B04  FFFF               	dw	65535	; assembler added errata NOP
  2084                           
  2085                           ;doprnt.c: 1168: if(flag & 0x03)
  2086  003B06  0E03               	movlw	3
  2087  003B08  1469               	andwf	sprintf@flag,w,c
  2088  003B0A  6E55               	movwf	??_sprintf& (0+255),c
  2089  003B0C  0E00               	movlw	0
  2090  003B0E  146A               	andwf	sprintf@flag+1,w,c
  2091  003B10  6E56               	movwf	(??_sprintf+1)& (0+255),c
  2092  003B12  5055               	movf	??_sprintf,w,c
  2093  003B14  1056               	iorwf	??_sprintf+1,w,c
  2094  003B16  B4D8               	btfsc	status,2,c
  2095  003B18  D003               	goto	l3615
  2096                           
  2097                           ;doprnt.c: 1169: width--;
  2098  003B1A  066B               	decf	sprintf@width,f,c
  2099  003B1C  A0D8               	btfss	status,0,c
  2100  003B1E  066C               	decf	sprintf@width+1,f,c
  2101  003B20                     l3615:
  2102  003B20  FFFF               	dw	65535	; assembler added errata NOP
  2103                           
  2104                           ;doprnt.c: 1172: if(flag & 0x04) {
  2105  003B22  A469               	btfss	sprintf@flag,2,c
  2106  003B24  D034               	goto	l3637
  2107                           
  2108                           ;doprnt.c: 1176: if(flag & 0x03)
  2109  003B26  0E03               	movlw	3
  2110  003B28  1469               	andwf	sprintf@flag,w,c
  2111  003B2A  6E55               	movwf	??_sprintf& (0+255),c
  2112  003B2C  0E00               	movlw	0
  2113  003B2E  146A               	andwf	sprintf@flag+1,w,c
  2114  003B30  6E56               	movwf	(??_sprintf+1)& (0+255),c
  2115  003B32  5055               	movf	??_sprintf,w,c
  2116  003B34  1056               	iorwf	??_sprintf+1,w,c
  2117  003B36  B4D8               	btfsc	status,2,c
  2118  003B38  D015               	goto	l3629
  2119                           
  2120                           ;doprnt.c: 1178: ((*sp++ = ('-')));
  2121  003B3A  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2122  003B3E  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2123  003B42  0E2D               	movlw	45
  2124  003B44  6EDF               	movwf	indf2,c
  2125  003B46  4A4D               	infsnz	sprintf@sp,f,c
  2126  003B48  2A4E               	incf	sprintf@sp+1,f,c
  2127  003B4A  D00C               	goto	l3629
  2128  003B4C                     l3623:
  2129  003B4C  FFFF               	dw	65535	; assembler added errata NOP
  2130                           
  2131                           ;doprnt.c: 1188: ((*sp++ = ('0')));
  2132  003B4E  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2133  003B52  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2134  003B56  0E30               	movlw	48
  2135  003B58  6EDF               	movwf	indf2,c
  2136  003B5A  4A4D               	infsnz	sprintf@sp,f,c
  2137  003B5C  2A4E               	incf	sprintf@sp+1,f,c
  2138                           
  2139                           ;doprnt.c: 1189: width--;
  2140  003B5E  066B               	decf	sprintf@width,f,c
  2141  003B60  A0D8               	btfss	status,0,c
  2142  003B62  066C               	decf	sprintf@width+1,f,c
  2143  003B64                     l3629:
  2144  003B64  FFFF               	dw	65535	; assembler added errata NOP
  2145  003B66  BE6C               	btfsc	sprintf@width+1,7,c
  2146  003B68  D07B               	goto	l3653
  2147  003B6A  506C               	movf	sprintf@width+1,w,c
  2148  003B6C  E1EF               	bnz	l3623
  2149  003B6E  046B               	decf	sprintf@width,w,c
  2150  003B70  A0D8               	btfss	status,0,c
  2151  003B72  D076               	goto	l3653
  2152  003B74  D7EB               	goto	l3623
  2153  003B76                     l3631:
  2154  003B76  FFFF               	dw	65535	; assembler added errata NOP
  2155                           
  2156                           ;doprnt.c: 1200: ((*sp++ = (' ')));
  2157  003B78  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2158  003B7C  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2159  003B80  0E20               	movlw	32
  2160  003B82  6EDF               	movwf	indf2,c
  2161  003B84  4A4D               	infsnz	sprintf@sp,f,c
  2162  003B86  2A4E               	incf	sprintf@sp+1,f,c
  2163                           
  2164                           ;doprnt.c: 1201: width--;
  2165  003B88  066B               	decf	sprintf@width,f,c
  2166  003B8A  A0D8               	btfss	status,0,c
  2167  003B8C  066C               	decf	sprintf@width+1,f,c
  2168  003B8E                     l3637:
  2169  003B8E  FFFF               	dw	65535	; assembler added errata NOP
  2170  003B90  BE6C               	btfsc	sprintf@width+1,7,c
  2171  003B92  D005               	goto	u4070
  2172  003B94  506C               	movf	sprintf@width+1,w,c
  2173  003B96  E1EF               	bnz	l3631
  2174  003B98  046B               	decf	sprintf@width,w,c
  2175  003B9A  B0D8               	btfsc	status,0,c
  2176  003B9C  D7EC               	goto	l3631
  2177  003B9E                     u4070:
  2178  003B9E  FFFF               	dw	65535	; assembler added errata NOP
  2179                           
  2180                           ;doprnt.c: 1202: };doprnt.c: 1207: if(flag & 0x03)
  2181  003BA0  0E03               	movlw	3
  2182  003BA2  1469               	andwf	sprintf@flag,w,c
  2183  003BA4  6E55               	movwf	??_sprintf& (0+255),c
  2184  003BA6  0E00               	movlw	0
  2185  003BA8  146A               	andwf	sprintf@flag+1,w,c
  2186  003BAA  6E56               	movwf	(??_sprintf+1)& (0+255),c
  2187  003BAC  5055               	movf	??_sprintf,w,c
  2188  003BAE  1056               	iorwf	??_sprintf+1,w,c
  2189  003BB0  B4D8               	btfsc	status,2,c
  2190  003BB2  D056               	goto	l3653
  2191                           
  2192                           ;doprnt.c: 1209: ((*sp++ = ('-')));
  2193  003BB4  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2194  003BB8  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2195  003BBC  0E2D               	movlw	45
  2196  003BBE  FFFF               	dw	65535	; assembler added errata NOP
  2197  003BC0  6EDF               	movwf	indf2,c
  2198  003BC2  4A4D               	infsnz	sprintf@sp,f,c
  2199  003BC4  2A4E               	incf	sprintf@sp+1,f,c
  2200  003BC6  D04C               	goto	l3653
  2201  003BC8                     l3645:
  2202  003BC8  FFFF               	dw	65535	; assembler added errata NOP
  2203                           
  2204                           ;doprnt.c: 1219: {;doprnt.c: 1220: tmpval.vd = val/dpowers[c];
  2205  003BCA  C05F  F001         	movff	sprintf@val,___lldiv@dividend
  2206  003BCE  C060  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  2207  003BD2  C061  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  2208  003BD6  C062  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  2209  003BDA  5073               	movf	sprintf@c,w,c
  2210  003BDC  0D04               	mullw	4
  2211  003BDE  0E31               	movlw	low _dpowers
  2212  003BE0  24F3               	addwf	prodl,w,c
  2213  003BE2  6EF6               	movwf	tblptrl,c
  2214  003BE4  0E7F               	movlw	high _dpowers
  2215  003BE6  20F4               	addwfc	prodh,w,c
  2216  003BE8  6EF7               	movwf	tblptrh,c
  2217  003BEA                     	if	0	;There are less than 3 active tblptr bytes
  2218  003BEA                     	endif
  2219  003BEA  0009               	tblrd		*+
  2220  003BEC  FFFF               	dw	65535	; errata NOP
  2221  003BEE  CFF5 F005          	movff	tablat,___lldiv@divisor
  2222  003BF2  0009               	tblrd		*+
  2223  003BF4  FFFF               	dw	65535	; errata NOP
  2224  003BF6  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2225  003BFA  0009               	tblrd		*+
  2226  003BFC  FFFF               	dw	65535	; errata NOP
  2227  003BFE  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2228  003C02  000A               	tblrd		*-
  2229  003C04  FFFF               	dw	65535	; errata NOP
  2230  003C06  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2231  003C0A  EC79  F00D         	call	___lldiv	;wreg free
  2232  003C0E  C001  F063         	movff	?___lldiv,sprintf@tmpval
  2233  003C12  C002  F064         	movff	?___lldiv+1,sprintf@tmpval+1
  2234  003C16  C003  F065         	movff	?___lldiv+2,sprintf@tmpval+2
  2235  003C1A  C004  F066         	movff	?___lldiv+3,sprintf@tmpval+3
  2236                           
  2237                           ;doprnt.c: 1221: tmpval.vd %= 10;
  2238  003C1E  C063  F001         	movff	sprintf@tmpval,___llmod@dividend
  2239  003C22  C064  F002         	movff	sprintf@tmpval+1,___llmod@dividend+1
  2240  003C26  C065  F003         	movff	sprintf@tmpval+2,___llmod@dividend+2
  2241  003C2A  C066  F004         	movff	sprintf@tmpval+3,___llmod@dividend+3
  2242  003C2E  0E0A               	movlw	10
  2243  003C30  6E05               	movwf	___llmod@divisor,c
  2244  003C32  0E00               	movlw	0
  2245  003C34  6E06               	movwf	___llmod@divisor+1,c
  2246  003C36  0E00               	movlw	0
  2247  003C38  6E07               	movwf	___llmod@divisor+2,c
  2248  003C3A  0E00               	movlw	0
  2249  003C3C  6E08               	movwf	___llmod@divisor+3,c
  2250  003C3E  ECFD  F00C         	call	___llmod	;wreg free
  2251  003C42  C001  F063         	movff	?___llmod,sprintf@tmpval
  2252  003C46  C002  F064         	movff	?___llmod+1,sprintf@tmpval+1
  2253  003C4A  C003  F065         	movff	?___llmod+2,sprintf@tmpval+2
  2254  003C4E  C004  F066         	movff	?___llmod+3,sprintf@tmpval+3
  2255                           
  2256                           ;doprnt.c: 1222: ((*sp++ = ('0' + tmpval.vd)));
  2257  003C52  5063               	movf	sprintf@tmpval,w,c
  2258  003C54  0F30               	addlw	48
  2259  003C56  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2260  003C5A  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2261  003C5E  D7AF               	goto	L4
  2262  003C60                     l3653:
  2263  003C60  FFFF               	dw	65535	; assembler added errata NOP
  2264  003C62  0673               	decf	sprintf@c,f,c
  2265  003C64  2873               	incf	sprintf@c,w,c
  2266  003C66  B4D8               	btfsc	status,2,c
  2267  003C68  D00D               	goto	l3661
  2268  003C6A  D7AE               	goto	l3645
  2269  003C6C                     l3655:
  2270  003C6C  FFFF               	dw	65535	; assembler added errata NOP
  2271                           
  2272                           ;doprnt.c: 1227: ((*sp++ = ('0')));
  2273  003C6E  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2274  003C72  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2275  003C76  0E30               	movlw	48
  2276  003C78  6EDF               	movwf	indf2,c
  2277  003C7A  4A4D               	infsnz	sprintf@sp,f,c
  2278  003C7C  2A4E               	incf	sprintf@sp+1,f,c
  2279                           
  2280                           ;doprnt.c: 1228: eexp--;
  2281  003C7E  0667               	decf	sprintf@eexp,f,c
  2282  003C80  A0D8               	btfss	status,0,c
  2283  003C82  0668               	decf	sprintf@eexp+1,f,c
  2284  003C84                     l3661:
  2285  003C84  FFFF               	dw	65535	; assembler added errata NOP
  2286  003C86  BE68               	btfsc	sprintf@eexp+1,7,c
  2287  003C88  D005               	goto	u4100
  2288  003C8A  5068               	movf	sprintf@eexp+1,w,c
  2289  003C8C  E1EF               	bnz	l3655
  2290  003C8E  0467               	decf	sprintf@eexp,w,c
  2291  003C90  B0D8               	btfsc	status,0,c
  2292  003C92  D7EC               	goto	l3655
  2293  003C94                     u4100:
  2294  003C94  FFFF               	dw	65535	; assembler added errata NOP
  2295                           
  2296                           ;doprnt.c: 1229: };doprnt.c: 1230: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
  2297  003C96  BE72               	btfsc	sprintf@prec+1,7,c
  2298  003C98  D009               	goto	l206
  2299  003C9A  5072               	movf	sprintf@prec+1,w,c
  2300  003C9C  E104               	bnz	u4110
  2301  003C9E  0E09               	movlw	9
  2302  003CA0  5C71               	subwf	sprintf@prec,w,c
  2303  003CA2  A0D8               	btfss	status,0,c
  2304  003CA4  D003               	goto	l206
  2305  003CA6                     u4110:
  2306                           
  2307                           ;doprnt.c: 1231: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2308  003CA6  0E08               	movlw	8
  2309  003CA8  6E73               	movwf	sprintf@c,c
  2310  003CAA  D003               	goto	l3667
  2311  003CAC                     l206:
  2312  003CAC  FFFF               	dw	65535	; assembler added errata NOP
  2313                           
  2314                           ;doprnt.c: 1232: else;doprnt.c: 1233: c = (char)prec;
  2315  003CAE  C071  F073         	movff	sprintf@prec,sprintf@c
  2316  003CB2                     l3667:
  2317  003CB2  FFFF               	dw	65535	; assembler added errata NOP
  2318                           
  2319                           ;doprnt.c: 1234: prec -= (int)c;
  2320  003CB4  5073               	movf	sprintf@c,w,c
  2321  003CB6  5E71               	subwf	sprintf@prec,f,c
  2322  003CB8  0E00               	movlw	0
  2323  003CBA  5A72               	subwfb	sprintf@prec+1,f,c
  2324                           
  2325                           ;doprnt.c: 1238: if(c)
  2326  003CBC  5073               	movf	sprintf@c,w,c
  2327  003CBE  B4D8               	btfsc	status,2,c
  2328  003CC0  D008               	goto	l3675
  2329                           
  2330                           ;doprnt.c: 1240: ((*sp++ = ('.')));
  2331  003CC2  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2332  003CC6  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2333  003CCA  0E2E               	movlw	46
  2334  003CCC  6EDF               	movwf	indf2,c
  2335  003CCE  4A4D               	infsnz	sprintf@sp,f,c
  2336  003CD0  2A4E               	incf	sprintf@sp+1,f,c
  2337  003CD2                     l3675:
  2338  003CD2  FFFF               	dw	65535	; assembler added errata NOP
  2339                           
  2340                           ;doprnt.c: 1246: val = (unsigned long)(fval * scale((signed char)c));
  2341  003CD4  5073               	movf	sprintf@c,w,c
  2342  003CD6  ECC6  F018         	call	_scale
  2343  003CDA  C028  F059         	movff	?_scale,_sprintf$816
  2344  003CDE  C029  F05A         	movff	?_scale+1,_sprintf$816+1
  2345  003CE2  C02A  F05B         	movff	?_scale+2,_sprintf$816+2
  2346  003CE6  C02B  F05C         	movff	?_scale+3,_sprintf$816+3
  2347                           
  2348                           ;doprnt.c: 1246: val = (unsigned long)(fval * scale((signed char)c));
  2349  003CEA  C06D  F013         	movff	sprintf@fval,___flmul@a
  2350  003CEE  C06E  F014         	movff	sprintf@fval+1,___flmul@a+1
  2351  003CF2  C06F  F015         	movff	sprintf@fval+2,___flmul@a+2
  2352  003CF6  C070  F016         	movff	sprintf@fval+3,___flmul@a+3
  2353  003CFA  C059  F00F         	movff	_sprintf$816,___flmul@b
  2354  003CFE  C05A  F010         	movff	_sprintf$816+1,___flmul@b+1
  2355  003D02  C05B  F011         	movff	_sprintf$816+2,___flmul@b+2
  2356  003D06  C05C  F012         	movff	_sprintf$816+3,___flmul@b+3
  2357  003D0A  EC05  F017         	call	___flmul	;wreg free
  2358  003D0E  C00F  F031         	movff	?___flmul,___fltol@f1
  2359  003D12  C010  F032         	movff	?___flmul+1,___fltol@f1+1
  2360  003D16  C011  F033         	movff	?___flmul+2,___fltol@f1+2
  2361  003D1A  C012  F034         	movff	?___flmul+3,___fltol@f1+3
  2362  003D1E  EC58  F00E         	call	___fltol	;wreg free
  2363  003D22  C031  F05F         	movff	?___fltol,sprintf@val
  2364  003D26  C032  F060         	movff	?___fltol+1,sprintf@val+1
  2365  003D2A  C033  F061         	movff	?___fltol+2,sprintf@val+2
  2366  003D2E  C034  F062         	movff	?___fltol+3,sprintf@val+3
  2367                           
  2368                           ;doprnt.c: 1247: while(c--) {
  2369  003D32  D078               	goto	l3689
  2370  003D34                     l3679:
  2371  003D34  FFFF               	dw	65535	; assembler added errata NOP
  2372                           
  2373                           ;doprnt.c: 1248: tmpval.vd = val/dpowers[c];
  2374  003D36  C05F  F001         	movff	sprintf@val,___lldiv@dividend
  2375  003D3A  C060  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  2376  003D3E  C061  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  2377  003D42  C062  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  2378  003D46  5073               	movf	sprintf@c,w,c
  2379  003D48  0D04               	mullw	4
  2380  003D4A  0E31               	movlw	low _dpowers
  2381  003D4C  24F3               	addwf	prodl,w,c
  2382  003D4E  6EF6               	movwf	tblptrl,c
  2383  003D50  0E7F               	movlw	high _dpowers
  2384  003D52  20F4               	addwfc	prodh,w,c
  2385  003D54  6EF7               	movwf	tblptrh,c
  2386  003D56                     	if	0	;There are less than 3 active tblptr bytes
  2387  003D56                     	endif
  2388  003D56  0009               	tblrd		*+
  2389  003D58  FFFF               	dw	65535	; errata NOP
  2390  003D5A  CFF5 F005          	movff	tablat,___lldiv@divisor
  2391  003D5E  0009               	tblrd		*+
  2392  003D60  FFFF               	dw	65535	; errata NOP
  2393  003D62  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2394  003D66  0009               	tblrd		*+
  2395  003D68  FFFF               	dw	65535	; errata NOP
  2396  003D6A  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2397  003D6E  000A               	tblrd		*-
  2398  003D70  FFFF               	dw	65535	; errata NOP
  2399  003D72  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2400  003D76  EC79  F00D         	call	___lldiv	;wreg free
  2401  003D7A  C001  F063         	movff	?___lldiv,sprintf@tmpval
  2402  003D7E  C002  F064         	movff	?___lldiv+1,sprintf@tmpval+1
  2403  003D82  C003  F065         	movff	?___lldiv+2,sprintf@tmpval+2
  2404  003D86  C004  F066         	movff	?___lldiv+3,sprintf@tmpval+3
  2405                           
  2406                           ;doprnt.c: 1249: tmpval.vd %= 10;
  2407  003D8A  C063  F001         	movff	sprintf@tmpval,___llmod@dividend
  2408  003D8E  C064  F002         	movff	sprintf@tmpval+1,___llmod@dividend+1
  2409  003D92  C065  F003         	movff	sprintf@tmpval+2,___llmod@dividend+2
  2410  003D96  C066  F004         	movff	sprintf@tmpval+3,___llmod@dividend+3
  2411  003D9A  0E0A               	movlw	10
  2412  003D9C  6E05               	movwf	___llmod@divisor,c
  2413  003D9E  0E00               	movlw	0
  2414  003DA0  6E06               	movwf	___llmod@divisor+1,c
  2415  003DA2  0E00               	movlw	0
  2416  003DA4  6E07               	movwf	___llmod@divisor+2,c
  2417  003DA6  0E00               	movlw	0
  2418  003DA8  6E08               	movwf	___llmod@divisor+3,c
  2419  003DAA  ECFD  F00C         	call	___llmod	;wreg free
  2420  003DAE  C001  F063         	movff	?___llmod,sprintf@tmpval
  2421  003DB2  C002  F064         	movff	?___llmod+1,sprintf@tmpval+1
  2422  003DB6  C003  F065         	movff	?___llmod+2,sprintf@tmpval+2
  2423  003DBA  C004  F066         	movff	?___llmod+3,sprintf@tmpval+3
  2424                           
  2425                           ;doprnt.c: 1250: ((*sp++ = ('0' + tmpval.vd)));
  2426  003DBE  5063               	movf	sprintf@tmpval,w,c
  2427  003DC0  0F30               	addlw	48
  2428  003DC2  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2429  003DC6  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2430  003DCA  6EDF               	movwf	indf2,c
  2431  003DCC  4A4D               	infsnz	sprintf@sp,f,c
  2432  003DCE  2A4E               	incf	sprintf@sp+1,f,c
  2433                           
  2434                           ;doprnt.c: 1251: val %= dpowers[c];
  2435  003DD0  C05F  F001         	movff	sprintf@val,___llmod@dividend
  2436  003DD4  C060  F002         	movff	sprintf@val+1,___llmod@dividend+1
  2437  003DD8  C061  F003         	movff	sprintf@val+2,___llmod@dividend+2
  2438  003DDC  C062  F004         	movff	sprintf@val+3,___llmod@dividend+3
  2439  003DE0  5073               	movf	sprintf@c,w,c
  2440  003DE2  0D04               	mullw	4
  2441  003DE4  0E31               	movlw	low _dpowers
  2442  003DE6  24F3               	addwf	prodl,w,c
  2443  003DE8  6EF6               	movwf	tblptrl,c
  2444  003DEA  0E7F               	movlw	high _dpowers
  2445  003DEC  20F4               	addwfc	prodh,w,c
  2446  003DEE  6EF7               	movwf	tblptrh,c
  2447  003DF0                     	if	0	;There are less than 3 active tblptr bytes
  2448  003DF0                     	endif
  2449  003DF0  0009               	tblrd		*+
  2450  003DF2  FFFF               	dw	65535	; errata NOP
  2451  003DF4  CFF5 F005          	movff	tablat,___llmod@divisor
  2452  003DF8  0009               	tblrd		*+
  2453  003DFA  FFFF               	dw	65535	; errata NOP
  2454  003DFC  CFF5 F006          	movff	tablat,___llmod@divisor+1
  2455  003E00  0009               	tblrd		*+
  2456  003E02  FFFF               	dw	65535	; errata NOP
  2457  003E04  CFF5 F007          	movff	tablat,___llmod@divisor+2
  2458  003E08  000A               	tblrd		*-
  2459  003E0A  FFFF               	dw	65535	; errata NOP
  2460  003E0C  CFF5 F008          	movff	tablat,___llmod@divisor+3
  2461  003E10  ECFD  F00C         	call	___llmod	;wreg free
  2462  003E14  C001  F05F         	movff	?___llmod,sprintf@val
  2463  003E18  C002  F060         	movff	?___llmod+1,sprintf@val+1
  2464  003E1C  C003  F061         	movff	?___llmod+2,sprintf@val+2
  2465  003E20  C004  F062         	movff	?___llmod+3,sprintf@val+3
  2466  003E24                     l3689:
  2467  003E24  FFFF               	dw	65535	; assembler added errata NOP
  2468  003E26  0673               	decf	sprintf@c,f,c
  2469  003E28  2873               	incf	sprintf@c,w,c
  2470  003E2A  B4D8               	btfsc	status,2,c
  2471  003E2C  D00D               	goto	l3697
  2472  003E2E  D782               	goto	l3679
  2473  003E30                     l3691:
  2474  003E30  FFFF               	dw	65535	; assembler added errata NOP
  2475                           
  2476                           ;doprnt.c: 1255: ((*sp++ = ('0')));
  2477  003E32  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2478  003E36  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2479  003E3A  0E30               	movlw	48
  2480  003E3C  6EDF               	movwf	indf2,c
  2481  003E3E  4A4D               	infsnz	sprintf@sp,f,c
  2482  003E40  2A4E               	incf	sprintf@sp+1,f,c
  2483                           
  2484                           ;doprnt.c: 1256: prec--;
  2485  003E42  0671               	decf	sprintf@prec,f,c
  2486  003E44  A0D8               	btfss	status,0,c
  2487  003E46  0672               	decf	sprintf@prec+1,f,c
  2488  003E48                     l3697:
  2489  003E48  FFFF               	dw	65535	; assembler added errata NOP
  2490  003E4A  5071               	movf	sprintf@prec,w,c
  2491  003E4C  1072               	iorwf	sprintf@prec+1,w,c
  2492  003E4E  B4D8               	btfsc	status,2,c
  2493  003E50  D0BF               	goto	l3763
  2494  003E52  D7EE               	goto	l3691
  2495  003E54                     l3699:
  2496  003E54  FFFF               	dw	65535	; assembler added errata NOP
  2497                           
  2498                           ;doprnt.c: 1265: };doprnt.c: 1309: if(prec == 0 && val == 0)
  2499  003E56  5071               	movf	sprintf@prec,w,c
  2500  003E58  1072               	iorwf	sprintf@prec+1,w,c
  2501  003E5A  A4D8               	btfss	status,2,c
  2502  003E5C  D008               	goto	l3705
  2503  003E5E  505F               	movf	sprintf@val,w,c
  2504  003E60  1060               	iorwf	sprintf@val+1,w,c
  2505  003E62  1061               	iorwf	sprintf@val+2,w,c
  2506  003E64  1062               	iorwf	sprintf@val+3,w,c
  2507  003E66  A4D8               	btfss	status,2,c
  2508  003E68  D002               	goto	l3705
  2509                           
  2510                           ;doprnt.c: 1310: prec++;
  2511  003E6A  4A71               	infsnz	sprintf@prec,f,c
  2512  003E6C  2A72               	incf	sprintf@prec+1,f,c
  2513  003E6E                     l3705:
  2514  003E6E  FFFF               	dw	65535	; assembler added errata NOP
  2515                           
  2516                           ;doprnt.c: 1358: if(c < prec)
  2517  003E70  5073               	movf	sprintf@c,w,c
  2518  003E72  6E55               	movwf	??_sprintf& (0+255),c
  2519  003E74  6A56               	clrf	(??_sprintf+1)& (0+255),c
  2520  003E76  5071               	movf	sprintf@prec,w,c
  2521  003E78  5C55               	subwf	??_sprintf,w,c
  2522  003E7A  5056               	movf	??_sprintf+1,w,c
  2523  003E7C  0A80               	xorlw	128
  2524  003E7E  6E57               	movwf	(??_sprintf+2)& (0+255),c
  2525  003E80  5072               	movf	sprintf@prec+1,w,c
  2526  003E82  0A80               	xorlw	128
  2527  003E84  5857               	subwfb	(??_sprintf+2)& (0+255),w,c
  2528  003E86  B0D8               	btfsc	status,0,c
  2529  003E88  D003               	goto	l3709
  2530                           
  2531                           ;doprnt.c: 1359: c = prec;
  2532  003E8A  C071  F073         	movff	sprintf@prec,sprintf@c
  2533  003E8E  D011               	goto	l3713
  2534  003E90                     l3709:
  2535  003E90  FFFF               	dw	65535	; assembler added errata NOP
  2536                           
  2537                           ;doprnt.c: 1360: else if(prec < c)
  2538  003E92  5073               	movf	sprintf@c,w,c
  2539  003E94  6E55               	movwf	??_sprintf& (0+255),c
  2540  003E96  6A56               	clrf	(??_sprintf+1)& (0+255),c
  2541  003E98  5055               	movf	??_sprintf,w,c
  2542  003E9A  5C71               	subwf	sprintf@prec,w,c
  2543  003E9C  5072               	movf	sprintf@prec+1,w,c
  2544  003E9E  0A80               	xorlw	128
  2545  003EA0  6E57               	movwf	(??_sprintf+2)& (0+255),c
  2546  003EA2  5056               	movf	??_sprintf+1,w,c
  2547  003EA4  0A80               	xorlw	128
  2548  003EA6  5857               	subwfb	(??_sprintf+2)& (0+255),w,c
  2549  003EA8  B0D8               	btfsc	status,0,c
  2550  003EAA  D003               	goto	l3713
  2551                           
  2552                           ;doprnt.c: 1361: prec = c;
  2553  003EAC  C073  F071         	movff	sprintf@c,sprintf@prec
  2554  003EB0  6A72               	clrf	sprintf@prec+1,c
  2555  003EB2                     l3713:
  2556  003EB2  FFFF               	dw	65535	; assembler added errata NOP
  2557                           
  2558                           ;doprnt.c: 1364: if(width && flag & 0x03)
  2559  003EB4  506B               	movf	sprintf@width,w,c
  2560  003EB6  106C               	iorwf	sprintf@width+1,w,c
  2561  003EB8  B4D8               	btfsc	status,2,c
  2562  003EBA  D00D               	goto	l3719
  2563  003EBC  0E03               	movlw	3
  2564  003EBE  1469               	andwf	sprintf@flag,w,c
  2565  003EC0  6E55               	movwf	??_sprintf& (0+255),c
  2566  003EC2  0E00               	movlw	0
  2567  003EC4  146A               	andwf	sprintf@flag+1,w,c
  2568  003EC6  6E56               	movwf	(??_sprintf+1)& (0+255),c
  2569  003EC8  5055               	movf	??_sprintf,w,c
  2570  003ECA  1056               	iorwf	??_sprintf+1,w,c
  2571  003ECC  B4D8               	btfsc	status,2,c
  2572  003ECE  D003               	goto	l3719
  2573                           
  2574                           ;doprnt.c: 1365: width--;
  2575  003ED0  066B               	decf	sprintf@width,f,c
  2576  003ED2  A0D8               	btfss	status,0,c
  2577  003ED4  066C               	decf	sprintf@width+1,f,c
  2578  003ED6                     l3719:
  2579  003ED6  FFFF               	dw	65535	; assembler added errata NOP
  2580                           
  2581                           ;doprnt.c: 1367: if(flag & 0x4000) {
  2582  003ED8  AC6A               	btfss	sprintf@flag+1,6,c
  2583  003EDA  D014               	goto	l3727
  2584                           
  2585                           ;doprnt.c: 1368: if(width > prec)
  2586  003EDC  506B               	movf	sprintf@width,w,c
  2587  003EDE  5C71               	subwf	sprintf@prec,w,c
  2588  003EE0  5072               	movf	sprintf@prec+1,w,c
  2589  003EE2  0A80               	xorlw	128
  2590  003EE4  6E55               	movwf	??_sprintf& (0+255),c
  2591  003EE6  506C               	movf	sprintf@width+1,w,c
  2592  003EE8  0A80               	xorlw	128
  2593  003EEA  5855               	subwfb	??_sprintf& (0+255),w,c
  2594  003EEC  B0D8               	btfsc	status,0,c
  2595  003EEE  D005               	goto	l3725
  2596                           
  2597                           ;doprnt.c: 1369: width -= prec;
  2598  003EF0  5071               	movf	sprintf@prec,w,c
  2599  003EF2  5E6B               	subwf	sprintf@width,f,c
  2600  003EF4  5072               	movf	sprintf@prec+1,w,c
  2601  003EF6  5A6C               	subwfb	sprintf@width+1,f,c
  2602  003EF8  D005               	goto	l3727
  2603  003EFA                     l3725:
  2604  003EFA  FFFF               	dw	65535	; assembler added errata NOP
  2605                           
  2606                           ;doprnt.c: 1370: else;doprnt.c: 1371: width = 0;
  2607  003EFC  0E00               	movlw	0
  2608  003EFE  6E6C               	movwf	sprintf@width+1,c
  2609  003F00  0E00               	movlw	0
  2610  003F02  6E6B               	movwf	sprintf@width,c
  2611  003F04                     l3727:
  2612  003F04  FFFF               	dw	65535	; assembler added errata NOP
  2613                           
  2614                           ;doprnt.c: 1372: };doprnt.c: 1400: if(width > c)
  2615  003F06  5073               	movf	sprintf@c,w,c
  2616  003F08  6E55               	movwf	??_sprintf& (0+255),c
  2617  003F0A  6A56               	clrf	(??_sprintf+1)& (0+255),c
  2618  003F0C  506B               	movf	sprintf@width,w,c
  2619  003F0E  5C55               	subwf	??_sprintf,w,c
  2620  003F10  5056               	movf	??_sprintf+1,w,c
  2621  003F12  0A80               	xorlw	128
  2622  003F14  6E57               	movwf	(??_sprintf+2)& (0+255),c
  2623  003F16  506C               	movf	sprintf@width+1,w,c
  2624  003F18  0A80               	xorlw	128
  2625  003F1A  5857               	subwfb	(??_sprintf+2)& (0+255),w,c
  2626  003F1C  B0D8               	btfsc	status,0,c
  2627  003F1E  D005               	goto	l3731
  2628                           
  2629                           ;doprnt.c: 1401: width -= c;
  2630  003F20  5073               	movf	sprintf@c,w,c
  2631  003F22  5E6B               	subwf	sprintf@width,f,c
  2632  003F24  0E00               	movlw	0
  2633  003F26  5A6C               	subwfb	sprintf@width+1,f,c
  2634  003F28  D005               	goto	l3733
  2635  003F2A                     l3731:
  2636  003F2A  FFFF               	dw	65535	; assembler added errata NOP
  2637                           
  2638                           ;doprnt.c: 1402: else;doprnt.c: 1403: width = 0;
  2639  003F2C  0E00               	movlw	0
  2640  003F2E  6E6C               	movwf	sprintf@width+1,c
  2641  003F30  0E00               	movlw	0
  2642  003F32  6E6B               	movwf	sprintf@width,c
  2643  003F34                     l3733:
  2644  003F34  FFFF               	dw	65535	; assembler added errata NOP
  2645                           
  2646                           ;doprnt.c: 1406: if(flag & 0x04) {
  2647  003F36  A469               	btfss	sprintf@flag,2,c
  2648  003F38  D023               	goto	l3749
  2649                           
  2650                           ;doprnt.c: 1411: if(flag & 0x03)
  2651  003F3A  0E03               	movlw	3
  2652  003F3C  1469               	andwf	sprintf@flag,w,c
  2653  003F3E  6E55               	movwf	??_sprintf& (0+255),c
  2654  003F40  0E00               	movlw	0
  2655  003F42  146A               	andwf	sprintf@flag+1,w,c
  2656  003F44  6E56               	movwf	(??_sprintf+1)& (0+255),c
  2657  003F46  5055               	movf	??_sprintf,w,c
  2658  003F48  1056               	iorwf	??_sprintf+1,w,c
  2659  003F4A  B4D8               	btfsc	status,2,c
  2660  003F4C  D008               	goto	l3741
  2661                           
  2662                           ;doprnt.c: 1412: ((*sp++ = ('-')));
  2663  003F4E  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2664  003F52  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2665  003F56  0E2D               	movlw	45
  2666  003F58  6EDF               	movwf	indf2,c
  2667  003F5A  4A4D               	infsnz	sprintf@sp,f,c
  2668  003F5C  2A4E               	incf	sprintf@sp+1,f,c
  2669  003F5E                     l3741:
  2670  003F5E  FFFF               	dw	65535	; assembler added errata NOP
  2671                           
  2672                           ;doprnt.c: 1434: if(width)
  2673  003F60  506B               	movf	sprintf@width,w,c
  2674  003F62  106C               	iorwf	sprintf@width+1,w,c
  2675  003F64  B4D8               	btfsc	status,2,c
  2676  003F66  D034               	goto	l3763
  2677                           
  2678                           ;doprnt.c: 1436: ((*sp++ = ('0')));
  2679  003F68  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2680  003F6C  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2681  003F70  0E30               	movlw	48
  2682  003F72  6EDF               	movwf	indf2,c
  2683  003F74  4A4D               	infsnz	sprintf@sp,f,c
  2684  003F76  2A4E               	incf	sprintf@sp+1,f,c
  2685                           
  2686                           ;doprnt.c: 1437: while(--width);
  2687  003F78  066B               	decf	sprintf@width,f,c
  2688  003F7A  A0D8               	btfss	status,0,c
  2689  003F7C  066C               	decf	sprintf@width+1,f,c
  2690  003F7E  D7EF               	goto	l3741
  2691  003F80                     l3749:
  2692  003F80  FFFF               	dw	65535	; assembler added errata NOP
  2693                           
  2694                           ;doprnt.c: 1441: {;doprnt.c: 1443: if(width;doprnt.c: 1447: )
  2695  003F82  506B               	movf	sprintf@width,w,c
  2696  003F84  106C               	iorwf	sprintf@width+1,w,c
  2697  003F86  B4D8               	btfsc	status,2,c
  2698  003F88  D010               	goto	u4290
  2699  003F8A                     u4280:
  2700  003F8A  FFFF               	dw	65535	; assembler added errata NOP
  2701                           
  2702                           ;doprnt.c: 1449: ((*sp++ = (' ')));
  2703  003F8C  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2704  003F90  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2705  003F94  0E20               	movlw	32
  2706  003F96  6EDF               	movwf	indf2,c
  2707  003F98  4A4D               	infsnz	sprintf@sp,f,c
  2708  003F9A  2A4E               	incf	sprintf@sp+1,f,c
  2709                           
  2710                           ;doprnt.c: 1450: while(--width);
  2711  003F9C  066B               	decf	sprintf@width,f,c
  2712  003F9E  A0D8               	btfss	status,0,c
  2713  003FA0  066C               	decf	sprintf@width+1,f,c
  2714  003FA2  506B               	movf	sprintf@width,w,c
  2715  003FA4  106C               	iorwf	sprintf@width+1,w,c
  2716  003FA6  A4D8               	btfss	status,2,c
  2717  003FA8  D7F0               	goto	u4280
  2718  003FAA                     u4290:
  2719  003FAA  FFFF               	dw	65535	; assembler added errata NOP
  2720                           
  2721                           ;doprnt.c: 1457: if(flag & 0x03)
  2722  003FAC  0E03               	movlw	3
  2723  003FAE  1469               	andwf	sprintf@flag,w,c
  2724  003FB0  6E55               	movwf	??_sprintf& (0+255),c
  2725  003FB2  0E00               	movlw	0
  2726  003FB4  146A               	andwf	sprintf@flag+1,w,c
  2727  003FB6  6E56               	movwf	(??_sprintf+1)& (0+255),c
  2728  003FB8  5055               	movf	??_sprintf,w,c
  2729  003FBA  1056               	iorwf	??_sprintf+1,w,c
  2730  003FBC  B4D8               	btfsc	status,2,c
  2731  003FBE  D008               	goto	l3763
  2732                           
  2733                           ;doprnt.c: 1458: ((*sp++ = ('-')));
  2734  003FC0  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2735  003FC4  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2736  003FC8  0E2D               	movlw	45
  2737  003FCA  6EDF               	movwf	indf2,c
  2738  003FCC  EFE0  F01A         	goto	l3475
  2739  003FD0                     l3763:
  2740  003FD0  FFFF               	dw	65535	; assembler added errata NOP
  2741  003FD2  C04F  FFF6         	movff	sprintf@f,tblptrl
  2742  003FD6  C050  FFF7         	movff	sprintf@f+1,tblptrh
  2743  003FDA  4A4F               	infsnz	sprintf@f,f,c
  2744  003FDC  2A50               	incf	sprintf@f+1,f,c
  2745  003FDE                     	if	0	;tblptru may be non-zero
  2746  003FDE                     	endif
  2747  003FDE                     	if	0	;tblptru may be non-zero
  2748  003FDE                     	endif
  2749  003FDE  0008               	tblrd		*
  2750  003FE0  FFFF               	dw	65535	; errata NOP
  2751  003FE2  CFF5 F073          	movff	tablat,sprintf@c
  2752  003FE6  5073               	movf	sprintf@c,w,c
  2753  003FE8  A4D8               	btfss	status,2,c
  2754  003FEA  EFD5  F01A         	goto	l3471
  2755  003FEE                     u4310:
  2756  003FEE  FFFF               	dw	65535	; assembler added errata NOP
  2757                           
  2758                           ;doprnt.c: 1557: *sp = 0;
  2759  003FF0  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2760  003FF4  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2761  003FF8  0E00               	movlw	0
  2762  003FFA  6EDF               	movwf	indf2,c
  2763  003FFC  0012               	return		;funcret
  2764  003FFE  FFFF               	dw	65535	; errata NOP
  2765  004000                     __end_of_sprintf:
  2766                           	opt callstack 0
  2767                           
  2768 ;; *************** function _scale *****************
  2769 ;; Defined at:
  2770 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;  scl             1    wreg     char 
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;  scl             1   47[COMRAM] char 
  2775 ;; Return value:  Size  Location     Type
  2776 ;;                  4   39[COMRAM] char 
  2777 ;; Registers used:
  2778 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2784 ;;      Params:         4       0       0       0       0       0       0
  2785 ;;      Locals:         5       0       0       0       0       0       0
  2786 ;;      Temps:          0       0       0       0       0       0       0
  2787 ;;      Totals:         9       0       0       0       0       0       0
  2788 ;;Total ram usage:        9 bytes
  2789 ;; Hardware stack levels used:    1
  2790 ;; Hardware stack levels required when called:    1
  2791 ;; This function calls:
  2792 ;;		___awdiv
  2793 ;;		___awmod
  2794 ;;		___flmul
  2795 ;; This function is called by:
  2796 ;;		_sprintf
  2797 ;; This function uses a non-reentrant model
  2798 ;;
  2799                           
  2800                           	psect	text2
  2801  00318C                     __ptext2:
  2802                           	opt callstack 0
  2803  00318C                     _scale:
  2804                           	opt callstack 0
  2805  00318C  FFFF               	dw	65535	; assembler added errata NOP
  2806                           
  2807                           ;incstack = 0
  2808                           ;scale@scl stored from wreg
  2809  00318E  6E30               	movwf	scale@scl,c
  2810                           
  2811                           ;doprnt.c: 436: if(scl < 0) {
  2812  003190  AE30               	btfss	scale@scl,7,c
  2813  003192  D0FB               	goto	l2977
  2814                           
  2815                           ;doprnt.c: 437: scl = -scl;
  2816  003194  6C30               	negf	scale@scl,c
  2817                           
  2818                           ;doprnt.c: 438: if(scl>=110)
  2819  003196  5030               	movf	scale@scl,w,c
  2820  003198  0A80               	xorlw	128
  2821  00319A  0F12               	addlw	-238
  2822  00319C  A0D8               	btfss	status,0,c
  2823  00319E  D08C               	goto	l2967
  2824                           
  2825                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2826  0031A0  0E00               	movlw	0
  2827  0031A2  6E0A               	movwf	___awdiv@divisor+1,c
  2828  0031A4  0E0A               	movlw	10
  2829  0031A6  6E09               	movwf	___awdiv@divisor,c
  2830  0031A8  0E00               	movlw	0
  2831  0031AA  6E04               	movwf	___awmod@divisor+1,c
  2832  0031AC  0E64               	movlw	100
  2833  0031AE  6E03               	movwf	___awmod@divisor,c
  2834  0031B0  5030               	movf	scale@scl,w,c
  2835  0031B2  6E01               	movwf	___awmod@dividend,c
  2836  0031B4  6A02               	clrf	___awmod@dividend+1,c
  2837  0031B6  BE01               	btfsc	___awmod@dividend,7,c
  2838  0031B8  0602               	decf	___awmod@dividend+1,f,c
  2839  0031BA  EC37  F00D         	call	___awmod	;wreg free
  2840  0031BE  C001  F007         	movff	?___awmod,___awdiv@dividend
  2841  0031C2  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2842  0031C6  EC0C  F00E         	call	___awdiv	;wreg free
  2843  0031CA  0E09               	movlw	9
  2844  0031CC  2607               	addwf	?___awdiv,f,c
  2845  0031CE  5007               	movf	?___awdiv,w,c
  2846  0031D0  0D04               	mullw	4
  2847  0031D2  0EFD               	movlw	low __npowers_
  2848  0031D4  24F3               	addwf	prodl,w,c
  2849  0031D6  6EF6               	movwf	tblptrl,c
  2850  0031D8  0E7E               	movlw	high __npowers_
  2851  0031DA  20F4               	addwfc	prodh,w,c
  2852  0031DC  6EF7               	movwf	tblptrh,c
  2853  0031DE                     	if	0	;There are less than 3 active tblptr bytes
  2854  0031DE                     	endif
  2855  0031DE  0009               	tblrd		*+
  2856  0031E0  FFFF               	dw	65535	; errata NOP
  2857  0031E2  CFF5 F013          	movff	tablat,___flmul@a
  2858  0031E6  0009               	tblrd		*+
  2859  0031E8  FFFF               	dw	65535	; errata NOP
  2860  0031EA  CFF5 F014          	movff	tablat,___flmul@a+1
  2861  0031EE  0009               	tblrd		*+
  2862  0031F0  FFFF               	dw	65535	; errata NOP
  2863  0031F2  CFF5 F015          	movff	tablat,___flmul@a+2
  2864  0031F6  000A               	tblrd		*-
  2865  0031F8  FFFF               	dw	65535	; errata NOP
  2866  0031FA  CFF5 F016          	movff	tablat,___flmul@a+3
  2867  0031FE  0E00               	movlw	0
  2868  003200  6E0A               	movwf	___awdiv@divisor+1,c
  2869  003202  0E64               	movlw	100
  2870  003204  6E09               	movwf	___awdiv@divisor,c
  2871  003206  5030               	movf	scale@scl,w,c
  2872  003208  6E07               	movwf	___awdiv@dividend,c
  2873  00320A  6A08               	clrf	___awdiv@dividend+1,c
  2874  00320C  BE07               	btfsc	___awdiv@dividend,7,c
  2875  00320E  0608               	decf	___awdiv@dividend+1,f,c
  2876  003210  EC0C  F00E         	call	___awdiv	;wreg free
  2877  003214  0E12               	movlw	18
  2878  003216  2607               	addwf	?___awdiv,f,c
  2879  003218  5007               	movf	?___awdiv,w,c
  2880  00321A  0D04               	mullw	4
  2881  00321C  0EFD               	movlw	low __npowers_
  2882  00321E  24F3               	addwf	prodl,w,c
  2883  003220  6EF6               	movwf	tblptrl,c
  2884  003222  0E7E               	movlw	high __npowers_
  2885  003224  20F4               	addwfc	prodh,w,c
  2886  003226  6EF7               	movwf	tblptrh,c
  2887  003228                     	if	0	;There are less than 3 active tblptr bytes
  2888  003228                     	endif
  2889  003228  0009               	tblrd		*+
  2890  00322A  FFFF               	dw	65535	; errata NOP
  2891  00322C  CFF5 F00F          	movff	tablat,___flmul@b
  2892  003230  0009               	tblrd		*+
  2893  003232  FFFF               	dw	65535	; errata NOP
  2894  003234  CFF5 F010          	movff	tablat,___flmul@b+1
  2895  003238  0009               	tblrd		*+
  2896  00323A  FFFF               	dw	65535	; errata NOP
  2897  00323C  CFF5 F011          	movff	tablat,___flmul@b+2
  2898  003240  000A               	tblrd		*-
  2899  003242  FFFF               	dw	65535	; errata NOP
  2900  003244  CFF5 F012          	movff	tablat,___flmul@b+3
  2901  003248  EC05  F017         	call	___flmul	;wreg free
  2902  00324C  C00F  F02C         	movff	?___flmul,_scale$815
  2903  003250  C010  F02D         	movff	?___flmul+1,_scale$815+1
  2904  003254  C011  F02E         	movff	?___flmul+2,_scale$815+2
  2905  003258  C012  F02F         	movff	?___flmul+3,_scale$815+3
  2906                           
  2907                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2908  00325C  C02C  F00F         	movff	_scale$815,___flmul@b
  2909  003260  C02D  F010         	movff	_scale$815+1,___flmul@b+1
  2910  003264  C02E  F011         	movff	_scale$815+2,___flmul@b+2
  2911  003268  C02F  F012         	movff	_scale$815+3,___flmul@b+3
  2912  00326C  0E00               	movlw	0
  2913  00326E  6E04               	movwf	___awmod@divisor+1,c
  2914  003270  0E0A               	movlw	10
  2915  003272  6E03               	movwf	___awmod@divisor,c
  2916  003274  5030               	movf	scale@scl,w,c
  2917  003276  6E01               	movwf	___awmod@dividend,c
  2918  003278  6A02               	clrf	___awmod@dividend+1,c
  2919  00327A  BE01               	btfsc	___awmod@dividend,7,c
  2920  00327C  0602               	decf	___awmod@dividend+1,f,c
  2921  00327E  EC37  F00D         	call	___awmod	;wreg free
  2922  003282  5001               	movf	?___awmod,w,c
  2923  003284  0D04               	mullw	4
  2924  003286  0EFD               	movlw	low __npowers_
  2925  003288  24F3               	addwf	prodl,w,c
  2926  00328A  6EF6               	movwf	tblptrl,c
  2927  00328C  0E7E               	movlw	high __npowers_
  2928  00328E  20F4               	addwfc	prodh,w,c
  2929  003290  6EF7               	movwf	tblptrh,c
  2930  003292                     	if	0	;There are less than 3 active tblptr bytes
  2931  003292                     	endif
  2932  003292  0009               	tblrd		*+
  2933  003294  FFFF               	dw	65535	; errata NOP
  2934  003296  CFF5 F013          	movff	tablat,___flmul@a
  2935  00329A  0009               	tblrd		*+
  2936  00329C  FFFF               	dw	65535	; errata NOP
  2937  00329E  CFF5 F014          	movff	tablat,___flmul@a+1
  2938  0032A2  0009               	tblrd		*+
  2939  0032A4  FFFF               	dw	65535	; errata NOP
  2940  0032A6  CFF5 F015          	movff	tablat,___flmul@a+2
  2941  0032AA  000A               	tblrd		*-
  2942  0032AC  FFFF               	dw	65535	; errata NOP
  2943  0032AE  CFF5 F016          	movff	tablat,___flmul@a+3
  2944  0032B2  EC05  F017         	call	___flmul	;wreg free
  2945  0032B6  D14B               	goto	L8
  2946  0032B8                     l2967:
  2947  0032B8  FFFF               	dw	65535	; assembler added errata NOP
  2948                           
  2949                           ;doprnt.c: 440: else if(scl > 10)
  2950  0032BA  5030               	movf	scale@scl,w,c
  2951  0032BC  0A80               	xorlw	128
  2952  0032BE  0F75               	addlw	-139
  2953  0032C0  A0D8               	btfss	status,0,c
  2954  0032C2  D04B               	goto	l2973
  2955                           
  2956                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  2957  0032C4  0E00               	movlw	0
  2958  0032C6  6E0A               	movwf	___awdiv@divisor+1,c
  2959  0032C8  0E0A               	movlw	10
  2960  0032CA  6E09               	movwf	___awdiv@divisor,c
  2961  0032CC  5030               	movf	scale@scl,w,c
  2962  0032CE  6E07               	movwf	___awdiv@dividend,c
  2963  0032D0  6A08               	clrf	___awdiv@dividend+1,c
  2964  0032D2  BE07               	btfsc	___awdiv@dividend,7,c
  2965  0032D4  0608               	decf	___awdiv@dividend+1,f,c
  2966  0032D6  EC0C  F00E         	call	___awdiv	;wreg free
  2967  0032DA  0E09               	movlw	9
  2968  0032DC  2607               	addwf	?___awdiv,f,c
  2969  0032DE  5007               	movf	?___awdiv,w,c
  2970  0032E0  0D04               	mullw	4
  2971  0032E2  0EFD               	movlw	low __npowers_
  2972  0032E4  24F3               	addwf	prodl,w,c
  2973  0032E6  6EF6               	movwf	tblptrl,c
  2974  0032E8  0E7E               	movlw	high __npowers_
  2975  0032EA  20F4               	addwfc	prodh,w,c
  2976  0032EC  6EF7               	movwf	tblptrh,c
  2977  0032EE                     	if	0	;There are less than 3 active tblptr bytes
  2978  0032EE                     	endif
  2979  0032EE  0009               	tblrd		*+
  2980  0032F0  FFFF               	dw	65535	; errata NOP
  2981  0032F2  CFF5 F00F          	movff	tablat,___flmul@b
  2982  0032F6  0009               	tblrd		*+
  2983  0032F8  FFFF               	dw	65535	; errata NOP
  2984  0032FA  CFF5 F010          	movff	tablat,___flmul@b+1
  2985  0032FE  0009               	tblrd		*+
  2986  003300  FFFF               	dw	65535	; errata NOP
  2987  003302  CFF5 F011          	movff	tablat,___flmul@b+2
  2988  003306  000A               	tblrd		*-
  2989  003308  FFFF               	dw	65535	; errata NOP
  2990  00330A  CFF5 F012          	movff	tablat,___flmul@b+3
  2991  00330E  0E00               	movlw	0
  2992  003310  6E04               	movwf	___awmod@divisor+1,c
  2993  003312  0E0A               	movlw	10
  2994  003314  6E03               	movwf	___awmod@divisor,c
  2995  003316  5030               	movf	scale@scl,w,c
  2996  003318  6E01               	movwf	___awmod@dividend,c
  2997  00331A  6A02               	clrf	___awmod@dividend+1,c
  2998  00331C  BE01               	btfsc	___awmod@dividend,7,c
  2999  00331E  0602               	decf	___awmod@dividend+1,f,c
  3000  003320  EC37  F00D         	call	___awmod	;wreg free
  3001  003324  5001               	movf	?___awmod,w,c
  3002  003326  0D04               	mullw	4
  3003  003328  0EFD               	movlw	low __npowers_
  3004  00332A  24F3               	addwf	prodl,w,c
  3005  00332C  6EF6               	movwf	tblptrl,c
  3006  00332E  0E7E               	movlw	high __npowers_
  3007  003330  20F4               	addwfc	prodh,w,c
  3008  003332  6EF7               	movwf	tblptrh,c
  3009  003334                     	if	0	;There are less than 3 active tblptr bytes
  3010  003334                     	endif
  3011  003334  0009               	tblrd		*+
  3012  003336  FFFF               	dw	65535	; errata NOP
  3013  003338  CFF5 F013          	movff	tablat,___flmul@a
  3014  00333C  0009               	tblrd		*+
  3015  00333E  FFFF               	dw	65535	; errata NOP
  3016  003340  CFF5 F014          	movff	tablat,___flmul@a+1
  3017  003344  0009               	tblrd		*+
  3018  003346  FFFF               	dw	65535	; errata NOP
  3019  003348  CFF5 F015          	movff	tablat,___flmul@a+2
  3020  00334C  000A               	tblrd		*-
  3021  00334E  FFFF               	dw	65535	; errata NOP
  3022  003350  CFF5 F016          	movff	tablat,___flmul@a+3
  3023  003354  EC05  F017         	call	___flmul	;wreg free
  3024  003358  D0FA               	goto	L8
  3025  00335A                     l2973:
  3026  00335A  FFFF               	dw	65535	; assembler added errata NOP
  3027                           
  3028                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  3029  00335C  5030               	movf	scale@scl,w,c
  3030  00335E  0D04               	mullw	4
  3031  003360  0EFD               	movlw	low __npowers_
  3032  003362  24F3               	addwf	prodl,w,c
  3033  003364  6EF6               	movwf	tblptrl,c
  3034  003366  0E7E               	movlw	high __npowers_
  3035  003368  20F4               	addwfc	prodh,w,c
  3036  00336A  6EF7               	movwf	tblptrh,c
  3037  00336C                     	if	0	;There are less than 3 active tblptr bytes
  3038  00336C                     	endif
  3039  00336C  0009               	tblrd		*+
  3040  00336E  FFFF               	dw	65535	; errata NOP
  3041  003370  CFF5 F028          	movff	tablat,?_scale
  3042  003374  0009               	tblrd		*+
  3043  003376  FFFF               	dw	65535	; errata NOP
  3044  003378  CFF5 F029          	movff	tablat,?_scale+1
  3045  00337C  0009               	tblrd		*+
  3046  00337E  FFFF               	dw	65535	; errata NOP
  3047  003380  CFF5 F02A          	movff	tablat,?_scale+2
  3048  003384  000A               	tblrd		*-
  3049  003386  FFFF               	dw	65535	; errata NOP
  3050  003388  D103               	goto	L7
  3051  00338A                     l2977:
  3052  00338A  FFFF               	dw	65535	; assembler added errata NOP
  3053                           
  3054                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  3055  00338C  5030               	movf	scale@scl,w,c
  3056  00338E  0A80               	xorlw	128
  3057  003390  0F12               	addlw	-238
  3058  003392  A0D8               	btfss	status,0,c
  3059  003394  D08C               	goto	l2985
  3060                           
  3061                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  3062  003396  0E00               	movlw	0
  3063  003398  6E0A               	movwf	___awdiv@divisor+1,c
  3064  00339A  0E0A               	movlw	10
  3065  00339C  6E09               	movwf	___awdiv@divisor,c
  3066  00339E  0E00               	movlw	0
  3067  0033A0  6E04               	movwf	___awmod@divisor+1,c
  3068  0033A2  0E64               	movlw	100
  3069  0033A4  6E03               	movwf	___awmod@divisor,c
  3070  0033A6  5030               	movf	scale@scl,w,c
  3071  0033A8  6E01               	movwf	___awmod@dividend,c
  3072  0033AA  6A02               	clrf	___awmod@dividend+1,c
  3073  0033AC  BE01               	btfsc	___awmod@dividend,7,c
  3074  0033AE  0602               	decf	___awmod@dividend+1,f,c
  3075  0033B0  EC37  F00D         	call	___awmod	;wreg free
  3076  0033B4  C001  F007         	movff	?___awmod,___awdiv@dividend
  3077  0033B8  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  3078  0033BC  EC0C  F00E         	call	___awdiv	;wreg free
  3079  0033C0  0E09               	movlw	9
  3080  0033C2  2607               	addwf	?___awdiv,f,c
  3081  0033C4  5007               	movf	?___awdiv,w,c
  3082  0033C6  0D04               	mullw	4
  3083  0033C8  0EC9               	movlw	low __powers_
  3084  0033CA  24F3               	addwf	prodl,w,c
  3085  0033CC  6EF6               	movwf	tblptrl,c
  3086  0033CE  0E7E               	movlw	high __powers_
  3087  0033D0  20F4               	addwfc	prodh,w,c
  3088  0033D2  6EF7               	movwf	tblptrh,c
  3089  0033D4                     	if	0	;There are less than 3 active tblptr bytes
  3090  0033D4                     	endif
  3091  0033D4  0009               	tblrd		*+
  3092  0033D6  FFFF               	dw	65535	; errata NOP
  3093  0033D8  CFF5 F013          	movff	tablat,___flmul@a
  3094  0033DC  0009               	tblrd		*+
  3095  0033DE  FFFF               	dw	65535	; errata NOP
  3096  0033E0  CFF5 F014          	movff	tablat,___flmul@a+1
  3097  0033E4  0009               	tblrd		*+
  3098  0033E6  FFFF               	dw	65535	; errata NOP
  3099  0033E8  CFF5 F015          	movff	tablat,___flmul@a+2
  3100  0033EC  000A               	tblrd		*-
  3101  0033EE  FFFF               	dw	65535	; errata NOP
  3102  0033F0  CFF5 F016          	movff	tablat,___flmul@a+3
  3103  0033F4  0E00               	movlw	0
  3104  0033F6  6E0A               	movwf	___awdiv@divisor+1,c
  3105  0033F8  0E64               	movlw	100
  3106  0033FA  6E09               	movwf	___awdiv@divisor,c
  3107  0033FC  5030               	movf	scale@scl,w,c
  3108  0033FE  6E07               	movwf	___awdiv@dividend,c
  3109  003400  6A08               	clrf	___awdiv@dividend+1,c
  3110  003402  BE07               	btfsc	___awdiv@dividend,7,c
  3111  003404  0608               	decf	___awdiv@dividend+1,f,c
  3112  003406  EC0C  F00E         	call	___awdiv	;wreg free
  3113  00340A  0E12               	movlw	18
  3114  00340C  2607               	addwf	?___awdiv,f,c
  3115  00340E  5007               	movf	?___awdiv,w,c
  3116  003410  0D04               	mullw	4
  3117  003412  0EC9               	movlw	low __powers_
  3118  003414  24F3               	addwf	prodl,w,c
  3119  003416  6EF6               	movwf	tblptrl,c
  3120  003418  0E7E               	movlw	high __powers_
  3121  00341A  20F4               	addwfc	prodh,w,c
  3122  00341C  6EF7               	movwf	tblptrh,c
  3123  00341E                     	if	0	;There are less than 3 active tblptr bytes
  3124  00341E                     	endif
  3125  00341E  0009               	tblrd		*+
  3126  003420  FFFF               	dw	65535	; errata NOP
  3127  003422  CFF5 F00F          	movff	tablat,___flmul@b
  3128  003426  0009               	tblrd		*+
  3129  003428  FFFF               	dw	65535	; errata NOP
  3130  00342A  CFF5 F010          	movff	tablat,___flmul@b+1
  3131  00342E  0009               	tblrd		*+
  3132  003430  FFFF               	dw	65535	; errata NOP
  3133  003432  CFF5 F011          	movff	tablat,___flmul@b+2
  3134  003436  000A               	tblrd		*-
  3135  003438  FFFF               	dw	65535	; errata NOP
  3136  00343A  CFF5 F012          	movff	tablat,___flmul@b+3
  3137  00343E  EC05  F017         	call	___flmul	;wreg free
  3138  003442  C00F  F02C         	movff	?___flmul,_scale$815
  3139  003446  C010  F02D         	movff	?___flmul+1,_scale$815+1
  3140  00344A  C011  F02E         	movff	?___flmul+2,_scale$815+2
  3141  00344E  C012  F02F         	movff	?___flmul+3,_scale$815+3
  3142                           
  3143                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  3144  003452  C02C  F00F         	movff	_scale$815,___flmul@b
  3145  003456  C02D  F010         	movff	_scale$815+1,___flmul@b+1
  3146  00345A  C02E  F011         	movff	_scale$815+2,___flmul@b+2
  3147  00345E  C02F  F012         	movff	_scale$815+3,___flmul@b+3
  3148  003462  0E00               	movlw	0
  3149  003464  6E04               	movwf	___awmod@divisor+1,c
  3150  003466  0E0A               	movlw	10
  3151  003468  6E03               	movwf	___awmod@divisor,c
  3152  00346A  5030               	movf	scale@scl,w,c
  3153  00346C  6E01               	movwf	___awmod@dividend,c
  3154  00346E  6A02               	clrf	___awmod@dividend+1,c
  3155  003470  BE01               	btfsc	___awmod@dividend,7,c
  3156  003472  0602               	decf	___awmod@dividend+1,f,c
  3157  003474  EC37  F00D         	call	___awmod	;wreg free
  3158  003478  5001               	movf	?___awmod,w,c
  3159  00347A  0D04               	mullw	4
  3160  00347C  0EC9               	movlw	low __powers_
  3161  00347E  24F3               	addwf	prodl,w,c
  3162  003480  6EF6               	movwf	tblptrl,c
  3163  003482  0E7E               	movlw	high __powers_
  3164  003484  20F4               	addwfc	prodh,w,c
  3165  003486  6EF7               	movwf	tblptrh,c
  3166  003488                     	if	0	;There are less than 3 active tblptr bytes
  3167  003488                     	endif
  3168  003488  0009               	tblrd		*+
  3169  00348A  FFFF               	dw	65535	; errata NOP
  3170  00348C  CFF5 F013          	movff	tablat,___flmul@a
  3171  003490  0009               	tblrd		*+
  3172  003492  FFFF               	dw	65535	; errata NOP
  3173  003494  CFF5 F014          	movff	tablat,___flmul@a+1
  3174  003498  0009               	tblrd		*+
  3175  00349A  FFFF               	dw	65535	; errata NOP
  3176  00349C  CFF5 F015          	movff	tablat,___flmul@a+2
  3177  0034A0  000A               	tblrd		*-
  3178  0034A2  FFFF               	dw	65535	; errata NOP
  3179  0034A4  CFF5 F016          	movff	tablat,___flmul@a+3
  3180  0034A8  EC05  F017         	call	___flmul	;wreg free
  3181  0034AC  D050               	goto	L8
  3182  0034AE                     l2985:
  3183  0034AE  FFFF               	dw	65535	; assembler added errata NOP
  3184                           
  3185                           ;doprnt.c: 446: else if(scl > 10)
  3186  0034B0  5030               	movf	scale@scl,w,c
  3187  0034B2  0A80               	xorlw	128
  3188  0034B4  0F75               	addlw	-139
  3189  0034B6  A0D8               	btfss	status,0,c
  3190  0034B8  D054               	goto	l2991
  3191                           
  3192                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  3193  0034BA  0E00               	movlw	0
  3194  0034BC  6E0A               	movwf	___awdiv@divisor+1,c
  3195  0034BE  0E0A               	movlw	10
  3196  0034C0  6E09               	movwf	___awdiv@divisor,c
  3197  0034C2  5030               	movf	scale@scl,w,c
  3198  0034C4  6E07               	movwf	___awdiv@dividend,c
  3199  0034C6  6A08               	clrf	___awdiv@dividend+1,c
  3200  0034C8  BE07               	btfsc	___awdiv@dividend,7,c
  3201  0034CA  0608               	decf	___awdiv@dividend+1,f,c
  3202  0034CC  EC0C  F00E         	call	___awdiv	;wreg free
  3203  0034D0  0E09               	movlw	9
  3204  0034D2  2607               	addwf	?___awdiv,f,c
  3205  0034D4  5007               	movf	?___awdiv,w,c
  3206  0034D6  0D04               	mullw	4
  3207  0034D8  0EC9               	movlw	low __powers_
  3208  0034DA  24F3               	addwf	prodl,w,c
  3209  0034DC  6EF6               	movwf	tblptrl,c
  3210  0034DE  0E7E               	movlw	high __powers_
  3211  0034E0  20F4               	addwfc	prodh,w,c
  3212  0034E2  6EF7               	movwf	tblptrh,c
  3213  0034E4                     	if	0	;There are less than 3 active tblptr bytes
  3214  0034E4                     	endif
  3215  0034E4  0009               	tblrd		*+
  3216  0034E6  FFFF               	dw	65535	; errata NOP
  3217  0034E8  CFF5 F00F          	movff	tablat,___flmul@b
  3218  0034EC  0009               	tblrd		*+
  3219  0034EE  FFFF               	dw	65535	; errata NOP
  3220  0034F0  CFF5 F010          	movff	tablat,___flmul@b+1
  3221  0034F4  0009               	tblrd		*+
  3222  0034F6  FFFF               	dw	65535	; errata NOP
  3223  0034F8  CFF5 F011          	movff	tablat,___flmul@b+2
  3224  0034FC  000A               	tblrd		*-
  3225  0034FE  FFFF               	dw	65535	; errata NOP
  3226  003500  CFF5 F012          	movff	tablat,___flmul@b+3
  3227  003504  0E00               	movlw	0
  3228  003506  6E04               	movwf	___awmod@divisor+1,c
  3229  003508  0E0A               	movlw	10
  3230  00350A  6E03               	movwf	___awmod@divisor,c
  3231  00350C  5030               	movf	scale@scl,w,c
  3232  00350E  6E01               	movwf	___awmod@dividend,c
  3233  003510  6A02               	clrf	___awmod@dividend+1,c
  3234  003512  BE01               	btfsc	___awmod@dividend,7,c
  3235  003514  0602               	decf	___awmod@dividend+1,f,c
  3236  003516  EC37  F00D         	call	___awmod	;wreg free
  3237  00351A  5001               	movf	?___awmod,w,c
  3238  00351C  0D04               	mullw	4
  3239  00351E  0EC9               	movlw	low __powers_
  3240  003520  24F3               	addwf	prodl,w,c
  3241  003522  6EF6               	movwf	tblptrl,c
  3242  003524  0E7E               	movlw	high __powers_
  3243  003526  20F4               	addwfc	prodh,w,c
  3244  003528  6EF7               	movwf	tblptrh,c
  3245  00352A                     	if	0	;There are less than 3 active tblptr bytes
  3246  00352A                     	endif
  3247  00352A  0009               	tblrd		*+
  3248  00352C  FFFF               	dw	65535	; errata NOP
  3249  00352E  CFF5 F013          	movff	tablat,___flmul@a
  3250  003532  0009               	tblrd		*+
  3251  003534  FFFF               	dw	65535	; errata NOP
  3252  003536  CFF5 F014          	movff	tablat,___flmul@a+1
  3253  00353A  0009               	tblrd		*+
  3254  00353C  FFFF               	dw	65535	; errata NOP
  3255  00353E  CFF5 F015          	movff	tablat,___flmul@a+2
  3256  003542  000A               	tblrd		*-
  3257  003544  FFFF               	dw	65535	; errata NOP
  3258  003546  CFF5 F016          	movff	tablat,___flmul@a+3
  3259  00354A  EC05  F017         	call	___flmul	;wreg free
  3260  00354E                     L8:
  3261  00354E  FFFF               	dw	65535	; assembler added errata NOP
  3262  003550  C00F  F028         	movff	?___flmul,?_scale
  3263  003554  C010  F029         	movff	?___flmul+1,?_scale+1
  3264  003558  C011  F02A         	movff	?___flmul+2,?_scale+2
  3265  00355C  C012  F02B         	movff	?___flmul+3,?_scale+3
  3266  003560  D01A               	goto	l135
  3267  003562                     l2991:
  3268  003562  FFFF               	dw	65535	; assembler added errata NOP
  3269                           
  3270                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  3271  003564  5030               	movf	scale@scl,w,c
  3272  003566  0D04               	mullw	4
  3273  003568  0EC9               	movlw	low __powers_
  3274  00356A  24F3               	addwf	prodl,w,c
  3275  00356C  6EF6               	movwf	tblptrl,c
  3276  00356E  0E7E               	movlw	high __powers_
  3277  003570  20F4               	addwfc	prodh,w,c
  3278  003572  6EF7               	movwf	tblptrh,c
  3279  003574                     	if	0	;There are less than 3 active tblptr bytes
  3280  003574                     	endif
  3281  003574  0009               	tblrd		*+
  3282  003576  FFFF               	dw	65535	; errata NOP
  3283  003578  CFF5 F028          	movff	tablat,?_scale
  3284  00357C  0009               	tblrd		*+
  3285  00357E  FFFF               	dw	65535	; errata NOP
  3286  003580  CFF5 F029          	movff	tablat,?_scale+1
  3287  003584  0009               	tblrd		*+
  3288  003586  FFFF               	dw	65535	; errata NOP
  3289  003588  CFF5 F02A          	movff	tablat,?_scale+2
  3290  00358C  000A               	tblrd		*-
  3291  00358E  FFFF               	dw	65535	; errata NOP
  3292  003590                     L7:
  3293  003590  FFFF               	dw	65535	; assembler added errata NOP
  3294  003592  CFF5 F02B          	movff	tablat,?_scale+3
  3295  003596                     l135:
  3296  003596  FFFF               	dw	65535	; assembler added errata NOP
  3297  003598  0012               	return		;funcret
  3298  00359A  FFFF               	dw	65535	; errata NOP
  3299  00359C                     __end_of_scale:
  3300                           	opt callstack 0
  3301                           
  3302 ;; *************** function ___awmod *****************
  3303 ;; Defined at:
  3304 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  3305 ;; Parameters:    Size  Location     Type
  3306 ;;  dividend        2    0[COMRAM] int 
  3307 ;;  divisor         2    2[COMRAM] int 
  3308 ;; Auto vars:     Size  Location     Type
  3309 ;;  sign            1    5[COMRAM] unsigned char 
  3310 ;;  counter         1    4[COMRAM] unsigned char 
  3311 ;; Return value:  Size  Location     Type
  3312 ;;                  2    0[COMRAM] int 
  3313 ;; Registers used:
  3314 ;;		wreg, status,2, status,0
  3315 ;; Tracked objects:
  3316 ;;		On entry : 0/0
  3317 ;;		On exit  : 0/0
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3320 ;;      Params:         4       0       0       0       0       0       0
  3321 ;;      Locals:         2       0       0       0       0       0       0
  3322 ;;      Temps:          0       0       0       0       0       0       0
  3323 ;;      Totals:         6       0       0       0       0       0       0
  3324 ;;Total ram usage:        6 bytes
  3325 ;; Hardware stack levels used:    1
  3326 ;; This function calls:
  3327 ;;		Nothing
  3328 ;; This function is called by:
  3329 ;;		_scale
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           
  3333                           	psect	text3
  3334  001A6E                     __ptext3:
  3335                           	opt callstack 0
  3336  001A6E                     ___awmod:
  3337                           	opt callstack 0
  3338  001A6E  FFFF               	dw	65535	; assembler added errata NOP
  3339                           
  3340                           ;incstack = 0
  3341  001A70  0E00               	movlw	0
  3342  001A72  6E06               	movwf	___awmod@sign,c
  3343  001A74  AE02               	btfss	___awmod@dividend+1,7,c
  3344  001A76  D006               	goto	l2843
  3345  001A78  6C01               	negf	___awmod@dividend,c
  3346  001A7A  1E02               	comf	___awmod@dividend+1,f,c
  3347  001A7C  B0D8               	btfsc	status,0,c
  3348  001A7E  2A02               	incf	___awmod@dividend+1,f,c
  3349  001A80  0E01               	movlw	1
  3350  001A82  6E06               	movwf	___awmod@sign,c
  3351  001A84                     l2843:
  3352  001A84  FFFF               	dw	65535	; assembler added errata NOP
  3353  001A86  AE04               	btfss	___awmod@divisor+1,7,c
  3354  001A88  D004               	goto	l2847
  3355  001A8A  6C03               	negf	___awmod@divisor,c
  3356  001A8C  1E04               	comf	___awmod@divisor+1,f,c
  3357  001A8E  B0D8               	btfsc	status,0,c
  3358  001A90  2A04               	incf	___awmod@divisor+1,f,c
  3359  001A92                     l2847:
  3360  001A92  FFFF               	dw	65535	; assembler added errata NOP
  3361  001A94  5003               	movf	___awmod@divisor,w,c
  3362  001A96  1004               	iorwf	___awmod@divisor+1,w,c
  3363  001A98  B4D8               	btfsc	status,2,c
  3364  001A9A  D01C               	goto	l2863
  3365  001A9C  0E01               	movlw	1
  3366  001A9E  6E05               	movwf	___awmod@counter,c
  3367  001AA0  D005               	goto	l2853
  3368  001AA2                     l2851:
  3369  001AA2  FFFF               	dw	65535	; assembler added errata NOP
  3370  001AA4  90D8               	bcf	status,0,c
  3371  001AA6  3603               	rlcf	___awmod@divisor,f,c
  3372  001AA8  3604               	rlcf	___awmod@divisor+1,f,c
  3373  001AAA  2A05               	incf	___awmod@counter,f,c
  3374  001AAC                     l2853:
  3375  001AAC  FFFF               	dw	65535	; assembler added errata NOP
  3376  001AAE  AE04               	btfss	___awmod@divisor+1,7,c
  3377  001AB0  D7F8               	goto	l2851
  3378  001AB2                     u2890:
  3379  001AB2  FFFF               	dw	65535	; assembler added errata NOP
  3380  001AB4  5003               	movf	___awmod@divisor,w,c
  3381  001AB6  5C01               	subwf	___awmod@dividend,w,c
  3382  001AB8  5004               	movf	___awmod@divisor+1,w,c
  3383  001ABA  5802               	subwfb	___awmod@dividend+1,w,c
  3384  001ABC  A0D8               	btfss	status,0,c
  3385  001ABE  D004               	goto	l2859
  3386  001AC0  5003               	movf	___awmod@divisor,w,c
  3387  001AC2  5E01               	subwf	___awmod@dividend,f,c
  3388  001AC4  5004               	movf	___awmod@divisor+1,w,c
  3389  001AC6  5A02               	subwfb	___awmod@dividend+1,f,c
  3390  001AC8                     l2859:
  3391  001AC8  FFFF               	dw	65535	; assembler added errata NOP
  3392  001ACA  90D8               	bcf	status,0,c
  3393  001ACC  3204               	rrcf	___awmod@divisor+1,f,c
  3394  001ACE  3203               	rrcf	___awmod@divisor,f,c
  3395  001AD0  2E05               	decfsz	___awmod@counter,f,c
  3396  001AD2  D7EF               	goto	u2890
  3397  001AD4                     l2863:
  3398  001AD4  FFFF               	dw	65535	; assembler added errata NOP
  3399  001AD6  5006               	movf	___awmod@sign,w,c
  3400  001AD8  B4D8               	btfsc	status,2,c
  3401  001ADA  D004               	goto	l2867
  3402  001ADC  6C01               	negf	___awmod@dividend,c
  3403  001ADE  1E02               	comf	___awmod@dividend+1,f,c
  3404  001AE0  B0D8               	btfsc	status,0,c
  3405  001AE2  2A02               	incf	___awmod@dividend+1,f,c
  3406  001AE4                     l2867:
  3407  001AE4  FFFF               	dw	65535	; assembler added errata NOP
  3408  001AE6  C001  F001         	movff	___awmod@dividend,?___awmod
  3409  001AEA  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3410  001AEE  0012               	return		;funcret
  3411  001AF0  FFFF               	dw	65535	; errata NOP
  3412  001AF2                     __end_of___awmod:
  3413                           	opt callstack 0
  3414                           
  3415 ;; *************** function ___awdiv *****************
  3416 ;; Defined at:
  3417 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  3418 ;; Parameters:    Size  Location     Type
  3419 ;;  dividend        2    6[COMRAM] int 
  3420 ;;  divisor         2    8[COMRAM] int 
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;  quotient        2   12[COMRAM] int 
  3423 ;;  sign            1   11[COMRAM] unsigned char 
  3424 ;;  counter         1   10[COMRAM] unsigned char 
  3425 ;; Return value:  Size  Location     Type
  3426 ;;                  2    6[COMRAM] int 
  3427 ;; Registers used:
  3428 ;;		wreg, status,2, status,0
  3429 ;; Tracked objects:
  3430 ;;		On entry : 0/0
  3431 ;;		On exit  : 0/0
  3432 ;;		Unchanged: 0/0
  3433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3434 ;;      Params:         4       0       0       0       0       0       0
  3435 ;;      Locals:         4       0       0       0       0       0       0
  3436 ;;      Temps:          0       0       0       0       0       0       0
  3437 ;;      Totals:         8       0       0       0       0       0       0
  3438 ;;Total ram usage:        8 bytes
  3439 ;; Hardware stack levels used:    1
  3440 ;; This function calls:
  3441 ;;		Nothing
  3442 ;; This function is called by:
  3443 ;;		_scale
  3444 ;;		_sprintf
  3445 ;; This function uses a non-reentrant model
  3446 ;;
  3447                           
  3448                           	psect	text4
  3449  001C18                     __ptext4:
  3450                           	opt callstack 0
  3451  001C18                     ___awdiv:
  3452                           	opt callstack 0
  3453  001C18  FFFF               	dw	65535	; assembler added errata NOP
  3454                           
  3455                           ;incstack = 0
  3456  001C1A  0E00               	movlw	0
  3457  001C1C  6E0C               	movwf	___awdiv@sign,c
  3458  001C1E  AE0A               	btfss	___awdiv@divisor+1,7,c
  3459  001C20  D006               	goto	l2799
  3460  001C22  6C09               	negf	___awdiv@divisor,c
  3461  001C24  1E0A               	comf	___awdiv@divisor+1,f,c
  3462  001C26  B0D8               	btfsc	status,0,c
  3463  001C28  2A0A               	incf	___awdiv@divisor+1,f,c
  3464  001C2A  0E01               	movlw	1
  3465  001C2C  6E0C               	movwf	___awdiv@sign,c
  3466  001C2E                     l2799:
  3467  001C2E  FFFF               	dw	65535	; assembler added errata NOP
  3468  001C30  AE08               	btfss	___awdiv@dividend+1,7,c
  3469  001C32  D006               	goto	l2805
  3470  001C34  6C07               	negf	___awdiv@dividend,c
  3471  001C36  1E08               	comf	___awdiv@dividend+1,f,c
  3472  001C38  B0D8               	btfsc	status,0,c
  3473  001C3A  2A08               	incf	___awdiv@dividend+1,f,c
  3474  001C3C  0E01               	movlw	1
  3475  001C3E  1A0C               	xorwf	___awdiv@sign,f,c
  3476  001C40                     l2805:
  3477  001C40  FFFF               	dw	65535	; assembler added errata NOP
  3478  001C42  0E00               	movlw	0
  3479  001C44  6E0E               	movwf	___awdiv@quotient+1,c
  3480  001C46  0E00               	movlw	0
  3481  001C48  6E0D               	movwf	___awdiv@quotient,c
  3482  001C4A  5009               	movf	___awdiv@divisor,w,c
  3483  001C4C  100A               	iorwf	___awdiv@divisor+1,w,c
  3484  001C4E  B4D8               	btfsc	status,2,c
  3485  001C50  D020               	goto	l2827
  3486  001C52  0E01               	movlw	1
  3487  001C54  6E0B               	movwf	___awdiv@counter,c
  3488  001C56  D005               	goto	l2813
  3489  001C58                     l2811:
  3490  001C58  FFFF               	dw	65535	; assembler added errata NOP
  3491  001C5A  90D8               	bcf	status,0,c
  3492  001C5C  3609               	rlcf	___awdiv@divisor,f,c
  3493  001C5E  360A               	rlcf	___awdiv@divisor+1,f,c
  3494  001C60  2A0B               	incf	___awdiv@counter,f,c
  3495  001C62                     l2813:
  3496  001C62  FFFF               	dw	65535	; assembler added errata NOP
  3497  001C64  AE0A               	btfss	___awdiv@divisor+1,7,c
  3498  001C66  D7F8               	goto	l2811
  3499  001C68                     u2830:
  3500  001C68  FFFF               	dw	65535	; assembler added errata NOP
  3501  001C6A  90D8               	bcf	status,0,c
  3502  001C6C  360D               	rlcf	___awdiv@quotient,f,c
  3503  001C6E  360E               	rlcf	___awdiv@quotient+1,f,c
  3504  001C70  5009               	movf	___awdiv@divisor,w,c
  3505  001C72  5C07               	subwf	___awdiv@dividend,w,c
  3506  001C74  500A               	movf	___awdiv@divisor+1,w,c
  3507  001C76  5808               	subwfb	___awdiv@dividend+1,w,c
  3508  001C78  A0D8               	btfss	status,0,c
  3509  001C7A  D005               	goto	l2823
  3510  001C7C  5009               	movf	___awdiv@divisor,w,c
  3511  001C7E  5E07               	subwf	___awdiv@dividend,f,c
  3512  001C80  500A               	movf	___awdiv@divisor+1,w,c
  3513  001C82  5A08               	subwfb	___awdiv@dividend+1,f,c
  3514  001C84  800D               	bsf	___awdiv@quotient,0,c
  3515  001C86                     l2823:
  3516  001C86  FFFF               	dw	65535	; assembler added errata NOP
  3517  001C88  90D8               	bcf	status,0,c
  3518  001C8A  320A               	rrcf	___awdiv@divisor+1,f,c
  3519  001C8C  3209               	rrcf	___awdiv@divisor,f,c
  3520  001C8E  2E0B               	decfsz	___awdiv@counter,f,c
  3521  001C90  D7EB               	goto	u2830
  3522  001C92                     l2827:
  3523  001C92  FFFF               	dw	65535	; assembler added errata NOP
  3524  001C94  500C               	movf	___awdiv@sign,w,c
  3525  001C96  B4D8               	btfsc	status,2,c
  3526  001C98  D004               	goto	l2831
  3527  001C9A  6C0D               	negf	___awdiv@quotient,c
  3528  001C9C  1E0E               	comf	___awdiv@quotient+1,f,c
  3529  001C9E  B0D8               	btfsc	status,0,c
  3530  001CA0  2A0E               	incf	___awdiv@quotient+1,f,c
  3531  001CA2                     l2831:
  3532  001CA2  FFFF               	dw	65535	; assembler added errata NOP
  3533  001CA4  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  3534  001CA8  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  3535  001CAC  0012               	return		;funcret
  3536  001CAE  FFFF               	dw	65535	; errata NOP
  3537  001CB0                     __end_of___awdiv:
  3538                           	opt callstack 0
  3539                           
  3540 ;; *************** function _isdigit *****************
  3541 ;; Defined at:
  3542 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
  3543 ;; Parameters:    Size  Location     Type
  3544 ;;  c               1    wreg     unsigned char 
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;  c               1    2[COMRAM] unsigned char 
  3547 ;; Return value:  Size  Location     Type
  3548 ;;		None               void
  3549 ;; Registers used:
  3550 ;;		wreg, status,2, status,0
  3551 ;; Tracked objects:
  3552 ;;		On entry : 0/0
  3553 ;;		On exit  : 0/0
  3554 ;;		Unchanged: 0/0
  3555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3556 ;;      Params:         0       0       0       0       0       0       0
  3557 ;;      Locals:         2       0       0       0       0       0       0
  3558 ;;      Temps:          1       0       0       0       0       0       0
  3559 ;;      Totals:         3       0       0       0       0       0       0
  3560 ;;Total ram usage:        3 bytes
  3561 ;; Hardware stack levels used:    1
  3562 ;; This function calls:
  3563 ;;		Nothing
  3564 ;; This function is called by:
  3565 ;;		_sprintf
  3566 ;; This function uses a non-reentrant model
  3567 ;;
  3568                           
  3569                           	psect	text5
  3570  0016C4                     __ptext5:
  3571                           	opt callstack 0
  3572  0016C4                     _isdigit:
  3573                           	opt callstack 0
  3574  0016C4  FFFF               	dw	65535	; assembler added errata NOP
  3575                           
  3576                           ;incstack = 0
  3577                           ;isdigit@c stored from wreg
  3578  0016C6  6E03               	movwf	isdigit@c,c
  3579  0016C8  0E00               	movlw	0
  3580  0016CA  6E02               	movwf	_isdigit$632,c
  3581  0016CC  0E3A               	movlw	58
  3582  0016CE  6003               	cpfslt	isdigit@c,c
  3583  0016D0  D005               	goto	l3003
  3584  0016D2  0E2F               	movlw	47
  3585  0016D4  6403               	cpfsgt	isdigit@c,c
  3586  0016D6  D002               	goto	l3003
  3587  0016D8  0E01               	movlw	1
  3588  0016DA  6E02               	movwf	_isdigit$632,c
  3589  0016DC                     l3003:
  3590  0016DC  FFFF               	dw	65535	; assembler added errata NOP
  3591  0016DE  C002  F001         	movff	_isdigit$632,??_isdigit
  3592  0016E2  3001               	rrcf	??_isdigit,w,c
  3593  0016E4  0012               	return		;funcret
  3594  0016E6  FFFF               	dw	65535	; errata NOP
  3595  0016E8                     __end_of_isdigit:
  3596                           	opt callstack 0
  3597                           
  3598 ;; *************** function _fround *****************
  3599 ;; Defined at:
  3600 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  3601 ;; Parameters:    Size  Location     Type
  3602 ;;  prec            1    wreg     unsigned char 
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;  prec            1   51[COMRAM] unsigned char 
  3605 ;; Return value:  Size  Location     Type
  3606 ;;                  4   39[COMRAM] unsigned char 
  3607 ;; Registers used:
  3608 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3609 ;; Tracked objects:
  3610 ;;		On entry : 0/0
  3611 ;;		On exit  : 0/0
  3612 ;;		Unchanged: 0/0
  3613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3614 ;;      Params:         4       0       0       0       0       0       0
  3615 ;;      Locals:         9       0       0       0       0       0       0
  3616 ;;      Temps:          0       0       0       0       0       0       0
  3617 ;;      Totals:        13       0       0       0       0       0       0
  3618 ;;Total ram usage:       13 bytes
  3619 ;; Hardware stack levels used:    1
  3620 ;; Hardware stack levels required when called:    1
  3621 ;; This function calls:
  3622 ;;		___flmul
  3623 ;;		___lwdiv
  3624 ;;		___lwmod
  3625 ;; This function is called by:
  3626 ;;		_sprintf
  3627 ;; This function uses a non-reentrant model
  3628 ;;
  3629                           
  3630                           	psect	text6
  3631  002562                     __ptext6:
  3632                           	opt callstack 0
  3633  002562                     _fround:
  3634                           	opt callstack 0
  3635  002562  FFFF               	dw	65535	; assembler added errata NOP
  3636                           
  3637                           ;incstack = 0
  3638                           ;fround@prec stored from wreg
  3639  002564  6E34               	movwf	fround@prec,c
  3640                           
  3641                           ;doprnt.c: 421: if(prec>=110)
  3642  002566  0E6D               	movlw	109
  3643  002568  6434               	cpfsgt	fround@prec,c
  3644  00256A  D0B0               	goto	l2947
  3645                           
  3646                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  3647  00256C  0E00               	movlw	0
  3648  00256E  6E13               	movwf	___flmul@a,c
  3649  002570  0E00               	movlw	0
  3650  002572  6E14               	movwf	___flmul@a+1,c
  3651  002574  0E00               	movlw	0
  3652  002576  6E15               	movwf	___flmul@a+2,c
  3653  002578  0E3F               	movlw	63
  3654  00257A  6E16               	movwf	___flmul@a+3,c
  3655  00257C  0E00               	movlw	0
  3656  00257E  6E09               	movwf	___lwdiv@divisor+1,c
  3657  002580  0E64               	movlw	100
  3658  002582  6E08               	movwf	___lwdiv@divisor,c
  3659  002584  C034  F006         	movff	fround@prec,___lwdiv@dividend
  3660  002588  6A07               	clrf	___lwdiv@dividend+1,c
  3661  00258A  EC63  F00C         	call	___lwdiv	;wreg free
  3662  00258E  90D8               	bcf	status,0,c
  3663  002590  3606               	rlcf	?___lwdiv,f,c
  3664  002592  3607               	rlcf	?___lwdiv+1,f,c
  3665  002594  90D8               	bcf	status,0,c
  3666  002596  3606               	rlcf	?___lwdiv,f,c
  3667  002598  3607               	rlcf	?___lwdiv+1,f,c
  3668  00259A  0E48               	movlw	72
  3669  00259C  2606               	addwf	?___lwdiv,f,c
  3670  00259E  0E00               	movlw	0
  3671  0025A0  2207               	addwfc	?___lwdiv+1,f,c
  3672  0025A2  0EFD               	movlw	low __npowers_
  3673  0025A4  2406               	addwf	?___lwdiv,w,c
  3674  0025A6  6EF6               	movwf	tblptrl,c
  3675  0025A8  0E7E               	movlw	high __npowers_
  3676  0025AA  2007               	addwfc	?___lwdiv+1,w,c
  3677  0025AC  6EF7               	movwf	tblptrh,c
  3678  0025AE                     	if	0	;There are less than 3 active tblptr bytes
  3679  0025AE                     	endif
  3680  0025AE  0009               	tblrd		*+
  3681  0025B0  FFFF               	dw	65535	; errata NOP
  3682  0025B2  CFF5 F00F          	movff	tablat,___flmul@b
  3683  0025B6  0009               	tblrd		*+
  3684  0025B8  FFFF               	dw	65535	; errata NOP
  3685  0025BA  CFF5 F010          	movff	tablat,___flmul@b+1
  3686  0025BE  0009               	tblrd		*+
  3687  0025C0  FFFF               	dw	65535	; errata NOP
  3688  0025C2  CFF5 F011          	movff	tablat,___flmul@b+2
  3689  0025C6  000A               	tblrd		*-
  3690  0025C8  FFFF               	dw	65535	; errata NOP
  3691  0025CA  CFF5 F012          	movff	tablat,___flmul@b+3
  3692  0025CE  EC05  F017         	call	___flmul	;wreg free
  3693  0025D2  C00F  F030         	movff	?___flmul,_fround$813
  3694  0025D6  C010  F031         	movff	?___flmul+1,_fround$813+1
  3695  0025DA  C011  F032         	movff	?___flmul+2,_fround$813+2
  3696  0025DE  C012  F033         	movff	?___flmul+3,_fround$813+3
  3697                           
  3698                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  3699  0025E2  0E00               	movlw	0
  3700  0025E4  6E09               	movwf	___lwdiv@divisor+1,c
  3701  0025E6  0E0A               	movlw	10
  3702  0025E8  6E08               	movwf	___lwdiv@divisor,c
  3703  0025EA  0E00               	movlw	0
  3704  0025EC  6E04               	movwf	___lwmod@divisor+1,c
  3705  0025EE  0E64               	movlw	100
  3706  0025F0  6E03               	movwf	___lwmod@divisor,c
  3707  0025F2  C034  F001         	movff	fround@prec,___lwmod@dividend
  3708  0025F6  6A02               	clrf	___lwmod@dividend+1,c
  3709  0025F8  EC0F  F00C         	call	___lwmod	;wreg free
  3710  0025FC  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  3711  002600  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  3712  002604  EC63  F00C         	call	___lwdiv	;wreg free
  3713  002608  90D8               	bcf	status,0,c
  3714  00260A  3606               	rlcf	?___lwdiv,f,c
  3715  00260C  3607               	rlcf	?___lwdiv+1,f,c
  3716  00260E  90D8               	bcf	status,0,c
  3717  002610  3606               	rlcf	?___lwdiv,f,c
  3718  002612  3607               	rlcf	?___lwdiv+1,f,c
  3719  002614  0E24               	movlw	36
  3720  002616  2606               	addwf	?___lwdiv,f,c
  3721  002618  0E00               	movlw	0
  3722  00261A  2207               	addwfc	?___lwdiv+1,f,c
  3723  00261C  0EFD               	movlw	low __npowers_
  3724  00261E  2406               	addwf	?___lwdiv,w,c
  3725  002620  6EF6               	movwf	tblptrl,c
  3726  002622  0E7E               	movlw	high __npowers_
  3727  002624  2007               	addwfc	?___lwdiv+1,w,c
  3728  002626  6EF7               	movwf	tblptrh,c
  3729  002628                     	if	0	;There are less than 3 active tblptr bytes
  3730  002628                     	endif
  3731  002628  0009               	tblrd		*+
  3732  00262A  FFFF               	dw	65535	; errata NOP
  3733  00262C  CFF5 F013          	movff	tablat,___flmul@a
  3734  002630  0009               	tblrd		*+
  3735  002632  FFFF               	dw	65535	; errata NOP
  3736  002634  CFF5 F014          	movff	tablat,___flmul@a+1
  3737  002638  0009               	tblrd		*+
  3738  00263A  FFFF               	dw	65535	; errata NOP
  3739  00263C  CFF5 F015          	movff	tablat,___flmul@a+2
  3740  002640  000A               	tblrd		*-
  3741  002642  FFFF               	dw	65535	; errata NOP
  3742  002644  CFF5 F016          	movff	tablat,___flmul@a+3
  3743  002648  C030  F00F         	movff	_fround$813,___flmul@b
  3744  00264C  C031  F010         	movff	_fround$813+1,___flmul@b+1
  3745  002650  C032  F011         	movff	_fround$813+2,___flmul@b+2
  3746  002654  C033  F012         	movff	_fround$813+3,___flmul@b+3
  3747  002658  EC05  F017         	call	___flmul	;wreg free
  3748  00265C  C00F  F02C         	movff	?___flmul,_fround$814
  3749  002660  C010  F02D         	movff	?___flmul+1,_fround$814+1
  3750  002664  C011  F02E         	movff	?___flmul+2,_fround$814+2
  3751  002668  C012  F02F         	movff	?___flmul+3,_fround$814+3
  3752                           
  3753                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  3754  00266C  C02C  F00F         	movff	_fround$814,___flmul@b
  3755  002670  C02D  F010         	movff	_fround$814+1,___flmul@b+1
  3756  002674  C02E  F011         	movff	_fround$814+2,___flmul@b+2
  3757  002678  C02F  F012         	movff	_fround$814+3,___flmul@b+3
  3758  00267C  0E00               	movlw	0
  3759  00267E  6E04               	movwf	___lwmod@divisor+1,c
  3760  002680  0E0A               	movlw	10
  3761  002682  6E03               	movwf	___lwmod@divisor,c
  3762  002684  C034  F001         	movff	fround@prec,___lwmod@dividend
  3763  002688  6A02               	clrf	___lwmod@dividend+1,c
  3764  00268A  EC0F  F00C         	call	___lwmod	;wreg free
  3765  00268E  90D8               	bcf	status,0,c
  3766  002690  3601               	rlcf	?___lwmod,f,c
  3767  002692  3602               	rlcf	?___lwmod+1,f,c
  3768  002694  90D8               	bcf	status,0,c
  3769  002696  3601               	rlcf	?___lwmod,f,c
  3770  002698  3602               	rlcf	?___lwmod+1,f,c
  3771  00269A  0EFD               	movlw	low __npowers_
  3772  00269C  2401               	addwf	?___lwmod,w,c
  3773  00269E  6EF6               	movwf	tblptrl,c
  3774  0026A0  0E7E               	movlw	high __npowers_
  3775  0026A2  2002               	addwfc	?___lwmod+1,w,c
  3776  0026A4  6EF7               	movwf	tblptrh,c
  3777  0026A6                     	if	0	;There are less than 3 active tblptr bytes
  3778  0026A6                     	endif
  3779  0026A6  0009               	tblrd		*+
  3780  0026A8  FFFF               	dw	65535	; errata NOP
  3781  0026AA  CFF5 F013          	movff	tablat,___flmul@a
  3782  0026AE  0009               	tblrd		*+
  3783  0026B0  FFFF               	dw	65535	; errata NOP
  3784  0026B2  CFF5 F014          	movff	tablat,___flmul@a+1
  3785  0026B6  0009               	tblrd		*+
  3786  0026B8  FFFF               	dw	65535	; errata NOP
  3787  0026BA  CFF5 F015          	movff	tablat,___flmul@a+2
  3788  0026BE  000A               	tblrd		*-
  3789  0026C0  FFFF               	dw	65535	; errata NOP
  3790  0026C2  CFF5 F016          	movff	tablat,___flmul@a+3
  3791  0026C6  EC05  F017         	call	___flmul	;wreg free
  3792  0026CA  D092               	goto	L9
  3793  0026CC                     l2947:
  3794  0026CC  FFFF               	dw	65535	; assembler added errata NOP
  3795                           
  3796                           ;doprnt.c: 423: else if(prec > 10)
  3797  0026CE  0E0A               	movlw	10
  3798  0026D0  6434               	cpfsgt	fround@prec,c
  3799  0026D2  D06B               	goto	l2953
  3800                           
  3801                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3802  0026D4  0E00               	movlw	0
  3803  0026D6  6E13               	movwf	___flmul@a,c
  3804  0026D8  0E00               	movlw	0
  3805  0026DA  6E14               	movwf	___flmul@a+1,c
  3806  0026DC  0E00               	movlw	0
  3807  0026DE  6E15               	movwf	___flmul@a+2,c
  3808  0026E0  0E3F               	movlw	63
  3809  0026E2  6E16               	movwf	___flmul@a+3,c
  3810  0026E4  0E00               	movlw	0
  3811  0026E6  6E09               	movwf	___lwdiv@divisor+1,c
  3812  0026E8  0E0A               	movlw	10
  3813  0026EA  6E08               	movwf	___lwdiv@divisor,c
  3814  0026EC  C034  F006         	movff	fround@prec,___lwdiv@dividend
  3815  0026F0  6A07               	clrf	___lwdiv@dividend+1,c
  3816  0026F2  EC63  F00C         	call	___lwdiv	;wreg free
  3817  0026F6  90D8               	bcf	status,0,c
  3818  0026F8  3606               	rlcf	?___lwdiv,f,c
  3819  0026FA  3607               	rlcf	?___lwdiv+1,f,c
  3820  0026FC  90D8               	bcf	status,0,c
  3821  0026FE  3606               	rlcf	?___lwdiv,f,c
  3822  002700  3607               	rlcf	?___lwdiv+1,f,c
  3823  002702  0E24               	movlw	36
  3824  002704  2606               	addwf	?___lwdiv,f,c
  3825  002706  0E00               	movlw	0
  3826  002708  2207               	addwfc	?___lwdiv+1,f,c
  3827  00270A  0EFD               	movlw	low __npowers_
  3828  00270C  2406               	addwf	?___lwdiv,w,c
  3829  00270E  6EF6               	movwf	tblptrl,c
  3830  002710  0E7E               	movlw	high __npowers_
  3831  002712  2007               	addwfc	?___lwdiv+1,w,c
  3832  002714  6EF7               	movwf	tblptrh,c
  3833  002716                     	if	0	;There are less than 3 active tblptr bytes
  3834  002716                     	endif
  3835  002716  0009               	tblrd		*+
  3836  002718  FFFF               	dw	65535	; errata NOP
  3837  00271A  CFF5 F00F          	movff	tablat,___flmul@b
  3838  00271E  0009               	tblrd		*+
  3839  002720  FFFF               	dw	65535	; errata NOP
  3840  002722  CFF5 F010          	movff	tablat,___flmul@b+1
  3841  002726  0009               	tblrd		*+
  3842  002728  FFFF               	dw	65535	; errata NOP
  3843  00272A  CFF5 F011          	movff	tablat,___flmul@b+2
  3844  00272E  000A               	tblrd		*-
  3845  002730  FFFF               	dw	65535	; errata NOP
  3846  002732  CFF5 F012          	movff	tablat,___flmul@b+3
  3847  002736  EC05  F017         	call	___flmul	;wreg free
  3848  00273A  C00F  F030         	movff	?___flmul,_fround$813
  3849  00273E  C010  F031         	movff	?___flmul+1,_fround$813+1
  3850  002742  C011  F032         	movff	?___flmul+2,_fround$813+2
  3851  002746  C012  F033         	movff	?___flmul+3,_fround$813+3
  3852                           
  3853                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3854  00274A  C030  F00F         	movff	_fround$813,___flmul@b
  3855  00274E  C031  F010         	movff	_fround$813+1,___flmul@b+1
  3856  002752  C032  F011         	movff	_fround$813+2,___flmul@b+2
  3857  002756  C033  F012         	movff	_fround$813+3,___flmul@b+3
  3858  00275A  0E00               	movlw	0
  3859  00275C  6E04               	movwf	___lwmod@divisor+1,c
  3860  00275E  0E0A               	movlw	10
  3861  002760  6E03               	movwf	___lwmod@divisor,c
  3862  002762  C034  F001         	movff	fround@prec,___lwmod@dividend
  3863  002766  6A02               	clrf	___lwmod@dividend+1,c
  3864  002768  EC0F  F00C         	call	___lwmod	;wreg free
  3865  00276C  90D8               	bcf	status,0,c
  3866  00276E  3601               	rlcf	?___lwmod,f,c
  3867  002770  3602               	rlcf	?___lwmod+1,f,c
  3868  002772  90D8               	bcf	status,0,c
  3869  002774  3601               	rlcf	?___lwmod,f,c
  3870  002776  3602               	rlcf	?___lwmod+1,f,c
  3871  002778  0EFD               	movlw	low __npowers_
  3872  00277A  2401               	addwf	?___lwmod,w,c
  3873  00277C  6EF6               	movwf	tblptrl,c
  3874  00277E  0E7E               	movlw	high __npowers_
  3875  002780  2002               	addwfc	?___lwmod+1,w,c
  3876  002782  6EF7               	movwf	tblptrh,c
  3877  002784                     	if	0	;There are less than 3 active tblptr bytes
  3878  002784                     	endif
  3879  002784  0009               	tblrd		*+
  3880  002786  FFFF               	dw	65535	; errata NOP
  3881  002788  CFF5 F013          	movff	tablat,___flmul@a
  3882  00278C  0009               	tblrd		*+
  3883  00278E  FFFF               	dw	65535	; errata NOP
  3884  002790  CFF5 F014          	movff	tablat,___flmul@a+1
  3885  002794  0009               	tblrd		*+
  3886  002796  FFFF               	dw	65535	; errata NOP
  3887  002798  CFF5 F015          	movff	tablat,___flmul@a+2
  3888  00279C  000A               	tblrd		*-
  3889  00279E  FFFF               	dw	65535	; errata NOP
  3890  0027A0  CFF5 F016          	movff	tablat,___flmul@a+3
  3891  0027A4  EC05  F017         	call	___flmul	;wreg free
  3892  0027A8  D023               	goto	L9
  3893  0027AA                     l2953:
  3894  0027AA  FFFF               	dw	65535	; assembler added errata NOP
  3895                           
  3896                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  3897  0027AC  5034               	movf	fround@prec,w,c
  3898  0027AE  0D04               	mullw	4
  3899  0027B0  0EFD               	movlw	low __npowers_
  3900  0027B2  24F3               	addwf	prodl,w,c
  3901  0027B4  6EF6               	movwf	tblptrl,c
  3902  0027B6  0E7E               	movlw	high __npowers_
  3903  0027B8  20F4               	addwfc	prodh,w,c
  3904  0027BA  6EF7               	movwf	tblptrh,c
  3905  0027BC                     	if	0	;There are less than 3 active tblptr bytes
  3906  0027BC                     	endif
  3907  0027BC  0009               	tblrd		*+
  3908  0027BE  FFFF               	dw	65535	; errata NOP
  3909  0027C0  CFF5 F00F          	movff	tablat,___flmul@b
  3910  0027C4  0009               	tblrd		*+
  3911  0027C6  FFFF               	dw	65535	; errata NOP
  3912  0027C8  CFF5 F010          	movff	tablat,___flmul@b+1
  3913  0027CC  0009               	tblrd		*+
  3914  0027CE  FFFF               	dw	65535	; errata NOP
  3915  0027D0  CFF5 F011          	movff	tablat,___flmul@b+2
  3916  0027D4  000A               	tblrd		*-
  3917  0027D6  FFFF               	dw	65535	; errata NOP
  3918  0027D8  CFF5 F012          	movff	tablat,___flmul@b+3
  3919  0027DC  0E00               	movlw	0
  3920  0027DE  6E13               	movwf	___flmul@a,c
  3921  0027E0  0E00               	movlw	0
  3922  0027E2  6E14               	movwf	___flmul@a+1,c
  3923  0027E4  0E00               	movlw	0
  3924  0027E6  6E15               	movwf	___flmul@a+2,c
  3925  0027E8  0E3F               	movlw	63
  3926  0027EA  6E16               	movwf	___flmul@a+3,c
  3927  0027EC  EC05  F017         	call	___flmul	;wreg free
  3928  0027F0                     L9:
  3929  0027F0  FFFF               	dw	65535	; assembler added errata NOP
  3930  0027F2  C00F  F028         	movff	?___flmul,?_fround
  3931  0027F6  C010  F029         	movff	?___flmul+1,?_fround+1
  3932  0027FA  C011  F02A         	movff	?___flmul+2,?_fround+2
  3933  0027FE  C012  F02B         	movff	?___flmul+3,?_fround+3
  3934  002802  0012               	return		;funcret
  3935  002804  FFFF               	dw	65535	; errata NOP
  3936  002806                     __end_of_fround:
  3937                           	opt callstack 0
  3938                           
  3939 ;; *************** function ___lwmod *****************
  3940 ;; Defined at:
  3941 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  3942 ;; Parameters:    Size  Location     Type
  3943 ;;  dividend        2    0[COMRAM] unsigned int 
  3944 ;;  divisor         2    2[COMRAM] unsigned int 
  3945 ;; Auto vars:     Size  Location     Type
  3946 ;;  counter         1    4[COMRAM] unsigned char 
  3947 ;; Return value:  Size  Location     Type
  3948 ;;                  2    0[COMRAM] unsigned int 
  3949 ;; Registers used:
  3950 ;;		wreg, status,2, status,0
  3951 ;; Tracked objects:
  3952 ;;		On entry : 0/0
  3953 ;;		On exit  : 0/0
  3954 ;;		Unchanged: 0/0
  3955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3956 ;;      Params:         4       0       0       0       0       0       0
  3957 ;;      Locals:         1       0       0       0       0       0       0
  3958 ;;      Temps:          0       0       0       0       0       0       0
  3959 ;;      Totals:         5       0       0       0       0       0       0
  3960 ;;Total ram usage:        5 bytes
  3961 ;; Hardware stack levels used:    1
  3962 ;; This function calls:
  3963 ;;		Nothing
  3964 ;; This function is called by:
  3965 ;;		_fround
  3966 ;; This function uses a non-reentrant model
  3967 ;;
  3968                           
  3969                           	psect	text7
  3970  00181E                     __ptext7:
  3971                           	opt callstack 0
  3972  00181E                     ___lwmod:
  3973                           	opt callstack 0
  3974  00181E  FFFF               	dw	65535	; assembler added errata NOP
  3975                           
  3976                           ;incstack = 0
  3977  001820  5003               	movf	___lwmod@divisor,w,c
  3978  001822  1004               	iorwf	___lwmod@divisor+1,w,c
  3979  001824  B4D8               	btfsc	status,2,c
  3980  001826  D01C               	goto	l762
  3981  001828  0E01               	movlw	1
  3982  00182A  6E05               	movwf	___lwmod@counter,c
  3983  00182C  D005               	goto	l2899
  3984  00182E                     l2897:
  3985  00182E  FFFF               	dw	65535	; assembler added errata NOP
  3986  001830  90D8               	bcf	status,0,c
  3987  001832  3603               	rlcf	___lwmod@divisor,f,c
  3988  001834  3604               	rlcf	___lwmod@divisor+1,f,c
  3989  001836  2A05               	incf	___lwmod@counter,f,c
  3990  001838                     l2899:
  3991  001838  FFFF               	dw	65535	; assembler added errata NOP
  3992  00183A  AE04               	btfss	___lwmod@divisor+1,7,c
  3993  00183C  D7F8               	goto	l2897
  3994  00183E                     u2960:
  3995  00183E  FFFF               	dw	65535	; assembler added errata NOP
  3996  001840  5003               	movf	___lwmod@divisor,w,c
  3997  001842  5C01               	subwf	___lwmod@dividend,w,c
  3998  001844  5004               	movf	___lwmod@divisor+1,w,c
  3999  001846  5802               	subwfb	___lwmod@dividend+1,w,c
  4000  001848  A0D8               	btfss	status,0,c
  4001  00184A  D004               	goto	l2905
  4002  00184C  5003               	movf	___lwmod@divisor,w,c
  4003  00184E  5E01               	subwf	___lwmod@dividend,f,c
  4004  001850  5004               	movf	___lwmod@divisor+1,w,c
  4005  001852  5A02               	subwfb	___lwmod@dividend+1,f,c
  4006  001854                     l2905:
  4007  001854  FFFF               	dw	65535	; assembler added errata NOP
  4008  001856  90D8               	bcf	status,0,c
  4009  001858  3204               	rrcf	___lwmod@divisor+1,f,c
  4010  00185A  3203               	rrcf	___lwmod@divisor,f,c
  4011  00185C  2E05               	decfsz	___lwmod@counter,f,c
  4012  00185E  D7EF               	goto	u2960
  4013  001860                     l762:
  4014  001860  FFFF               	dw	65535	; assembler added errata NOP
  4015  001862  C001  F001         	movff	___lwmod@dividend,?___lwmod
  4016  001866  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  4017  00186A  0012               	return		;funcret
  4018  00186C  FFFF               	dw	65535	; errata NOP
  4019  00186E                     __end_of___lwmod:
  4020                           	opt callstack 0
  4021                           
  4022 ;; *************** function ___lwdiv *****************
  4023 ;; Defined at:
  4024 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  4025 ;; Parameters:    Size  Location     Type
  4026 ;;  dividend        2    5[COMRAM] unsigned int 
  4027 ;;  divisor         2    7[COMRAM] unsigned int 
  4028 ;; Auto vars:     Size  Location     Type
  4029 ;;  quotient        2    9[COMRAM] unsigned int 
  4030 ;;  counter         1   11[COMRAM] unsigned char 
  4031 ;; Return value:  Size  Location     Type
  4032 ;;                  2    5[COMRAM] unsigned int 
  4033 ;; Registers used:
  4034 ;;		wreg, status,2, status,0
  4035 ;; Tracked objects:
  4036 ;;		On entry : 0/0
  4037 ;;		On exit  : 0/0
  4038 ;;		Unchanged: 0/0
  4039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4040 ;;      Params:         4       0       0       0       0       0       0
  4041 ;;      Locals:         3       0       0       0       0       0       0
  4042 ;;      Temps:          0       0       0       0       0       0       0
  4043 ;;      Totals:         7       0       0       0       0       0       0
  4044 ;;Total ram usage:        7 bytes
  4045 ;; Hardware stack levels used:    1
  4046 ;; This function calls:
  4047 ;;		Nothing
  4048 ;; This function is called by:
  4049 ;;		_fround
  4050 ;; This function uses a non-reentrant model
  4051 ;;
  4052                           
  4053                           	psect	text8
  4054  0018C6                     __ptext8:
  4055                           	opt callstack 0
  4056  0018C6                     ___lwdiv:
  4057                           	opt callstack 0
  4058  0018C6  FFFF               	dw	65535	; assembler added errata NOP
  4059                           
  4060                           ;incstack = 0
  4061  0018C8  0E00               	movlw	0
  4062  0018CA  6E0B               	movwf	___lwdiv@quotient+1,c
  4063  0018CC  0E00               	movlw	0
  4064  0018CE  6E0A               	movwf	___lwdiv@quotient,c
  4065  0018D0  5008               	movf	___lwdiv@divisor,w,c
  4066  0018D2  1009               	iorwf	___lwdiv@divisor+1,w,c
  4067  0018D4  B4D8               	btfsc	status,2,c
  4068  0018D6  D020               	goto	l752
  4069  0018D8  0E01               	movlw	1
  4070  0018DA  6E0C               	movwf	___lwdiv@counter,c
  4071  0018DC  D005               	goto	l2879
  4072  0018DE                     l2877:
  4073  0018DE  FFFF               	dw	65535	; assembler added errata NOP
  4074  0018E0  90D8               	bcf	status,0,c
  4075  0018E2  3608               	rlcf	___lwdiv@divisor,f,c
  4076  0018E4  3609               	rlcf	___lwdiv@divisor+1,f,c
  4077  0018E6  2A0C               	incf	___lwdiv@counter,f,c
  4078  0018E8                     l2879:
  4079  0018E8  FFFF               	dw	65535	; assembler added errata NOP
  4080  0018EA  AE09               	btfss	___lwdiv@divisor+1,7,c
  4081  0018EC  D7F8               	goto	l2877
  4082  0018EE                     u2930:
  4083  0018EE  FFFF               	dw	65535	; assembler added errata NOP
  4084  0018F0  90D8               	bcf	status,0,c
  4085  0018F2  360A               	rlcf	___lwdiv@quotient,f,c
  4086  0018F4  360B               	rlcf	___lwdiv@quotient+1,f,c
  4087  0018F6  5008               	movf	___lwdiv@divisor,w,c
  4088  0018F8  5C06               	subwf	___lwdiv@dividend,w,c
  4089  0018FA  5009               	movf	___lwdiv@divisor+1,w,c
  4090  0018FC  5807               	subwfb	___lwdiv@dividend+1,w,c
  4091  0018FE  A0D8               	btfss	status,0,c
  4092  001900  D005               	goto	l2889
  4093  001902  5008               	movf	___lwdiv@divisor,w,c
  4094  001904  5E06               	subwf	___lwdiv@dividend,f,c
  4095  001906  5009               	movf	___lwdiv@divisor+1,w,c
  4096  001908  5A07               	subwfb	___lwdiv@dividend+1,f,c
  4097  00190A  800A               	bsf	___lwdiv@quotient,0,c
  4098  00190C                     l2889:
  4099  00190C  FFFF               	dw	65535	; assembler added errata NOP
  4100  00190E  90D8               	bcf	status,0,c
  4101  001910  3209               	rrcf	___lwdiv@divisor+1,f,c
  4102  001912  3208               	rrcf	___lwdiv@divisor,f,c
  4103  001914  2E0C               	decfsz	___lwdiv@counter,f,c
  4104  001916  D7EB               	goto	u2930
  4105  001918                     l752:
  4106  001918  FFFF               	dw	65535	; assembler added errata NOP
  4107  00191A  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  4108  00191E  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4109  001922  0012               	return		;funcret
  4110  001924  FFFF               	dw	65535	; errata NOP
  4111  001926                     __end_of___lwdiv:
  4112                           	opt callstack 0
  4113                           
  4114 ;; *************** function __tdiv_to_l_ *****************
  4115 ;; Defined at:
  4116 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftdivl.c"
  4117 ;; Parameters:    Size  Location     Type
  4118 ;;  f1              4    0[COMRAM] float 
  4119 ;;  f2              4    4[COMRAM] float 
  4120 ;; Auto vars:     Size  Location     Type
  4121 ;;  quot            4   11[COMRAM] unsigned long 
  4122 ;;  exp1            1   16[COMRAM] unsigned char 
  4123 ;;  cntr            1   15[COMRAM] unsigned char 
  4124 ;; Return value:  Size  Location     Type
  4125 ;;                  4    0[COMRAM] unsigned long 
  4126 ;; Registers used:
  4127 ;;		wreg, status,2, status,0
  4128 ;; Tracked objects:
  4129 ;;		On entry : 0/0
  4130 ;;		On exit  : 0/0
  4131 ;;		Unchanged: 0/0
  4132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4133 ;;      Params:         8       0       0       0       0       0       0
  4134 ;;      Locals:         6       0       0       0       0       0       0
  4135 ;;      Temps:          3       0       0       0       0       0       0
  4136 ;;      Totals:        17       0       0       0       0       0       0
  4137 ;;Total ram usage:       17 bytes
  4138 ;; Hardware stack levels used:    1
  4139 ;; This function calls:
  4140 ;;		Nothing
  4141 ;; This function is called by:
  4142 ;;		_sprintf
  4143 ;; This function uses a non-reentrant model
  4144 ;;
  4145                           
  4146                           	psect	text9
  4147  002056                     __ptext9:
  4148                           	opt callstack 0
  4149  002056                     __tdiv_to_l_:
  4150                           	opt callstack 0
  4151  002056  FFFF               	dw	65535	; assembler added errata NOP
  4152                           
  4153                           ;incstack = 0
  4154  002058  C003  F009         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  4155  00205C  6A0A               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  4156  00205E  6A0B               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  4157  002060  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  4158  002062  3609               	rlcf	??__tdiv_to_l_& (0+255),f,c
  4159  002064  E301               	bnc	u3091
  4160  002066  800A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  4161  002068                     u3091:
  4162  002068  5009               	movf	??__tdiv_to_l_,w,c
  4163  00206A  6E11               	movwf	__tdiv_to_l_@exp1,c
  4164  00206C  5011               	movf	__tdiv_to_l_@exp1,w,c
  4165  00206E  A4D8               	btfss	status,2,c
  4166  002070  D00A               	goto	l3013
  4167  002072                     u3100:
  4168  002072  FFFF               	dw	65535	; assembler added errata NOP
  4169  002074  0E00               	movlw	0
  4170  002076  6E01               	movwf	?__tdiv_to_l_,c
  4171  002078  0E00               	movlw	0
  4172  00207A  6E02               	movwf	?__tdiv_to_l_+1,c
  4173  00207C  0E00               	movlw	0
  4174  00207E  6E03               	movwf	?__tdiv_to_l_+2,c
  4175  002080  0E00               	movlw	0
  4176  002082  6E04               	movwf	?__tdiv_to_l_+3,c
  4177  002084  D070               	goto	l602
  4178  002086                     l3013:
  4179  002086  FFFF               	dw	65535	; assembler added errata NOP
  4180  002088  C007  F009         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  4181  00208C  6A0A               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  4182  00208E  6A0B               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  4183  002090  3406               	rlcf	__tdiv_to_l_@f2+1,w,c
  4184  002092  3609               	rlcf	??__tdiv_to_l_& (0+255),f,c
  4185  002094  E301               	bnc	u3111
  4186  002096  800A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  4187  002098                     u3111:
  4188  002098  5009               	movf	??__tdiv_to_l_,w,c
  4189  00209A  6E10               	movwf	__tdiv_to_l_@cntr,c
  4190  00209C  5010               	movf	__tdiv_to_l_@cntr,w,c
  4191  00209E  B4D8               	btfsc	status,2,c
  4192  0020A0  D7E8               	goto	u3100
  4193  0020A2  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  4194  0020A4  0EFF               	movlw	255
  4195  0020A6  1601               	andwf	__tdiv_to_l_@f1,f,c
  4196  0020A8  0EFF               	movlw	255
  4197  0020AA  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  4198  0020AC  0E00               	movlw	0
  4199  0020AE  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  4200  0020B0  8E06               	bsf	__tdiv_to_l_@f2+1,7,c
  4201  0020B2  0EFF               	movlw	255
  4202  0020B4  1605               	andwf	__tdiv_to_l_@f2,f,c
  4203  0020B6  0EFF               	movlw	255
  4204  0020B8  1606               	andwf	__tdiv_to_l_@f2+1,f,c
  4205  0020BA  0E00               	movlw	0
  4206  0020BC  1607               	andwf	__tdiv_to_l_@f2+2,f,c
  4207  0020BE  0E00               	movlw	0
  4208  0020C0  6E0C               	movwf	__tdiv_to_l_@quot,c
  4209  0020C2  0E00               	movlw	0
  4210  0020C4  6E0D               	movwf	__tdiv_to_l_@quot+1,c
  4211  0020C6  0E00               	movlw	0
  4212  0020C8  6E0E               	movwf	__tdiv_to_l_@quot+2,c
  4213  0020CA  0E00               	movlw	0
  4214  0020CC  6E0F               	movwf	__tdiv_to_l_@quot+3,c
  4215  0020CE  0E7F               	movlw	127
  4216  0020D0  5E11               	subwf	__tdiv_to_l_@exp1,f,c
  4217  0020D2  5010               	movf	__tdiv_to_l_@cntr,w,c
  4218  0020D4  0F98               	addlw	152
  4219  0020D6  5E11               	subwf	__tdiv_to_l_@exp1,f,c
  4220  0020D8  0E18               	movlw	24
  4221  0020DA  6E10               	movwf	__tdiv_to_l_@cntr,c
  4222  0020DC                     l604:
  4223  0020DC  FFFF               	dw	65535	; assembler added errata NOP
  4224  0020DE  90D8               	bcf	status,0,c
  4225  0020E0  360C               	rlcf	__tdiv_to_l_@quot,f,c
  4226  0020E2  360D               	rlcf	__tdiv_to_l_@quot+1,f,c
  4227  0020E4  360E               	rlcf	__tdiv_to_l_@quot+2,f,c
  4228  0020E6  360F               	rlcf	__tdiv_to_l_@quot+3,f,c
  4229  0020E8  5005               	movf	__tdiv_to_l_@f2,w,c
  4230  0020EA  5C01               	subwf	__tdiv_to_l_@f1,w,c
  4231  0020EC  5006               	movf	__tdiv_to_l_@f2+1,w,c
  4232  0020EE  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  4233  0020F0  5007               	movf	__tdiv_to_l_@f2+2,w,c
  4234  0020F2  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  4235  0020F4  A0D8               	btfss	status,0,c
  4236  0020F6  D007               	goto	l605
  4237  0020F8  5005               	movf	__tdiv_to_l_@f2,w,c
  4238  0020FA  5E01               	subwf	__tdiv_to_l_@f1,f,c
  4239  0020FC  5006               	movf	__tdiv_to_l_@f2+1,w,c
  4240  0020FE  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  4241  002100  5007               	movf	__tdiv_to_l_@f2+2,w,c
  4242  002102  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  4243  002104  800C               	bsf	__tdiv_to_l_@quot,0,c
  4244  002106                     l605:
  4245  002106  FFFF               	dw	65535	; assembler added errata NOP
  4246  002108  90D8               	bcf	status,0,c
  4247  00210A  3601               	rlcf	__tdiv_to_l_@f1,f,c
  4248  00210C  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  4249  00210E  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  4250  002110  2E10               	decfsz	__tdiv_to_l_@cntr,f,c
  4251  002112  D7E4               	goto	l604
  4252  002114  AE11               	btfss	__tdiv_to_l_@exp1,7,c
  4253  002116  D00E               	goto	l3053
  4254  002118  5011               	movf	__tdiv_to_l_@exp1,w,c
  4255  00211A  0A80               	xorlw	128
  4256  00211C  0F97               	addlw	151
  4257  00211E  A0D8               	btfss	status,0,c
  4258  002120  D7A8               	goto	u3100
  4259  002122                     l3049:
  4260  002122  FFFF               	dw	65535	; assembler added errata NOP
  4261  002124  90D8               	bcf	status,0,c
  4262  002126  320F               	rrcf	__tdiv_to_l_@quot+3,f,c
  4263  002128  320E               	rrcf	__tdiv_to_l_@quot+2,f,c
  4264  00212A  320D               	rrcf	__tdiv_to_l_@quot+1,f,c
  4265  00212C  320C               	rrcf	__tdiv_to_l_@quot,f,c
  4266  00212E  3E11               	incfsz	__tdiv_to_l_@exp1,f,c
  4267  002130  D7F8               	goto	l3049
  4268  002132  D010               	goto	u3170
  4269  002134                     l3053:
  4270  002134  FFFF               	dw	65535	; assembler added errata NOP
  4271  002136  0E17               	movlw	23
  4272  002138  6411               	cpfsgt	__tdiv_to_l_@exp1,c
  4273  00213A  D008               	goto	l3061
  4274  00213C  D79A               	goto	u3100
  4275  00213E                     l3059:
  4276  00213E  FFFF               	dw	65535	; assembler added errata NOP
  4277  002140  90D8               	bcf	status,0,c
  4278  002142  360C               	rlcf	__tdiv_to_l_@quot,f,c
  4279  002144  360D               	rlcf	__tdiv_to_l_@quot+1,f,c
  4280  002146  360E               	rlcf	__tdiv_to_l_@quot+2,f,c
  4281  002148  360F               	rlcf	__tdiv_to_l_@quot+3,f,c
  4282  00214A  0611               	decf	__tdiv_to_l_@exp1,f,c
  4283  00214C                     l3061:
  4284  00214C  FFFF               	dw	65535	; assembler added errata NOP
  4285  00214E  5011               	movf	__tdiv_to_l_@exp1,w,c
  4286  002150  A4D8               	btfss	status,2,c
  4287  002152  D7F5               	goto	l3059
  4288  002154                     u3170:
  4289  002154  FFFF               	dw	65535	; assembler added errata NOP
  4290  002156  C00C  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  4291  00215A  C00D  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  4292  00215E  C00E  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  4293  002162  C00F  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  4294  002166                     l602:
  4295  002166  FFFF               	dw	65535	; assembler added errata NOP
  4296  002168  0012               	return		;funcret
  4297  00216A  FFFF               	dw	65535	; errata NOP
  4298  00216C                     __end_of__tdiv_to_l_:
  4299                           	opt callstack 0
  4300                           
  4301 ;; *************** function __div_to_l_ *****************
  4302 ;; Defined at:
  4303 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fldivl.c"
  4304 ;; Parameters:    Size  Location     Type
  4305 ;;  f1              4    0[COMRAM] unsigned long 
  4306 ;;  f2              4    4[COMRAM] unsigned long 
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;  quot            4    8[COMRAM] unsigned long 
  4309 ;;  exp1            1   13[COMRAM] unsigned char 
  4310 ;;  cntr            1   12[COMRAM] unsigned char 
  4311 ;; Return value:  Size  Location     Type
  4312 ;;                  4    0[COMRAM] unsigned long 
  4313 ;; Registers used:
  4314 ;;		wreg, status,2, status,0
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4320 ;;      Params:         8       0       0       0       0       0       0
  4321 ;;      Locals:         6       0       0       0       0       0       0
  4322 ;;      Temps:          0       0       0       0       0       0       0
  4323 ;;      Totals:        14       0       0       0       0       0       0
  4324 ;;Total ram usage:       14 bytes
  4325 ;; Hardware stack levels used:    1
  4326 ;; This function calls:
  4327 ;;		Nothing
  4328 ;; This function is called by:
  4329 ;;		_sprintf
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           
  4333                           	psect	text10
  4334  001F4A                     __ptext10:
  4335                           	opt callstack 0
  4336  001F4A                     __div_to_l_:
  4337                           	opt callstack 0
  4338  001F4A  FFFF               	dw	65535	; assembler added errata NOP
  4339                           
  4340                           ;incstack = 0
  4341  001F4C  3403               	rlcf	__div_to_l_@f1+2,w,c
  4342  001F4E  3404               	rlcf	__div_to_l_@f1+3,w,c
  4343  001F50  6E0E               	movwf	__div_to_l_@exp1,c
  4344  001F52  500E               	movf	__div_to_l_@exp1,w,c
  4345  001F54  A4D8               	btfss	status,2,c
  4346  001F56  D00A               	goto	l3069
  4347  001F58                     u3180:
  4348  001F58  FFFF               	dw	65535	; assembler added errata NOP
  4349  001F5A  0E00               	movlw	0
  4350  001F5C  6E01               	movwf	?__div_to_l_,c
  4351  001F5E  0E00               	movlw	0
  4352  001F60  6E02               	movwf	?__div_to_l_+1,c
  4353  001F62  0E00               	movlw	0
  4354  001F64  6E03               	movwf	?__div_to_l_+2,c
  4355  001F66  0E00               	movlw	0
  4356  001F68  6E04               	movwf	?__div_to_l_+3,c
  4357  001F6A  D072               	goto	l493
  4358  001F6C                     l3069:
  4359  001F6C  FFFF               	dw	65535	; assembler added errata NOP
  4360  001F6E  3407               	rlcf	__div_to_l_@f2+2,w,c
  4361  001F70  3408               	rlcf	__div_to_l_@f2+3,w,c
  4362  001F72  6E0D               	movwf	__div_to_l_@cntr,c
  4363  001F74  500D               	movf	__div_to_l_@cntr,w,c
  4364  001F76  B4D8               	btfsc	status,2,c
  4365  001F78  D7EF               	goto	u3180
  4366  001F7A  8E03               	bsf	__div_to_l_@f1+2,7,c
  4367  001F7C  0EFF               	movlw	255
  4368  001F7E  1601               	andwf	__div_to_l_@f1,f,c
  4369  001F80  0EFF               	movlw	255
  4370  001F82  1602               	andwf	__div_to_l_@f1+1,f,c
  4371  001F84  0EFF               	movlw	255
  4372  001F86  1603               	andwf	__div_to_l_@f1+2,f,c
  4373  001F88  0E00               	movlw	0
  4374  001F8A  1604               	andwf	__div_to_l_@f1+3,f,c
  4375  001F8C  8E07               	bsf	__div_to_l_@f2+2,7,c
  4376  001F8E  0EFF               	movlw	255
  4377  001F90  1605               	andwf	__div_to_l_@f2,f,c
  4378  001F92  0EFF               	movlw	255
  4379  001F94  1606               	andwf	__div_to_l_@f2+1,f,c
  4380  001F96  0EFF               	movlw	255
  4381  001F98  1607               	andwf	__div_to_l_@f2+2,f,c
  4382  001F9A  0E00               	movlw	0
  4383  001F9C  1608               	andwf	__div_to_l_@f2+3,f,c
  4384  001F9E  0E00               	movlw	0
  4385  001FA0  6E09               	movwf	__div_to_l_@quot,c
  4386  001FA2  0E00               	movlw	0
  4387  001FA4  6E0A               	movwf	__div_to_l_@quot+1,c
  4388  001FA6  0E00               	movlw	0
  4389  001FA8  6E0B               	movwf	__div_to_l_@quot+2,c
  4390  001FAA  0E00               	movlw	0
  4391  001FAC  6E0C               	movwf	__div_to_l_@quot+3,c
  4392  001FAE  0E7F               	movlw	127
  4393  001FB0  5E0E               	subwf	__div_to_l_@exp1,f,c
  4394  001FB2  500D               	movf	__div_to_l_@cntr,w,c
  4395  001FB4  0FA0               	addlw	160
  4396  001FB6  5E0E               	subwf	__div_to_l_@exp1,f,c
  4397  001FB8  0E20               	movlw	32
  4398  001FBA  6E0D               	movwf	__div_to_l_@cntr,c
  4399  001FBC                     l3089:
  4400  001FBC  FFFF               	dw	65535	; assembler added errata NOP
  4401  001FBE  90D8               	bcf	status,0,c
  4402  001FC0  3609               	rlcf	__div_to_l_@quot,f,c
  4403  001FC2  360A               	rlcf	__div_to_l_@quot+1,f,c
  4404  001FC4  360B               	rlcf	__div_to_l_@quot+2,f,c
  4405  001FC6  360C               	rlcf	__div_to_l_@quot+3,f,c
  4406  001FC8  5005               	movf	__div_to_l_@f2,w,c
  4407  001FCA  5C01               	subwf	__div_to_l_@f1,w,c
  4408  001FCC  5006               	movf	__div_to_l_@f2+1,w,c
  4409  001FCE  5802               	subwfb	__div_to_l_@f1+1,w,c
  4410  001FD0  5007               	movf	__div_to_l_@f2+2,w,c
  4411  001FD2  5803               	subwfb	__div_to_l_@f1+2,w,c
  4412  001FD4  5008               	movf	__div_to_l_@f2+3,w,c
  4413  001FD6  5804               	subwfb	__div_to_l_@f1+3,w,c
  4414  001FD8  A0D8               	btfss	status,0,c
  4415  001FDA  D009               	goto	l3097
  4416  001FDC  5005               	movf	__div_to_l_@f2,w,c
  4417  001FDE  5E01               	subwf	__div_to_l_@f1,f,c
  4418  001FE0  5006               	movf	__div_to_l_@f2+1,w,c
  4419  001FE2  5A02               	subwfb	__div_to_l_@f1+1,f,c
  4420  001FE4  5007               	movf	__div_to_l_@f2+2,w,c
  4421  001FE6  5A03               	subwfb	__div_to_l_@f1+2,f,c
  4422  001FE8  5008               	movf	__div_to_l_@f2+3,w,c
  4423  001FEA  5A04               	subwfb	__div_to_l_@f1+3,f,c
  4424  001FEC  8009               	bsf	__div_to_l_@quot,0,c
  4425  001FEE                     l3097:
  4426  001FEE  FFFF               	dw	65535	; assembler added errata NOP
  4427  001FF0  90D8               	bcf	status,0,c
  4428  001FF2  3601               	rlcf	__div_to_l_@f1,f,c
  4429  001FF4  3602               	rlcf	__div_to_l_@f1+1,f,c
  4430  001FF6  3603               	rlcf	__div_to_l_@f1+2,f,c
  4431  001FF8  3604               	rlcf	__div_to_l_@f1+3,f,c
  4432  001FFA  2E0D               	decfsz	__div_to_l_@cntr,f,c
  4433  001FFC  D7DF               	goto	l3089
  4434  001FFE  AE0E               	btfss	__div_to_l_@exp1,7,c
  4435  002000  D00E               	goto	l3113
  4436  002002  500E               	movf	__div_to_l_@exp1,w,c
  4437  002004  0A80               	xorlw	128
  4438  002006  0F9F               	addlw	159
  4439  002008  A0D8               	btfss	status,0,c
  4440  00200A  D7A6               	goto	u3180
  4441  00200C                     l3109:
  4442  00200C  FFFF               	dw	65535	; assembler added errata NOP
  4443  00200E  90D8               	bcf	status,0,c
  4444  002010  320C               	rrcf	__div_to_l_@quot+3,f,c
  4445  002012  320B               	rrcf	__div_to_l_@quot+2,f,c
  4446  002014  320A               	rrcf	__div_to_l_@quot+1,f,c
  4447  002016  3209               	rrcf	__div_to_l_@quot,f,c
  4448  002018  3E0E               	incfsz	__div_to_l_@exp1,f,c
  4449  00201A  D7F8               	goto	l3109
  4450  00201C  D010               	goto	u3240
  4451  00201E                     l3113:
  4452  00201E  FFFF               	dw	65535	; assembler added errata NOP
  4453  002020  0E1F               	movlw	31
  4454  002022  640E               	cpfsgt	__div_to_l_@exp1,c
  4455  002024  D008               	goto	l3121
  4456  002026  D798               	goto	u3180
  4457  002028                     l3119:
  4458  002028  FFFF               	dw	65535	; assembler added errata NOP
  4459  00202A  90D8               	bcf	status,0,c
  4460  00202C  3609               	rlcf	__div_to_l_@quot,f,c
  4461  00202E  360A               	rlcf	__div_to_l_@quot+1,f,c
  4462  002030  360B               	rlcf	__div_to_l_@quot+2,f,c
  4463  002032  360C               	rlcf	__div_to_l_@quot+3,f,c
  4464  002034  060E               	decf	__div_to_l_@exp1,f,c
  4465  002036                     l3121:
  4466  002036  FFFF               	dw	65535	; assembler added errata NOP
  4467  002038  500E               	movf	__div_to_l_@exp1,w,c
  4468  00203A  A4D8               	btfss	status,2,c
  4469  00203C  D7F5               	goto	l3119
  4470  00203E                     u3240:
  4471  00203E  FFFF               	dw	65535	; assembler added errata NOP
  4472  002040  C009  F001         	movff	__div_to_l_@quot,?__div_to_l_
  4473  002044  C00A  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  4474  002048  C00B  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  4475  00204C  C00C  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  4476  002050                     l493:
  4477  002050  FFFF               	dw	65535	; assembler added errata NOP
  4478  002052  0012               	return		;funcret
  4479  002054  FFFF               	dw	65535	; errata NOP
  4480  002056                     __end_of__div_to_l_:
  4481                           	opt callstack 0
  4482                           
  4483 ;; *************** function ___wmul *****************
  4484 ;; Defined at:
  4485 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  4486 ;; Parameters:    Size  Location     Type
  4487 ;;  multiplier      2    0[COMRAM] unsigned int 
  4488 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4489 ;; Auto vars:     Size  Location     Type
  4490 ;;  product         2    4[COMRAM] unsigned int 
  4491 ;; Return value:  Size  Location     Type
  4492 ;;                  2    0[COMRAM] unsigned int 
  4493 ;; Registers used:
  4494 ;;		wreg, status,2, status,0, prodl, prodh
  4495 ;; Tracked objects:
  4496 ;;		On entry : 0/0
  4497 ;;		On exit  : 0/0
  4498 ;;		Unchanged: 0/0
  4499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4500 ;;      Params:         4       0       0       0       0       0       0
  4501 ;;      Locals:         2       0       0       0       0       0       0
  4502 ;;      Temps:          0       0       0       0       0       0       0
  4503 ;;      Totals:         6       0       0       0       0       0       0
  4504 ;;Total ram usage:        6 bytes
  4505 ;; Hardware stack levels used:    1
  4506 ;; This function calls:
  4507 ;;		Nothing
  4508 ;; This function is called by:
  4509 ;;		_sprintf
  4510 ;; This function uses a non-reentrant model
  4511 ;;
  4512                           
  4513                           	psect	text11
  4514  0016E8                     __ptext11:
  4515                           	opt callstack 0
  4516  0016E8                     ___wmul:
  4517                           	opt callstack 0
  4518  0016E8  FFFF               	dw	65535	; assembler added errata NOP
  4519                           
  4520                           ;incstack = 0
  4521  0016EA  5001               	movf	___wmul@multiplier,w,c
  4522  0016EC  0203               	mulwf	___wmul@multiplicand,c
  4523  0016EE  CFF3 F005          	movff	prodl,___wmul@product
  4524  0016F2  CFF4 F006          	movff	prodh,___wmul@product+1
  4525  0016F6  5001               	movf	___wmul@multiplier,w,c
  4526  0016F8  0204               	mulwf	___wmul@multiplicand+1,c
  4527  0016FA  50F3               	movf	prodl,w,c
  4528  0016FC  2606               	addwf	___wmul@product+1,f,c
  4529  0016FE  5002               	movf	___wmul@multiplier+1,w,c
  4530  001700  0203               	mulwf	___wmul@multiplicand,c
  4531  001702  50F3               	movf	prodl,w,c
  4532  001704  2606               	addwf	___wmul@product+1,f,c
  4533  001706  C005  F001         	movff	___wmul@product,?___wmul
  4534  00170A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4535  00170E  0012               	return		;funcret
  4536  001710  FFFF               	dw	65535	; errata NOP
  4537  001712                     __end_of___wmul:
  4538                           	opt callstack 0
  4539                           
  4540 ;; *************** function ___llmod *****************
  4541 ;; Defined at:
  4542 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;  dividend        4    0[COMRAM] unsigned long 
  4545 ;;  divisor         4    4[COMRAM] unsigned long 
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;  counter         1    8[COMRAM] unsigned char 
  4548 ;; Return value:  Size  Location     Type
  4549 ;;                  4    0[COMRAM] unsigned long 
  4550 ;; Registers used:
  4551 ;;		wreg, status,2, status,0
  4552 ;; Tracked objects:
  4553 ;;		On entry : 0/0
  4554 ;;		On exit  : 0/0
  4555 ;;		Unchanged: 0/0
  4556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4557 ;;      Params:         8       0       0       0       0       0       0
  4558 ;;      Locals:         1       0       0       0       0       0       0
  4559 ;;      Temps:          0       0       0       0       0       0       0
  4560 ;;      Totals:         9       0       0       0       0       0       0
  4561 ;;Total ram usage:        9 bytes
  4562 ;; Hardware stack levels used:    1
  4563 ;; This function calls:
  4564 ;;		Nothing
  4565 ;; This function is called by:
  4566 ;;		_sprintf
  4567 ;; This function uses a non-reentrant model
  4568 ;;
  4569                           
  4570                           	psect	text12
  4571  0019FA                     __ptext12:
  4572                           	opt callstack 0
  4573  0019FA                     ___llmod:
  4574                           	opt callstack 0
  4575  0019FA  FFFF               	dw	65535	; assembler added errata NOP
  4576                           
  4577                           ;incstack = 0
  4578  0019FC  5005               	movf	___llmod@divisor,w,c
  4579  0019FE  1006               	iorwf	___llmod@divisor+1,w,c
  4580  001A00  1007               	iorwf	___llmod@divisor+2,w,c
  4581  001A02  1008               	iorwf	___llmod@divisor+3,w,c
  4582  001A04  B4D8               	btfsc	status,2,c
  4583  001A06  D028               	goto	l681
  4584  001A08  0E01               	movlw	1
  4585  001A0A  6E09               	movwf	___llmod@counter,c
  4586  001A0C  D007               	goto	l3391
  4587  001A0E                     l3389:
  4588  001A0E  FFFF               	dw	65535	; assembler added errata NOP
  4589  001A10  90D8               	bcf	status,0,c
  4590  001A12  3605               	rlcf	___llmod@divisor,f,c
  4591  001A14  3606               	rlcf	___llmod@divisor+1,f,c
  4592  001A16  3607               	rlcf	___llmod@divisor+2,f,c
  4593  001A18  3608               	rlcf	___llmod@divisor+3,f,c
  4594  001A1A  2A09               	incf	___llmod@counter,f,c
  4595  001A1C                     l3391:
  4596  001A1C  FFFF               	dw	65535	; assembler added errata NOP
  4597  001A1E  AE08               	btfss	___llmod@divisor+3,7,c
  4598  001A20  D7F6               	goto	l3389
  4599  001A22                     u3680:
  4600  001A22  FFFF               	dw	65535	; assembler added errata NOP
  4601  001A24  5005               	movf	___llmod@divisor,w,c
  4602  001A26  5C01               	subwf	___llmod@dividend,w,c
  4603  001A28  5006               	movf	___llmod@divisor+1,w,c
  4604  001A2A  5802               	subwfb	___llmod@dividend+1,w,c
  4605  001A2C  5007               	movf	___llmod@divisor+2,w,c
  4606  001A2E  5803               	subwfb	___llmod@dividend+2,w,c
  4607  001A30  5008               	movf	___llmod@divisor+3,w,c
  4608  001A32  5804               	subwfb	___llmod@dividend+3,w,c
  4609  001A34  A0D8               	btfss	status,0,c
  4610  001A36  D008               	goto	l3397
  4611  001A38  5005               	movf	___llmod@divisor,w,c
  4612  001A3A  5E01               	subwf	___llmod@dividend,f,c
  4613  001A3C  5006               	movf	___llmod@divisor+1,w,c
  4614  001A3E  5A02               	subwfb	___llmod@dividend+1,f,c
  4615  001A40  5007               	movf	___llmod@divisor+2,w,c
  4616  001A42  5A03               	subwfb	___llmod@dividend+2,f,c
  4617  001A44  5008               	movf	___llmod@divisor+3,w,c
  4618  001A46  5A04               	subwfb	___llmod@dividend+3,f,c
  4619  001A48                     l3397:
  4620  001A48  FFFF               	dw	65535	; assembler added errata NOP
  4621  001A4A  90D8               	bcf	status,0,c
  4622  001A4C  3208               	rrcf	___llmod@divisor+3,f,c
  4623  001A4E  3207               	rrcf	___llmod@divisor+2,f,c
  4624  001A50  3206               	rrcf	___llmod@divisor+1,f,c
  4625  001A52  3205               	rrcf	___llmod@divisor,f,c
  4626  001A54  2E09               	decfsz	___llmod@counter,f,c
  4627  001A56  D7E5               	goto	u3680
  4628  001A58                     l681:
  4629  001A58  FFFF               	dw	65535	; assembler added errata NOP
  4630  001A5A  C001  F001         	movff	___llmod@dividend,?___llmod
  4631  001A5E  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  4632  001A62  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  4633  001A66  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  4634  001A6A  0012               	return		;funcret
  4635  001A6C  FFFF               	dw	65535	; errata NOP
  4636  001A6E                     __end_of___llmod:
  4637                           	opt callstack 0
  4638                           
  4639 ;; *************** function ___lldiv *****************
  4640 ;; Defined at:
  4641 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  4642 ;; Parameters:    Size  Location     Type
  4643 ;;  dividend        4    0[COMRAM] unsigned long 
  4644 ;;  divisor         4    4[COMRAM] unsigned long 
  4645 ;; Auto vars:     Size  Location     Type
  4646 ;;  quotient        4    8[COMRAM] unsigned long 
  4647 ;;  counter         1   12[COMRAM] unsigned char 
  4648 ;; Return value:  Size  Location     Type
  4649 ;;                  4    0[COMRAM] unsigned long 
  4650 ;; Registers used:
  4651 ;;		wreg, status,2, status,0
  4652 ;; Tracked objects:
  4653 ;;		On entry : 0/0
  4654 ;;		On exit  : 0/0
  4655 ;;		Unchanged: 0/0
  4656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4657 ;;      Params:         8       0       0       0       0       0       0
  4658 ;;      Locals:         5       0       0       0       0       0       0
  4659 ;;      Temps:          0       0       0       0       0       0       0
  4660 ;;      Totals:        13       0       0       0       0       0       0
  4661 ;;Total ram usage:       13 bytes
  4662 ;; Hardware stack levels used:    1
  4663 ;; This function calls:
  4664 ;;		Nothing
  4665 ;; This function is called by:
  4666 ;;		_sprintf
  4667 ;; This function uses a non-reentrant model
  4668 ;;
  4669                           
  4670                           	psect	text13
  4671  001AF2                     __ptext13:
  4672                           	opt callstack 0
  4673  001AF2                     ___lldiv:
  4674                           	opt callstack 0
  4675  001AF2  FFFF               	dw	65535	; assembler added errata NOP
  4676                           
  4677                           ;incstack = 0
  4678  001AF4  0E00               	movlw	0
  4679  001AF6  6E09               	movwf	___lldiv@quotient,c
  4680  001AF8  0E00               	movlw	0
  4681  001AFA  6E0A               	movwf	___lldiv@quotient+1,c
  4682  001AFC  0E00               	movlw	0
  4683  001AFE  6E0B               	movwf	___lldiv@quotient+2,c
  4684  001B00  0E00               	movlw	0
  4685  001B02  6E0C               	movwf	___lldiv@quotient+3,c
  4686  001B04  5005               	movf	___lldiv@divisor,w,c
  4687  001B06  1006               	iorwf	___lldiv@divisor+1,w,c
  4688  001B08  1007               	iorwf	___lldiv@divisor+2,w,c
  4689  001B0A  1008               	iorwf	___lldiv@divisor+3,w,c
  4690  001B0C  B4D8               	btfsc	status,2,c
  4691  001B0E  D02E               	goto	l266
  4692  001B10  0E01               	movlw	1
  4693  001B12  6E0D               	movwf	___lldiv@counter,c
  4694  001B14  D007               	goto	l3137
  4695  001B16                     l3135:
  4696  001B16  FFFF               	dw	65535	; assembler added errata NOP
  4697  001B18  90D8               	bcf	status,0,c
  4698  001B1A  3605               	rlcf	___lldiv@divisor,f,c
  4699  001B1C  3606               	rlcf	___lldiv@divisor+1,f,c
  4700  001B1E  3607               	rlcf	___lldiv@divisor+2,f,c
  4701  001B20  3608               	rlcf	___lldiv@divisor+3,f,c
  4702  001B22  2A0D               	incf	___lldiv@counter,f,c
  4703  001B24                     l3137:
  4704  001B24  FFFF               	dw	65535	; assembler added errata NOP
  4705  001B26  AE08               	btfss	___lldiv@divisor+3,7,c
  4706  001B28  D7F6               	goto	l3135
  4707  001B2A                     u3260:
  4708  001B2A  FFFF               	dw	65535	; assembler added errata NOP
  4709  001B2C  90D8               	bcf	status,0,c
  4710  001B2E  3609               	rlcf	___lldiv@quotient,f,c
  4711  001B30  360A               	rlcf	___lldiv@quotient+1,f,c
  4712  001B32  360B               	rlcf	___lldiv@quotient+2,f,c
  4713  001B34  360C               	rlcf	___lldiv@quotient+3,f,c
  4714  001B36  5005               	movf	___lldiv@divisor,w,c
  4715  001B38  5C01               	subwf	___lldiv@dividend,w,c
  4716  001B3A  5006               	movf	___lldiv@divisor+1,w,c
  4717  001B3C  5802               	subwfb	___lldiv@dividend+1,w,c
  4718  001B3E  5007               	movf	___lldiv@divisor+2,w,c
  4719  001B40  5803               	subwfb	___lldiv@dividend+2,w,c
  4720  001B42  5008               	movf	___lldiv@divisor+3,w,c
  4721  001B44  5804               	subwfb	___lldiv@dividend+3,w,c
  4722  001B46  A0D8               	btfss	status,0,c
  4723  001B48  D009               	goto	l3147
  4724  001B4A  5005               	movf	___lldiv@divisor,w,c
  4725  001B4C  5E01               	subwf	___lldiv@dividend,f,c
  4726  001B4E  5006               	movf	___lldiv@divisor+1,w,c
  4727  001B50  5A02               	subwfb	___lldiv@dividend+1,f,c
  4728  001B52  5007               	movf	___lldiv@divisor+2,w,c
  4729  001B54  5A03               	subwfb	___lldiv@dividend+2,f,c
  4730  001B56  5008               	movf	___lldiv@divisor+3,w,c
  4731  001B58  5A04               	subwfb	___lldiv@dividend+3,f,c
  4732  001B5A  8009               	bsf	___lldiv@quotient,0,c
  4733  001B5C                     l3147:
  4734  001B5C  FFFF               	dw	65535	; assembler added errata NOP
  4735  001B5E  90D8               	bcf	status,0,c
  4736  001B60  3208               	rrcf	___lldiv@divisor+3,f,c
  4737  001B62  3207               	rrcf	___lldiv@divisor+2,f,c
  4738  001B64  3206               	rrcf	___lldiv@divisor+1,f,c
  4739  001B66  3205               	rrcf	___lldiv@divisor,f,c
  4740  001B68  2E0D               	decfsz	___lldiv@counter,f,c
  4741  001B6A  D7DF               	goto	u3260
  4742  001B6C                     l266:
  4743  001B6C  FFFF               	dw	65535	; assembler added errata NOP
  4744  001B6E  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4745  001B72  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4746  001B76  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4747  001B7A  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4748  001B7E  0012               	return		;funcret
  4749  001B80  FFFF               	dw	65535	; errata NOP
  4750  001B82                     __end_of___lldiv:
  4751                           	opt callstack 0
  4752                           
  4753 ;; *************** function ___fltol *****************
  4754 ;; Defined at:
  4755 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  4756 ;; Parameters:    Size  Location     Type
  4757 ;;  f1              4   48[COMRAM] unsigned long 
  4758 ;; Auto vars:     Size  Location     Type
  4759 ;;  exp1            1   57[COMRAM] unsigned char 
  4760 ;;  sign1           1   56[COMRAM] unsigned char 
  4761 ;; Return value:  Size  Location     Type
  4762 ;;                  4   48[COMRAM] long 
  4763 ;; Registers used:
  4764 ;;		wreg, status,2, status,0
  4765 ;; Tracked objects:
  4766 ;;		On entry : 0/0
  4767 ;;		On exit  : 0/0
  4768 ;;		Unchanged: 0/0
  4769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4770 ;;      Params:         4       0       0       0       0       0       0
  4771 ;;      Locals:         2       0       0       0       0       0       0
  4772 ;;      Temps:          4       0       0       0       0       0       0
  4773 ;;      Totals:        10       0       0       0       0       0       0
  4774 ;;Total ram usage:       10 bytes
  4775 ;; Hardware stack levels used:    1
  4776 ;; This function calls:
  4777 ;;		Nothing
  4778 ;; This function is called by:
  4779 ;;		_sprintf
  4780 ;; This function uses a non-reentrant model
  4781 ;;
  4782                           
  4783                           	psect	text14
  4784  001CB0                     __ptext14:
  4785                           	opt callstack 0
  4786  001CB0                     ___fltol:
  4787                           	opt callstack 0
  4788  001CB0  FFFF               	dw	65535	; assembler added errata NOP
  4789                           
  4790                           ;incstack = 0
  4791  001CB2  3433               	rlcf	___fltol@f1+2,w,c
  4792  001CB4  3434               	rlcf	___fltol@f1+3,w,c
  4793  001CB6  6E3A               	movwf	___fltol@exp1,c
  4794  001CB8  503A               	movf	___fltol@exp1,w,c
  4795  001CBA  A4D8               	btfss	status,2,c
  4796  001CBC  D00A               	goto	l3347
  4797  001CBE                     u3600:
  4798  001CBE  FFFF               	dw	65535	; assembler added errata NOP
  4799  001CC0  0E00               	movlw	0
  4800  001CC2  6E31               	movwf	?___fltol,c
  4801  001CC4  0E00               	movlw	0
  4802  001CC6  6E32               	movwf	?___fltol+1,c
  4803  001CC8  0E00               	movlw	0
  4804  001CCA  6E33               	movwf	?___fltol+2,c
  4805  001CCC  0E00               	movlw	0
  4806  001CCE  6E34               	movwf	?___fltol+3,c
  4807  001CD0  D056               	goto	l545
  4808  001CD2                     l3347:
  4809  001CD2  FFFF               	dw	65535	; assembler added errata NOP
  4810  001CD4  C031  F035         	movff	___fltol@f1,??___fltol
  4811  001CD8  C032  F036         	movff	___fltol@f1+1,??___fltol+1
  4812  001CDC  C033  F037         	movff	___fltol@f1+2,??___fltol+2
  4813  001CE0  C034  F038         	movff	___fltol@f1+3,??___fltol+3
  4814  001CE4  0E20               	movlw	32
  4815  001CE6  D006               	goto	u3610
  4816  001CE8                     u3615:
  4817  001CE8  FFFF               	dw	65535	; assembler added errata NOP
  4818  001CEA  90D8               	bcf	status,0,c
  4819  001CEC  3238               	rrcf	??___fltol+3,f,c
  4820  001CEE  3237               	rrcf	??___fltol+2,f,c
  4821  001CF0  3236               	rrcf	??___fltol+1,f,c
  4822  001CF2  3235               	rrcf	??___fltol,f,c
  4823  001CF4                     u3610:
  4824  001CF4  FFFF               	dw	65535	; assembler added errata NOP
  4825  001CF6  2EE8               	decfsz	wreg,f,c
  4826  001CF8  D7F7               	goto	u3615
  4827  001CFA  5035               	movf	??___fltol,w,c
  4828  001CFC  6E39               	movwf	___fltol@sign1,c
  4829  001CFE  8E33               	bsf	___fltol@f1+2,7,c
  4830  001D00  0EFF               	movlw	255
  4831  001D02  1631               	andwf	___fltol@f1,f,c
  4832  001D04  0EFF               	movlw	255
  4833  001D06  1632               	andwf	___fltol@f1+1,f,c
  4834  001D08  0EFF               	movlw	255
  4835  001D0A  1633               	andwf	___fltol@f1+2,f,c
  4836  001D0C  0E00               	movlw	0
  4837  001D0E  1634               	andwf	___fltol@f1+3,f,c
  4838  001D10  0E96               	movlw	150
  4839  001D12  5E3A               	subwf	___fltol@exp1,f,c
  4840  001D14  AE3A               	btfss	___fltol@exp1,7,c
  4841  001D16  D00E               	goto	l3367
  4842  001D18  503A               	movf	___fltol@exp1,w,c
  4843  001D1A  0A80               	xorlw	128
  4844  001D1C  0F97               	addlw	151
  4845  001D1E  A0D8               	btfss	status,0,c
  4846  001D20  D7CE               	goto	u3600
  4847  001D22                     l3363:
  4848  001D22  FFFF               	dw	65535	; assembler added errata NOP
  4849  001D24  90D8               	bcf	status,0,c
  4850  001D26  3234               	rrcf	___fltol@f1+3,f,c
  4851  001D28  3233               	rrcf	___fltol@f1+2,f,c
  4852  001D2A  3232               	rrcf	___fltol@f1+1,f,c
  4853  001D2C  3231               	rrcf	___fltol@f1,f,c
  4854  001D2E  3E3A               	incfsz	___fltol@exp1,f,c
  4855  001D30  D7F8               	goto	l3363
  4856  001D32  D010               	goto	u3650
  4857  001D34                     l3367:
  4858  001D34  FFFF               	dw	65535	; assembler added errata NOP
  4859  001D36  0E1F               	movlw	31
  4860  001D38  643A               	cpfsgt	___fltol@exp1,c
  4861  001D3A  D008               	goto	l3375
  4862  001D3C  D7C0               	goto	u3600
  4863  001D3E                     l3373:
  4864  001D3E  FFFF               	dw	65535	; assembler added errata NOP
  4865  001D40  90D8               	bcf	status,0,c
  4866  001D42  3631               	rlcf	___fltol@f1,f,c
  4867  001D44  3632               	rlcf	___fltol@f1+1,f,c
  4868  001D46  3633               	rlcf	___fltol@f1+2,f,c
  4869  001D48  3634               	rlcf	___fltol@f1+3,f,c
  4870  001D4A  063A               	decf	___fltol@exp1,f,c
  4871  001D4C                     l3375:
  4872  001D4C  FFFF               	dw	65535	; assembler added errata NOP
  4873  001D4E  503A               	movf	___fltol@exp1,w,c
  4874  001D50  A4D8               	btfss	status,2,c
  4875  001D52  D7F5               	goto	l3373
  4876  001D54                     u3650:
  4877  001D54  FFFF               	dw	65535	; assembler added errata NOP
  4878  001D56  5039               	movf	___fltol@sign1,w,c
  4879  001D58  B4D8               	btfsc	status,2,c
  4880  001D5A  D008               	goto	l3381
  4881  001D5C  1E34               	comf	___fltol@f1+3,f,c
  4882  001D5E  1E33               	comf	___fltol@f1+2,f,c
  4883  001D60  1E32               	comf	___fltol@f1+1,f,c
  4884  001D62  6C31               	negf	___fltol@f1,c
  4885  001D64  0E00               	movlw	0
  4886  001D66  2232               	addwfc	___fltol@f1+1,f,c
  4887  001D68  2233               	addwfc	___fltol@f1+2,f,c
  4888  001D6A  2234               	addwfc	___fltol@f1+3,f,c
  4889  001D6C                     l3381:
  4890  001D6C  FFFF               	dw	65535	; assembler added errata NOP
  4891  001D6E  C031  F031         	movff	___fltol@f1,?___fltol
  4892  001D72  C032  F032         	movff	___fltol@f1+1,?___fltol+1
  4893  001D76  C033  F033         	movff	___fltol@f1+2,?___fltol+2
  4894  001D7A  C034  F034         	movff	___fltol@f1+3,?___fltol+3
  4895  001D7E                     l545:
  4896  001D7E  FFFF               	dw	65535	; assembler added errata NOP
  4897  001D80  0012               	return		;funcret
  4898  001D82  FFFF               	dw	65535	; errata NOP
  4899  001D84                     __end_of___fltol:
  4900                           	opt callstack 0
  4901                           
  4902 ;; *************** function ___flsub *****************
  4903 ;; Defined at:
  4904 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  4905 ;; Parameters:    Size  Location     Type
  4906 ;;  b               4   68[COMRAM] long 
  4907 ;;  a               4   72[COMRAM] long 
  4908 ;; Auto vars:     Size  Location     Type
  4909 ;;		None
  4910 ;; Return value:  Size  Location     Type
  4911 ;;                  4   68[COMRAM] long 
  4912 ;; Registers used:
  4913 ;;		wreg, status,2, status,0, cstack
  4914 ;; Tracked objects:
  4915 ;;		On entry : 0/0
  4916 ;;		On exit  : 0/0
  4917 ;;		Unchanged: 0/0
  4918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4919 ;;      Params:         8       0       0       0       0       0       0
  4920 ;;      Locals:         0       0       0       0       0       0       0
  4921 ;;      Temps:          0       0       0       0       0       0       0
  4922 ;;      Totals:         8       0       0       0       0       0       0
  4923 ;;Total ram usage:        8 bytes
  4924 ;; Hardware stack levels used:    1
  4925 ;; Hardware stack levels required when called:    1
  4926 ;; This function calls:
  4927 ;;		___fladd
  4928 ;; This function is called by:
  4929 ;;		_sprintf
  4930 ;; This function uses a non-reentrant model
  4931 ;;
  4932                           
  4933                           	psect	text15
  4934  001788                     __ptext15:
  4935                           	opt callstack 0
  4936  001788                     ___flsub:
  4937                           	opt callstack 0
  4938  001788  FFFF               	dw	65535	; assembler added errata NOP
  4939                           
  4940                           ;incstack = 0
  4941  00178A  0E00               	movlw	0
  4942  00178C  1A49               	xorwf	___flsub@a,f,c
  4943  00178E  0E00               	movlw	0
  4944  001790  1A4A               	xorwf	___flsub@a+1,f,c
  4945  001792  0E00               	movlw	0
  4946  001794  1A4B               	xorwf	___flsub@a+2,f,c
  4947  001796  0E80               	movlw	128
  4948  001798  1A4C               	xorwf	___flsub@a+3,f,c
  4949  00179A  C045  F035         	movff	___flsub@b,___fladd@b
  4950  00179E  C046  F036         	movff	___flsub@b+1,___fladd@b+1
  4951  0017A2  C047  F037         	movff	___flsub@b+2,___fladd@b+2
  4952  0017A6  C048  F038         	movff	___flsub@b+3,___fladd@b+3
  4953  0017AA  C049  F039         	movff	___flsub@a,___fladd@a
  4954  0017AE  C04A  F03A         	movff	___flsub@a+1,___fladd@a+1
  4955  0017B2  C04B  F03B         	movff	___flsub@a+2,___fladd@a+2
  4956  0017B6  C04C  F03C         	movff	___flsub@a+3,___fladd@a+3
  4957  0017BA  EC63  F015         	call	___fladd	;wreg free
  4958  0017BE  C035  F045         	movff	?___fladd,?___flsub
  4959  0017C2  C036  F046         	movff	?___fladd+1,?___flsub+1
  4960  0017C6  C037  F047         	movff	?___fladd+2,?___flsub+2
  4961  0017CA  C038  F048         	movff	?___fladd+3,?___flsub+3
  4962  0017CE  0012               	return		;funcret
  4963  0017D0  FFFF               	dw	65535	; errata NOP
  4964  0017D2                     __end_of___flsub:
  4965                           	opt callstack 0
  4966                           
  4967 ;; *************** function ___flneg *****************
  4968 ;; Defined at:
  4969 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flneg.c"
  4970 ;; Parameters:    Size  Location     Type
  4971 ;;  f1              4    0[COMRAM] long 
  4972 ;; Auto vars:     Size  Location     Type
  4973 ;;		None
  4974 ;; Return value:  Size  Location     Type
  4975 ;;                  4    0[COMRAM] long 
  4976 ;; Registers used:
  4977 ;;		wreg, status,2, status,0
  4978 ;; Tracked objects:
  4979 ;;		On entry : 0/0
  4980 ;;		On exit  : 0/0
  4981 ;;		Unchanged: 0/0
  4982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4983 ;;      Params:         4       0       0       0       0       0       0
  4984 ;;      Locals:         0       0       0       0       0       0       0
  4985 ;;      Temps:          0       0       0       0       0       0       0
  4986 ;;      Totals:         4       0       0       0       0       0       0
  4987 ;;Total ram usage:        4 bytes
  4988 ;; Hardware stack levels used:    1
  4989 ;; This function calls:
  4990 ;;		Nothing
  4991 ;; This function is called by:
  4992 ;;		_sprintf
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           
  4996                           	psect	text16
  4997  001712                     __ptext16:
  4998                           	opt callstack 0
  4999  001712                     ___flneg:
  5000                           	opt callstack 0
  5001  001712  FFFF               	dw	65535	; assembler added errata NOP
  5002                           
  5003                           ;incstack = 0
  5004  001714  5001               	movf	___flneg@f1,w,c
  5005  001716  1002               	iorwf	___flneg@f1+1,w,c
  5006  001718  1003               	iorwf	___flneg@f1+2,w,c
  5007  00171A  1004               	iorwf	___flneg@f1+3,w,c
  5008  00171C  B4D8               	btfsc	status,2,c
  5009  00171E  D008               	goto	l3337
  5010  001720  0E00               	movlw	0
  5011  001722  1A01               	xorwf	___flneg@f1,f,c
  5012  001724  0E00               	movlw	0
  5013  001726  1A02               	xorwf	___flneg@f1+1,f,c
  5014  001728  0E00               	movlw	0
  5015  00172A  1A03               	xorwf	___flneg@f1+2,f,c
  5016  00172C  0E80               	movlw	128
  5017  00172E  1A04               	xorwf	___flneg@f1+3,f,c
  5018  001730                     l3337:
  5019  001730  FFFF               	dw	65535	; assembler added errata NOP
  5020  001732  C001  F001         	movff	___flneg@f1,?___flneg
  5021  001736  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5022  00173A  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5023  00173E  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5024  001742  0012               	return		;funcret
  5025  001744  FFFF               	dw	65535	; errata NOP
  5026  001746                     __end_of___flneg:
  5027                           	opt callstack 0
  5028                           
  5029 ;; *************** function ___flge *****************
  5030 ;; Defined at:
  5031 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
  5032 ;; Parameters:    Size  Location     Type
  5033 ;;  ff1             4    0[COMRAM] long 
  5034 ;;  ff2             4    4[COMRAM] long 
  5035 ;; Auto vars:     Size  Location     Type
  5036 ;;		None
  5037 ;; Return value:  Size  Location     Type
  5038 ;;		None               void
  5039 ;; Registers used:
  5040 ;;		wreg, status,2, status,0
  5041 ;; Tracked objects:
  5042 ;;		On entry : 0/0
  5043 ;;		On exit  : 0/0
  5044 ;;		Unchanged: 0/0
  5045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5046 ;;      Params:         8       0       0       0       0       0       0
  5047 ;;      Locals:         0       0       0       0       0       0       0
  5048 ;;      Temps:          4       0       0       0       0       0       0
  5049 ;;      Totals:        12       0       0       0       0       0       0
  5050 ;;Total ram usage:       12 bytes
  5051 ;; Hardware stack levels used:    1
  5052 ;; This function calls:
  5053 ;;		Nothing
  5054 ;; This function is called by:
  5055 ;;		_main
  5056 ;;		_sprintf
  5057 ;; This function uses a non-reentrant model
  5058 ;;
  5059                           
  5060                           	psect	text17
  5061  001D84                     __ptext17:
  5062                           	opt callstack 0
  5063  001D84                     ___flge:
  5064                           	opt callstack 0
  5065  001D84  FFFF               	dw	65535	; assembler added errata NOP
  5066                           
  5067                           ;incstack = 0
  5068  001D86  0E00               	movlw	0
  5069  001D88  1401               	andwf	___flge@ff1,w,c
  5070  001D8A  6E09               	movwf	??___flge& (0+255),c
  5071  001D8C  0E00               	movlw	0
  5072  001D8E  1402               	andwf	___flge@ff1+1,w,c
  5073  001D90  6E0A               	movwf	(??___flge+1)& (0+255),c
  5074  001D92  0E80               	movlw	128
  5075  001D94  1403               	andwf	___flge@ff1+2,w,c
  5076  001D96  6E0B               	movwf	(??___flge+2)& (0+255),c
  5077  001D98  0E7F               	movlw	127
  5078  001D9A  1404               	andwf	___flge@ff1+3,w,c
  5079  001D9C  6E0C               	movwf	(??___flge+3)& (0+255),c
  5080  001D9E  5009               	movf	??___flge,w,c
  5081  001DA0  100A               	iorwf	??___flge+1,w,c
  5082  001DA2  100B               	iorwf	??___flge+2,w,c
  5083  001DA4  100C               	iorwf	??___flge+3,w,c
  5084  001DA6  A4D8               	btfss	status,2,c
  5085  001DA8  D008               	goto	l3315
  5086  001DAA  0E00               	movlw	0
  5087  001DAC  6E01               	movwf	___flge@ff1,c
  5088  001DAE  0E00               	movlw	0
  5089  001DB0  6E02               	movwf	___flge@ff1+1,c
  5090  001DB2  0E00               	movlw	0
  5091  001DB4  6E03               	movwf	___flge@ff1+2,c
  5092  001DB6  0E00               	movlw	0
  5093  001DB8  6E04               	movwf	___flge@ff1+3,c
  5094  001DBA                     l3315:
  5095  001DBA  FFFF               	dw	65535	; assembler added errata NOP
  5096  001DBC  0E00               	movlw	0
  5097  001DBE  1405               	andwf	___flge@ff2,w,c
  5098  001DC0  6E09               	movwf	??___flge& (0+255),c
  5099  001DC2  0E00               	movlw	0
  5100  001DC4  1406               	andwf	___flge@ff2+1,w,c
  5101  001DC6  6E0A               	movwf	(??___flge+1)& (0+255),c
  5102  001DC8  0E80               	movlw	128
  5103  001DCA  1407               	andwf	___flge@ff2+2,w,c
  5104  001DCC  6E0B               	movwf	(??___flge+2)& (0+255),c
  5105  001DCE  0E7F               	movlw	127
  5106  001DD0  1408               	andwf	___flge@ff2+3,w,c
  5107  001DD2  6E0C               	movwf	(??___flge+3)& (0+255),c
  5108  001DD4  5009               	movf	??___flge,w,c
  5109  001DD6  100A               	iorwf	??___flge+1,w,c
  5110  001DD8  100B               	iorwf	??___flge+2,w,c
  5111  001DDA  100C               	iorwf	??___flge+3,w,c
  5112  001DDC  A4D8               	btfss	status,2,c
  5113  001DDE  D008               	goto	l3319
  5114  001DE0  0E00               	movlw	0
  5115  001DE2  6E05               	movwf	___flge@ff2,c
  5116  001DE4  0E00               	movlw	0
  5117  001DE6  6E06               	movwf	___flge@ff2+1,c
  5118  001DE8  0E00               	movlw	0
  5119  001DEA  6E07               	movwf	___flge@ff2+2,c
  5120  001DEC  0E00               	movlw	0
  5121  001DEE  6E08               	movwf	___flge@ff2+3,c
  5122  001DF0                     l3319:
  5123  001DF0  FFFF               	dw	65535	; assembler added errata NOP
  5124  001DF2  AE04               	btfss	___flge@ff1+3,7,c
  5125  001DF4  D009               	goto	l3323
  5126  001DF6  6C01               	negf	___flge@ff1,c
  5127  001DF8  1E02               	comf	___flge@ff1+1,f,c
  5128  001DFA  B0D8               	btfsc	status,0,c
  5129  001DFC  2A02               	incf	___flge@ff1+1,f,c
  5130  001DFE  1E03               	comf	___flge@ff1+2,f,c
  5131  001E00  B0D8               	btfsc	status,0,c
  5132  001E02  2A03               	incf	___flge@ff1+2,f,c
  5133  001E04  0E80               	movlw	128
  5134  001E06  5604               	subfwb	___flge@ff1+3,f,c
  5135  001E08                     l3323:
  5136  001E08  FFFF               	dw	65535	; assembler added errata NOP
  5137  001E0A  AE08               	btfss	___flge@ff2+3,7,c
  5138  001E0C  D009               	goto	l517
  5139  001E0E  6C05               	negf	___flge@ff2,c
  5140  001E10  1E06               	comf	___flge@ff2+1,f,c
  5141  001E12  B0D8               	btfsc	status,0,c
  5142  001E14  2A06               	incf	___flge@ff2+1,f,c
  5143  001E16  1E07               	comf	___flge@ff2+2,f,c
  5144  001E18  B0D8               	btfsc	status,0,c
  5145  001E1A  2A07               	incf	___flge@ff2+2,f,c
  5146  001E1C  0E80               	movlw	128
  5147  001E1E  5608               	subfwb	___flge@ff2+3,f,c
  5148  001E20                     l517:
  5149  001E20  FFFF               	dw	65535	; assembler added errata NOP
  5150  001E22  0E00               	movlw	0
  5151  001E24  1A01               	xorwf	___flge@ff1,f,c
  5152  001E26  0E00               	movlw	0
  5153  001E28  1A02               	xorwf	___flge@ff1+1,f,c
  5154  001E2A  0E00               	movlw	0
  5155  001E2C  1A03               	xorwf	___flge@ff1+2,f,c
  5156  001E2E  0E80               	movlw	128
  5157  001E30  1A04               	xorwf	___flge@ff1+3,f,c
  5158  001E32  0E00               	movlw	0
  5159  001E34  1A05               	xorwf	___flge@ff2,f,c
  5160  001E36  0E00               	movlw	0
  5161  001E38  1A06               	xorwf	___flge@ff2+1,f,c
  5162  001E3A  0E00               	movlw	0
  5163  001E3C  1A07               	xorwf	___flge@ff2+2,f,c
  5164  001E3E  0E80               	movlw	128
  5165  001E40  1A08               	xorwf	___flge@ff2+3,f,c
  5166  001E42  5005               	movf	___flge@ff2,w,c
  5167  001E44  5C01               	subwf	___flge@ff1,w,c
  5168  001E46  5006               	movf	___flge@ff2+1,w,c
  5169  001E48  5802               	subwfb	___flge@ff1+1,w,c
  5170  001E4A  5007               	movf	___flge@ff2+2,w,c
  5171  001E4C  5803               	subwfb	___flge@ff1+2,w,c
  5172  001E4E  5008               	movf	___flge@ff2+3,w,c
  5173  001E50  5804               	subwfb	___flge@ff1+3,w,c
  5174  001E52  B0D8               	btfsc	status,0,c
  5175  001E54  D002               	goto	l3329
  5176  001E56  90D8               	bcf	status,0,c
  5177  001E58  D002               	goto	l518
  5178  001E5A                     l3329:
  5179  001E5A  FFFF               	dw	65535	; assembler added errata NOP
  5180  001E5C  80D8               	bsf	status,0,c
  5181  001E5E                     l518:
  5182  001E5E  FFFF               	dw	65535	; assembler added errata NOP
  5183  001E60  0012               	return		;funcret
  5184  001E62  FFFF               	dw	65535	; errata NOP
  5185  001E64                     __end_of___flge:
  5186                           	opt callstack 0
  5187                           
  5188 ;; *************** function ___fleq *****************
  5189 ;; Defined at:
  5190 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fleq.c"
  5191 ;; Parameters:    Size  Location     Type
  5192 ;;  ff1             4    0[COMRAM] long 
  5193 ;;  ff2             4    4[COMRAM] long 
  5194 ;; Auto vars:     Size  Location     Type
  5195 ;;		None
  5196 ;; Return value:  Size  Location     Type
  5197 ;;		None               void
  5198 ;; Registers used:
  5199 ;;		wreg, status,2, status,0
  5200 ;; Tracked objects:
  5201 ;;		On entry : 0/0
  5202 ;;		On exit  : 0/0
  5203 ;;		Unchanged: 0/0
  5204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5205 ;;      Params:         8       0       0       0       0       0       0
  5206 ;;      Locals:         0       0       0       0       0       0       0
  5207 ;;      Temps:          4       0       0       0       0       0       0
  5208 ;;      Totals:        12       0       0       0       0       0       0
  5209 ;;Total ram usage:       12 bytes
  5210 ;; Hardware stack levels used:    1
  5211 ;; This function calls:
  5212 ;;		Nothing
  5213 ;; This function is called by:
  5214 ;;		_sprintf
  5215 ;; This function uses a non-reentrant model
  5216 ;;
  5217                           
  5218                           	psect	text18
  5219  001B82                     __ptext18:
  5220                           	opt callstack 0
  5221  001B82                     ___fleq:
  5222                           	opt callstack 0
  5223  001B82  FFFF               	dw	65535	; assembler added errata NOP
  5224                           
  5225                           ;incstack = 0
  5226  001B84  0E00               	movlw	0
  5227  001B86  1401               	andwf	___fleq@ff1,w,c
  5228  001B88  6E09               	movwf	??___fleq& (0+255),c
  5229  001B8A  0E00               	movlw	0
  5230  001B8C  1402               	andwf	___fleq@ff1+1,w,c
  5231  001B8E  6E0A               	movwf	(??___fleq+1)& (0+255),c
  5232  001B90  0E80               	movlw	128
  5233  001B92  1403               	andwf	___fleq@ff1+2,w,c
  5234  001B94  6E0B               	movwf	(??___fleq+2)& (0+255),c
  5235  001B96  0E7F               	movlw	127
  5236  001B98  1404               	andwf	___fleq@ff1+3,w,c
  5237  001B9A  6E0C               	movwf	(??___fleq+3)& (0+255),c
  5238  001B9C  5009               	movf	??___fleq,w,c
  5239  001B9E  100A               	iorwf	??___fleq+1,w,c
  5240  001BA0  100B               	iorwf	??___fleq+2,w,c
  5241  001BA2  100C               	iorwf	??___fleq+3,w,c
  5242  001BA4  A4D8               	btfss	status,2,c
  5243  001BA6  D008               	goto	l3299
  5244  001BA8  0E00               	movlw	0
  5245  001BAA  6E01               	movwf	___fleq@ff1,c
  5246  001BAC  0E00               	movlw	0
  5247  001BAE  6E02               	movwf	___fleq@ff1+1,c
  5248  001BB0  0E00               	movlw	0
  5249  001BB2  6E03               	movwf	___fleq@ff1+2,c
  5250  001BB4  0E00               	movlw	0
  5251  001BB6  6E04               	movwf	___fleq@ff1+3,c
  5252  001BB8                     l3299:
  5253  001BB8  FFFF               	dw	65535	; assembler added errata NOP
  5254  001BBA  0E00               	movlw	0
  5255  001BBC  1405               	andwf	___fleq@ff2,w,c
  5256  001BBE  6E09               	movwf	??___fleq& (0+255),c
  5257  001BC0  0E00               	movlw	0
  5258  001BC2  1406               	andwf	___fleq@ff2+1,w,c
  5259  001BC4  6E0A               	movwf	(??___fleq+1)& (0+255),c
  5260  001BC6  0E80               	movlw	128
  5261  001BC8  1407               	andwf	___fleq@ff2+2,w,c
  5262  001BCA  6E0B               	movwf	(??___fleq+2)& (0+255),c
  5263  001BCC  0E7F               	movlw	127
  5264  001BCE  1408               	andwf	___fleq@ff2+3,w,c
  5265  001BD0  6E0C               	movwf	(??___fleq+3)& (0+255),c
  5266  001BD2  5009               	movf	??___fleq,w,c
  5267  001BD4  100A               	iorwf	??___fleq+1,w,c
  5268  001BD6  100B               	iorwf	??___fleq+2,w,c
  5269  001BD8  100C               	iorwf	??___fleq+3,w,c
  5270  001BDA  A4D8               	btfss	status,2,c
  5271  001BDC  D008               	goto	l3303
  5272  001BDE  0E00               	movlw	0
  5273  001BE0  6E05               	movwf	___fleq@ff2,c
  5274  001BE2  0E00               	movlw	0
  5275  001BE4  6E06               	movwf	___fleq@ff2+1,c
  5276  001BE6  0E00               	movlw	0
  5277  001BE8  6E07               	movwf	___fleq@ff2+2,c
  5278  001BEA  0E00               	movlw	0
  5279  001BEC  6E08               	movwf	___fleq@ff2+3,c
  5280  001BEE                     l3303:
  5281  001BEE  FFFF               	dw	65535	; assembler added errata NOP
  5282  001BF0  5005               	movf	___fleq@ff2,w,c
  5283  001BF2  1801               	xorwf	___fleq@ff1,w,c
  5284  001BF4  E10A               	bnz	u3530
  5285  001BF6  5006               	movf	___fleq@ff2+1,w,c
  5286  001BF8  1802               	xorwf	___fleq@ff1+1,w,c
  5287  001BFA  E107               	bnz	u3530
  5288  001BFC  5007               	movf	___fleq@ff2+2,w,c
  5289  001BFE  1803               	xorwf	___fleq@ff1+2,w,c
  5290  001C00  E104               	bnz	u3530
  5291  001C02  5008               	movf	___fleq@ff2+3,w,c
  5292  001C04  1804               	xorwf	___fleq@ff1+3,w,c
  5293  001C06  B4D8               	btfsc	status,2,c
  5294  001C08  D002               	goto	l3307
  5295  001C0A                     u3530:
  5296  001C0A  90D8               	bcf	status,0,c
  5297  001C0C  D002               	goto	l511
  5298  001C0E                     l3307:
  5299  001C0E  FFFF               	dw	65535	; assembler added errata NOP
  5300  001C10  80D8               	bsf	status,0,c
  5301  001C12                     l511:
  5302  001C12  FFFF               	dw	65535	; assembler added errata NOP
  5303  001C14  0012               	return		;funcret
  5304  001C16  FFFF               	dw	65535	; errata NOP
  5305  001C18                     __end_of___fleq:
  5306                           	opt callstack 0
  5307                           
  5308 ;; *************** function _print_message_onLCD *****************
  5309 ;; Defined at:
  5310 ;;		line 146 in file "main.c"
  5311 ;; Parameters:    Size  Location     Type
  5312 ;;  message         2    4[COMRAM] PTR unsigned char 
  5313 ;;		 -> STR_10(17), STR_9(16), STR_8(17), STR_7(17), 
  5314 ;;		 -> STR_6(17), STR_5(15), main@message(20), STR_2(14), 
  5315 ;;		 -> STR_1(14), 
  5316 ;; Auto vars:     Size  Location     Type
  5317 ;;  i               1    8[COMRAM] unsigned char 
  5318 ;; Return value:  Size  Location     Type
  5319 ;;                  1    wreg      void 
  5320 ;; Registers used:
  5321 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5322 ;; Tracked objects:
  5323 ;;		On entry : 0/0
  5324 ;;		On exit  : 0/0
  5325 ;;		Unchanged: 0/0
  5326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5327 ;;      Params:         2       0       0       0       0       0       0
  5328 ;;      Locals:         1       0       0       0       0       0       0
  5329 ;;      Temps:          2       0       0       0       0       0       0
  5330 ;;      Totals:         5       0       0       0       0       0       0
  5331 ;;Total ram usage:        5 bytes
  5332 ;; Hardware stack levels used:    1
  5333 ;; Hardware stack levels required when called:    1
  5334 ;; This function calls:
  5335 ;;		_R_D
  5336 ;;		_strlen
  5337 ;; This function is called by:
  5338 ;;		_main
  5339 ;; This function uses a non-reentrant model
  5340 ;;
  5341                           
  5342                           	psect	text19
  5343  001926                     __ptext19:
  5344                           	opt callstack 0
  5345  001926                     _print_message_onLCD:
  5346                           	opt callstack 0
  5347  001926  FFFF               	dw	65535	; assembler added errata NOP
  5348                           
  5349                           ;main.c: 147: for (char i = 0; i < strlen(message); i++) {
  5350                           
  5351                           ;incstack = 0
  5352  001928  0E00               	movlw	0
  5353  00192A  6E09               	movwf	print_message_onLCD@i,c
  5354  00192C  D01B               	goto	l3463
  5355  00192E                     l3459:
  5356  00192E  FFFF               	dw	65535	; assembler added errata NOP
  5357                           
  5358                           ;main.c: 148: R_D(message[i]);
  5359  001930  5009               	movf	print_message_onLCD@i,w,c
  5360  001932  2405               	addwf	print_message_onLCD@message,w,c
  5361  001934  6E07               	movwf	??_print_message_onLCD& (0+255),c
  5362  001936  0E00               	movlw	0
  5363  001938  2006               	addwfc	print_message_onLCD@message+1,w,c
  5364  00193A  6E08               	movwf	(??_print_message_onLCD+1)& (0+255),c
  5365  00193C  C007  FFF6         	movff	??_print_message_onLCD,tblptrl
  5366  001940  C008  FFF7         	movff	??_print_message_onLCD+1,tblptrh
  5367  001944  6AF8               	clrf	tblptru,c
  5368  001946  0E05               	movlw	(high __ramtop+-1)
  5369  001948  64F7               	cpfsgt	tblptrh,c
  5370  00194A  D004               	bra	u3807
  5371  00194C  0008               	tblrd		*
  5372  00194E  FFFF               	dw	65535	; errata NOP
  5373  001950  50F5               	movf	tablat,w,c
  5374  001952  D005               	bra	u3800
  5375  001954                     u3807:
  5376  001954  CFF6 FFE9          	movff	tblptrl,fsr0l
  5377  001958  CFF7 FFEA          	movff	tblptrh,fsr0h
  5378  00195C  50EF               	movf	indf0,w,c
  5379  00195E                     u3800:
  5380  00195E  EC54  F00B         	call	_R_D
  5381  001962  2A09               	incf	print_message_onLCD@i,f,c
  5382  001964                     l3463:
  5383  001964  FFFF               	dw	65535	; assembler added errata NOP
  5384  001966  C005  F001         	movff	print_message_onLCD@message,strlen@s
  5385  00196A  C006  F002         	movff	print_message_onLCD@message+1,strlen@s+1
  5386  00196E  ECE9  F00B         	call	_strlen	;wreg free
  5387  001972  5009               	movf	print_message_onLCD@i,w,c
  5388  001974  6E07               	movwf	??_print_message_onLCD& (0+255),c
  5389  001976  6A08               	clrf	(??_print_message_onLCD+1)& (0+255),c
  5390  001978  5001               	movf	?_strlen,w,c
  5391  00197A  5C07               	subwf	??_print_message_onLCD,w,c
  5392  00197C  5002               	movf	?_strlen+1,w,c
  5393  00197E  5808               	subwfb	??_print_message_onLCD+1,w,c
  5394  001980  B0D8               	btfsc	status,0,c
  5395  001982  0012               	return		;funcret
  5396  001984  FFFF               	dw	65535	; assembler added errata NOP
  5397  001986  D7D3               	goto	l3459
  5398  001988  FFFF               	dw	65535	; errata NOP
  5399  00198A                     __end_of_print_message_onLCD:
  5400                           	opt callstack 0
  5401                           
  5402 ;; *************** function _strlen *****************
  5403 ;; Defined at:
  5404 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strlen.c"
  5405 ;; Parameters:    Size  Location     Type
  5406 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5407 ;;		 -> STR_10(17), STR_9(16), STR_8(17), STR_7(17), 
  5408 ;;		 -> STR_6(17), STR_5(15), main@message(20), STR_2(14), 
  5409 ;;		 -> STR_1(14), 
  5410 ;; Auto vars:     Size  Location     Type
  5411 ;;  cp              2    2[COMRAM] PTR const unsigned char 
  5412 ;;		 -> STR_10(17), STR_9(16), STR_8(17), STR_7(17), 
  5413 ;;		 -> STR_6(17), STR_5(15), main@message(20), STR_2(14), 
  5414 ;;		 -> STR_1(14), 
  5415 ;; Return value:  Size  Location     Type
  5416 ;;                  2    0[COMRAM] unsigned int 
  5417 ;; Registers used:
  5418 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  5419 ;; Tracked objects:
  5420 ;;		On entry : 0/0
  5421 ;;		On exit  : 0/0
  5422 ;;		Unchanged: 0/0
  5423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5424 ;;      Params:         2       0       0       0       0       0       0
  5425 ;;      Locals:         2       0       0       0       0       0       0
  5426 ;;      Temps:          0       0       0       0       0       0       0
  5427 ;;      Totals:         4       0       0       0       0       0       0
  5428 ;;Total ram usage:        4 bytes
  5429 ;; Hardware stack levels used:    1
  5430 ;; This function calls:
  5431 ;;		Nothing
  5432 ;; This function is called by:
  5433 ;;		_print_message_onLCD
  5434 ;; This function uses a non-reentrant model
  5435 ;;
  5436                           
  5437                           	psect	text20
  5438  0017D2                     __ptext20:
  5439                           	opt callstack 0
  5440  0017D2                     _strlen:
  5441                           	opt callstack 0
  5442  0017D2  FFFF               	dw	65535	; assembler added errata NOP
  5443                           
  5444                           ;incstack = 0
  5445  0017D4  C001  F003         	movff	strlen@s,strlen@cp
  5446  0017D8  C002  F004         	movff	strlen@s+1,strlen@cp+1
  5447  0017DC  D003               	goto	l2933
  5448  0017DE                     l2931:
  5449  0017DE  FFFF               	dw	65535	; assembler added errata NOP
  5450  0017E0  4A03               	infsnz	strlen@cp,f,c
  5451  0017E2  2A04               	incf	strlen@cp+1,f,c
  5452  0017E4                     l2933:
  5453  0017E4  FFFF               	dw	65535	; assembler added errata NOP
  5454  0017E6  C003  FFF6         	movff	strlen@cp,tblptrl
  5455  0017EA  C004  FFF7         	movff	strlen@cp+1,tblptrh
  5456  0017EE  6AF8               	clrf	tblptru,c
  5457  0017F0  0E05               	movlw	(high __ramtop+-1)
  5458  0017F2  64F7               	cpfsgt	tblptrh,c
  5459  0017F4  D004               	bra	u2987
  5460  0017F6  0008               	tblrd		*
  5461  0017F8  FFFF               	dw	65535	; errata NOP
  5462  0017FA  50F5               	movf	tablat,w,c
  5463  0017FC  D005               	bra	u2980
  5464  0017FE                     u2987:
  5465  0017FE  CFF6 FFE9          	movff	tblptrl,fsr0l
  5466  001802  CFF7 FFEA          	movff	tblptrh,fsr0h
  5467  001806  50EF               	movf	indf0,w,c
  5468  001808                     u2980:
  5469  001808  0900               	iorlw	0
  5470  00180A  A4D8               	btfss	status,2,c
  5471  00180C  D7E8               	goto	l2931
  5472  00180E  5001               	movf	strlen@s,w,c
  5473  001810  5C03               	subwf	strlen@cp,w,c
  5474  001812  6E01               	movwf	?_strlen,c
  5475  001814  5002               	movf	strlen@s+1,w,c
  5476  001816  5804               	subwfb	strlen@cp+1,w,c
  5477  001818  6E02               	movwf	?_strlen+1,c
  5478  00181A  0012               	return		;funcret
  5479  00181C  FFFF               	dw	65535	; errata NOP
  5480  00181E                     __end_of_strlen:
  5481                           	opt callstack 0
  5482                           
  5483 ;; *************** function _R_D *****************
  5484 ;; Defined at:
  5485 ;;		line 137 in file "main.c"
  5486 ;; Parameters:    Size  Location     Type
  5487 ;;  dato            1    wreg     unsigned char 
  5488 ;; Auto vars:     Size  Location     Type
  5489 ;;  dato            1    0[COMRAM] unsigned char 
  5490 ;; Return value:  Size  Location     Type
  5491 ;;                  1    wreg      void 
  5492 ;; Registers used:
  5493 ;;		wreg, status,2, cstack
  5494 ;; Tracked objects:
  5495 ;;		On entry : 0/0
  5496 ;;		On exit  : 0/0
  5497 ;;		Unchanged: 0/0
  5498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5499 ;;      Params:         0       0       0       0       0       0       0
  5500 ;;      Locals:         1       0       0       0       0       0       0
  5501 ;;      Temps:          0       0       0       0       0       0       0
  5502 ;;      Totals:         1       0       0       0       0       0       0
  5503 ;;Total ram usage:        1 bytes
  5504 ;; Hardware stack levels used:    1
  5505 ;; This function calls:
  5506 ;;		Nothing
  5507 ;; This function is called by:
  5508 ;;		_print_message_onLCD
  5509 ;; This function uses a non-reentrant model
  5510 ;;
  5511                           
  5512                           	psect	text21
  5513  0016A8                     __ptext21:
  5514                           	opt callstack 0
  5515  0016A8                     _R_D:
  5516                           	opt callstack 0
  5517  0016A8  FFFF               	dw	65535	; assembler added errata NOP
  5518                           
  5519                           ;incstack = 0
  5520                           ;R_D@dato stored from wreg
  5521  0016AA  6E01               	movwf	R_D@dato,c
  5522                           
  5523                           ;main.c: 138: LC3 = 0;
  5524  0016AC  968B               	bcf	3979,3,c	;volatile
  5525                           
  5526                           ;main.c: 139: LC4 = 1;
  5527  0016AE  888B               	bsf	3979,4,c	;volatile
  5528                           
  5529                           ;main.c: 140: LATD = dato;
  5530  0016B0  C001  FF8C         	movff	R_D@dato,3980	;volatile
  5531                           
  5532                           ;main.c: 141: LC3 = 1;
  5533  0016B4  868B               	bsf	3979,3,c	;volatile
  5534                           
  5535                           ;main.c: 142: _delay((unsigned long)((100)*(4000000/4000000.0)));
  5536  0016B6  0E19               	movlw	25
  5537  0016B8                     u4477:
  5538  0016B8  FFFF               	dw	65535	; errata NOP
  5539  0016BA  2EE8               	decfsz	wreg,f,c
  5540  0016BC  D7FD               	bra	u4477
  5541                           
  5542                           ;main.c: 143: LC3 = 0;
  5543  0016BE  968B               	bcf	3979,3,c	;volatile
  5544  0016C0  0012               	return		;funcret
  5545  0016C2  FFFF               	dw	65535	; errata NOP
  5546  0016C4                     __end_of_R_D:
  5547                           	opt callstack 0
  5548                           
  5549 ;; *************** function _initial_config *****************
  5550 ;; Defined at:
  5551 ;;		line 92 in file "main.c"
  5552 ;; Parameters:    Size  Location     Type
  5553 ;;		None
  5554 ;; Auto vars:     Size  Location     Type
  5555 ;;		None
  5556 ;; Return value:  Size  Location     Type
  5557 ;;                  1    wreg      void 
  5558 ;; Registers used:
  5559 ;;		wreg, status,2
  5560 ;; Tracked objects:
  5561 ;;		On entry : 0/0
  5562 ;;		On exit  : 0/0
  5563 ;;		Unchanged: 0/0
  5564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5565 ;;      Params:         0       0       0       0       0       0       0
  5566 ;;      Locals:         0       0       0       0       0       0       0
  5567 ;;      Temps:          0       0       0       0       0       0       0
  5568 ;;      Totals:         0       0       0       0       0       0       0
  5569 ;;Total ram usage:        0 bytes
  5570 ;; Hardware stack levels used:    1
  5571 ;; This function calls:
  5572 ;;		Nothing
  5573 ;; This function is called by:
  5574 ;;		_main
  5575 ;; This function uses a non-reentrant model
  5576 ;;
  5577                           
  5578                           	psect	text22
  5579  001746                     __ptext22:
  5580                           	opt callstack 0
  5581  001746                     _initial_config:
  5582                           	opt callstack 0
  5583  001746  FFFF               	dw	65535	; assembler added errata NOP
  5584                           
  5585                           ;main.c: 93: TRISA = 0X03;
  5586                           
  5587                           ;incstack = 0
  5588  001748  0E03               	movlw	3
  5589  00174A  6E92               	movwf	3986,c	;volatile
  5590                           
  5591                           ;main.c: 95: TRISC = 0X00;
  5592  00174C  0E00               	movlw	0
  5593  00174E  6E94               	movwf	3988,c	;volatile
  5594                           
  5595                           ;main.c: 96: TRISD = 0X00;
  5596  001750  0E00               	movlw	0
  5597  001752  6E95               	movwf	3989,c	;volatile
  5598                           
  5599                           ;main.c: 100: ADCON0 = 0B01000001;
  5600  001754  0E41               	movlw	65
  5601  001756  6EC2               	movwf	4034,c	;volatile
  5602                           
  5603                           ;main.c: 101: ADCON1 = 0B10000100;
  5604  001758  0E84               	movlw	132
  5605  00175A  6EC1               	movwf	4033,c	;volatile
  5606                           
  5607                           ;main.c: 104: LATA = 0;
  5608  00175C  0E00               	movlw	0
  5609  00175E  6E89               	movwf	3977,c	;volatile
  5610                           
  5611                           ;main.c: 105: LATB = 0;
  5612  001760  0E00               	movlw	0
  5613  001762  6E8A               	movwf	3978,c	;volatile
  5614                           
  5615                           ;main.c: 106: LATC = 0;
  5616  001764  0E00               	movlw	0
  5617  001766  6E8B               	movwf	3979,c	;volatile
  5618                           
  5619                           ;main.c: 107: LATD = 0;
  5620  001768  0E00               	movlw	0
  5621  00176A  6E8C               	movwf	3980,c	;volatile
  5622                           
  5623                           ;main.c: 108: LATE = 0;
  5624  00176C  0E00               	movlw	0
  5625  00176E  6E8D               	movwf	3981,c	;volatile
  5626                           
  5627                           ;main.c: 109: PORTA = 0;
  5628  001770  0E00               	movlw	0
  5629  001772  6E80               	movwf	3968,c	;volatile
  5630                           
  5631                           ;main.c: 110: PORTB = 0;
  5632  001774  0E00               	movlw	0
  5633  001776  6E81               	movwf	3969,c	;volatile
  5634                           
  5635                           ;main.c: 111: PORTC = 0;
  5636  001778  0E00               	movlw	0
  5637  00177A  6E82               	movwf	3970,c	;volatile
  5638                           
  5639                           ;main.c: 112: PORTD = 0;
  5640  00177C  0E00               	movlw	0
  5641  00177E  6E83               	movwf	3971,c	;volatile
  5642                           
  5643                           ;main.c: 113: PORTE = 0;
  5644  001780  0E00               	movlw	0
  5645  001782  6E84               	movwf	3972,c	;volatile
  5646  001784  0012               	return		;funcret
  5647  001786  FFFF               	dw	65535	; errata NOP
  5648  001788                     __end_of_initial_config:
  5649                           	opt callstack 0
  5650                           
  5651 ;; *************** function _init_LCD *****************
  5652 ;; Defined at:
  5653 ;;		line 116 in file "main.c"
  5654 ;; Parameters:    Size  Location     Type
  5655 ;;		None
  5656 ;; Auto vars:     Size  Location     Type
  5657 ;;		None
  5658 ;; Return value:  Size  Location     Type
  5659 ;;                  1    wreg      void 
  5660 ;; Registers used:
  5661 ;;		wreg, status,2, cstack
  5662 ;; Tracked objects:
  5663 ;;		On entry : 0/0
  5664 ;;		On exit  : 0/0
  5665 ;;		Unchanged: 0/0
  5666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5667 ;;      Params:         0       0       0       0       0       0       0
  5668 ;;      Locals:         0       0       0       0       0       0       0
  5669 ;;      Temps:          1       0       0       0       0       0       0
  5670 ;;      Totals:         1       0       0       0       0       0       0
  5671 ;;Total ram usage:        1 bytes
  5672 ;; Hardware stack levels used:    1
  5673 ;; Hardware stack levels required when called:    1
  5674 ;; This function calls:
  5675 ;;		_R_I
  5676 ;; This function is called by:
  5677 ;;		_main
  5678 ;; This function uses a non-reentrant model
  5679 ;;
  5680                           
  5681                           	psect	text23
  5682  00186E                     __ptext23:
  5683                           	opt callstack 0
  5684  00186E                     _init_LCD:
  5685                           	opt callstack 0
  5686  00186E  FFFF               	dw	65535	; assembler added errata NOP
  5687                           
  5688                           ;main.c: 117: _delay((unsigned long)((20)*(4000000/4000.0)));
  5689                           
  5690                           ;incstack = 0
  5691  001870  0E14               	movlw	20
  5692  001872  6E02               	movwf	??_init_LCD& (0+255),c
  5693  001874  0E7D               	movlw	125
  5694  001876                     u4487:
  5695  001876  FFFF               	dw	65535	; errata NOP
  5696  001878  2EE8               	decfsz	wreg,f,c
  5697  00187A  D7FD               	bra	u4487
  5698  00187C  2E02               	decfsz	??_init_LCD& (0+255),f,c
  5699  00187E  D7FB               	bra	u4487
  5700  001880  D000               	nop2	
  5701                           
  5702                           ;main.c: 119: R_I(0X30);
  5703  001882  0E30               	movlw	48
  5704  001884  EC46  F00B         	call	_R_I
  5705                           
  5706                           ;main.c: 120: _delay((unsigned long)((5)*(4000000/4000.0)));
  5707  001888  0E05               	movlw	5
  5708  00188A  6E02               	movwf	??_init_LCD& (0+255),c
  5709  00188C  0EDF               	movlw	223
  5710  00188E                     u4497:
  5711  00188E  FFFF               	dw	65535	; errata NOP
  5712  001890  2EE8               	decfsz	wreg,f,c
  5713  001892  D7FD               	bra	u4497
  5714  001894  2E02               	decfsz	??_init_LCD& (0+255),f,c
  5715  001896  D7FB               	bra	u4497
  5716                           
  5717                           ;main.c: 121: R_I(0X30);
  5718  001898  0E30               	movlw	48
  5719  00189A  EC46  F00B         	call	_R_I
  5720                           
  5721                           ;main.c: 122: R_I(0X3C);
  5722  00189E  0E3C               	movlw	60
  5723  0018A0  EC46  F00B         	call	_R_I
  5724                           
  5725                           ;main.c: 123: R_I(0X0C);
  5726  0018A4  0E0C               	movlw	12
  5727  0018A6  EC46  F00B         	call	_R_I
  5728                           
  5729                           ;main.c: 124: R_I(0X01);
  5730  0018AA  0E01               	movlw	1
  5731  0018AC  EC46  F00B         	call	_R_I
  5732                           
  5733                           ;main.c: 125: _delay((unsigned long)((20)*(4000000/4000.0)));
  5734  0018B0  0E14               	movlw	20
  5735  0018B2  6E02               	movwf	??_init_LCD& (0+255),c
  5736  0018B4  0E7D               	movlw	125
  5737  0018B6                     u4507:
  5738  0018B6  FFFF               	dw	65535	; errata NOP
  5739  0018B8  2EE8               	decfsz	wreg,f,c
  5740  0018BA  D7FD               	bra	u4507
  5741  0018BC  2E02               	decfsz	??_init_LCD& (0+255),f,c
  5742  0018BE  D7FB               	bra	u4507
  5743  0018C0  D000               	nop2	
  5744  0018C2  0012               	return		;funcret
  5745  0018C4  FFFF               	dw	65535	; errata NOP
  5746  0018C6                     __end_of_init_LCD:
  5747                           	opt callstack 0
  5748                           
  5749 ;; *************** function _R_I *****************
  5750 ;; Defined at:
  5751 ;;		line 128 in file "main.c"
  5752 ;; Parameters:    Size  Location     Type
  5753 ;;  dato            1    wreg     unsigned char 
  5754 ;; Auto vars:     Size  Location     Type
  5755 ;;  dato            1    0[COMRAM] unsigned char 
  5756 ;; Return value:  Size  Location     Type
  5757 ;;                  1    wreg      void 
  5758 ;; Registers used:
  5759 ;;		wreg, status,2, cstack
  5760 ;; Tracked objects:
  5761 ;;		On entry : 0/0
  5762 ;;		On exit  : 0/0
  5763 ;;		Unchanged: 0/0
  5764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5765 ;;      Params:         0       0       0       0       0       0       0
  5766 ;;      Locals:         1       0       0       0       0       0       0
  5767 ;;      Temps:          0       0       0       0       0       0       0
  5768 ;;      Totals:         1       0       0       0       0       0       0
  5769 ;;Total ram usage:        1 bytes
  5770 ;; Hardware stack levels used:    1
  5771 ;; This function calls:
  5772 ;;		Nothing
  5773 ;; This function is called by:
  5774 ;;		_main
  5775 ;;		_init_LCD
  5776 ;; This function uses a non-reentrant model
  5777 ;;
  5778                           
  5779                           	psect	text24
  5780  00168C                     __ptext24:
  5781                           	opt callstack 0
  5782  00168C                     _R_I:
  5783                           	opt callstack 0
  5784  00168C  FFFF               	dw	65535	; assembler added errata NOP
  5785                           
  5786                           ;incstack = 0
  5787                           ;R_I@dato stored from wreg
  5788  00168E  6E01               	movwf	R_I@dato,c
  5789                           
  5790                           ;main.c: 129: LC3 = 0;
  5791  001690  968B               	bcf	3979,3,c	;volatile
  5792                           
  5793                           ;main.c: 130: LC4 = 0;
  5794  001692  988B               	bcf	3979,4,c	;volatile
  5795                           
  5796                           ;main.c: 131: LATD = dato;
  5797  001694  C001  FF8C         	movff	R_I@dato,3980	;volatile
  5798                           
  5799                           ;main.c: 132: LC3 = 1;
  5800  001698  868B               	bsf	3979,3,c	;volatile
  5801                           
  5802                           ;main.c: 133: _delay((unsigned long)((100)*(4000000/4000000.0)));
  5803  00169A  0E19               	movlw	25
  5804  00169C                     u4517:
  5805  00169C  FFFF               	dw	65535	; errata NOP
  5806  00169E  2EE8               	decfsz	wreg,f,c
  5807  0016A0  D7FD               	bra	u4517
  5808                           
  5809                           ;main.c: 134: LC3 = 0;
  5810  0016A2  968B               	bcf	3979,3,c	;volatile
  5811  0016A4  0012               	return		;funcret
  5812  0016A6  FFFF               	dw	65535	; errata NOP
  5813  0016A8                     __end_of_R_I:
  5814                           	opt callstack 0
  5815                           
  5816 ;; *************** function _get_voltage *****************
  5817 ;; Defined at:
  5818 ;;		line 152 in file "main.c"
  5819 ;; Parameters:    Size  Location     Type
  5820 ;;  ac_in           2   64[COMRAM] unsigned int 
  5821 ;; Auto vars:     Size  Location     Type
  5822 ;;		None
  5823 ;; Return value:  Size  Location     Type
  5824 ;;                  4   64[COMRAM] float 
  5825 ;; Registers used:
  5826 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5827 ;; Tracked objects:
  5828 ;;		On entry : 0/0
  5829 ;;		On exit  : 0/0
  5830 ;;		Unchanged: 0/0
  5831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5832 ;;      Params:         4       0       0       0       0       0       0
  5833 ;;      Locals:         0       0       0       0       0       0       0
  5834 ;;      Temps:          0       0       0       0       0       0       0
  5835 ;;      Totals:         4       0       0       0       0       0       0
  5836 ;;Total ram usage:        4 bytes
  5837 ;; Hardware stack levels used:    1
  5838 ;; Hardware stack levels required when called:    1
  5839 ;; This function calls:
  5840 ;;		___fldiv
  5841 ;;		___flmul
  5842 ;;		___xxtofl
  5843 ;; This function is called by:
  5844 ;;		_main
  5845 ;; This function uses a non-reentrant model
  5846 ;;
  5847                           
  5848                           	psect	text25
  5849  00198A                     __ptext25:
  5850                           	opt callstack 0
  5851  00198A                     _get_voltage:
  5852                           	opt callstack 0
  5853  00198A  FFFF               	dw	65535	; assembler added errata NOP
  5854                           
  5855                           ;main.c: 153: return (ac_in * 5.0 / 1023);
  5856                           
  5857                           ;incstack = 0
  5858  00198C  0E00               	movlw	0
  5859  00198E  6E13               	movwf	___flmul@a,c
  5860  001990  0E00               	movlw	0
  5861  001992  6E14               	movwf	___flmul@a+1,c
  5862  001994  0EA0               	movlw	160
  5863  001996  6E15               	movwf	___flmul@a+2,c
  5864  001998  0E40               	movlw	64
  5865  00199A  6E16               	movwf	___flmul@a+3,c
  5866  00199C  C041  F001         	movff	get_voltage@ac_in,___xxtofl@val
  5867  0019A0  C042  F002         	movff	get_voltage@ac_in+1,___xxtofl@val+1
  5868  0019A4  6A03               	clrf	___xxtofl@val+2,c
  5869  0019A6  6A04               	clrf	___xxtofl@val+3,c
  5870  0019A8  0E00               	movlw	0
  5871  0019AA  ECB6  F010         	call	___xxtofl
  5872  0019AE  C001  F00F         	movff	?___xxtofl,___flmul@b
  5873  0019B2  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  5874  0019B6  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  5875  0019BA  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  5876  0019BE  EC05  F017         	call	___flmul	;wreg free
  5877  0019C2  C00F  F028         	movff	?___flmul,___fldiv@b
  5878  0019C6  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  5879  0019CA  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  5880  0019CE  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  5881  0019D2  0E00               	movlw	0
  5882  0019D4  6E2C               	movwf	___fldiv@a,c
  5883  0019D6  0EC0               	movlw	192
  5884  0019D8  6E2D               	movwf	___fldiv@a+1,c
  5885  0019DA  0E7F               	movlw	127
  5886  0019DC  6E2E               	movwf	___fldiv@a+2,c
  5887  0019DE  0E44               	movlw	68
  5888  0019E0  6E2F               	movwf	___fldiv@a+3,c
  5889  0019E2  EC03  F014         	call	___fldiv	;wreg free
  5890  0019E6  C028  F041         	movff	?___fldiv,?_get_voltage
  5891  0019EA  C029  F042         	movff	?___fldiv+1,?_get_voltage+1
  5892  0019EE  C02A  F043         	movff	?___fldiv+2,?_get_voltage+2
  5893  0019F2  C02B  F044         	movff	?___fldiv+3,?_get_voltage+3
  5894  0019F6  0012               	return		;funcret
  5895  0019F8  FFFF               	dw	65535	; errata NOP
  5896  0019FA                     __end_of_get_voltage:
  5897                           	opt callstack 0
  5898                           
  5899 ;; *************** function _get_temp *****************
  5900 ;; Defined at:
  5901 ;;		line 155 in file "main.c"
  5902 ;; Parameters:    Size  Location     Type
  5903 ;;  ac_in           2   68[COMRAM] unsigned int 
  5904 ;; Auto vars:     Size  Location     Type
  5905 ;;  r               4   72[COMRAM] float 
  5906 ;; Return value:  Size  Location     Type
  5907 ;;                  4   68[COMRAM] float 
  5908 ;; Registers used:
  5909 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5910 ;; Tracked objects:
  5911 ;;		On entry : 0/0
  5912 ;;		On exit  : 0/0
  5913 ;;		Unchanged: 0/0
  5914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5915 ;;      Params:         4       0       0       0       0       0       0
  5916 ;;      Locals:         4       0       0       0       0       0       0
  5917 ;;      Temps:          0       0       0       0       0       0       0
  5918 ;;      Totals:         8       0       0       0       0       0       0
  5919 ;;Total ram usage:        8 bytes
  5920 ;; Hardware stack levels used:    1
  5921 ;; Hardware stack levels required when called:    1
  5922 ;; This function calls:
  5923 ;;		___fladd
  5924 ;;		___fldiv
  5925 ;;		___flmul
  5926 ;;		___xxtofl
  5927 ;; This function is called by:
  5928 ;;		_main
  5929 ;; This function uses a non-reentrant model
  5930 ;;
  5931                           
  5932                           	psect	text26
  5933  001E64                     __ptext26:
  5934                           	opt callstack 0
  5935  001E64                     _get_temp:
  5936                           	opt callstack 0
  5937  001E64  FFFF               	dw	65535	; assembler added errata NOP
  5938                           
  5939                           ;main.c: 156: float r = ac_in * 500.0 / 1023;
  5940                           
  5941                           ;incstack = 0
  5942  001E66  0E00               	movlw	0
  5943  001E68  6E13               	movwf	___flmul@a,c
  5944  001E6A  0E00               	movlw	0
  5945  001E6C  6E14               	movwf	___flmul@a+1,c
  5946  001E6E  0EFA               	movlw	250
  5947  001E70  6E15               	movwf	___flmul@a+2,c
  5948  001E72  0E43               	movlw	67
  5949  001E74  6E16               	movwf	___flmul@a+3,c
  5950  001E76  C045  F001         	movff	get_temp@ac_in,___xxtofl@val
  5951  001E7A  C046  F002         	movff	get_temp@ac_in+1,___xxtofl@val+1
  5952  001E7E  6A03               	clrf	___xxtofl@val+2,c
  5953  001E80  6A04               	clrf	___xxtofl@val+3,c
  5954  001E82  0E00               	movlw	0
  5955  001E84  ECB6  F010         	call	___xxtofl
  5956  001E88  C001  F00F         	movff	?___xxtofl,___flmul@b
  5957  001E8C  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  5958  001E90  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  5959  001E94  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  5960  001E98  EC05  F017         	call	___flmul	;wreg free
  5961  001E9C  C00F  F028         	movff	?___flmul,___fldiv@b
  5962  001EA0  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  5963  001EA4  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  5964  001EA8  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  5965  001EAC  0E00               	movlw	0
  5966  001EAE  6E2C               	movwf	___fldiv@a,c
  5967  001EB0  0EC0               	movlw	192
  5968  001EB2  6E2D               	movwf	___fldiv@a+1,c
  5969  001EB4  0E7F               	movlw	127
  5970  001EB6  6E2E               	movwf	___fldiv@a+2,c
  5971  001EB8  0E44               	movlw	68
  5972  001EBA  6E2F               	movwf	___fldiv@a+3,c
  5973  001EBC  EC03  F014         	call	___fldiv	;wreg free
  5974  001EC0  C028  F049         	movff	?___fldiv,get_temp@r
  5975  001EC4  C029  F04A         	movff	?___fldiv+1,get_temp@r+1
  5976  001EC8  C02A  F04B         	movff	?___fldiv+2,get_temp@r+2
  5977  001ECC  C02B  F04C         	movff	?___fldiv+3,get_temp@r+3
  5978                           
  5979                           ;main.c: 157: if (ac_in <= 10) {
  5980  001ED0  5046               	movf	get_temp@ac_in+1,w,c
  5981  001ED2  E11E               	bnz	l107
  5982  001ED4  0E0B               	movlw	11
  5983  001ED6  5C45               	subwf	get_temp@ac_in,w,c
  5984  001ED8  B0D8               	btfsc	status,0,c
  5985  001EDA  D01A               	goto	l107
  5986                           
  5987                           ;main.c: 158: r += 0.3;
  5988  001EDC  C049  F035         	movff	get_temp@r,___fladd@b
  5989  001EE0  C04A  F036         	movff	get_temp@r+1,___fladd@b+1
  5990  001EE4  C04B  F037         	movff	get_temp@r+2,___fladd@b+2
  5991  001EE8  C04C  F038         	movff	get_temp@r+3,___fladd@b+3
  5992  001EEC  0E9A               	movlw	154
  5993  001EEE  6E39               	movwf	___fladd@a,c
  5994  001EF0  0E99               	movlw	153
  5995  001EF2  6E3A               	movwf	___fladd@a+1,c
  5996  001EF4  0E99               	movlw	153
  5997  001EF6  6E3B               	movwf	___fladd@a+2,c
  5998  001EF8  0E3E               	movlw	62
  5999  001EFA  6E3C               	movwf	___fladd@a+3,c
  6000  001EFC  EC63  F015         	call	___fladd	;wreg free
  6001  001F00  C035  F049         	movff	?___fladd,get_temp@r
  6002  001F04  C036  F04A         	movff	?___fladd+1,get_temp@r+1
  6003  001F08  C037  F04B         	movff	?___fladd+2,get_temp@r+2
  6004  001F0C  C038  F04C         	movff	?___fladd+3,get_temp@r+3
  6005  001F10                     l107:
  6006  001F10  FFFF               	dw	65535	; assembler added errata NOP
  6007                           
  6008                           ;main.c: 159: };main.c: 160: return (r - 0.0099999);
  6009  001F12  C049  F035         	movff	get_temp@r,___fladd@b
  6010  001F16  C04A  F036         	movff	get_temp@r+1,___fladd@b+1
  6011  001F1A  C04B  F037         	movff	get_temp@r+2,___fladd@b+2
  6012  001F1E  C04C  F038         	movff	get_temp@r+3,___fladd@b+3
  6013  001F22  0E9F               	movlw	159
  6014  001F24  6E39               	movwf	___fladd@a,c
  6015  001F26  0ED6               	movlw	214
  6016  001F28  6E3A               	movwf	___fladd@a+1,c
  6017  001F2A  0E23               	movlw	35
  6018  001F2C  6E3B               	movwf	___fladd@a+2,c
  6019  001F2E  0EBC               	movlw	188
  6020  001F30  6E3C               	movwf	___fladd@a+3,c
  6021  001F32  EC63  F015         	call	___fladd	;wreg free
  6022  001F36  C035  F045         	movff	?___fladd,?_get_temp
  6023  001F3A  C036  F046         	movff	?___fladd+1,?_get_temp+1
  6024  001F3E  C037  F047         	movff	?___fladd+2,?_get_temp+2
  6025  001F42  C038  F048         	movff	?___fladd+3,?_get_temp+3
  6026  001F46  0012               	return		;funcret
  6027  001F48  FFFF               	dw	65535	; errata NOP
  6028  001F4A                     __end_of_get_temp:
  6029                           	opt callstack 0
  6030                           
  6031 ;; *************** function ___xxtofl *****************
  6032 ;; Defined at:
  6033 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  6034 ;; Parameters:    Size  Location     Type
  6035 ;;  sign            1    wreg     unsigned char 
  6036 ;;  val             4    0[COMRAM] long 
  6037 ;; Auto vars:     Size  Location     Type
  6038 ;;  sign            1    8[COMRAM] unsigned char 
  6039 ;;  arg             4   10[COMRAM] unsigned long 
  6040 ;;  exp             1    9[COMRAM] unsigned char 
  6041 ;; Return value:  Size  Location     Type
  6042 ;;                  4    0[COMRAM] unsigned char 
  6043 ;; Registers used:
  6044 ;;		wreg, status,2, status,0
  6045 ;; Tracked objects:
  6046 ;;		On entry : 0/0
  6047 ;;		On exit  : 0/0
  6048 ;;		Unchanged: 0/0
  6049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6050 ;;      Params:         4       0       0       0       0       0       0
  6051 ;;      Locals:         6       0       0       0       0       0       0
  6052 ;;      Temps:          4       0       0       0       0       0       0
  6053 ;;      Totals:        14       0       0       0       0       0       0
  6054 ;;Total ram usage:       14 bytes
  6055 ;; Hardware stack levels used:    1
  6056 ;; This function calls:
  6057 ;;		Nothing
  6058 ;; This function is called by:
  6059 ;;		_get_voltage
  6060 ;;		_get_temp
  6061 ;;		_sprintf
  6062 ;; This function uses a non-reentrant model
  6063 ;;
  6064                           
  6065                           	psect	text27
  6066  00216C                     __ptext27:
  6067                           	opt callstack 0
  6068  00216C                     ___xxtofl:
  6069                           	opt callstack 0
  6070  00216C  FFFF               	dw	65535	; assembler added errata NOP
  6071                           
  6072                           ;incstack = 0
  6073                           ;___xxtofl@sign stored from wreg
  6074  00216E  6E09               	movwf	___xxtofl@sign,c
  6075  002170  5009               	movf	___xxtofl@sign,w,c
  6076  002172  A4D8               	btfss	status,2,c
  6077  002174  AE04               	btfss	___xxtofl@val+3,7,c
  6078  002176  D01A               	goto	l916
  6079  002178  C001  F005         	movff	___xxtofl@val,??___xxtofl
  6080  00217C  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  6081  002180  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  6082  002184  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  6083  002188  1E05               	comf	??___xxtofl,f,c
  6084  00218A  1E06               	comf	??___xxtofl+1,f,c
  6085  00218C  1E07               	comf	??___xxtofl+2,f,c
  6086  00218E  1E08               	comf	??___xxtofl+3,f,c
  6087  002190  2A05               	incf	??___xxtofl,f,c
  6088  002192  0E00               	movlw	0
  6089  002194  2206               	addwfc	??___xxtofl+1,f,c
  6090  002196  2207               	addwfc	??___xxtofl+2,f,c
  6091  002198  2208               	addwfc	??___xxtofl+3,f,c
  6092  00219A  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  6093  00219E  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  6094  0021A2  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  6095  0021A6  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  6096  0021AA  D009               	goto	l3407
  6097  0021AC                     l916:
  6098  0021AC  FFFF               	dw	65535	; assembler added errata NOP
  6099  0021AE  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  6100  0021B2  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6101  0021B6  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6102  0021BA  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6103  0021BE                     l3407:
  6104  0021BE  FFFF               	dw	65535	; assembler added errata NOP
  6105  0021C0  5001               	movf	___xxtofl@val,w,c
  6106  0021C2  1002               	iorwf	___xxtofl@val+1,w,c
  6107  0021C4  1003               	iorwf	___xxtofl@val+2,w,c
  6108  0021C6  1004               	iorwf	___xxtofl@val+3,w,c
  6109  0021C8  A4D8               	btfss	status,2,c
  6110  0021CA  D009               	goto	l3413
  6111  0021CC  0E00               	movlw	0
  6112  0021CE  6E01               	movwf	?___xxtofl,c
  6113  0021D0  0E00               	movlw	0
  6114  0021D2  6E02               	movwf	?___xxtofl+1,c
  6115  0021D4  0E00               	movlw	0
  6116  0021D6  6E03               	movwf	?___xxtofl+2,c
  6117  0021D8  0E00               	movlw	0
  6118  0021DA  6E04               	movwf	?___xxtofl+3,c
  6119  0021DC  D072               	goto	l919
  6120  0021DE                     l3413:
  6121  0021DE  FFFF               	dw	65535	; assembler added errata NOP
  6122  0021E0  0E96               	movlw	150
  6123  0021E2  6E0A               	movwf	___xxtofl@exp,c
  6124  0021E4  D007               	goto	l3417
  6125  0021E6                     l3415:
  6126  0021E6  FFFF               	dw	65535	; assembler added errata NOP
  6127  0021E8  2A0A               	incf	___xxtofl@exp,f,c
  6128  0021EA  90D8               	bcf	status,0,c
  6129  0021EC  320E               	rrcf	___xxtofl@arg+3,f,c
  6130  0021EE  320D               	rrcf	___xxtofl@arg+2,f,c
  6131  0021F0  320C               	rrcf	___xxtofl@arg+1,f,c
  6132  0021F2  320B               	rrcf	___xxtofl@arg,f,c
  6133  0021F4                     l3417:
  6134  0021F4  FFFF               	dw	65535	; assembler added errata NOP
  6135  0021F6  0E00               	movlw	0
  6136  0021F8  140B               	andwf	___xxtofl@arg,w,c
  6137  0021FA  6E05               	movwf	??___xxtofl& (0+255),c
  6138  0021FC  0E00               	movlw	0
  6139  0021FE  140C               	andwf	___xxtofl@arg+1,w,c
  6140  002200  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  6141  002202  0E00               	movlw	0
  6142  002204  140D               	andwf	___xxtofl@arg+2,w,c
  6143  002206  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  6144  002208  0EFE               	movlw	254
  6145  00220A  140E               	andwf	___xxtofl@arg+3,w,c
  6146  00220C  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  6147  00220E  5005               	movf	??___xxtofl,w,c
  6148  002210  1006               	iorwf	??___xxtofl+1,w,c
  6149  002212  1007               	iorwf	??___xxtofl+2,w,c
  6150  002214  1008               	iorwf	??___xxtofl+3,w,c
  6151  002216  B4D8               	btfsc	status,2,c
  6152  002218  D00E               	goto	l923
  6153  00221A  D7E5               	goto	l3415
  6154  00221C                     l3419:
  6155  00221C  FFFF               	dw	65535	; assembler added errata NOP
  6156  00221E  2A0A               	incf	___xxtofl@exp,f,c
  6157  002220  0E01               	movlw	1
  6158  002222  260B               	addwf	___xxtofl@arg,f,c
  6159  002224  0E00               	movlw	0
  6160  002226  220C               	addwfc	___xxtofl@arg+1,f,c
  6161  002228  220D               	addwfc	___xxtofl@arg+2,f,c
  6162  00222A  220E               	addwfc	___xxtofl@arg+3,f,c
  6163  00222C  90D8               	bcf	status,0,c
  6164  00222E  320E               	rrcf	___xxtofl@arg+3,f,c
  6165  002230  320D               	rrcf	___xxtofl@arg+2,f,c
  6166  002232  320C               	rrcf	___xxtofl@arg+1,f,c
  6167  002234  320B               	rrcf	___xxtofl@arg,f,c
  6168  002236                     l923:
  6169  002236  FFFF               	dw	65535	; assembler added errata NOP
  6170  002238  0E00               	movlw	0
  6171  00223A  140B               	andwf	___xxtofl@arg,w,c
  6172  00223C  6E05               	movwf	??___xxtofl& (0+255),c
  6173  00223E  0E00               	movlw	0
  6174  002240  140C               	andwf	___xxtofl@arg+1,w,c
  6175  002242  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  6176  002244  0E00               	movlw	0
  6177  002246  140D               	andwf	___xxtofl@arg+2,w,c
  6178  002248  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  6179  00224A  0EFF               	movlw	255
  6180  00224C  140E               	andwf	___xxtofl@arg+3,w,c
  6181  00224E  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  6182  002250  5005               	movf	??___xxtofl,w,c
  6183  002252  1006               	iorwf	??___xxtofl+1,w,c
  6184  002254  1007               	iorwf	??___xxtofl+2,w,c
  6185  002256  1008               	iorwf	??___xxtofl+3,w,c
  6186  002258  B4D8               	btfsc	status,2,c
  6187  00225A  D008               	goto	l3427
  6188  00225C  D7DF               	goto	l3419
  6189  00225E                     l3425:
  6190  00225E  FFFF               	dw	65535	; assembler added errata NOP
  6191  002260  060A               	decf	___xxtofl@exp,f,c
  6192  002262  90D8               	bcf	status,0,c
  6193  002264  360B               	rlcf	___xxtofl@arg,f,c
  6194  002266  360C               	rlcf	___xxtofl@arg+1,f,c
  6195  002268  360D               	rlcf	___xxtofl@arg+2,f,c
  6196  00226A  360E               	rlcf	___xxtofl@arg+3,f,c
  6197  00226C                     l3427:
  6198  00226C  FFFF               	dw	65535	; assembler added errata NOP
  6199  00226E  BE0D               	btfsc	___xxtofl@arg+2,7,c
  6200  002270  D003               	goto	u3760
  6201  002272  0E02               	movlw	2
  6202  002274  600A               	cpfslt	___xxtofl@exp,c
  6203  002276  D7F3               	goto	l3425
  6204  002278                     u3760:
  6205  002278  FFFF               	dw	65535	; assembler added errata NOP
  6206  00227A  A00A               	btfss	___xxtofl@exp,0,c
  6207  00227C  9E0D               	bcf	___xxtofl@arg+2,7,c
  6208  00227E  90D8               	bcf	status,0,c
  6209  002280  320A               	rrcf	___xxtofl@exp,f,c
  6210  002282  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  6211  002286  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  6212  002288  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  6213  00228A  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  6214  00228C  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  6215  002290  6A07               	clrf	??___xxtofl+2,c
  6216  002292  6A06               	clrf	??___xxtofl+1,c
  6217  002294  6A05               	clrf	??___xxtofl,c
  6218  002296  5005               	movf	??___xxtofl,w,c
  6219  002298  120B               	iorwf	___xxtofl@arg,f,c
  6220  00229A  5006               	movf	??___xxtofl+1,w,c
  6221  00229C  120C               	iorwf	___xxtofl@arg+1,f,c
  6222  00229E  5007               	movf	??___xxtofl+2,w,c
  6223  0022A0  120D               	iorwf	___xxtofl@arg+2,f,c
  6224  0022A2  5008               	movf	??___xxtofl+3,w,c
  6225  0022A4  120E               	iorwf	___xxtofl@arg+3,f,c
  6226  0022A6  5009               	movf	___xxtofl@sign,w,c
  6227  0022A8  A4D8               	btfss	status,2,c
  6228  0022AA  AE04               	btfss	___xxtofl@val+3,7,c
  6229  0022AC  D001               	goto	l3443
  6230  0022AE  8E0E               	bsf	___xxtofl@arg+3,7,c
  6231  0022B0                     l3443:
  6232  0022B0  FFFF               	dw	65535	; assembler added errata NOP
  6233  0022B2  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  6234  0022B6  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  6235  0022BA  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  6236  0022BE  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  6237  0022C2                     l919:
  6238  0022C2  FFFF               	dw	65535	; assembler added errata NOP
  6239  0022C4  0012               	return		;funcret
  6240  0022C6  FFFF               	dw	65535	; errata NOP
  6241  0022C8                     __end_of___xxtofl:
  6242                           	opt callstack 0
  6243                           
  6244 ;; *************** function ___flmul *****************
  6245 ;; Defined at:
  6246 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  6247 ;; Parameters:    Size  Location     Type
  6248 ;;  b               4   14[COMRAM] unsigned char 
  6249 ;;  a               4   18[COMRAM] unsigned char 
  6250 ;; Auto vars:     Size  Location     Type
  6251 ;;  prod            4   33[COMRAM] struct .
  6252 ;;  grs             4   27[COMRAM] unsigned long 
  6253 ;;  temp            2   37[COMRAM] struct .
  6254 ;;  bexp            1   32[COMRAM] unsigned char 
  6255 ;;  aexp            1   31[COMRAM] unsigned char 
  6256 ;;  sign            1   26[COMRAM] unsigned char 
  6257 ;; Return value:  Size  Location     Type
  6258 ;;                  4   14[COMRAM] unsigned char 
  6259 ;; Registers used:
  6260 ;;		wreg, status,2, status,0, prodl, prodh
  6261 ;; Tracked objects:
  6262 ;;		On entry : 0/0
  6263 ;;		On exit  : 0/0
  6264 ;;		Unchanged: 0/0
  6265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6266 ;;      Params:         8       0       0       0       0       0       0
  6267 ;;      Locals:        13       0       0       0       0       0       0
  6268 ;;      Temps:          4       0       0       0       0       0       0
  6269 ;;      Totals:        25       0       0       0       0       0       0
  6270 ;;Total ram usage:       25 bytes
  6271 ;; Hardware stack levels used:    1
  6272 ;; This function calls:
  6273 ;;		Nothing
  6274 ;; This function is called by:
  6275 ;;		_get_voltage
  6276 ;;		_get_temp
  6277 ;;		_fround
  6278 ;;		_scale
  6279 ;;		_sprintf
  6280 ;; This function uses a non-reentrant model
  6281 ;;
  6282                           
  6283                           	psect	text28
  6284  002E0A                     __ptext28:
  6285                           	opt callstack 0
  6286  002E0A                     ___flmul:
  6287                           	opt callstack 0
  6288  002E0A  FFFF               	dw	65535	; assembler added errata NOP
  6289                           
  6290                           ;incstack = 0
  6291  002E0C  5012               	movf	___flmul@b+3,w,c
  6292  002E0E  0B80               	andlw	128
  6293  002E10  6E1B               	movwf	___flmul@sign,c
  6294  002E12  5012               	movf	___flmul@b+3,w,c
  6295  002E14  2412               	addwf	___flmul@b+3,w,c
  6296  002E16  6E21               	movwf	___flmul@bexp,c
  6297  002E18  BE11               	btfsc	___flmul@b+2,7,c
  6298  002E1A  8021               	bsf	___flmul@bexp,0,c
  6299  002E1C  5021               	movf	___flmul@bexp,w,c
  6300  002E1E  B4D8               	btfsc	status,2,c
  6301  002E20  D00E               	goto	l2675
  6302  002E22  2821               	incf	___flmul@bexp,w,c
  6303  002E24  A4D8               	btfss	status,2,c
  6304  002E26  D008               	goto	l2673
  6305  002E28  0E00               	movlw	0
  6306  002E2A  6E0F               	movwf	___flmul@b,c
  6307  002E2C  0E00               	movlw	0
  6308  002E2E  6E10               	movwf	___flmul@b+1,c
  6309  002E30  0E00               	movlw	0
  6310  002E32  6E11               	movwf	___flmul@b+2,c
  6311  002E34  0E00               	movlw	0
  6312  002E36  6E12               	movwf	___flmul@b+3,c
  6313  002E38                     l2673:
  6314  002E38  FFFF               	dw	65535	; assembler added errata NOP
  6315  002E3A  8E11               	bsf	___flmul@b+2,7,c
  6316  002E3C  D009               	goto	l2677
  6317  002E3E                     l2675:
  6318  002E3E  FFFF               	dw	65535	; assembler added errata NOP
  6319  002E40  0E00               	movlw	0
  6320  002E42  6E0F               	movwf	___flmul@b,c
  6321  002E44  0E00               	movlw	0
  6322  002E46  6E10               	movwf	___flmul@b+1,c
  6323  002E48  0E00               	movlw	0
  6324  002E4A  6E11               	movwf	___flmul@b+2,c
  6325  002E4C  0E00               	movlw	0
  6326  002E4E  6E12               	movwf	___flmul@b+3,c
  6327  002E50                     l2677:
  6328  002E50  FFFF               	dw	65535	; assembler added errata NOP
  6329  002E52  5016               	movf	___flmul@a+3,w,c
  6330  002E54  0B80               	andlw	128
  6331  002E56  1A1B               	xorwf	___flmul@sign,f,c
  6332  002E58  5016               	movf	___flmul@a+3,w,c
  6333  002E5A  2416               	addwf	___flmul@a+3,w,c
  6334  002E5C  6E20               	movwf	___flmul@aexp,c
  6335  002E5E  BE15               	btfsc	___flmul@a+2,7,c
  6336  002E60  8020               	bsf	___flmul@aexp,0,c
  6337  002E62  5020               	movf	___flmul@aexp,w,c
  6338  002E64  B4D8               	btfsc	status,2,c
  6339  002E66  D00E               	goto	l2693
  6340  002E68  2820               	incf	___flmul@aexp,w,c
  6341  002E6A  A4D8               	btfss	status,2,c
  6342  002E6C  D008               	goto	l2691
  6343  002E6E  0E00               	movlw	0
  6344  002E70  6E13               	movwf	___flmul@a,c
  6345  002E72  0E00               	movlw	0
  6346  002E74  6E14               	movwf	___flmul@a+1,c
  6347  002E76  0E00               	movlw	0
  6348  002E78  6E15               	movwf	___flmul@a+2,c
  6349  002E7A  0E00               	movlw	0
  6350  002E7C  6E16               	movwf	___flmul@a+3,c
  6351  002E7E                     l2691:
  6352  002E7E  FFFF               	dw	65535	; assembler added errata NOP
  6353  002E80  8E15               	bsf	___flmul@a+2,7,c
  6354  002E82  D009               	goto	l875
  6355  002E84                     l2693:
  6356  002E84  FFFF               	dw	65535	; assembler added errata NOP
  6357  002E86  0E00               	movlw	0
  6358  002E88  6E13               	movwf	___flmul@a,c
  6359  002E8A  0E00               	movlw	0
  6360  002E8C  6E14               	movwf	___flmul@a+1,c
  6361  002E8E  0E00               	movlw	0
  6362  002E90  6E15               	movwf	___flmul@a+2,c
  6363  002E92  0E00               	movlw	0
  6364  002E94  6E16               	movwf	___flmul@a+3,c
  6365  002E96                     l875:
  6366  002E96  FFFF               	dw	65535	; assembler added errata NOP
  6367  002E98  5020               	movf	___flmul@aexp,w,c
  6368  002E9A  B4D8               	btfsc	status,2,c
  6369  002E9C  D003               	goto	u2680
  6370  002E9E  5021               	movf	___flmul@bexp,w,c
  6371  002EA0  A4D8               	btfss	status,2,c
  6372  002EA2  D00A               	goto	l2701
  6373  002EA4                     u2680:
  6374  002EA4  FFFF               	dw	65535	; assembler added errata NOP
  6375  002EA6  0E00               	movlw	0
  6376  002EA8  6E0F               	movwf	?___flmul,c
  6377  002EAA  0E00               	movlw	0
  6378  002EAC  6E10               	movwf	?___flmul+1,c
  6379  002EAE  0E00               	movlw	0
  6380  002EB0  6E11               	movwf	?___flmul+2,c
  6381  002EB2  0E00               	movlw	0
  6382  002EB4  6E12               	movwf	?___flmul+3,c
  6383  002EB6  D167               	goto	l879
  6384  002EB8                     l2701:
  6385  002EB8  FFFF               	dw	65535	; assembler added errata NOP
  6386  002EBA  5015               	movf	___flmul@a+2,w,c
  6387  002EBC  020F               	mulwf	___flmul@b,c
  6388  002EBE  CFF3 F026          	movff	prodl,___flmul@temp
  6389  002EC2  CFF4 F027          	movff	prodh,___flmul@temp+1
  6390  002EC6  5026               	movf	___flmul@temp,w,c
  6391  002EC8  6E1C               	movwf	___flmul@grs,c
  6392  002ECA  6A1D               	clrf	___flmul@grs+1,c
  6393  002ECC  6A1E               	clrf	___flmul@grs+2,c
  6394  002ECE  6A1F               	clrf	___flmul@grs+3,c
  6395  002ED0  5027               	movf	___flmul@temp+1,w,c
  6396  002ED2  6E22               	movwf	___flmul@prod,c
  6397  002ED4  6A23               	clrf	___flmul@prod+1,c
  6398  002ED6  6A24               	clrf	___flmul@prod+2,c
  6399  002ED8  6A25               	clrf	___flmul@prod+3,c
  6400  002EDA  5014               	movf	___flmul@a+1,w,c
  6401  002EDC  0210               	mulwf	___flmul@b+1,c
  6402  002EDE  CFF3 F026          	movff	prodl,___flmul@temp
  6403  002EE2  CFF4 F027          	movff	prodh,___flmul@temp+1
  6404  002EE6  5026               	movf	___flmul@temp,w,c
  6405  002EE8  261C               	addwf	___flmul@grs,f,c
  6406  002EEA  0E00               	movlw	0
  6407  002EEC  221D               	addwfc	___flmul@grs+1,f,c
  6408  002EEE  221E               	addwfc	___flmul@grs+2,f,c
  6409  002EF0  221F               	addwfc	___flmul@grs+3,f,c
  6410  002EF2  5027               	movf	___flmul@temp+1,w,c
  6411  002EF4  2622               	addwf	___flmul@prod,f,c
  6412  002EF6  0E00               	movlw	0
  6413  002EF8  2223               	addwfc	___flmul@prod+1,f,c
  6414  002EFA  2224               	addwfc	___flmul@prod+2,f,c
  6415  002EFC  2225               	addwfc	___flmul@prod+3,f,c
  6416  002EFE  5013               	movf	___flmul@a,w,c
  6417  002F00  0211               	mulwf	___flmul@b+2,c
  6418  002F02  CFF3 F026          	movff	prodl,___flmul@temp
  6419  002F06  CFF4 F027          	movff	prodh,___flmul@temp+1
  6420  002F0A  5026               	movf	___flmul@temp,w,c
  6421  002F0C  261C               	addwf	___flmul@grs,f,c
  6422  002F0E  0E00               	movlw	0
  6423  002F10  221D               	addwfc	___flmul@grs+1,f,c
  6424  002F12  221E               	addwfc	___flmul@grs+2,f,c
  6425  002F14  221F               	addwfc	___flmul@grs+3,f,c
  6426  002F16  5027               	movf	___flmul@temp+1,w,c
  6427  002F18  2622               	addwf	___flmul@prod,f,c
  6428  002F1A  0E00               	movlw	0
  6429  002F1C  2223               	addwfc	___flmul@prod+1,f,c
  6430  002F1E  2224               	addwfc	___flmul@prod+2,f,c
  6431  002F20  2225               	addwfc	___flmul@prod+3,f,c
  6432  002F22  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6433  002F26  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6434  002F2A  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6435  002F2E  6A1C               	clrf	___flmul@grs,c
  6436  002F30  5013               	movf	___flmul@a,w,c
  6437  002F32  0210               	mulwf	___flmul@b+1,c
  6438  002F34  CFF3 F026          	movff	prodl,___flmul@temp
  6439  002F38  CFF4 F027          	movff	prodh,___flmul@temp+1
  6440  002F3C  5026               	movf	___flmul@temp,w,c
  6441  002F3E  261C               	addwf	___flmul@grs,f,c
  6442  002F40  5027               	movf	___flmul@temp+1,w,c
  6443  002F42  221D               	addwfc	___flmul@grs+1,f,c
  6444  002F44  0E00               	movlw	0
  6445  002F46  221E               	addwfc	___flmul@grs+2,f,c
  6446  002F48  0E00               	movlw	0
  6447  002F4A  221F               	addwfc	___flmul@grs+3,f,c
  6448  002F4C  5014               	movf	___flmul@a+1,w,c
  6449  002F4E  020F               	mulwf	___flmul@b,c
  6450  002F50  CFF3 F026          	movff	prodl,___flmul@temp
  6451  002F54  CFF4 F027          	movff	prodh,___flmul@temp+1
  6452  002F58  5026               	movf	___flmul@temp,w,c
  6453  002F5A  261C               	addwf	___flmul@grs,f,c
  6454  002F5C  5027               	movf	___flmul@temp+1,w,c
  6455  002F5E  221D               	addwfc	___flmul@grs+1,f,c
  6456  002F60  0E00               	movlw	0
  6457  002F62  221E               	addwfc	___flmul@grs+2,f,c
  6458  002F64  0E00               	movlw	0
  6459  002F66  221F               	addwfc	___flmul@grs+3,f,c
  6460  002F68  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6461  002F6C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6462  002F70  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6463  002F74  6A1C               	clrf	___flmul@grs,c
  6464  002F76  5013               	movf	___flmul@a,w,c
  6465  002F78  020F               	mulwf	___flmul@b,c
  6466  002F7A  CFF3 F026          	movff	prodl,___flmul@temp
  6467  002F7E  CFF4 F027          	movff	prodh,___flmul@temp+1
  6468  002F82  5026               	movf	___flmul@temp,w,c
  6469  002F84  261C               	addwf	___flmul@grs,f,c
  6470  002F86  5027               	movf	___flmul@temp+1,w,c
  6471  002F88  221D               	addwfc	___flmul@grs+1,f,c
  6472  002F8A  0E00               	movlw	0
  6473  002F8C  221E               	addwfc	___flmul@grs+2,f,c
  6474  002F8E  0E00               	movlw	0
  6475  002F90  221F               	addwfc	___flmul@grs+3,f,c
  6476  002F92  5015               	movf	___flmul@a+2,w,c
  6477  002F94  0210               	mulwf	___flmul@b+1,c
  6478  002F96  CFF3 F026          	movff	prodl,___flmul@temp
  6479  002F9A  CFF4 F027          	movff	prodh,___flmul@temp+1
  6480  002F9E  5026               	movf	___flmul@temp,w,c
  6481  002FA0  2622               	addwf	___flmul@prod,f,c
  6482  002FA2  5027               	movf	___flmul@temp+1,w,c
  6483  002FA4  2223               	addwfc	___flmul@prod+1,f,c
  6484  002FA6  0E00               	movlw	0
  6485  002FA8  2224               	addwfc	___flmul@prod+2,f,c
  6486  002FAA  0E00               	movlw	0
  6487  002FAC  2225               	addwfc	___flmul@prod+3,f,c
  6488  002FAE  5014               	movf	___flmul@a+1,w,c
  6489  002FB0  0211               	mulwf	___flmul@b+2,c
  6490  002FB2  CFF3 F026          	movff	prodl,___flmul@temp
  6491  002FB6  CFF4 F027          	movff	prodh,___flmul@temp+1
  6492  002FBA  5026               	movf	___flmul@temp,w,c
  6493  002FBC  2622               	addwf	___flmul@prod,f,c
  6494  002FBE  5027               	movf	___flmul@temp+1,w,c
  6495  002FC0  2223               	addwfc	___flmul@prod+1,f,c
  6496  002FC2  0E00               	movlw	0
  6497  002FC4  2224               	addwfc	___flmul@prod+2,f,c
  6498  002FC6  0E00               	movlw	0
  6499  002FC8  2225               	addwfc	___flmul@prod+3,f,c
  6500  002FCA  5015               	movf	___flmul@a+2,w,c
  6501  002FCC  0211               	mulwf	___flmul@b+2,c
  6502  002FCE  CFF3 F026          	movff	prodl,___flmul@temp
  6503  002FD2  CFF4 F027          	movff	prodh,___flmul@temp+1
  6504  002FD6  5026               	movf	___flmul@temp,w,c
  6505  002FD8  6E17               	movwf	??___flmul& (0+255),c
  6506  002FDA  5027               	movf	___flmul@temp+1,w,c
  6507  002FDC  6E18               	movwf	(??___flmul+1)& (0+255),c
  6508  002FDE  6A19               	clrf	(??___flmul+2)& (0+255),c
  6509  002FE0  6A1A               	clrf	(??___flmul+3)& (0+255),c
  6510  002FE2  C019  F01A         	movff	??___flmul+2,??___flmul+3
  6511  002FE6  C018  F019         	movff	??___flmul+1,??___flmul+2
  6512  002FEA  C017  F018         	movff	??___flmul,??___flmul+1
  6513  002FEE  6A17               	clrf	??___flmul,c
  6514  002FF0  5017               	movf	??___flmul,w,c
  6515  002FF2  2622               	addwf	___flmul@prod,f,c
  6516  002FF4  5018               	movf	??___flmul+1,w,c
  6517  002FF6  2223               	addwfc	___flmul@prod+1,f,c
  6518  002FF8  5019               	movf	??___flmul+2,w,c
  6519  002FFA  2224               	addwfc	___flmul@prod+2,f,c
  6520  002FFC  501A               	movf	??___flmul+3,w,c
  6521  002FFE  2225               	addwfc	___flmul@prod+3,f,c
  6522  003000  C01C  F017         	movff	___flmul@grs,??___flmul
  6523  003004  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  6524  003008  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  6525  00300C  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  6526  003010  0E19               	movlw	25
  6527  003012  D006               	goto	u2690
  6528  003014                     u2695:
  6529  003014  FFFF               	dw	65535	; assembler added errata NOP
  6530  003016  90D8               	bcf	status,0,c
  6531  003018  321A               	rrcf	??___flmul+3,f,c
  6532  00301A  3219               	rrcf	??___flmul+2,f,c
  6533  00301C  3218               	rrcf	??___flmul+1,f,c
  6534  00301E  3217               	rrcf	??___flmul,f,c
  6535  003020                     u2690:
  6536  003020  FFFF               	dw	65535	; assembler added errata NOP
  6537  003022  2EE8               	decfsz	wreg,f,c
  6538  003024  D7F7               	goto	u2695
  6539  003026  5017               	movf	??___flmul,w,c
  6540  003028  2622               	addwf	___flmul@prod,f,c
  6541  00302A  5018               	movf	??___flmul+1,w,c
  6542  00302C  2223               	addwfc	___flmul@prod+1,f,c
  6543  00302E  5019               	movf	??___flmul+2,w,c
  6544  003030  2224               	addwfc	___flmul@prod+2,f,c
  6545  003032  501A               	movf	??___flmul+3,w,c
  6546  003034  2225               	addwfc	___flmul@prod+3,f,c
  6547  003036  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6548  00303A  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6549  00303E  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6550  003042  6A1C               	clrf	___flmul@grs,c
  6551  003044  5020               	movf	___flmul@aexp,w,c
  6552  003046  C021  F017         	movff	___flmul@bexp,??___flmul
  6553  00304A  6A18               	clrf	(??___flmul+1)& (0+255),c
  6554  00304C  2617               	addwf	??___flmul,f,c
  6555  00304E  0E00               	movlw	0
  6556  003050  2218               	addwfc	??___flmul+1,f,c
  6557  003052  0E82               	movlw	130
  6558  003054  2417               	addwf	??___flmul,w,c
  6559  003056  6E26               	movwf	___flmul@temp,c
  6560  003058  0EFF               	movlw	255
  6561  00305A  2018               	addwfc	??___flmul+1,w,c
  6562  00305C  6E27               	movwf	___flmul@temp+1,c
  6563  00305E  D010               	goto	l2749
  6564  003060                     l2743:
  6565  003060  FFFF               	dw	65535	; assembler added errata NOP
  6566  003062  90D8               	bcf	status,0,c
  6567  003064  3622               	rlcf	___flmul@prod,f,c
  6568  003066  3623               	rlcf	___flmul@prod+1,f,c
  6569  003068  3624               	rlcf	___flmul@prod+2,f,c
  6570  00306A  3625               	rlcf	___flmul@prod+3,f,c
  6571  00306C  BE1F               	btfsc	___flmul@grs+3,7,c
  6572  00306E  8022               	bsf	___flmul@prod,0,c
  6573  003070  90D8               	bcf	status,0,c
  6574  003072  361C               	rlcf	___flmul@grs,f,c
  6575  003074  361D               	rlcf	___flmul@grs+1,f,c
  6576  003076  361E               	rlcf	___flmul@grs+2,f,c
  6577  003078  361F               	rlcf	___flmul@grs+3,f,c
  6578  00307A  0626               	decf	___flmul@temp,f,c
  6579  00307C  A0D8               	btfss	status,0,c
  6580  00307E  0627               	decf	___flmul@temp+1,f,c
  6581  003080                     l2749:
  6582  003080  FFFF               	dw	65535	; assembler added errata NOP
  6583  003082  AE24               	btfss	___flmul@prod+2,7,c
  6584  003084  D7ED               	goto	l2743
  6585  003086  0E00               	movlw	0
  6586  003088  6E20               	movwf	___flmul@aexp,c
  6587  00308A  AE1F               	btfss	___flmul@grs+3,7,c
  6588  00308C  D019               	goto	l884
  6589  00308E  0EFF               	movlw	255
  6590  003090  141C               	andwf	___flmul@grs,w,c
  6591  003092  6E17               	movwf	??___flmul& (0+255),c
  6592  003094  0EFF               	movlw	255
  6593  003096  141D               	andwf	___flmul@grs+1,w,c
  6594  003098  6E18               	movwf	(??___flmul+1)& (0+255),c
  6595  00309A  0EFF               	movlw	255
  6596  00309C  141E               	andwf	___flmul@grs+2,w,c
  6597  00309E  6E19               	movwf	(??___flmul+2)& (0+255),c
  6598  0030A0  0E7F               	movlw	127
  6599  0030A2  141F               	andwf	___flmul@grs+3,w,c
  6600  0030A4  6E1A               	movwf	(??___flmul+3)& (0+255),c
  6601  0030A6  5017               	movf	??___flmul,w,c
  6602  0030A8  1018               	iorwf	??___flmul+1,w,c
  6603  0030AA  1019               	iorwf	??___flmul+2,w,c
  6604  0030AC  101A               	iorwf	??___flmul+3,w,c
  6605  0030AE  B4D8               	btfsc	status,2,c
  6606  0030B0  D004               	goto	l885
  6607  0030B2                     u2730:
  6608  0030B2  FFFF               	dw	65535	; assembler added errata NOP
  6609  0030B4  0E01               	movlw	1
  6610  0030B6  6E20               	movwf	___flmul@aexp,c
  6611  0030B8  D003               	goto	l884
  6612  0030BA                     l885:
  6613  0030BA  FFFF               	dw	65535	; assembler added errata NOP
  6614  0030BC  B022               	btfsc	___flmul@prod,0,c
  6615  0030BE  D7F9               	goto	u2730
  6616  0030C0                     l884:
  6617  0030C0  FFFF               	dw	65535	; assembler added errata NOP
  6618  0030C2  5020               	movf	___flmul@aexp,w,c
  6619  0030C4  B4D8               	btfsc	status,2,c
  6620  0030C6  D01F               	goto	l2769
  6621  0030C8  0E01               	movlw	1
  6622  0030CA  2622               	addwf	___flmul@prod,f,c
  6623  0030CC  0E00               	movlw	0
  6624  0030CE  2223               	addwfc	___flmul@prod+1,f,c
  6625  0030D0  2224               	addwfc	___flmul@prod+2,f,c
  6626  0030D2  2225               	addwfc	___flmul@prod+3,f,c
  6627  0030D4  A025               	btfss	___flmul@prod+3,0,c
  6628  0030D6  D017               	goto	l2769
  6629  0030D8  C022  F017         	movff	___flmul@prod,??___flmul
  6630  0030DC  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  6631  0030E0  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  6632  0030E4  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  6633  0030E8  341A               	rlcf	??___flmul+3,w,c
  6634  0030EA  321A               	rrcf	??___flmul+3,f,c
  6635  0030EC  3219               	rrcf	??___flmul+2,f,c
  6636  0030EE  3218               	rrcf	??___flmul+1,f,c
  6637  0030F0  3217               	rrcf	??___flmul,f,c
  6638  0030F2  C017  F022         	movff	??___flmul,___flmul@prod
  6639  0030F6  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  6640  0030FA  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  6641  0030FE  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  6642  003102  4A26               	infsnz	___flmul@temp,f,c
  6643  003104  2A27               	incf	___flmul@temp+1,f,c
  6644  003106                     l2769:
  6645  003106  FFFF               	dw	65535	; assembler added errata NOP
  6646  003108  BE27               	btfsc	___flmul@temp+1,7,c
  6647  00310A  D00D               	goto	l2773
  6648  00310C  5027               	movf	___flmul@temp+1,w,c
  6649  00310E  E103               	bnz	u2770
  6650  003110  2826               	incf	___flmul@temp,w,c
  6651  003112  A0D8               	btfss	status,0,c
  6652  003114  D008               	goto	l2773
  6653  003116                     u2770:
  6654  003116  0E00               	movlw	0
  6655  003118  6E22               	movwf	___flmul@prod,c
  6656  00311A  0E00               	movlw	0
  6657  00311C  6E23               	movwf	___flmul@prod+1,c
  6658  00311E  0E80               	movlw	128
  6659  003120  6E24               	movwf	___flmul@prod+2,c
  6660  003122  0E7F               	movlw	127
  6661  003124  D023               	goto	L10
  6662  003126                     l2773:
  6663  003126  FFFF               	dw	65535	; assembler added errata NOP
  6664  003128  BE27               	btfsc	___flmul@temp+1,7,c
  6665  00312A  D005               	goto	u2780
  6666  00312C  5027               	movf	___flmul@temp+1,w,c
  6667  00312E  E10F               	bnz	l892
  6668  003130  0426               	decf	___flmul@temp,w,c
  6669  003132  B0D8               	btfsc	status,0,c
  6670  003134  D00C               	goto	l892
  6671  003136                     u2780:
  6672  003136  FFFF               	dw	65535	; assembler added errata NOP
  6673  003138  0E00               	movlw	0
  6674  00313A  6E22               	movwf	___flmul@prod,c
  6675  00313C  0E00               	movlw	0
  6676  00313E  6E23               	movwf	___flmul@prod+1,c
  6677  003140  0E00               	movlw	0
  6678  003142  6E24               	movwf	___flmul@prod+2,c
  6679  003144  0E00               	movlw	0
  6680  003146  6E25               	movwf	___flmul@prod+3,c
  6681  003148  0E00               	movlw	0
  6682  00314A  6E1B               	movwf	___flmul@sign,c
  6683  00314C  D011               	goto	l2785
  6684  00314E                     l892:
  6685  00314E  FFFF               	dw	65535	; assembler added errata NOP
  6686  003150  C026  F021         	movff	___flmul@temp,___flmul@bexp
  6687  003154  0EFF               	movlw	255
  6688  003156  1622               	andwf	___flmul@prod,f,c
  6689  003158  0EFF               	movlw	255
  6690  00315A  1623               	andwf	___flmul@prod+1,f,c
  6691  00315C  0E7F               	movlw	127
  6692  00315E  1624               	andwf	___flmul@prod+2,f,c
  6693  003160  0E00               	movlw	0
  6694  003162  1625               	andwf	___flmul@prod+3,f,c
  6695  003164  B021               	btfsc	___flmul@bexp,0,c
  6696  003166  8E24               	bsf	___flmul@prod+2,7,c
  6697  003168  90D8               	bcf	status,0,c
  6698  00316A  3021               	rrcf	___flmul@bexp,w,c
  6699  00316C                     L10:
  6700  00316C  FFFF               	dw	65535	; assembler added errata NOP
  6701  00316E  6E25               	movwf	___flmul@prod+3,c
  6702  003170                     l2785:
  6703  003170  FFFF               	dw	65535	; assembler added errata NOP
  6704  003172  501B               	movf	___flmul@sign,w,c
  6705  003174  1225               	iorwf	___flmul@prod+3,f,c
  6706  003176  C022  F00F         	movff	___flmul@prod,?___flmul
  6707  00317A  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  6708  00317E  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  6709  003182  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  6710  003186                     l879:
  6711  003186  FFFF               	dw	65535	; assembler added errata NOP
  6712  003188  0012               	return		;funcret
  6713  00318A  FFFF               	dw	65535	; errata NOP
  6714  00318C                     __end_of___flmul:
  6715                           	opt callstack 0
  6716                           
  6717 ;; *************** function ___fldiv *****************
  6718 ;; Defined at:
  6719 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
  6720 ;; Parameters:    Size  Location     Type
  6721 ;;  b               4   39[COMRAM] unsigned char 
  6722 ;;  a               4   43[COMRAM] unsigned char 
  6723 ;; Auto vars:     Size  Location     Type
  6724 ;;  grs             4   58[COMRAM] unsigned long 
  6725 ;;  rem             4   51[COMRAM] unsigned long 
  6726 ;;  new_exp         2   56[COMRAM] int 
  6727 ;;  aexp            1   63[COMRAM] unsigned char 
  6728 ;;  bexp            1   62[COMRAM] unsigned char 
  6729 ;;  sign            1   55[COMRAM] unsigned char 
  6730 ;; Return value:  Size  Location     Type
  6731 ;;                  4   39[COMRAM] unsigned char 
  6732 ;; Registers used:
  6733 ;;		wreg, status,2, status,0
  6734 ;; Tracked objects:
  6735 ;;		On entry : 0/0
  6736 ;;		On exit  : 0/0
  6737 ;;		Unchanged: 0/0
  6738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6739 ;;      Params:         8       0       0       0       0       0       0
  6740 ;;      Locals:        13       0       0       0       0       0       0
  6741 ;;      Temps:          4       0       0       0       0       0       0
  6742 ;;      Totals:        25       0       0       0       0       0       0
  6743 ;;Total ram usage:       25 bytes
  6744 ;; Hardware stack levels used:    1
  6745 ;; This function calls:
  6746 ;;		Nothing
  6747 ;; This function is called by:
  6748 ;;		_get_voltage
  6749 ;;		_get_temp
  6750 ;; This function uses a non-reentrant model
  6751 ;;
  6752                           
  6753                           	psect	text29
  6754  002806                     __ptext29:
  6755                           	opt callstack 0
  6756  002806                     ___fldiv:
  6757                           	opt callstack 0
  6758  002806  FFFF               	dw	65535	; assembler added errata NOP
  6759                           
  6760                           ;incstack = 0
  6761  002808  502B               	movf	___fldiv@b+3,w,c
  6762  00280A  0B80               	andlw	128
  6763  00280C  6E38               	movwf	___fldiv@sign,c
  6764  00280E  502B               	movf	___fldiv@b+3,w,c
  6765  002810  242B               	addwf	___fldiv@b+3,w,c
  6766  002812  6E3F               	movwf	___fldiv@bexp,c
  6767  002814  BE2A               	btfsc	___fldiv@b+2,7,c
  6768  002816  803F               	bsf	___fldiv@bexp,0,c
  6769  002818  503F               	movf	___fldiv@bexp,w,c
  6770  00281A  B4D8               	btfsc	status,2,c
  6771  00281C  D00E               	goto	l3167
  6772  00281E  283F               	incf	___fldiv@bexp,w,c
  6773  002820  A4D8               	btfss	status,2,c
  6774  002822  D008               	goto	l3163
  6775  002824  0E00               	movlw	0
  6776  002826  6E28               	movwf	___fldiv@b,c
  6777  002828  0E00               	movlw	0
  6778  00282A  6E29               	movwf	___fldiv@b+1,c
  6779  00282C  0E00               	movlw	0
  6780  00282E  6E2A               	movwf	___fldiv@b+2,c
  6781  002830  0E00               	movlw	0
  6782  002832  6E2B               	movwf	___fldiv@b+3,c
  6783  002834                     l3163:
  6784  002834  FFFF               	dw	65535	; assembler added errata NOP
  6785  002836  8E2A               	bsf	___fldiv@b+2,7,c
  6786  002838  D007               	goto	L11
  6787  00283A                     l3167:
  6788  00283A  FFFF               	dw	65535	; assembler added errata NOP
  6789  00283C  0E00               	movlw	0
  6790  00283E  6E28               	movwf	___fldiv@b,c
  6791  002840  0E00               	movlw	0
  6792  002842  6E29               	movwf	___fldiv@b+1,c
  6793  002844  0E00               	movlw	0
  6794  002846  6E2A               	movwf	___fldiv@b+2,c
  6795  002848                     L11:
  6796  002848  FFFF               	dw	65535	; assembler added errata NOP
  6797  00284A  0E00               	movlw	0
  6798  00284C  6E2B               	movwf	___fldiv@b+3,c
  6799  00284E  502F               	movf	___fldiv@a+3,w,c
  6800  002850  0B80               	andlw	128
  6801  002852  1A38               	xorwf	___fldiv@sign,f,c
  6802  002854  502F               	movf	___fldiv@a+3,w,c
  6803  002856  242F               	addwf	___fldiv@a+3,w,c
  6804  002858  6E40               	movwf	___fldiv@aexp,c
  6805  00285A  BE2E               	btfsc	___fldiv@a+2,7,c
  6806  00285C  8040               	bsf	___fldiv@aexp,0,c
  6807  00285E  5040               	movf	___fldiv@aexp,w,c
  6808  002860  B4D8               	btfsc	status,2,c
  6809  002862  D00E               	goto	l3187
  6810  002864  2840               	incf	___fldiv@aexp,w,c
  6811  002866  A4D8               	btfss	status,2,c
  6812  002868  D008               	goto	l3183
  6813  00286A  0E00               	movlw	0
  6814  00286C  6E2C               	movwf	___fldiv@a,c
  6815  00286E  0E00               	movlw	0
  6816  002870  6E2D               	movwf	___fldiv@a+1,c
  6817  002872  0E00               	movlw	0
  6818  002874  6E2E               	movwf	___fldiv@a+2,c
  6819  002876  0E00               	movlw	0
  6820  002878  6E2F               	movwf	___fldiv@a+3,c
  6821  00287A                     l3183:
  6822  00287A  FFFF               	dw	65535	; assembler added errata NOP
  6823  00287C  8E2E               	bsf	___fldiv@a+2,7,c
  6824  00287E  D007               	goto	L12
  6825  002880                     l3187:
  6826  002880  FFFF               	dw	65535	; assembler added errata NOP
  6827  002882  0E00               	movlw	0
  6828  002884  6E2C               	movwf	___fldiv@a,c
  6829  002886  0E00               	movlw	0
  6830  002888  6E2D               	movwf	___fldiv@a+1,c
  6831  00288A  0E00               	movlw	0
  6832  00288C  6E2E               	movwf	___fldiv@a+2,c
  6833  00288E                     L12:
  6834  00288E  FFFF               	dw	65535	; assembler added errata NOP
  6835  002890  0E00               	movlw	0
  6836  002892  6E2F               	movwf	___fldiv@a+3,c
  6837  002894  502C               	movf	___fldiv@a,w,c
  6838  002896  102D               	iorwf	___fldiv@a+1,w,c
  6839  002898  102E               	iorwf	___fldiv@a+2,w,c
  6840  00289A  102F               	iorwf	___fldiv@a+3,w,c
  6841  00289C  A4D8               	btfss	status,2,c
  6842  00289E  D018               	goto	l3201
  6843  0028A0  0E00               	movlw	0
  6844  0028A2  6E28               	movwf	___fldiv@b,c
  6845  0028A4  0E00               	movlw	0
  6846  0028A6  6E29               	movwf	___fldiv@b+1,c
  6847  0028A8  0E00               	movlw	0
  6848  0028AA  6E2A               	movwf	___fldiv@b+2,c
  6849  0028AC  0E00               	movlw	0
  6850  0028AE  6E2B               	movwf	___fldiv@b+3,c
  6851  0028B0  0E80               	movlw	128
  6852  0028B2  122A               	iorwf	___fldiv@b+2,f,c
  6853  0028B4  0E7F               	movlw	127
  6854  0028B6  122B               	iorwf	___fldiv@b+3,f,c
  6855  0028B8                     l3195:
  6856  0028B8  FFFF               	dw	65535	; assembler added errata NOP
  6857  0028BA  5038               	movf	___fldiv@sign,w,c
  6858  0028BC  122B               	iorwf	___fldiv@b+3,f,c
  6859  0028BE  C028  F028         	movff	___fldiv@b,?___fldiv
  6860  0028C2  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  6861  0028C6  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  6862  0028CA  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  6863  0028CE  D0F8               	goto	l843
  6864  0028D0                     l3201:
  6865  0028D0  FFFF               	dw	65535	; assembler added errata NOP
  6866  0028D2  503F               	movf	___fldiv@bexp,w,c
  6867  0028D4  A4D8               	btfss	status,2,c
  6868  0028D6  D009               	goto	l3209
  6869  0028D8  0E00               	movlw	0
  6870  0028DA  6E28               	movwf	?___fldiv,c
  6871  0028DC  0E00               	movlw	0
  6872  0028DE  6E29               	movwf	?___fldiv+1,c
  6873  0028E0  0E00               	movlw	0
  6874  0028E2  6E2A               	movwf	?___fldiv+2,c
  6875  0028E4  0E00               	movlw	0
  6876  0028E6  6E2B               	movwf	?___fldiv+3,c
  6877  0028E8  D0EB               	goto	l843
  6878  0028EA                     l3209:
  6879  0028EA  FFFF               	dw	65535	; assembler added errata NOP
  6880  0028EC  5040               	movf	___fldiv@aexp,w,c
  6881  0028EE  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  6882  0028F2  6A31               	clrf	(??___fldiv+1)& (0+255),c
  6883  0028F4  5E30               	subwf	??___fldiv,f,c
  6884  0028F6  0E00               	movlw	0
  6885  0028F8  5A31               	subwfb	??___fldiv+1,f,c
  6886  0028FA  0E7F               	movlw	127
  6887  0028FC  2430               	addwf	??___fldiv,w,c
  6888  0028FE  6E39               	movwf	___fldiv@new_exp,c
  6889  002900  0E00               	movlw	0
  6890  002902  2031               	addwfc	??___fldiv+1,w,c
  6891  002904  6E3A               	movwf	___fldiv@new_exp+1,c
  6892  002906  C028  F034         	movff	___fldiv@b,___fldiv@rem
  6893  00290A  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  6894  00290E  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  6895  002912  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  6896  002916  0E00               	movlw	0
  6897  002918  6E28               	movwf	___fldiv@b,c
  6898  00291A  0E00               	movlw	0
  6899  00291C  6E29               	movwf	___fldiv@b+1,c
  6900  00291E  0E00               	movlw	0
  6901  002920  6E2A               	movwf	___fldiv@b+2,c
  6902  002922  0E00               	movlw	0
  6903  002924  6E2B               	movwf	___fldiv@b+3,c
  6904  002926  0E00               	movlw	0
  6905  002928  6E3B               	movwf	___fldiv@grs,c
  6906  00292A  0E00               	movlw	0
  6907  00292C  6E3C               	movwf	___fldiv@grs+1,c
  6908  00292E  0E00               	movlw	0
  6909  002930  6E3D               	movwf	___fldiv@grs+2,c
  6910  002932  0E00               	movlw	0
  6911  002934  6E3E               	movwf	___fldiv@grs+3,c
  6912  002936  0E00               	movlw	0
  6913  002938  6E40               	movwf	___fldiv@aexp,c
  6914  00293A  D02B               	goto	l845
  6915  00293C                     l3219:
  6916  00293C  FFFF               	dw	65535	; assembler added errata NOP
  6917  00293E  5040               	movf	___fldiv@aexp,w,c
  6918  002940  B4D8               	btfsc	status,2,c
  6919  002942  D011               	goto	l3227
  6920  002944  90D8               	bcf	status,0,c
  6921  002946  3634               	rlcf	___fldiv@rem,f,c
  6922  002948  3635               	rlcf	___fldiv@rem+1,f,c
  6923  00294A  3636               	rlcf	___fldiv@rem+2,f,c
  6924  00294C  3637               	rlcf	___fldiv@rem+3,f,c
  6925  00294E  90D8               	bcf	status,0,c
  6926  002950  3628               	rlcf	___fldiv@b,f,c
  6927  002952  3629               	rlcf	___fldiv@b+1,f,c
  6928  002954  362A               	rlcf	___fldiv@b+2,f,c
  6929  002956  362B               	rlcf	___fldiv@b+3,f,c
  6930  002958  BE3E               	btfsc	___fldiv@grs+3,7,c
  6931  00295A  8028               	bsf	___fldiv@b,0,c
  6932  00295C  90D8               	bcf	status,0,c
  6933  00295E  363B               	rlcf	___fldiv@grs,f,c
  6934  002960  363C               	rlcf	___fldiv@grs+1,f,c
  6935  002962  363D               	rlcf	___fldiv@grs+2,f,c
  6936  002964  363E               	rlcf	___fldiv@grs+3,f,c
  6937  002966                     l3227:
  6938  002966  FFFF               	dw	65535	; assembler added errata NOP
  6939  002968  502C               	movf	___fldiv@a,w,c
  6940  00296A  5C34               	subwf	___fldiv@rem,w,c
  6941  00296C  502D               	movf	___fldiv@a+1,w,c
  6942  00296E  5835               	subwfb	___fldiv@rem+1,w,c
  6943  002970  502E               	movf	___fldiv@a+2,w,c
  6944  002972  5836               	subwfb	___fldiv@rem+2,w,c
  6945  002974  502F               	movf	___fldiv@a+3,w,c
  6946  002976  5837               	subwfb	___fldiv@rem+3,w,c
  6947  002978  A0D8               	btfss	status,0,c
  6948  00297A  D009               	goto	l3233
  6949  00297C  8C3E               	bsf	___fldiv@grs+3,6,c
  6950  00297E  502C               	movf	___fldiv@a,w,c
  6951  002980  5E34               	subwf	___fldiv@rem,f,c
  6952  002982  502D               	movf	___fldiv@a+1,w,c
  6953  002984  5A35               	subwfb	___fldiv@rem+1,f,c
  6954  002986  502E               	movf	___fldiv@a+2,w,c
  6955  002988  5A36               	subwfb	___fldiv@rem+2,f,c
  6956  00298A  502F               	movf	___fldiv@a+3,w,c
  6957  00298C  5A37               	subwfb	___fldiv@rem+3,f,c
  6958  00298E                     l3233:
  6959  00298E  FFFF               	dw	65535	; assembler added errata NOP
  6960  002990  2A40               	incf	___fldiv@aexp,f,c
  6961  002992                     l845:
  6962  002992  FFFF               	dw	65535	; assembler added errata NOP
  6963  002994  0E19               	movlw	25
  6964  002996  6440               	cpfsgt	___fldiv@aexp,c
  6965  002998  D7D1               	goto	l3219
  6966  00299A  5034               	movf	___fldiv@rem,w,c
  6967  00299C  1035               	iorwf	___fldiv@rem+1,w,c
  6968  00299E  1036               	iorwf	___fldiv@rem+2,w,c
  6969  0029A0  1037               	iorwf	___fldiv@rem+3,w,c
  6970  0029A2  B4D8               	btfsc	status,2,c
  6971  0029A4  D012               	goto	l3245
  6972  0029A6  803B               	bsf	___fldiv@grs,0,c
  6973  0029A8  D010               	goto	l3245
  6974  0029AA                     l3239:
  6975  0029AA  FFFF               	dw	65535	; assembler added errata NOP
  6976  0029AC  90D8               	bcf	status,0,c
  6977  0029AE  3628               	rlcf	___fldiv@b,f,c
  6978  0029B0  3629               	rlcf	___fldiv@b+1,f,c
  6979  0029B2  362A               	rlcf	___fldiv@b+2,f,c
  6980  0029B4  362B               	rlcf	___fldiv@b+3,f,c
  6981  0029B6  BE3E               	btfsc	___fldiv@grs+3,7,c
  6982  0029B8  8028               	bsf	___fldiv@b,0,c
  6983  0029BA  90D8               	bcf	status,0,c
  6984  0029BC  363B               	rlcf	___fldiv@grs,f,c
  6985  0029BE  363C               	rlcf	___fldiv@grs+1,f,c
  6986  0029C0  363D               	rlcf	___fldiv@grs+2,f,c
  6987  0029C2  363E               	rlcf	___fldiv@grs+3,f,c
  6988  0029C4  0639               	decf	___fldiv@new_exp,f,c
  6989  0029C6  A0D8               	btfss	status,0,c
  6990  0029C8  063A               	decf	___fldiv@new_exp+1,f,c
  6991  0029CA                     l3245:
  6992  0029CA  FFFF               	dw	65535	; assembler added errata NOP
  6993  0029CC  AE2A               	btfss	___fldiv@b+2,7,c
  6994  0029CE  D7ED               	goto	l3239
  6995  0029D0  0E00               	movlw	0
  6996  0029D2  6E40               	movwf	___fldiv@aexp,c
  6997  0029D4  AE3E               	btfss	___fldiv@grs+3,7,c
  6998  0029D6  D019               	goto	l856
  6999  0029D8  0EFF               	movlw	255
  7000  0029DA  143B               	andwf	___fldiv@grs,w,c
  7001  0029DC  6E30               	movwf	??___fldiv& (0+255),c
  7002  0029DE  0EFF               	movlw	255
  7003  0029E0  143C               	andwf	___fldiv@grs+1,w,c
  7004  0029E2  6E31               	movwf	(??___fldiv+1)& (0+255),c
  7005  0029E4  0EFF               	movlw	255
  7006  0029E6  143D               	andwf	___fldiv@grs+2,w,c
  7007  0029E8  6E32               	movwf	(??___fldiv+2)& (0+255),c
  7008  0029EA  0E7F               	movlw	127
  7009  0029EC  143E               	andwf	___fldiv@grs+3,w,c
  7010  0029EE  6E33               	movwf	(??___fldiv+3)& (0+255),c
  7011  0029F0  5030               	movf	??___fldiv,w,c
  7012  0029F2  1031               	iorwf	??___fldiv+1,w,c
  7013  0029F4  1032               	iorwf	??___fldiv+2,w,c
  7014  0029F6  1033               	iorwf	??___fldiv+3,w,c
  7015  0029F8  B4D8               	btfsc	status,2,c
  7016  0029FA  D004               	goto	l857
  7017  0029FC                     u3440:
  7018  0029FC  FFFF               	dw	65535	; assembler added errata NOP
  7019  0029FE  0E01               	movlw	1
  7020  002A00  6E40               	movwf	___fldiv@aexp,c
  7021  002A02  D003               	goto	l856
  7022  002A04                     l857:
  7023  002A04  FFFF               	dw	65535	; assembler added errata NOP
  7024  002A06  B028               	btfsc	___fldiv@b,0,c
  7025  002A08  D7F9               	goto	u3440
  7026  002A0A                     l856:
  7027  002A0A  FFFF               	dw	65535	; assembler added errata NOP
  7028  002A0C  5040               	movf	___fldiv@aexp,w,c
  7029  002A0E  B4D8               	btfsc	status,2,c
  7030  002A10  D01F               	goto	l3265
  7031  002A12  0E01               	movlw	1
  7032  002A14  2628               	addwf	___fldiv@b,f,c
  7033  002A16  0E00               	movlw	0
  7034  002A18  2229               	addwfc	___fldiv@b+1,f,c
  7035  002A1A  222A               	addwfc	___fldiv@b+2,f,c
  7036  002A1C  222B               	addwfc	___fldiv@b+3,f,c
  7037  002A1E  A02B               	btfss	___fldiv@b+3,0,c
  7038  002A20  D017               	goto	l3265
  7039  002A22  C028  F030         	movff	___fldiv@b,??___fldiv
  7040  002A26  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  7041  002A2A  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  7042  002A2E  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  7043  002A32  3433               	rlcf	??___fldiv+3,w,c
  7044  002A34  3233               	rrcf	??___fldiv+3,f,c
  7045  002A36  3232               	rrcf	??___fldiv+2,f,c
  7046  002A38  3231               	rrcf	??___fldiv+1,f,c
  7047  002A3A  3230               	rrcf	??___fldiv,f,c
  7048  002A3C  C030  F028         	movff	??___fldiv,___fldiv@b
  7049  002A40  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  7050  002A44  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  7051  002A48  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  7052  002A4C  4A39               	infsnz	___fldiv@new_exp,f,c
  7053  002A4E  2A3A               	incf	___fldiv@new_exp+1,f,c
  7054  002A50                     l3265:
  7055  002A50  FFFF               	dw	65535	; assembler added errata NOP
  7056  002A52  BE3A               	btfsc	___fldiv@new_exp+1,7,c
  7057  002A54  D010               	goto	l3269
  7058  002A56  503A               	movf	___fldiv@new_exp+1,w,c
  7059  002A58  E103               	bnz	u3480
  7060  002A5A  2839               	incf	___fldiv@new_exp,w,c
  7061  002A5C  A0D8               	btfss	status,0,c
  7062  002A5E  D00B               	goto	l3269
  7063  002A60                     u3480:
  7064  002A60  0E00               	movlw	0
  7065  002A62  6E3A               	movwf	___fldiv@new_exp+1,c
  7066  002A64  6839               	setf	___fldiv@new_exp,c
  7067  002A66  0E00               	movlw	0
  7068  002A68  6E28               	movwf	___fldiv@b,c
  7069  002A6A  0E00               	movlw	0
  7070  002A6C  6E29               	movwf	___fldiv@b+1,c
  7071  002A6E  0E00               	movlw	0
  7072  002A70  6E2A               	movwf	___fldiv@b+2,c
  7073  002A72  0E00               	movlw	0
  7074  002A74  6E2B               	movwf	___fldiv@b+3,c
  7075  002A76                     l3269:
  7076  002A76  FFFF               	dw	65535	; assembler added errata NOP
  7077  002A78  BE3A               	btfsc	___fldiv@new_exp+1,7,c
  7078  002A7A  D005               	goto	u3490
  7079  002A7C  503A               	movf	___fldiv@new_exp+1,w,c
  7080  002A7E  E112               	bnz	l3273
  7081  002A80  0439               	decf	___fldiv@new_exp,w,c
  7082  002A82  B0D8               	btfsc	status,0,c
  7083  002A84  D00F               	goto	l3273
  7084  002A86                     u3490:
  7085  002A86  FFFF               	dw	65535	; assembler added errata NOP
  7086  002A88  0E00               	movlw	0
  7087  002A8A  6E3A               	movwf	___fldiv@new_exp+1,c
  7088  002A8C  0E00               	movlw	0
  7089  002A8E  6E39               	movwf	___fldiv@new_exp,c
  7090  002A90  0E00               	movlw	0
  7091  002A92  6E28               	movwf	___fldiv@b,c
  7092  002A94  0E00               	movlw	0
  7093  002A96  6E29               	movwf	___fldiv@b+1,c
  7094  002A98  0E00               	movlw	0
  7095  002A9A  6E2A               	movwf	___fldiv@b+2,c
  7096  002A9C  0E00               	movlw	0
  7097  002A9E  6E2B               	movwf	___fldiv@b+3,c
  7098  002AA0  0E00               	movlw	0
  7099  002AA2  6E38               	movwf	___fldiv@sign,c
  7100  002AA4                     l3273:
  7101  002AA4  FFFF               	dw	65535	; assembler added errata NOP
  7102  002AA6  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  7103  002AAA  A03F               	btfss	___fldiv@bexp,0,c
  7104  002AAC  D002               	goto	l3279
  7105  002AAE  8E2A               	bsf	___fldiv@b+2,7,c
  7106  002AB0  D002               	goto	l3281
  7107  002AB2                     l3279:
  7108  002AB2  FFFF               	dw	65535	; assembler added errata NOP
  7109  002AB4  9E2A               	bcf	___fldiv@b+2,7,c
  7110  002AB6                     l3281:
  7111  002AB6  FFFF               	dw	65535	; assembler added errata NOP
  7112  002AB8  90D8               	bcf	status,0,c
  7113  002ABA  303F               	rrcf	___fldiv@bexp,w,c
  7114  002ABC  6E2B               	movwf	___fldiv@b+3,c
  7115  002ABE  D6FC               	goto	l3195
  7116  002AC0                     l843:
  7117  002AC0  FFFF               	dw	65535	; assembler added errata NOP
  7118  002AC2  0012               	return		;funcret
  7119  002AC4  FFFF               	dw	65535	; errata NOP
  7120  002AC6                     __end_of___fldiv:
  7121                           	opt callstack 0
  7122                           
  7123 ;; *************** function ___fladd *****************
  7124 ;; Defined at:
  7125 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  7126 ;; Parameters:    Size  Location     Type
  7127 ;;  b               4   52[COMRAM] unsigned char 
  7128 ;;  a               4   56[COMRAM] unsigned char 
  7129 ;; Auto vars:     Size  Location     Type
  7130 ;;  grs             1   67[COMRAM] unsigned char 
  7131 ;;  bexp            1   66[COMRAM] unsigned char 
  7132 ;;  aexp            1   65[COMRAM] unsigned char 
  7133 ;;  signs           1   64[COMRAM] unsigned char 
  7134 ;; Return value:  Size  Location     Type
  7135 ;;                  4   52[COMRAM] unsigned char 
  7136 ;; Registers used:
  7137 ;;		wreg, status,2, status,0
  7138 ;; Tracked objects:
  7139 ;;		On entry : 0/0
  7140 ;;		On exit  : 0/0
  7141 ;;		Unchanged: 0/0
  7142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7143 ;;      Params:         8       0       0       0       0       0       0
  7144 ;;      Locals:         4       0       0       0       0       0       0
  7145 ;;      Temps:          4       0       0       0       0       0       0
  7146 ;;      Totals:        16       0       0       0       0       0       0
  7147 ;;Total ram usage:       16 bytes
  7148 ;; Hardware stack levels used:    1
  7149 ;; This function calls:
  7150 ;;		Nothing
  7151 ;; This function is called by:
  7152 ;;		_get_temp
  7153 ;;		_sprintf
  7154 ;;		___flsub
  7155 ;; This function uses a non-reentrant model
  7156 ;;
  7157                           
  7158                           	psect	text30
  7159  002AC6                     __ptext30:
  7160                           	opt callstack 0
  7161  002AC6                     ___fladd:
  7162                           	opt callstack 0
  7163  002AC6  FFFF               	dw	65535	; assembler added errata NOP
  7164                           
  7165                           ;incstack = 0
  7166  002AC8  5038               	movf	___fladd@b+3,w,c
  7167  002ACA  0B80               	andlw	128
  7168  002ACC  6E41               	movwf	___fladd@signs,c
  7169  002ACE  5038               	movf	___fladd@b+3,w,c
  7170  002AD0  2438               	addwf	___fladd@b+3,w,c
  7171  002AD2  6E43               	movwf	___fladd@bexp,c
  7172  002AD4  BE37               	btfsc	___fladd@b+2,7,c
  7173  002AD6  8043               	bsf	___fladd@bexp,0,c
  7174  002AD8  5043               	movf	___fladd@bexp,w,c
  7175  002ADA  B4D8               	btfsc	status,2,c
  7176  002ADC  D00E               	goto	l2475
  7177  002ADE  2843               	incf	___fladd@bexp,w,c
  7178  002AE0  A4D8               	btfss	status,2,c
  7179  002AE2  D008               	goto	l2471
  7180  002AE4  0E00               	movlw	0
  7181  002AE6  6E35               	movwf	___fladd@b,c
  7182  002AE8  0E00               	movlw	0
  7183  002AEA  6E36               	movwf	___fladd@b+1,c
  7184  002AEC  0E00               	movlw	0
  7185  002AEE  6E37               	movwf	___fladd@b+2,c
  7186  002AF0  0E00               	movlw	0
  7187  002AF2  6E38               	movwf	___fladd@b+3,c
  7188  002AF4                     l2471:
  7189  002AF4  FFFF               	dw	65535	; assembler added errata NOP
  7190  002AF6  8E37               	bsf	___fladd@b+2,7,c
  7191  002AF8  D007               	goto	L13
  7192  002AFA                     l2475:
  7193  002AFA  FFFF               	dw	65535	; assembler added errata NOP
  7194  002AFC  0E00               	movlw	0
  7195  002AFE  6E35               	movwf	___fladd@b,c
  7196  002B00  0E00               	movlw	0
  7197  002B02  6E36               	movwf	___fladd@b+1,c
  7198  002B04  0E00               	movlw	0
  7199  002B06  6E37               	movwf	___fladd@b+2,c
  7200  002B08                     L13:
  7201  002B08  FFFF               	dw	65535	; assembler added errata NOP
  7202  002B0A  0E00               	movlw	0
  7203  002B0C  6E38               	movwf	___fladd@b+3,c
  7204  002B0E  503C               	movf	___fladd@a+3,w,c
  7205  002B10  0B80               	andlw	128
  7206  002B12  6E42               	movwf	___fladd@aexp,c
  7207  002B14  5041               	movf	___fladd@signs,w,c
  7208  002B16  1842               	xorwf	___fladd@aexp,w,c
  7209  002B18  A4D8               	btfss	status,2,c
  7210  002B1A  8C41               	bsf	___fladd@signs,6,c
  7211  002B1C  503C               	movf	___fladd@a+3,w,c
  7212  002B1E  243C               	addwf	___fladd@a+3,w,c
  7213  002B20  6E42               	movwf	___fladd@aexp,c
  7214  002B22  BE3B               	btfsc	___fladd@a+2,7,c
  7215  002B24  8042               	bsf	___fladd@aexp,0,c
  7216  002B26  5042               	movf	___fladd@aexp,w,c
  7217  002B28  B4D8               	btfsc	status,2,c
  7218  002B2A  D00E               	goto	l2499
  7219  002B2C  2842               	incf	___fladd@aexp,w,c
  7220  002B2E  A4D8               	btfss	status,2,c
  7221  002B30  D008               	goto	l2495
  7222  002B32  0E00               	movlw	0
  7223  002B34  6E39               	movwf	___fladd@a,c
  7224  002B36  0E00               	movlw	0
  7225  002B38  6E3A               	movwf	___fladd@a+1,c
  7226  002B3A  0E00               	movlw	0
  7227  002B3C  6E3B               	movwf	___fladd@a+2,c
  7228  002B3E  0E00               	movlw	0
  7229  002B40  6E3C               	movwf	___fladd@a+3,c
  7230  002B42                     l2495:
  7231  002B42  FFFF               	dw	65535	; assembler added errata NOP
  7232  002B44  8E3B               	bsf	___fladd@a+2,7,c
  7233  002B46  D007               	goto	L14
  7234  002B48                     l2499:
  7235  002B48  FFFF               	dw	65535	; assembler added errata NOP
  7236  002B4A  0E00               	movlw	0
  7237  002B4C  6E39               	movwf	___fladd@a,c
  7238  002B4E  0E00               	movlw	0
  7239  002B50  6E3A               	movwf	___fladd@a+1,c
  7240  002B52  0E00               	movlw	0
  7241  002B54  6E3B               	movwf	___fladd@a+2,c
  7242  002B56                     L14:
  7243  002B56  FFFF               	dw	65535	; assembler added errata NOP
  7244  002B58  0E00               	movlw	0
  7245  002B5A  6E3C               	movwf	___fladd@a+3,c
  7246  002B5C  5043               	movf	___fladd@bexp,w,c
  7247  002B5E  5C42               	subwf	___fladd@aexp,w,c
  7248  002B60  B0D8               	btfsc	status,0,c
  7249  002B62  D023               	goto	l2537
  7250  002B64  AC41               	btfss	___fladd@signs,6,c
  7251  002B66  D002               	goto	l2507
  7252  002B68  0E80               	movlw	128
  7253  002B6A  1A41               	xorwf	___fladd@signs,f,c
  7254  002B6C                     l2507:
  7255  002B6C  FFFF               	dw	65535	; assembler added errata NOP
  7256  002B6E  C043  F044         	movff	___fladd@bexp,___fladd@grs
  7257  002B72  C042  F043         	movff	___fladd@aexp,___fladd@bexp
  7258  002B76  C044  F042         	movff	___fladd@grs,___fladd@aexp
  7259  002B7A  C035  F044         	movff	___fladd@b,___fladd@grs
  7260  002B7E  C039  F035         	movff	___fladd@a,___fladd@b
  7261  002B82  C044  F039         	movff	___fladd@grs,___fladd@a
  7262  002B86  C036  F044         	movff	___fladd@b+1,___fladd@grs
  7263  002B8A  C03A  F036         	movff	___fladd@a+1,___fladd@b+1
  7264  002B8E  C044  F03A         	movff	___fladd@grs,___fladd@a+1
  7265  002B92  C037  F044         	movff	___fladd@b+2,___fladd@grs
  7266  002B96  C03B  F037         	movff	___fladd@a+2,___fladd@b+2
  7267  002B9A  C044  F03B         	movff	___fladd@grs,___fladd@a+2
  7268  002B9E  C038  F044         	movff	___fladd@b+3,___fladd@grs
  7269  002BA2  C03C  F038         	movff	___fladd@a+3,___fladd@b+3
  7270  002BA6  C044  F03C         	movff	___fladd@grs,___fladd@a+3
  7271  002BAA                     l2537:
  7272  002BAA  FFFF               	dw	65535	; assembler added errata NOP
  7273  002BAC  0E00               	movlw	0
  7274  002BAE  6E44               	movwf	___fladd@grs,c
  7275  002BB0  5043               	movf	___fladd@bexp,w,c
  7276  002BB2  C042  F03D         	movff	___fladd@aexp,??___fladd
  7277  002BB6  6A3E               	clrf	(??___fladd+1)& (0+255),c
  7278  002BB8  5E3D               	subwf	??___fladd,f,c
  7279  002BBA  0E00               	movlw	0
  7280  002BBC  5A3E               	subwfb	??___fladd+1,f,c
  7281  002BBE  BE3E               	btfsc	??___fladd+1,7,c
  7282  002BC0  D031               	goto	l790
  7283  002BC2  503E               	movf	??___fladd+1,w,c
  7284  002BC4  E104               	bnz	u2310
  7285  002BC6  0E1A               	movlw	26
  7286  002BC8  5C3D               	subwf	??___fladd,w,c
  7287  002BCA  A0D8               	btfss	status,0,c
  7288  002BCC  D02B               	goto	l790
  7289  002BCE                     u2310:
  7290  002BCE  5035               	movf	___fladd@b,w,c
  7291  002BD0  1036               	iorwf	___fladd@b+1,w,c
  7292  002BD2  1037               	iorwf	___fladd@b+2,w,c
  7293  002BD4  1038               	iorwf	___fladd@b+3,w,c
  7294  002BD6  B4D8               	btfsc	status,2,c
  7295  002BD8  D002               	goto	u2320
  7296  002BDA  0E01               	movlw	1
  7297  002BDC  D002               	goto	u2330
  7298  002BDE                     u2320:
  7299  002BDE  FFFF               	dw	65535	; assembler added errata NOP
  7300  002BE0  0E00               	movlw	0
  7301  002BE2                     u2330:
  7302  002BE2  FFFF               	dw	65535	; assembler added errata NOP
  7303  002BE4  6E44               	movwf	___fladd@grs,c
  7304  002BE6  0E00               	movlw	0
  7305  002BE8  6E35               	movwf	___fladd@b,c
  7306  002BEA  0E00               	movlw	0
  7307  002BEC  6E36               	movwf	___fladd@b+1,c
  7308  002BEE  0E00               	movlw	0
  7309  002BF0  6E37               	movwf	___fladd@b+2,c
  7310  002BF2  0E00               	movlw	0
  7311  002BF4  6E38               	movwf	___fladd@b+3,c
  7312  002BF6  C042  F043         	movff	___fladd@aexp,___fladd@bexp
  7313  002BFA  D019               	goto	u2360
  7314  002BFC                     l791:
  7315  002BFC  FFFF               	dw	65535	; assembler added errata NOP
  7316  002BFE  A044               	btfss	___fladd@grs,0,c
  7317  002C00  D005               	goto	l2549
  7318  002C02  90D8               	bcf	status,0,c
  7319  002C04  3044               	rrcf	___fladd@grs,w,c
  7320  002C06  0901               	iorlw	1
  7321  002C08  6E44               	movwf	___fladd@grs,c
  7322  002C0A  D003               	goto	l2551
  7323  002C0C                     l2549:
  7324  002C0C  FFFF               	dw	65535	; assembler added errata NOP
  7325  002C0E  90D8               	bcf	status,0,c
  7326  002C10  3244               	rrcf	___fladd@grs,f,c
  7327  002C12                     l2551:
  7328  002C12  FFFF               	dw	65535	; assembler added errata NOP
  7329  002C14  B035               	btfsc	___fladd@b,0,c
  7330  002C16  8E44               	bsf	___fladd@grs,7,c
  7331  002C18  3438               	rlcf	___fladd@b+3,w,c
  7332  002C1A  3238               	rrcf	___fladd@b+3,f,c
  7333  002C1C  3237               	rrcf	___fladd@b+2,f,c
  7334  002C1E  3236               	rrcf	___fladd@b+1,f,c
  7335  002C20  3235               	rrcf	___fladd@b,f,c
  7336  002C22  2A43               	incf	___fladd@bexp,f,c
  7337  002C24                     l790:
  7338  002C24  FFFF               	dw	65535	; assembler added errata NOP
  7339  002C26  5042               	movf	___fladd@aexp,w,c
  7340  002C28  5C43               	subwf	___fladd@bexp,w,c
  7341  002C2A  A0D8               	btfss	status,0,c
  7342  002C2C  D7E7               	goto	l791
  7343  002C2E                     u2360:
  7344  002C2E  FFFF               	dw	65535	; assembler added errata NOP
  7345  002C30  BC41               	btfsc	___fladd@signs,6,c
  7346  002C32  D021               	goto	l2583
  7347  002C34  5043               	movf	___fladd@bexp,w,c
  7348  002C36  B4D8               	btfsc	status,2,c
  7349  002C38  D065               	goto	u2450
  7350  002C3A  5039               	movf	___fladd@a,w,c
  7351  002C3C  2635               	addwf	___fladd@b,f,c
  7352  002C3E  503A               	movf	___fladd@a+1,w,c
  7353  002C40  2236               	addwfc	___fladd@b+1,f,c
  7354  002C42  503B               	movf	___fladd@a+2,w,c
  7355  002C44  2237               	addwfc	___fladd@b+2,f,c
  7356  002C46  503C               	movf	___fladd@a+3,w,c
  7357  002C48  2238               	addwfc	___fladd@b+3,f,c
  7358  002C4A  A038               	btfss	___fladd@b+3,0,c
  7359  002C4C  D07B               	goto	u2490
  7360  002C4E  A044               	btfss	___fladd@grs,0,c
  7361  002C50  D005               	goto	l2573
  7362  002C52  90D8               	bcf	status,0,c
  7363  002C54  3044               	rrcf	___fladd@grs,w,c
  7364  002C56  0901               	iorlw	1
  7365  002C58  6E44               	movwf	___fladd@grs,c
  7366  002C5A  D003               	goto	l2575
  7367  002C5C                     l2573:
  7368  002C5C  FFFF               	dw	65535	; assembler added errata NOP
  7369  002C5E  90D8               	bcf	status,0,c
  7370  002C60  3244               	rrcf	___fladd@grs,f,c
  7371  002C62                     l2575:
  7372  002C62  FFFF               	dw	65535	; assembler added errata NOP
  7373  002C64  B035               	btfsc	___fladd@b,0,c
  7374  002C66  8E44               	bsf	___fladd@grs,7,c
  7375  002C68  3438               	rlcf	___fladd@b+3,w,c
  7376  002C6A  3238               	rrcf	___fladd@b+3,f,c
  7377  002C6C  3237               	rrcf	___fladd@b+2,f,c
  7378  002C6E  3236               	rrcf	___fladd@b+1,f,c
  7379  002C70  3235               	rrcf	___fladd@b,f,c
  7380  002C72  2A43               	incf	___fladd@bexp,f,c
  7381  002C74  D067               	goto	u2490
  7382  002C76                     l2583:
  7383  002C76  FFFF               	dw	65535	; assembler added errata NOP
  7384  002C78  5039               	movf	___fladd@a,w,c
  7385  002C7A  5C35               	subwf	___fladd@b,w,c
  7386  002C7C  503A               	movf	___fladd@a+1,w,c
  7387  002C7E  5836               	subwfb	___fladd@b+1,w,c
  7388  002C80  503B               	movf	___fladd@a+2,w,c
  7389  002C82  5837               	subwfb	___fladd@b+2,w,c
  7390  002C84  5038               	movf	___fladd@b+3,w,c
  7391  002C86  0A80               	xorlw	128
  7392  002C88  6E3D               	movwf	??___fladd& (0+255),c
  7393  002C8A  503C               	movf	___fladd@a+3,w,c
  7394  002C8C  0A80               	xorlw	128
  7395  002C8E  583D               	subwfb	??___fladd& (0+255),w,c
  7396  002C90  B0D8               	btfsc	status,0,c
  7397  002C92  D025               	goto	l2593
  7398  002C94  5035               	movf	___fladd@b,w,c
  7399  002C96  5C39               	subwf	___fladd@a,w,c
  7400  002C98  6E3D               	movwf	??___fladd& (0+255),c
  7401  002C9A  5036               	movf	___fladd@b+1,w,c
  7402  002C9C  583A               	subwfb	___fladd@a+1,w,c
  7403  002C9E  6E3E               	movwf	(??___fladd+1)& (0+255),c
  7404  002CA0  5037               	movf	___fladd@b+2,w,c
  7405  002CA2  583B               	subwfb	___fladd@a+2,w,c
  7406  002CA4  6E3F               	movwf	(??___fladd+2)& (0+255),c
  7407  002CA6  5038               	movf	___fladd@b+3,w,c
  7408  002CA8  583C               	subwfb	___fladd@a+3,w,c
  7409  002CAA  6E40               	movwf	(??___fladd+3)& (0+255),c
  7410  002CAC  0EFF               	movlw	255
  7411  002CAE  243D               	addwf	??___fladd,w,c
  7412  002CB0  6E35               	movwf	___fladd@b,c
  7413  002CB2  0EFF               	movlw	255
  7414  002CB4  203E               	addwfc	??___fladd+1,w,c
  7415  002CB6  6E36               	movwf	___fladd@b+1,c
  7416  002CB8  0EFF               	movlw	255
  7417  002CBA  203F               	addwfc	??___fladd+2,w,c
  7418  002CBC  6E37               	movwf	___fladd@b+2,c
  7419  002CBE  0EFF               	movlw	255
  7420  002CC0  2040               	addwfc	??___fladd+3,w,c
  7421  002CC2  6E38               	movwf	___fladd@b+3,c
  7422  002CC4  0E80               	movlw	128
  7423  002CC6  1A41               	xorwf	___fladd@signs,f,c
  7424  002CC8  6C44               	negf	___fladd@grs,c
  7425  002CCA  5044               	movf	___fladd@grs,w,c
  7426  002CCC  A4D8               	btfss	status,2,c
  7427  002CCE  D010               	goto	l806
  7428  002CD0  0E01               	movlw	1
  7429  002CD2  2635               	addwf	___fladd@b,f,c
  7430  002CD4  0E00               	movlw	0
  7431  002CD6  2236               	addwfc	___fladd@b+1,f,c
  7432  002CD8  2237               	addwfc	___fladd@b+2,f,c
  7433  002CDA  2238               	addwfc	___fladd@b+3,f,c
  7434  002CDC  D009               	goto	l806
  7435  002CDE                     l2593:
  7436  002CDE  FFFF               	dw	65535	; assembler added errata NOP
  7437  002CE0  5039               	movf	___fladd@a,w,c
  7438  002CE2  5E35               	subwf	___fladd@b,f,c
  7439  002CE4  503A               	movf	___fladd@a+1,w,c
  7440  002CE6  5A36               	subwfb	___fladd@b+1,f,c
  7441  002CE8  503B               	movf	___fladd@a+2,w,c
  7442  002CEA  5A37               	subwfb	___fladd@b+2,f,c
  7443  002CEC  503C               	movf	___fladd@a+3,w,c
  7444  002CEE  5A38               	subwfb	___fladd@b+3,f,c
  7445  002CF0                     l806:
  7446  002CF0  FFFF               	dw	65535	; assembler added errata NOP
  7447  002CF2  5035               	movf	___fladd@b,w,c
  7448  002CF4  1036               	iorwf	___fladd@b+1,w,c
  7449  002CF6  1037               	iorwf	___fladd@b+2,w,c
  7450  002CF8  1038               	iorwf	___fladd@b+3,w,c
  7451  002CFA  A4D8               	btfss	status,2,c
  7452  002CFC  D020               	goto	l2617
  7453  002CFE  5044               	movf	___fladd@grs,w,c
  7454  002D00  A4D8               	btfss	status,2,c
  7455  002D02  D01D               	goto	l2617
  7456  002D04                     u2450:
  7457  002D04  FFFF               	dw	65535	; assembler added errata NOP
  7458  002D06  0E00               	movlw	0
  7459  002D08  6E35               	movwf	?___fladd,c
  7460  002D0A  0E00               	movlw	0
  7461  002D0C  6E36               	movwf	?___fladd+1,c
  7462  002D0E  0E00               	movlw	0
  7463  002D10  6E37               	movwf	?___fladd+2,c
  7464  002D12  0E00               	movlw	0
  7465  002D14  6E38               	movwf	?___fladd+3,c
  7466  002D16  D076               	goto	l798
  7467  002D18                     l2601:
  7468  002D18  FFFF               	dw	65535	; assembler added errata NOP
  7469  002D1A  90D8               	bcf	status,0,c
  7470  002D1C  3635               	rlcf	___fladd@b,f,c
  7471  002D1E  3636               	rlcf	___fladd@b+1,f,c
  7472  002D20  3637               	rlcf	___fladd@b+2,f,c
  7473  002D22  3638               	rlcf	___fladd@b+3,f,c
  7474  002D24  BE44               	btfsc	___fladd@grs,7,c
  7475  002D26  8035               	bsf	___fladd@b,0,c
  7476  002D28  A044               	btfss	___fladd@grs,0,c
  7477  002D2A  D002               	goto	l2611
  7478  002D2C  80D8               	bsf	status,0,c
  7479  002D2E  D002               	goto	L15
  7480  002D30                     l2611:
  7481  002D30  FFFF               	dw	65535	; assembler added errata NOP
  7482  002D32  90D8               	bcf	status,0,c
  7483  002D34                     L15:
  7484  002D34  FFFF               	dw	65535	; assembler added errata NOP
  7485  002D36  3644               	rlcf	___fladd@grs,f,c
  7486  002D38  5043               	movf	___fladd@bexp,w,c
  7487  002D3A  A4D8               	btfss	status,2,c
  7488  002D3C  0643               	decf	___fladd@bexp,f,c
  7489  002D3E                     l2617:
  7490  002D3E  FFFF               	dw	65535	; assembler added errata NOP
  7491  002D40  AE37               	btfss	___fladd@b+2,7,c
  7492  002D42  D7EA               	goto	l2601
  7493  002D44                     u2490:
  7494  002D44  FFFF               	dw	65535	; assembler added errata NOP
  7495  002D46  0E00               	movlw	0
  7496  002D48  6E42               	movwf	___fladd@aexp,c
  7497  002D4A  AE44               	btfss	___fladd@grs,7,c
  7498  002D4C  D00D               	goto	l815
  7499  002D4E  C044  F03D         	movff	___fladd@grs,??___fladd
  7500  002D52  0E7F               	movlw	127
  7501  002D54  163D               	andwf	??___fladd,f,c
  7502  002D56  B4D8               	btfsc	status,2,c
  7503  002D58  D004               	goto	l816
  7504  002D5A                     u2510:
  7505  002D5A  FFFF               	dw	65535	; assembler added errata NOP
  7506  002D5C  0E01               	movlw	1
  7507  002D5E  6E42               	movwf	___fladd@aexp,c
  7508  002D60  D003               	goto	l815
  7509  002D62                     l816:
  7510  002D62  FFFF               	dw	65535	; assembler added errata NOP
  7511  002D64  B035               	btfsc	___fladd@b,0,c
  7512  002D66  D7F9               	goto	u2510
  7513  002D68                     l815:
  7514  002D68  FFFF               	dw	65535	; assembler added errata NOP
  7515  002D6A  5042               	movf	___fladd@aexp,w,c
  7516  002D6C  B4D8               	btfsc	status,2,c
  7517  002D6E  D020               	goto	l2637
  7518  002D70  0E01               	movlw	1
  7519  002D72  2635               	addwf	___fladd@b,f,c
  7520  002D74  0E00               	movlw	0
  7521  002D76  2236               	addwfc	___fladd@b+1,f,c
  7522  002D78  2237               	addwfc	___fladd@b+2,f,c
  7523  002D7A  2238               	addwfc	___fladd@b+3,f,c
  7524  002D7C  A038               	btfss	___fladd@b+3,0,c
  7525  002D7E  D018               	goto	l2637
  7526  002D80  C035  F03D         	movff	___fladd@b,??___fladd
  7527  002D84  C036  F03E         	movff	___fladd@b+1,??___fladd+1
  7528  002D88  C037  F03F         	movff	___fladd@b+2,??___fladd+2
  7529  002D8C  C038  F040         	movff	___fladd@b+3,??___fladd+3
  7530  002D90  3440               	rlcf	??___fladd+3,w,c
  7531  002D92  3240               	rrcf	??___fladd+3,f,c
  7532  002D94  323F               	rrcf	??___fladd+2,f,c
  7533  002D96  323E               	rrcf	??___fladd+1,f,c
  7534  002D98  323D               	rrcf	??___fladd,f,c
  7535  002D9A  C03D  F035         	movff	??___fladd,___fladd@b
  7536  002D9E  C03E  F036         	movff	??___fladd+1,___fladd@b+1
  7537  002DA2  C03F  F037         	movff	??___fladd+2,___fladd@b+2
  7538  002DA6  C040  F038         	movff	??___fladd+3,___fladd@b+3
  7539  002DAA  2843               	incf	___fladd@bexp,w,c
  7540  002DAC  A4D8               	btfss	status,2,c
  7541  002DAE  2A43               	incf	___fladd@bexp,f,c
  7542  002DB0                     l2637:
  7543  002DB0  FFFF               	dw	65535	; assembler added errata NOP
  7544  002DB2  2843               	incf	___fladd@bexp,w,c
  7545  002DB4  B4D8               	btfsc	status,2,c
  7546  002DB6  D003               	goto	u2570
  7547  002DB8  5043               	movf	___fladd@bexp,w,c
  7548  002DBA  A4D8               	btfss	status,2,c
  7549  002DBC  D00E               	goto	l2645
  7550  002DBE                     u2570:
  7551  002DBE  FFFF               	dw	65535	; assembler added errata NOP
  7552  002DC0  0E00               	movlw	0
  7553  002DC2  6E35               	movwf	___fladd@b,c
  7554  002DC4  0E00               	movlw	0
  7555  002DC6  6E36               	movwf	___fladd@b+1,c
  7556  002DC8  0E00               	movlw	0
  7557  002DCA  6E37               	movwf	___fladd@b+2,c
  7558  002DCC  0E00               	movlw	0
  7559  002DCE  6E38               	movwf	___fladd@b+3,c
  7560  002DD0  5043               	movf	___fladd@bexp,w,c
  7561  002DD2  A4D8               	btfss	status,2,c
  7562  002DD4  D002               	goto	l2645
  7563  002DD6  0E00               	movlw	0
  7564  002DD8  6E41               	movwf	___fladd@signs,c
  7565  002DDA                     l2645:
  7566  002DDA  FFFF               	dw	65535	; assembler added errata NOP
  7567  002DDC  A043               	btfss	___fladd@bexp,0,c
  7568  002DDE  D002               	goto	l2649
  7569  002DE0  8E37               	bsf	___fladd@b+2,7,c
  7570  002DE2  D002               	goto	l2651
  7571  002DE4                     l2649:
  7572  002DE4  FFFF               	dw	65535	; assembler added errata NOP
  7573  002DE6  9E37               	bcf	___fladd@b+2,7,c
  7574  002DE8                     l2651:
  7575  002DE8  FFFF               	dw	65535	; assembler added errata NOP
  7576  002DEA  90D8               	bcf	status,0,c
  7577  002DEC  3043               	rrcf	___fladd@bexp,w,c
  7578  002DEE  6E38               	movwf	___fladd@b+3,c
  7579  002DF0  BE41               	btfsc	___fladd@signs,7,c
  7580  002DF2  8E38               	bsf	___fladd@b+3,7,c
  7581  002DF4  C035  F035         	movff	___fladd@b,?___fladd
  7582  002DF8  C036  F036         	movff	___fladd@b+1,?___fladd+1
  7583  002DFC  C037  F037         	movff	___fladd@b+2,?___fladd+2
  7584  002E00  C038  F038         	movff	___fladd@b+3,?___fladd+3
  7585  002E04                     l798:
  7586  002E04  FFFF               	dw	65535	; assembler added errata NOP
  7587  002E06  0012               	return		;funcret
  7588  002E08  FFFF               	dw	65535	; errata NOP
  7589  002E0A                     __end_of___fladd:
  7590                           	opt callstack 0
  7591                           
  7592                           	psect	rparam
  7593  0000                     tosu	equ	0xFFF
  7594                           tosh	equ	0xFFE
  7595                           tosl	equ	0xFFD
  7596                           stkptr	equ	0xFFC
  7597                           pclatu	equ	0xFFB
  7598                           pclath	equ	0xFFA
  7599                           pcl	equ	0xFF9
  7600                           tblptru	equ	0xFF8
  7601                           tblptrh	equ	0xFF7
  7602                           tblptrl	equ	0xFF6
  7603                           tablat	equ	0xFF5
  7604                           prodh	equ	0xFF4
  7605                           prodl	equ	0xFF3
  7606                           indf0	equ	0xFEF
  7607                           postinc0	equ	0xFEE
  7608                           postdec0	equ	0xFED
  7609                           preinc0	equ	0xFEC
  7610                           plusw0	equ	0xFEB
  7611                           fsr0h	equ	0xFEA
  7612                           fsr0l	equ	0xFE9
  7613                           wreg	equ	0xFE8
  7614                           indf1	equ	0xFE7
  7615                           postinc1	equ	0xFE6
  7616                           postdec1	equ	0xFE5
  7617                           preinc1	equ	0xFE4
  7618                           plusw1	equ	0xFE3
  7619                           fsr1h	equ	0xFE2
  7620                           fsr1l	equ	0xFE1
  7621                           bsr	equ	0xFE0
  7622                           indf2	equ	0xFDF
  7623                           postinc2	equ	0xFDE
  7624                           postdec2	equ	0xFDD
  7625                           preinc2	equ	0xFDC
  7626                           plusw2	equ	0xFDB
  7627                           fsr2h	equ	0xFDA
  7628                           fsr2l	equ	0xFD9
  7629                           status	equ	0xFD8


Data Sizes:
    Strings     165
    Constant    144
    Data        0
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    117     117
    BANK0           128     33      53
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_10(CODE[17]), STR_9(CODE[16]), STR_8(CODE[17]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[15]), main@message(BANK0[20]), STR_2(CODE[14]), 
		 -> STR_1(CODE[14]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_10(CODE[17]), STR_9(CODE[16]), STR_8(CODE[17]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[15]), main@message(BANK0[20]), STR_2(CODE[14]), 
		 -> STR_1(CODE[14]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_4(CODE[19]), STR_3(CODE[19]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> main@message(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    print_message_onLCD@message	PTR unsigned char  size(2) Largest target is 20
		 -> STR_10(CODE[17]), STR_9(CODE[16]), STR_8(CODE[17]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[15]), main@message(BANK0[20]), STR_2(CODE[14]), 
		 -> STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___lwmod
    ___fltol->_scale
    ___flsub->___fladd
    _print_message_onLCD->_strlen
    _init_LCD->_R_I
    _get_voltage->___fldiv
    _get_temp->___fladd
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___fladd->_fround

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                35    35      0   50221
                                            115 COMRAM     2     2      0
                                              0 BANK0     33    33      0
                                _R_I
                             ___flge
                           _get_temp
                        _get_voltage
                           _init_LCD
                     _initial_config
                _print_message_onLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             45    37      8   32367
                                             76 COMRAM    39    31      8
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     5      4    7039
                                             39 COMRAM     9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1208
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1364
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13     9      4    5502
                                             39 COMRAM    13     9      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     615
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              0 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          14     6      8     455
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     615
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     466
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             48 COMRAM    10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3041
                                             68 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1246
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _print_message_onLCD                                  5     3      2     962
                                              4 COMRAM     5     3      2
                                _R_D
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _R_D                                                  1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initial_config                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_LCD                                             1     1      0      22
                                              1 COMRAM     1     1      0
                                _R_I
 ---------------------------------------------------------------------------------
 (2) _R_I                                                  1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _get_voltage                                          4     0      4    6223
                                             64 COMRAM     4     0      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _get_temp                                             8     4      4    9009
                                             68 COMRAM     8     4      4
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    4024
                                             14 COMRAM    25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1551
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2718
                                             52 COMRAM    16     8      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _R_I
   ___flge
   _get_temp
     ___fladd
       _fround (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fldiv
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _get_voltage
     ___fldiv
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _init_LCD
     _R_I
   _initial_config
   _print_message_onLCD
     _R_D
     _strlen
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     21      35       5       41.4%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     75      75       1       92.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AA      15        0.0%
DATA                 0      0      AA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Apr 03 18:36:23 2020

                                                     ___fldiv@aexp 0040  
                                                     ___fldiv@bexp 003F  
                                                     ___fldiv@sign 0038  
                                                               l68 2344  
                                                     ___awdiv@sign 000C  
                                                     ?_get_voltage 0041  
                                              ___wmul@multiplicand 0003  
                                                      __CFG_OSC$XT 000000  
                                                              l107 1F10  
                                                              l206 3CAC  
                                                              l135 3596  
                                                              l511 1C12  
                                                              l266 1B6C  
                                                              l602 2166  
                                                              l604 20DC  
                                                              l517 1E20  
                                                              l605 2106  
                                                              l518 1E5E  
                                                              l545 1D7E  
                                                              l493 2050  
                                                              l806 2CF0  
                                                              l815 2D68  
                                                              l816 2D62  
                                                              l752 1918  
                                                              l681 1A58  
                                                              l762 1860  
                                                              l843 2AC0  
                                                              l923 2236  
                                                              l916 21AC  
                                                              l845 2992  
                                                              l790 2C24  
                                                              l791 2BFC  
                                                              l919 22C2  
                                                              l856 2A0A  
                                                              l857 2A04  
                                                              _LC3 007C5B  
                                                              _LC4 007C5C  
                                                              l875 2E96  
                                                              l892 314E  
                                                              l884 30C0  
                                                              l885 30BA  
                                                              l798 2E04  
                                                              l879 3186  
                                                              _R_D 16A8  
                                                              _R_I 168C  
                                                     __CFG_BOR$OFF 000000  
                                                     ___awmod@sign 0006  
                                                              wreg 000FE8  
                                                 ??_initial_config 0001  
                                                     ___flmul@aexp 0020  
                                                     ___flmul@bexp 0021  
                                                      _sprintf$816 0059  
                                                     ___flmul@sign 001B  
                                                     ___flmul@temp 0026  
                                                     ___flmul@prod 0022  
                                                     __CFG_LVP$OFF 000000  
                                                             ?_R_D 0001  
                                                             ?_R_I 0001  
                                                     ___fltol@exp1 003A  
                                                     __CFG_WDT$OFF 000000  
                                                             l3003 16DC  
                                                             l3013 2086  
                                                             l3201 28D0  
                                                             l3121 2036  
                                                             l3113 201E  
                                                             l3109 200C  
                                                             l3061 214C  
                                                             l3053 2134  
                                                             l3303 1BEE  
                                                             l3135 1B16  
                                                             l3119 2028  
                                                             l2601 2D18  
                                                             l3233 298E  
                                                             l3209 28EA  
                                                             l3137 1B24  
                                                             l3049 2122  
                                                             l2611 2D30  
                                                             l2507 2B6C  
                                                             l3227 2966  
                                                             l3219 293C  
                                                             l3163 2834  
                                                             l3307 1C0E  
                                                             l3323 1E08  
                                                             l3315 1DBA  
                                                             l3147 1B5C  
                                                             l3059 213E  
                                                             l3245 29CA  
                                                             l2701 2EB8  
                                                             l3413 21DE  
                                                             l3069 1F6C  
                                                             l2551 2C12  
                                                             l2471 2AF4  
                                                             l3239 29AA  
                                                             l3183 287A  
                                                             l3167 283A  
                                                             l3415 21E6  
                                                             l3407 21BE  
                                                             l3319 1DF0  
                                                             l3503 36A2  
                                                             l2617 2D3E  
                                                             l2537 2BAA  
                                                             l3281 2AB6  
                                                             l3273 2AA4  
                                                             l3265 2A50  
                                                             l3425 225E  
                                                             l3417 21F4  
                                                             l3329 1E5A  
                                                             l3337 1730  
                                                             l3097 1FEE  
                                                             l3089 1FBC  
                                                             l3513 3704  
                                                             l2651 2DE8  
                                                             l2475 2AFA  
                                                             l3195 28B8  
                                                             l3187 2880  
                                                             l3443 22B0  
                                                             l3427 226C  
                                                             l3419 221C  
                                                             l3363 1D22  
                                                             l3347 1CD2  
                                                             l2811 1C58  
                                                             l3611 3B04  
                                                             l3507 36DC  
                                                             l2645 2DDA  
                                                             l2637 2DB0  
                                                             l2573 2C5C  
                                                             l2549 2C0C  
                                                             l3269 2A76  
                                                             l3381 1D6C  
                                                             l3373 1D3E  
                                                             l2813 1C62  
                                                             l2805 1C40  
                                                             l3525 374A  
                                                             l3517 370A  
                                                             l3509 36F6  
                                                             l2575 2C62  
                                                             l2583 2C76  
                                                             l2495 2B42  
                                                             l3279 2AB2  
                                                             l2743 3060  
                                                             l3463 1964  
                                                             l3375 1D4C  
                                                             l3367 1D34  
                                                             l3391 1A1C  
                                                             l2831 1CA2  
                                                             l2823 1C86  
                                                             l3631 3B76  
                                                             l3623 3B4C  
                                                             l3615 3B20  
                                                             l3551 3820  
                                                             l3535 3798  
                                                             l3519 3734  
                                                             l3471 35AA  
                                                             l2649 2DE4  
                                                             l2593 2CDE  
                                                             l2673 2E38  
                                                             l2905 1854  
                                                             l3713 3EB2  
                                                             l3705 3E6E  
                                                             l2499 2B48  
                                                             l2691 2E7E  
                                                             l2675 2E3E  
                                                             l2931 17DE  
                                                             l3459 192E  
                                                             l3299 1BB8  
                                                             l2827 1C92  
                                                             l2851 1AA2  
                                                             l2843 1A84  
                                                             l3731 3F2A  
                                                             l3563 38CC  
                                                             l3483 35E6  
                                                             l3475 35C0  
                                                             l2773 3126  
                                                             l2749 3080  
                                                             l2693 2E84  
                                                             l2677 2E50  
                                                             l2933 17E4  
                                                             l3397 1A48  
                                                             l3389 1A0E  
                                                             l2853 1AAC  
                                                             l3741 3F5E  
                                                             l3733 3F34  
                                                             l3725 3EFA  
                                                             l3709 3E90  
                                                             l3661 3C84  
                                                             l3645 3BC8  
                                                             l3653 3C60  
                                                             l3629 3B64  
                                                             l3637 3B8E  
                                                             l3477 35CA  
                                                             l3821 2416  
                                                             l2863 1AD4  
                                                             l2847 1A92  
                                                             l3727 3F04  
                                                             l3719 3ED6  
                                                             l3655 3C6C  
                                                             l3575 3986  
                                                             l3567 391A  
                                                             l3559 389E  
                                                             l3479 35DE  
                                                             l3815 23CE  
                                                             l2785 3170  
                                                             l2769 3106  
                                                             l2953 27AA  
                                                             l3593 3A92  
                                                             l3489 361A  
                                                             l2947 26CC  
                                                             l2867 1AE4  
                                                             l2859 1AC8  
                                                             l3691 3E30  
                                                             l3675 3CD2  
                                                             l3667 3CB2  
                                                             l3579 39B2  
                                                             l3763 3FD0  
                                                             l2877 18DE  
                                                             l2973 335A  
                                                             l3749 3F80  
                                                             l3589 3A1A  
                                                             l3829 2466  
                                                             l2879 18E8  
                                                             l2799 1C2E  
                                                             l2991 3562  
                                                             l2967 32B8  
                                                             l3679 3D34  
                                                             l3599 3A98  
                                                             l3847 252E  
                                                             l3839 24DE  
                                                             l2889 190C  
                                                             l2897 182E  
                                                             l2985 34AE  
                                                             l2977 338A  
                                                             l3697 3E48  
                                                             l3689 3E24  
                                                             l3849 253C  
                                                             l3793 232A  
                                                             l2899 1838  
                                                             l3699 3E54  
                                                             STR_1 7FF0  
                                                             STR_2 7FE2  
                                                             STR_3 7F6C  
                                                             STR_4 7F59  
                                                             STR_5 7FD3  
                                                             STR_6 7FA1  
                                                             STR_7 7F90  
                                                             STR_8 7FB2  
                                                             STR_9 7FC3  
                                                             u3100 2072  
                                                             _LATA 000F89  
                                                             u2310 2BCE  
                                                             _LATB 000F8A  
                                                             u3111 2098  
                                                             _LATC 000F8B  
                                                             u2320 2BDE  
                                                             _LATD 000F8C  
                                                             _LATE 000F8D  
                                                             u2330 2BE2  
                                                             u4010 3AD8  
                                                             u4100 3C94  
                                                             u2510 2D5A  
                                                             u4110 3CA6  
                                                             u2360 2C2E  
                                                             u3240 203E  
                                                             u2450 2D04  
                                                             u3170 2154  
                                                             u3091 2068  
                                                             u3260 1B2A  
                                                             u3180 1F58  
                                                             u4310 3FEE  
                                                             u4070 3B9E  
                                                             u3440 29FC  
                                                             u3600 1CBE  
                                                             u2570 2DBE  
                                                             u2490 2D44  
                                                             u2730 30B2  
                                                             u3530 1C0A  
                                                             u3610 1CF4  
                                                             u4410 255C  
                                                             u2830 1C68  
                                                             u3615 1CE8  
                                                             u4351 2378  
                                                             u3480 2A60  
                                                             u2680 2EA4  
                                                             u3800 195E  
                                                             u4280 3F8A  
                                                             u3490 2A86  
                                                             u2770 3116  
                                                             u2690 3020  
                                                             u3650 1D54  
                                                             u2930 18EE  
                                                             u4290 3FAA  
                                                             u4507 18B6  
                                                             u2780 3136  
                                                             u4517 169C  
                                                             u4437 2300  
                                                             u2695 3014  
                                                             u3807 1954  
                                                             u4447 233C  
                                                             u3760 2278  
                                                             u3680 1A22  
                                                             u2960 183E  
                                                             u3840 367C  
                                                             u4457 2368  
                                                             u2890 1AB2  
                                                             u4467 2544  
                                                             u2980 1808  
                                                             u3940 38DE  
                                                             u4477 16B8  
                                                             u3950 392C  
                                                             u4487 1876  
                                                             u4497 188E  
                                                             u2987 17FE  
                                                             u3980 3984  
                                                     __CFG_PWRT$ON 000000  
                                                      main@message 0080  
                                                             _main 22C8  
                                                             fsr0h 000FEA  
                                                             indf0 000FEF  
                                                             fsr2h 000FDA  
                                                             fsr0l 000FE9  
                                                             indf2 000FDF  
                                                             fsr2l 000FD9  
                                                             prodh 000FF4  
                                                             prodl 000FF3  
                                                             start 0002  
                                                  ___fldiv@new_exp 0039  
                                                     ___param_bank 000000  
                                                            ??_R_D 0001  
                                                            ??_R_I 0001  
                                                    ___fltol@sign1 0039  
                                                  __end_of___fladd 2E0A  
                                                            ?_main 0001  
                                                  __end_of___fldiv 2AC6  
                                                  __end_of___awdiv 1CB0  
                                                  __end_of___flneg 1746  
                                                            STR_10 7F7F  
                                                  __end_of___awmod 1AF2  
                                                  __end_of___flmul 318C  
                                                  __end_of___flsub 17D2  
                                                  __end_of___fltol 1D84  
                                                  __end_of___lldiv 1B82  
                                                  ___awdiv@divisor 0009  
                                                  __end_of___llmod 1A6E  
                                                  __end_of___lwdiv 1926  
                                                  __end_of___lwmod 186E  
                                                  ___awdiv@counter 000B  
                                                            _PORTA 000F80  
                                                            _PORTB 000F81  
                                                            _PORTC 000F82  
                                                            _PORTD 000F83  
                                                            _PORTE 000F84  
                                                            _TRISA 000F92  
                                                            _TRISC 000F94  
                                                            _TRISD 000F95  
                                                  __end_of_dpowers 7F59  
                                                            _scale 318C  
                                                  __end_of_isdigit 16E8  
                                                            tablat 000FF5  
                                                            status 000FD8  
                                                  __end_of_sprintf 4000  
                                                  __initialization 1676  
                                                     __end_of_main 2562  
                                             print_message_onLCD@i 0009  
                                                           ??_main 0074  
                                                    __activetblptr 000002  
                                             __size_of__tdiv_to_l_ 0116  
                                                    get_temp@ac_in 0045  
                                                           _ADCON0 000FC2  
                                                           _ADCON1 000FC1  
                                                 ___llmod@dividend 0001  
                                                           ?_scale 0028  
                                                           _ADRESH 000FC4  
                                                           _ADRESL 000FC3  
                                                 ___awdiv@dividend 0007  
                                                 __end_of___xxtofl 22C8  
                                                 __end_of__powers_ 7EFD  
                                                 __end_of_get_temp 1F4A  
                                                           ___flge 1D84  
                                                           ___fleq 1B82  
                                                        ??___fladd 003D  
                                                           ___wmul 16E8  
                                                        ??___fldiv 0030  
                                                        ??___awdiv 000B  
                                                        ??___flneg 0005  
                                                        ??___awmod 0005  
                                                        ??___flmul 0017  
                                                        ??___flsub 004D  
                                                        ??___fltol 0035  
                                                        ??___lldiv 0009  
                                                        ??___llmod 0009  
                                                        ??___lwdiv 000A  
                                                 __end_of_init_LCD 18C6  
                                                        ??___lwmod 0005  
                                                           _fround 2562  
                                                           clear_0 167C  
                                                 ___awdiv@quotient 000D  
                                                  ___awmod@divisor 0003  
                                                  ___awmod@counter 0005  
                                                           main@in 0096  
                                                           _strlen 17D2  
                                             __size_of_get_voltage 0070  
                                                        ??_isdigit 0001  
                                                     __mediumconst 7EC8  
                                                           tblptrh 000FF7  
                                                           tblptrl 000FF6  
                                                           tblptru 000FF8  
                                                        ??_sprintf 0055  
                                                       ___flge@ff1 0001  
                                                       ___flge@ff2 0005  
                                                     ___xxtofl@arg 000B  
                                                     ___xxtofl@exp 000A  
                                                     ___xxtofl@val 0001  
                                                       ___fleq@ff1 0001  
                                                       ___fleq@ff2 0005  
                                                       __accesstop 0080  
                                          __end_of__initialization 1682  
                                                       ___flneg@f1 0001  
                                                    ___rparam_used 000001  
                                                       ___fltol@f1 0031  
                                                   __pcstackCOMRAM 0001  
                                                    __end_of_scale 359C  
                                                       __div_to_l_ 1F4A  
                                                  __div_to_l_@exp1 000E  
                                                  __div_to_l_@cntr 000D  
                                      __end_of_print_message_onLCD 198A  
                                                          ??_scale 002C  
                                                  __div_to_l_@quot 0009  
                                                     sprintf@width 006B  
                                                       __pbssBANK0 00A1  
                                                    __div_to_l_@f1 0001  
                                                    __div_to_l_@f2 0005  
                                                          ?___flge 0001  
                                                          ?___fleq 0001  
                                                          ?___wmul 0001  
                                                          ?_fround 0028  
                                                          R_D@dato 0001  
                                                          ?_strlen 0001  
                                                          R_I@dato 0001  
                                                        ?___xxtofl 0001  
                                                          _GO_DONE 007E12  
                                                        ?_get_temp 0045  
                                                        ?_init_LCD 0001  
                                                __end_of__npowers_ 7F31  
                                                          __Hparam 0000  
                                                          __Lparam 0000  
                                                  __size_of___flge 00E0  
                                                  __size_of___fleq 0096  
                                                          ___fladd 2AC6  
                                                          ___fldiv 2806  
                                                          ___awdiv 1C18  
                                                          ___flneg 1712  
                                                          ___awmod 1A6E  
                                                          ___flmul 2E0A  
                                                          ___flsub 1788  
                                                          ___fltol 1CB0  
                                                          ___lldiv 1AF2  
                                                  __size_of___wmul 002A  
                                                          ___llmod 19FA  
                                                       _fround$813 0030  
                                                       _fround$814 002C  
                                                          ___lwdiv 18C6  
                                                          ___lwmod 181E  
                                                          __pcinit 1676  
                                                  __size_of_fround 02A4  
                                                          __ramtop 0600  
                                                          _main$99 0094  
                                                          __ptext0 22C8  
                                                          __ptext1 359C  
                                                          __ptext2 318C  
                                                          __ptext3 1A6E  
                                                          __ptext4 1C18  
                                                          __ptext5 16C4  
                                                          __ptext6 2562  
                                                          __ptext7 181E  
                                                          __ptext8 18C6  
                                                          __ptext9 2056  
                                                  __size_of_strlen 004C  
                                                      ?__div_to_l_ 0001  
                                                     __size_of_R_D 001C  
                                                     __size_of_R_I 001C  
                                                          _dpowers 7F31  
                                                          _isdigit 16C4  
                                                       ??___xxtofl 0005  
                                                 ___awmod@dividend 0001  
                                                          _sprintf 359C  
                                                       ??_get_temp 0049  
                                             end_of_initialization 1682  
                                                       ??_init_LCD 0002  
                                                    __Lmediumconst 7EC8  
                                          __size_of_initial_config 0042  
                                                  ___lldiv@divisor 0005  
                                                  ___lldiv@counter 000D  
                                                          postinc0 000FEE  
                                                          postinc2 000FDE  
                                                   __tdiv_to_l_@f1 0001  
                                                   __tdiv_to_l_@f2 0005  
                                                          strlen@s 0001  
                                                    ??__tdiv_to_l_ 0009  
                                                      ___fladd@grs 0044  
                                                    ___xxtofl@sign 0009  
                                                      ___fldiv@grs 003B  
                                                      ___fldiv@rem 0034  
                                                      ___flmul@grs 001C  
                                              __size_of__div_to_l_ 010C  
                                                   __end_of___flge 1E64  
                                                   __end_of___fleq 1C18  
                                                    ??_get_voltage 0045  
                                                   __end_of___wmul 1712  
                                                   __end_of_fround 2806  
                                                   __end_of_strlen 181E  
                                              start_initialization 1676  
                                                      __end_of_R_D 16C4  
                                                      __end_of_R_I 16A8  
                                              __end_of__tdiv_to_l_ 216C  
                                                  ___llmod@divisor 0005  
                                                  ___llmod@counter 0009  
                                                         ??___flge 0009  
                                                         ??___fleq 0009  
                                                         ??___wmul 0005  
                                                         ??_fround 002C  
                                                    sprintf@tmpval 0063  
                                                         ??_strlen 0003  
                                                        ___fladd@a 0039  
                                                        ___fladd@b 0035  
                                                       fround@prec 0034  
                                                        ___fldiv@a 002C  
                                                        ___fldiv@b 0028  
                                                        ___flmul@a 0013  
                                                        ___flmul@b 000F  
                                              __end_of_get_voltage 19FA  
                                                        ___flsub@a 0049  
                                                        ___flsub@b 0045  
                                                    __pcstackBANK0 0080  
                                                __size_of___xxtofl 015C  
                                                __size_of_get_temp 00E6  
                                                      sprintf@flag 0069  
                                                      sprintf@eexp 0067  
                                                      sprintf@fval 006D  
                                                   _initial_config 1746  
                                                      sprintf@prec 0071  
                                                __size_of_init_LCD 0058  
                                     __size_of_print_message_onLCD 0064  
                                       print_message_onLCD@message 0005  
                                                 ___lwdiv@dividend 0006  
                                                    __pmediumconst 7EC8  
                                                         ?___fladd 0035  
                                                         ?___fldiv 0028  
                                                         ?___awdiv 0007  
                                                         ?___flneg 0001  
                                                         ?___awmod 0001  
                                                         ?___flmul 000F  
                                                         ?___flsub 0045  
                                                         ?___fltol 0031  
                                                         ?___lldiv 0001  
                                                         ?___llmod 0001  
                                                        __npowers_ 7EFD  
                                                         ?___lwdiv 0006  
                                                         ?___lwmod 0001  
                                                      __tdiv_to_l_ 2056  
                                                     ??__div_to_l_ 0009  
                                                         ?_isdigit 0001  
                                                        _scale$815 002C  
                                                 ___lwdiv@quotient 000A  
                                                         ?_sprintf 004D  
                                                   __size_of_scale 0410  
                                           __end_of_initial_config 1788  
                                                   ___wmul@product 0005  
                                               __end_of__div_to_l_ 2056  
                                                        main@F2146 00A1  
                                                      _get_voltage 198A  
                                                ___wmul@multiplier 0001  
                                                        main@canal 00A0  
                                                        get_temp@r 0049  
                                                  ?_initial_config 0001  
                                                         __Hrparam 0000  
                                                         __Lrparam 0000  
                                                 __size_of___fladd 0344  
                                                 __size_of___fldiv 02C0  
                                                 __size_of___awdiv 0098  
                                                 __size_of___flneg 0034  
                                                 __size_of___awmod 0084  
                                                 __size_of___flmul 0382  
                                                 __size_of___flsub 004A  
                                                 __size_of___fltol 00D4  
                                                 __size_of___lldiv 0090  
                                                 __size_of___llmod 0074  
                                                 __size_of___lwdiv 0060  
                                                 __size_of___lwmod 0050  
                                                      _isdigit$632 0002  
                                                       sprintf@val 005F  
                                                         ___xxtofl 216C  
                                                 __size_of_isdigit 0024  
                                                  ___lwdiv@divisor 0008  
                                                  ___lwdiv@counter 000C  
                                                         __ptext10 1F4A  
                                                         __ptext11 16E8  
                                                         __ptext20 17D2  
                                                         __ptext12 19FA  
                                                         __ptext21 16A8  
                                                         __ptext13 1AF2  
                                                         __ptext30 2AC6  
                                                         __ptext22 1746  
                                                         __ptext14 1CB0  
                                                         __ptext23 186E  
                                                         __ptext15 1788  
                                                         __ptext24 168C  
                                                         __ptext16 1712  
                                                         __ptext25 198A  
                                                         __ptext17 1D84  
                                                         __ptext26 1E64  
                                                         __ptext18 1B82  
                                                         __ptext27 216C  
                                                         __ptext19 1926  
                                                         __ptext28 2E0A  
                                                         __ptext29 2806  
                                                         __powers_ 7EC9  
                                                         _get_temp 1E64  
                                                 __size_of_sprintf 0A64  
                                                         _init_LCD 186E  
                                                    __size_of_main 029A  
                                                         main@temp 009C  
                                                         main@volt 0098  
                                              _print_message_onLCD 1926  
                                                         isdigit@c 0003  
                                                         scale@scl 0030  
                                                        sprintf@ap 005D  
                                                 __tdiv_to_l_@exp1 0011  
                                                        sprintf@sp 004D  
                                                 __tdiv_to_l_@cntr 0010  
                                                 __tdiv_to_l_@quot 000C  
                                                 ___lwmod@dividend 0001  
                                                 ___lldiv@dividend 0001  
                                             ?_print_message_onLCD 0005  
                                                     ?__tdiv_to_l_ 0001  
                                                         sprintf@c 0073  
                                                         sprintf@f 004F  
                                                 get_voltage@ac_in 0041  
                                                 ___lldiv@quotient 0009  
                                                  ___lwmod@divisor 0003  
                                                         strlen@cp 0003  
                                                  ___lwmod@counter 0005  
                                                    ___fladd@signs 0041  
                                                     ___fladd@aexp 0042  
                                                     ___fladd@bexp 0043  
                                            ??_print_message_onLCD 0007  
