

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Apr 03 20:14:21 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47  0000                     
    48                           ; Version 2.05
    49                           ; Generated 20/12/2018 GMT
    50                           ; 
    51                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F452 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     
    83                           	psect	mediumconst
    84  007EC8                     __pmediumconst:
    85                           	opt callstack 0
    86  007EC8  00                 	db	0
    87  007EC9                     __powers_:
    88                           	opt callstack 0
    89  007EC9  0000               	dw	0
    90  007ECB  3F80               	dw	16256
    91  007ECD  0000               	dw	0
    92  007ECF  4120               	dw	16672
    93  007ED1  0000               	dw	0
    94  007ED3  42C8               	dw	17096
    95  007ED5  0000               	dw	0
    96  007ED7  447A               	dw	17530
    97  007ED9  4000               	dw	16384
    98  007EDB  461C               	dw	17948
    99  007EDD  5000               	dw	20480
   100  007EDF  47C3               	dw	18371
   101  007EE1  2400               	dw	9216
   102  007EE3  4974               	dw	18804
   103  007EE5  9680               	dw	38528
   104  007EE7  4B18               	dw	19224
   105  007EE9  BC20               	dw	48160
   106  007EEB  4CBE               	dw	19646
   107  007EED  6B28               	dw	27432
   108  007EEF  4E6E               	dw	20078
   109  007EF1  02F9               	dw	761
   110  007EF3  5015               	dw	20501
   111  007EF5  78EC               	dw	30956
   112  007EF7  60AD               	dw	24749
   113  007EF9  F2CA               	dw	62154
   114  007EFB  7149               	dw	29001
   115  007EFD                     __end_of__powers_:
   116                           	opt callstack 0
   117  007EFD                     __npowers_:
   118                           	opt callstack 0
   119  007EFD  0000               	dw	0
   120  007EFF  3F80               	dw	16256
   121  007F01  CCCD               	dw	52429
   122  007F03  3DCC               	dw	15820
   123  007F05  D70A               	dw	55050
   124  007F07  3C23               	dw	15395
   125  007F09  126F               	dw	4719
   126  007F0B  3A83               	dw	14979
   127  007F0D  B717               	dw	46871
   128  007F0F  38D1               	dw	14545
   129  007F11  C5AC               	dw	50604
   130  007F13  3727               	dw	14119
   131  007F15  37BD               	dw	14269
   132  007F17  3586               	dw	13702
   133  007F19  BF95               	dw	49045
   134  007F1B  33D6               	dw	13270
   135  007F1D  CC77               	dw	52343
   136  007F1F  322B               	dw	12843
   137  007F21  705F               	dw	28767
   138  007F23  3089               	dw	12425
   139  007F25  E6FF               	dw	59135
   140  007F27  2EDB               	dw	11995
   141  007F29  E508               	dw	58632
   142  007F2B  1E3C               	dw	7740
   143  007F2D  4260               	dw	16992
   144  007F2F  0DA2               	dw	3490
   145  007F31                     __end_of__npowers_:
   146                           	opt callstack 0
   147  007F31                     _dpowers:
   148                           	opt callstack 0
   149  007F31  0001               	dw	1
   150  007F33  0000               	dw	0
   151  007F35  000A               	dw	10
   152  007F37  0000               	dw	0
   153  007F39  0064               	dw	100
   154  007F3B  0000               	dw	0
   155  007F3D  03E8               	dw	1000
   156  007F3F  0000               	dw	0
   157  007F41  2710               	dw	10000
   158  007F43  0000               	dw	0
   159  007F45  86A0               	dw	34464
   160  007F47  0001               	dw	1
   161  007F49  4240               	dw	16960
   162  007F4B  000F               	dw	15
   163  007F4D  9680               	dw	38528
   164  007F4F  0098               	dw	152
   165  007F51  E100               	dw	57600
   166  007F53  05F5               	dw	1525
   167  007F55  CA00               	dw	51712
   168  007F57  3B9A               	dw	15258
   169  007F59                     __end_of_dpowers:
   170                           	opt callstack 0
   171  0000                     _PORTE	set	3972
   172  0000                     _PORTD	set	3971
   173  0000                     _PORTC	set	3970
   174  0000                     _PORTB	set	3969
   175  0000                     _PORTA	set	3968
   176  0000                     _LATE	set	3981
   177  0000                     _LATD	set	3980
   178  0000                     _LATC	set	3979
   179  0000                     _LATB	set	3978
   180  0000                     _LATA	set	3977
   181  0000                     _ADCON1	set	4033
   182  0000                     _TRISD	set	3989
   183  0000                     _TRISC	set	3988
   184  0000                     _TRISB	set	3987
   185  0000                     _TRISA	set	3986
   186  0000                     _ADRESL	set	4035
   187  0000                     _ADRESH	set	4036
   188  0000                     _ADCON0	set	4034
   189  0000                     _LC4	set	31836
   190  0000                     _LC3	set	31835
   191  0000                     _GO_DONE	set	32274
   192  007F59                     STR_4:
   193  007F59  54                 	db	84	;'T'
   194  007F5A  65                 	db	101	;'e'
   195  007F5B  6D                 	db	109	;'m'
   196  007F5C  70                 	db	112	;'p'
   197  007F5D  3A                 	db	58	;':'
   198  007F5E  20                 	db	32
   199  007F5F  25                 	db	37
   200  007F60  2E                 	db	46
   201  007F61  30                 	db	48	;'0'
   202  007F62  66                 	db	102	;'f'
   203  007F63  43                 	db	67	;'C'
   204  007F64  20                 	db	32
   205  007F65  20                 	db	32
   206  007F66  20                 	db	32
   207  007F67  20                 	db	32
   208  007F68  20                 	db	32
   209  007F69  20                 	db	32
   210  007F6A  20                 	db	32
   211  007F6B  00                 	db	0
   212  007F6C                     STR_3:
   213  007F6C  56                 	db	86	;'V'
   214  007F6D  6F                 	db	111	;'o'
   215  007F6E  6C                 	db	108	;'l'
   216  007F6F  74                 	db	116	;'t'
   217  007F70  61                 	db	97	;'a'
   218  007F71  6A                 	db	106	;'j'
   219  007F72  65                 	db	101	;'e'
   220  007F73  3A                 	db	58	;':'
   221  007F74  20                 	db	32
   222  007F75  25                 	db	37
   223  007F76  30                 	db	48	;'0'
   224  007F77  2E                 	db	46
   225  007F78  32                 	db	50	;'2'
   226  007F79  66                 	db	102	;'f'
   227  007F7A  56                 	db	86	;'V'
   228  007F7B  20                 	db	32
   229  007F7C  20                 	db	32
   230  007F7D  20                 	db	32
   231  007F7E  00                 	db	0
   232  007F7F                     STR_10:
   233  007F7F  20                 	db	32
   234  007F80  20                 	db	32
   235  007F81  20                 	db	32
   236  007F82  20                 	db	32
   237  007F83  20                 	db	32
   238  007F84  45                 	db	69	;'E'
   239  007F85  4C                 	db	76	;'L'
   240  007F86  20                 	db	32
   241  007F87  46                 	db	70	;'F'
   242  007F88  49                 	db	73	;'I'
   243  007F89  4E                 	db	78	;'N'
   244  007F8A  20                 	db	32
   245  007F8B  20                 	db	32
   246  007F8C  20                 	db	32
   247  007F8D  20                 	db	32
   248  007F8E  20                 	db	32
   249  007F8F  00                 	db	0
   250  007F90                     STR_7:
   251  007F90  20                 	db	32
   252  007F91  20                 	db	32
   253  007F92  20                 	db	32
   254  007F93  20                 	db	32
   255  007F94  20                 	db	32
   256  007F95  52                 	db	82	;'R'
   257  007F96  49                 	db	73	;'I'
   258  007F97  45                 	db	69	;'E'
   259  007F98  53                 	db	83	;'S'
   260  007F99  47                 	db	71	;'G'
   261  007F9A  4F                 	db	79	;'O'
   262  007F9B  20                 	db	32
   263  007F9C  20                 	db	32
   264  007F9D  20                 	db	32
   265  007F9E  20                 	db	32
   266  007F9F  20                 	db	32
   267  007FA0  00                 	db	0
   268  007FA1                     STR_6:
   269  007FA1  20                 	db	32
   270  007FA2  20                 	db	32
   271  007FA3  41                 	db	65	;'A'
   272  007FA4  4C                 	db	76	;'L'
   273  007FA5  54                 	db	84	;'T'
   274  007FA6  4F                 	db	79	;'O'
   275  007FA7  20                 	db	32
   276  007FA8  56                 	db	86	;'V'
   277  007FA9  4F                 	db	79	;'O'
   278  007FAA  4C                 	db	76	;'L'
   279  007FAB  54                 	db	84	;'T'
   280  007FAC  41                 	db	65	;'A'
   281  007FAD  4A                 	db	74	;'J'
   282  007FAE  45                 	db	69	;'E'
   283  007FAF  20                 	db	32
   284  007FB0  20                 	db	32
   285  007FB1  00                 	db	0
   286  007FB2                     STR_8:
   287  007FB2  20                 	db	32
   288  007FB3  44                 	db	68	;'D'
   289  007FB4  45                 	db	69	;'E'
   290  007FB5  20                 	db	32
   291  007FB6  44                 	db	68	;'D'
   292  007FB7  45                 	db	69	;'E'
   293  007FB8  53                 	db	83	;'S'
   294  007FB9  54                 	db	84	;'T'
   295  007FBA  52                 	db	82	;'R'
   296  007FBB  55                 	db	85	;'U'
   297  007FBC  43                 	db	67	;'C'
   298  007FBD  43                 	db	67	;'C'
   299  007FBE  49                 	db	73	;'I'
   300  007FBF  4F                 	db	79	;'O'
   301  007FC0  4E                 	db	78	;'N'
   302  007FC1  20                 	db	32
   303  007FC2  00                 	db	0
   304  007FC3                     STR_9:
   305  007FC3  20                 	db	32
   306  007FC4  20                 	db	32
   307  007FC5  20                 	db	32
   308  007FC6  20                 	db	32
   309  007FC7  20                 	db	32
   310  007FC8  4C                 	db	76	;'L'
   311  007FC9  4C                 	db	76	;'L'
   312  007FCA  45                 	db	69	;'E'
   313  007FCB  47                 	db	71	;'G'
   314  007FCC  4F                 	db	79	;'O'
   315  007FCD  20                 	db	32
   316  007FCE  20                 	db	32
   317  007FCF  20                 	db	32
   318  007FD0  20                 	db	32
   319  007FD1  20                 	db	32
   320  007FD2  00                 	db	0
   321  007FD3                     STR_5:
   322  007FD3  20                 	db	32
   323  007FD4  20                 	db	32
   324  007FD5  20                 	db	32
   325  007FD6  20                 	db	32
   326  007FD7  50                 	db	80	;'P'
   327  007FD8  45                 	db	69	;'E'
   328  007FD9  4C                 	db	76	;'L'
   329  007FDA  49                 	db	73	;'I'
   330  007FDB  47                 	db	71	;'G'
   331  007FDC  52                 	db	82	;'R'
   332  007FDD  4F                 	db	79	;'O'
   333  007FDE  20                 	db	32
   334  007FDF  20                 	db	32
   335  007FE0  20                 	db	32
   336  007FE1  00                 	db	0
   337  007FE2                     STR_2:
   338  007FE2  44                 	db	68	;'D'
   339  007FE3  69                 	db	105	;'i'
   340  007FE4  65                 	db	101	;'e'
   341  007FE5  67                 	db	103	;'g'
   342  007FE6  6F                 	db	111	;'o'
   343  007FE7  20                 	db	32
   344  007FE8  2D                 	db	45
   345  007FE9  20                 	db	32
   346  007FEA  38                 	db	56	;'8'
   347  007FEB  34                 	db	52	;'4'
   348  007FEC  30                 	db	48	;'0'
   349  007FED  31                 	db	49	;'1'
   350  007FEE  30                 	db	48	;'0'
   351  007FEF  00                 	db	0
   352  007FF0                     STR_1:
   353  007FF0  43                 	db	67	;'C'
   354  007FF1  4F                 	db	79	;'O'
   355  007FF2  4E                 	db	78	;'N'
   356  007FF3  56                 	db	86	;'V'
   357  007FF4  45                 	db	69	;'E'
   358  007FF5  52                 	db	82	;'R'
   359  007FF6  53                 	db	83	;'S'
   360  007FF7  4F                 	db	79	;'O'
   361  007FF8  52                 	db	82	;'R'
   362  007FF9  20                 	db	32
   363  007FFA  41                 	db	65	;'A'
   364  007FFB  44                 	db	68	;'D'
   365  007FFC  43                 	db	67	;'C'
   366  007FFD  00                 	db	0
   367                           
   368                           ; #config settings
   369  007FFE  00                 	db	0	; dummy byte at the end
   370  0000                     
   371                           	psect	cinit
   372  001662                     __pcinit:
   373                           	opt callstack 0
   374  001662                     start_initialization:
   375                           	opt callstack 0
   376  001662                     __initialization:
   377                           	opt callstack 0
   378                           
   379                           ; Clear objects allocated to BANK0 (20 bytes)
   380  001662  EE00  F0A1         	lfsr	0,__pbssBANK0
   381  001666  0E14               	movlw	20
   382  001668                     clear_0:
   383  001668  6AEE               	clrf	postinc0,c
   384  00166A  06E8               	decf	wreg,f,c
   385  00166C  E1FD               	bnz	clear_0
   386  00166E                     end_of_initialization:
   387                           	opt callstack 0
   388  00166E                     __end_of__initialization:
   389                           	opt callstack 0
   390  00166E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   391  001670  6EF8               	movwf	tblptru,c
   392  001672  0100               	movlb	0
   393  001674  EFAE  F012         	goto	_main	;jump to C main() function
   394                           
   395                           	psect	bssBANK0
   396  0000A1                     __pbssBANK0:
   397                           	opt callstack 0
   398  0000A1                     	ds	20
   399                           
   400                           	psect	cstackBANK0
   401  000080                     __pcstackBANK0:
   402                           	opt callstack 0
   403  000080                     main@message:
   404                           	opt callstack 0
   405                           
   406                           ; 20 bytes @ 0x0
   407  000080                     	ds	20
   408  000094                     _main$116:
   409                           	opt callstack 0
   410                           
   411                           ; 2 bytes @ 0x14
   412  000094                     	ds	2
   413  000096                     main@in:
   414                           	opt callstack 0
   415                           
   416                           ; 2 bytes @ 0x16
   417  000096                     	ds	2
   418  000098                     main@volt:
   419                           	opt callstack 0
   420                           
   421                           ; 4 bytes @ 0x18
   422  000098                     	ds	4
   423  00009C                     main@temp:
   424                           	opt callstack 0
   425                           
   426                           ; 4 bytes @ 0x1C
   427  00009C                     	ds	4
   428  0000A0                     main@canal:
   429                           	opt callstack 0
   430                           
   431                           ; 1 bytes @ 0x20
   432  0000A0                     	ds	1
   433                           
   434                           	psect	cstackCOMRAM
   435  000001                     __pcstackCOMRAM:
   436                           	opt callstack 0
   437  000001                     ??_isdigit:
   438  000001                     ?_strlen:
   439                           	opt callstack 0
   440  000001                     ?___wmul:
   441                           	opt callstack 0
   442  000001                     ?___awmod:
   443                           	opt callstack 0
   444  000001                     ?___lwmod:
   445                           	opt callstack 0
   446  000001                     ?__tdiv_to_l_:
   447                           	opt callstack 0
   448  000001                     ?__div_to_l_:
   449                           	opt callstack 0
   450  000001                     ?___lldiv:
   451                           	opt callstack 0
   452  000001                     ?___flneg:
   453                           	opt callstack 0
   454  000001                     ?___llmod:
   455                           	opt callstack 0
   456  000001                     ?___xxtofl:
   457                           	opt callstack 0
   458  000001                     R_I@dato:
   459                           	opt callstack 0
   460  000001                     R_D@dato:
   461                           	opt callstack 0
   462  000001                     ___wmul@multiplier:
   463                           	opt callstack 0
   464  000001                     ___awmod@dividend:
   465                           	opt callstack 0
   466  000001                     ___lwmod@dividend:
   467                           	opt callstack 0
   468  000001                     strlen@s:
   469                           	opt callstack 0
   470  000001                     ___lldiv@dividend:
   471                           	opt callstack 0
   472  000001                     __div_to_l_@f1:
   473                           	opt callstack 0
   474  000001                     ___fleq@ff1:
   475                           	opt callstack 0
   476  000001                     ___flge@ff1:
   477                           	opt callstack 0
   478  000001                     ___flneg@f1:
   479                           	opt callstack 0
   480  000001                     __tdiv_to_l_@f1:
   481                           	opt callstack 0
   482  000001                     ___llmod@dividend:
   483                           	opt callstack 0
   484  000001                     ___xxtofl@val:
   485                           	opt callstack 0
   486                           
   487                           ; 4 bytes @ 0x0
   488  000001                     	ds	1
   489  000002                     ??_init_LCD:
   490  000002                     _isdigit$653:
   491                           	opt callstack 0
   492                           
   493                           ; 1 bytes @ 0x1
   494  000002                     	ds	1
   495  000003                     isdigit@c:
   496                           	opt callstack 0
   497  000003                     ___wmul@multiplicand:
   498                           	opt callstack 0
   499  000003                     ___awmod@divisor:
   500                           	opt callstack 0
   501  000003                     ___lwmod@divisor:
   502                           	opt callstack 0
   503  000003                     strlen@cp:
   504                           	opt callstack 0
   505                           
   506                           ; 2 bytes @ 0x2
   507  000003                     	ds	2
   508  000005                     ??___xxtofl:
   509  000005                     ___awmod@counter:
   510                           	opt callstack 0
   511  000005                     ___lwmod@counter:
   512                           	opt callstack 0
   513  000005                     print_message_onLCD@message:
   514                           	opt callstack 0
   515  000005                     ___wmul@product:
   516                           	opt callstack 0
   517  000005                     ___lldiv@divisor:
   518                           	opt callstack 0
   519  000005                     __div_to_l_@f2:
   520                           	opt callstack 0
   521  000005                     ___fleq@ff2:
   522                           	opt callstack 0
   523  000005                     ___flge@ff2:
   524                           	opt callstack 0
   525  000005                     __tdiv_to_l_@f2:
   526                           	opt callstack 0
   527  000005                     ___llmod@divisor:
   528                           	opt callstack 0
   529                           
   530                           ; 4 bytes @ 0x4
   531  000005                     	ds	1
   532  000006                     ?___lwdiv:
   533                           	opt callstack 0
   534  000006                     ___awmod@sign:
   535                           	opt callstack 0
   536  000006                     ___lwdiv@dividend:
   537                           	opt callstack 0
   538                           
   539                           ; 2 bytes @ 0x5
   540  000006                     	ds	1
   541  000007                     ??_print_message_onLCD:
   542  000007                     ?___awdiv:
   543                           	opt callstack 0
   544  000007                     ___awdiv@dividend:
   545                           	opt callstack 0
   546                           
   547                           ; 2 bytes @ 0x6
   548  000007                     	ds	1
   549  000008                     ___lwdiv@divisor:
   550                           	opt callstack 0
   551                           
   552                           ; 2 bytes @ 0x7
   553  000008                     	ds	1
   554  000009                     ??__tdiv_to_l_:
   555  000009                     ??___fleq:
   556  000009                     ??___flge:
   557  000009                     print_message_onLCD@i:
   558                           	opt callstack 0
   559  000009                     ___llmod@counter:
   560                           	opt callstack 0
   561  000009                     ___xxtofl@sign:
   562                           	opt callstack 0
   563  000009                     ___awdiv@divisor:
   564                           	opt callstack 0
   565  000009                     ___lldiv@quotient:
   566                           	opt callstack 0
   567  000009                     __div_to_l_@quot:
   568                           	opt callstack 0
   569                           
   570                           ; 4 bytes @ 0x8
   571  000009                     	ds	1
   572  00000A                     ___xxtofl@exp:
   573                           	opt callstack 0
   574  00000A                     ___lwdiv@quotient:
   575                           	opt callstack 0
   576                           
   577                           ; 2 bytes @ 0x9
   578  00000A                     	ds	1
   579  00000B                     ___awdiv@counter:
   580                           	opt callstack 0
   581  00000B                     ___xxtofl@arg:
   582                           	opt callstack 0
   583                           
   584                           ; 4 bytes @ 0xA
   585  00000B                     	ds	1
   586  00000C                     ___awdiv@sign:
   587                           	opt callstack 0
   588  00000C                     ___lwdiv@counter:
   589                           	opt callstack 0
   590  00000C                     __tdiv_to_l_@quot:
   591                           	opt callstack 0
   592                           
   593                           ; 4 bytes @ 0xB
   594  00000C                     	ds	1
   595  00000D                     ___lldiv@counter:
   596                           	opt callstack 0
   597  00000D                     __div_to_l_@cntr:
   598                           	opt callstack 0
   599  00000D                     ___awdiv@quotient:
   600                           	opt callstack 0
   601                           
   602                           ; 2 bytes @ 0xC
   603  00000D                     	ds	1
   604  00000E                     __div_to_l_@exp1:
   605                           	opt callstack 0
   606                           
   607                           ; 1 bytes @ 0xD
   608  00000E                     	ds	1
   609  00000F                     ?___flmul:
   610                           	opt callstack 0
   611  00000F                     ___flmul@b:
   612                           	opt callstack 0
   613                           
   614                           ; 4 bytes @ 0xE
   615  00000F                     	ds	1
   616  000010                     __tdiv_to_l_@cntr:
   617                           	opt callstack 0
   618                           
   619                           ; 1 bytes @ 0xF
   620  000010                     	ds	1
   621  000011                     __tdiv_to_l_@exp1:
   622                           	opt callstack 0
   623                           
   624                           ; 1 bytes @ 0x10
   625  000011                     	ds	2
   626  000013                     ___flmul@a:
   627                           	opt callstack 0
   628                           
   629                           ; 4 bytes @ 0x12
   630  000013                     	ds	4
   631  000017                     ??___flmul:
   632                           
   633                           ; 1 bytes @ 0x16
   634  000017                     	ds	4
   635  00001B                     ___flmul@sign:
   636                           	opt callstack 0
   637                           
   638                           ; 1 bytes @ 0x1A
   639  00001B                     	ds	1
   640  00001C                     ___flmul@grs:
   641                           	opt callstack 0
   642                           
   643                           ; 4 bytes @ 0x1B
   644  00001C                     	ds	4
   645  000020                     ___flmul@aexp:
   646                           	opt callstack 0
   647                           
   648                           ; 1 bytes @ 0x1F
   649  000020                     	ds	1
   650  000021                     ___flmul@bexp:
   651                           	opt callstack 0
   652                           
   653                           ; 1 bytes @ 0x20
   654  000021                     	ds	1
   655  000022                     ___flmul@prod:
   656                           	opt callstack 0
   657                           
   658                           ; 4 bytes @ 0x21
   659  000022                     	ds	4
   660  000026                     ___flmul@temp:
   661                           	opt callstack 0
   662                           
   663                           ; 2 bytes @ 0x25
   664  000026                     	ds	2
   665  000028                     ?___fldiv:
   666                           	opt callstack 0
   667  000028                     ?_fround:
   668                           	opt callstack 0
   669  000028                     ?_scale:
   670                           	opt callstack 0
   671  000028                     ___fldiv@b:
   672                           	opt callstack 0
   673                           
   674                           ; 4 bytes @ 0x27
   675  000028                     	ds	4
   676  00002C                     ___fldiv@a:
   677                           	opt callstack 0
   678  00002C                     _fround$835:
   679                           	opt callstack 0
   680  00002C                     _scale$836:
   681                           	opt callstack 0
   682                           
   683                           ; 4 bytes @ 0x2B
   684  00002C                     	ds	4
   685  000030                     ??___fldiv:
   686  000030                     scale@scl:
   687                           	opt callstack 0
   688  000030                     _fround$834:
   689                           	opt callstack 0
   690                           
   691                           ; 4 bytes @ 0x2F
   692  000030                     	ds	1
   693  000031                     ?___fltol:
   694                           	opt callstack 0
   695  000031                     ___fltol@f1:
   696                           	opt callstack 0
   697                           
   698                           ; 4 bytes @ 0x30
   699  000031                     	ds	3
   700  000034                     fround@prec:
   701                           	opt callstack 0
   702  000034                     ___fldiv@rem:
   703                           	opt callstack 0
   704                           
   705                           ; 4 bytes @ 0x33
   706  000034                     	ds	1
   707  000035                     ??___fltol:
   708  000035                     ?___fladd:
   709                           	opt callstack 0
   710  000035                     ___fladd@b:
   711                           	opt callstack 0
   712                           
   713                           ; 4 bytes @ 0x34
   714  000035                     	ds	3
   715  000038                     ___fldiv@sign:
   716                           	opt callstack 0
   717                           
   718                           ; 1 bytes @ 0x37
   719  000038                     	ds	1
   720  000039                     ___fltol@sign1:
   721                           	opt callstack 0
   722  000039                     ___fldiv@new_exp:
   723                           	opt callstack 0
   724  000039                     ___fladd@a:
   725                           	opt callstack 0
   726                           
   727                           ; 4 bytes @ 0x38
   728  000039                     	ds	1
   729  00003A                     ___fltol@exp1:
   730                           	opt callstack 0
   731                           
   732                           ; 1 bytes @ 0x39
   733  00003A                     	ds	1
   734  00003B                     ___fldiv@grs:
   735                           	opt callstack 0
   736                           
   737                           ; 4 bytes @ 0x3A
   738  00003B                     	ds	2
   739  00003D                     ??___fladd:
   740                           
   741                           ; 1 bytes @ 0x3C
   742  00003D                     	ds	2
   743  00003F                     ___fldiv@bexp:
   744                           	opt callstack 0
   745                           
   746                           ; 1 bytes @ 0x3E
   747  00003F                     	ds	1
   748  000040                     ___fldiv@aexp:
   749                           	opt callstack 0
   750                           
   751                           ; 1 bytes @ 0x3F
   752  000040                     	ds	1
   753  000041                     ?_get_voltage:
   754                           	opt callstack 0
   755  000041                     ___fladd@signs:
   756                           	opt callstack 0
   757  000041                     get_voltage@ac_in:
   758                           	opt callstack 0
   759                           
   760                           ; 2 bytes @ 0x40
   761  000041                     	ds	1
   762  000042                     ___fladd@aexp:
   763                           	opt callstack 0
   764                           
   765                           ; 1 bytes @ 0x41
   766  000042                     	ds	1
   767  000043                     ___fladd@bexp:
   768                           	opt callstack 0
   769                           
   770                           ; 1 bytes @ 0x42
   771  000043                     	ds	1
   772  000044                     ___fladd@grs:
   773                           	opt callstack 0
   774                           
   775                           ; 1 bytes @ 0x43
   776  000044                     	ds	1
   777  000045                     ?_get_temp:
   778                           	opt callstack 0
   779  000045                     ?___flsub:
   780                           	opt callstack 0
   781  000045                     get_temp@ac_in:
   782                           	opt callstack 0
   783  000045                     ___flsub@b:
   784                           	opt callstack 0
   785                           
   786                           ; 4 bytes @ 0x44
   787  000045                     	ds	4
   788  000049                     get_temp@r:
   789                           	opt callstack 0
   790  000049                     ___flsub@a:
   791                           	opt callstack 0
   792                           
   793                           ; 4 bytes @ 0x48
   794  000049                     	ds	4
   795  00004D                     ?_sprintf:
   796                           	opt callstack 0
   797  00004D                     sprintf@sp:
   798                           	opt callstack 0
   799                           
   800                           ; 2 bytes @ 0x4C
   801  00004D                     	ds	2
   802  00004F                     sprintf@f:
   803                           	opt callstack 0
   804                           
   805                           ; 2 bytes @ 0x4E
   806  00004F                     	ds	6
   807  000055                     ??_sprintf:
   808                           
   809                           ; 1 bytes @ 0x54
   810  000055                     	ds	4
   811  000059                     _sprintf$837:
   812                           	opt callstack 0
   813                           
   814                           ; 4 bytes @ 0x58
   815  000059                     	ds	4
   816  00005D                     sprintf@ap:
   817                           	opt callstack 0
   818                           
   819                           ; 2 bytes @ 0x5C
   820  00005D                     	ds	2
   821  00005F                     sprintf@val:
   822                           	opt callstack 0
   823                           
   824                           ; 4 bytes @ 0x5E
   825  00005F                     	ds	4
   826  000063                     sprintf@tmpval:
   827                           	opt callstack 0
   828                           
   829                           ; 4 bytes @ 0x62
   830  000063                     	ds	4
   831  000067                     sprintf@eexp:
   832                           	opt callstack 0
   833                           
   834                           ; 2 bytes @ 0x66
   835  000067                     	ds	2
   836  000069                     sprintf@flag:
   837                           	opt callstack 0
   838                           
   839                           ; 2 bytes @ 0x68
   840  000069                     	ds	2
   841  00006B                     sprintf@width:
   842                           	opt callstack 0
   843                           
   844                           ; 2 bytes @ 0x6A
   845  00006B                     	ds	2
   846  00006D                     sprintf@fval:
   847                           	opt callstack 0
   848                           
   849                           ; 4 bytes @ 0x6C
   850  00006D                     	ds	4
   851  000071                     sprintf@prec:
   852                           	opt callstack 0
   853                           
   854                           ; 2 bytes @ 0x70
   855  000071                     	ds	2
   856  000073                     sprintf@c:
   857                           	opt callstack 0
   858                           
   859                           ; 1 bytes @ 0x72
   860  000073                     	ds	1
   861  000074                     ??_main:
   862                           
   863                           ; 1 bytes @ 0x73
   864  000074                     	ds	2
   865                           
   866 ;;
   867 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   868 ;;
   869 ;; *************** function _main *****************
   870 ;; Defined at:
   871 ;;		line 35 in file "main.c"
   872 ;; Parameters:    Size  Location     Type
   873 ;;		None
   874 ;; Auto vars:     Size  Location     Type
   875 ;;  message        20    0[BANK0 ] unsigned char [20]
   876 ;;  in              2   22[BANK0 ] unsigned int 
   877 ;;  temp            4   28[BANK0 ] float 
   878 ;;  volt            4   24[BANK0 ] float 
   879 ;;  canal           1   32[BANK0 ] unsigned char 
   880 ;; Return value:  Size  Location     Type
   881 ;;                  1    wreg      void 
   882 ;; Registers used:
   883 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   884 ;; Tracked objects:
   885 ;;		On entry : 0/0
   886 ;;		On exit  : 0/0
   887 ;;		Unchanged: 0/0
   888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   889 ;;      Params:         0       0       0       0       0       0       0
   890 ;;      Locals:         0      33       0       0       0       0       0
   891 ;;      Temps:          2       0       0       0       0       0       0
   892 ;;      Totals:         2      33       0       0       0       0       0
   893 ;;Total ram usage:       35 bytes
   894 ;; Hardware stack levels required when called:    3
   895 ;; This function calls:
   896 ;;		_R_I
   897 ;;		___flge
   898 ;;		_get_temp
   899 ;;		_get_voltage
   900 ;;		_init_LCD
   901 ;;		_initial_config
   902 ;;		_light_the_bulb
   903 ;;		_light_the_bulb_and_start_engine
   904 ;;		_print_message_onLCD
   905 ;;		_sprintf
   906 ;;		_start_engine
   907 ;;		_turn_of_everything
   908 ;; This function is called by:
   909 ;;		Startup code after reset
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           
   913                           	psect	text0
   914  00255C                     __ptext0:
   915                           	opt callstack 0
   916  00255C                     _main:
   917                           	opt callstack 0
   918  00255C  FFFF               	dw	65535	; assembler added errata NOP
   919                           
   920                           ;main.c: 36: initial_config();
   921                           
   922                           ;incstack = 0
   923  00255E  EC99  F00B         	call	_initial_config	;wreg free
   924                           
   925                           ;main.c: 37: init_LCD();
   926  002562  EC2F  F00C         	call	_init_LCD	;wreg free
   927                           
   928                           ;main.c: 38: R_I(128);
   929  002566  0E80               	movlw	128
   930  002568  EC3C  F00B         	call	_R_I
   931                           
   932                           ;main.c: 39: print_message_onLCD("CONVERSOR ADC");
   933  00256C  0EF0               	movlw	low STR_1
   934  00256E  6E05               	movwf	print_message_onLCD@message,c
   935  002570  0E7F               	movlw	high STR_1
   936  002572  6E06               	movwf	print_message_onLCD@message+1,c
   937  002574  EC8B  F00C         	call	_print_message_onLCD	;wreg free
   938                           
   939                           ;main.c: 41: R_I(192);
   940  002578  0EC0               	movlw	192
   941  00257A  EC3C  F00B         	call	_R_I
   942                           
   943                           ;main.c: 42: print_message_onLCD("Diego - 84010");
   944  00257E  0EE2               	movlw	low STR_2
   945  002580  6E05               	movwf	print_message_onLCD@message,c
   946  002582  0E7F               	movlw	high STR_2
   947  002584  6E06               	movwf	print_message_onLCD@message+1,c
   948  002586  EC8B  F00C         	call	_print_message_onLCD	;wreg free
   949                           
   950                           ;main.c: 43: _delay((unsigned long)((3000)*(4000000/4000.0)));
   951  00258A  0E0C               	movlw	12
   952  00258C  6E75               	movwf	(??_main+1)& (0+255),c
   953  00258E  0E6C               	movlw	108
   954  002590  6E74               	movwf	??_main& (0+255),c
   955  002592  0EF3               	movlw	243
   956  002594                     u4437:
   957  002594  FFFF               	dw	65535	; errata NOP
   958  002596  2EE8               	decfsz	wreg,f,c
   959  002598  D7FD               	bra	u4437
   960  00259A  2E74               	decfsz	??_main& (0+255),f,c
   961  00259C  D7FB               	bra	u4437
   962  00259E  2E75               	decfsz	(??_main+1)& (0+255),f,c
   963  0025A0  D7F9               	bra	u4437
   964                           
   965                           ;main.c: 45: R_I(0X01);
   966  0025A2  0E01               	movlw	1
   967  0025A4  EC3C  F00B         	call	_R_I
   968                           
   969                           ;main.c: 47: char canal = 0;
   970  0025A8  0E00               	movlw	0
   971  0025AA  0100               	movlb	0	; () banked
   972  0025AC  FFFF               	dw	65535	; assembler added errata NOP
   973  0025AE  6FA0               	movwf	main@canal& (0+255),b
   974                           
   975                           ; BSR set to: 0
   976                           ;main.c: 51: ADCON0 = canal ? 0B01001001 : 0B01000001;
   977  0025B0  51A0               	movf	main@canal& (0+255),w,b
   978  0025B2  A4D8               	btfss	status,2,c
   979  0025B4  D004               	goto	l3839
   980                           
   981                           ; BSR set to: 0
   982  0025B6  0E00               	movlw	0
   983  0025B8  6F95               	movwf	(_main$116+1)& (0+255),b
   984  0025BA  0E41               	movlw	65
   985  0025BC  D004               	goto	L1
   986  0025BE                     l3839:
   987  0025BE  FFFF               	dw	65535	; assembler added errata NOP
   988                           
   989                           ; BSR set to: 0
   990  0025C0  0E00               	movlw	0
   991  0025C2  6F95               	movwf	(_main$116+1)& (0+255),b
   992  0025C4  0E49               	movlw	73
   993  0025C6                     L1:
   994  0025C6  FFFF               	dw	65535	; assembler added errata NOP
   995  0025C8  6F94               	movwf	_main$116& (0+255),b
   996                           
   997                           ; BSR set to: 0
   998  0025CA  C094  FFC2         	movff	_main$116,4034	;volatile
   999                           
  1000                           ; BSR set to: 0
  1001                           ;main.c: 52: _delay((unsigned long)((20)*(4000000/4000000.0)));
  1002  0025CE  0E05               	movlw	5
  1003  0025D0                     u4447:
  1004  0025D0  FFFF               	dw	65535	; errata NOP
  1005  0025D2  2EE8               	decfsz	wreg,f,c
  1006  0025D4  D7FD               	bra	u4447
  1007                           
  1008                           ;main.c: 53: GO_DONE = 1;
  1009  0025D6  84C2               	bsf	4034,2,c	;volatile
  1010  0025D8                     l78:
  1011  0025D8  FFFF               	dw	65535	; assembler added errata NOP
  1012  0025DA  B4C2               	btfsc	4034,2,c	;volatile
  1013  0025DC  D7FD               	goto	l78
  1014                           
  1015                           ;main.c: 57: unsigned int in = (ADRESH<<8) | ADRESL;
  1016  0025DE  50C3               	movf	4035,w,c	;volatile
  1017  0025E0  CFC4 F074          	movff	4036,??_main	;volatile
  1018  0025E4  6A75               	clrf	(??_main+1)& (0+255),c
  1019  0025E6  C074  F075         	movff	??_main,??_main+1
  1020  0025EA  6A74               	clrf	??_main,c
  1021  0025EC  1074               	iorwf	??_main,w,c
  1022  0025EE  0100               	movlb	0	; () banked
  1023  0025F0  6F96               	movwf	main@in& (0+255),b
  1024  0025F2  5075               	movf	??_main+1,w,c
  1025  0025F4  6F97               	movwf	(main@in+1)& (0+255),b
  1026                           
  1027                           ; BSR set to: 0
  1028                           ;main.c: 58: _delay((unsigned long)((50)*(4000000/4000.0)));
  1029  0025F6  0E31               	movlw	49
  1030  0025F8  6E74               	movwf	??_main& (0+255),c
  1031  0025FA  0EBB               	movlw	187
  1032  0025FC                     u4457:
  1033  0025FC  FFFF               	dw	65535	; errata NOP
  1034  0025FE  2EE8               	decfsz	wreg,f,c
  1035  002600  D7FD               	bra	u4457
  1036  002602  2E74               	decfsz	??_main& (0+255),f,c
  1037  002604  D7FB               	bra	u4457
  1038                           
  1039                           ;main.c: 59: char message[20] = "";
  1040  002606  EE20  F080         	lfsr	2,main@message
  1041  00260A  0E13               	movlw	19
  1042  00260C                     u4351:
  1043  00260C  6ADE               	clrf	postinc2,c
  1044  00260E  06E8               	decf	wreg,f,c
  1045  002610  E2FD               	bc	u4351
  1046                           
  1047                           ;main.c: 60: if (!canal) {
  1048  002612  0100               	movlb	0	; () banked
  1049  002614  51A0               	movf	main@canal& (0+255),w,b
  1050  002616  A4D8               	btfss	status,2,c
  1051  002618  D024               	goto	l3861
  1052                           
  1053                           ; BSR set to: 0
  1054                           ;main.c: 61: volt = get_voltage(in);
  1055  00261A  C096  F041         	movff	main@in,get_voltage@ac_in
  1056  00261E  C097  F042         	movff	main@in+1,get_voltage@ac_in+1
  1057  002622  ECBD  F00C         	call	_get_voltage	;wreg free
  1058  002626  C041  F098         	movff	?_get_voltage,main@volt
  1059  00262A  C042  F099         	movff	?_get_voltage+1,main@volt+1
  1060  00262E  C043  F09A         	movff	?_get_voltage+2,main@volt+2
  1061  002632  C044  F09B         	movff	?_get_voltage+3,main@volt+3
  1062                           
  1063                           ;main.c: 62: R_I(128);
  1064  002636  0E80               	movlw	128
  1065  002638  EC3C  F00B         	call	_R_I
  1066                           
  1067                           ;main.c: 63: sprintf(message, "Voltaje: %0.2fV   ", volt);
  1068  00263C  0E80               	movlw	low main@message
  1069  00263E  6E4D               	movwf	sprintf@sp,c
  1070  002640  0E00               	movlw	high main@message
  1071  002642  6E4E               	movwf	sprintf@sp+1,c
  1072  002644  0E6C               	movlw	low STR_3
  1073  002646  6E4F               	movwf	sprintf@f,c
  1074  002648  0E7F               	movlw	high STR_3
  1075  00264A  6E50               	movwf	sprintf@f+1,c
  1076  00264C  C098  F051         	movff	main@volt,?_sprintf+4
  1077  002650  C099  F052         	movff	main@volt+1,?_sprintf+5
  1078  002654  C09A  F053         	movff	main@volt+2,?_sprintf+6
  1079  002658  C09B  F054         	movff	main@volt+3,?_sprintf+7
  1080  00265C  ECCE  F01A         	call	_sprintf	;wreg free
  1081                           
  1082                           ;main.c: 64: } else {
  1083  002660  D024               	goto	l3867
  1084  002662                     l3861:
  1085  002662  FFFF               	dw	65535	; assembler added errata NOP
  1086                           
  1087                           ; BSR set to: 0
  1088                           ;main.c: 65: temp = get_temp(in);
  1089  002664  C096  F045         	movff	main@in,get_temp@ac_in
  1090  002668  C097  F046         	movff	main@in+1,get_temp@ac_in+1
  1091  00266C  EC2A  F00F         	call	_get_temp	;wreg free
  1092  002670  C045  F09C         	movff	?_get_temp,main@temp
  1093  002674  C046  F09D         	movff	?_get_temp+1,main@temp+1
  1094  002678  C047  F09E         	movff	?_get_temp+2,main@temp+2
  1095  00267C  C048  F09F         	movff	?_get_temp+3,main@temp+3
  1096                           
  1097                           ;main.c: 66: R_I(192);
  1098  002680  0EC0               	movlw	192
  1099  002682  EC3C  F00B         	call	_R_I
  1100                           
  1101                           ;main.c: 67: sprintf(message, "Temp: %.0fC       ", temp);
  1102  002686  0E80               	movlw	low main@message
  1103  002688  6E4D               	movwf	sprintf@sp,c
  1104  00268A  0E00               	movlw	high main@message
  1105  00268C  6E4E               	movwf	sprintf@sp+1,c
  1106  00268E  0E59               	movlw	low STR_4
  1107  002690  6E4F               	movwf	sprintf@f,c
  1108  002692  0E7F               	movlw	high STR_4
  1109  002694  6E50               	movwf	sprintf@f+1,c
  1110  002696  C09C  F051         	movff	main@temp,?_sprintf+4
  1111  00269A  C09D  F052         	movff	main@temp+1,?_sprintf+5
  1112  00269E  C09E  F053         	movff	main@temp+2,?_sprintf+6
  1113  0026A2  C09F  F054         	movff	main@temp+3,?_sprintf+7
  1114  0026A6  ECCE  F01A         	call	_sprintf	;wreg free
  1115  0026AA                     l3867:
  1116  0026AA  FFFF               	dw	65535	; assembler added errata NOP
  1117                           
  1118                           ;main.c: 68: };main.c: 70: if (volt > 3.8) {
  1119  0026AC  0E33               	movlw	51
  1120  0026AE  6E01               	movwf	___flge@ff1,c
  1121  0026B0  0E33               	movlw	51
  1122  0026B2  6E02               	movwf	___flge@ff1+1,c
  1123  0026B4  0E73               	movlw	115
  1124  0026B6  6E03               	movwf	___flge@ff1+2,c
  1125  0026B8  0E40               	movlw	64
  1126  0026BA  6E04               	movwf	___flge@ff1+3,c
  1127  0026BC  C098  F005         	movff	main@volt,___flge@ff2
  1128  0026C0  C099  F006         	movff	main@volt+1,___flge@ff2+1
  1129  0026C4  C09A  F007         	movff	main@volt+2,___flge@ff2+2
  1130  0026C8  C09B  F008         	movff	main@volt+3,___flge@ff2+3
  1131  0026CC  ECBA  F00E         	call	___flge	;wreg free
  1132  0026D0  B0D8               	btfsc	status,0,c
  1133  0026D2  D015               	goto	l3877
  1134                           
  1135                           ;main.c: 71: R_I(128);
  1136  0026D4  0E80               	movlw	128
  1137  0026D6  EC3C  F00B         	call	_R_I
  1138                           
  1139                           ;main.c: 72: print_message_onLCD("    PELIGRO   ");
  1140  0026DA  0ED3               	movlw	low STR_5
  1141  0026DC  6E05               	movwf	print_message_onLCD@message,c
  1142  0026DE  0E7F               	movlw	high STR_5
  1143  0026E0  6E06               	movwf	print_message_onLCD@message+1,c
  1144  0026E2  EC8B  F00C         	call	_print_message_onLCD	;wreg free
  1145                           
  1146                           ;main.c: 73: R_I(192);
  1147  0026E6  0EC0               	movlw	192
  1148  0026E8  EC3C  F00B         	call	_R_I
  1149                           
  1150                           ;main.c: 74: print_message_onLCD("  ALTO VOLTAJE  ");
  1151  0026EC  0EA1               	movlw	low STR_6
  1152  0026EE  6E05               	movwf	print_message_onLCD@message,c
  1153  0026F0  0E7F               	movlw	high STR_6
  1154  0026F2  6E06               	movwf	print_message_onLCD@message+1,c
  1155  0026F4  EC8B  F00C         	call	_print_message_onLCD	;wreg free
  1156                           
  1157                           ;main.c: 75: light_the_bulb();
  1158  0026F8  EC1D  F00B         	call	_light_the_bulb	;wreg free
  1159                           
  1160                           ;main.c: 76: } else if (volt <= 0.29 && temp >= 61) {
  1161  0026FC  D071               	goto	l3903
  1162  0026FE                     l3877:
  1163  0026FE  FFFF               	dw	65535	; assembler added errata NOP
  1164  002700  0EE1               	movlw	225
  1165  002702  6E01               	movwf	___flge@ff1,c
  1166  002704  0E7A               	movlw	122
  1167  002706  6E02               	movwf	___flge@ff1+1,c
  1168  002708  0E94               	movlw	148
  1169  00270A  6E03               	movwf	___flge@ff1+2,c
  1170  00270C  0E3E               	movlw	62
  1171  00270E  6E04               	movwf	___flge@ff1+3,c
  1172  002710  C098  F005         	movff	main@volt,___flge@ff2
  1173  002714  C099  F006         	movff	main@volt+1,___flge@ff2+1
  1174  002718  C09A  F007         	movff	main@volt+2,___flge@ff2+2
  1175  00271C  C09B  F008         	movff	main@volt+3,___flge@ff2+3
  1176  002720  ECBA  F00E         	call	___flge	;wreg free
  1177  002724  A0D8               	btfss	status,0,c
  1178  002726  D029               	goto	l3889
  1179  002728  C09C  F001         	movff	main@temp,___flge@ff1
  1180  00272C  C09D  F002         	movff	main@temp+1,___flge@ff1+1
  1181  002730  C09E  F003         	movff	main@temp+2,___flge@ff1+2
  1182  002734  C09F  F004         	movff	main@temp+3,___flge@ff1+3
  1183  002738  0E00               	movlw	0
  1184  00273A  6E05               	movwf	___flge@ff2,c
  1185  00273C  0E00               	movlw	0
  1186  00273E  6E06               	movwf	___flge@ff2+1,c
  1187  002740  0E74               	movlw	116
  1188  002742  6E07               	movwf	___flge@ff2+2,c
  1189  002744  0E42               	movlw	66
  1190  002746  6E08               	movwf	___flge@ff2+3,c
  1191  002748  ECBA  F00E         	call	___flge	;wreg free
  1192  00274C  A0D8               	btfss	status,0,c
  1193  00274E  D015               	goto	l3889
  1194                           
  1195                           ;main.c: 77: R_I(128);
  1196  002750  0E80               	movlw	128
  1197  002752  EC3C  F00B         	call	_R_I
  1198                           
  1199                           ;main.c: 78: print_message_onLCD("     RIESGO     ");
  1200  002756  0E90               	movlw	low STR_7
  1201  002758  6E05               	movwf	print_message_onLCD@message,c
  1202  00275A  0E7F               	movlw	high STR_7
  1203  00275C  6E06               	movwf	print_message_onLCD@message+1,c
  1204  00275E  EC8B  F00C         	call	_print_message_onLCD	;wreg free
  1205                           
  1206                           ;main.c: 79: R_I(192);
  1207  002762  0EC0               	movlw	192
  1208  002764  EC3C  F00B         	call	_R_I
  1209                           
  1210                           ;main.c: 80: print_message_onLCD(" DE DESTRUCCION ");
  1211  002768  0EB2               	movlw	low STR_8
  1212  00276A  6E05               	movwf	print_message_onLCD@message,c
  1213  00276C  0E7F               	movlw	high STR_8
  1214  00276E  6E06               	movwf	print_message_onLCD@message+1,c
  1215  002770  EC8B  F00C         	call	_print_message_onLCD	;wreg free
  1216                           
  1217                           ;main.c: 81: start_engine();
  1218  002774  EC27  F00B         	call	_start_engine	;wreg free
  1219                           
  1220                           ;main.c: 82: } else if (temp < 5) {
  1221  002778  D033               	goto	l3903
  1222  00277A                     l3889:
  1223  00277A  FFFF               	dw	65535	; assembler added errata NOP
  1224  00277C  C09C  F001         	movff	main@temp,___flge@ff1
  1225  002780  C09D  F002         	movff	main@temp+1,___flge@ff1+1
  1226  002784  C09E  F003         	movff	main@temp+2,___flge@ff1+2
  1227  002788  C09F  F004         	movff	main@temp+3,___flge@ff1+3
  1228  00278C  0E00               	movlw	0
  1229  00278E  6E05               	movwf	___flge@ff2,c
  1230  002790  0E00               	movlw	0
  1231  002792  6E06               	movwf	___flge@ff2+1,c
  1232  002794  0EA0               	movlw	160
  1233  002796  6E07               	movwf	___flge@ff2+2,c
  1234  002798  0E40               	movlw	64
  1235  00279A  6E08               	movwf	___flge@ff2+3,c
  1236  00279C  ECBA  F00E         	call	___flge	;wreg free
  1237  0027A0  B0D8               	btfsc	status,0,c
  1238  0027A2  D015               	goto	l3899
  1239                           
  1240                           ;main.c: 83: R_I(128);
  1241  0027A4  0E80               	movlw	128
  1242  0027A6  EC3C  F00B         	call	_R_I
  1243                           
  1244                           ;main.c: 84: print_message_onLCD("     LLEGO     ");
  1245  0027AA  0EC3               	movlw	low STR_9
  1246  0027AC  6E05               	movwf	print_message_onLCD@message,c
  1247  0027AE  0E7F               	movlw	high STR_9
  1248  0027B0  6E06               	movwf	print_message_onLCD@message+1,c
  1249  0027B2  EC8B  F00C         	call	_print_message_onLCD	;wreg free
  1250                           
  1251                           ;main.c: 85: R_I(192);
  1252  0027B6  0EC0               	movlw	192
  1253  0027B8  EC3C  F00B         	call	_R_I
  1254                           
  1255                           ;main.c: 86: print_message_onLCD("     EL FIN     ");
  1256  0027BC  0E7F               	movlw	low STR_10
  1257  0027BE  6E05               	movwf	print_message_onLCD@message,c
  1258  0027C0  0E7F               	movlw	high STR_10
  1259  0027C2  6E06               	movwf	print_message_onLCD@message+1,c
  1260  0027C4  EC8B  F00C         	call	_print_message_onLCD	;wreg free
  1261                           
  1262                           ;main.c: 87: light_the_bulb_and_start_engine();
  1263  0027C8  EC22  F00B         	call	_light_the_bulb_and_start_engine	;wreg free
  1264                           
  1265                           ;main.c: 88: } else {
  1266  0027CC  D009               	goto	l3903
  1267  0027CE                     l3899:
  1268  0027CE  FFFF               	dw	65535	; assembler added errata NOP
  1269                           
  1270                           ;main.c: 89: print_message_onLCD(message);
  1271  0027D0  0E80               	movlw	low main@message
  1272  0027D2  6E05               	movwf	print_message_onLCD@message,c
  1273  0027D4  0E00               	movlw	high main@message
  1274  0027D6  6E06               	movwf	print_message_onLCD@message+1,c
  1275  0027D8  EC8B  F00C         	call	_print_message_onLCD	;wreg free
  1276                           
  1277                           ;main.c: 90: turn_of_everything();
  1278  0027DC  EC2C  F00B         	call	_turn_of_everything	;wreg free
  1279  0027E0                     l3903:
  1280  0027E0  FFFF               	dw	65535	; assembler added errata NOP
  1281                           
  1282                           ;main.c: 91: };main.c: 94: _delay((unsigned long)((10)*(4000000/4000.0)));
  1283  0027E2  0E0A               	movlw	10
  1284  0027E4  6E74               	movwf	??_main& (0+255),c
  1285  0027E6  0EBE               	movlw	190
  1286  0027E8                     u4467:
  1287  0027E8  FFFF               	dw	65535	; errata NOP
  1288  0027EA  2EE8               	decfsz	wreg,f,c
  1289  0027EC  D7FD               	bra	u4467
  1290  0027EE  2E74               	decfsz	??_main& (0+255),f,c
  1291  0027F0  D7FB               	bra	u4467
  1292  0027F2  D000               	nop2	
  1293                           
  1294                           ;main.c: 95: canal = canal ? 0 : 1;
  1295  0027F4  0100               	movlb	0	; () banked
  1296  0027F6  51A0               	movf	main@canal& (0+255),w,b
  1297  0027F8  A4D8               	btfss	status,2,c
  1298  0027FA  D002               	goto	u4410
  1299  0027FC  0E01               	movlw	1
  1300  0027FE  D6D6               	goto	L2
  1301  002800                     u4410:
  1302  002800  FFFF               	dw	65535	; assembler added errata NOP
  1303  002802  0E00               	movlw	0
  1304  002804  D6D3               	goto	L2
  1305  002806                     __end_of_main:
  1306                           	opt callstack 0
  1307                           
  1308 ;; *************** function _turn_of_everything *****************
  1309 ;; Defined at:
  1310 ;;		line 172 in file "main.c"
  1311 ;; Parameters:    Size  Location     Type
  1312 ;;		None
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;		None
  1315 ;; Return value:  Size  Location     Type
  1316 ;;                  1    wreg      void 
  1317 ;; Registers used:
  1318 ;;		wreg, status,2
  1319 ;; Tracked objects:
  1320 ;;		On entry : 0/0
  1321 ;;		On exit  : 0/0
  1322 ;;		Unchanged: 0/0
  1323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1324 ;;      Params:         0       0       0       0       0       0       0
  1325 ;;      Locals:         0       0       0       0       0       0       0
  1326 ;;      Temps:          0       0       0       0       0       0       0
  1327 ;;      Totals:         0       0       0       0       0       0       0
  1328 ;;Total ram usage:        0 bytes
  1329 ;; Hardware stack levels used:    1
  1330 ;; This function calls:
  1331 ;;		Nothing
  1332 ;; This function is called by:
  1333 ;;		_main
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           	psect	text1
  1338  001658                     __ptext1:
  1339                           	opt callstack 0
  1340  001658                     _turn_of_everything:
  1341                           	opt callstack 0
  1342  001658  FFFF               	dw	65535	; assembler added errata NOP
  1343                           
  1344                           ;main.c: 173: LATB = 0;
  1345                           
  1346                           ; BSR set to: 0
  1347                           ;incstack = 0
  1348  00165A  0E00               	movlw	0
  1349  00165C  6E8A               	movwf	3978,c	;volatile
  1350  00165E  0012               	return		;funcret
  1351  001660  FFFF               	dw	65535	; errata NOP
  1352  001662                     __end_of_turn_of_everything:
  1353                           	opt callstack 0
  1354                           
  1355 ;; *************** function _start_engine *****************
  1356 ;; Defined at:
  1357 ;;		line 180 in file "main.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;		None
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;		None
  1362 ;; Return value:  Size  Location     Type
  1363 ;;                  1    wreg      void 
  1364 ;; Registers used:
  1365 ;;		wreg, status,2
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1371 ;;      Params:         0       0       0       0       0       0       0
  1372 ;;      Locals:         0       0       0       0       0       0       0
  1373 ;;      Temps:          0       0       0       0       0       0       0
  1374 ;;      Totals:         0       0       0       0       0       0       0
  1375 ;;Total ram usage:        0 bytes
  1376 ;; Hardware stack levels used:    1
  1377 ;; This function calls:
  1378 ;;		Nothing
  1379 ;; This function is called by:
  1380 ;;		_main
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384                           	psect	text2
  1385  00164E                     __ptext2:
  1386                           	opt callstack 0
  1387  00164E                     _start_engine:
  1388                           	opt callstack 0
  1389  00164E  FFFF               	dw	65535	; assembler added errata NOP
  1390                           
  1391                           ;main.c: 181: LATB = 2;
  1392                           
  1393                           ;incstack = 0
  1394  001650  0E02               	movlw	2
  1395  001652  6E8A               	movwf	3978,c	;volatile
  1396  001654  0012               	return		;funcret
  1397  001656  FFFF               	dw	65535	; errata NOP
  1398  001658                     __end_of_start_engine:
  1399                           	opt callstack 0
  1400                           
  1401 ;; *************** function _sprintf *****************
  1402 ;; Defined at:
  1403 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;  sp              2   76[COMRAM] PTR unsigned char 
  1406 ;;		 -> main@message(20), 
  1407 ;;  f               2   78[COMRAM] PTR const unsigned char 
  1408 ;;		 -> STR_4(19), STR_3(19), 
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;  fval            4  108[COMRAM] PTR const unsigned char 
  1411 ;;  tmpval          4   98[COMRAM] struct .
  1412 ;;  val             4   94[COMRAM] unsigned long 
  1413 ;;  cp              3    0        PTR const unsigned char 
  1414 ;;  prec            2  112[COMRAM] int 
  1415 ;;  width           2  106[COMRAM] int 
  1416 ;;  flag            2  104[COMRAM] unsigned short 
  1417 ;;  eexp            2  102[COMRAM] int 
  1418 ;;  ap              2   92[COMRAM] PTR void [1]
  1419 ;;		 -> ?_sprintf(2), 
  1420 ;;  len             2    0        unsigned int 
  1421 ;;  c               1  114[COMRAM] unsigned char 
  1422 ;;  d               1    0        unsigned char 
  1423 ;; Return value:  Size  Location     Type
  1424 ;;                  2   76[COMRAM] int 
  1425 ;; Registers used:
  1426 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1427 ;; Tracked objects:
  1428 ;;		On entry : 0/0
  1429 ;;		On exit  : 0/0
  1430 ;;		Unchanged: 0/0
  1431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1432 ;;      Params:         8       0       0       0       0       0       0
  1433 ;;      Locals:        27       0       0       0       0       0       0
  1434 ;;      Temps:          4       0       0       0       0       0       0
  1435 ;;      Totals:        39       0       0       0       0       0       0
  1436 ;;Total ram usage:       39 bytes
  1437 ;; Hardware stack levels used:    1
  1438 ;; Hardware stack levels required when called:    2
  1439 ;; This function calls:
  1440 ;;		___awdiv
  1441 ;;		___fladd
  1442 ;;		___fleq
  1443 ;;		___flge
  1444 ;;		___flmul
  1445 ;;		___flneg
  1446 ;;		___flsub
  1447 ;;		___fltol
  1448 ;;		___lldiv
  1449 ;;		___llmod
  1450 ;;		___wmul
  1451 ;;		___xxtofl
  1452 ;;		__div_to_l_
  1453 ;;		__tdiv_to_l_
  1454 ;;		_fround
  1455 ;;		_isdigit
  1456 ;;		_scale
  1457 ;; This function is called by:
  1458 ;;		_main
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462                           	psect	text3
  1463  00359C                     __ptext3:
  1464                           	opt callstack 0
  1465  00359C                     _sprintf:
  1466                           	opt callstack 0
  1467  00359C  FFFF               	dw	65535	; assembler added errata NOP
  1468                           
  1469                           ;doprnt.c: 502: va_list ap;;doprnt.c: 507: char c;;doprnt.c: 509: int width;;doprnt.c: 5
      +                          12: int prec;;doprnt.c: 520: unsigned short flag;;doprnt.c: 527: char d;;doprnt.c: 528: 
      +                          double fval;;doprnt.c: 529: int eexp;;doprnt.c: 535: union {;doprnt.c: 536: unsigned lon
      +                          g vd;;doprnt.c: 537: double integ;;doprnt.c: 538: } tmpval;;doprnt.c: 540: unsigned long
      +                           val;;doprnt.c: 541: unsigned len;;doprnt.c: 542: const char * cp;;doprnt.c: 545: *ap = 
      +                          __va_start();
  1470                           
  1471                           ;incstack = 0
  1472  00359E  0E51               	movlw	low (?_sprintf+4)
  1473  0035A0  6E5D               	movwf	sprintf@ap,c
  1474  0035A2  0E00               	movlw	high (?_sprintf+4)
  1475  0035A4  6E5E               	movwf	sprintf@ap+1,c
  1476                           
  1477                           ;doprnt.c: 548: while((c = *f++)) {
  1478  0035A6  EFE8  F01F         	goto	l3801
  1479  0035AA                     l3509:
  1480  0035AA  FFFF               	dw	65535	; assembler added errata NOP
  1481                           
  1482                           ;doprnt.c: 550: if(c != '%')
  1483  0035AC  0E25               	movlw	37
  1484  0035AE  1873               	xorwf	sprintf@c,w,c
  1485  0035B0  B4D8               	btfsc	status,2,c
  1486  0035B2  D00B               	goto	l3515
  1487                           
  1488                           ;doprnt.c: 552: {;doprnt.c: 553: ((*sp++ = (c)));
  1489  0035B4  C04D  FFD9         	movff	sprintf@sp,fsr2l
  1490  0035B8  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  1491  0035BC  C073  FFDF         	movff	sprintf@c,indf2
  1492  0035C0                     l3513:
  1493  0035C0  FFFF               	dw	65535	; assembler added errata NOP
  1494  0035C2  4A4D               	infsnz	sprintf@sp,f,c
  1495  0035C4  2A4E               	incf	sprintf@sp+1,f,c
  1496                           
  1497                           ;doprnt.c: 554: continue;
  1498  0035C6  EFE8  F01F         	goto	l3801
  1499  0035CA                     l3515:
  1500  0035CA  FFFF               	dw	65535	; assembler added errata NOP
  1501                           
  1502                           ;doprnt.c: 555: };doprnt.c: 558: width = 0;
  1503  0035CC  0E00               	movlw	0
  1504  0035CE  6E6C               	movwf	sprintf@width+1,c
  1505  0035D0  0E00               	movlw	0
  1506  0035D2  6E6B               	movwf	sprintf@width,c
  1507                           
  1508                           ;doprnt.c: 560: flag = 0;
  1509  0035D4  0E00               	movlw	0
  1510  0035D6  6E6A               	movwf	sprintf@flag+1,c
  1511  0035D8  0E00               	movlw	0
  1512  0035DA  6E69               	movwf	sprintf@flag,c
  1513  0035DC  D004               	goto	l3521
  1514  0035DE                     l3517:
  1515  0035DE  FFFF               	dw	65535	; assembler added errata NOP
  1516                           
  1517                           ;doprnt.c: 592: flag |= 0x04;
  1518  0035E0  8469               	bsf	sprintf@flag,2,c
  1519                           
  1520                           ;doprnt.c: 593: f++;
  1521  0035E2  4A4F               	infsnz	sprintf@f,f,c
  1522  0035E4  2A50               	incf	sprintf@f+1,f,c
  1523  0035E6                     l3521:
  1524  0035E6  FFFF               	dw	65535	; assembler added errata NOP
  1525  0035E8  C04F  FFF6         	movff	sprintf@f,tblptrl
  1526  0035EC  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1527  0035F0                     	if	0	;tblptru may be non-zero
  1528  0035F0                     	endif
  1529  0035F0                     	if	0	;tblptru may be non-zero
  1530  0035F0                     	endif
  1531  0035F0  0008               	tblrd		*
  1532  0035F2  FFFF               	dw	65535	; errata NOP
  1533  0035F4  50F5               	movf	tablat,w,c
  1534                           
  1535                           ; Switch size 1, requested type "simple"
  1536                           ; Number of cases is 1, Range of values is 48 to 48
  1537                           ; switch strategies available:
  1538                           ; Name         Instructions Cycles
  1539                           ; simple_byte            4     3 (average)
  1540                           ;	Chosen strategy is simple_byte
  1541  0035F6  0A30               	xorlw	48	; case 48
  1542  0035F8  B4D8               	btfsc	status,2,c
  1543  0035FA  D7F1               	goto	l3517
  1544                           
  1545                           ;doprnt.c: 609: if(isdigit((unsigned)*f)) {
  1546  0035FC  C04F  FFF6         	movff	sprintf@f,tblptrl
  1547  003600  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1548  003604                     	if	0	;tblptru may be non-zero
  1549  003604                     	endif
  1550  003604                     	if	0	;tblptru may be non-zero
  1551  003604                     	endif
  1552  003604  0008               	tblrd		*
  1553  003606  FFFF               	dw	65535	; errata NOP
  1554  003608  50F5               	movf	tablat,w,c
  1555  00360A  EC58  F00B         	call	_isdigit
  1556  00360E  A0D8               	btfss	status,0,c
  1557  003610  D035               	goto	u3840
  1558                           
  1559                           ;doprnt.c: 610: width = 0;
  1560  003612  0E00               	movlw	0
  1561  003614  6E6C               	movwf	sprintf@width+1,c
  1562  003616  0E00               	movlw	0
  1563  003618  6E6B               	movwf	sprintf@width,c
  1564  00361A                     l3527:
  1565  00361A  FFFF               	dw	65535	; assembler added errata NOP
  1566                           
  1567                           ;doprnt.c: 612: width *= 10;
  1568  00361C  C06B  F001         	movff	sprintf@width,___wmul@multiplier
  1569  003620  C06C  F002         	movff	sprintf@width+1,___wmul@multiplier+1
  1570  003624  0E00               	movlw	0
  1571  003626  6E04               	movwf	___wmul@multiplicand+1,c
  1572  003628  0E0A               	movlw	10
  1573  00362A  6E03               	movwf	___wmul@multiplicand,c
  1574  00362C  EC6A  F00B         	call	___wmul	;wreg free
  1575  003630  C001  F06B         	movff	?___wmul,sprintf@width
  1576  003634  C002  F06C         	movff	?___wmul+1,sprintf@width+1
  1577                           
  1578                           ;doprnt.c: 613: width += *f++ - '0';
  1579  003638  0ED0               	movlw	208
  1580  00363A  6E55               	movwf	??_sprintf& (0+255),c
  1581  00363C  0EFF               	movlw	255
  1582  00363E  6E56               	movwf	(??_sprintf+1)& (0+255),c
  1583  003640  C04F  FFF6         	movff	sprintf@f,tblptrl
  1584  003644  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1585  003648                     	if	0	;tblptru may be non-zero
  1586  003648                     	endif
  1587  003648                     	if	0	;tblptru may be non-zero
  1588  003648                     	endif
  1589  003648  0008               	tblrd		*
  1590  00364A  FFFF               	dw	65535	; errata NOP
  1591  00364C  50F5               	movf	tablat,w,c
  1592  00364E  6E57               	movwf	(??_sprintf+2)& (0+255),c
  1593  003650  6A58               	clrf	(??_sprintf+3)& (0+255),c
  1594  003652  5055               	movf	??_sprintf,w,c
  1595  003654  2657               	addwf	??_sprintf+2,f,c
  1596  003656  5056               	movf	??_sprintf+1,w,c
  1597  003658  2258               	addwfc	??_sprintf+3,f,c
  1598  00365A  5057               	movf	??_sprintf+2,w,c
  1599  00365C  266B               	addwf	sprintf@width,f,c
  1600  00365E  5058               	movf	??_sprintf+3,w,c
  1601  003660  226C               	addwfc	sprintf@width+1,f,c
  1602  003662  4A4F               	infsnz	sprintf@f,f,c
  1603  003664  2A50               	incf	sprintf@f+1,f,c
  1604                           
  1605                           ;doprnt.c: 614: } while(isdigit((unsigned)*f));
  1606  003666  C04F  FFF6         	movff	sprintf@f,tblptrl
  1607  00366A  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1608  00366E                     	if	0	;tblptru may be non-zero
  1609  00366E                     	endif
  1610  00366E                     	if	0	;tblptru may be non-zero
  1611  00366E                     	endif
  1612  00366E  0008               	tblrd		*
  1613  003670  FFFF               	dw	65535	; errata NOP
  1614  003672  50F5               	movf	tablat,w,c
  1615  003674  EC58  F00B         	call	_isdigit
  1616  003678  B0D8               	btfsc	status,0,c
  1617  00367A  D7CF               	goto	l3527
  1618  00367C                     u3840:
  1619  00367C  FFFF               	dw	65535	; assembler added errata NOP
  1620                           
  1621                           ;doprnt.c: 620: };doprnt.c: 623: if(*f == '.') {
  1622  00367E  C04F  FFF6         	movff	sprintf@f,tblptrl
  1623  003682  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1624  003686                     	if	0	;tblptru may be non-zero
  1625  003686                     	endif
  1626  003686                     	if	0	;tblptru may be non-zero
  1627  003686                     	endif
  1628  003686  0008               	tblrd		*
  1629  003688  FFFF               	dw	65535	; errata NOP
  1630  00368A  50F5               	movf	tablat,w,c
  1631  00368C  0A2E               	xorlw	46
  1632  00368E  A4D8               	btfss	status,2,c
  1633  003690  D032               	goto	l3547
  1634                           
  1635                           ;doprnt.c: 624: flag |= 0x4000;
  1636  003692  8C6A               	bsf	sprintf@flag+1,6,c
  1637                           
  1638                           ;doprnt.c: 625: f++;
  1639  003694  4A4F               	infsnz	sprintf@f,f,c
  1640  003696  2A50               	incf	sprintf@f+1,f,c
  1641                           
  1642                           ;doprnt.c: 639: {;doprnt.c: 640: prec = 0;
  1643  003698  0E00               	movlw	0
  1644  00369A  6E72               	movwf	sprintf@prec+1,c
  1645  00369C  0E00               	movlw	0
  1646  00369E  6E71               	movwf	sprintf@prec,c
  1647                           
  1648                           ;doprnt.c: 641: while(isdigit((unsigned)*f))
  1649  0036A0  D01D               	goto	l3545
  1650  0036A2                     l3541:
  1651  0036A2  FFFF               	dw	65535	; assembler added errata NOP
  1652                           
  1653                           ;doprnt.c: 642: prec = prec*10 + *f++ - '0';
  1654  0036A4  C071  F001         	movff	sprintf@prec,___wmul@multiplier
  1655  0036A8  C072  F002         	movff	sprintf@prec+1,___wmul@multiplier+1
  1656  0036AC  0E00               	movlw	0
  1657  0036AE  6E04               	movwf	___wmul@multiplicand+1,c
  1658  0036B0  0E0A               	movlw	10
  1659  0036B2  6E03               	movwf	___wmul@multiplicand,c
  1660  0036B4  EC6A  F00B         	call	___wmul	;wreg free
  1661  0036B8  C04F  FFF6         	movff	sprintf@f,tblptrl
  1662  0036BC  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1663  0036C0                     	if	0	;tblptru may be non-zero
  1664  0036C0                     	endif
  1665  0036C0                     	if	0	;tblptru may be non-zero
  1666  0036C0                     	endif
  1667  0036C0  0008               	tblrd		*
  1668  0036C2  FFFF               	dw	65535	; errata NOP
  1669  0036C4  50F5               	movf	tablat,w,c
  1670  0036C6  2601               	addwf	?___wmul,f,c
  1671  0036C8  0E00               	movlw	0
  1672  0036CA  2202               	addwfc	?___wmul+1,f,c
  1673  0036CC  0ED0               	movlw	208
  1674  0036CE  2401               	addwf	?___wmul,w,c
  1675  0036D0  6E71               	movwf	sprintf@prec,c
  1676  0036D2  0EFF               	movlw	255
  1677  0036D4  2002               	addwfc	?___wmul+1,w,c
  1678  0036D6  6E72               	movwf	sprintf@prec+1,c
  1679  0036D8  4A4F               	infsnz	sprintf@f,f,c
  1680  0036DA  2A50               	incf	sprintf@f+1,f,c
  1681  0036DC                     l3545:
  1682  0036DC  FFFF               	dw	65535	; assembler added errata NOP
  1683  0036DE  C04F  FFF6         	movff	sprintf@f,tblptrl
  1684  0036E2  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1685  0036E6                     	if	0	;tblptru may be non-zero
  1686  0036E6                     	endif
  1687  0036E6                     	if	0	;tblptru may be non-zero
  1688  0036E6                     	endif
  1689  0036E6  0008               	tblrd		*
  1690  0036E8  FFFF               	dw	65535	; errata NOP
  1691  0036EA  50F5               	movf	tablat,w,c
  1692  0036EC  EC58  F00B         	call	_isdigit
  1693  0036F0  A0D8               	btfss	status,0,c
  1694  0036F2  D00B               	goto	l3555
  1695  0036F4  D7D6               	goto	l3541
  1696  0036F6                     l3547:
  1697  0036F6  FFFF               	dw	65535	; assembler added errata NOP
  1698                           
  1699                           ;doprnt.c: 645: prec = 0;
  1700  0036F8  0E00               	movlw	0
  1701  0036FA  6E72               	movwf	sprintf@prec+1,c
  1702  0036FC  0E00               	movlw	0
  1703  0036FE  6E71               	movwf	sprintf@prec,c
  1704                           
  1705                           ;doprnt.c: 647: flag |= 0x1000;
  1706  003700  886A               	bsf	sprintf@flag+1,4,c
  1707  003702  D003               	goto	l3555
  1708  003704                     l3551:
  1709  003704  FFFF               	dw	65535	; assembler added errata NOP
  1710                           
  1711                           ;doprnt.c: 682: flag |= 0x400;
  1712  003706  846A               	bsf	sprintf@flag+1,2,c
  1713                           
  1714                           ;doprnt.c: 683: break;
  1715  003708  D015               	goto	l3557
  1716  00370A                     l3555:
  1717  00370A  FFFF               	dw	65535	; assembler added errata NOP
  1718  00370C  C04F  FFF6         	movff	sprintf@f,tblptrl
  1719  003710  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1720  003714  4A4F               	infsnz	sprintf@f,f,c
  1721  003716  2A50               	incf	sprintf@f+1,f,c
  1722  003718                     	if	0	;tblptru may be non-zero
  1723  003718                     	endif
  1724  003718                     	if	0	;tblptru may be non-zero
  1725  003718                     	endif
  1726  003718  0008               	tblrd		*
  1727  00371A  FFFF               	dw	65535	; errata NOP
  1728  00371C  CFF5 F073          	movff	tablat,sprintf@c
  1729  003720  5073               	movf	sprintf@c,w,c
  1730                           
  1731                           ; Switch size 1, requested type "simple"
  1732                           ; Number of cases is 2, Range of values is 0 to 102
  1733                           ; switch strategies available:
  1734                           ; Name         Instructions Cycles
  1735                           ; simple_byte            7     4 (average)
  1736                           ;	Chosen strategy is simple_byte
  1737  003722  0A00               	xorlw	0	; case 0
  1738  003724  B4D8               	btfsc	status,2,c
  1739  003726  EFF7  F01F         	goto	u4310
  1740  00372A  0A66               	xorlw	102	; case 102
  1741  00372C  B4D8               	btfsc	status,2,c
  1742  00372E  D7EA               	goto	l3551
  1743  003730  EFE8  F01F         	goto	l3801
  1744  003734                     l3557:
  1745  003734  FFFF               	dw	65535	; assembler added errata NOP
  1746                           
  1747                           ;doprnt.c: 844: if(flag & (0x700)) {
  1748  003736  0E07               	movlw	7
  1749  003738  146A               	andwf	sprintf@flag+1,w,c
  1750  00373A  B4D8               	btfsc	status,2,c
  1751  00373C  D38B               	goto	l3737
  1752                           
  1753                           ;doprnt.c: 846: if(flag & 0x1000)
  1754  00373E  A86A               	btfss	sprintf@flag+1,4,c
  1755  003740  D004               	goto	l3563
  1756                           
  1757                           ;doprnt.c: 848: prec = 6;
  1758  003742  0E00               	movlw	0
  1759  003744  6E72               	movwf	sprintf@prec+1,c
  1760  003746  0E06               	movlw	6
  1761  003748  6E71               	movwf	sprintf@prec,c
  1762  00374A                     l3563:
  1763  00374A  FFFF               	dw	65535	; assembler added errata NOP
  1764                           
  1765                           ;doprnt.c: 849: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1766  00374C  C05D  FFD9         	movff	sprintf@ap,fsr2l
  1767  003750  C05E  FFDA         	movff	sprintf@ap+1,fsr2h
  1768  003754  CFDE F06D          	movff	postinc2,sprintf@fval
  1769  003758  CFDE F06E          	movff	postinc2,sprintf@fval+1
  1770  00375C  CFDE F06F          	movff	postinc2,sprintf@fval+2
  1771  003760  CFDE F070          	movff	postinc2,sprintf@fval+3
  1772  003764  0E04               	movlw	4
  1773  003766  265D               	addwf	sprintf@ap,f,c
  1774  003768  0E00               	movlw	0
  1775  00376A  225E               	addwfc	sprintf@ap+1,f,c
  1776                           
  1777                           ;doprnt.c: 850: if(fval < 0.0) {
  1778  00376C  AE70               	btfss	sprintf@fval+3,7,c
  1779  00376E  D014               	goto	l3573
  1780                           
  1781                           ;doprnt.c: 851: fval = -fval;
  1782  003770  C06D  F001         	movff	sprintf@fval,___flneg@f1
  1783  003774  C06E  F002         	movff	sprintf@fval+1,___flneg@f1+1
  1784  003778  C06F  F003         	movff	sprintf@fval+2,___flneg@f1+2
  1785  00377C  C070  F004         	movff	sprintf@fval+3,___flneg@f1+3
  1786  003780  EC7F  F00B         	call	___flneg	;wreg free
  1787  003784  C001  F06D         	movff	?___flneg,sprintf@fval
  1788  003788  C002  F06E         	movff	?___flneg+1,sprintf@fval+1
  1789  00378C  C003  F06F         	movff	?___flneg+2,sprintf@fval+2
  1790  003790  C004  F070         	movff	?___flneg+3,sprintf@fval+3
  1791                           
  1792                           ;doprnt.c: 852: flag |= 0x03;
  1793  003794  0E03               	movlw	3
  1794  003796  1269               	iorwf	sprintf@flag,f,c
  1795  003798                     l3573:
  1796  003798  FFFF               	dw	65535	; assembler added errata NOP
  1797                           
  1798                           ;doprnt.c: 853: };doprnt.c: 854: eexp = 0;
  1799  00379A  0E00               	movlw	0
  1800  00379C  6E68               	movwf	sprintf@eexp+1,c
  1801  00379E  0E00               	movlw	0
  1802  0037A0  6E67               	movwf	sprintf@eexp,c
  1803                           
  1804                           ;doprnt.c: 855: if( fval!=0) {
  1805  0037A2  C06D  F001         	movff	sprintf@fval,___fleq@ff1
  1806  0037A6  C06E  F002         	movff	sprintf@fval+1,___fleq@ff1+1
  1807  0037AA  C06F  F003         	movff	sprintf@fval+2,___fleq@ff1+2
  1808  0037AE  C070  F004         	movff	sprintf@fval+3,___fleq@ff1+3
  1809  0037B2  0E00               	movlw	0
  1810  0037B4  6E05               	movwf	___fleq@ff2,c
  1811  0037B6  0E00               	movlw	0
  1812  0037B8  6E06               	movwf	___fleq@ff2+1,c
  1813  0037BA  0E00               	movlw	0
  1814  0037BC  6E07               	movwf	___fleq@ff2+2,c
  1815  0037BE  0E00               	movlw	0
  1816  0037C0  6E08               	movwf	___fleq@ff2+3,c
  1817  0037C2  ECB9  F00D         	call	___fleq	;wreg free
  1818  0037C6  B0D8               	btfsc	status,0,c
  1819  0037C8  D081               	goto	l3601
  1820                           
  1821                           ;doprnt.c: 856: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
  1822  0037CA  346F               	rlcf	sprintf@fval+2,w,c
  1823  0037CC  3470               	rlcf	sprintf@fval+3,w,c
  1824  0037CE  0F82               	addlw	130
  1825  0037D0  6E67               	movwf	sprintf@eexp,c
  1826  0037D2  6A68               	clrf	sprintf@eexp+1,c
  1827  0037D4  0EFF               	movlw	255
  1828  0037D6  2268               	addwfc	sprintf@eexp+1,f,c
  1829                           
  1830                           ;doprnt.c: 857: eexp--;
  1831  0037D8  0667               	decf	sprintf@eexp,f,c
  1832  0037DA  A0D8               	btfss	status,0,c
  1833  0037DC  0668               	decf	sprintf@eexp+1,f,c
  1834                           
  1835                           ;doprnt.c: 858: eexp *= 3;
  1836  0037DE  C067  F001         	movff	sprintf@eexp,___wmul@multiplier
  1837  0037E2  C068  F002         	movff	sprintf@eexp+1,___wmul@multiplier+1
  1838  0037E6  0E00               	movlw	0
  1839  0037E8  6E04               	movwf	___wmul@multiplicand+1,c
  1840  0037EA  0E03               	movlw	3
  1841  0037EC  6E03               	movwf	___wmul@multiplicand,c
  1842  0037EE  EC6A  F00B         	call	___wmul	;wreg free
  1843  0037F2  C001  F067         	movff	?___wmul,sprintf@eexp
  1844  0037F6  C002  F068         	movff	?___wmul+1,sprintf@eexp+1
  1845                           
  1846                           ;doprnt.c: 859: eexp /= 10;
  1847  0037FA  C067  F007         	movff	sprintf@eexp,___awdiv@dividend
  1848  0037FE  C068  F008         	movff	sprintf@eexp+1,___awdiv@dividend+1
  1849  003802  0E00               	movlw	0
  1850  003804  6E0A               	movwf	___awdiv@divisor+1,c
  1851  003806  0E0A               	movlw	10
  1852  003808  6E09               	movwf	___awdiv@divisor,c
  1853  00380A  EC04  F00E         	call	___awdiv	;wreg free
  1854  00380E  C007  F067         	movff	?___awdiv,sprintf@eexp
  1855  003812  C008  F068         	movff	?___awdiv+1,sprintf@eexp+1
  1856                           
  1857                           ;doprnt.c: 860: if(eexp < 0)
  1858  003816  AE68               	btfss	sprintf@eexp+1,7,c
  1859  003818  D003               	goto	l3589
  1860                           
  1861                           ;doprnt.c: 861: eexp--;
  1862  00381A  0667               	decf	sprintf@eexp,f,c
  1863  00381C  A0D8               	btfss	status,0,c
  1864  00381E  0668               	decf	sprintf@eexp+1,f,c
  1865  003820                     l3589:
  1866  003820  FFFF               	dw	65535	; assembler added errata NOP
  1867                           
  1868                           ;doprnt.c: 865: tmpval.integ = scale(-eexp);
  1869  003822  5067               	movf	sprintf@eexp,w,c
  1870  003824  0800               	sublw	0
  1871  003826  ECC6  F018         	call	_scale
  1872  00382A  C028  F063         	movff	?_scale,sprintf@tmpval
  1873  00382E  C029  F064         	movff	?_scale+1,sprintf@tmpval+1
  1874  003832  C02A  F065         	movff	?_scale+2,sprintf@tmpval+2
  1875  003836  C02B  F066         	movff	?_scale+3,sprintf@tmpval+3
  1876                           
  1877                           ;doprnt.c: 866: tmpval.integ *= fval;
  1878  00383A  C063  F00F         	movff	sprintf@tmpval,___flmul@b
  1879  00383E  C064  F010         	movff	sprintf@tmpval+1,___flmul@b+1
  1880  003842  C065  F011         	movff	sprintf@tmpval+2,___flmul@b+2
  1881  003846  C066  F012         	movff	sprintf@tmpval+3,___flmul@b+3
  1882  00384A  C06D  F013         	movff	sprintf@fval,___flmul@a
  1883  00384E  C06E  F014         	movff	sprintf@fval+1,___flmul@a+1
  1884  003852  C06F  F015         	movff	sprintf@fval+2,___flmul@a+2
  1885  003856  C070  F016         	movff	sprintf@fval+3,___flmul@a+3
  1886  00385A  EC05  F017         	call	___flmul	;wreg free
  1887  00385E  C00F  F063         	movff	?___flmul,sprintf@tmpval
  1888  003862  C010  F064         	movff	?___flmul+1,sprintf@tmpval+1
  1889  003866  C011  F065         	movff	?___flmul+2,sprintf@tmpval+2
  1890  00386A  C012  F066         	movff	?___flmul+3,sprintf@tmpval+3
  1891                           
  1892                           ;doprnt.c: 867: if(tmpval.integ < 1.0)
  1893  00386E  C063  F001         	movff	sprintf@tmpval,___flge@ff1
  1894  003872  C064  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  1895  003876  C065  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  1896  00387A  C066  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  1897  00387E  0E00               	movlw	0
  1898  003880  6E05               	movwf	___flge@ff2,c
  1899  003882  0E00               	movlw	0
  1900  003884  6E06               	movwf	___flge@ff2+1,c
  1901  003886  0E80               	movlw	128
  1902  003888  6E07               	movwf	___flge@ff2+2,c
  1903  00388A  0E3F               	movlw	63
  1904  00388C  6E08               	movwf	___flge@ff2+3,c
  1905  00388E  ECBA  F00E         	call	___flge	;wreg free
  1906  003892  B0D8               	btfsc	status,0,c
  1907  003894  D004               	goto	l3597
  1908                           
  1909                           ;doprnt.c: 868: eexp--;
  1910  003896  0667               	decf	sprintf@eexp,f,c
  1911  003898  A0D8               	btfss	status,0,c
  1912  00389A  0668               	decf	sprintf@eexp+1,f,c
  1913  00389C  D017               	goto	l3601
  1914  00389E                     l3597:
  1915  00389E  FFFF               	dw	65535	; assembler added errata NOP
  1916                           
  1917                           ;doprnt.c: 869: else if(tmpval.integ >= 10.0)
  1918  0038A0  C063  F001         	movff	sprintf@tmpval,___flge@ff1
  1919  0038A4  C064  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  1920  0038A8  C065  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  1921  0038AC  C066  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  1922  0038B0  0E00               	movlw	0
  1923  0038B2  6E05               	movwf	___flge@ff2,c
  1924  0038B4  0E00               	movlw	0
  1925  0038B6  6E06               	movwf	___flge@ff2+1,c
  1926  0038B8  0E20               	movlw	32
  1927  0038BA  6E07               	movwf	___flge@ff2+2,c
  1928  0038BC  0E41               	movlw	65
  1929  0038BE  6E08               	movwf	___flge@ff2+3,c
  1930  0038C0  ECBA  F00E         	call	___flge	;wreg free
  1931  0038C4  A0D8               	btfss	status,0,c
  1932  0038C6  D002               	goto	l3601
  1933                           
  1934                           ;doprnt.c: 870: eexp++;
  1935  0038C8  4A67               	infsnz	sprintf@eexp,f,c
  1936  0038CA  2A68               	incf	sprintf@eexp+1,f,c
  1937  0038CC                     l3601:
  1938  0038CC  FFFF               	dw	65535	; assembler added errata NOP
  1939                           
  1940                           ;doprnt.c: 871: };doprnt.c: 1131: if(prec <= 12)
  1941  0038CE  BE72               	btfsc	sprintf@prec+1,7,c
  1942  0038D0  D006               	goto	u3940
  1943  0038D2  5072               	movf	sprintf@prec+1,w,c
  1944  0038D4  E122               	bnz	l3605
  1945  0038D6  0E0D               	movlw	13
  1946  0038D8  5C71               	subwf	sprintf@prec,w,c
  1947  0038DA  B0D8               	btfsc	status,0,c
  1948  0038DC  D01E               	goto	l3605
  1949  0038DE                     u3940:
  1950  0038DE  FFFF               	dw	65535	; assembler added errata NOP
  1951                           
  1952                           ;doprnt.c: 1132: fval += fround((unsigned int)prec);
  1953  0038E0  C06D  F035         	movff	sprintf@fval,___fladd@b
  1954  0038E4  C06E  F036         	movff	sprintf@fval+1,___fladd@b+1
  1955  0038E8  C06F  F037         	movff	sprintf@fval+2,___fladd@b+2
  1956  0038EC  C070  F038         	movff	sprintf@fval+3,___fladd@b+3
  1957  0038F0  5071               	movf	sprintf@prec,w,c
  1958  0038F2  EC5C  F011         	call	_fround
  1959  0038F6  C028  F039         	movff	?_fround,___fladd@a
  1960  0038FA  C029  F03A         	movff	?_fround+1,___fladd@a+1
  1961  0038FE  C02A  F03B         	movff	?_fround+2,___fladd@a+2
  1962  003902  C02B  F03C         	movff	?_fround+3,___fladd@a+3
  1963  003906  EC63  F015         	call	___fladd	;wreg free
  1964  00390A  C035  F06D         	movff	?___fladd,sprintf@fval
  1965  00390E  C036  F06E         	movff	?___fladd+1,sprintf@fval+1
  1966  003912  C037  F06F         	movff	?___fladd+2,sprintf@fval+2
  1967  003916  C038  F070         	movff	?___fladd+3,sprintf@fval+3
  1968  00391A                     l3605:
  1969  00391A  FFFF               	dw	65535	; assembler added errata NOP
  1970                           
  1971                           ;doprnt.c: 1135: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  1972  00391C  BE68               	btfsc	sprintf@eexp+1,7,c
  1973  00391E  D006               	goto	u3950
  1974  003920  5068               	movf	sprintf@eexp+1,w,c
  1975  003922  E131               	bnz	l3613
  1976  003924  0E0A               	movlw	10
  1977  003926  5C67               	subwf	sprintf@eexp,w,c
  1978  003928  B0D8               	btfsc	status,0,c
  1979  00392A  D02C               	goto	u3980
  1980  00392C                     u3950:
  1981  00392C  FFFF               	dw	65535	; assembler added errata NOP
  1982  00392E  C06D  F001         	movff	sprintf@fval,___fleq@ff1
  1983  003932  C06E  F002         	movff	sprintf@fval+1,___fleq@ff1+1
  1984  003936  C06F  F003         	movff	sprintf@fval+2,___fleq@ff1+2
  1985  00393A  C070  F004         	movff	sprintf@fval+3,___fleq@ff1+3
  1986  00393E  0E00               	movlw	0
  1987  003940  6E05               	movwf	___fleq@ff2,c
  1988  003942  0E00               	movlw	0
  1989  003944  6E06               	movwf	___fleq@ff2+1,c
  1990  003946  0E00               	movlw	0
  1991  003948  6E07               	movwf	___fleq@ff2+2,c
  1992  00394A  0E00               	movlw	0
  1993  00394C  6E08               	movwf	___fleq@ff2+3,c
  1994  00394E  ECB9  F00D         	call	___fleq	;wreg free
  1995  003952  B0D8               	btfsc	status,0,c
  1996  003954  D062               	goto	l3627
  1997  003956  C06D  F031         	movff	sprintf@fval,___fltol@f1
  1998  00395A  C06E  F032         	movff	sprintf@fval+1,___fltol@f1+1
  1999  00395E  C06F  F033         	movff	sprintf@fval+2,___fltol@f1+2
  2000  003962  C070  F034         	movff	sprintf@fval+3,___fltol@f1+3
  2001  003966  EC50  F00E         	call	___fltol	;wreg free
  2002  00396A  5031               	movf	?___fltol,w,c
  2003  00396C  1032               	iorwf	?___fltol+1,w,c
  2004  00396E  1033               	iorwf	?___fltol+2,w,c
  2005  003970  1034               	iorwf	?___fltol+3,w,c
  2006  003972  B4D8               	btfsc	status,2,c
  2007  003974  BE68               	btfsc	sprintf@eexp+1,7,c
  2008  003976  D051               	goto	l3627
  2009  003978  5068               	movf	sprintf@eexp+1,w,c
  2010  00397A  E104               	bnz	u3980
  2011  00397C  0E02               	movlw	2
  2012  00397E  5C67               	subwf	sprintf@eexp,w,c
  2013  003980  A0D8               	btfss	status,0,c
  2014  003982  D04B               	goto	l3627
  2015  003984                     u3980:
  2016  003984  FFFF               	dw	65535	; assembler added errata NOP
  2017  003986                     l3613:
  2018                           
  2019                           ;doprnt.c: 1139: if(tmpval.integ < 4.294967296){
  2020  003986  C063  F001         	movff	sprintf@tmpval,___flge@ff1
  2021  00398A  C064  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  2022  00398E  C065  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  2023  003992  C066  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  2024  003996  0E5F               	movlw	95
  2025  003998  6E05               	movwf	___flge@ff2,c
  2026  00399A  0E70               	movlw	112
  2027  00399C  6E06               	movwf	___flge@ff2+1,c
  2028  00399E  0E89               	movlw	137
  2029  0039A0  6E07               	movwf	___flge@ff2+2,c
  2030  0039A2  0E40               	movlw	64
  2031  0039A4  6E08               	movwf	___flge@ff2+3,c
  2032  0039A6  ECBA  F00E         	call	___flge	;wreg free
  2033  0039AA  B0D8               	btfsc	status,0,c
  2034  0039AC  D002               	goto	l3617
  2035                           
  2036                           ;doprnt.c: 1140: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2037  0039AE  0EF7               	movlw	247
  2038  0039B0  D002               	goto	L3
  2039  0039B2                     l3617:
  2040  0039B2  FFFF               	dw	65535	; assembler added errata NOP
  2041                           
  2042                           ;doprnt.c: 1142: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2043  0039B4  0EF8               	movlw	248
  2044  0039B6                     L3:
  2045  0039B6  FFFF               	dw	65535	; assembler added errata NOP
  2046  0039B8  2667               	addwf	sprintf@eexp,f,c
  2047  0039BA  0EFF               	movlw	255
  2048  0039BC  2268               	addwfc	sprintf@eexp+1,f,c
  2049                           
  2050                           ;doprnt.c: 1145: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  2051  0039BE  5067               	movf	sprintf@eexp,w,c
  2052  0039C0  ECC6  F018         	call	_scale
  2053  0039C4  C028  F063         	movff	?_scale,sprintf@tmpval
  2054  0039C8  C029  F064         	movff	?_scale+1,sprintf@tmpval+1
  2055  0039CC  C02A  F065         	movff	?_scale+2,sprintf@tmpval+2
  2056  0039D0  C02B  F066         	movff	?_scale+3,sprintf@tmpval+3
  2057  0039D4  C06D  F001         	movff	sprintf@fval,__div_to_l_@f1
  2058  0039D8  C06E  F002         	movff	sprintf@fval+1,__div_to_l_@f1+1
  2059  0039DC  C06F  F003         	movff	sprintf@fval+2,__div_to_l_@f1+2
  2060  0039E0  C070  F004         	movff	sprintf@fval+3,__div_to_l_@f1+3
  2061  0039E4  C063  F005         	movff	sprintf@tmpval,__div_to_l_@f2
  2062  0039E8  C064  F006         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  2063  0039EC  C065  F007         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  2064  0039F0  C066  F008         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  2065  0039F4  EC9D  F00F         	call	__div_to_l_	;wreg free
  2066  0039F8  C001  F05F         	movff	?__div_to_l_,sprintf@val
  2067  0039FC  C002  F060         	movff	?__div_to_l_+1,sprintf@val+1
  2068  003A00  C003  F061         	movff	?__div_to_l_+2,sprintf@val+2
  2069  003A04  C004  F062         	movff	?__div_to_l_+3,sprintf@val+3
  2070                           
  2071                           ;doprnt.c: 1148: fval = 0.0;
  2072  003A08  0E00               	movlw	0
  2073  003A0A  6E6D               	movwf	sprintf@fval,c
  2074  003A0C  0E00               	movlw	0
  2075  003A0E  6E6E               	movwf	sprintf@fval+1,c
  2076  003A10  0E00               	movlw	0
  2077  003A12  6E6F               	movwf	sprintf@fval+2,c
  2078  003A14  0E00               	movlw	0
  2079  003A16  6E70               	movwf	sprintf@fval+3,c
  2080                           
  2081                           ;doprnt.c: 1149: } else {
  2082  003A18  D03C               	goto	l3631
  2083  003A1A                     l3627:
  2084  003A1A  FFFF               	dw	65535	; assembler added errata NOP
  2085                           
  2086                           ;doprnt.c: 1150: val = (unsigned long)fval;
  2087  003A1C  C06D  F031         	movff	sprintf@fval,___fltol@f1
  2088  003A20  C06E  F032         	movff	sprintf@fval+1,___fltol@f1+1
  2089  003A24  C06F  F033         	movff	sprintf@fval+2,___fltol@f1+2
  2090  003A28  C070  F034         	movff	sprintf@fval+3,___fltol@f1+3
  2091  003A2C  EC50  F00E         	call	___fltol	;wreg free
  2092  003A30  C031  F05F         	movff	?___fltol,sprintf@val
  2093  003A34  C032  F060         	movff	?___fltol+1,sprintf@val+1
  2094  003A38  C033  F061         	movff	?___fltol+2,sprintf@val+2
  2095  003A3C  C034  F062         	movff	?___fltol+3,sprintf@val+3
  2096                           
  2097                           ;doprnt.c: 1151: fval -= (double)val;
  2098  003A40  C06D  F045         	movff	sprintf@fval,___flsub@b
  2099  003A44  C06E  F046         	movff	sprintf@fval+1,___flsub@b+1
  2100  003A48  C06F  F047         	movff	sprintf@fval+2,___flsub@b+2
  2101  003A4C  C070  F048         	movff	sprintf@fval+3,___flsub@b+3
  2102  003A50  C05F  F001         	movff	sprintf@val,___xxtofl@val
  2103  003A54  C060  F002         	movff	sprintf@val+1,___xxtofl@val+1
  2104  003A58  C061  F003         	movff	sprintf@val+2,___xxtofl@val+2
  2105  003A5C  C062  F004         	movff	sprintf@val+3,___xxtofl@val+3
  2106  003A60  0E00               	movlw	0
  2107  003A62  ECAE  F010         	call	___xxtofl
  2108  003A66  C001  F049         	movff	?___xxtofl,___flsub@a
  2109  003A6A  C002  F04A         	movff	?___xxtofl+1,___flsub@a+1
  2110  003A6E  C003  F04B         	movff	?___xxtofl+2,___flsub@a+2
  2111  003A72  C004  F04C         	movff	?___xxtofl+3,___flsub@a+3
  2112  003A76  ECBC  F00B         	call	___flsub	;wreg free
  2113  003A7A  C045  F06D         	movff	?___flsub,sprintf@fval
  2114  003A7E  C046  F06E         	movff	?___flsub+1,sprintf@fval+1
  2115  003A82  C047  F06F         	movff	?___flsub+2,sprintf@fval+2
  2116  003A86  C048  F070         	movff	?___flsub+3,sprintf@fval+3
  2117                           
  2118                           ;doprnt.c: 1152: eexp = 0;
  2119  003A8A  0E00               	movlw	0
  2120  003A8C  6E68               	movwf	sprintf@eexp+1,c
  2121  003A8E  0E00               	movlw	0
  2122  003A90  6E67               	movwf	sprintf@eexp,c
  2123  003A92                     l3631:
  2124  003A92  FFFF               	dw	65535	; assembler added errata NOP
  2125                           
  2126                           ;doprnt.c: 1153: };doprnt.c: 1155: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  2127  003A94  0E01               	movlw	1
  2128  003A96  6E73               	movwf	sprintf@c,c
  2129  003A98                     l3637:
  2130  003A98  FFFF               	dw	65535	; assembler added errata NOP
  2131                           
  2132                           ;doprnt.c: 1156: if(val < dpowers[c])
  2133  003A9A  5073               	movf	sprintf@c,w,c
  2134  003A9C  0D04               	mullw	4
  2135  003A9E  0E31               	movlw	low _dpowers
  2136  003AA0  24F3               	addwf	prodl,w,c
  2137  003AA2  6EF6               	movwf	tblptrl,c
  2138  003AA4  0E7F               	movlw	high _dpowers
  2139  003AA6  20F4               	addwfc	prodh,w,c
  2140  003AA8  6EF7               	movwf	tblptrh,c
  2141  003AAA                     	if	0	;There are less than 3 active tblptr bytes
  2142  003AAA                     	endif
  2143  003AAA  0009               	tblrd		*+
  2144  003AAC  FFFF               	dw	65535	; errata NOP
  2145  003AAE  50F5               	movf	tablat,w,c
  2146  003AB0  5C5F               	subwf	sprintf@val,w,c
  2147  003AB2  0009               	tblrd		*+
  2148  003AB4  FFFF               	dw	65535	; errata NOP
  2149  003AB6  50F5               	movf	tablat,w,c
  2150  003AB8  5860               	subwfb	sprintf@val+1,w,c
  2151  003ABA  0009               	tblrd		*+
  2152  003ABC  FFFF               	dw	65535	; errata NOP
  2153  003ABE  50F5               	movf	tablat,w,c
  2154  003AC0  5861               	subwfb	sprintf@val+2,w,c
  2155  003AC2  0009               	tblrd		*+
  2156  003AC4  FFFF               	dw	65535	; errata NOP
  2157  003AC6  50F5               	movf	tablat,w,c
  2158  003AC8  5862               	subwfb	sprintf@val+3,w,c
  2159  003ACA  A0D8               	btfss	status,0,c
  2160  003ACC  D005               	goto	u4010
  2161  003ACE  2A73               	incf	sprintf@c,f,c
  2162  003AD0  0E0A               	movlw	10
  2163  003AD2  1873               	xorwf	sprintf@c,w,c
  2164  003AD4  A4D8               	btfss	status,2,c
  2165  003AD6  D7E0               	goto	l3637
  2166  003AD8                     u4010:
  2167  003AD8  FFFF               	dw	65535	; assembler added errata NOP
  2168                           
  2169                           ;doprnt.c: 1161: width -= prec + c + eexp;
  2170  003ADA  5073               	movf	sprintf@c,w,c
  2171  003ADC  2471               	addwf	sprintf@prec,w,c
  2172  003ADE  6E55               	movwf	??_sprintf& (0+255),c
  2173  003AE0  0E00               	movlw	0
  2174  003AE2  2072               	addwfc	sprintf@prec+1,w,c
  2175  003AE4  6E56               	movwf	(??_sprintf+1)& (0+255),c
  2176  003AE6  5067               	movf	sprintf@eexp,w,c
  2177  003AE8  2655               	addwf	??_sprintf,f,c
  2178  003AEA  5068               	movf	sprintf@eexp+1,w,c
  2179  003AEC  2256               	addwfc	??_sprintf+1,f,c
  2180  003AEE  5055               	movf	??_sprintf,w,c
  2181  003AF0  5E6B               	subwf	sprintf@width,f,c
  2182  003AF2  5056               	movf	??_sprintf+1,w,c
  2183  003AF4  5A6C               	subwfb	sprintf@width+1,f,c
  2184                           
  2185                           ;doprnt.c: 1162: if(;doprnt.c: 1166: prec)
  2186  003AF6  5071               	movf	sprintf@prec,w,c
  2187  003AF8  1072               	iorwf	sprintf@prec+1,w,c
  2188  003AFA  B4D8               	btfsc	status,2,c
  2189  003AFC  D003               	goto	l3649
  2190                           
  2191                           ;doprnt.c: 1167: width--;
  2192  003AFE  066B               	decf	sprintf@width,f,c
  2193  003B00  A0D8               	btfss	status,0,c
  2194  003B02  066C               	decf	sprintf@width+1,f,c
  2195  003B04                     l3649:
  2196  003B04  FFFF               	dw	65535	; assembler added errata NOP
  2197                           
  2198                           ;doprnt.c: 1168: if(flag & 0x03)
  2199  003B06  0E03               	movlw	3
  2200  003B08  1469               	andwf	sprintf@flag,w,c
  2201  003B0A  6E55               	movwf	??_sprintf& (0+255),c
  2202  003B0C  0E00               	movlw	0
  2203  003B0E  146A               	andwf	sprintf@flag+1,w,c
  2204  003B10  6E56               	movwf	(??_sprintf+1)& (0+255),c
  2205  003B12  5055               	movf	??_sprintf,w,c
  2206  003B14  1056               	iorwf	??_sprintf+1,w,c
  2207  003B16  B4D8               	btfsc	status,2,c
  2208  003B18  D003               	goto	l3653
  2209                           
  2210                           ;doprnt.c: 1169: width--;
  2211  003B1A  066B               	decf	sprintf@width,f,c
  2212  003B1C  A0D8               	btfss	status,0,c
  2213  003B1E  066C               	decf	sprintf@width+1,f,c
  2214  003B20                     l3653:
  2215  003B20  FFFF               	dw	65535	; assembler added errata NOP
  2216                           
  2217                           ;doprnt.c: 1172: if(flag & 0x04) {
  2218  003B22  A469               	btfss	sprintf@flag,2,c
  2219  003B24  D034               	goto	l3675
  2220                           
  2221                           ;doprnt.c: 1176: if(flag & 0x03)
  2222  003B26  0E03               	movlw	3
  2223  003B28  1469               	andwf	sprintf@flag,w,c
  2224  003B2A  6E55               	movwf	??_sprintf& (0+255),c
  2225  003B2C  0E00               	movlw	0
  2226  003B2E  146A               	andwf	sprintf@flag+1,w,c
  2227  003B30  6E56               	movwf	(??_sprintf+1)& (0+255),c
  2228  003B32  5055               	movf	??_sprintf,w,c
  2229  003B34  1056               	iorwf	??_sprintf+1,w,c
  2230  003B36  B4D8               	btfsc	status,2,c
  2231  003B38  D015               	goto	l3667
  2232                           
  2233                           ;doprnt.c: 1178: ((*sp++ = ('-')));
  2234  003B3A  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2235  003B3E  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2236  003B42  0E2D               	movlw	45
  2237  003B44  6EDF               	movwf	indf2,c
  2238  003B46  4A4D               	infsnz	sprintf@sp,f,c
  2239  003B48  2A4E               	incf	sprintf@sp+1,f,c
  2240  003B4A  D00C               	goto	l3667
  2241  003B4C                     l3661:
  2242  003B4C  FFFF               	dw	65535	; assembler added errata NOP
  2243                           
  2244                           ;doprnt.c: 1188: ((*sp++ = ('0')));
  2245  003B4E  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2246  003B52  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2247  003B56  0E30               	movlw	48
  2248  003B58  6EDF               	movwf	indf2,c
  2249  003B5A  4A4D               	infsnz	sprintf@sp,f,c
  2250  003B5C  2A4E               	incf	sprintf@sp+1,f,c
  2251                           
  2252                           ;doprnt.c: 1189: width--;
  2253  003B5E  066B               	decf	sprintf@width,f,c
  2254  003B60  A0D8               	btfss	status,0,c
  2255  003B62  066C               	decf	sprintf@width+1,f,c
  2256  003B64                     l3667:
  2257  003B64  FFFF               	dw	65535	; assembler added errata NOP
  2258  003B66  BE6C               	btfsc	sprintf@width+1,7,c
  2259  003B68  D07B               	goto	l3691
  2260  003B6A  506C               	movf	sprintf@width+1,w,c
  2261  003B6C  E1EF               	bnz	l3661
  2262  003B6E  046B               	decf	sprintf@width,w,c
  2263  003B70  A0D8               	btfss	status,0,c
  2264  003B72  D076               	goto	l3691
  2265  003B74  D7EB               	goto	l3661
  2266  003B76                     l3669:
  2267  003B76  FFFF               	dw	65535	; assembler added errata NOP
  2268                           
  2269                           ;doprnt.c: 1200: ((*sp++ = (' ')));
  2270  003B78  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2271  003B7C  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2272  003B80  0E20               	movlw	32
  2273  003B82  6EDF               	movwf	indf2,c
  2274  003B84  4A4D               	infsnz	sprintf@sp,f,c
  2275  003B86  2A4E               	incf	sprintf@sp+1,f,c
  2276                           
  2277                           ;doprnt.c: 1201: width--;
  2278  003B88  066B               	decf	sprintf@width,f,c
  2279  003B8A  A0D8               	btfss	status,0,c
  2280  003B8C  066C               	decf	sprintf@width+1,f,c
  2281  003B8E                     l3675:
  2282  003B8E  FFFF               	dw	65535	; assembler added errata NOP
  2283  003B90  BE6C               	btfsc	sprintf@width+1,7,c
  2284  003B92  D005               	goto	u4070
  2285  003B94  506C               	movf	sprintf@width+1,w,c
  2286  003B96  E1EF               	bnz	l3669
  2287  003B98  046B               	decf	sprintf@width,w,c
  2288  003B9A  B0D8               	btfsc	status,0,c
  2289  003B9C  D7EC               	goto	l3669
  2290  003B9E                     u4070:
  2291  003B9E  FFFF               	dw	65535	; assembler added errata NOP
  2292                           
  2293                           ;doprnt.c: 1202: };doprnt.c: 1207: if(flag & 0x03)
  2294  003BA0  0E03               	movlw	3
  2295  003BA2  1469               	andwf	sprintf@flag,w,c
  2296  003BA4  6E55               	movwf	??_sprintf& (0+255),c
  2297  003BA6  0E00               	movlw	0
  2298  003BA8  146A               	andwf	sprintf@flag+1,w,c
  2299  003BAA  6E56               	movwf	(??_sprintf+1)& (0+255),c
  2300  003BAC  5055               	movf	??_sprintf,w,c
  2301  003BAE  1056               	iorwf	??_sprintf+1,w,c
  2302  003BB0  B4D8               	btfsc	status,2,c
  2303  003BB2  D056               	goto	l3691
  2304                           
  2305                           ;doprnt.c: 1209: ((*sp++ = ('-')));
  2306  003BB4  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2307  003BB8  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2308  003BBC  0E2D               	movlw	45
  2309  003BBE  FFFF               	dw	65535	; assembler added errata NOP
  2310  003BC0  6EDF               	movwf	indf2,c
  2311  003BC2  4A4D               	infsnz	sprintf@sp,f,c
  2312  003BC4  2A4E               	incf	sprintf@sp+1,f,c
  2313  003BC6  D04C               	goto	l3691
  2314  003BC8                     l3683:
  2315  003BC8  FFFF               	dw	65535	; assembler added errata NOP
  2316                           
  2317                           ;doprnt.c: 1219: {;doprnt.c: 1220: tmpval.vd = val/dpowers[c];
  2318  003BCA  C05F  F001         	movff	sprintf@val,___lldiv@dividend
  2319  003BCE  C060  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  2320  003BD2  C061  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  2321  003BD6  C062  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  2322  003BDA  5073               	movf	sprintf@c,w,c
  2323  003BDC  0D04               	mullw	4
  2324  003BDE  0E31               	movlw	low _dpowers
  2325  003BE0  24F3               	addwf	prodl,w,c
  2326  003BE2  6EF6               	movwf	tblptrl,c
  2327  003BE4  0E7F               	movlw	high _dpowers
  2328  003BE6  20F4               	addwfc	prodh,w,c
  2329  003BE8  6EF7               	movwf	tblptrh,c
  2330  003BEA                     	if	0	;There are less than 3 active tblptr bytes
  2331  003BEA                     	endif
  2332  003BEA  0009               	tblrd		*+
  2333  003BEC  FFFF               	dw	65535	; errata NOP
  2334  003BEE  CFF5 F005          	movff	tablat,___lldiv@divisor
  2335  003BF2  0009               	tblrd		*+
  2336  003BF4  FFFF               	dw	65535	; errata NOP
  2337  003BF6  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2338  003BFA  0009               	tblrd		*+
  2339  003BFC  FFFF               	dw	65535	; errata NOP
  2340  003BFE  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2341  003C02  000A               	tblrd		*-
  2342  003C04  FFFF               	dw	65535	; errata NOP
  2343  003C06  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2344  003C0A  EC71  F00D         	call	___lldiv	;wreg free
  2345  003C0E  C001  F063         	movff	?___lldiv,sprintf@tmpval
  2346  003C12  C002  F064         	movff	?___lldiv+1,sprintf@tmpval+1
  2347  003C16  C003  F065         	movff	?___lldiv+2,sprintf@tmpval+2
  2348  003C1A  C004  F066         	movff	?___lldiv+3,sprintf@tmpval+3
  2349                           
  2350                           ;doprnt.c: 1221: tmpval.vd %= 10;
  2351  003C1E  C063  F001         	movff	sprintf@tmpval,___llmod@dividend
  2352  003C22  C064  F002         	movff	sprintf@tmpval+1,___llmod@dividend+1
  2353  003C26  C065  F003         	movff	sprintf@tmpval+2,___llmod@dividend+2
  2354  003C2A  C066  F004         	movff	sprintf@tmpval+3,___llmod@dividend+3
  2355  003C2E  0E0A               	movlw	10
  2356  003C30  6E05               	movwf	___llmod@divisor,c
  2357  003C32  0E00               	movlw	0
  2358  003C34  6E06               	movwf	___llmod@divisor+1,c
  2359  003C36  0E00               	movlw	0
  2360  003C38  6E07               	movwf	___llmod@divisor+2,c
  2361  003C3A  0E00               	movlw	0
  2362  003C3C  6E08               	movwf	___llmod@divisor+3,c
  2363  003C3E  ECF5  F00C         	call	___llmod	;wreg free
  2364  003C42  C001  F063         	movff	?___llmod,sprintf@tmpval
  2365  003C46  C002  F064         	movff	?___llmod+1,sprintf@tmpval+1
  2366  003C4A  C003  F065         	movff	?___llmod+2,sprintf@tmpval+2
  2367  003C4E  C004  F066         	movff	?___llmod+3,sprintf@tmpval+3
  2368                           
  2369                           ;doprnt.c: 1222: ((*sp++ = ('0' + tmpval.vd)));
  2370  003C52  5063               	movf	sprintf@tmpval,w,c
  2371  003C54  0F30               	addlw	48
  2372  003C56  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2373  003C5A  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2374  003C5E  D7AF               	goto	L4
  2375  003C60                     l3691:
  2376  003C60  FFFF               	dw	65535	; assembler added errata NOP
  2377  003C62  0673               	decf	sprintf@c,f,c
  2378  003C64  2873               	incf	sprintf@c,w,c
  2379  003C66  B4D8               	btfsc	status,2,c
  2380  003C68  D00D               	goto	l3699
  2381  003C6A  D7AE               	goto	l3683
  2382  003C6C                     l3693:
  2383  003C6C  FFFF               	dw	65535	; assembler added errata NOP
  2384                           
  2385                           ;doprnt.c: 1227: ((*sp++ = ('0')));
  2386  003C6E  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2387  003C72  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2388  003C76  0E30               	movlw	48
  2389  003C78  6EDF               	movwf	indf2,c
  2390  003C7A  4A4D               	infsnz	sprintf@sp,f,c
  2391  003C7C  2A4E               	incf	sprintf@sp+1,f,c
  2392                           
  2393                           ;doprnt.c: 1228: eexp--;
  2394  003C7E  0667               	decf	sprintf@eexp,f,c
  2395  003C80  A0D8               	btfss	status,0,c
  2396  003C82  0668               	decf	sprintf@eexp+1,f,c
  2397  003C84                     l3699:
  2398  003C84  FFFF               	dw	65535	; assembler added errata NOP
  2399  003C86  BE68               	btfsc	sprintf@eexp+1,7,c
  2400  003C88  D005               	goto	u4100
  2401  003C8A  5068               	movf	sprintf@eexp+1,w,c
  2402  003C8C  E1EF               	bnz	l3693
  2403  003C8E  0467               	decf	sprintf@eexp,w,c
  2404  003C90  B0D8               	btfsc	status,0,c
  2405  003C92  D7EC               	goto	l3693
  2406  003C94                     u4100:
  2407  003C94  FFFF               	dw	65535	; assembler added errata NOP
  2408                           
  2409                           ;doprnt.c: 1229: };doprnt.c: 1230: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
  2410  003C96  BE72               	btfsc	sprintf@prec+1,7,c
  2411  003C98  D009               	goto	l228
  2412  003C9A  5072               	movf	sprintf@prec+1,w,c
  2413  003C9C  E104               	bnz	u4110
  2414  003C9E  0E09               	movlw	9
  2415  003CA0  5C71               	subwf	sprintf@prec,w,c
  2416  003CA2  A0D8               	btfss	status,0,c
  2417  003CA4  D003               	goto	l228
  2418  003CA6                     u4110:
  2419                           
  2420                           ;doprnt.c: 1231: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2421  003CA6  0E08               	movlw	8
  2422  003CA8  6E73               	movwf	sprintf@c,c
  2423  003CAA  D003               	goto	l3705
  2424  003CAC                     l228:
  2425  003CAC  FFFF               	dw	65535	; assembler added errata NOP
  2426                           
  2427                           ;doprnt.c: 1232: else;doprnt.c: 1233: c = (char)prec;
  2428  003CAE  C071  F073         	movff	sprintf@prec,sprintf@c
  2429  003CB2                     l3705:
  2430  003CB2  FFFF               	dw	65535	; assembler added errata NOP
  2431                           
  2432                           ;doprnt.c: 1234: prec -= (int)c;
  2433  003CB4  5073               	movf	sprintf@c,w,c
  2434  003CB6  5E71               	subwf	sprintf@prec,f,c
  2435  003CB8  0E00               	movlw	0
  2436  003CBA  5A72               	subwfb	sprintf@prec+1,f,c
  2437                           
  2438                           ;doprnt.c: 1238: if(c)
  2439  003CBC  5073               	movf	sprintf@c,w,c
  2440  003CBE  B4D8               	btfsc	status,2,c
  2441  003CC0  D008               	goto	l3713
  2442                           
  2443                           ;doprnt.c: 1240: ((*sp++ = ('.')));
  2444  003CC2  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2445  003CC6  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2446  003CCA  0E2E               	movlw	46
  2447  003CCC  6EDF               	movwf	indf2,c
  2448  003CCE  4A4D               	infsnz	sprintf@sp,f,c
  2449  003CD0  2A4E               	incf	sprintf@sp+1,f,c
  2450  003CD2                     l3713:
  2451  003CD2  FFFF               	dw	65535	; assembler added errata NOP
  2452                           
  2453                           ;doprnt.c: 1246: val = (unsigned long)(fval * scale((signed char)c));
  2454  003CD4  5073               	movf	sprintf@c,w,c
  2455  003CD6  ECC6  F018         	call	_scale
  2456  003CDA  C028  F059         	movff	?_scale,_sprintf$837
  2457  003CDE  C029  F05A         	movff	?_scale+1,_sprintf$837+1
  2458  003CE2  C02A  F05B         	movff	?_scale+2,_sprintf$837+2
  2459  003CE6  C02B  F05C         	movff	?_scale+3,_sprintf$837+3
  2460                           
  2461                           ;doprnt.c: 1246: val = (unsigned long)(fval * scale((signed char)c));
  2462  003CEA  C06D  F013         	movff	sprintf@fval,___flmul@a
  2463  003CEE  C06E  F014         	movff	sprintf@fval+1,___flmul@a+1
  2464  003CF2  C06F  F015         	movff	sprintf@fval+2,___flmul@a+2
  2465  003CF6  C070  F016         	movff	sprintf@fval+3,___flmul@a+3
  2466  003CFA  C059  F00F         	movff	_sprintf$837,___flmul@b
  2467  003CFE  C05A  F010         	movff	_sprintf$837+1,___flmul@b+1
  2468  003D02  C05B  F011         	movff	_sprintf$837+2,___flmul@b+2
  2469  003D06  C05C  F012         	movff	_sprintf$837+3,___flmul@b+3
  2470  003D0A  EC05  F017         	call	___flmul	;wreg free
  2471  003D0E  C00F  F031         	movff	?___flmul,___fltol@f1
  2472  003D12  C010  F032         	movff	?___flmul+1,___fltol@f1+1
  2473  003D16  C011  F033         	movff	?___flmul+2,___fltol@f1+2
  2474  003D1A  C012  F034         	movff	?___flmul+3,___fltol@f1+3
  2475  003D1E  EC50  F00E         	call	___fltol	;wreg free
  2476  003D22  C031  F05F         	movff	?___fltol,sprintf@val
  2477  003D26  C032  F060         	movff	?___fltol+1,sprintf@val+1
  2478  003D2A  C033  F061         	movff	?___fltol+2,sprintf@val+2
  2479  003D2E  C034  F062         	movff	?___fltol+3,sprintf@val+3
  2480                           
  2481                           ;doprnt.c: 1247: while(c--) {
  2482  003D32  D078               	goto	l3727
  2483  003D34                     l3717:
  2484  003D34  FFFF               	dw	65535	; assembler added errata NOP
  2485                           
  2486                           ;doprnt.c: 1248: tmpval.vd = val/dpowers[c];
  2487  003D36  C05F  F001         	movff	sprintf@val,___lldiv@dividend
  2488  003D3A  C060  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  2489  003D3E  C061  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  2490  003D42  C062  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  2491  003D46  5073               	movf	sprintf@c,w,c
  2492  003D48  0D04               	mullw	4
  2493  003D4A  0E31               	movlw	low _dpowers
  2494  003D4C  24F3               	addwf	prodl,w,c
  2495  003D4E  6EF6               	movwf	tblptrl,c
  2496  003D50  0E7F               	movlw	high _dpowers
  2497  003D52  20F4               	addwfc	prodh,w,c
  2498  003D54  6EF7               	movwf	tblptrh,c
  2499  003D56                     	if	0	;There are less than 3 active tblptr bytes
  2500  003D56                     	endif
  2501  003D56  0009               	tblrd		*+
  2502  003D58  FFFF               	dw	65535	; errata NOP
  2503  003D5A  CFF5 F005          	movff	tablat,___lldiv@divisor
  2504  003D5E  0009               	tblrd		*+
  2505  003D60  FFFF               	dw	65535	; errata NOP
  2506  003D62  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2507  003D66  0009               	tblrd		*+
  2508  003D68  FFFF               	dw	65535	; errata NOP
  2509  003D6A  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2510  003D6E  000A               	tblrd		*-
  2511  003D70  FFFF               	dw	65535	; errata NOP
  2512  003D72  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2513  003D76  EC71  F00D         	call	___lldiv	;wreg free
  2514  003D7A  C001  F063         	movff	?___lldiv,sprintf@tmpval
  2515  003D7E  C002  F064         	movff	?___lldiv+1,sprintf@tmpval+1
  2516  003D82  C003  F065         	movff	?___lldiv+2,sprintf@tmpval+2
  2517  003D86  C004  F066         	movff	?___lldiv+3,sprintf@tmpval+3
  2518                           
  2519                           ;doprnt.c: 1249: tmpval.vd %= 10;
  2520  003D8A  C063  F001         	movff	sprintf@tmpval,___llmod@dividend
  2521  003D8E  C064  F002         	movff	sprintf@tmpval+1,___llmod@dividend+1
  2522  003D92  C065  F003         	movff	sprintf@tmpval+2,___llmod@dividend+2
  2523  003D96  C066  F004         	movff	sprintf@tmpval+3,___llmod@dividend+3
  2524  003D9A  0E0A               	movlw	10
  2525  003D9C  6E05               	movwf	___llmod@divisor,c
  2526  003D9E  0E00               	movlw	0
  2527  003DA0  6E06               	movwf	___llmod@divisor+1,c
  2528  003DA2  0E00               	movlw	0
  2529  003DA4  6E07               	movwf	___llmod@divisor+2,c
  2530  003DA6  0E00               	movlw	0
  2531  003DA8  6E08               	movwf	___llmod@divisor+3,c
  2532  003DAA  ECF5  F00C         	call	___llmod	;wreg free
  2533  003DAE  C001  F063         	movff	?___llmod,sprintf@tmpval
  2534  003DB2  C002  F064         	movff	?___llmod+1,sprintf@tmpval+1
  2535  003DB6  C003  F065         	movff	?___llmod+2,sprintf@tmpval+2
  2536  003DBA  C004  F066         	movff	?___llmod+3,sprintf@tmpval+3
  2537                           
  2538                           ;doprnt.c: 1250: ((*sp++ = ('0' + tmpval.vd)));
  2539  003DBE  5063               	movf	sprintf@tmpval,w,c
  2540  003DC0  0F30               	addlw	48
  2541  003DC2  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2542  003DC6  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2543  003DCA  6EDF               	movwf	indf2,c
  2544  003DCC  4A4D               	infsnz	sprintf@sp,f,c
  2545  003DCE  2A4E               	incf	sprintf@sp+1,f,c
  2546                           
  2547                           ;doprnt.c: 1251: val %= dpowers[c];
  2548  003DD0  C05F  F001         	movff	sprintf@val,___llmod@dividend
  2549  003DD4  C060  F002         	movff	sprintf@val+1,___llmod@dividend+1
  2550  003DD8  C061  F003         	movff	sprintf@val+2,___llmod@dividend+2
  2551  003DDC  C062  F004         	movff	sprintf@val+3,___llmod@dividend+3
  2552  003DE0  5073               	movf	sprintf@c,w,c
  2553  003DE2  0D04               	mullw	4
  2554  003DE4  0E31               	movlw	low _dpowers
  2555  003DE6  24F3               	addwf	prodl,w,c
  2556  003DE8  6EF6               	movwf	tblptrl,c
  2557  003DEA  0E7F               	movlw	high _dpowers
  2558  003DEC  20F4               	addwfc	prodh,w,c
  2559  003DEE  6EF7               	movwf	tblptrh,c
  2560  003DF0                     	if	0	;There are less than 3 active tblptr bytes
  2561  003DF0                     	endif
  2562  003DF0  0009               	tblrd		*+
  2563  003DF2  FFFF               	dw	65535	; errata NOP
  2564  003DF4  CFF5 F005          	movff	tablat,___llmod@divisor
  2565  003DF8  0009               	tblrd		*+
  2566  003DFA  FFFF               	dw	65535	; errata NOP
  2567  003DFC  CFF5 F006          	movff	tablat,___llmod@divisor+1
  2568  003E00  0009               	tblrd		*+
  2569  003E02  FFFF               	dw	65535	; errata NOP
  2570  003E04  CFF5 F007          	movff	tablat,___llmod@divisor+2
  2571  003E08  000A               	tblrd		*-
  2572  003E0A  FFFF               	dw	65535	; errata NOP
  2573  003E0C  CFF5 F008          	movff	tablat,___llmod@divisor+3
  2574  003E10  ECF5  F00C         	call	___llmod	;wreg free
  2575  003E14  C001  F05F         	movff	?___llmod,sprintf@val
  2576  003E18  C002  F060         	movff	?___llmod+1,sprintf@val+1
  2577  003E1C  C003  F061         	movff	?___llmod+2,sprintf@val+2
  2578  003E20  C004  F062         	movff	?___llmod+3,sprintf@val+3
  2579  003E24                     l3727:
  2580  003E24  FFFF               	dw	65535	; assembler added errata NOP
  2581  003E26  0673               	decf	sprintf@c,f,c
  2582  003E28  2873               	incf	sprintf@c,w,c
  2583  003E2A  B4D8               	btfsc	status,2,c
  2584  003E2C  D00D               	goto	l3735
  2585  003E2E  D782               	goto	l3717
  2586  003E30                     l3729:
  2587  003E30  FFFF               	dw	65535	; assembler added errata NOP
  2588                           
  2589                           ;doprnt.c: 1255: ((*sp++ = ('0')));
  2590  003E32  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2591  003E36  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2592  003E3A  0E30               	movlw	48
  2593  003E3C  6EDF               	movwf	indf2,c
  2594  003E3E  4A4D               	infsnz	sprintf@sp,f,c
  2595  003E40  2A4E               	incf	sprintf@sp+1,f,c
  2596                           
  2597                           ;doprnt.c: 1256: prec--;
  2598  003E42  0671               	decf	sprintf@prec,f,c
  2599  003E44  A0D8               	btfss	status,0,c
  2600  003E46  0672               	decf	sprintf@prec+1,f,c
  2601  003E48                     l3735:
  2602  003E48  FFFF               	dw	65535	; assembler added errata NOP
  2603  003E4A  5071               	movf	sprintf@prec,w,c
  2604  003E4C  1072               	iorwf	sprintf@prec+1,w,c
  2605  003E4E  B4D8               	btfsc	status,2,c
  2606  003E50  D0BF               	goto	l3801
  2607  003E52  D7EE               	goto	l3729
  2608  003E54                     l3737:
  2609  003E54  FFFF               	dw	65535	; assembler added errata NOP
  2610                           
  2611                           ;doprnt.c: 1265: };doprnt.c: 1309: if(prec == 0 && val == 0)
  2612  003E56  5071               	movf	sprintf@prec,w,c
  2613  003E58  1072               	iorwf	sprintf@prec+1,w,c
  2614  003E5A  A4D8               	btfss	status,2,c
  2615  003E5C  D008               	goto	l3743
  2616  003E5E  505F               	movf	sprintf@val,w,c
  2617  003E60  1060               	iorwf	sprintf@val+1,w,c
  2618  003E62  1061               	iorwf	sprintf@val+2,w,c
  2619  003E64  1062               	iorwf	sprintf@val+3,w,c
  2620  003E66  A4D8               	btfss	status,2,c
  2621  003E68  D002               	goto	l3743
  2622                           
  2623                           ;doprnt.c: 1310: prec++;
  2624  003E6A  4A71               	infsnz	sprintf@prec,f,c
  2625  003E6C  2A72               	incf	sprintf@prec+1,f,c
  2626  003E6E                     l3743:
  2627  003E6E  FFFF               	dw	65535	; assembler added errata NOP
  2628                           
  2629                           ;doprnt.c: 1358: if(c < prec)
  2630  003E70  5073               	movf	sprintf@c,w,c
  2631  003E72  6E55               	movwf	??_sprintf& (0+255),c
  2632  003E74  6A56               	clrf	(??_sprintf+1)& (0+255),c
  2633  003E76  5071               	movf	sprintf@prec,w,c
  2634  003E78  5C55               	subwf	??_sprintf,w,c
  2635  003E7A  5056               	movf	??_sprintf+1,w,c
  2636  003E7C  0A80               	xorlw	128
  2637  003E7E  6E57               	movwf	(??_sprintf+2)& (0+255),c
  2638  003E80  5072               	movf	sprintf@prec+1,w,c
  2639  003E82  0A80               	xorlw	128
  2640  003E84  5857               	subwfb	(??_sprintf+2)& (0+255),w,c
  2641  003E86  B0D8               	btfsc	status,0,c
  2642  003E88  D003               	goto	l3747
  2643                           
  2644                           ;doprnt.c: 1359: c = prec;
  2645  003E8A  C071  F073         	movff	sprintf@prec,sprintf@c
  2646  003E8E  D011               	goto	l3751
  2647  003E90                     l3747:
  2648  003E90  FFFF               	dw	65535	; assembler added errata NOP
  2649                           
  2650                           ;doprnt.c: 1360: else if(prec < c)
  2651  003E92  5073               	movf	sprintf@c,w,c
  2652  003E94  6E55               	movwf	??_sprintf& (0+255),c
  2653  003E96  6A56               	clrf	(??_sprintf+1)& (0+255),c
  2654  003E98  5055               	movf	??_sprintf,w,c
  2655  003E9A  5C71               	subwf	sprintf@prec,w,c
  2656  003E9C  5072               	movf	sprintf@prec+1,w,c
  2657  003E9E  0A80               	xorlw	128
  2658  003EA0  6E57               	movwf	(??_sprintf+2)& (0+255),c
  2659  003EA2  5056               	movf	??_sprintf+1,w,c
  2660  003EA4  0A80               	xorlw	128
  2661  003EA6  5857               	subwfb	(??_sprintf+2)& (0+255),w,c
  2662  003EA8  B0D8               	btfsc	status,0,c
  2663  003EAA  D003               	goto	l3751
  2664                           
  2665                           ;doprnt.c: 1361: prec = c;
  2666  003EAC  C073  F071         	movff	sprintf@c,sprintf@prec
  2667  003EB0  6A72               	clrf	sprintf@prec+1,c
  2668  003EB2                     l3751:
  2669  003EB2  FFFF               	dw	65535	; assembler added errata NOP
  2670                           
  2671                           ;doprnt.c: 1364: if(width && flag & 0x03)
  2672  003EB4  506B               	movf	sprintf@width,w,c
  2673  003EB6  106C               	iorwf	sprintf@width+1,w,c
  2674  003EB8  B4D8               	btfsc	status,2,c
  2675  003EBA  D00D               	goto	l3757
  2676  003EBC  0E03               	movlw	3
  2677  003EBE  1469               	andwf	sprintf@flag,w,c
  2678  003EC0  6E55               	movwf	??_sprintf& (0+255),c
  2679  003EC2  0E00               	movlw	0
  2680  003EC4  146A               	andwf	sprintf@flag+1,w,c
  2681  003EC6  6E56               	movwf	(??_sprintf+1)& (0+255),c
  2682  003EC8  5055               	movf	??_sprintf,w,c
  2683  003ECA  1056               	iorwf	??_sprintf+1,w,c
  2684  003ECC  B4D8               	btfsc	status,2,c
  2685  003ECE  D003               	goto	l3757
  2686                           
  2687                           ;doprnt.c: 1365: width--;
  2688  003ED0  066B               	decf	sprintf@width,f,c
  2689  003ED2  A0D8               	btfss	status,0,c
  2690  003ED4  066C               	decf	sprintf@width+1,f,c
  2691  003ED6                     l3757:
  2692  003ED6  FFFF               	dw	65535	; assembler added errata NOP
  2693                           
  2694                           ;doprnt.c: 1367: if(flag & 0x4000) {
  2695  003ED8  AC6A               	btfss	sprintf@flag+1,6,c
  2696  003EDA  D014               	goto	l3765
  2697                           
  2698                           ;doprnt.c: 1368: if(width > prec)
  2699  003EDC  506B               	movf	sprintf@width,w,c
  2700  003EDE  5C71               	subwf	sprintf@prec,w,c
  2701  003EE0  5072               	movf	sprintf@prec+1,w,c
  2702  003EE2  0A80               	xorlw	128
  2703  003EE4  6E55               	movwf	??_sprintf& (0+255),c
  2704  003EE6  506C               	movf	sprintf@width+1,w,c
  2705  003EE8  0A80               	xorlw	128
  2706  003EEA  5855               	subwfb	??_sprintf& (0+255),w,c
  2707  003EEC  B0D8               	btfsc	status,0,c
  2708  003EEE  D005               	goto	l3763
  2709                           
  2710                           ;doprnt.c: 1369: width -= prec;
  2711  003EF0  5071               	movf	sprintf@prec,w,c
  2712  003EF2  5E6B               	subwf	sprintf@width,f,c
  2713  003EF4  5072               	movf	sprintf@prec+1,w,c
  2714  003EF6  5A6C               	subwfb	sprintf@width+1,f,c
  2715  003EF8  D005               	goto	l3765
  2716  003EFA                     l3763:
  2717  003EFA  FFFF               	dw	65535	; assembler added errata NOP
  2718                           
  2719                           ;doprnt.c: 1370: else;doprnt.c: 1371: width = 0;
  2720  003EFC  0E00               	movlw	0
  2721  003EFE  6E6C               	movwf	sprintf@width+1,c
  2722  003F00  0E00               	movlw	0
  2723  003F02  6E6B               	movwf	sprintf@width,c
  2724  003F04                     l3765:
  2725  003F04  FFFF               	dw	65535	; assembler added errata NOP
  2726                           
  2727                           ;doprnt.c: 1372: };doprnt.c: 1400: if(width > c)
  2728  003F06  5073               	movf	sprintf@c,w,c
  2729  003F08  6E55               	movwf	??_sprintf& (0+255),c
  2730  003F0A  6A56               	clrf	(??_sprintf+1)& (0+255),c
  2731  003F0C  506B               	movf	sprintf@width,w,c
  2732  003F0E  5C55               	subwf	??_sprintf,w,c
  2733  003F10  5056               	movf	??_sprintf+1,w,c
  2734  003F12  0A80               	xorlw	128
  2735  003F14  6E57               	movwf	(??_sprintf+2)& (0+255),c
  2736  003F16  506C               	movf	sprintf@width+1,w,c
  2737  003F18  0A80               	xorlw	128
  2738  003F1A  5857               	subwfb	(??_sprintf+2)& (0+255),w,c
  2739  003F1C  B0D8               	btfsc	status,0,c
  2740  003F1E  D005               	goto	l3769
  2741                           
  2742                           ;doprnt.c: 1401: width -= c;
  2743  003F20  5073               	movf	sprintf@c,w,c
  2744  003F22  5E6B               	subwf	sprintf@width,f,c
  2745  003F24  0E00               	movlw	0
  2746  003F26  5A6C               	subwfb	sprintf@width+1,f,c
  2747  003F28  D005               	goto	l3771
  2748  003F2A                     l3769:
  2749  003F2A  FFFF               	dw	65535	; assembler added errata NOP
  2750                           
  2751                           ;doprnt.c: 1402: else;doprnt.c: 1403: width = 0;
  2752  003F2C  0E00               	movlw	0
  2753  003F2E  6E6C               	movwf	sprintf@width+1,c
  2754  003F30  0E00               	movlw	0
  2755  003F32  6E6B               	movwf	sprintf@width,c
  2756  003F34                     l3771:
  2757  003F34  FFFF               	dw	65535	; assembler added errata NOP
  2758                           
  2759                           ;doprnt.c: 1406: if(flag & 0x04) {
  2760  003F36  A469               	btfss	sprintf@flag,2,c
  2761  003F38  D023               	goto	l3787
  2762                           
  2763                           ;doprnt.c: 1411: if(flag & 0x03)
  2764  003F3A  0E03               	movlw	3
  2765  003F3C  1469               	andwf	sprintf@flag,w,c
  2766  003F3E  6E55               	movwf	??_sprintf& (0+255),c
  2767  003F40  0E00               	movlw	0
  2768  003F42  146A               	andwf	sprintf@flag+1,w,c
  2769  003F44  6E56               	movwf	(??_sprintf+1)& (0+255),c
  2770  003F46  5055               	movf	??_sprintf,w,c
  2771  003F48  1056               	iorwf	??_sprintf+1,w,c
  2772  003F4A  B4D8               	btfsc	status,2,c
  2773  003F4C  D008               	goto	l3779
  2774                           
  2775                           ;doprnt.c: 1412: ((*sp++ = ('-')));
  2776  003F4E  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2777  003F52  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2778  003F56  0E2D               	movlw	45
  2779  003F58  6EDF               	movwf	indf2,c
  2780  003F5A  4A4D               	infsnz	sprintf@sp,f,c
  2781  003F5C  2A4E               	incf	sprintf@sp+1,f,c
  2782  003F5E                     l3779:
  2783  003F5E  FFFF               	dw	65535	; assembler added errata NOP
  2784                           
  2785                           ;doprnt.c: 1434: if(width)
  2786  003F60  506B               	movf	sprintf@width,w,c
  2787  003F62  106C               	iorwf	sprintf@width+1,w,c
  2788  003F64  B4D8               	btfsc	status,2,c
  2789  003F66  D034               	goto	l3801
  2790                           
  2791                           ;doprnt.c: 1436: ((*sp++ = ('0')));
  2792  003F68  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2793  003F6C  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2794  003F70  0E30               	movlw	48
  2795  003F72  6EDF               	movwf	indf2,c
  2796  003F74  4A4D               	infsnz	sprintf@sp,f,c
  2797  003F76  2A4E               	incf	sprintf@sp+1,f,c
  2798                           
  2799                           ;doprnt.c: 1437: while(--width);
  2800  003F78  066B               	decf	sprintf@width,f,c
  2801  003F7A  A0D8               	btfss	status,0,c
  2802  003F7C  066C               	decf	sprintf@width+1,f,c
  2803  003F7E  D7EF               	goto	l3779
  2804  003F80                     l3787:
  2805  003F80  FFFF               	dw	65535	; assembler added errata NOP
  2806                           
  2807                           ;doprnt.c: 1441: {;doprnt.c: 1443: if(width;doprnt.c: 1447: )
  2808  003F82  506B               	movf	sprintf@width,w,c
  2809  003F84  106C               	iorwf	sprintf@width+1,w,c
  2810  003F86  B4D8               	btfsc	status,2,c
  2811  003F88  D010               	goto	u4290
  2812  003F8A                     u4280:
  2813  003F8A  FFFF               	dw	65535	; assembler added errata NOP
  2814                           
  2815                           ;doprnt.c: 1449: ((*sp++ = (' ')));
  2816  003F8C  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2817  003F90  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2818  003F94  0E20               	movlw	32
  2819  003F96  6EDF               	movwf	indf2,c
  2820  003F98  4A4D               	infsnz	sprintf@sp,f,c
  2821  003F9A  2A4E               	incf	sprintf@sp+1,f,c
  2822                           
  2823                           ;doprnt.c: 1450: while(--width);
  2824  003F9C  066B               	decf	sprintf@width,f,c
  2825  003F9E  A0D8               	btfss	status,0,c
  2826  003FA0  066C               	decf	sprintf@width+1,f,c
  2827  003FA2  506B               	movf	sprintf@width,w,c
  2828  003FA4  106C               	iorwf	sprintf@width+1,w,c
  2829  003FA6  A4D8               	btfss	status,2,c
  2830  003FA8  D7F0               	goto	u4280
  2831  003FAA                     u4290:
  2832  003FAA  FFFF               	dw	65535	; assembler added errata NOP
  2833                           
  2834                           ;doprnt.c: 1457: if(flag & 0x03)
  2835  003FAC  0E03               	movlw	3
  2836  003FAE  1469               	andwf	sprintf@flag,w,c
  2837  003FB0  6E55               	movwf	??_sprintf& (0+255),c
  2838  003FB2  0E00               	movlw	0
  2839  003FB4  146A               	andwf	sprintf@flag+1,w,c
  2840  003FB6  6E56               	movwf	(??_sprintf+1)& (0+255),c
  2841  003FB8  5055               	movf	??_sprintf,w,c
  2842  003FBA  1056               	iorwf	??_sprintf+1,w,c
  2843  003FBC  B4D8               	btfsc	status,2,c
  2844  003FBE  D008               	goto	l3801
  2845                           
  2846                           ;doprnt.c: 1458: ((*sp++ = ('-')));
  2847  003FC0  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2848  003FC4  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2849  003FC8  0E2D               	movlw	45
  2850  003FCA  6EDF               	movwf	indf2,c
  2851  003FCC  EFE0  F01A         	goto	l3513
  2852  003FD0                     l3801:
  2853  003FD0  FFFF               	dw	65535	; assembler added errata NOP
  2854  003FD2  C04F  FFF6         	movff	sprintf@f,tblptrl
  2855  003FD6  C050  FFF7         	movff	sprintf@f+1,tblptrh
  2856  003FDA  4A4F               	infsnz	sprintf@f,f,c
  2857  003FDC  2A50               	incf	sprintf@f+1,f,c
  2858  003FDE                     	if	0	;tblptru may be non-zero
  2859  003FDE                     	endif
  2860  003FDE                     	if	0	;tblptru may be non-zero
  2861  003FDE                     	endif
  2862  003FDE  0008               	tblrd		*
  2863  003FE0  FFFF               	dw	65535	; errata NOP
  2864  003FE2  CFF5 F073          	movff	tablat,sprintf@c
  2865  003FE6  5073               	movf	sprintf@c,w,c
  2866  003FE8  A4D8               	btfss	status,2,c
  2867  003FEA  EFD5  F01A         	goto	l3509
  2868  003FEE                     u4310:
  2869  003FEE  FFFF               	dw	65535	; assembler added errata NOP
  2870                           
  2871                           ;doprnt.c: 1557: *sp = 0;
  2872  003FF0  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2873  003FF4  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2874  003FF8  0E00               	movlw	0
  2875  003FFA  6EDF               	movwf	indf2,c
  2876  003FFC  0012               	return		;funcret
  2877  003FFE  FFFF               	dw	65535	; errata NOP
  2878  004000                     __end_of_sprintf:
  2879                           	opt callstack 0
  2880                           
  2881 ;; *************** function _scale *****************
  2882 ;; Defined at:
  2883 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;  scl             1    wreg     char 
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;  scl             1   47[COMRAM] char 
  2888 ;; Return value:  Size  Location     Type
  2889 ;;                  4   39[COMRAM] char 
  2890 ;; Registers used:
  2891 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2892 ;; Tracked objects:
  2893 ;;		On entry : 0/0
  2894 ;;		On exit  : 0/0
  2895 ;;		Unchanged: 0/0
  2896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2897 ;;      Params:         4       0       0       0       0       0       0
  2898 ;;      Locals:         5       0       0       0       0       0       0
  2899 ;;      Temps:          0       0       0       0       0       0       0
  2900 ;;      Totals:         9       0       0       0       0       0       0
  2901 ;;Total ram usage:        9 bytes
  2902 ;; Hardware stack levels used:    1
  2903 ;; Hardware stack levels required when called:    1
  2904 ;; This function calls:
  2905 ;;		___awdiv
  2906 ;;		___awmod
  2907 ;;		___flmul
  2908 ;; This function is called by:
  2909 ;;		_sprintf
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913                           	psect	text4
  2914  00318C                     __ptext4:
  2915                           	opt callstack 0
  2916  00318C                     _scale:
  2917                           	opt callstack 0
  2918  00318C  FFFF               	dw	65535	; assembler added errata NOP
  2919                           
  2920                           ;incstack = 0
  2921                           ;scale@scl stored from wreg
  2922  00318E  6E30               	movwf	scale@scl,c
  2923                           
  2924                           ;doprnt.c: 436: if(scl < 0) {
  2925  003190  AE30               	btfss	scale@scl,7,c
  2926  003192  D0FB               	goto	l3015
  2927                           
  2928                           ;doprnt.c: 437: scl = -scl;
  2929  003194  6C30               	negf	scale@scl,c
  2930                           
  2931                           ;doprnt.c: 438: if(scl>=110)
  2932  003196  5030               	movf	scale@scl,w,c
  2933  003198  0A80               	xorlw	128
  2934  00319A  0F12               	addlw	-238
  2935  00319C  A0D8               	btfss	status,0,c
  2936  00319E  D08C               	goto	l3005
  2937                           
  2938                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2939  0031A0  0E00               	movlw	0
  2940  0031A2  6E0A               	movwf	___awdiv@divisor+1,c
  2941  0031A4  0E0A               	movlw	10
  2942  0031A6  6E09               	movwf	___awdiv@divisor,c
  2943  0031A8  0E00               	movlw	0
  2944  0031AA  6E04               	movwf	___awmod@divisor+1,c
  2945  0031AC  0E64               	movlw	100
  2946  0031AE  6E03               	movwf	___awmod@divisor,c
  2947  0031B0  5030               	movf	scale@scl,w,c
  2948  0031B2  6E01               	movwf	___awmod@dividend,c
  2949  0031B4  6A02               	clrf	___awmod@dividend+1,c
  2950  0031B6  BE01               	btfsc	___awmod@dividend,7,c
  2951  0031B8  0602               	decf	___awmod@dividend+1,f,c
  2952  0031BA  EC2F  F00D         	call	___awmod	;wreg free
  2953  0031BE  C001  F007         	movff	?___awmod,___awdiv@dividend
  2954  0031C2  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2955  0031C6  EC04  F00E         	call	___awdiv	;wreg free
  2956  0031CA  0E09               	movlw	9
  2957  0031CC  2607               	addwf	?___awdiv,f,c
  2958  0031CE  5007               	movf	?___awdiv,w,c
  2959  0031D0  0D04               	mullw	4
  2960  0031D2  0EFD               	movlw	low __npowers_
  2961  0031D4  24F3               	addwf	prodl,w,c
  2962  0031D6  6EF6               	movwf	tblptrl,c
  2963  0031D8  0E7E               	movlw	high __npowers_
  2964  0031DA  20F4               	addwfc	prodh,w,c
  2965  0031DC  6EF7               	movwf	tblptrh,c
  2966  0031DE                     	if	0	;There are less than 3 active tblptr bytes
  2967  0031DE                     	endif
  2968  0031DE  0009               	tblrd		*+
  2969  0031E0  FFFF               	dw	65535	; errata NOP
  2970  0031E2  CFF5 F013          	movff	tablat,___flmul@a
  2971  0031E6  0009               	tblrd		*+
  2972  0031E8  FFFF               	dw	65535	; errata NOP
  2973  0031EA  CFF5 F014          	movff	tablat,___flmul@a+1
  2974  0031EE  0009               	tblrd		*+
  2975  0031F0  FFFF               	dw	65535	; errata NOP
  2976  0031F2  CFF5 F015          	movff	tablat,___flmul@a+2
  2977  0031F6  000A               	tblrd		*-
  2978  0031F8  FFFF               	dw	65535	; errata NOP
  2979  0031FA  CFF5 F016          	movff	tablat,___flmul@a+3
  2980  0031FE  0E00               	movlw	0
  2981  003200  6E0A               	movwf	___awdiv@divisor+1,c
  2982  003202  0E64               	movlw	100
  2983  003204  6E09               	movwf	___awdiv@divisor,c
  2984  003206  5030               	movf	scale@scl,w,c
  2985  003208  6E07               	movwf	___awdiv@dividend,c
  2986  00320A  6A08               	clrf	___awdiv@dividend+1,c
  2987  00320C  BE07               	btfsc	___awdiv@dividend,7,c
  2988  00320E  0608               	decf	___awdiv@dividend+1,f,c
  2989  003210  EC04  F00E         	call	___awdiv	;wreg free
  2990  003214  0E12               	movlw	18
  2991  003216  2607               	addwf	?___awdiv,f,c
  2992  003218  5007               	movf	?___awdiv,w,c
  2993  00321A  0D04               	mullw	4
  2994  00321C  0EFD               	movlw	low __npowers_
  2995  00321E  24F3               	addwf	prodl,w,c
  2996  003220  6EF6               	movwf	tblptrl,c
  2997  003222  0E7E               	movlw	high __npowers_
  2998  003224  20F4               	addwfc	prodh,w,c
  2999  003226  6EF7               	movwf	tblptrh,c
  3000  003228                     	if	0	;There are less than 3 active tblptr bytes
  3001  003228                     	endif
  3002  003228  0009               	tblrd		*+
  3003  00322A  FFFF               	dw	65535	; errata NOP
  3004  00322C  CFF5 F00F          	movff	tablat,___flmul@b
  3005  003230  0009               	tblrd		*+
  3006  003232  FFFF               	dw	65535	; errata NOP
  3007  003234  CFF5 F010          	movff	tablat,___flmul@b+1
  3008  003238  0009               	tblrd		*+
  3009  00323A  FFFF               	dw	65535	; errata NOP
  3010  00323C  CFF5 F011          	movff	tablat,___flmul@b+2
  3011  003240  000A               	tblrd		*-
  3012  003242  FFFF               	dw	65535	; errata NOP
  3013  003244  CFF5 F012          	movff	tablat,___flmul@b+3
  3014  003248  EC05  F017         	call	___flmul	;wreg free
  3015  00324C  C00F  F02C         	movff	?___flmul,_scale$836
  3016  003250  C010  F02D         	movff	?___flmul+1,_scale$836+1
  3017  003254  C011  F02E         	movff	?___flmul+2,_scale$836+2
  3018  003258  C012  F02F         	movff	?___flmul+3,_scale$836+3
  3019                           
  3020                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3021  00325C  C02C  F00F         	movff	_scale$836,___flmul@b
  3022  003260  C02D  F010         	movff	_scale$836+1,___flmul@b+1
  3023  003264  C02E  F011         	movff	_scale$836+2,___flmul@b+2
  3024  003268  C02F  F012         	movff	_scale$836+3,___flmul@b+3
  3025  00326C  0E00               	movlw	0
  3026  00326E  6E04               	movwf	___awmod@divisor+1,c
  3027  003270  0E0A               	movlw	10
  3028  003272  6E03               	movwf	___awmod@divisor,c
  3029  003274  5030               	movf	scale@scl,w,c
  3030  003276  6E01               	movwf	___awmod@dividend,c
  3031  003278  6A02               	clrf	___awmod@dividend+1,c
  3032  00327A  BE01               	btfsc	___awmod@dividend,7,c
  3033  00327C  0602               	decf	___awmod@dividend+1,f,c
  3034  00327E  EC2F  F00D         	call	___awmod	;wreg free
  3035  003282  5001               	movf	?___awmod,w,c
  3036  003284  0D04               	mullw	4
  3037  003286  0EFD               	movlw	low __npowers_
  3038  003288  24F3               	addwf	prodl,w,c
  3039  00328A  6EF6               	movwf	tblptrl,c
  3040  00328C  0E7E               	movlw	high __npowers_
  3041  00328E  20F4               	addwfc	prodh,w,c
  3042  003290  6EF7               	movwf	tblptrh,c
  3043  003292                     	if	0	;There are less than 3 active tblptr bytes
  3044  003292                     	endif
  3045  003292  0009               	tblrd		*+
  3046  003294  FFFF               	dw	65535	; errata NOP
  3047  003296  CFF5 F013          	movff	tablat,___flmul@a
  3048  00329A  0009               	tblrd		*+
  3049  00329C  FFFF               	dw	65535	; errata NOP
  3050  00329E  CFF5 F014          	movff	tablat,___flmul@a+1
  3051  0032A2  0009               	tblrd		*+
  3052  0032A4  FFFF               	dw	65535	; errata NOP
  3053  0032A6  CFF5 F015          	movff	tablat,___flmul@a+2
  3054  0032AA  000A               	tblrd		*-
  3055  0032AC  FFFF               	dw	65535	; errata NOP
  3056  0032AE  CFF5 F016          	movff	tablat,___flmul@a+3
  3057  0032B2  EC05  F017         	call	___flmul	;wreg free
  3058  0032B6  D14B               	goto	L8
  3059  0032B8                     l3005:
  3060  0032B8  FFFF               	dw	65535	; assembler added errata NOP
  3061                           
  3062                           ;doprnt.c: 440: else if(scl > 10)
  3063  0032BA  5030               	movf	scale@scl,w,c
  3064  0032BC  0A80               	xorlw	128
  3065  0032BE  0F75               	addlw	-139
  3066  0032C0  A0D8               	btfss	status,0,c
  3067  0032C2  D04B               	goto	l3011
  3068                           
  3069                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  3070  0032C4  0E00               	movlw	0
  3071  0032C6  6E0A               	movwf	___awdiv@divisor+1,c
  3072  0032C8  0E0A               	movlw	10
  3073  0032CA  6E09               	movwf	___awdiv@divisor,c
  3074  0032CC  5030               	movf	scale@scl,w,c
  3075  0032CE  6E07               	movwf	___awdiv@dividend,c
  3076  0032D0  6A08               	clrf	___awdiv@dividend+1,c
  3077  0032D2  BE07               	btfsc	___awdiv@dividend,7,c
  3078  0032D4  0608               	decf	___awdiv@dividend+1,f,c
  3079  0032D6  EC04  F00E         	call	___awdiv	;wreg free
  3080  0032DA  0E09               	movlw	9
  3081  0032DC  2607               	addwf	?___awdiv,f,c
  3082  0032DE  5007               	movf	?___awdiv,w,c
  3083  0032E0  0D04               	mullw	4
  3084  0032E2  0EFD               	movlw	low __npowers_
  3085  0032E4  24F3               	addwf	prodl,w,c
  3086  0032E6  6EF6               	movwf	tblptrl,c
  3087  0032E8  0E7E               	movlw	high __npowers_
  3088  0032EA  20F4               	addwfc	prodh,w,c
  3089  0032EC  6EF7               	movwf	tblptrh,c
  3090  0032EE                     	if	0	;There are less than 3 active tblptr bytes
  3091  0032EE                     	endif
  3092  0032EE  0009               	tblrd		*+
  3093  0032F0  FFFF               	dw	65535	; errata NOP
  3094  0032F2  CFF5 F00F          	movff	tablat,___flmul@b
  3095  0032F6  0009               	tblrd		*+
  3096  0032F8  FFFF               	dw	65535	; errata NOP
  3097  0032FA  CFF5 F010          	movff	tablat,___flmul@b+1
  3098  0032FE  0009               	tblrd		*+
  3099  003300  FFFF               	dw	65535	; errata NOP
  3100  003302  CFF5 F011          	movff	tablat,___flmul@b+2
  3101  003306  000A               	tblrd		*-
  3102  003308  FFFF               	dw	65535	; errata NOP
  3103  00330A  CFF5 F012          	movff	tablat,___flmul@b+3
  3104  00330E  0E00               	movlw	0
  3105  003310  6E04               	movwf	___awmod@divisor+1,c
  3106  003312  0E0A               	movlw	10
  3107  003314  6E03               	movwf	___awmod@divisor,c
  3108  003316  5030               	movf	scale@scl,w,c
  3109  003318  6E01               	movwf	___awmod@dividend,c
  3110  00331A  6A02               	clrf	___awmod@dividend+1,c
  3111  00331C  BE01               	btfsc	___awmod@dividend,7,c
  3112  00331E  0602               	decf	___awmod@dividend+1,f,c
  3113  003320  EC2F  F00D         	call	___awmod	;wreg free
  3114  003324  5001               	movf	?___awmod,w,c
  3115  003326  0D04               	mullw	4
  3116  003328  0EFD               	movlw	low __npowers_
  3117  00332A  24F3               	addwf	prodl,w,c
  3118  00332C  6EF6               	movwf	tblptrl,c
  3119  00332E  0E7E               	movlw	high __npowers_
  3120  003330  20F4               	addwfc	prodh,w,c
  3121  003332  6EF7               	movwf	tblptrh,c
  3122  003334                     	if	0	;There are less than 3 active tblptr bytes
  3123  003334                     	endif
  3124  003334  0009               	tblrd		*+
  3125  003336  FFFF               	dw	65535	; errata NOP
  3126  003338  CFF5 F013          	movff	tablat,___flmul@a
  3127  00333C  0009               	tblrd		*+
  3128  00333E  FFFF               	dw	65535	; errata NOP
  3129  003340  CFF5 F014          	movff	tablat,___flmul@a+1
  3130  003344  0009               	tblrd		*+
  3131  003346  FFFF               	dw	65535	; errata NOP
  3132  003348  CFF5 F015          	movff	tablat,___flmul@a+2
  3133  00334C  000A               	tblrd		*-
  3134  00334E  FFFF               	dw	65535	; errata NOP
  3135  003350  CFF5 F016          	movff	tablat,___flmul@a+3
  3136  003354  EC05  F017         	call	___flmul	;wreg free
  3137  003358  D0FA               	goto	L8
  3138  00335A                     l3011:
  3139  00335A  FFFF               	dw	65535	; assembler added errata NOP
  3140                           
  3141                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  3142  00335C  5030               	movf	scale@scl,w,c
  3143  00335E  0D04               	mullw	4
  3144  003360  0EFD               	movlw	low __npowers_
  3145  003362  24F3               	addwf	prodl,w,c
  3146  003364  6EF6               	movwf	tblptrl,c
  3147  003366  0E7E               	movlw	high __npowers_
  3148  003368  20F4               	addwfc	prodh,w,c
  3149  00336A  6EF7               	movwf	tblptrh,c
  3150  00336C                     	if	0	;There are less than 3 active tblptr bytes
  3151  00336C                     	endif
  3152  00336C  0009               	tblrd		*+
  3153  00336E  FFFF               	dw	65535	; errata NOP
  3154  003370  CFF5 F028          	movff	tablat,?_scale
  3155  003374  0009               	tblrd		*+
  3156  003376  FFFF               	dw	65535	; errata NOP
  3157  003378  CFF5 F029          	movff	tablat,?_scale+1
  3158  00337C  0009               	tblrd		*+
  3159  00337E  FFFF               	dw	65535	; errata NOP
  3160  003380  CFF5 F02A          	movff	tablat,?_scale+2
  3161  003384  000A               	tblrd		*-
  3162  003386  FFFF               	dw	65535	; errata NOP
  3163  003388  D103               	goto	L7
  3164  00338A                     l3015:
  3165  00338A  FFFF               	dw	65535	; assembler added errata NOP
  3166                           
  3167                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  3168  00338C  5030               	movf	scale@scl,w,c
  3169  00338E  0A80               	xorlw	128
  3170  003390  0F12               	addlw	-238
  3171  003392  A0D8               	btfss	status,0,c
  3172  003394  D08C               	goto	l3023
  3173                           
  3174                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  3175  003396  0E00               	movlw	0
  3176  003398  6E0A               	movwf	___awdiv@divisor+1,c
  3177  00339A  0E0A               	movlw	10
  3178  00339C  6E09               	movwf	___awdiv@divisor,c
  3179  00339E  0E00               	movlw	0
  3180  0033A0  6E04               	movwf	___awmod@divisor+1,c
  3181  0033A2  0E64               	movlw	100
  3182  0033A4  6E03               	movwf	___awmod@divisor,c
  3183  0033A6  5030               	movf	scale@scl,w,c
  3184  0033A8  6E01               	movwf	___awmod@dividend,c
  3185  0033AA  6A02               	clrf	___awmod@dividend+1,c
  3186  0033AC  BE01               	btfsc	___awmod@dividend,7,c
  3187  0033AE  0602               	decf	___awmod@dividend+1,f,c
  3188  0033B0  EC2F  F00D         	call	___awmod	;wreg free
  3189  0033B4  C001  F007         	movff	?___awmod,___awdiv@dividend
  3190  0033B8  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  3191  0033BC  EC04  F00E         	call	___awdiv	;wreg free
  3192  0033C0  0E09               	movlw	9
  3193  0033C2  2607               	addwf	?___awdiv,f,c
  3194  0033C4  5007               	movf	?___awdiv,w,c
  3195  0033C6  0D04               	mullw	4
  3196  0033C8  0EC9               	movlw	low __powers_
  3197  0033CA  24F3               	addwf	prodl,w,c
  3198  0033CC  6EF6               	movwf	tblptrl,c
  3199  0033CE  0E7E               	movlw	high __powers_
  3200  0033D0  20F4               	addwfc	prodh,w,c
  3201  0033D2  6EF7               	movwf	tblptrh,c
  3202  0033D4                     	if	0	;There are less than 3 active tblptr bytes
  3203  0033D4                     	endif
  3204  0033D4  0009               	tblrd		*+
  3205  0033D6  FFFF               	dw	65535	; errata NOP
  3206  0033D8  CFF5 F013          	movff	tablat,___flmul@a
  3207  0033DC  0009               	tblrd		*+
  3208  0033DE  FFFF               	dw	65535	; errata NOP
  3209  0033E0  CFF5 F014          	movff	tablat,___flmul@a+1
  3210  0033E4  0009               	tblrd		*+
  3211  0033E6  FFFF               	dw	65535	; errata NOP
  3212  0033E8  CFF5 F015          	movff	tablat,___flmul@a+2
  3213  0033EC  000A               	tblrd		*-
  3214  0033EE  FFFF               	dw	65535	; errata NOP
  3215  0033F0  CFF5 F016          	movff	tablat,___flmul@a+3
  3216  0033F4  0E00               	movlw	0
  3217  0033F6  6E0A               	movwf	___awdiv@divisor+1,c
  3218  0033F8  0E64               	movlw	100
  3219  0033FA  6E09               	movwf	___awdiv@divisor,c
  3220  0033FC  5030               	movf	scale@scl,w,c
  3221  0033FE  6E07               	movwf	___awdiv@dividend,c
  3222  003400  6A08               	clrf	___awdiv@dividend+1,c
  3223  003402  BE07               	btfsc	___awdiv@dividend,7,c
  3224  003404  0608               	decf	___awdiv@dividend+1,f,c
  3225  003406  EC04  F00E         	call	___awdiv	;wreg free
  3226  00340A  0E12               	movlw	18
  3227  00340C  2607               	addwf	?___awdiv,f,c
  3228  00340E  5007               	movf	?___awdiv,w,c
  3229  003410  0D04               	mullw	4
  3230  003412  0EC9               	movlw	low __powers_
  3231  003414  24F3               	addwf	prodl,w,c
  3232  003416  6EF6               	movwf	tblptrl,c
  3233  003418  0E7E               	movlw	high __powers_
  3234  00341A  20F4               	addwfc	prodh,w,c
  3235  00341C  6EF7               	movwf	tblptrh,c
  3236  00341E                     	if	0	;There are less than 3 active tblptr bytes
  3237  00341E                     	endif
  3238  00341E  0009               	tblrd		*+
  3239  003420  FFFF               	dw	65535	; errata NOP
  3240  003422  CFF5 F00F          	movff	tablat,___flmul@b
  3241  003426  0009               	tblrd		*+
  3242  003428  FFFF               	dw	65535	; errata NOP
  3243  00342A  CFF5 F010          	movff	tablat,___flmul@b+1
  3244  00342E  0009               	tblrd		*+
  3245  003430  FFFF               	dw	65535	; errata NOP
  3246  003432  CFF5 F011          	movff	tablat,___flmul@b+2
  3247  003436  000A               	tblrd		*-
  3248  003438  FFFF               	dw	65535	; errata NOP
  3249  00343A  CFF5 F012          	movff	tablat,___flmul@b+3
  3250  00343E  EC05  F017         	call	___flmul	;wreg free
  3251  003442  C00F  F02C         	movff	?___flmul,_scale$836
  3252  003446  C010  F02D         	movff	?___flmul+1,_scale$836+1
  3253  00344A  C011  F02E         	movff	?___flmul+2,_scale$836+2
  3254  00344E  C012  F02F         	movff	?___flmul+3,_scale$836+3
  3255                           
  3256                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  3257  003452  C02C  F00F         	movff	_scale$836,___flmul@b
  3258  003456  C02D  F010         	movff	_scale$836+1,___flmul@b+1
  3259  00345A  C02E  F011         	movff	_scale$836+2,___flmul@b+2
  3260  00345E  C02F  F012         	movff	_scale$836+3,___flmul@b+3
  3261  003462  0E00               	movlw	0
  3262  003464  6E04               	movwf	___awmod@divisor+1,c
  3263  003466  0E0A               	movlw	10
  3264  003468  6E03               	movwf	___awmod@divisor,c
  3265  00346A  5030               	movf	scale@scl,w,c
  3266  00346C  6E01               	movwf	___awmod@dividend,c
  3267  00346E  6A02               	clrf	___awmod@dividend+1,c
  3268  003470  BE01               	btfsc	___awmod@dividend,7,c
  3269  003472  0602               	decf	___awmod@dividend+1,f,c
  3270  003474  EC2F  F00D         	call	___awmod	;wreg free
  3271  003478  5001               	movf	?___awmod,w,c
  3272  00347A  0D04               	mullw	4
  3273  00347C  0EC9               	movlw	low __powers_
  3274  00347E  24F3               	addwf	prodl,w,c
  3275  003480  6EF6               	movwf	tblptrl,c
  3276  003482  0E7E               	movlw	high __powers_
  3277  003484  20F4               	addwfc	prodh,w,c
  3278  003486  6EF7               	movwf	tblptrh,c
  3279  003488                     	if	0	;There are less than 3 active tblptr bytes
  3280  003488                     	endif
  3281  003488  0009               	tblrd		*+
  3282  00348A  FFFF               	dw	65535	; errata NOP
  3283  00348C  CFF5 F013          	movff	tablat,___flmul@a
  3284  003490  0009               	tblrd		*+
  3285  003492  FFFF               	dw	65535	; errata NOP
  3286  003494  CFF5 F014          	movff	tablat,___flmul@a+1
  3287  003498  0009               	tblrd		*+
  3288  00349A  FFFF               	dw	65535	; errata NOP
  3289  00349C  CFF5 F015          	movff	tablat,___flmul@a+2
  3290  0034A0  000A               	tblrd		*-
  3291  0034A2  FFFF               	dw	65535	; errata NOP
  3292  0034A4  CFF5 F016          	movff	tablat,___flmul@a+3
  3293  0034A8  EC05  F017         	call	___flmul	;wreg free
  3294  0034AC  D050               	goto	L8
  3295  0034AE                     l3023:
  3296  0034AE  FFFF               	dw	65535	; assembler added errata NOP
  3297                           
  3298                           ;doprnt.c: 446: else if(scl > 10)
  3299  0034B0  5030               	movf	scale@scl,w,c
  3300  0034B2  0A80               	xorlw	128
  3301  0034B4  0F75               	addlw	-139
  3302  0034B6  A0D8               	btfss	status,0,c
  3303  0034B8  D054               	goto	l3029
  3304                           
  3305                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  3306  0034BA  0E00               	movlw	0
  3307  0034BC  6E0A               	movwf	___awdiv@divisor+1,c
  3308  0034BE  0E0A               	movlw	10
  3309  0034C0  6E09               	movwf	___awdiv@divisor,c
  3310  0034C2  5030               	movf	scale@scl,w,c
  3311  0034C4  6E07               	movwf	___awdiv@dividend,c
  3312  0034C6  6A08               	clrf	___awdiv@dividend+1,c
  3313  0034C8  BE07               	btfsc	___awdiv@dividend,7,c
  3314  0034CA  0608               	decf	___awdiv@dividend+1,f,c
  3315  0034CC  EC04  F00E         	call	___awdiv	;wreg free
  3316  0034D0  0E09               	movlw	9
  3317  0034D2  2607               	addwf	?___awdiv,f,c
  3318  0034D4  5007               	movf	?___awdiv,w,c
  3319  0034D6  0D04               	mullw	4
  3320  0034D8  0EC9               	movlw	low __powers_
  3321  0034DA  24F3               	addwf	prodl,w,c
  3322  0034DC  6EF6               	movwf	tblptrl,c
  3323  0034DE  0E7E               	movlw	high __powers_
  3324  0034E0  20F4               	addwfc	prodh,w,c
  3325  0034E2  6EF7               	movwf	tblptrh,c
  3326  0034E4                     	if	0	;There are less than 3 active tblptr bytes
  3327  0034E4                     	endif
  3328  0034E4  0009               	tblrd		*+
  3329  0034E6  FFFF               	dw	65535	; errata NOP
  3330  0034E8  CFF5 F00F          	movff	tablat,___flmul@b
  3331  0034EC  0009               	tblrd		*+
  3332  0034EE  FFFF               	dw	65535	; errata NOP
  3333  0034F0  CFF5 F010          	movff	tablat,___flmul@b+1
  3334  0034F4  0009               	tblrd		*+
  3335  0034F6  FFFF               	dw	65535	; errata NOP
  3336  0034F8  CFF5 F011          	movff	tablat,___flmul@b+2
  3337  0034FC  000A               	tblrd		*-
  3338  0034FE  FFFF               	dw	65535	; errata NOP
  3339  003500  CFF5 F012          	movff	tablat,___flmul@b+3
  3340  003504  0E00               	movlw	0
  3341  003506  6E04               	movwf	___awmod@divisor+1,c
  3342  003508  0E0A               	movlw	10
  3343  00350A  6E03               	movwf	___awmod@divisor,c
  3344  00350C  5030               	movf	scale@scl,w,c
  3345  00350E  6E01               	movwf	___awmod@dividend,c
  3346  003510  6A02               	clrf	___awmod@dividend+1,c
  3347  003512  BE01               	btfsc	___awmod@dividend,7,c
  3348  003514  0602               	decf	___awmod@dividend+1,f,c
  3349  003516  EC2F  F00D         	call	___awmod	;wreg free
  3350  00351A  5001               	movf	?___awmod,w,c
  3351  00351C  0D04               	mullw	4
  3352  00351E  0EC9               	movlw	low __powers_
  3353  003520  24F3               	addwf	prodl,w,c
  3354  003522  6EF6               	movwf	tblptrl,c
  3355  003524  0E7E               	movlw	high __powers_
  3356  003526  20F4               	addwfc	prodh,w,c
  3357  003528  6EF7               	movwf	tblptrh,c
  3358  00352A                     	if	0	;There are less than 3 active tblptr bytes
  3359  00352A                     	endif
  3360  00352A  0009               	tblrd		*+
  3361  00352C  FFFF               	dw	65535	; errata NOP
  3362  00352E  CFF5 F013          	movff	tablat,___flmul@a
  3363  003532  0009               	tblrd		*+
  3364  003534  FFFF               	dw	65535	; errata NOP
  3365  003536  CFF5 F014          	movff	tablat,___flmul@a+1
  3366  00353A  0009               	tblrd		*+
  3367  00353C  FFFF               	dw	65535	; errata NOP
  3368  00353E  CFF5 F015          	movff	tablat,___flmul@a+2
  3369  003542  000A               	tblrd		*-
  3370  003544  FFFF               	dw	65535	; errata NOP
  3371  003546  CFF5 F016          	movff	tablat,___flmul@a+3
  3372  00354A  EC05  F017         	call	___flmul	;wreg free
  3373  00354E                     L8:
  3374  00354E  FFFF               	dw	65535	; assembler added errata NOP
  3375  003550  C00F  F028         	movff	?___flmul,?_scale
  3376  003554  C010  F029         	movff	?___flmul+1,?_scale+1
  3377  003558  C011  F02A         	movff	?___flmul+2,?_scale+2
  3378  00355C  C012  F02B         	movff	?___flmul+3,?_scale+3
  3379  003560  D01A               	goto	l157
  3380  003562                     l3029:
  3381  003562  FFFF               	dw	65535	; assembler added errata NOP
  3382                           
  3383                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  3384  003564  5030               	movf	scale@scl,w,c
  3385  003566  0D04               	mullw	4
  3386  003568  0EC9               	movlw	low __powers_
  3387  00356A  24F3               	addwf	prodl,w,c
  3388  00356C  6EF6               	movwf	tblptrl,c
  3389  00356E  0E7E               	movlw	high __powers_
  3390  003570  20F4               	addwfc	prodh,w,c
  3391  003572  6EF7               	movwf	tblptrh,c
  3392  003574                     	if	0	;There are less than 3 active tblptr bytes
  3393  003574                     	endif
  3394  003574  0009               	tblrd		*+
  3395  003576  FFFF               	dw	65535	; errata NOP
  3396  003578  CFF5 F028          	movff	tablat,?_scale
  3397  00357C  0009               	tblrd		*+
  3398  00357E  FFFF               	dw	65535	; errata NOP
  3399  003580  CFF5 F029          	movff	tablat,?_scale+1
  3400  003584  0009               	tblrd		*+
  3401  003586  FFFF               	dw	65535	; errata NOP
  3402  003588  CFF5 F02A          	movff	tablat,?_scale+2
  3403  00358C  000A               	tblrd		*-
  3404  00358E  FFFF               	dw	65535	; errata NOP
  3405  003590                     L7:
  3406  003590  FFFF               	dw	65535	; assembler added errata NOP
  3407  003592  CFF5 F02B          	movff	tablat,?_scale+3
  3408  003596                     l157:
  3409  003596  FFFF               	dw	65535	; assembler added errata NOP
  3410  003598  0012               	return		;funcret
  3411  00359A  FFFF               	dw	65535	; errata NOP
  3412  00359C                     __end_of_scale:
  3413                           	opt callstack 0
  3414                           
  3415 ;; *************** function ___awmod *****************
  3416 ;; Defined at:
  3417 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  3418 ;; Parameters:    Size  Location     Type
  3419 ;;  dividend        2    0[COMRAM] int 
  3420 ;;  divisor         2    2[COMRAM] int 
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;  sign            1    5[COMRAM] unsigned char 
  3423 ;;  counter         1    4[COMRAM] unsigned char 
  3424 ;; Return value:  Size  Location     Type
  3425 ;;                  2    0[COMRAM] int 
  3426 ;; Registers used:
  3427 ;;		wreg, status,2, status,0
  3428 ;; Tracked objects:
  3429 ;;		On entry : 0/0
  3430 ;;		On exit  : 0/0
  3431 ;;		Unchanged: 0/0
  3432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3433 ;;      Params:         4       0       0       0       0       0       0
  3434 ;;      Locals:         2       0       0       0       0       0       0
  3435 ;;      Temps:          0       0       0       0       0       0       0
  3436 ;;      Totals:         6       0       0       0       0       0       0
  3437 ;;Total ram usage:        6 bytes
  3438 ;; Hardware stack levels used:    1
  3439 ;; This function calls:
  3440 ;;		Nothing
  3441 ;; This function is called by:
  3442 ;;		_scale
  3443 ;; This function uses a non-reentrant model
  3444 ;;
  3445                           
  3446                           	psect	text5
  3447  001A5E                     __ptext5:
  3448                           	opt callstack 0
  3449  001A5E                     ___awmod:
  3450                           	opt callstack 0
  3451  001A5E  FFFF               	dw	65535	; assembler added errata NOP
  3452                           
  3453                           ;incstack = 0
  3454  001A60  0E00               	movlw	0
  3455  001A62  6E06               	movwf	___awmod@sign,c
  3456  001A64  AE02               	btfss	___awmod@dividend+1,7,c
  3457  001A66  D006               	goto	l2881
  3458  001A68  6C01               	negf	___awmod@dividend,c
  3459  001A6A  1E02               	comf	___awmod@dividend+1,f,c
  3460  001A6C  B0D8               	btfsc	status,0,c
  3461  001A6E  2A02               	incf	___awmod@dividend+1,f,c
  3462  001A70  0E01               	movlw	1
  3463  001A72  6E06               	movwf	___awmod@sign,c
  3464  001A74                     l2881:
  3465  001A74  FFFF               	dw	65535	; assembler added errata NOP
  3466  001A76  AE04               	btfss	___awmod@divisor+1,7,c
  3467  001A78  D004               	goto	l2885
  3468  001A7A  6C03               	negf	___awmod@divisor,c
  3469  001A7C  1E04               	comf	___awmod@divisor+1,f,c
  3470  001A7E  B0D8               	btfsc	status,0,c
  3471  001A80  2A04               	incf	___awmod@divisor+1,f,c
  3472  001A82                     l2885:
  3473  001A82  FFFF               	dw	65535	; assembler added errata NOP
  3474  001A84  5003               	movf	___awmod@divisor,w,c
  3475  001A86  1004               	iorwf	___awmod@divisor+1,w,c
  3476  001A88  B4D8               	btfsc	status,2,c
  3477  001A8A  D01C               	goto	l2901
  3478  001A8C  0E01               	movlw	1
  3479  001A8E  6E05               	movwf	___awmod@counter,c
  3480  001A90  D005               	goto	l2891
  3481  001A92                     l2889:
  3482  001A92  FFFF               	dw	65535	; assembler added errata NOP
  3483  001A94  90D8               	bcf	status,0,c
  3484  001A96  3603               	rlcf	___awmod@divisor,f,c
  3485  001A98  3604               	rlcf	___awmod@divisor+1,f,c
  3486  001A9A  2A05               	incf	___awmod@counter,f,c
  3487  001A9C                     l2891:
  3488  001A9C  FFFF               	dw	65535	; assembler added errata NOP
  3489  001A9E  AE04               	btfss	___awmod@divisor+1,7,c
  3490  001AA0  D7F8               	goto	l2889
  3491  001AA2                     u2890:
  3492  001AA2  FFFF               	dw	65535	; assembler added errata NOP
  3493  001AA4  5003               	movf	___awmod@divisor,w,c
  3494  001AA6  5C01               	subwf	___awmod@dividend,w,c
  3495  001AA8  5004               	movf	___awmod@divisor+1,w,c
  3496  001AAA  5802               	subwfb	___awmod@dividend+1,w,c
  3497  001AAC  A0D8               	btfss	status,0,c
  3498  001AAE  D004               	goto	l2897
  3499  001AB0  5003               	movf	___awmod@divisor,w,c
  3500  001AB2  5E01               	subwf	___awmod@dividend,f,c
  3501  001AB4  5004               	movf	___awmod@divisor+1,w,c
  3502  001AB6  5A02               	subwfb	___awmod@dividend+1,f,c
  3503  001AB8                     l2897:
  3504  001AB8  FFFF               	dw	65535	; assembler added errata NOP
  3505  001ABA  90D8               	bcf	status,0,c
  3506  001ABC  3204               	rrcf	___awmod@divisor+1,f,c
  3507  001ABE  3203               	rrcf	___awmod@divisor,f,c
  3508  001AC0  2E05               	decfsz	___awmod@counter,f,c
  3509  001AC2  D7EF               	goto	u2890
  3510  001AC4                     l2901:
  3511  001AC4  FFFF               	dw	65535	; assembler added errata NOP
  3512  001AC6  5006               	movf	___awmod@sign,w,c
  3513  001AC8  B4D8               	btfsc	status,2,c
  3514  001ACA  D004               	goto	l2905
  3515  001ACC  6C01               	negf	___awmod@dividend,c
  3516  001ACE  1E02               	comf	___awmod@dividend+1,f,c
  3517  001AD0  B0D8               	btfsc	status,0,c
  3518  001AD2  2A02               	incf	___awmod@dividend+1,f,c
  3519  001AD4                     l2905:
  3520  001AD4  FFFF               	dw	65535	; assembler added errata NOP
  3521  001AD6  C001  F001         	movff	___awmod@dividend,?___awmod
  3522  001ADA  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3523  001ADE  0012               	return		;funcret
  3524  001AE0  FFFF               	dw	65535	; errata NOP
  3525  001AE2                     __end_of___awmod:
  3526                           	opt callstack 0
  3527                           
  3528 ;; *************** function ___awdiv *****************
  3529 ;; Defined at:
  3530 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  3531 ;; Parameters:    Size  Location     Type
  3532 ;;  dividend        2    6[COMRAM] int 
  3533 ;;  divisor         2    8[COMRAM] int 
  3534 ;; Auto vars:     Size  Location     Type
  3535 ;;  quotient        2   12[COMRAM] int 
  3536 ;;  sign            1   11[COMRAM] unsigned char 
  3537 ;;  counter         1   10[COMRAM] unsigned char 
  3538 ;; Return value:  Size  Location     Type
  3539 ;;                  2    6[COMRAM] int 
  3540 ;; Registers used:
  3541 ;;		wreg, status,2, status,0
  3542 ;; Tracked objects:
  3543 ;;		On entry : 0/0
  3544 ;;		On exit  : 0/0
  3545 ;;		Unchanged: 0/0
  3546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3547 ;;      Params:         4       0       0       0       0       0       0
  3548 ;;      Locals:         4       0       0       0       0       0       0
  3549 ;;      Temps:          0       0       0       0       0       0       0
  3550 ;;      Totals:         8       0       0       0       0       0       0
  3551 ;;Total ram usage:        8 bytes
  3552 ;; Hardware stack levels used:    1
  3553 ;; This function calls:
  3554 ;;		Nothing
  3555 ;; This function is called by:
  3556 ;;		_scale
  3557 ;;		_sprintf
  3558 ;; This function uses a non-reentrant model
  3559 ;;
  3560                           
  3561                           	psect	text6
  3562  001C08                     __ptext6:
  3563                           	opt callstack 0
  3564  001C08                     ___awdiv:
  3565                           	opt callstack 0
  3566  001C08  FFFF               	dw	65535	; assembler added errata NOP
  3567                           
  3568                           ;incstack = 0
  3569  001C0A  0E00               	movlw	0
  3570  001C0C  6E0C               	movwf	___awdiv@sign,c
  3571  001C0E  AE0A               	btfss	___awdiv@divisor+1,7,c
  3572  001C10  D006               	goto	l2837
  3573  001C12  6C09               	negf	___awdiv@divisor,c
  3574  001C14  1E0A               	comf	___awdiv@divisor+1,f,c
  3575  001C16  B0D8               	btfsc	status,0,c
  3576  001C18  2A0A               	incf	___awdiv@divisor+1,f,c
  3577  001C1A  0E01               	movlw	1
  3578  001C1C  6E0C               	movwf	___awdiv@sign,c
  3579  001C1E                     l2837:
  3580  001C1E  FFFF               	dw	65535	; assembler added errata NOP
  3581  001C20  AE08               	btfss	___awdiv@dividend+1,7,c
  3582  001C22  D006               	goto	l2843
  3583  001C24  6C07               	negf	___awdiv@dividend,c
  3584  001C26  1E08               	comf	___awdiv@dividend+1,f,c
  3585  001C28  B0D8               	btfsc	status,0,c
  3586  001C2A  2A08               	incf	___awdiv@dividend+1,f,c
  3587  001C2C  0E01               	movlw	1
  3588  001C2E  1A0C               	xorwf	___awdiv@sign,f,c
  3589  001C30                     l2843:
  3590  001C30  FFFF               	dw	65535	; assembler added errata NOP
  3591  001C32  0E00               	movlw	0
  3592  001C34  6E0E               	movwf	___awdiv@quotient+1,c
  3593  001C36  0E00               	movlw	0
  3594  001C38  6E0D               	movwf	___awdiv@quotient,c
  3595  001C3A  5009               	movf	___awdiv@divisor,w,c
  3596  001C3C  100A               	iorwf	___awdiv@divisor+1,w,c
  3597  001C3E  B4D8               	btfsc	status,2,c
  3598  001C40  D020               	goto	l2865
  3599  001C42  0E01               	movlw	1
  3600  001C44  6E0B               	movwf	___awdiv@counter,c
  3601  001C46  D005               	goto	l2851
  3602  001C48                     l2849:
  3603  001C48  FFFF               	dw	65535	; assembler added errata NOP
  3604  001C4A  90D8               	bcf	status,0,c
  3605  001C4C  3609               	rlcf	___awdiv@divisor,f,c
  3606  001C4E  360A               	rlcf	___awdiv@divisor+1,f,c
  3607  001C50  2A0B               	incf	___awdiv@counter,f,c
  3608  001C52                     l2851:
  3609  001C52  FFFF               	dw	65535	; assembler added errata NOP
  3610  001C54  AE0A               	btfss	___awdiv@divisor+1,7,c
  3611  001C56  D7F8               	goto	l2849
  3612  001C58                     u2830:
  3613  001C58  FFFF               	dw	65535	; assembler added errata NOP
  3614  001C5A  90D8               	bcf	status,0,c
  3615  001C5C  360D               	rlcf	___awdiv@quotient,f,c
  3616  001C5E  360E               	rlcf	___awdiv@quotient+1,f,c
  3617  001C60  5009               	movf	___awdiv@divisor,w,c
  3618  001C62  5C07               	subwf	___awdiv@dividend,w,c
  3619  001C64  500A               	movf	___awdiv@divisor+1,w,c
  3620  001C66  5808               	subwfb	___awdiv@dividend+1,w,c
  3621  001C68  A0D8               	btfss	status,0,c
  3622  001C6A  D005               	goto	l2861
  3623  001C6C  5009               	movf	___awdiv@divisor,w,c
  3624  001C6E  5E07               	subwf	___awdiv@dividend,f,c
  3625  001C70  500A               	movf	___awdiv@divisor+1,w,c
  3626  001C72  5A08               	subwfb	___awdiv@dividend+1,f,c
  3627  001C74  800D               	bsf	___awdiv@quotient,0,c
  3628  001C76                     l2861:
  3629  001C76  FFFF               	dw	65535	; assembler added errata NOP
  3630  001C78  90D8               	bcf	status,0,c
  3631  001C7A  320A               	rrcf	___awdiv@divisor+1,f,c
  3632  001C7C  3209               	rrcf	___awdiv@divisor,f,c
  3633  001C7E  2E0B               	decfsz	___awdiv@counter,f,c
  3634  001C80  D7EB               	goto	u2830
  3635  001C82                     l2865:
  3636  001C82  FFFF               	dw	65535	; assembler added errata NOP
  3637  001C84  500C               	movf	___awdiv@sign,w,c
  3638  001C86  B4D8               	btfsc	status,2,c
  3639  001C88  D004               	goto	l2869
  3640  001C8A  6C0D               	negf	___awdiv@quotient,c
  3641  001C8C  1E0E               	comf	___awdiv@quotient+1,f,c
  3642  001C8E  B0D8               	btfsc	status,0,c
  3643  001C90  2A0E               	incf	___awdiv@quotient+1,f,c
  3644  001C92                     l2869:
  3645  001C92  FFFF               	dw	65535	; assembler added errata NOP
  3646  001C94  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  3647  001C98  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  3648  001C9C  0012               	return		;funcret
  3649  001C9E  FFFF               	dw	65535	; errata NOP
  3650  001CA0                     __end_of___awdiv:
  3651                           	opt callstack 0
  3652                           
  3653 ;; *************** function _isdigit *****************
  3654 ;; Defined at:
  3655 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
  3656 ;; Parameters:    Size  Location     Type
  3657 ;;  c               1    wreg     unsigned char 
  3658 ;; Auto vars:     Size  Location     Type
  3659 ;;  c               1    2[COMRAM] unsigned char 
  3660 ;; Return value:  Size  Location     Type
  3661 ;;		None               void
  3662 ;; Registers used:
  3663 ;;		wreg, status,2, status,0
  3664 ;; Tracked objects:
  3665 ;;		On entry : 0/0
  3666 ;;		On exit  : 0/0
  3667 ;;		Unchanged: 0/0
  3668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3669 ;;      Params:         0       0       0       0       0       0       0
  3670 ;;      Locals:         2       0       0       0       0       0       0
  3671 ;;      Temps:          1       0       0       0       0       0       0
  3672 ;;      Totals:         3       0       0       0       0       0       0
  3673 ;;Total ram usage:        3 bytes
  3674 ;; Hardware stack levels used:    1
  3675 ;; This function calls:
  3676 ;;		Nothing
  3677 ;; This function is called by:
  3678 ;;		_sprintf
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681                           
  3682                           	psect	text7
  3683  0016B0                     __ptext7:
  3684                           	opt callstack 0
  3685  0016B0                     _isdigit:
  3686                           	opt callstack 0
  3687  0016B0  FFFF               	dw	65535	; assembler added errata NOP
  3688                           
  3689                           ;incstack = 0
  3690                           ;isdigit@c stored from wreg
  3691  0016B2  6E03               	movwf	isdigit@c,c
  3692  0016B4  0E00               	movlw	0
  3693  0016B6  6E02               	movwf	_isdigit$653,c
  3694  0016B8  0E3A               	movlw	58
  3695  0016BA  6003               	cpfslt	isdigit@c,c
  3696  0016BC  D005               	goto	l3041
  3697  0016BE  0E2F               	movlw	47
  3698  0016C0  6403               	cpfsgt	isdigit@c,c
  3699  0016C2  D002               	goto	l3041
  3700  0016C4  0E01               	movlw	1
  3701  0016C6  6E02               	movwf	_isdigit$653,c
  3702  0016C8                     l3041:
  3703  0016C8  FFFF               	dw	65535	; assembler added errata NOP
  3704  0016CA  C002  F001         	movff	_isdigit$653,??_isdigit
  3705  0016CE  3001               	rrcf	??_isdigit,w,c
  3706  0016D0  0012               	return		;funcret
  3707  0016D2  FFFF               	dw	65535	; errata NOP
  3708  0016D4                     __end_of_isdigit:
  3709                           	opt callstack 0
  3710                           
  3711 ;; *************** function _fround *****************
  3712 ;; Defined at:
  3713 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  3714 ;; Parameters:    Size  Location     Type
  3715 ;;  prec            1    wreg     unsigned char 
  3716 ;; Auto vars:     Size  Location     Type
  3717 ;;  prec            1   51[COMRAM] unsigned char 
  3718 ;; Return value:  Size  Location     Type
  3719 ;;                  4   39[COMRAM] unsigned char 
  3720 ;; Registers used:
  3721 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3722 ;; Tracked objects:
  3723 ;;		On entry : 0/0
  3724 ;;		On exit  : 0/0
  3725 ;;		Unchanged: 0/0
  3726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3727 ;;      Params:         4       0       0       0       0       0       0
  3728 ;;      Locals:         9       0       0       0       0       0       0
  3729 ;;      Temps:          0       0       0       0       0       0       0
  3730 ;;      Totals:        13       0       0       0       0       0       0
  3731 ;;Total ram usage:       13 bytes
  3732 ;; Hardware stack levels used:    1
  3733 ;; Hardware stack levels required when called:    1
  3734 ;; This function calls:
  3735 ;;		___flmul
  3736 ;;		___lwdiv
  3737 ;;		___lwmod
  3738 ;; This function is called by:
  3739 ;;		_sprintf
  3740 ;; This function uses a non-reentrant model
  3741 ;;
  3742                           
  3743                           	psect	text8
  3744  0022B8                     __ptext8:
  3745                           	opt callstack 0
  3746  0022B8                     _fround:
  3747                           	opt callstack 0
  3748  0022B8  FFFF               	dw	65535	; assembler added errata NOP
  3749                           
  3750                           ;incstack = 0
  3751                           ;fround@prec stored from wreg
  3752  0022BA  6E34               	movwf	fround@prec,c
  3753                           
  3754                           ;doprnt.c: 421: if(prec>=110)
  3755  0022BC  0E6D               	movlw	109
  3756  0022BE  6434               	cpfsgt	fround@prec,c
  3757  0022C0  D0B0               	goto	l2985
  3758                           
  3759                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  3760  0022C2  0E00               	movlw	0
  3761  0022C4  6E13               	movwf	___flmul@a,c
  3762  0022C6  0E00               	movlw	0
  3763  0022C8  6E14               	movwf	___flmul@a+1,c
  3764  0022CA  0E00               	movlw	0
  3765  0022CC  6E15               	movwf	___flmul@a+2,c
  3766  0022CE  0E3F               	movlw	63
  3767  0022D0  6E16               	movwf	___flmul@a+3,c
  3768  0022D2  0E00               	movlw	0
  3769  0022D4  6E09               	movwf	___lwdiv@divisor+1,c
  3770  0022D6  0E64               	movlw	100
  3771  0022D8  6E08               	movwf	___lwdiv@divisor,c
  3772  0022DA  C034  F006         	movff	fround@prec,___lwdiv@dividend
  3773  0022DE  6A07               	clrf	___lwdiv@dividend+1,c
  3774  0022E0  EC5B  F00C         	call	___lwdiv	;wreg free
  3775  0022E4  90D8               	bcf	status,0,c
  3776  0022E6  3606               	rlcf	?___lwdiv,f,c
  3777  0022E8  3607               	rlcf	?___lwdiv+1,f,c
  3778  0022EA  90D8               	bcf	status,0,c
  3779  0022EC  3606               	rlcf	?___lwdiv,f,c
  3780  0022EE  3607               	rlcf	?___lwdiv+1,f,c
  3781  0022F0  0E48               	movlw	72
  3782  0022F2  2606               	addwf	?___lwdiv,f,c
  3783  0022F4  0E00               	movlw	0
  3784  0022F6  2207               	addwfc	?___lwdiv+1,f,c
  3785  0022F8  0EFD               	movlw	low __npowers_
  3786  0022FA  2406               	addwf	?___lwdiv,w,c
  3787  0022FC  6EF6               	movwf	tblptrl,c
  3788  0022FE  0E7E               	movlw	high __npowers_
  3789  002300  2007               	addwfc	?___lwdiv+1,w,c
  3790  002302  6EF7               	movwf	tblptrh,c
  3791  002304                     	if	0	;There are less than 3 active tblptr bytes
  3792  002304                     	endif
  3793  002304  0009               	tblrd		*+
  3794  002306  FFFF               	dw	65535	; errata NOP
  3795  002308  CFF5 F00F          	movff	tablat,___flmul@b
  3796  00230C  0009               	tblrd		*+
  3797  00230E  FFFF               	dw	65535	; errata NOP
  3798  002310  CFF5 F010          	movff	tablat,___flmul@b+1
  3799  002314  0009               	tblrd		*+
  3800  002316  FFFF               	dw	65535	; errata NOP
  3801  002318  CFF5 F011          	movff	tablat,___flmul@b+2
  3802  00231C  000A               	tblrd		*-
  3803  00231E  FFFF               	dw	65535	; errata NOP
  3804  002320  CFF5 F012          	movff	tablat,___flmul@b+3
  3805  002324  EC05  F017         	call	___flmul	;wreg free
  3806  002328  C00F  F030         	movff	?___flmul,_fround$834
  3807  00232C  C010  F031         	movff	?___flmul+1,_fround$834+1
  3808  002330  C011  F032         	movff	?___flmul+2,_fround$834+2
  3809  002334  C012  F033         	movff	?___flmul+3,_fround$834+3
  3810                           
  3811                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  3812  002338  0E00               	movlw	0
  3813  00233A  6E09               	movwf	___lwdiv@divisor+1,c
  3814  00233C  0E0A               	movlw	10
  3815  00233E  6E08               	movwf	___lwdiv@divisor,c
  3816  002340  0E00               	movlw	0
  3817  002342  6E04               	movwf	___lwmod@divisor+1,c
  3818  002344  0E64               	movlw	100
  3819  002346  6E03               	movwf	___lwmod@divisor,c
  3820  002348  C034  F001         	movff	fround@prec,___lwmod@dividend
  3821  00234C  6A02               	clrf	___lwmod@dividend+1,c
  3822  00234E  EC07  F00C         	call	___lwmod	;wreg free
  3823  002352  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  3824  002356  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  3825  00235A  EC5B  F00C         	call	___lwdiv	;wreg free
  3826  00235E  90D8               	bcf	status,0,c
  3827  002360  3606               	rlcf	?___lwdiv,f,c
  3828  002362  3607               	rlcf	?___lwdiv+1,f,c
  3829  002364  90D8               	bcf	status,0,c
  3830  002366  3606               	rlcf	?___lwdiv,f,c
  3831  002368  3607               	rlcf	?___lwdiv+1,f,c
  3832  00236A  0E24               	movlw	36
  3833  00236C  2606               	addwf	?___lwdiv,f,c
  3834  00236E  0E00               	movlw	0
  3835  002370  2207               	addwfc	?___lwdiv+1,f,c
  3836  002372  0EFD               	movlw	low __npowers_
  3837  002374  2406               	addwf	?___lwdiv,w,c
  3838  002376  6EF6               	movwf	tblptrl,c
  3839  002378  0E7E               	movlw	high __npowers_
  3840  00237A  2007               	addwfc	?___lwdiv+1,w,c
  3841  00237C  6EF7               	movwf	tblptrh,c
  3842  00237E                     	if	0	;There are less than 3 active tblptr bytes
  3843  00237E                     	endif
  3844  00237E  0009               	tblrd		*+
  3845  002380  FFFF               	dw	65535	; errata NOP
  3846  002382  CFF5 F013          	movff	tablat,___flmul@a
  3847  002386  0009               	tblrd		*+
  3848  002388  FFFF               	dw	65535	; errata NOP
  3849  00238A  CFF5 F014          	movff	tablat,___flmul@a+1
  3850  00238E  0009               	tblrd		*+
  3851  002390  FFFF               	dw	65535	; errata NOP
  3852  002392  CFF5 F015          	movff	tablat,___flmul@a+2
  3853  002396  000A               	tblrd		*-
  3854  002398  FFFF               	dw	65535	; errata NOP
  3855  00239A  CFF5 F016          	movff	tablat,___flmul@a+3
  3856  00239E  C030  F00F         	movff	_fround$834,___flmul@b
  3857  0023A2  C031  F010         	movff	_fround$834+1,___flmul@b+1
  3858  0023A6  C032  F011         	movff	_fround$834+2,___flmul@b+2
  3859  0023AA  C033  F012         	movff	_fround$834+3,___flmul@b+3
  3860  0023AE  EC05  F017         	call	___flmul	;wreg free
  3861  0023B2  C00F  F02C         	movff	?___flmul,_fround$835
  3862  0023B6  C010  F02D         	movff	?___flmul+1,_fround$835+1
  3863  0023BA  C011  F02E         	movff	?___flmul+2,_fround$835+2
  3864  0023BE  C012  F02F         	movff	?___flmul+3,_fround$835+3
  3865                           
  3866                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  3867  0023C2  C02C  F00F         	movff	_fround$835,___flmul@b
  3868  0023C6  C02D  F010         	movff	_fround$835+1,___flmul@b+1
  3869  0023CA  C02E  F011         	movff	_fround$835+2,___flmul@b+2
  3870  0023CE  C02F  F012         	movff	_fround$835+3,___flmul@b+3
  3871  0023D2  0E00               	movlw	0
  3872  0023D4  6E04               	movwf	___lwmod@divisor+1,c
  3873  0023D6  0E0A               	movlw	10
  3874  0023D8  6E03               	movwf	___lwmod@divisor,c
  3875  0023DA  C034  F001         	movff	fround@prec,___lwmod@dividend
  3876  0023DE  6A02               	clrf	___lwmod@dividend+1,c
  3877  0023E0  EC07  F00C         	call	___lwmod	;wreg free
  3878  0023E4  90D8               	bcf	status,0,c
  3879  0023E6  3601               	rlcf	?___lwmod,f,c
  3880  0023E8  3602               	rlcf	?___lwmod+1,f,c
  3881  0023EA  90D8               	bcf	status,0,c
  3882  0023EC  3601               	rlcf	?___lwmod,f,c
  3883  0023EE  3602               	rlcf	?___lwmod+1,f,c
  3884  0023F0  0EFD               	movlw	low __npowers_
  3885  0023F2  2401               	addwf	?___lwmod,w,c
  3886  0023F4  6EF6               	movwf	tblptrl,c
  3887  0023F6  0E7E               	movlw	high __npowers_
  3888  0023F8  2002               	addwfc	?___lwmod+1,w,c
  3889  0023FA  6EF7               	movwf	tblptrh,c
  3890  0023FC                     	if	0	;There are less than 3 active tblptr bytes
  3891  0023FC                     	endif
  3892  0023FC  0009               	tblrd		*+
  3893  0023FE  FFFF               	dw	65535	; errata NOP
  3894  002400  CFF5 F013          	movff	tablat,___flmul@a
  3895  002404  0009               	tblrd		*+
  3896  002406  FFFF               	dw	65535	; errata NOP
  3897  002408  CFF5 F014          	movff	tablat,___flmul@a+1
  3898  00240C  0009               	tblrd		*+
  3899  00240E  FFFF               	dw	65535	; errata NOP
  3900  002410  CFF5 F015          	movff	tablat,___flmul@a+2
  3901  002414  000A               	tblrd		*-
  3902  002416  FFFF               	dw	65535	; errata NOP
  3903  002418  CFF5 F016          	movff	tablat,___flmul@a+3
  3904  00241C  EC05  F017         	call	___flmul	;wreg free
  3905  002420  D092               	goto	L9
  3906  002422                     l2985:
  3907  002422  FFFF               	dw	65535	; assembler added errata NOP
  3908                           
  3909                           ;doprnt.c: 423: else if(prec > 10)
  3910  002424  0E0A               	movlw	10
  3911  002426  6434               	cpfsgt	fround@prec,c
  3912  002428  D06B               	goto	l2991
  3913                           
  3914                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3915  00242A  0E00               	movlw	0
  3916  00242C  6E13               	movwf	___flmul@a,c
  3917  00242E  0E00               	movlw	0
  3918  002430  6E14               	movwf	___flmul@a+1,c
  3919  002432  0E00               	movlw	0
  3920  002434  6E15               	movwf	___flmul@a+2,c
  3921  002436  0E3F               	movlw	63
  3922  002438  6E16               	movwf	___flmul@a+3,c
  3923  00243A  0E00               	movlw	0
  3924  00243C  6E09               	movwf	___lwdiv@divisor+1,c
  3925  00243E  0E0A               	movlw	10
  3926  002440  6E08               	movwf	___lwdiv@divisor,c
  3927  002442  C034  F006         	movff	fround@prec,___lwdiv@dividend
  3928  002446  6A07               	clrf	___lwdiv@dividend+1,c
  3929  002448  EC5B  F00C         	call	___lwdiv	;wreg free
  3930  00244C  90D8               	bcf	status,0,c
  3931  00244E  3606               	rlcf	?___lwdiv,f,c
  3932  002450  3607               	rlcf	?___lwdiv+1,f,c
  3933  002452  90D8               	bcf	status,0,c
  3934  002454  3606               	rlcf	?___lwdiv,f,c
  3935  002456  3607               	rlcf	?___lwdiv+1,f,c
  3936  002458  0E24               	movlw	36
  3937  00245A  2606               	addwf	?___lwdiv,f,c
  3938  00245C  0E00               	movlw	0
  3939  00245E  2207               	addwfc	?___lwdiv+1,f,c
  3940  002460  0EFD               	movlw	low __npowers_
  3941  002462  2406               	addwf	?___lwdiv,w,c
  3942  002464  6EF6               	movwf	tblptrl,c
  3943  002466  0E7E               	movlw	high __npowers_
  3944  002468  2007               	addwfc	?___lwdiv+1,w,c
  3945  00246A  6EF7               	movwf	tblptrh,c
  3946  00246C                     	if	0	;There are less than 3 active tblptr bytes
  3947  00246C                     	endif
  3948  00246C  0009               	tblrd		*+
  3949  00246E  FFFF               	dw	65535	; errata NOP
  3950  002470  CFF5 F00F          	movff	tablat,___flmul@b
  3951  002474  0009               	tblrd		*+
  3952  002476  FFFF               	dw	65535	; errata NOP
  3953  002478  CFF5 F010          	movff	tablat,___flmul@b+1
  3954  00247C  0009               	tblrd		*+
  3955  00247E  FFFF               	dw	65535	; errata NOP
  3956  002480  CFF5 F011          	movff	tablat,___flmul@b+2
  3957  002484  000A               	tblrd		*-
  3958  002486  FFFF               	dw	65535	; errata NOP
  3959  002488  CFF5 F012          	movff	tablat,___flmul@b+3
  3960  00248C  EC05  F017         	call	___flmul	;wreg free
  3961  002490  C00F  F030         	movff	?___flmul,_fround$834
  3962  002494  C010  F031         	movff	?___flmul+1,_fround$834+1
  3963  002498  C011  F032         	movff	?___flmul+2,_fround$834+2
  3964  00249C  C012  F033         	movff	?___flmul+3,_fround$834+3
  3965                           
  3966                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3967  0024A0  C030  F00F         	movff	_fround$834,___flmul@b
  3968  0024A4  C031  F010         	movff	_fround$834+1,___flmul@b+1
  3969  0024A8  C032  F011         	movff	_fround$834+2,___flmul@b+2
  3970  0024AC  C033  F012         	movff	_fround$834+3,___flmul@b+3
  3971  0024B0  0E00               	movlw	0
  3972  0024B2  6E04               	movwf	___lwmod@divisor+1,c
  3973  0024B4  0E0A               	movlw	10
  3974  0024B6  6E03               	movwf	___lwmod@divisor,c
  3975  0024B8  C034  F001         	movff	fround@prec,___lwmod@dividend
  3976  0024BC  6A02               	clrf	___lwmod@dividend+1,c
  3977  0024BE  EC07  F00C         	call	___lwmod	;wreg free
  3978  0024C2  90D8               	bcf	status,0,c
  3979  0024C4  3601               	rlcf	?___lwmod,f,c
  3980  0024C6  3602               	rlcf	?___lwmod+1,f,c
  3981  0024C8  90D8               	bcf	status,0,c
  3982  0024CA  3601               	rlcf	?___lwmod,f,c
  3983  0024CC  3602               	rlcf	?___lwmod+1,f,c
  3984  0024CE  0EFD               	movlw	low __npowers_
  3985  0024D0  2401               	addwf	?___lwmod,w,c
  3986  0024D2  6EF6               	movwf	tblptrl,c
  3987  0024D4  0E7E               	movlw	high __npowers_
  3988  0024D6  2002               	addwfc	?___lwmod+1,w,c
  3989  0024D8  6EF7               	movwf	tblptrh,c
  3990  0024DA                     	if	0	;There are less than 3 active tblptr bytes
  3991  0024DA                     	endif
  3992  0024DA  0009               	tblrd		*+
  3993  0024DC  FFFF               	dw	65535	; errata NOP
  3994  0024DE  CFF5 F013          	movff	tablat,___flmul@a
  3995  0024E2  0009               	tblrd		*+
  3996  0024E4  FFFF               	dw	65535	; errata NOP
  3997  0024E6  CFF5 F014          	movff	tablat,___flmul@a+1
  3998  0024EA  0009               	tblrd		*+
  3999  0024EC  FFFF               	dw	65535	; errata NOP
  4000  0024EE  CFF5 F015          	movff	tablat,___flmul@a+2
  4001  0024F2  000A               	tblrd		*-
  4002  0024F4  FFFF               	dw	65535	; errata NOP
  4003  0024F6  CFF5 F016          	movff	tablat,___flmul@a+3
  4004  0024FA  EC05  F017         	call	___flmul	;wreg free
  4005  0024FE  D023               	goto	L9
  4006  002500                     l2991:
  4007  002500  FFFF               	dw	65535	; assembler added errata NOP
  4008                           
  4009                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  4010  002502  5034               	movf	fround@prec,w,c
  4011  002504  0D04               	mullw	4
  4012  002506  0EFD               	movlw	low __npowers_
  4013  002508  24F3               	addwf	prodl,w,c
  4014  00250A  6EF6               	movwf	tblptrl,c
  4015  00250C  0E7E               	movlw	high __npowers_
  4016  00250E  20F4               	addwfc	prodh,w,c
  4017  002510  6EF7               	movwf	tblptrh,c
  4018  002512                     	if	0	;There are less than 3 active tblptr bytes
  4019  002512                     	endif
  4020  002512  0009               	tblrd		*+
  4021  002514  FFFF               	dw	65535	; errata NOP
  4022  002516  CFF5 F00F          	movff	tablat,___flmul@b
  4023  00251A  0009               	tblrd		*+
  4024  00251C  FFFF               	dw	65535	; errata NOP
  4025  00251E  CFF5 F010          	movff	tablat,___flmul@b+1
  4026  002522  0009               	tblrd		*+
  4027  002524  FFFF               	dw	65535	; errata NOP
  4028  002526  CFF5 F011          	movff	tablat,___flmul@b+2
  4029  00252A  000A               	tblrd		*-
  4030  00252C  FFFF               	dw	65535	; errata NOP
  4031  00252E  CFF5 F012          	movff	tablat,___flmul@b+3
  4032  002532  0E00               	movlw	0
  4033  002534  6E13               	movwf	___flmul@a,c
  4034  002536  0E00               	movlw	0
  4035  002538  6E14               	movwf	___flmul@a+1,c
  4036  00253A  0E00               	movlw	0
  4037  00253C  6E15               	movwf	___flmul@a+2,c
  4038  00253E  0E3F               	movlw	63
  4039  002540  6E16               	movwf	___flmul@a+3,c
  4040  002542  EC05  F017         	call	___flmul	;wreg free
  4041  002546                     L9:
  4042  002546  FFFF               	dw	65535	; assembler added errata NOP
  4043  002548  C00F  F028         	movff	?___flmul,?_fround
  4044  00254C  C010  F029         	movff	?___flmul+1,?_fround+1
  4045  002550  C011  F02A         	movff	?___flmul+2,?_fround+2
  4046  002554  C012  F02B         	movff	?___flmul+3,?_fround+3
  4047  002558  0012               	return		;funcret
  4048  00255A  FFFF               	dw	65535	; errata NOP
  4049  00255C                     __end_of_fround:
  4050                           	opt callstack 0
  4051                           
  4052 ;; *************** function ___lwmod *****************
  4053 ;; Defined at:
  4054 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  4055 ;; Parameters:    Size  Location     Type
  4056 ;;  dividend        2    0[COMRAM] unsigned int 
  4057 ;;  divisor         2    2[COMRAM] unsigned int 
  4058 ;; Auto vars:     Size  Location     Type
  4059 ;;  counter         1    4[COMRAM] unsigned char 
  4060 ;; Return value:  Size  Location     Type
  4061 ;;                  2    0[COMRAM] unsigned int 
  4062 ;; Registers used:
  4063 ;;		wreg, status,2, status,0
  4064 ;; Tracked objects:
  4065 ;;		On entry : 0/0
  4066 ;;		On exit  : 0/0
  4067 ;;		Unchanged: 0/0
  4068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4069 ;;      Params:         4       0       0       0       0       0       0
  4070 ;;      Locals:         1       0       0       0       0       0       0
  4071 ;;      Temps:          0       0       0       0       0       0       0
  4072 ;;      Totals:         5       0       0       0       0       0       0
  4073 ;;Total ram usage:        5 bytes
  4074 ;; Hardware stack levels used:    1
  4075 ;; This function calls:
  4076 ;;		Nothing
  4077 ;; This function is called by:
  4078 ;;		_fround
  4079 ;; This function uses a non-reentrant model
  4080 ;;
  4081                           
  4082                           	psect	text9
  4083  00180E                     __ptext9:
  4084                           	opt callstack 0
  4085  00180E                     ___lwmod:
  4086                           	opt callstack 0
  4087  00180E  FFFF               	dw	65535	; assembler added errata NOP
  4088                           
  4089                           ;incstack = 0
  4090  001810  5003               	movf	___lwmod@divisor,w,c
  4091  001812  1004               	iorwf	___lwmod@divisor+1,w,c
  4092  001814  B4D8               	btfsc	status,2,c
  4093  001816  D01C               	goto	l784
  4094  001818  0E01               	movlw	1
  4095  00181A  6E05               	movwf	___lwmod@counter,c
  4096  00181C  D005               	goto	l2937
  4097  00181E                     l2935:
  4098  00181E  FFFF               	dw	65535	; assembler added errata NOP
  4099  001820  90D8               	bcf	status,0,c
  4100  001822  3603               	rlcf	___lwmod@divisor,f,c
  4101  001824  3604               	rlcf	___lwmod@divisor+1,f,c
  4102  001826  2A05               	incf	___lwmod@counter,f,c
  4103  001828                     l2937:
  4104  001828  FFFF               	dw	65535	; assembler added errata NOP
  4105  00182A  AE04               	btfss	___lwmod@divisor+1,7,c
  4106  00182C  D7F8               	goto	l2935
  4107  00182E                     u2960:
  4108  00182E  FFFF               	dw	65535	; assembler added errata NOP
  4109  001830  5003               	movf	___lwmod@divisor,w,c
  4110  001832  5C01               	subwf	___lwmod@dividend,w,c
  4111  001834  5004               	movf	___lwmod@divisor+1,w,c
  4112  001836  5802               	subwfb	___lwmod@dividend+1,w,c
  4113  001838  A0D8               	btfss	status,0,c
  4114  00183A  D004               	goto	l2943
  4115  00183C  5003               	movf	___lwmod@divisor,w,c
  4116  00183E  5E01               	subwf	___lwmod@dividend,f,c
  4117  001840  5004               	movf	___lwmod@divisor+1,w,c
  4118  001842  5A02               	subwfb	___lwmod@dividend+1,f,c
  4119  001844                     l2943:
  4120  001844  FFFF               	dw	65535	; assembler added errata NOP
  4121  001846  90D8               	bcf	status,0,c
  4122  001848  3204               	rrcf	___lwmod@divisor+1,f,c
  4123  00184A  3203               	rrcf	___lwmod@divisor,f,c
  4124  00184C  2E05               	decfsz	___lwmod@counter,f,c
  4125  00184E  D7EF               	goto	u2960
  4126  001850                     l784:
  4127  001850  FFFF               	dw	65535	; assembler added errata NOP
  4128  001852  C001  F001         	movff	___lwmod@dividend,?___lwmod
  4129  001856  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  4130  00185A  0012               	return		;funcret
  4131  00185C  FFFF               	dw	65535	; errata NOP
  4132  00185E                     __end_of___lwmod:
  4133                           	opt callstack 0
  4134                           
  4135 ;; *************** function ___lwdiv *****************
  4136 ;; Defined at:
  4137 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;  dividend        2    5[COMRAM] unsigned int 
  4140 ;;  divisor         2    7[COMRAM] unsigned int 
  4141 ;; Auto vars:     Size  Location     Type
  4142 ;;  quotient        2    9[COMRAM] unsigned int 
  4143 ;;  counter         1   11[COMRAM] unsigned char 
  4144 ;; Return value:  Size  Location     Type
  4145 ;;                  2    5[COMRAM] unsigned int 
  4146 ;; Registers used:
  4147 ;;		wreg, status,2, status,0
  4148 ;; Tracked objects:
  4149 ;;		On entry : 0/0
  4150 ;;		On exit  : 0/0
  4151 ;;		Unchanged: 0/0
  4152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4153 ;;      Params:         4       0       0       0       0       0       0
  4154 ;;      Locals:         3       0       0       0       0       0       0
  4155 ;;      Temps:          0       0       0       0       0       0       0
  4156 ;;      Totals:         7       0       0       0       0       0       0
  4157 ;;Total ram usage:        7 bytes
  4158 ;; Hardware stack levels used:    1
  4159 ;; This function calls:
  4160 ;;		Nothing
  4161 ;; This function is called by:
  4162 ;;		_fround
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166                           	psect	text10
  4167  0018B6                     __ptext10:
  4168                           	opt callstack 0
  4169  0018B6                     ___lwdiv:
  4170                           	opt callstack 0
  4171  0018B6  FFFF               	dw	65535	; assembler added errata NOP
  4172                           
  4173                           ;incstack = 0
  4174  0018B8  0E00               	movlw	0
  4175  0018BA  6E0B               	movwf	___lwdiv@quotient+1,c
  4176  0018BC  0E00               	movlw	0
  4177  0018BE  6E0A               	movwf	___lwdiv@quotient,c
  4178  0018C0  5008               	movf	___lwdiv@divisor,w,c
  4179  0018C2  1009               	iorwf	___lwdiv@divisor+1,w,c
  4180  0018C4  B4D8               	btfsc	status,2,c
  4181  0018C6  D020               	goto	l774
  4182  0018C8  0E01               	movlw	1
  4183  0018CA  6E0C               	movwf	___lwdiv@counter,c
  4184  0018CC  D005               	goto	l2917
  4185  0018CE                     l2915:
  4186  0018CE  FFFF               	dw	65535	; assembler added errata NOP
  4187  0018D0  90D8               	bcf	status,0,c
  4188  0018D2  3608               	rlcf	___lwdiv@divisor,f,c
  4189  0018D4  3609               	rlcf	___lwdiv@divisor+1,f,c
  4190  0018D6  2A0C               	incf	___lwdiv@counter,f,c
  4191  0018D8                     l2917:
  4192  0018D8  FFFF               	dw	65535	; assembler added errata NOP
  4193  0018DA  AE09               	btfss	___lwdiv@divisor+1,7,c
  4194  0018DC  D7F8               	goto	l2915
  4195  0018DE                     u2930:
  4196  0018DE  FFFF               	dw	65535	; assembler added errata NOP
  4197  0018E0  90D8               	bcf	status,0,c
  4198  0018E2  360A               	rlcf	___lwdiv@quotient,f,c
  4199  0018E4  360B               	rlcf	___lwdiv@quotient+1,f,c
  4200  0018E6  5008               	movf	___lwdiv@divisor,w,c
  4201  0018E8  5C06               	subwf	___lwdiv@dividend,w,c
  4202  0018EA  5009               	movf	___lwdiv@divisor+1,w,c
  4203  0018EC  5807               	subwfb	___lwdiv@dividend+1,w,c
  4204  0018EE  A0D8               	btfss	status,0,c
  4205  0018F0  D005               	goto	l2927
  4206  0018F2  5008               	movf	___lwdiv@divisor,w,c
  4207  0018F4  5E06               	subwf	___lwdiv@dividend,f,c
  4208  0018F6  5009               	movf	___lwdiv@divisor+1,w,c
  4209  0018F8  5A07               	subwfb	___lwdiv@dividend+1,f,c
  4210  0018FA  800A               	bsf	___lwdiv@quotient,0,c
  4211  0018FC                     l2927:
  4212  0018FC  FFFF               	dw	65535	; assembler added errata NOP
  4213  0018FE  90D8               	bcf	status,0,c
  4214  001900  3209               	rrcf	___lwdiv@divisor+1,f,c
  4215  001902  3208               	rrcf	___lwdiv@divisor,f,c
  4216  001904  2E0C               	decfsz	___lwdiv@counter,f,c
  4217  001906  D7EB               	goto	u2930
  4218  001908                     l774:
  4219  001908  FFFF               	dw	65535	; assembler added errata NOP
  4220  00190A  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  4221  00190E  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4222  001912  0012               	return		;funcret
  4223  001914  FFFF               	dw	65535	; errata NOP
  4224  001916                     __end_of___lwdiv:
  4225                           	opt callstack 0
  4226                           
  4227 ;; *************** function __tdiv_to_l_ *****************
  4228 ;; Defined at:
  4229 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftdivl.c"
  4230 ;; Parameters:    Size  Location     Type
  4231 ;;  f1              4    0[COMRAM] float 
  4232 ;;  f2              4    4[COMRAM] float 
  4233 ;; Auto vars:     Size  Location     Type
  4234 ;;  quot            4   11[COMRAM] unsigned long 
  4235 ;;  exp1            1   16[COMRAM] unsigned char 
  4236 ;;  cntr            1   15[COMRAM] unsigned char 
  4237 ;; Return value:  Size  Location     Type
  4238 ;;                  4    0[COMRAM] unsigned long 
  4239 ;; Registers used:
  4240 ;;		wreg, status,2, status,0
  4241 ;; Tracked objects:
  4242 ;;		On entry : 0/0
  4243 ;;		On exit  : 0/0
  4244 ;;		Unchanged: 0/0
  4245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4246 ;;      Params:         8       0       0       0       0       0       0
  4247 ;;      Locals:         6       0       0       0       0       0       0
  4248 ;;      Temps:          3       0       0       0       0       0       0
  4249 ;;      Totals:        17       0       0       0       0       0       0
  4250 ;;Total ram usage:       17 bytes
  4251 ;; Hardware stack levels used:    1
  4252 ;; This function calls:
  4253 ;;		Nothing
  4254 ;; This function is called by:
  4255 ;;		_sprintf
  4256 ;; This function uses a non-reentrant model
  4257 ;;
  4258                           
  4259                           	psect	text11
  4260  002046                     __ptext11:
  4261                           	opt callstack 0
  4262  002046                     __tdiv_to_l_:
  4263                           	opt callstack 0
  4264  002046  FFFF               	dw	65535	; assembler added errata NOP
  4265                           
  4266                           ;incstack = 0
  4267  002048  C003  F009         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  4268  00204C  6A0A               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  4269  00204E  6A0B               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  4270  002050  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  4271  002052  3609               	rlcf	??__tdiv_to_l_& (0+255),f,c
  4272  002054  E301               	bnc	u3091
  4273  002056  800A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  4274  002058                     u3091:
  4275  002058  5009               	movf	??__tdiv_to_l_,w,c
  4276  00205A  6E11               	movwf	__tdiv_to_l_@exp1,c
  4277  00205C  5011               	movf	__tdiv_to_l_@exp1,w,c
  4278  00205E  A4D8               	btfss	status,2,c
  4279  002060  D00A               	goto	l3051
  4280  002062                     u3100:
  4281  002062  FFFF               	dw	65535	; assembler added errata NOP
  4282  002064  0E00               	movlw	0
  4283  002066  6E01               	movwf	?__tdiv_to_l_,c
  4284  002068  0E00               	movlw	0
  4285  00206A  6E02               	movwf	?__tdiv_to_l_+1,c
  4286  00206C  0E00               	movlw	0
  4287  00206E  6E03               	movwf	?__tdiv_to_l_+2,c
  4288  002070  0E00               	movlw	0
  4289  002072  6E04               	movwf	?__tdiv_to_l_+3,c
  4290  002074  D070               	goto	l624
  4291  002076                     l3051:
  4292  002076  FFFF               	dw	65535	; assembler added errata NOP
  4293  002078  C007  F009         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  4294  00207C  6A0A               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  4295  00207E  6A0B               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  4296  002080  3406               	rlcf	__tdiv_to_l_@f2+1,w,c
  4297  002082  3609               	rlcf	??__tdiv_to_l_& (0+255),f,c
  4298  002084  E301               	bnc	u3111
  4299  002086  800A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  4300  002088                     u3111:
  4301  002088  5009               	movf	??__tdiv_to_l_,w,c
  4302  00208A  6E10               	movwf	__tdiv_to_l_@cntr,c
  4303  00208C  5010               	movf	__tdiv_to_l_@cntr,w,c
  4304  00208E  B4D8               	btfsc	status,2,c
  4305  002090  D7E8               	goto	u3100
  4306  002092  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  4307  002094  0EFF               	movlw	255
  4308  002096  1601               	andwf	__tdiv_to_l_@f1,f,c
  4309  002098  0EFF               	movlw	255
  4310  00209A  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  4311  00209C  0E00               	movlw	0
  4312  00209E  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  4313  0020A0  8E06               	bsf	__tdiv_to_l_@f2+1,7,c
  4314  0020A2  0EFF               	movlw	255
  4315  0020A4  1605               	andwf	__tdiv_to_l_@f2,f,c
  4316  0020A6  0EFF               	movlw	255
  4317  0020A8  1606               	andwf	__tdiv_to_l_@f2+1,f,c
  4318  0020AA  0E00               	movlw	0
  4319  0020AC  1607               	andwf	__tdiv_to_l_@f2+2,f,c
  4320  0020AE  0E00               	movlw	0
  4321  0020B0  6E0C               	movwf	__tdiv_to_l_@quot,c
  4322  0020B2  0E00               	movlw	0
  4323  0020B4  6E0D               	movwf	__tdiv_to_l_@quot+1,c
  4324  0020B6  0E00               	movlw	0
  4325  0020B8  6E0E               	movwf	__tdiv_to_l_@quot+2,c
  4326  0020BA  0E00               	movlw	0
  4327  0020BC  6E0F               	movwf	__tdiv_to_l_@quot+3,c
  4328  0020BE  0E7F               	movlw	127
  4329  0020C0  5E11               	subwf	__tdiv_to_l_@exp1,f,c
  4330  0020C2  5010               	movf	__tdiv_to_l_@cntr,w,c
  4331  0020C4  0F98               	addlw	152
  4332  0020C6  5E11               	subwf	__tdiv_to_l_@exp1,f,c
  4333  0020C8  0E18               	movlw	24
  4334  0020CA  6E10               	movwf	__tdiv_to_l_@cntr,c
  4335  0020CC                     l626:
  4336  0020CC  FFFF               	dw	65535	; assembler added errata NOP
  4337  0020CE  90D8               	bcf	status,0,c
  4338  0020D0  360C               	rlcf	__tdiv_to_l_@quot,f,c
  4339  0020D2  360D               	rlcf	__tdiv_to_l_@quot+1,f,c
  4340  0020D4  360E               	rlcf	__tdiv_to_l_@quot+2,f,c
  4341  0020D6  360F               	rlcf	__tdiv_to_l_@quot+3,f,c
  4342  0020D8  5005               	movf	__tdiv_to_l_@f2,w,c
  4343  0020DA  5C01               	subwf	__tdiv_to_l_@f1,w,c
  4344  0020DC  5006               	movf	__tdiv_to_l_@f2+1,w,c
  4345  0020DE  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  4346  0020E0  5007               	movf	__tdiv_to_l_@f2+2,w,c
  4347  0020E2  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  4348  0020E4  A0D8               	btfss	status,0,c
  4349  0020E6  D007               	goto	l627
  4350  0020E8  5005               	movf	__tdiv_to_l_@f2,w,c
  4351  0020EA  5E01               	subwf	__tdiv_to_l_@f1,f,c
  4352  0020EC  5006               	movf	__tdiv_to_l_@f2+1,w,c
  4353  0020EE  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  4354  0020F0  5007               	movf	__tdiv_to_l_@f2+2,w,c
  4355  0020F2  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  4356  0020F4  800C               	bsf	__tdiv_to_l_@quot,0,c
  4357  0020F6                     l627:
  4358  0020F6  FFFF               	dw	65535	; assembler added errata NOP
  4359  0020F8  90D8               	bcf	status,0,c
  4360  0020FA  3601               	rlcf	__tdiv_to_l_@f1,f,c
  4361  0020FC  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  4362  0020FE  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  4363  002100  2E10               	decfsz	__tdiv_to_l_@cntr,f,c
  4364  002102  D7E4               	goto	l626
  4365  002104  AE11               	btfss	__tdiv_to_l_@exp1,7,c
  4366  002106  D00E               	goto	l3091
  4367  002108  5011               	movf	__tdiv_to_l_@exp1,w,c
  4368  00210A  0A80               	xorlw	128
  4369  00210C  0F97               	addlw	151
  4370  00210E  A0D8               	btfss	status,0,c
  4371  002110  D7A8               	goto	u3100
  4372  002112                     l3087:
  4373  002112  FFFF               	dw	65535	; assembler added errata NOP
  4374  002114  90D8               	bcf	status,0,c
  4375  002116  320F               	rrcf	__tdiv_to_l_@quot+3,f,c
  4376  002118  320E               	rrcf	__tdiv_to_l_@quot+2,f,c
  4377  00211A  320D               	rrcf	__tdiv_to_l_@quot+1,f,c
  4378  00211C  320C               	rrcf	__tdiv_to_l_@quot,f,c
  4379  00211E  3E11               	incfsz	__tdiv_to_l_@exp1,f,c
  4380  002120  D7F8               	goto	l3087
  4381  002122  D010               	goto	u3170
  4382  002124                     l3091:
  4383  002124  FFFF               	dw	65535	; assembler added errata NOP
  4384  002126  0E17               	movlw	23
  4385  002128  6411               	cpfsgt	__tdiv_to_l_@exp1,c
  4386  00212A  D008               	goto	l3099
  4387  00212C  D79A               	goto	u3100
  4388  00212E                     l3097:
  4389  00212E  FFFF               	dw	65535	; assembler added errata NOP
  4390  002130  90D8               	bcf	status,0,c
  4391  002132  360C               	rlcf	__tdiv_to_l_@quot,f,c
  4392  002134  360D               	rlcf	__tdiv_to_l_@quot+1,f,c
  4393  002136  360E               	rlcf	__tdiv_to_l_@quot+2,f,c
  4394  002138  360F               	rlcf	__tdiv_to_l_@quot+3,f,c
  4395  00213A  0611               	decf	__tdiv_to_l_@exp1,f,c
  4396  00213C                     l3099:
  4397  00213C  FFFF               	dw	65535	; assembler added errata NOP
  4398  00213E  5011               	movf	__tdiv_to_l_@exp1,w,c
  4399  002140  A4D8               	btfss	status,2,c
  4400  002142  D7F5               	goto	l3097
  4401  002144                     u3170:
  4402  002144  FFFF               	dw	65535	; assembler added errata NOP
  4403  002146  C00C  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  4404  00214A  C00D  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  4405  00214E  C00E  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  4406  002152  C00F  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  4407  002156                     l624:
  4408  002156  FFFF               	dw	65535	; assembler added errata NOP
  4409  002158  0012               	return		;funcret
  4410  00215A  FFFF               	dw	65535	; errata NOP
  4411  00215C                     __end_of__tdiv_to_l_:
  4412                           	opt callstack 0
  4413                           
  4414 ;; *************** function __div_to_l_ *****************
  4415 ;; Defined at:
  4416 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fldivl.c"
  4417 ;; Parameters:    Size  Location     Type
  4418 ;;  f1              4    0[COMRAM] unsigned long 
  4419 ;;  f2              4    4[COMRAM] unsigned long 
  4420 ;; Auto vars:     Size  Location     Type
  4421 ;;  quot            4    8[COMRAM] unsigned long 
  4422 ;;  exp1            1   13[COMRAM] unsigned char 
  4423 ;;  cntr            1   12[COMRAM] unsigned char 
  4424 ;; Return value:  Size  Location     Type
  4425 ;;                  4    0[COMRAM] unsigned long 
  4426 ;; Registers used:
  4427 ;;		wreg, status,2, status,0
  4428 ;; Tracked objects:
  4429 ;;		On entry : 0/0
  4430 ;;		On exit  : 0/0
  4431 ;;		Unchanged: 0/0
  4432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4433 ;;      Params:         8       0       0       0       0       0       0
  4434 ;;      Locals:         6       0       0       0       0       0       0
  4435 ;;      Temps:          0       0       0       0       0       0       0
  4436 ;;      Totals:        14       0       0       0       0       0       0
  4437 ;;Total ram usage:       14 bytes
  4438 ;; Hardware stack levels used:    1
  4439 ;; This function calls:
  4440 ;;		Nothing
  4441 ;; This function is called by:
  4442 ;;		_sprintf
  4443 ;; This function uses a non-reentrant model
  4444 ;;
  4445                           
  4446                           	psect	text12
  4447  001F3A                     __ptext12:
  4448                           	opt callstack 0
  4449  001F3A                     __div_to_l_:
  4450                           	opt callstack 0
  4451  001F3A  FFFF               	dw	65535	; assembler added errata NOP
  4452                           
  4453                           ;incstack = 0
  4454  001F3C  3403               	rlcf	__div_to_l_@f1+2,w,c
  4455  001F3E  3404               	rlcf	__div_to_l_@f1+3,w,c
  4456  001F40  6E0E               	movwf	__div_to_l_@exp1,c
  4457  001F42  500E               	movf	__div_to_l_@exp1,w,c
  4458  001F44  A4D8               	btfss	status,2,c
  4459  001F46  D00A               	goto	l3107
  4460  001F48                     u3180:
  4461  001F48  FFFF               	dw	65535	; assembler added errata NOP
  4462  001F4A  0E00               	movlw	0
  4463  001F4C  6E01               	movwf	?__div_to_l_,c
  4464  001F4E  0E00               	movlw	0
  4465  001F50  6E02               	movwf	?__div_to_l_+1,c
  4466  001F52  0E00               	movlw	0
  4467  001F54  6E03               	movwf	?__div_to_l_+2,c
  4468  001F56  0E00               	movlw	0
  4469  001F58  6E04               	movwf	?__div_to_l_+3,c
  4470  001F5A  D072               	goto	l515
  4471  001F5C                     l3107:
  4472  001F5C  FFFF               	dw	65535	; assembler added errata NOP
  4473  001F5E  3407               	rlcf	__div_to_l_@f2+2,w,c
  4474  001F60  3408               	rlcf	__div_to_l_@f2+3,w,c
  4475  001F62  6E0D               	movwf	__div_to_l_@cntr,c
  4476  001F64  500D               	movf	__div_to_l_@cntr,w,c
  4477  001F66  B4D8               	btfsc	status,2,c
  4478  001F68  D7EF               	goto	u3180
  4479  001F6A  8E03               	bsf	__div_to_l_@f1+2,7,c
  4480  001F6C  0EFF               	movlw	255
  4481  001F6E  1601               	andwf	__div_to_l_@f1,f,c
  4482  001F70  0EFF               	movlw	255
  4483  001F72  1602               	andwf	__div_to_l_@f1+1,f,c
  4484  001F74  0EFF               	movlw	255
  4485  001F76  1603               	andwf	__div_to_l_@f1+2,f,c
  4486  001F78  0E00               	movlw	0
  4487  001F7A  1604               	andwf	__div_to_l_@f1+3,f,c
  4488  001F7C  8E07               	bsf	__div_to_l_@f2+2,7,c
  4489  001F7E  0EFF               	movlw	255
  4490  001F80  1605               	andwf	__div_to_l_@f2,f,c
  4491  001F82  0EFF               	movlw	255
  4492  001F84  1606               	andwf	__div_to_l_@f2+1,f,c
  4493  001F86  0EFF               	movlw	255
  4494  001F88  1607               	andwf	__div_to_l_@f2+2,f,c
  4495  001F8A  0E00               	movlw	0
  4496  001F8C  1608               	andwf	__div_to_l_@f2+3,f,c
  4497  001F8E  0E00               	movlw	0
  4498  001F90  6E09               	movwf	__div_to_l_@quot,c
  4499  001F92  0E00               	movlw	0
  4500  001F94  6E0A               	movwf	__div_to_l_@quot+1,c
  4501  001F96  0E00               	movlw	0
  4502  001F98  6E0B               	movwf	__div_to_l_@quot+2,c
  4503  001F9A  0E00               	movlw	0
  4504  001F9C  6E0C               	movwf	__div_to_l_@quot+3,c
  4505  001F9E  0E7F               	movlw	127
  4506  001FA0  5E0E               	subwf	__div_to_l_@exp1,f,c
  4507  001FA2  500D               	movf	__div_to_l_@cntr,w,c
  4508  001FA4  0FA0               	addlw	160
  4509  001FA6  5E0E               	subwf	__div_to_l_@exp1,f,c
  4510  001FA8  0E20               	movlw	32
  4511  001FAA  6E0D               	movwf	__div_to_l_@cntr,c
  4512  001FAC                     l3127:
  4513  001FAC  FFFF               	dw	65535	; assembler added errata NOP
  4514  001FAE  90D8               	bcf	status,0,c
  4515  001FB0  3609               	rlcf	__div_to_l_@quot,f,c
  4516  001FB2  360A               	rlcf	__div_to_l_@quot+1,f,c
  4517  001FB4  360B               	rlcf	__div_to_l_@quot+2,f,c
  4518  001FB6  360C               	rlcf	__div_to_l_@quot+3,f,c
  4519  001FB8  5005               	movf	__div_to_l_@f2,w,c
  4520  001FBA  5C01               	subwf	__div_to_l_@f1,w,c
  4521  001FBC  5006               	movf	__div_to_l_@f2+1,w,c
  4522  001FBE  5802               	subwfb	__div_to_l_@f1+1,w,c
  4523  001FC0  5007               	movf	__div_to_l_@f2+2,w,c
  4524  001FC2  5803               	subwfb	__div_to_l_@f1+2,w,c
  4525  001FC4  5008               	movf	__div_to_l_@f2+3,w,c
  4526  001FC6  5804               	subwfb	__div_to_l_@f1+3,w,c
  4527  001FC8  A0D8               	btfss	status,0,c
  4528  001FCA  D009               	goto	l3135
  4529  001FCC  5005               	movf	__div_to_l_@f2,w,c
  4530  001FCE  5E01               	subwf	__div_to_l_@f1,f,c
  4531  001FD0  5006               	movf	__div_to_l_@f2+1,w,c
  4532  001FD2  5A02               	subwfb	__div_to_l_@f1+1,f,c
  4533  001FD4  5007               	movf	__div_to_l_@f2+2,w,c
  4534  001FD6  5A03               	subwfb	__div_to_l_@f1+2,f,c
  4535  001FD8  5008               	movf	__div_to_l_@f2+3,w,c
  4536  001FDA  5A04               	subwfb	__div_to_l_@f1+3,f,c
  4537  001FDC  8009               	bsf	__div_to_l_@quot,0,c
  4538  001FDE                     l3135:
  4539  001FDE  FFFF               	dw	65535	; assembler added errata NOP
  4540  001FE0  90D8               	bcf	status,0,c
  4541  001FE2  3601               	rlcf	__div_to_l_@f1,f,c
  4542  001FE4  3602               	rlcf	__div_to_l_@f1+1,f,c
  4543  001FE6  3603               	rlcf	__div_to_l_@f1+2,f,c
  4544  001FE8  3604               	rlcf	__div_to_l_@f1+3,f,c
  4545  001FEA  2E0D               	decfsz	__div_to_l_@cntr,f,c
  4546  001FEC  D7DF               	goto	l3127
  4547  001FEE  AE0E               	btfss	__div_to_l_@exp1,7,c
  4548  001FF0  D00E               	goto	l3151
  4549  001FF2  500E               	movf	__div_to_l_@exp1,w,c
  4550  001FF4  0A80               	xorlw	128
  4551  001FF6  0F9F               	addlw	159
  4552  001FF8  A0D8               	btfss	status,0,c
  4553  001FFA  D7A6               	goto	u3180
  4554  001FFC                     l3147:
  4555  001FFC  FFFF               	dw	65535	; assembler added errata NOP
  4556  001FFE  90D8               	bcf	status,0,c
  4557  002000  320C               	rrcf	__div_to_l_@quot+3,f,c
  4558  002002  320B               	rrcf	__div_to_l_@quot+2,f,c
  4559  002004  320A               	rrcf	__div_to_l_@quot+1,f,c
  4560  002006  3209               	rrcf	__div_to_l_@quot,f,c
  4561  002008  3E0E               	incfsz	__div_to_l_@exp1,f,c
  4562  00200A  D7F8               	goto	l3147
  4563  00200C  D010               	goto	u3240
  4564  00200E                     l3151:
  4565  00200E  FFFF               	dw	65535	; assembler added errata NOP
  4566  002010  0E1F               	movlw	31
  4567  002012  640E               	cpfsgt	__div_to_l_@exp1,c
  4568  002014  D008               	goto	l3159
  4569  002016  D798               	goto	u3180
  4570  002018                     l3157:
  4571  002018  FFFF               	dw	65535	; assembler added errata NOP
  4572  00201A  90D8               	bcf	status,0,c
  4573  00201C  3609               	rlcf	__div_to_l_@quot,f,c
  4574  00201E  360A               	rlcf	__div_to_l_@quot+1,f,c
  4575  002020  360B               	rlcf	__div_to_l_@quot+2,f,c
  4576  002022  360C               	rlcf	__div_to_l_@quot+3,f,c
  4577  002024  060E               	decf	__div_to_l_@exp1,f,c
  4578  002026                     l3159:
  4579  002026  FFFF               	dw	65535	; assembler added errata NOP
  4580  002028  500E               	movf	__div_to_l_@exp1,w,c
  4581  00202A  A4D8               	btfss	status,2,c
  4582  00202C  D7F5               	goto	l3157
  4583  00202E                     u3240:
  4584  00202E  FFFF               	dw	65535	; assembler added errata NOP
  4585  002030  C009  F001         	movff	__div_to_l_@quot,?__div_to_l_
  4586  002034  C00A  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  4587  002038  C00B  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  4588  00203C  C00C  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  4589  002040                     l515:
  4590  002040  FFFF               	dw	65535	; assembler added errata NOP
  4591  002042  0012               	return		;funcret
  4592  002044  FFFF               	dw	65535	; errata NOP
  4593  002046                     __end_of__div_to_l_:
  4594                           	opt callstack 0
  4595                           
  4596 ;; *************** function ___wmul *****************
  4597 ;; Defined at:
  4598 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;  multiplier      2    0[COMRAM] unsigned int 
  4601 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;  product         2    4[COMRAM] unsigned int 
  4604 ;; Return value:  Size  Location     Type
  4605 ;;                  2    0[COMRAM] unsigned int 
  4606 ;; Registers used:
  4607 ;;		wreg, status,2, status,0, prodl, prodh
  4608 ;; Tracked objects:
  4609 ;;		On entry : 0/0
  4610 ;;		On exit  : 0/0
  4611 ;;		Unchanged: 0/0
  4612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4613 ;;      Params:         4       0       0       0       0       0       0
  4614 ;;      Locals:         2       0       0       0       0       0       0
  4615 ;;      Temps:          0       0       0       0       0       0       0
  4616 ;;      Totals:         6       0       0       0       0       0       0
  4617 ;;Total ram usage:        6 bytes
  4618 ;; Hardware stack levels used:    1
  4619 ;; This function calls:
  4620 ;;		Nothing
  4621 ;; This function is called by:
  4622 ;;		_sprintf
  4623 ;; This function uses a non-reentrant model
  4624 ;;
  4625                           
  4626                           	psect	text13
  4627  0016D4                     __ptext13:
  4628                           	opt callstack 0
  4629  0016D4                     ___wmul:
  4630                           	opt callstack 0
  4631  0016D4  FFFF               	dw	65535	; assembler added errata NOP
  4632                           
  4633                           ;incstack = 0
  4634  0016D6  5001               	movf	___wmul@multiplier,w,c
  4635  0016D8  0203               	mulwf	___wmul@multiplicand,c
  4636  0016DA  CFF3 F005          	movff	prodl,___wmul@product
  4637  0016DE  CFF4 F006          	movff	prodh,___wmul@product+1
  4638  0016E2  5001               	movf	___wmul@multiplier,w,c
  4639  0016E4  0204               	mulwf	___wmul@multiplicand+1,c
  4640  0016E6  50F3               	movf	prodl,w,c
  4641  0016E8  2606               	addwf	___wmul@product+1,f,c
  4642  0016EA  5002               	movf	___wmul@multiplier+1,w,c
  4643  0016EC  0203               	mulwf	___wmul@multiplicand,c
  4644  0016EE  50F3               	movf	prodl,w,c
  4645  0016F0  2606               	addwf	___wmul@product+1,f,c
  4646  0016F2  C005  F001         	movff	___wmul@product,?___wmul
  4647  0016F6  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4648  0016FA  0012               	return		;funcret
  4649  0016FC  FFFF               	dw	65535	; errata NOP
  4650  0016FE                     __end_of___wmul:
  4651                           	opt callstack 0
  4652                           
  4653 ;; *************** function ___llmod *****************
  4654 ;; Defined at:
  4655 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;  dividend        4    0[COMRAM] unsigned long 
  4658 ;;  divisor         4    4[COMRAM] unsigned long 
  4659 ;; Auto vars:     Size  Location     Type
  4660 ;;  counter         1    8[COMRAM] unsigned char 
  4661 ;; Return value:  Size  Location     Type
  4662 ;;                  4    0[COMRAM] unsigned long 
  4663 ;; Registers used:
  4664 ;;		wreg, status,2, status,0
  4665 ;; Tracked objects:
  4666 ;;		On entry : 0/0
  4667 ;;		On exit  : 0/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4670 ;;      Params:         8       0       0       0       0       0       0
  4671 ;;      Locals:         1       0       0       0       0       0       0
  4672 ;;      Temps:          0       0       0       0       0       0       0
  4673 ;;      Totals:         9       0       0       0       0       0       0
  4674 ;;Total ram usage:        9 bytes
  4675 ;; Hardware stack levels used:    1
  4676 ;; This function calls:
  4677 ;;		Nothing
  4678 ;; This function is called by:
  4679 ;;		_sprintf
  4680 ;; This function uses a non-reentrant model
  4681 ;;
  4682                           
  4683                           	psect	text14
  4684  0019EA                     __ptext14:
  4685                           	opt callstack 0
  4686  0019EA                     ___llmod:
  4687                           	opt callstack 0
  4688  0019EA  FFFF               	dw	65535	; assembler added errata NOP
  4689                           
  4690                           ;incstack = 0
  4691  0019EC  5005               	movf	___llmod@divisor,w,c
  4692  0019EE  1006               	iorwf	___llmod@divisor+1,w,c
  4693  0019F0  1007               	iorwf	___llmod@divisor+2,w,c
  4694  0019F2  1008               	iorwf	___llmod@divisor+3,w,c
  4695  0019F4  B4D8               	btfsc	status,2,c
  4696  0019F6  D028               	goto	l703
  4697  0019F8  0E01               	movlw	1
  4698  0019FA  6E09               	movwf	___llmod@counter,c
  4699  0019FC  D007               	goto	l3429
  4700  0019FE                     l3427:
  4701  0019FE  FFFF               	dw	65535	; assembler added errata NOP
  4702  001A00  90D8               	bcf	status,0,c
  4703  001A02  3605               	rlcf	___llmod@divisor,f,c
  4704  001A04  3606               	rlcf	___llmod@divisor+1,f,c
  4705  001A06  3607               	rlcf	___llmod@divisor+2,f,c
  4706  001A08  3608               	rlcf	___llmod@divisor+3,f,c
  4707  001A0A  2A09               	incf	___llmod@counter,f,c
  4708  001A0C                     l3429:
  4709  001A0C  FFFF               	dw	65535	; assembler added errata NOP
  4710  001A0E  AE08               	btfss	___llmod@divisor+3,7,c
  4711  001A10  D7F6               	goto	l3427
  4712  001A12                     u3680:
  4713  001A12  FFFF               	dw	65535	; assembler added errata NOP
  4714  001A14  5005               	movf	___llmod@divisor,w,c
  4715  001A16  5C01               	subwf	___llmod@dividend,w,c
  4716  001A18  5006               	movf	___llmod@divisor+1,w,c
  4717  001A1A  5802               	subwfb	___llmod@dividend+1,w,c
  4718  001A1C  5007               	movf	___llmod@divisor+2,w,c
  4719  001A1E  5803               	subwfb	___llmod@dividend+2,w,c
  4720  001A20  5008               	movf	___llmod@divisor+3,w,c
  4721  001A22  5804               	subwfb	___llmod@dividend+3,w,c
  4722  001A24  A0D8               	btfss	status,0,c
  4723  001A26  D008               	goto	l3435
  4724  001A28  5005               	movf	___llmod@divisor,w,c
  4725  001A2A  5E01               	subwf	___llmod@dividend,f,c
  4726  001A2C  5006               	movf	___llmod@divisor+1,w,c
  4727  001A2E  5A02               	subwfb	___llmod@dividend+1,f,c
  4728  001A30  5007               	movf	___llmod@divisor+2,w,c
  4729  001A32  5A03               	subwfb	___llmod@dividend+2,f,c
  4730  001A34  5008               	movf	___llmod@divisor+3,w,c
  4731  001A36  5A04               	subwfb	___llmod@dividend+3,f,c
  4732  001A38                     l3435:
  4733  001A38  FFFF               	dw	65535	; assembler added errata NOP
  4734  001A3A  90D8               	bcf	status,0,c
  4735  001A3C  3208               	rrcf	___llmod@divisor+3,f,c
  4736  001A3E  3207               	rrcf	___llmod@divisor+2,f,c
  4737  001A40  3206               	rrcf	___llmod@divisor+1,f,c
  4738  001A42  3205               	rrcf	___llmod@divisor,f,c
  4739  001A44  2E09               	decfsz	___llmod@counter,f,c
  4740  001A46  D7E5               	goto	u3680
  4741  001A48                     l703:
  4742  001A48  FFFF               	dw	65535	; assembler added errata NOP
  4743  001A4A  C001  F001         	movff	___llmod@dividend,?___llmod
  4744  001A4E  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  4745  001A52  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  4746  001A56  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  4747  001A5A  0012               	return		;funcret
  4748  001A5C  FFFF               	dw	65535	; errata NOP
  4749  001A5E                     __end_of___llmod:
  4750                           	opt callstack 0
  4751                           
  4752 ;; *************** function ___lldiv *****************
  4753 ;; Defined at:
  4754 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  4755 ;; Parameters:    Size  Location     Type
  4756 ;;  dividend        4    0[COMRAM] unsigned long 
  4757 ;;  divisor         4    4[COMRAM] unsigned long 
  4758 ;; Auto vars:     Size  Location     Type
  4759 ;;  quotient        4    8[COMRAM] unsigned long 
  4760 ;;  counter         1   12[COMRAM] unsigned char 
  4761 ;; Return value:  Size  Location     Type
  4762 ;;                  4    0[COMRAM] unsigned long 
  4763 ;; Registers used:
  4764 ;;		wreg, status,2, status,0
  4765 ;; Tracked objects:
  4766 ;;		On entry : 0/0
  4767 ;;		On exit  : 0/0
  4768 ;;		Unchanged: 0/0
  4769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4770 ;;      Params:         8       0       0       0       0       0       0
  4771 ;;      Locals:         5       0       0       0       0       0       0
  4772 ;;      Temps:          0       0       0       0       0       0       0
  4773 ;;      Totals:        13       0       0       0       0       0       0
  4774 ;;Total ram usage:       13 bytes
  4775 ;; Hardware stack levels used:    1
  4776 ;; This function calls:
  4777 ;;		Nothing
  4778 ;; This function is called by:
  4779 ;;		_sprintf
  4780 ;; This function uses a non-reentrant model
  4781 ;;
  4782                           
  4783                           	psect	text15
  4784  001AE2                     __ptext15:
  4785                           	opt callstack 0
  4786  001AE2                     ___lldiv:
  4787                           	opt callstack 0
  4788  001AE2  FFFF               	dw	65535	; assembler added errata NOP
  4789                           
  4790                           ;incstack = 0
  4791  001AE4  0E00               	movlw	0
  4792  001AE6  6E09               	movwf	___lldiv@quotient,c
  4793  001AE8  0E00               	movlw	0
  4794  001AEA  6E0A               	movwf	___lldiv@quotient+1,c
  4795  001AEC  0E00               	movlw	0
  4796  001AEE  6E0B               	movwf	___lldiv@quotient+2,c
  4797  001AF0  0E00               	movlw	0
  4798  001AF2  6E0C               	movwf	___lldiv@quotient+3,c
  4799  001AF4  5005               	movf	___lldiv@divisor,w,c
  4800  001AF6  1006               	iorwf	___lldiv@divisor+1,w,c
  4801  001AF8  1007               	iorwf	___lldiv@divisor+2,w,c
  4802  001AFA  1008               	iorwf	___lldiv@divisor+3,w,c
  4803  001AFC  B4D8               	btfsc	status,2,c
  4804  001AFE  D02E               	goto	l288
  4805  001B00  0E01               	movlw	1
  4806  001B02  6E0D               	movwf	___lldiv@counter,c
  4807  001B04  D007               	goto	l3175
  4808  001B06                     l3173:
  4809  001B06  FFFF               	dw	65535	; assembler added errata NOP
  4810  001B08  90D8               	bcf	status,0,c
  4811  001B0A  3605               	rlcf	___lldiv@divisor,f,c
  4812  001B0C  3606               	rlcf	___lldiv@divisor+1,f,c
  4813  001B0E  3607               	rlcf	___lldiv@divisor+2,f,c
  4814  001B10  3608               	rlcf	___lldiv@divisor+3,f,c
  4815  001B12  2A0D               	incf	___lldiv@counter,f,c
  4816  001B14                     l3175:
  4817  001B14  FFFF               	dw	65535	; assembler added errata NOP
  4818  001B16  AE08               	btfss	___lldiv@divisor+3,7,c
  4819  001B18  D7F6               	goto	l3173
  4820  001B1A                     u3260:
  4821  001B1A  FFFF               	dw	65535	; assembler added errata NOP
  4822  001B1C  90D8               	bcf	status,0,c
  4823  001B1E  3609               	rlcf	___lldiv@quotient,f,c
  4824  001B20  360A               	rlcf	___lldiv@quotient+1,f,c
  4825  001B22  360B               	rlcf	___lldiv@quotient+2,f,c
  4826  001B24  360C               	rlcf	___lldiv@quotient+3,f,c
  4827  001B26  5005               	movf	___lldiv@divisor,w,c
  4828  001B28  5C01               	subwf	___lldiv@dividend,w,c
  4829  001B2A  5006               	movf	___lldiv@divisor+1,w,c
  4830  001B2C  5802               	subwfb	___lldiv@dividend+1,w,c
  4831  001B2E  5007               	movf	___lldiv@divisor+2,w,c
  4832  001B30  5803               	subwfb	___lldiv@dividend+2,w,c
  4833  001B32  5008               	movf	___lldiv@divisor+3,w,c
  4834  001B34  5804               	subwfb	___lldiv@dividend+3,w,c
  4835  001B36  A0D8               	btfss	status,0,c
  4836  001B38  D009               	goto	l3185
  4837  001B3A  5005               	movf	___lldiv@divisor,w,c
  4838  001B3C  5E01               	subwf	___lldiv@dividend,f,c
  4839  001B3E  5006               	movf	___lldiv@divisor+1,w,c
  4840  001B40  5A02               	subwfb	___lldiv@dividend+1,f,c
  4841  001B42  5007               	movf	___lldiv@divisor+2,w,c
  4842  001B44  5A03               	subwfb	___lldiv@dividend+2,f,c
  4843  001B46  5008               	movf	___lldiv@divisor+3,w,c
  4844  001B48  5A04               	subwfb	___lldiv@dividend+3,f,c
  4845  001B4A  8009               	bsf	___lldiv@quotient,0,c
  4846  001B4C                     l3185:
  4847  001B4C  FFFF               	dw	65535	; assembler added errata NOP
  4848  001B4E  90D8               	bcf	status,0,c
  4849  001B50  3208               	rrcf	___lldiv@divisor+3,f,c
  4850  001B52  3207               	rrcf	___lldiv@divisor+2,f,c
  4851  001B54  3206               	rrcf	___lldiv@divisor+1,f,c
  4852  001B56  3205               	rrcf	___lldiv@divisor,f,c
  4853  001B58  2E0D               	decfsz	___lldiv@counter,f,c
  4854  001B5A  D7DF               	goto	u3260
  4855  001B5C                     l288:
  4856  001B5C  FFFF               	dw	65535	; assembler added errata NOP
  4857  001B5E  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4858  001B62  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4859  001B66  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4860  001B6A  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4861  001B6E  0012               	return		;funcret
  4862  001B70  FFFF               	dw	65535	; errata NOP
  4863  001B72                     __end_of___lldiv:
  4864                           	opt callstack 0
  4865                           
  4866 ;; *************** function ___fltol *****************
  4867 ;; Defined at:
  4868 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;  f1              4   48[COMRAM] unsigned long 
  4871 ;; Auto vars:     Size  Location     Type
  4872 ;;  exp1            1   57[COMRAM] unsigned char 
  4873 ;;  sign1           1   56[COMRAM] unsigned char 
  4874 ;; Return value:  Size  Location     Type
  4875 ;;                  4   48[COMRAM] long 
  4876 ;; Registers used:
  4877 ;;		wreg, status,2, status,0
  4878 ;; Tracked objects:
  4879 ;;		On entry : 0/0
  4880 ;;		On exit  : 0/0
  4881 ;;		Unchanged: 0/0
  4882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4883 ;;      Params:         4       0       0       0       0       0       0
  4884 ;;      Locals:         2       0       0       0       0       0       0
  4885 ;;      Temps:          4       0       0       0       0       0       0
  4886 ;;      Totals:        10       0       0       0       0       0       0
  4887 ;;Total ram usage:       10 bytes
  4888 ;; Hardware stack levels used:    1
  4889 ;; This function calls:
  4890 ;;		Nothing
  4891 ;; This function is called by:
  4892 ;;		_sprintf
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896                           	psect	text16
  4897  001CA0                     __ptext16:
  4898                           	opt callstack 0
  4899  001CA0                     ___fltol:
  4900                           	opt callstack 0
  4901  001CA0  FFFF               	dw	65535	; assembler added errata NOP
  4902                           
  4903                           ;incstack = 0
  4904  001CA2  3433               	rlcf	___fltol@f1+2,w,c
  4905  001CA4  3434               	rlcf	___fltol@f1+3,w,c
  4906  001CA6  6E3A               	movwf	___fltol@exp1,c
  4907  001CA8  503A               	movf	___fltol@exp1,w,c
  4908  001CAA  A4D8               	btfss	status,2,c
  4909  001CAC  D00A               	goto	l3385
  4910  001CAE                     u3600:
  4911  001CAE  FFFF               	dw	65535	; assembler added errata NOP
  4912  001CB0  0E00               	movlw	0
  4913  001CB2  6E31               	movwf	?___fltol,c
  4914  001CB4  0E00               	movlw	0
  4915  001CB6  6E32               	movwf	?___fltol+1,c
  4916  001CB8  0E00               	movlw	0
  4917  001CBA  6E33               	movwf	?___fltol+2,c
  4918  001CBC  0E00               	movlw	0
  4919  001CBE  6E34               	movwf	?___fltol+3,c
  4920  001CC0  D056               	goto	l567
  4921  001CC2                     l3385:
  4922  001CC2  FFFF               	dw	65535	; assembler added errata NOP
  4923  001CC4  C031  F035         	movff	___fltol@f1,??___fltol
  4924  001CC8  C032  F036         	movff	___fltol@f1+1,??___fltol+1
  4925  001CCC  C033  F037         	movff	___fltol@f1+2,??___fltol+2
  4926  001CD0  C034  F038         	movff	___fltol@f1+3,??___fltol+3
  4927  001CD4  0E20               	movlw	32
  4928  001CD6  D006               	goto	u3610
  4929  001CD8                     u3615:
  4930  001CD8  FFFF               	dw	65535	; assembler added errata NOP
  4931  001CDA  90D8               	bcf	status,0,c
  4932  001CDC  3238               	rrcf	??___fltol+3,f,c
  4933  001CDE  3237               	rrcf	??___fltol+2,f,c
  4934  001CE0  3236               	rrcf	??___fltol+1,f,c
  4935  001CE2  3235               	rrcf	??___fltol,f,c
  4936  001CE4                     u3610:
  4937  001CE4  FFFF               	dw	65535	; assembler added errata NOP
  4938  001CE6  2EE8               	decfsz	wreg,f,c
  4939  001CE8  D7F7               	goto	u3615
  4940  001CEA  5035               	movf	??___fltol,w,c
  4941  001CEC  6E39               	movwf	___fltol@sign1,c
  4942  001CEE  8E33               	bsf	___fltol@f1+2,7,c
  4943  001CF0  0EFF               	movlw	255
  4944  001CF2  1631               	andwf	___fltol@f1,f,c
  4945  001CF4  0EFF               	movlw	255
  4946  001CF6  1632               	andwf	___fltol@f1+1,f,c
  4947  001CF8  0EFF               	movlw	255
  4948  001CFA  1633               	andwf	___fltol@f1+2,f,c
  4949  001CFC  0E00               	movlw	0
  4950  001CFE  1634               	andwf	___fltol@f1+3,f,c
  4951  001D00  0E96               	movlw	150
  4952  001D02  5E3A               	subwf	___fltol@exp1,f,c
  4953  001D04  AE3A               	btfss	___fltol@exp1,7,c
  4954  001D06  D00E               	goto	l3405
  4955  001D08  503A               	movf	___fltol@exp1,w,c
  4956  001D0A  0A80               	xorlw	128
  4957  001D0C  0F97               	addlw	151
  4958  001D0E  A0D8               	btfss	status,0,c
  4959  001D10  D7CE               	goto	u3600
  4960  001D12                     l3401:
  4961  001D12  FFFF               	dw	65535	; assembler added errata NOP
  4962  001D14  90D8               	bcf	status,0,c
  4963  001D16  3234               	rrcf	___fltol@f1+3,f,c
  4964  001D18  3233               	rrcf	___fltol@f1+2,f,c
  4965  001D1A  3232               	rrcf	___fltol@f1+1,f,c
  4966  001D1C  3231               	rrcf	___fltol@f1,f,c
  4967  001D1E  3E3A               	incfsz	___fltol@exp1,f,c
  4968  001D20  D7F8               	goto	l3401
  4969  001D22  D010               	goto	u3650
  4970  001D24                     l3405:
  4971  001D24  FFFF               	dw	65535	; assembler added errata NOP
  4972  001D26  0E1F               	movlw	31
  4973  001D28  643A               	cpfsgt	___fltol@exp1,c
  4974  001D2A  D008               	goto	l3413
  4975  001D2C  D7C0               	goto	u3600
  4976  001D2E                     l3411:
  4977  001D2E  FFFF               	dw	65535	; assembler added errata NOP
  4978  001D30  90D8               	bcf	status,0,c
  4979  001D32  3631               	rlcf	___fltol@f1,f,c
  4980  001D34  3632               	rlcf	___fltol@f1+1,f,c
  4981  001D36  3633               	rlcf	___fltol@f1+2,f,c
  4982  001D38  3634               	rlcf	___fltol@f1+3,f,c
  4983  001D3A  063A               	decf	___fltol@exp1,f,c
  4984  001D3C                     l3413:
  4985  001D3C  FFFF               	dw	65535	; assembler added errata NOP
  4986  001D3E  503A               	movf	___fltol@exp1,w,c
  4987  001D40  A4D8               	btfss	status,2,c
  4988  001D42  D7F5               	goto	l3411
  4989  001D44                     u3650:
  4990  001D44  FFFF               	dw	65535	; assembler added errata NOP
  4991  001D46  5039               	movf	___fltol@sign1,w,c
  4992  001D48  B4D8               	btfsc	status,2,c
  4993  001D4A  D008               	goto	l3419
  4994  001D4C  1E34               	comf	___fltol@f1+3,f,c
  4995  001D4E  1E33               	comf	___fltol@f1+2,f,c
  4996  001D50  1E32               	comf	___fltol@f1+1,f,c
  4997  001D52  6C31               	negf	___fltol@f1,c
  4998  001D54  0E00               	movlw	0
  4999  001D56  2232               	addwfc	___fltol@f1+1,f,c
  5000  001D58  2233               	addwfc	___fltol@f1+2,f,c
  5001  001D5A  2234               	addwfc	___fltol@f1+3,f,c
  5002  001D5C                     l3419:
  5003  001D5C  FFFF               	dw	65535	; assembler added errata NOP
  5004  001D5E  C031  F031         	movff	___fltol@f1,?___fltol
  5005  001D62  C032  F032         	movff	___fltol@f1+1,?___fltol+1
  5006  001D66  C033  F033         	movff	___fltol@f1+2,?___fltol+2
  5007  001D6A  C034  F034         	movff	___fltol@f1+3,?___fltol+3
  5008  001D6E                     l567:
  5009  001D6E  FFFF               	dw	65535	; assembler added errata NOP
  5010  001D70  0012               	return		;funcret
  5011  001D72  FFFF               	dw	65535	; errata NOP
  5012  001D74                     __end_of___fltol:
  5013                           	opt callstack 0
  5014                           
  5015 ;; *************** function ___flsub *****************
  5016 ;; Defined at:
  5017 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  5018 ;; Parameters:    Size  Location     Type
  5019 ;;  b               4   68[COMRAM] long 
  5020 ;;  a               4   72[COMRAM] long 
  5021 ;; Auto vars:     Size  Location     Type
  5022 ;;		None
  5023 ;; Return value:  Size  Location     Type
  5024 ;;                  4   68[COMRAM] long 
  5025 ;; Registers used:
  5026 ;;		wreg, status,2, status,0, cstack
  5027 ;; Tracked objects:
  5028 ;;		On entry : 0/0
  5029 ;;		On exit  : 0/0
  5030 ;;		Unchanged: 0/0
  5031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5032 ;;      Params:         8       0       0       0       0       0       0
  5033 ;;      Locals:         0       0       0       0       0       0       0
  5034 ;;      Temps:          0       0       0       0       0       0       0
  5035 ;;      Totals:         8       0       0       0       0       0       0
  5036 ;;Total ram usage:        8 bytes
  5037 ;; Hardware stack levels used:    1
  5038 ;; Hardware stack levels required when called:    1
  5039 ;; This function calls:
  5040 ;;		___fladd
  5041 ;; This function is called by:
  5042 ;;		_sprintf
  5043 ;; This function uses a non-reentrant model
  5044 ;;
  5045                           
  5046                           	psect	text17
  5047  001778                     __ptext17:
  5048                           	opt callstack 0
  5049  001778                     ___flsub:
  5050                           	opt callstack 0
  5051  001778  FFFF               	dw	65535	; assembler added errata NOP
  5052                           
  5053                           ;incstack = 0
  5054  00177A  0E00               	movlw	0
  5055  00177C  1A49               	xorwf	___flsub@a,f,c
  5056  00177E  0E00               	movlw	0
  5057  001780  1A4A               	xorwf	___flsub@a+1,f,c
  5058  001782  0E00               	movlw	0
  5059  001784  1A4B               	xorwf	___flsub@a+2,f,c
  5060  001786  0E80               	movlw	128
  5061  001788  1A4C               	xorwf	___flsub@a+3,f,c
  5062  00178A  C045  F035         	movff	___flsub@b,___fladd@b
  5063  00178E  C046  F036         	movff	___flsub@b+1,___fladd@b+1
  5064  001792  C047  F037         	movff	___flsub@b+2,___fladd@b+2
  5065  001796  C048  F038         	movff	___flsub@b+3,___fladd@b+3
  5066  00179A  C049  F039         	movff	___flsub@a,___fladd@a
  5067  00179E  C04A  F03A         	movff	___flsub@a+1,___fladd@a+1
  5068  0017A2  C04B  F03B         	movff	___flsub@a+2,___fladd@a+2
  5069  0017A6  C04C  F03C         	movff	___flsub@a+3,___fladd@a+3
  5070  0017AA  EC63  F015         	call	___fladd	;wreg free
  5071  0017AE  C035  F045         	movff	?___fladd,?___flsub
  5072  0017B2  C036  F046         	movff	?___fladd+1,?___flsub+1
  5073  0017B6  C037  F047         	movff	?___fladd+2,?___flsub+2
  5074  0017BA  C038  F048         	movff	?___fladd+3,?___flsub+3
  5075  0017BE  0012               	return		;funcret
  5076  0017C0  FFFF               	dw	65535	; errata NOP
  5077  0017C2                     __end_of___flsub:
  5078                           	opt callstack 0
  5079                           
  5080 ;; *************** function ___flneg *****************
  5081 ;; Defined at:
  5082 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flneg.c"
  5083 ;; Parameters:    Size  Location     Type
  5084 ;;  f1              4    0[COMRAM] long 
  5085 ;; Auto vars:     Size  Location     Type
  5086 ;;		None
  5087 ;; Return value:  Size  Location     Type
  5088 ;;                  4    0[COMRAM] long 
  5089 ;; Registers used:
  5090 ;;		wreg, status,2, status,0
  5091 ;; Tracked objects:
  5092 ;;		On entry : 0/0
  5093 ;;		On exit  : 0/0
  5094 ;;		Unchanged: 0/0
  5095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5096 ;;      Params:         4       0       0       0       0       0       0
  5097 ;;      Locals:         0       0       0       0       0       0       0
  5098 ;;      Temps:          0       0       0       0       0       0       0
  5099 ;;      Totals:         4       0       0       0       0       0       0
  5100 ;;Total ram usage:        4 bytes
  5101 ;; Hardware stack levels used:    1
  5102 ;; This function calls:
  5103 ;;		Nothing
  5104 ;; This function is called by:
  5105 ;;		_sprintf
  5106 ;; This function uses a non-reentrant model
  5107 ;;
  5108                           
  5109                           	psect	text18
  5110  0016FE                     __ptext18:
  5111                           	opt callstack 0
  5112  0016FE                     ___flneg:
  5113                           	opt callstack 0
  5114  0016FE  FFFF               	dw	65535	; assembler added errata NOP
  5115                           
  5116                           ;incstack = 0
  5117  001700  5001               	movf	___flneg@f1,w,c
  5118  001702  1002               	iorwf	___flneg@f1+1,w,c
  5119  001704  1003               	iorwf	___flneg@f1+2,w,c
  5120  001706  1004               	iorwf	___flneg@f1+3,w,c
  5121  001708  B4D8               	btfsc	status,2,c
  5122  00170A  D008               	goto	l3375
  5123  00170C  0E00               	movlw	0
  5124  00170E  1A01               	xorwf	___flneg@f1,f,c
  5125  001710  0E00               	movlw	0
  5126  001712  1A02               	xorwf	___flneg@f1+1,f,c
  5127  001714  0E00               	movlw	0
  5128  001716  1A03               	xorwf	___flneg@f1+2,f,c
  5129  001718  0E80               	movlw	128
  5130  00171A  1A04               	xorwf	___flneg@f1+3,f,c
  5131  00171C                     l3375:
  5132  00171C  FFFF               	dw	65535	; assembler added errata NOP
  5133  00171E  C001  F001         	movff	___flneg@f1,?___flneg
  5134  001722  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5135  001726  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5136  00172A  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5137  00172E  0012               	return		;funcret
  5138  001730  FFFF               	dw	65535	; errata NOP
  5139  001732                     __end_of___flneg:
  5140                           	opt callstack 0
  5141                           
  5142 ;; *************** function ___flge *****************
  5143 ;; Defined at:
  5144 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
  5145 ;; Parameters:    Size  Location     Type
  5146 ;;  ff1             4    0[COMRAM] long 
  5147 ;;  ff2             4    4[COMRAM] long 
  5148 ;; Auto vars:     Size  Location     Type
  5149 ;;		None
  5150 ;; Return value:  Size  Location     Type
  5151 ;;		None               void
  5152 ;; Registers used:
  5153 ;;		wreg, status,2, status,0
  5154 ;; Tracked objects:
  5155 ;;		On entry : 0/0
  5156 ;;		On exit  : 0/0
  5157 ;;		Unchanged: 0/0
  5158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5159 ;;      Params:         8       0       0       0       0       0       0
  5160 ;;      Locals:         0       0       0       0       0       0       0
  5161 ;;      Temps:          4       0       0       0       0       0       0
  5162 ;;      Totals:        12       0       0       0       0       0       0
  5163 ;;Total ram usage:       12 bytes
  5164 ;; Hardware stack levels used:    1
  5165 ;; This function calls:
  5166 ;;		Nothing
  5167 ;; This function is called by:
  5168 ;;		_main
  5169 ;;		_sprintf
  5170 ;; This function uses a non-reentrant model
  5171 ;;
  5172                           
  5173                           	psect	text19
  5174  001D74                     __ptext19:
  5175                           	opt callstack 0
  5176  001D74                     ___flge:
  5177                           	opt callstack 0
  5178  001D74  FFFF               	dw	65535	; assembler added errata NOP
  5179                           
  5180                           ;incstack = 0
  5181  001D76  0E00               	movlw	0
  5182  001D78  1401               	andwf	___flge@ff1,w,c
  5183  001D7A  6E09               	movwf	??___flge& (0+255),c
  5184  001D7C  0E00               	movlw	0
  5185  001D7E  1402               	andwf	___flge@ff1+1,w,c
  5186  001D80  6E0A               	movwf	(??___flge+1)& (0+255),c
  5187  001D82  0E80               	movlw	128
  5188  001D84  1403               	andwf	___flge@ff1+2,w,c
  5189  001D86  6E0B               	movwf	(??___flge+2)& (0+255),c
  5190  001D88  0E7F               	movlw	127
  5191  001D8A  1404               	andwf	___flge@ff1+3,w,c
  5192  001D8C  6E0C               	movwf	(??___flge+3)& (0+255),c
  5193  001D8E  5009               	movf	??___flge,w,c
  5194  001D90  100A               	iorwf	??___flge+1,w,c
  5195  001D92  100B               	iorwf	??___flge+2,w,c
  5196  001D94  100C               	iorwf	??___flge+3,w,c
  5197  001D96  A4D8               	btfss	status,2,c
  5198  001D98  D008               	goto	l3353
  5199  001D9A  0E00               	movlw	0
  5200  001D9C  6E01               	movwf	___flge@ff1,c
  5201  001D9E  0E00               	movlw	0
  5202  001DA0  6E02               	movwf	___flge@ff1+1,c
  5203  001DA2  0E00               	movlw	0
  5204  001DA4  6E03               	movwf	___flge@ff1+2,c
  5205  001DA6  0E00               	movlw	0
  5206  001DA8  6E04               	movwf	___flge@ff1+3,c
  5207  001DAA                     l3353:
  5208  001DAA  FFFF               	dw	65535	; assembler added errata NOP
  5209  001DAC  0E00               	movlw	0
  5210  001DAE  1405               	andwf	___flge@ff2,w,c
  5211  001DB0  6E09               	movwf	??___flge& (0+255),c
  5212  001DB2  0E00               	movlw	0
  5213  001DB4  1406               	andwf	___flge@ff2+1,w,c
  5214  001DB6  6E0A               	movwf	(??___flge+1)& (0+255),c
  5215  001DB8  0E80               	movlw	128
  5216  001DBA  1407               	andwf	___flge@ff2+2,w,c
  5217  001DBC  6E0B               	movwf	(??___flge+2)& (0+255),c
  5218  001DBE  0E7F               	movlw	127
  5219  001DC0  1408               	andwf	___flge@ff2+3,w,c
  5220  001DC2  6E0C               	movwf	(??___flge+3)& (0+255),c
  5221  001DC4  5009               	movf	??___flge,w,c
  5222  001DC6  100A               	iorwf	??___flge+1,w,c
  5223  001DC8  100B               	iorwf	??___flge+2,w,c
  5224  001DCA  100C               	iorwf	??___flge+3,w,c
  5225  001DCC  A4D8               	btfss	status,2,c
  5226  001DCE  D008               	goto	l3357
  5227  001DD0  0E00               	movlw	0
  5228  001DD2  6E05               	movwf	___flge@ff2,c
  5229  001DD4  0E00               	movlw	0
  5230  001DD6  6E06               	movwf	___flge@ff2+1,c
  5231  001DD8  0E00               	movlw	0
  5232  001DDA  6E07               	movwf	___flge@ff2+2,c
  5233  001DDC  0E00               	movlw	0
  5234  001DDE  6E08               	movwf	___flge@ff2+3,c
  5235  001DE0                     l3357:
  5236  001DE0  FFFF               	dw	65535	; assembler added errata NOP
  5237  001DE2  AE04               	btfss	___flge@ff1+3,7,c
  5238  001DE4  D009               	goto	l3361
  5239  001DE6  6C01               	negf	___flge@ff1,c
  5240  001DE8  1E02               	comf	___flge@ff1+1,f,c
  5241  001DEA  B0D8               	btfsc	status,0,c
  5242  001DEC  2A02               	incf	___flge@ff1+1,f,c
  5243  001DEE  1E03               	comf	___flge@ff1+2,f,c
  5244  001DF0  B0D8               	btfsc	status,0,c
  5245  001DF2  2A03               	incf	___flge@ff1+2,f,c
  5246  001DF4  0E80               	movlw	128
  5247  001DF6  5604               	subfwb	___flge@ff1+3,f,c
  5248  001DF8                     l3361:
  5249  001DF8  FFFF               	dw	65535	; assembler added errata NOP
  5250  001DFA  AE08               	btfss	___flge@ff2+3,7,c
  5251  001DFC  D009               	goto	l539
  5252  001DFE  6C05               	negf	___flge@ff2,c
  5253  001E00  1E06               	comf	___flge@ff2+1,f,c
  5254  001E02  B0D8               	btfsc	status,0,c
  5255  001E04  2A06               	incf	___flge@ff2+1,f,c
  5256  001E06  1E07               	comf	___flge@ff2+2,f,c
  5257  001E08  B0D8               	btfsc	status,0,c
  5258  001E0A  2A07               	incf	___flge@ff2+2,f,c
  5259  001E0C  0E80               	movlw	128
  5260  001E0E  5608               	subfwb	___flge@ff2+3,f,c
  5261  001E10                     l539:
  5262  001E10  FFFF               	dw	65535	; assembler added errata NOP
  5263  001E12  0E00               	movlw	0
  5264  001E14  1A01               	xorwf	___flge@ff1,f,c
  5265  001E16  0E00               	movlw	0
  5266  001E18  1A02               	xorwf	___flge@ff1+1,f,c
  5267  001E1A  0E00               	movlw	0
  5268  001E1C  1A03               	xorwf	___flge@ff1+2,f,c
  5269  001E1E  0E80               	movlw	128
  5270  001E20  1A04               	xorwf	___flge@ff1+3,f,c
  5271  001E22  0E00               	movlw	0
  5272  001E24  1A05               	xorwf	___flge@ff2,f,c
  5273  001E26  0E00               	movlw	0
  5274  001E28  1A06               	xorwf	___flge@ff2+1,f,c
  5275  001E2A  0E00               	movlw	0
  5276  001E2C  1A07               	xorwf	___flge@ff2+2,f,c
  5277  001E2E  0E80               	movlw	128
  5278  001E30  1A08               	xorwf	___flge@ff2+3,f,c
  5279  001E32  5005               	movf	___flge@ff2,w,c
  5280  001E34  5C01               	subwf	___flge@ff1,w,c
  5281  001E36  5006               	movf	___flge@ff2+1,w,c
  5282  001E38  5802               	subwfb	___flge@ff1+1,w,c
  5283  001E3A  5007               	movf	___flge@ff2+2,w,c
  5284  001E3C  5803               	subwfb	___flge@ff1+2,w,c
  5285  001E3E  5008               	movf	___flge@ff2+3,w,c
  5286  001E40  5804               	subwfb	___flge@ff1+3,w,c
  5287  001E42  B0D8               	btfsc	status,0,c
  5288  001E44  D002               	goto	l3367
  5289  001E46  90D8               	bcf	status,0,c
  5290  001E48  D002               	goto	l540
  5291  001E4A                     l3367:
  5292  001E4A  FFFF               	dw	65535	; assembler added errata NOP
  5293  001E4C  80D8               	bsf	status,0,c
  5294  001E4E                     l540:
  5295  001E4E  FFFF               	dw	65535	; assembler added errata NOP
  5296  001E50  0012               	return		;funcret
  5297  001E52  FFFF               	dw	65535	; errata NOP
  5298  001E54                     __end_of___flge:
  5299                           	opt callstack 0
  5300                           
  5301 ;; *************** function ___fleq *****************
  5302 ;; Defined at:
  5303 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fleq.c"
  5304 ;; Parameters:    Size  Location     Type
  5305 ;;  ff1             4    0[COMRAM] long 
  5306 ;;  ff2             4    4[COMRAM] long 
  5307 ;; Auto vars:     Size  Location     Type
  5308 ;;		None
  5309 ;; Return value:  Size  Location     Type
  5310 ;;		None               void
  5311 ;; Registers used:
  5312 ;;		wreg, status,2, status,0
  5313 ;; Tracked objects:
  5314 ;;		On entry : 0/0
  5315 ;;		On exit  : 0/0
  5316 ;;		Unchanged: 0/0
  5317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5318 ;;      Params:         8       0       0       0       0       0       0
  5319 ;;      Locals:         0       0       0       0       0       0       0
  5320 ;;      Temps:          4       0       0       0       0       0       0
  5321 ;;      Totals:        12       0       0       0       0       0       0
  5322 ;;Total ram usage:       12 bytes
  5323 ;; Hardware stack levels used:    1
  5324 ;; This function calls:
  5325 ;;		Nothing
  5326 ;; This function is called by:
  5327 ;;		_sprintf
  5328 ;; This function uses a non-reentrant model
  5329 ;;
  5330                           
  5331                           	psect	text20
  5332  001B72                     __ptext20:
  5333                           	opt callstack 0
  5334  001B72                     ___fleq:
  5335                           	opt callstack 0
  5336  001B72  FFFF               	dw	65535	; assembler added errata NOP
  5337                           
  5338                           ;incstack = 0
  5339  001B74  0E00               	movlw	0
  5340  001B76  1401               	andwf	___fleq@ff1,w,c
  5341  001B78  6E09               	movwf	??___fleq& (0+255),c
  5342  001B7A  0E00               	movlw	0
  5343  001B7C  1402               	andwf	___fleq@ff1+1,w,c
  5344  001B7E  6E0A               	movwf	(??___fleq+1)& (0+255),c
  5345  001B80  0E80               	movlw	128
  5346  001B82  1403               	andwf	___fleq@ff1+2,w,c
  5347  001B84  6E0B               	movwf	(??___fleq+2)& (0+255),c
  5348  001B86  0E7F               	movlw	127
  5349  001B88  1404               	andwf	___fleq@ff1+3,w,c
  5350  001B8A  6E0C               	movwf	(??___fleq+3)& (0+255),c
  5351  001B8C  5009               	movf	??___fleq,w,c
  5352  001B8E  100A               	iorwf	??___fleq+1,w,c
  5353  001B90  100B               	iorwf	??___fleq+2,w,c
  5354  001B92  100C               	iorwf	??___fleq+3,w,c
  5355  001B94  A4D8               	btfss	status,2,c
  5356  001B96  D008               	goto	l3337
  5357  001B98  0E00               	movlw	0
  5358  001B9A  6E01               	movwf	___fleq@ff1,c
  5359  001B9C  0E00               	movlw	0
  5360  001B9E  6E02               	movwf	___fleq@ff1+1,c
  5361  001BA0  0E00               	movlw	0
  5362  001BA2  6E03               	movwf	___fleq@ff1+2,c
  5363  001BA4  0E00               	movlw	0
  5364  001BA6  6E04               	movwf	___fleq@ff1+3,c
  5365  001BA8                     l3337:
  5366  001BA8  FFFF               	dw	65535	; assembler added errata NOP
  5367  001BAA  0E00               	movlw	0
  5368  001BAC  1405               	andwf	___fleq@ff2,w,c
  5369  001BAE  6E09               	movwf	??___fleq& (0+255),c
  5370  001BB0  0E00               	movlw	0
  5371  001BB2  1406               	andwf	___fleq@ff2+1,w,c
  5372  001BB4  6E0A               	movwf	(??___fleq+1)& (0+255),c
  5373  001BB6  0E80               	movlw	128
  5374  001BB8  1407               	andwf	___fleq@ff2+2,w,c
  5375  001BBA  6E0B               	movwf	(??___fleq+2)& (0+255),c
  5376  001BBC  0E7F               	movlw	127
  5377  001BBE  1408               	andwf	___fleq@ff2+3,w,c
  5378  001BC0  6E0C               	movwf	(??___fleq+3)& (0+255),c
  5379  001BC2  5009               	movf	??___fleq,w,c
  5380  001BC4  100A               	iorwf	??___fleq+1,w,c
  5381  001BC6  100B               	iorwf	??___fleq+2,w,c
  5382  001BC8  100C               	iorwf	??___fleq+3,w,c
  5383  001BCA  A4D8               	btfss	status,2,c
  5384  001BCC  D008               	goto	l3341
  5385  001BCE  0E00               	movlw	0
  5386  001BD0  6E05               	movwf	___fleq@ff2,c
  5387  001BD2  0E00               	movlw	0
  5388  001BD4  6E06               	movwf	___fleq@ff2+1,c
  5389  001BD6  0E00               	movlw	0
  5390  001BD8  6E07               	movwf	___fleq@ff2+2,c
  5391  001BDA  0E00               	movlw	0
  5392  001BDC  6E08               	movwf	___fleq@ff2+3,c
  5393  001BDE                     l3341:
  5394  001BDE  FFFF               	dw	65535	; assembler added errata NOP
  5395  001BE0  5005               	movf	___fleq@ff2,w,c
  5396  001BE2  1801               	xorwf	___fleq@ff1,w,c
  5397  001BE4  E10A               	bnz	u3530
  5398  001BE6  5006               	movf	___fleq@ff2+1,w,c
  5399  001BE8  1802               	xorwf	___fleq@ff1+1,w,c
  5400  001BEA  E107               	bnz	u3530
  5401  001BEC  5007               	movf	___fleq@ff2+2,w,c
  5402  001BEE  1803               	xorwf	___fleq@ff1+2,w,c
  5403  001BF0  E104               	bnz	u3530
  5404  001BF2  5008               	movf	___fleq@ff2+3,w,c
  5405  001BF4  1804               	xorwf	___fleq@ff1+3,w,c
  5406  001BF6  B4D8               	btfsc	status,2,c
  5407  001BF8  D002               	goto	l3345
  5408  001BFA                     u3530:
  5409  001BFA  90D8               	bcf	status,0,c
  5410  001BFC  D002               	goto	l533
  5411  001BFE                     l3345:
  5412  001BFE  FFFF               	dw	65535	; assembler added errata NOP
  5413  001C00  80D8               	bsf	status,0,c
  5414  001C02                     l533:
  5415  001C02  FFFF               	dw	65535	; assembler added errata NOP
  5416  001C04  0012               	return		;funcret
  5417  001C06  FFFF               	dw	65535	; errata NOP
  5418  001C08                     __end_of___fleq:
  5419                           	opt callstack 0
  5420                           
  5421 ;; *************** function _print_message_onLCD *****************
  5422 ;; Defined at:
  5423 ;;		line 155 in file "main.c"
  5424 ;; Parameters:    Size  Location     Type
  5425 ;;  message         2    4[COMRAM] PTR unsigned char 
  5426 ;;		 -> STR_10(17), STR_9(16), STR_8(17), STR_7(17), 
  5427 ;;		 -> STR_6(17), STR_5(15), main@message(20), STR_2(14), 
  5428 ;;		 -> STR_1(14), 
  5429 ;; Auto vars:     Size  Location     Type
  5430 ;;  i               1    8[COMRAM] unsigned char 
  5431 ;; Return value:  Size  Location     Type
  5432 ;;                  1    wreg      void 
  5433 ;; Registers used:
  5434 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5435 ;; Tracked objects:
  5436 ;;		On entry : 0/0
  5437 ;;		On exit  : 0/0
  5438 ;;		Unchanged: 0/0
  5439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5440 ;;      Params:         2       0       0       0       0       0       0
  5441 ;;      Locals:         1       0       0       0       0       0       0
  5442 ;;      Temps:          2       0       0       0       0       0       0
  5443 ;;      Totals:         5       0       0       0       0       0       0
  5444 ;;Total ram usage:        5 bytes
  5445 ;; Hardware stack levels used:    1
  5446 ;; Hardware stack levels required when called:    1
  5447 ;; This function calls:
  5448 ;;		_R_D
  5449 ;;		_strlen
  5450 ;; This function is called by:
  5451 ;;		_main
  5452 ;; This function uses a non-reentrant model
  5453 ;;
  5454                           
  5455                           	psect	text21
  5456  001916                     __ptext21:
  5457                           	opt callstack 0
  5458  001916                     _print_message_onLCD:
  5459                           	opt callstack 0
  5460  001916  FFFF               	dw	65535	; assembler added errata NOP
  5461                           
  5462                           ;main.c: 156: for (char i = 0; i < strlen(message); i++) {
  5463                           
  5464                           ;incstack = 0
  5465  001918  0E00               	movlw	0
  5466  00191A  6E09               	movwf	print_message_onLCD@i,c
  5467  00191C  D01B               	goto	l3501
  5468  00191E                     l3497:
  5469  00191E  FFFF               	dw	65535	; assembler added errata NOP
  5470                           
  5471                           ;main.c: 157: R_D(message[i]);
  5472  001920  5009               	movf	print_message_onLCD@i,w,c
  5473  001922  2405               	addwf	print_message_onLCD@message,w,c
  5474  001924  6E07               	movwf	??_print_message_onLCD& (0+255),c
  5475  001926  0E00               	movlw	0
  5476  001928  2006               	addwfc	print_message_onLCD@message+1,w,c
  5477  00192A  6E08               	movwf	(??_print_message_onLCD+1)& (0+255),c
  5478  00192C  C007  FFF6         	movff	??_print_message_onLCD,tblptrl
  5479  001930  C008  FFF7         	movff	??_print_message_onLCD+1,tblptrh
  5480  001934  6AF8               	clrf	tblptru,c
  5481  001936  0E05               	movlw	(high __ramtop+-1)
  5482  001938  64F7               	cpfsgt	tblptrh,c
  5483  00193A  D004               	bra	u3807
  5484  00193C  0008               	tblrd		*
  5485  00193E  FFFF               	dw	65535	; errata NOP
  5486  001940  50F5               	movf	tablat,w,c
  5487  001942  D005               	bra	u3800
  5488  001944                     u3807:
  5489  001944  CFF6 FFE9          	movff	tblptrl,fsr0l
  5490  001948  CFF7 FFEA          	movff	tblptrh,fsr0h
  5491  00194C  50EF               	movf	indf0,w,c
  5492  00194E                     u3800:
  5493  00194E  EC4A  F00B         	call	_R_D
  5494  001952  2A09               	incf	print_message_onLCD@i,f,c
  5495  001954                     l3501:
  5496  001954  FFFF               	dw	65535	; assembler added errata NOP
  5497  001956  C005  F001         	movff	print_message_onLCD@message,strlen@s
  5498  00195A  C006  F002         	movff	print_message_onLCD@message+1,strlen@s+1
  5499  00195E  ECE1  F00B         	call	_strlen	;wreg free
  5500  001962  5009               	movf	print_message_onLCD@i,w,c
  5501  001964  6E07               	movwf	??_print_message_onLCD& (0+255),c
  5502  001966  6A08               	clrf	(??_print_message_onLCD+1)& (0+255),c
  5503  001968  5001               	movf	?_strlen,w,c
  5504  00196A  5C07               	subwf	??_print_message_onLCD,w,c
  5505  00196C  5002               	movf	?_strlen+1,w,c
  5506  00196E  5808               	subwfb	??_print_message_onLCD+1,w,c
  5507  001970  B0D8               	btfsc	status,0,c
  5508  001972  0012               	return		;funcret
  5509  001974  FFFF               	dw	65535	; assembler added errata NOP
  5510  001976  D7D3               	goto	l3497
  5511  001978  FFFF               	dw	65535	; errata NOP
  5512  00197A                     __end_of_print_message_onLCD:
  5513                           	opt callstack 0
  5514                           
  5515 ;; *************** function _strlen *****************
  5516 ;; Defined at:
  5517 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strlen.c"
  5518 ;; Parameters:    Size  Location     Type
  5519 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5520 ;;		 -> STR_10(17), STR_9(16), STR_8(17), STR_7(17), 
  5521 ;;		 -> STR_6(17), STR_5(15), main@message(20), STR_2(14), 
  5522 ;;		 -> STR_1(14), 
  5523 ;; Auto vars:     Size  Location     Type
  5524 ;;  cp              2    2[COMRAM] PTR const unsigned char 
  5525 ;;		 -> STR_10(17), STR_9(16), STR_8(17), STR_7(17), 
  5526 ;;		 -> STR_6(17), STR_5(15), main@message(20), STR_2(14), 
  5527 ;;		 -> STR_1(14), 
  5528 ;; Return value:  Size  Location     Type
  5529 ;;                  2    0[COMRAM] unsigned int 
  5530 ;; Registers used:
  5531 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  5532 ;; Tracked objects:
  5533 ;;		On entry : 0/0
  5534 ;;		On exit  : 0/0
  5535 ;;		Unchanged: 0/0
  5536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5537 ;;      Params:         2       0       0       0       0       0       0
  5538 ;;      Locals:         2       0       0       0       0       0       0
  5539 ;;      Temps:          0       0       0       0       0       0       0
  5540 ;;      Totals:         4       0       0       0       0       0       0
  5541 ;;Total ram usage:        4 bytes
  5542 ;; Hardware stack levels used:    1
  5543 ;; This function calls:
  5544 ;;		Nothing
  5545 ;; This function is called by:
  5546 ;;		_print_message_onLCD
  5547 ;; This function uses a non-reentrant model
  5548 ;;
  5549                           
  5550                           	psect	text22
  5551  0017C2                     __ptext22:
  5552                           	opt callstack 0
  5553  0017C2                     _strlen:
  5554                           	opt callstack 0
  5555  0017C2  FFFF               	dw	65535	; assembler added errata NOP
  5556                           
  5557                           ;incstack = 0
  5558  0017C4  C001  F003         	movff	strlen@s,strlen@cp
  5559  0017C8  C002  F004         	movff	strlen@s+1,strlen@cp+1
  5560  0017CC  D003               	goto	l2971
  5561  0017CE                     l2969:
  5562  0017CE  FFFF               	dw	65535	; assembler added errata NOP
  5563  0017D0  4A03               	infsnz	strlen@cp,f,c
  5564  0017D2  2A04               	incf	strlen@cp+1,f,c
  5565  0017D4                     l2971:
  5566  0017D4  FFFF               	dw	65535	; assembler added errata NOP
  5567  0017D6  C003  FFF6         	movff	strlen@cp,tblptrl
  5568  0017DA  C004  FFF7         	movff	strlen@cp+1,tblptrh
  5569  0017DE  6AF8               	clrf	tblptru,c
  5570  0017E0  0E05               	movlw	(high __ramtop+-1)
  5571  0017E2  64F7               	cpfsgt	tblptrh,c
  5572  0017E4  D004               	bra	u2987
  5573  0017E6  0008               	tblrd		*
  5574  0017E8  FFFF               	dw	65535	; errata NOP
  5575  0017EA  50F5               	movf	tablat,w,c
  5576  0017EC  D005               	bra	u2980
  5577  0017EE                     u2987:
  5578  0017EE  CFF6 FFE9          	movff	tblptrl,fsr0l
  5579  0017F2  CFF7 FFEA          	movff	tblptrh,fsr0h
  5580  0017F6  50EF               	movf	indf0,w,c
  5581  0017F8                     u2980:
  5582  0017F8  0900               	iorlw	0
  5583  0017FA  A4D8               	btfss	status,2,c
  5584  0017FC  D7E8               	goto	l2969
  5585  0017FE  5001               	movf	strlen@s,w,c
  5586  001800  5C03               	subwf	strlen@cp,w,c
  5587  001802  6E01               	movwf	?_strlen,c
  5588  001804  5002               	movf	strlen@s+1,w,c
  5589  001806  5804               	subwfb	strlen@cp+1,w,c
  5590  001808  6E02               	movwf	?_strlen+1,c
  5591  00180A  0012               	return		;funcret
  5592  00180C  FFFF               	dw	65535	; errata NOP
  5593  00180E                     __end_of_strlen:
  5594                           	opt callstack 0
  5595                           
  5596 ;; *************** function _R_D *****************
  5597 ;; Defined at:
  5598 ;;		line 146 in file "main.c"
  5599 ;; Parameters:    Size  Location     Type
  5600 ;;  dato            1    wreg     unsigned char 
  5601 ;; Auto vars:     Size  Location     Type
  5602 ;;  dato            1    0[COMRAM] unsigned char 
  5603 ;; Return value:  Size  Location     Type
  5604 ;;                  1    wreg      void 
  5605 ;; Registers used:
  5606 ;;		wreg, status,2, cstack
  5607 ;; Tracked objects:
  5608 ;;		On entry : 0/0
  5609 ;;		On exit  : 0/0
  5610 ;;		Unchanged: 0/0
  5611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5612 ;;      Params:         0       0       0       0       0       0       0
  5613 ;;      Locals:         1       0       0       0       0       0       0
  5614 ;;      Temps:          0       0       0       0       0       0       0
  5615 ;;      Totals:         1       0       0       0       0       0       0
  5616 ;;Total ram usage:        1 bytes
  5617 ;; Hardware stack levels used:    1
  5618 ;; This function calls:
  5619 ;;		Nothing
  5620 ;; This function is called by:
  5621 ;;		_print_message_onLCD
  5622 ;; This function uses a non-reentrant model
  5623 ;;
  5624                           
  5625                           	psect	text23
  5626  001694                     __ptext23:
  5627                           	opt callstack 0
  5628  001694                     _R_D:
  5629                           	opt callstack 0
  5630  001694  FFFF               	dw	65535	; assembler added errata NOP
  5631                           
  5632                           ;incstack = 0
  5633                           ;R_D@dato stored from wreg
  5634  001696  6E01               	movwf	R_D@dato,c
  5635                           
  5636                           ;main.c: 147: LC3 = 0;
  5637  001698  968B               	bcf	3979,3,c	;volatile
  5638                           
  5639                           ;main.c: 148: LC4 = 1;
  5640  00169A  888B               	bsf	3979,4,c	;volatile
  5641                           
  5642                           ;main.c: 149: LATD = dato;
  5643  00169C  C001  FF8C         	movff	R_D@dato,3980	;volatile
  5644                           
  5645                           ;main.c: 150: LC3 = 1;
  5646  0016A0  868B               	bsf	3979,3,c	;volatile
  5647                           
  5648                           ;main.c: 151: _delay((unsigned long)((100)*(4000000/4000000.0)));
  5649  0016A2  0E19               	movlw	25
  5650  0016A4                     u4477:
  5651  0016A4  FFFF               	dw	65535	; errata NOP
  5652  0016A6  2EE8               	decfsz	wreg,f,c
  5653  0016A8  D7FD               	bra	u4477
  5654                           
  5655                           ;main.c: 152: LC3 = 0;
  5656  0016AA  968B               	bcf	3979,3,c	;volatile
  5657  0016AC  0012               	return		;funcret
  5658  0016AE  FFFF               	dw	65535	; errata NOP
  5659  0016B0                     __end_of_R_D:
  5660                           	opt callstack 0
  5661                           
  5662 ;; *************** function _light_the_bulb_and_start_engine *****************
  5663 ;; Defined at:
  5664 ;;		line 184 in file "main.c"
  5665 ;; Parameters:    Size  Location     Type
  5666 ;;		None
  5667 ;; Auto vars:     Size  Location     Type
  5668 ;;		None
  5669 ;; Return value:  Size  Location     Type
  5670 ;;                  1    wreg      void 
  5671 ;; Registers used:
  5672 ;;		wreg, status,2
  5673 ;; Tracked objects:
  5674 ;;		On entry : 0/0
  5675 ;;		On exit  : 0/0
  5676 ;;		Unchanged: 0/0
  5677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5678 ;;      Params:         0       0       0       0       0       0       0
  5679 ;;      Locals:         0       0       0       0       0       0       0
  5680 ;;      Temps:          0       0       0       0       0       0       0
  5681 ;;      Totals:         0       0       0       0       0       0       0
  5682 ;;Total ram usage:        0 bytes
  5683 ;; Hardware stack levels used:    1
  5684 ;; This function calls:
  5685 ;;		Nothing
  5686 ;; This function is called by:
  5687 ;;		_main
  5688 ;; This function uses a non-reentrant model
  5689 ;;
  5690                           
  5691                           	psect	text24
  5692  001644                     __ptext24:
  5693                           	opt callstack 0
  5694  001644                     _light_the_bulb_and_start_engine:
  5695                           	opt callstack 0
  5696  001644  FFFF               	dw	65535	; assembler added errata NOP
  5697                           
  5698                           ;main.c: 185: LATB = 3;
  5699                           
  5700                           ;incstack = 0
  5701  001646  0E03               	movlw	3
  5702  001648  6E8A               	movwf	3978,c	;volatile
  5703  00164A  0012               	return		;funcret
  5704  00164C  FFFF               	dw	65535	; errata NOP
  5705  00164E                     __end_of_light_the_bulb_and_start_engine:
  5706                           	opt callstack 0
  5707                           
  5708 ;; *************** function _light_the_bulb *****************
  5709 ;; Defined at:
  5710 ;;		line 176 in file "main.c"
  5711 ;; Parameters:    Size  Location     Type
  5712 ;;		None
  5713 ;; Auto vars:     Size  Location     Type
  5714 ;;		None
  5715 ;; Return value:  Size  Location     Type
  5716 ;;                  1    wreg      void 
  5717 ;; Registers used:
  5718 ;;		wreg, status,2
  5719 ;; Tracked objects:
  5720 ;;		On entry : 0/0
  5721 ;;		On exit  : 0/0
  5722 ;;		Unchanged: 0/0
  5723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5724 ;;      Params:         0       0       0       0       0       0       0
  5725 ;;      Locals:         0       0       0       0       0       0       0
  5726 ;;      Temps:          0       0       0       0       0       0       0
  5727 ;;      Totals:         0       0       0       0       0       0       0
  5728 ;;Total ram usage:        0 bytes
  5729 ;; Hardware stack levels used:    1
  5730 ;; This function calls:
  5731 ;;		Nothing
  5732 ;; This function is called by:
  5733 ;;		_main
  5734 ;; This function uses a non-reentrant model
  5735 ;;
  5736                           
  5737                           	psect	text25
  5738  00163A                     __ptext25:
  5739                           	opt callstack 0
  5740  00163A                     _light_the_bulb:
  5741                           	opt callstack 0
  5742  00163A  FFFF               	dw	65535	; assembler added errata NOP
  5743                           
  5744                           ;main.c: 177: LATB = 1;
  5745                           
  5746                           ;incstack = 0
  5747  00163C  0E01               	movlw	1
  5748  00163E  6E8A               	movwf	3978,c	;volatile
  5749  001640  0012               	return		;funcret
  5750  001642  FFFF               	dw	65535	; errata NOP
  5751  001644                     __end_of_light_the_bulb:
  5752                           	opt callstack 0
  5753                           
  5754 ;; *************** function _initial_config *****************
  5755 ;; Defined at:
  5756 ;;		line 100 in file "main.c"
  5757 ;; Parameters:    Size  Location     Type
  5758 ;;		None
  5759 ;; Auto vars:     Size  Location     Type
  5760 ;;		None
  5761 ;; Return value:  Size  Location     Type
  5762 ;;                  1    wreg      void 
  5763 ;; Registers used:
  5764 ;;		wreg, status,2
  5765 ;; Tracked objects:
  5766 ;;		On entry : 0/0
  5767 ;;		On exit  : 0/0
  5768 ;;		Unchanged: 0/0
  5769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5770 ;;      Params:         0       0       0       0       0       0       0
  5771 ;;      Locals:         0       0       0       0       0       0       0
  5772 ;;      Temps:          0       0       0       0       0       0       0
  5773 ;;      Totals:         0       0       0       0       0       0       0
  5774 ;;Total ram usage:        0 bytes
  5775 ;; Hardware stack levels used:    1
  5776 ;; This function calls:
  5777 ;;		Nothing
  5778 ;; This function is called by:
  5779 ;;		_main
  5780 ;; This function uses a non-reentrant model
  5781 ;;
  5782                           
  5783                           	psect	text26
  5784  001732                     __ptext26:
  5785                           	opt callstack 0
  5786  001732                     _initial_config:
  5787                           	opt callstack 0
  5788  001732  FFFF               	dw	65535	; assembler added errata NOP
  5789                           
  5790                           ;main.c: 101: TRISA = 0X03;
  5791                           
  5792                           ;incstack = 0
  5793  001734  0E03               	movlw	3
  5794  001736  6E92               	movwf	3986,c	;volatile
  5795                           
  5796                           ;main.c: 103: TRISB = 0X00;
  5797  001738  0E00               	movlw	0
  5798  00173A  6E93               	movwf	3987,c	;volatile
  5799                           
  5800                           ;main.c: 104: TRISC = 0X00;
  5801  00173C  0E00               	movlw	0
  5802  00173E  6E94               	movwf	3988,c	;volatile
  5803                           
  5804                           ;main.c: 105: TRISD = 0X00;
  5805  001740  0E00               	movlw	0
  5806  001742  6E95               	movwf	3989,c	;volatile
  5807                           
  5808                           ;main.c: 109: ADCON0 = 0B01000001;
  5809  001744  0E41               	movlw	65
  5810  001746  6EC2               	movwf	4034,c	;volatile
  5811                           
  5812                           ;main.c: 110: ADCON1 = 0B10000100;
  5813  001748  0E84               	movlw	132
  5814  00174A  6EC1               	movwf	4033,c	;volatile
  5815                           
  5816                           ;main.c: 113: LATA = 0;
  5817  00174C  0E00               	movlw	0
  5818  00174E  6E89               	movwf	3977,c	;volatile
  5819                           
  5820                           ;main.c: 114: LATB = 0;
  5821  001750  0E00               	movlw	0
  5822  001752  6E8A               	movwf	3978,c	;volatile
  5823                           
  5824                           ;main.c: 115: LATC = 0;
  5825  001754  0E00               	movlw	0
  5826  001756  6E8B               	movwf	3979,c	;volatile
  5827                           
  5828                           ;main.c: 116: LATD = 0;
  5829  001758  0E00               	movlw	0
  5830  00175A  6E8C               	movwf	3980,c	;volatile
  5831                           
  5832                           ;main.c: 117: LATE = 0;
  5833  00175C  0E00               	movlw	0
  5834  00175E  6E8D               	movwf	3981,c	;volatile
  5835                           
  5836                           ;main.c: 118: PORTA = 0;
  5837  001760  0E00               	movlw	0
  5838  001762  6E80               	movwf	3968,c	;volatile
  5839                           
  5840                           ;main.c: 119: PORTB = 0;
  5841  001764  0E00               	movlw	0
  5842  001766  6E81               	movwf	3969,c	;volatile
  5843                           
  5844                           ;main.c: 120: PORTC = 0;
  5845  001768  0E00               	movlw	0
  5846  00176A  6E82               	movwf	3970,c	;volatile
  5847                           
  5848                           ;main.c: 121: PORTD = 0;
  5849  00176C  0E00               	movlw	0
  5850  00176E  6E83               	movwf	3971,c	;volatile
  5851                           
  5852                           ;main.c: 122: PORTE = 0;
  5853  001770  0E00               	movlw	0
  5854  001772  6E84               	movwf	3972,c	;volatile
  5855  001774  0012               	return		;funcret
  5856  001776  FFFF               	dw	65535	; errata NOP
  5857  001778                     __end_of_initial_config:
  5858                           	opt callstack 0
  5859                           
  5860 ;; *************** function _init_LCD *****************
  5861 ;; Defined at:
  5862 ;;		line 125 in file "main.c"
  5863 ;; Parameters:    Size  Location     Type
  5864 ;;		None
  5865 ;; Auto vars:     Size  Location     Type
  5866 ;;		None
  5867 ;; Return value:  Size  Location     Type
  5868 ;;                  1    wreg      void 
  5869 ;; Registers used:
  5870 ;;		wreg, status,2, cstack
  5871 ;; Tracked objects:
  5872 ;;		On entry : 0/0
  5873 ;;		On exit  : 0/0
  5874 ;;		Unchanged: 0/0
  5875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5876 ;;      Params:         0       0       0       0       0       0       0
  5877 ;;      Locals:         0       0       0       0       0       0       0
  5878 ;;      Temps:          1       0       0       0       0       0       0
  5879 ;;      Totals:         1       0       0       0       0       0       0
  5880 ;;Total ram usage:        1 bytes
  5881 ;; Hardware stack levels used:    1
  5882 ;; Hardware stack levels required when called:    1
  5883 ;; This function calls:
  5884 ;;		_R_I
  5885 ;; This function is called by:
  5886 ;;		_main
  5887 ;; This function uses a non-reentrant model
  5888 ;;
  5889                           
  5890                           	psect	text27
  5891  00185E                     __ptext27:
  5892                           	opt callstack 0
  5893  00185E                     _init_LCD:
  5894                           	opt callstack 0
  5895  00185E  FFFF               	dw	65535	; assembler added errata NOP
  5896                           
  5897                           ;main.c: 126: _delay((unsigned long)((20)*(4000000/4000.0)));
  5898                           
  5899                           ;incstack = 0
  5900  001860  0E14               	movlw	20
  5901  001862  6E02               	movwf	??_init_LCD& (0+255),c
  5902  001864  0E7D               	movlw	125
  5903  001866                     u4487:
  5904  001866  FFFF               	dw	65535	; errata NOP
  5905  001868  2EE8               	decfsz	wreg,f,c
  5906  00186A  D7FD               	bra	u4487
  5907  00186C  2E02               	decfsz	??_init_LCD& (0+255),f,c
  5908  00186E  D7FB               	bra	u4487
  5909  001870  D000               	nop2	
  5910                           
  5911                           ;main.c: 128: R_I(0X30);
  5912  001872  0E30               	movlw	48
  5913  001874  EC3C  F00B         	call	_R_I
  5914                           
  5915                           ;main.c: 129: _delay((unsigned long)((5)*(4000000/4000.0)));
  5916  001878  0E05               	movlw	5
  5917  00187A  6E02               	movwf	??_init_LCD& (0+255),c
  5918  00187C  0EDF               	movlw	223
  5919  00187E                     u4497:
  5920  00187E  FFFF               	dw	65535	; errata NOP
  5921  001880  2EE8               	decfsz	wreg,f,c
  5922  001882  D7FD               	bra	u4497
  5923  001884  2E02               	decfsz	??_init_LCD& (0+255),f,c
  5924  001886  D7FB               	bra	u4497
  5925                           
  5926                           ;main.c: 130: R_I(0X30);
  5927  001888  0E30               	movlw	48
  5928  00188A  EC3C  F00B         	call	_R_I
  5929                           
  5930                           ;main.c: 131: R_I(0X3C);
  5931  00188E  0E3C               	movlw	60
  5932  001890  EC3C  F00B         	call	_R_I
  5933                           
  5934                           ;main.c: 132: R_I(0X0C);
  5935  001894  0E0C               	movlw	12
  5936  001896  EC3C  F00B         	call	_R_I
  5937                           
  5938                           ;main.c: 133: R_I(0X01);
  5939  00189A  0E01               	movlw	1
  5940  00189C  EC3C  F00B         	call	_R_I
  5941                           
  5942                           ;main.c: 134: _delay((unsigned long)((20)*(4000000/4000.0)));
  5943  0018A0  0E14               	movlw	20
  5944  0018A2  6E02               	movwf	??_init_LCD& (0+255),c
  5945  0018A4  0E7D               	movlw	125
  5946  0018A6                     u4507:
  5947  0018A6  FFFF               	dw	65535	; errata NOP
  5948  0018A8  2EE8               	decfsz	wreg,f,c
  5949  0018AA  D7FD               	bra	u4507
  5950  0018AC  2E02               	decfsz	??_init_LCD& (0+255),f,c
  5951  0018AE  D7FB               	bra	u4507
  5952  0018B0  D000               	nop2	
  5953  0018B2  0012               	return		;funcret
  5954  0018B4  FFFF               	dw	65535	; errata NOP
  5955  0018B6                     __end_of_init_LCD:
  5956                           	opt callstack 0
  5957                           
  5958 ;; *************** function _R_I *****************
  5959 ;; Defined at:
  5960 ;;		line 137 in file "main.c"
  5961 ;; Parameters:    Size  Location     Type
  5962 ;;  dato            1    wreg     unsigned char 
  5963 ;; Auto vars:     Size  Location     Type
  5964 ;;  dato            1    0[COMRAM] unsigned char 
  5965 ;; Return value:  Size  Location     Type
  5966 ;;                  1    wreg      void 
  5967 ;; Registers used:
  5968 ;;		wreg, status,2, cstack
  5969 ;; Tracked objects:
  5970 ;;		On entry : 0/0
  5971 ;;		On exit  : 0/0
  5972 ;;		Unchanged: 0/0
  5973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5974 ;;      Params:         0       0       0       0       0       0       0
  5975 ;;      Locals:         1       0       0       0       0       0       0
  5976 ;;      Temps:          0       0       0       0       0       0       0
  5977 ;;      Totals:         1       0       0       0       0       0       0
  5978 ;;Total ram usage:        1 bytes
  5979 ;; Hardware stack levels used:    1
  5980 ;; This function calls:
  5981 ;;		Nothing
  5982 ;; This function is called by:
  5983 ;;		_main
  5984 ;;		_init_LCD
  5985 ;; This function uses a non-reentrant model
  5986 ;;
  5987                           
  5988                           	psect	text28
  5989  001678                     __ptext28:
  5990                           	opt callstack 0
  5991  001678                     _R_I:
  5992                           	opt callstack 0
  5993  001678  FFFF               	dw	65535	; assembler added errata NOP
  5994                           
  5995                           ;incstack = 0
  5996                           ;R_I@dato stored from wreg
  5997  00167A  6E01               	movwf	R_I@dato,c
  5998                           
  5999                           ;main.c: 138: LC3 = 0;
  6000  00167C  968B               	bcf	3979,3,c	;volatile
  6001                           
  6002                           ;main.c: 139: LC4 = 0;
  6003  00167E  988B               	bcf	3979,4,c	;volatile
  6004                           
  6005                           ;main.c: 140: LATD = dato;
  6006  001680  C001  FF8C         	movff	R_I@dato,3980	;volatile
  6007                           
  6008                           ;main.c: 141: LC3 = 1;
  6009  001684  868B               	bsf	3979,3,c	;volatile
  6010                           
  6011                           ;main.c: 142: _delay((unsigned long)((100)*(4000000/4000000.0)));
  6012  001686  0E19               	movlw	25
  6013  001688                     u4517:
  6014  001688  FFFF               	dw	65535	; errata NOP
  6015  00168A  2EE8               	decfsz	wreg,f,c
  6016  00168C  D7FD               	bra	u4517
  6017                           
  6018                           ;main.c: 143: LC3 = 0;
  6019  00168E  968B               	bcf	3979,3,c	;volatile
  6020  001690  0012               	return		;funcret
  6021  001692  FFFF               	dw	65535	; errata NOP
  6022  001694                     __end_of_R_I:
  6023                           	opt callstack 0
  6024                           
  6025 ;; *************** function _get_voltage *****************
  6026 ;; Defined at:
  6027 ;;		line 161 in file "main.c"
  6028 ;; Parameters:    Size  Location     Type
  6029 ;;  ac_in           2   64[COMRAM] unsigned int 
  6030 ;; Auto vars:     Size  Location     Type
  6031 ;;		None
  6032 ;; Return value:  Size  Location     Type
  6033 ;;                  4   64[COMRAM] float 
  6034 ;; Registers used:
  6035 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6036 ;; Tracked objects:
  6037 ;;		On entry : 0/0
  6038 ;;		On exit  : 0/0
  6039 ;;		Unchanged: 0/0
  6040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6041 ;;      Params:         4       0       0       0       0       0       0
  6042 ;;      Locals:         0       0       0       0       0       0       0
  6043 ;;      Temps:          0       0       0       0       0       0       0
  6044 ;;      Totals:         4       0       0       0       0       0       0
  6045 ;;Total ram usage:        4 bytes
  6046 ;; Hardware stack levels used:    1
  6047 ;; Hardware stack levels required when called:    1
  6048 ;; This function calls:
  6049 ;;		___fldiv
  6050 ;;		___flmul
  6051 ;;		___xxtofl
  6052 ;; This function is called by:
  6053 ;;		_main
  6054 ;; This function uses a non-reentrant model
  6055 ;;
  6056                           
  6057                           	psect	text29
  6058  00197A                     __ptext29:
  6059                           	opt callstack 0
  6060  00197A                     _get_voltage:
  6061                           	opt callstack 0
  6062  00197A  FFFF               	dw	65535	; assembler added errata NOP
  6063                           
  6064                           ;main.c: 162: return (ac_in * 5.0 / 1023);
  6065                           
  6066                           ;incstack = 0
  6067  00197C  0E00               	movlw	0
  6068  00197E  6E13               	movwf	___flmul@a,c
  6069  001980  0E00               	movlw	0
  6070  001982  6E14               	movwf	___flmul@a+1,c
  6071  001984  0EA0               	movlw	160
  6072  001986  6E15               	movwf	___flmul@a+2,c
  6073  001988  0E40               	movlw	64
  6074  00198A  6E16               	movwf	___flmul@a+3,c
  6075  00198C  C041  F001         	movff	get_voltage@ac_in,___xxtofl@val
  6076  001990  C042  F002         	movff	get_voltage@ac_in+1,___xxtofl@val+1
  6077  001994  6A03               	clrf	___xxtofl@val+2,c
  6078  001996  6A04               	clrf	___xxtofl@val+3,c
  6079  001998  0E00               	movlw	0
  6080  00199A  ECAE  F010         	call	___xxtofl
  6081  00199E  C001  F00F         	movff	?___xxtofl,___flmul@b
  6082  0019A2  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  6083  0019A6  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  6084  0019AA  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  6085  0019AE  EC05  F017         	call	___flmul	;wreg free
  6086  0019B2  C00F  F028         	movff	?___flmul,___fldiv@b
  6087  0019B6  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  6088  0019BA  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  6089  0019BE  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  6090  0019C2  0E00               	movlw	0
  6091  0019C4  6E2C               	movwf	___fldiv@a,c
  6092  0019C6  0EC0               	movlw	192
  6093  0019C8  6E2D               	movwf	___fldiv@a+1,c
  6094  0019CA  0E7F               	movlw	127
  6095  0019CC  6E2E               	movwf	___fldiv@a+2,c
  6096  0019CE  0E44               	movlw	68
  6097  0019D0  6E2F               	movwf	___fldiv@a+3,c
  6098  0019D2  EC03  F014         	call	___fldiv	;wreg free
  6099  0019D6  C028  F041         	movff	?___fldiv,?_get_voltage
  6100  0019DA  C029  F042         	movff	?___fldiv+1,?_get_voltage+1
  6101  0019DE  C02A  F043         	movff	?___fldiv+2,?_get_voltage+2
  6102  0019E2  C02B  F044         	movff	?___fldiv+3,?_get_voltage+3
  6103  0019E6  0012               	return		;funcret
  6104  0019E8  FFFF               	dw	65535	; errata NOP
  6105  0019EA                     __end_of_get_voltage:
  6106                           	opt callstack 0
  6107                           
  6108 ;; *************** function _get_temp *****************
  6109 ;; Defined at:
  6110 ;;		line 164 in file "main.c"
  6111 ;; Parameters:    Size  Location     Type
  6112 ;;  ac_in           2   68[COMRAM] unsigned int 
  6113 ;; Auto vars:     Size  Location     Type
  6114 ;;  r               4   72[COMRAM] float 
  6115 ;; Return value:  Size  Location     Type
  6116 ;;                  4   68[COMRAM] float 
  6117 ;; Registers used:
  6118 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6119 ;; Tracked objects:
  6120 ;;		On entry : 0/0
  6121 ;;		On exit  : 0/0
  6122 ;;		Unchanged: 0/0
  6123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6124 ;;      Params:         4       0       0       0       0       0       0
  6125 ;;      Locals:         4       0       0       0       0       0       0
  6126 ;;      Temps:          0       0       0       0       0       0       0
  6127 ;;      Totals:         8       0       0       0       0       0       0
  6128 ;;Total ram usage:        8 bytes
  6129 ;; Hardware stack levels used:    1
  6130 ;; Hardware stack levels required when called:    1
  6131 ;; This function calls:
  6132 ;;		___fladd
  6133 ;;		___fldiv
  6134 ;;		___flmul
  6135 ;;		___xxtofl
  6136 ;; This function is called by:
  6137 ;;		_main
  6138 ;; This function uses a non-reentrant model
  6139 ;;
  6140                           
  6141                           	psect	text30
  6142  001E54                     __ptext30:
  6143                           	opt callstack 0
  6144  001E54                     _get_temp:
  6145                           	opt callstack 0
  6146  001E54  FFFF               	dw	65535	; assembler added errata NOP
  6147                           
  6148                           ;main.c: 165: float r = ac_in * 500.0 / 1023;
  6149                           
  6150                           ;incstack = 0
  6151  001E56  0E00               	movlw	0
  6152  001E58  6E13               	movwf	___flmul@a,c
  6153  001E5A  0E00               	movlw	0
  6154  001E5C  6E14               	movwf	___flmul@a+1,c
  6155  001E5E  0EFA               	movlw	250
  6156  001E60  6E15               	movwf	___flmul@a+2,c
  6157  001E62  0E43               	movlw	67
  6158  001E64  6E16               	movwf	___flmul@a+3,c
  6159  001E66  C045  F001         	movff	get_temp@ac_in,___xxtofl@val
  6160  001E6A  C046  F002         	movff	get_temp@ac_in+1,___xxtofl@val+1
  6161  001E6E  6A03               	clrf	___xxtofl@val+2,c
  6162  001E70  6A04               	clrf	___xxtofl@val+3,c
  6163  001E72  0E00               	movlw	0
  6164  001E74  ECAE  F010         	call	___xxtofl
  6165  001E78  C001  F00F         	movff	?___xxtofl,___flmul@b
  6166  001E7C  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  6167  001E80  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  6168  001E84  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  6169  001E88  EC05  F017         	call	___flmul	;wreg free
  6170  001E8C  C00F  F028         	movff	?___flmul,___fldiv@b
  6171  001E90  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  6172  001E94  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  6173  001E98  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  6174  001E9C  0E00               	movlw	0
  6175  001E9E  6E2C               	movwf	___fldiv@a,c
  6176  001EA0  0EC0               	movlw	192
  6177  001EA2  6E2D               	movwf	___fldiv@a+1,c
  6178  001EA4  0E7F               	movlw	127
  6179  001EA6  6E2E               	movwf	___fldiv@a+2,c
  6180  001EA8  0E44               	movlw	68
  6181  001EAA  6E2F               	movwf	___fldiv@a+3,c
  6182  001EAC  EC03  F014         	call	___fldiv	;wreg free
  6183  001EB0  C028  F049         	movff	?___fldiv,get_temp@r
  6184  001EB4  C029  F04A         	movff	?___fldiv+1,get_temp@r+1
  6185  001EB8  C02A  F04B         	movff	?___fldiv+2,get_temp@r+2
  6186  001EBC  C02B  F04C         	movff	?___fldiv+3,get_temp@r+3
  6187                           
  6188                           ;main.c: 166: if (ac_in <= 10) {
  6189  001EC0  5046               	movf	get_temp@ac_in+1,w,c
  6190  001EC2  E11E               	bnz	l117
  6191  001EC4  0E0B               	movlw	11
  6192  001EC6  5C45               	subwf	get_temp@ac_in,w,c
  6193  001EC8  B0D8               	btfsc	status,0,c
  6194  001ECA  D01A               	goto	l117
  6195                           
  6196                           ;main.c: 167: r += 0.3;
  6197  001ECC  C049  F035         	movff	get_temp@r,___fladd@b
  6198  001ED0  C04A  F036         	movff	get_temp@r+1,___fladd@b+1
  6199  001ED4  C04B  F037         	movff	get_temp@r+2,___fladd@b+2
  6200  001ED8  C04C  F038         	movff	get_temp@r+3,___fladd@b+3
  6201  001EDC  0E9A               	movlw	154
  6202  001EDE  6E39               	movwf	___fladd@a,c
  6203  001EE0  0E99               	movlw	153
  6204  001EE2  6E3A               	movwf	___fladd@a+1,c
  6205  001EE4  0E99               	movlw	153
  6206  001EE6  6E3B               	movwf	___fladd@a+2,c
  6207  001EE8  0E3E               	movlw	62
  6208  001EEA  6E3C               	movwf	___fladd@a+3,c
  6209  001EEC  EC63  F015         	call	___fladd	;wreg free
  6210  001EF0  C035  F049         	movff	?___fladd,get_temp@r
  6211  001EF4  C036  F04A         	movff	?___fladd+1,get_temp@r+1
  6212  001EF8  C037  F04B         	movff	?___fladd+2,get_temp@r+2
  6213  001EFC  C038  F04C         	movff	?___fladd+3,get_temp@r+3
  6214  001F00                     l117:
  6215  001F00  FFFF               	dw	65535	; assembler added errata NOP
  6216                           
  6217                           ;main.c: 168: };main.c: 169: return (r - 0.0099999);
  6218  001F02  C049  F035         	movff	get_temp@r,___fladd@b
  6219  001F06  C04A  F036         	movff	get_temp@r+1,___fladd@b+1
  6220  001F0A  C04B  F037         	movff	get_temp@r+2,___fladd@b+2
  6221  001F0E  C04C  F038         	movff	get_temp@r+3,___fladd@b+3
  6222  001F12  0E9F               	movlw	159
  6223  001F14  6E39               	movwf	___fladd@a,c
  6224  001F16  0ED6               	movlw	214
  6225  001F18  6E3A               	movwf	___fladd@a+1,c
  6226  001F1A  0E23               	movlw	35
  6227  001F1C  6E3B               	movwf	___fladd@a+2,c
  6228  001F1E  0EBC               	movlw	188
  6229  001F20  6E3C               	movwf	___fladd@a+3,c
  6230  001F22  EC63  F015         	call	___fladd	;wreg free
  6231  001F26  C035  F045         	movff	?___fladd,?_get_temp
  6232  001F2A  C036  F046         	movff	?___fladd+1,?_get_temp+1
  6233  001F2E  C037  F047         	movff	?___fladd+2,?_get_temp+2
  6234  001F32  C038  F048         	movff	?___fladd+3,?_get_temp+3
  6235  001F36  0012               	return		;funcret
  6236  001F38  FFFF               	dw	65535	; errata NOP
  6237  001F3A                     __end_of_get_temp:
  6238                           	opt callstack 0
  6239                           
  6240 ;; *************** function ___xxtofl *****************
  6241 ;; Defined at:
  6242 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  6243 ;; Parameters:    Size  Location     Type
  6244 ;;  sign            1    wreg     unsigned char 
  6245 ;;  val             4    0[COMRAM] long 
  6246 ;; Auto vars:     Size  Location     Type
  6247 ;;  sign            1    8[COMRAM] unsigned char 
  6248 ;;  arg             4   10[COMRAM] unsigned long 
  6249 ;;  exp             1    9[COMRAM] unsigned char 
  6250 ;; Return value:  Size  Location     Type
  6251 ;;                  4    0[COMRAM] unsigned char 
  6252 ;; Registers used:
  6253 ;;		wreg, status,2, status,0
  6254 ;; Tracked objects:
  6255 ;;		On entry : 0/0
  6256 ;;		On exit  : 0/0
  6257 ;;		Unchanged: 0/0
  6258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6259 ;;      Params:         4       0       0       0       0       0       0
  6260 ;;      Locals:         6       0       0       0       0       0       0
  6261 ;;      Temps:          4       0       0       0       0       0       0
  6262 ;;      Totals:        14       0       0       0       0       0       0
  6263 ;;Total ram usage:       14 bytes
  6264 ;; Hardware stack levels used:    1
  6265 ;; This function calls:
  6266 ;;		Nothing
  6267 ;; This function is called by:
  6268 ;;		_get_voltage
  6269 ;;		_get_temp
  6270 ;;		_sprintf
  6271 ;; This function uses a non-reentrant model
  6272 ;;
  6273                           
  6274                           	psect	text31
  6275  00215C                     __ptext31:
  6276                           	opt callstack 0
  6277  00215C                     ___xxtofl:
  6278                           	opt callstack 0
  6279  00215C  FFFF               	dw	65535	; assembler added errata NOP
  6280                           
  6281                           ;incstack = 0
  6282                           ;___xxtofl@sign stored from wreg
  6283  00215E  6E09               	movwf	___xxtofl@sign,c
  6284  002160  5009               	movf	___xxtofl@sign,w,c
  6285  002162  A4D8               	btfss	status,2,c
  6286  002164  AE04               	btfss	___xxtofl@val+3,7,c
  6287  002166  D01A               	goto	l938
  6288  002168  C001  F005         	movff	___xxtofl@val,??___xxtofl
  6289  00216C  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  6290  002170  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  6291  002174  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  6292  002178  1E05               	comf	??___xxtofl,f,c
  6293  00217A  1E06               	comf	??___xxtofl+1,f,c
  6294  00217C  1E07               	comf	??___xxtofl+2,f,c
  6295  00217E  1E08               	comf	??___xxtofl+3,f,c
  6296  002180  2A05               	incf	??___xxtofl,f,c
  6297  002182  0E00               	movlw	0
  6298  002184  2206               	addwfc	??___xxtofl+1,f,c
  6299  002186  2207               	addwfc	??___xxtofl+2,f,c
  6300  002188  2208               	addwfc	??___xxtofl+3,f,c
  6301  00218A  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  6302  00218E  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  6303  002192  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  6304  002196  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  6305  00219A  D009               	goto	l3445
  6306  00219C                     l938:
  6307  00219C  FFFF               	dw	65535	; assembler added errata NOP
  6308  00219E  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  6309  0021A2  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6310  0021A6  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6311  0021AA  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6312  0021AE                     l3445:
  6313  0021AE  FFFF               	dw	65535	; assembler added errata NOP
  6314  0021B0  5001               	movf	___xxtofl@val,w,c
  6315  0021B2  1002               	iorwf	___xxtofl@val+1,w,c
  6316  0021B4  1003               	iorwf	___xxtofl@val+2,w,c
  6317  0021B6  1004               	iorwf	___xxtofl@val+3,w,c
  6318  0021B8  A4D8               	btfss	status,2,c
  6319  0021BA  D009               	goto	l3451
  6320  0021BC  0E00               	movlw	0
  6321  0021BE  6E01               	movwf	?___xxtofl,c
  6322  0021C0  0E00               	movlw	0
  6323  0021C2  6E02               	movwf	?___xxtofl+1,c
  6324  0021C4  0E00               	movlw	0
  6325  0021C6  6E03               	movwf	?___xxtofl+2,c
  6326  0021C8  0E00               	movlw	0
  6327  0021CA  6E04               	movwf	?___xxtofl+3,c
  6328  0021CC  D072               	goto	l941
  6329  0021CE                     l3451:
  6330  0021CE  FFFF               	dw	65535	; assembler added errata NOP
  6331  0021D0  0E96               	movlw	150
  6332  0021D2  6E0A               	movwf	___xxtofl@exp,c
  6333  0021D4  D007               	goto	l3455
  6334  0021D6                     l3453:
  6335  0021D6  FFFF               	dw	65535	; assembler added errata NOP
  6336  0021D8  2A0A               	incf	___xxtofl@exp,f,c
  6337  0021DA  90D8               	bcf	status,0,c
  6338  0021DC  320E               	rrcf	___xxtofl@arg+3,f,c
  6339  0021DE  320D               	rrcf	___xxtofl@arg+2,f,c
  6340  0021E0  320C               	rrcf	___xxtofl@arg+1,f,c
  6341  0021E2  320B               	rrcf	___xxtofl@arg,f,c
  6342  0021E4                     l3455:
  6343  0021E4  FFFF               	dw	65535	; assembler added errata NOP
  6344  0021E6  0E00               	movlw	0
  6345  0021E8  140B               	andwf	___xxtofl@arg,w,c
  6346  0021EA  6E05               	movwf	??___xxtofl& (0+255),c
  6347  0021EC  0E00               	movlw	0
  6348  0021EE  140C               	andwf	___xxtofl@arg+1,w,c
  6349  0021F0  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  6350  0021F2  0E00               	movlw	0
  6351  0021F4  140D               	andwf	___xxtofl@arg+2,w,c
  6352  0021F6  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  6353  0021F8  0EFE               	movlw	254
  6354  0021FA  140E               	andwf	___xxtofl@arg+3,w,c
  6355  0021FC  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  6356  0021FE  5005               	movf	??___xxtofl,w,c
  6357  002200  1006               	iorwf	??___xxtofl+1,w,c
  6358  002202  1007               	iorwf	??___xxtofl+2,w,c
  6359  002204  1008               	iorwf	??___xxtofl+3,w,c
  6360  002206  B4D8               	btfsc	status,2,c
  6361  002208  D00E               	goto	l945
  6362  00220A  D7E5               	goto	l3453
  6363  00220C                     l3457:
  6364  00220C  FFFF               	dw	65535	; assembler added errata NOP
  6365  00220E  2A0A               	incf	___xxtofl@exp,f,c
  6366  002210  0E01               	movlw	1
  6367  002212  260B               	addwf	___xxtofl@arg,f,c
  6368  002214  0E00               	movlw	0
  6369  002216  220C               	addwfc	___xxtofl@arg+1,f,c
  6370  002218  220D               	addwfc	___xxtofl@arg+2,f,c
  6371  00221A  220E               	addwfc	___xxtofl@arg+3,f,c
  6372  00221C  90D8               	bcf	status,0,c
  6373  00221E  320E               	rrcf	___xxtofl@arg+3,f,c
  6374  002220  320D               	rrcf	___xxtofl@arg+2,f,c
  6375  002222  320C               	rrcf	___xxtofl@arg+1,f,c
  6376  002224  320B               	rrcf	___xxtofl@arg,f,c
  6377  002226                     l945:
  6378  002226  FFFF               	dw	65535	; assembler added errata NOP
  6379  002228  0E00               	movlw	0
  6380  00222A  140B               	andwf	___xxtofl@arg,w,c
  6381  00222C  6E05               	movwf	??___xxtofl& (0+255),c
  6382  00222E  0E00               	movlw	0
  6383  002230  140C               	andwf	___xxtofl@arg+1,w,c
  6384  002232  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  6385  002234  0E00               	movlw	0
  6386  002236  140D               	andwf	___xxtofl@arg+2,w,c
  6387  002238  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  6388  00223A  0EFF               	movlw	255
  6389  00223C  140E               	andwf	___xxtofl@arg+3,w,c
  6390  00223E  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  6391  002240  5005               	movf	??___xxtofl,w,c
  6392  002242  1006               	iorwf	??___xxtofl+1,w,c
  6393  002244  1007               	iorwf	??___xxtofl+2,w,c
  6394  002246  1008               	iorwf	??___xxtofl+3,w,c
  6395  002248  B4D8               	btfsc	status,2,c
  6396  00224A  D008               	goto	l3465
  6397  00224C  D7DF               	goto	l3457
  6398  00224E                     l3463:
  6399  00224E  FFFF               	dw	65535	; assembler added errata NOP
  6400  002250  060A               	decf	___xxtofl@exp,f,c
  6401  002252  90D8               	bcf	status,0,c
  6402  002254  360B               	rlcf	___xxtofl@arg,f,c
  6403  002256  360C               	rlcf	___xxtofl@arg+1,f,c
  6404  002258  360D               	rlcf	___xxtofl@arg+2,f,c
  6405  00225A  360E               	rlcf	___xxtofl@arg+3,f,c
  6406  00225C                     l3465:
  6407  00225C  FFFF               	dw	65535	; assembler added errata NOP
  6408  00225E  BE0D               	btfsc	___xxtofl@arg+2,7,c
  6409  002260  D003               	goto	u3760
  6410  002262  0E02               	movlw	2
  6411  002264  600A               	cpfslt	___xxtofl@exp,c
  6412  002266  D7F3               	goto	l3463
  6413  002268                     u3760:
  6414  002268  FFFF               	dw	65535	; assembler added errata NOP
  6415  00226A  A00A               	btfss	___xxtofl@exp,0,c
  6416  00226C  9E0D               	bcf	___xxtofl@arg+2,7,c
  6417  00226E  90D8               	bcf	status,0,c
  6418  002270  320A               	rrcf	___xxtofl@exp,f,c
  6419  002272  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  6420  002276  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  6421  002278  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  6422  00227A  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  6423  00227C  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  6424  002280  6A07               	clrf	??___xxtofl+2,c
  6425  002282  6A06               	clrf	??___xxtofl+1,c
  6426  002284  6A05               	clrf	??___xxtofl,c
  6427  002286  5005               	movf	??___xxtofl,w,c
  6428  002288  120B               	iorwf	___xxtofl@arg,f,c
  6429  00228A  5006               	movf	??___xxtofl+1,w,c
  6430  00228C  120C               	iorwf	___xxtofl@arg+1,f,c
  6431  00228E  5007               	movf	??___xxtofl+2,w,c
  6432  002290  120D               	iorwf	___xxtofl@arg+2,f,c
  6433  002292  5008               	movf	??___xxtofl+3,w,c
  6434  002294  120E               	iorwf	___xxtofl@arg+3,f,c
  6435  002296  5009               	movf	___xxtofl@sign,w,c
  6436  002298  A4D8               	btfss	status,2,c
  6437  00229A  AE04               	btfss	___xxtofl@val+3,7,c
  6438  00229C  D001               	goto	l3481
  6439  00229E  8E0E               	bsf	___xxtofl@arg+3,7,c
  6440  0022A0                     l3481:
  6441  0022A0  FFFF               	dw	65535	; assembler added errata NOP
  6442  0022A2  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  6443  0022A6  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  6444  0022AA  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  6445  0022AE  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  6446  0022B2                     l941:
  6447  0022B2  FFFF               	dw	65535	; assembler added errata NOP
  6448  0022B4  0012               	return		;funcret
  6449  0022B6  FFFF               	dw	65535	; errata NOP
  6450  0022B8                     __end_of___xxtofl:
  6451                           	opt callstack 0
  6452                           
  6453 ;; *************** function ___flmul *****************
  6454 ;; Defined at:
  6455 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  6456 ;; Parameters:    Size  Location     Type
  6457 ;;  b               4   14[COMRAM] unsigned char 
  6458 ;;  a               4   18[COMRAM] unsigned char 
  6459 ;; Auto vars:     Size  Location     Type
  6460 ;;  prod            4   33[COMRAM] struct .
  6461 ;;  grs             4   27[COMRAM] unsigned long 
  6462 ;;  temp            2   37[COMRAM] struct .
  6463 ;;  bexp            1   32[COMRAM] unsigned char 
  6464 ;;  aexp            1   31[COMRAM] unsigned char 
  6465 ;;  sign            1   26[COMRAM] unsigned char 
  6466 ;; Return value:  Size  Location     Type
  6467 ;;                  4   14[COMRAM] unsigned char 
  6468 ;; Registers used:
  6469 ;;		wreg, status,2, status,0, prodl, prodh
  6470 ;; Tracked objects:
  6471 ;;		On entry : 0/0
  6472 ;;		On exit  : 0/0
  6473 ;;		Unchanged: 0/0
  6474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6475 ;;      Params:         8       0       0       0       0       0       0
  6476 ;;      Locals:        13       0       0       0       0       0       0
  6477 ;;      Temps:          4       0       0       0       0       0       0
  6478 ;;      Totals:        25       0       0       0       0       0       0
  6479 ;;Total ram usage:       25 bytes
  6480 ;; Hardware stack levels used:    1
  6481 ;; This function calls:
  6482 ;;		Nothing
  6483 ;; This function is called by:
  6484 ;;		_get_voltage
  6485 ;;		_get_temp
  6486 ;;		_fround
  6487 ;;		_scale
  6488 ;;		_sprintf
  6489 ;; This function uses a non-reentrant model
  6490 ;;
  6491                           
  6492                           	psect	text32
  6493  002E0A                     __ptext32:
  6494                           	opt callstack 0
  6495  002E0A                     ___flmul:
  6496                           	opt callstack 0
  6497  002E0A  FFFF               	dw	65535	; assembler added errata NOP
  6498                           
  6499                           ;incstack = 0
  6500  002E0C  5012               	movf	___flmul@b+3,w,c
  6501  002E0E  0B80               	andlw	128
  6502  002E10  6E1B               	movwf	___flmul@sign,c
  6503  002E12  5012               	movf	___flmul@b+3,w,c
  6504  002E14  2412               	addwf	___flmul@b+3,w,c
  6505  002E16  6E21               	movwf	___flmul@bexp,c
  6506  002E18  BE11               	btfsc	___flmul@b+2,7,c
  6507  002E1A  8021               	bsf	___flmul@bexp,0,c
  6508  002E1C  5021               	movf	___flmul@bexp,w,c
  6509  002E1E  B4D8               	btfsc	status,2,c
  6510  002E20  D00E               	goto	l2713
  6511  002E22  2821               	incf	___flmul@bexp,w,c
  6512  002E24  A4D8               	btfss	status,2,c
  6513  002E26  D008               	goto	l2711
  6514  002E28  0E00               	movlw	0
  6515  002E2A  6E0F               	movwf	___flmul@b,c
  6516  002E2C  0E00               	movlw	0
  6517  002E2E  6E10               	movwf	___flmul@b+1,c
  6518  002E30  0E00               	movlw	0
  6519  002E32  6E11               	movwf	___flmul@b+2,c
  6520  002E34  0E00               	movlw	0
  6521  002E36  6E12               	movwf	___flmul@b+3,c
  6522  002E38                     l2711:
  6523  002E38  FFFF               	dw	65535	; assembler added errata NOP
  6524  002E3A  8E11               	bsf	___flmul@b+2,7,c
  6525  002E3C  D009               	goto	l2715
  6526  002E3E                     l2713:
  6527  002E3E  FFFF               	dw	65535	; assembler added errata NOP
  6528  002E40  0E00               	movlw	0
  6529  002E42  6E0F               	movwf	___flmul@b,c
  6530  002E44  0E00               	movlw	0
  6531  002E46  6E10               	movwf	___flmul@b+1,c
  6532  002E48  0E00               	movlw	0
  6533  002E4A  6E11               	movwf	___flmul@b+2,c
  6534  002E4C  0E00               	movlw	0
  6535  002E4E  6E12               	movwf	___flmul@b+3,c
  6536  002E50                     l2715:
  6537  002E50  FFFF               	dw	65535	; assembler added errata NOP
  6538  002E52  5016               	movf	___flmul@a+3,w,c
  6539  002E54  0B80               	andlw	128
  6540  002E56  1A1B               	xorwf	___flmul@sign,f,c
  6541  002E58  5016               	movf	___flmul@a+3,w,c
  6542  002E5A  2416               	addwf	___flmul@a+3,w,c
  6543  002E5C  6E20               	movwf	___flmul@aexp,c
  6544  002E5E  BE15               	btfsc	___flmul@a+2,7,c
  6545  002E60  8020               	bsf	___flmul@aexp,0,c
  6546  002E62  5020               	movf	___flmul@aexp,w,c
  6547  002E64  B4D8               	btfsc	status,2,c
  6548  002E66  D00E               	goto	l2731
  6549  002E68  2820               	incf	___flmul@aexp,w,c
  6550  002E6A  A4D8               	btfss	status,2,c
  6551  002E6C  D008               	goto	l2729
  6552  002E6E  0E00               	movlw	0
  6553  002E70  6E13               	movwf	___flmul@a,c
  6554  002E72  0E00               	movlw	0
  6555  002E74  6E14               	movwf	___flmul@a+1,c
  6556  002E76  0E00               	movlw	0
  6557  002E78  6E15               	movwf	___flmul@a+2,c
  6558  002E7A  0E00               	movlw	0
  6559  002E7C  6E16               	movwf	___flmul@a+3,c
  6560  002E7E                     l2729:
  6561  002E7E  FFFF               	dw	65535	; assembler added errata NOP
  6562  002E80  8E15               	bsf	___flmul@a+2,7,c
  6563  002E82  D009               	goto	l897
  6564  002E84                     l2731:
  6565  002E84  FFFF               	dw	65535	; assembler added errata NOP
  6566  002E86  0E00               	movlw	0
  6567  002E88  6E13               	movwf	___flmul@a,c
  6568  002E8A  0E00               	movlw	0
  6569  002E8C  6E14               	movwf	___flmul@a+1,c
  6570  002E8E  0E00               	movlw	0
  6571  002E90  6E15               	movwf	___flmul@a+2,c
  6572  002E92  0E00               	movlw	0
  6573  002E94  6E16               	movwf	___flmul@a+3,c
  6574  002E96                     l897:
  6575  002E96  FFFF               	dw	65535	; assembler added errata NOP
  6576  002E98  5020               	movf	___flmul@aexp,w,c
  6577  002E9A  B4D8               	btfsc	status,2,c
  6578  002E9C  D003               	goto	u2680
  6579  002E9E  5021               	movf	___flmul@bexp,w,c
  6580  002EA0  A4D8               	btfss	status,2,c
  6581  002EA2  D00A               	goto	l2739
  6582  002EA4                     u2680:
  6583  002EA4  FFFF               	dw	65535	; assembler added errata NOP
  6584  002EA6  0E00               	movlw	0
  6585  002EA8  6E0F               	movwf	?___flmul,c
  6586  002EAA  0E00               	movlw	0
  6587  002EAC  6E10               	movwf	?___flmul+1,c
  6588  002EAE  0E00               	movlw	0
  6589  002EB0  6E11               	movwf	?___flmul+2,c
  6590  002EB2  0E00               	movlw	0
  6591  002EB4  6E12               	movwf	?___flmul+3,c
  6592  002EB6  D167               	goto	l901
  6593  002EB8                     l2739:
  6594  002EB8  FFFF               	dw	65535	; assembler added errata NOP
  6595  002EBA  5015               	movf	___flmul@a+2,w,c
  6596  002EBC  020F               	mulwf	___flmul@b,c
  6597  002EBE  CFF3 F026          	movff	prodl,___flmul@temp
  6598  002EC2  CFF4 F027          	movff	prodh,___flmul@temp+1
  6599  002EC6  5026               	movf	___flmul@temp,w,c
  6600  002EC8  6E1C               	movwf	___flmul@grs,c
  6601  002ECA  6A1D               	clrf	___flmul@grs+1,c
  6602  002ECC  6A1E               	clrf	___flmul@grs+2,c
  6603  002ECE  6A1F               	clrf	___flmul@grs+3,c
  6604  002ED0  5027               	movf	___flmul@temp+1,w,c
  6605  002ED2  6E22               	movwf	___flmul@prod,c
  6606  002ED4  6A23               	clrf	___flmul@prod+1,c
  6607  002ED6  6A24               	clrf	___flmul@prod+2,c
  6608  002ED8  6A25               	clrf	___flmul@prod+3,c
  6609  002EDA  5014               	movf	___flmul@a+1,w,c
  6610  002EDC  0210               	mulwf	___flmul@b+1,c
  6611  002EDE  CFF3 F026          	movff	prodl,___flmul@temp
  6612  002EE2  CFF4 F027          	movff	prodh,___flmul@temp+1
  6613  002EE6  5026               	movf	___flmul@temp,w,c
  6614  002EE8  261C               	addwf	___flmul@grs,f,c
  6615  002EEA  0E00               	movlw	0
  6616  002EEC  221D               	addwfc	___flmul@grs+1,f,c
  6617  002EEE  221E               	addwfc	___flmul@grs+2,f,c
  6618  002EF0  221F               	addwfc	___flmul@grs+3,f,c
  6619  002EF2  5027               	movf	___flmul@temp+1,w,c
  6620  002EF4  2622               	addwf	___flmul@prod,f,c
  6621  002EF6  0E00               	movlw	0
  6622  002EF8  2223               	addwfc	___flmul@prod+1,f,c
  6623  002EFA  2224               	addwfc	___flmul@prod+2,f,c
  6624  002EFC  2225               	addwfc	___flmul@prod+3,f,c
  6625  002EFE  5013               	movf	___flmul@a,w,c
  6626  002F00  0211               	mulwf	___flmul@b+2,c
  6627  002F02  CFF3 F026          	movff	prodl,___flmul@temp
  6628  002F06  CFF4 F027          	movff	prodh,___flmul@temp+1
  6629  002F0A  5026               	movf	___flmul@temp,w,c
  6630  002F0C  261C               	addwf	___flmul@grs,f,c
  6631  002F0E  0E00               	movlw	0
  6632  002F10  221D               	addwfc	___flmul@grs+1,f,c
  6633  002F12  221E               	addwfc	___flmul@grs+2,f,c
  6634  002F14  221F               	addwfc	___flmul@grs+3,f,c
  6635  002F16  5027               	movf	___flmul@temp+1,w,c
  6636  002F18  2622               	addwf	___flmul@prod,f,c
  6637  002F1A  0E00               	movlw	0
  6638  002F1C  2223               	addwfc	___flmul@prod+1,f,c
  6639  002F1E  2224               	addwfc	___flmul@prod+2,f,c
  6640  002F20  2225               	addwfc	___flmul@prod+3,f,c
  6641  002F22  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6642  002F26  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6643  002F2A  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6644  002F2E  6A1C               	clrf	___flmul@grs,c
  6645  002F30  5013               	movf	___flmul@a,w,c
  6646  002F32  0210               	mulwf	___flmul@b+1,c
  6647  002F34  CFF3 F026          	movff	prodl,___flmul@temp
  6648  002F38  CFF4 F027          	movff	prodh,___flmul@temp+1
  6649  002F3C  5026               	movf	___flmul@temp,w,c
  6650  002F3E  261C               	addwf	___flmul@grs,f,c
  6651  002F40  5027               	movf	___flmul@temp+1,w,c
  6652  002F42  221D               	addwfc	___flmul@grs+1,f,c
  6653  002F44  0E00               	movlw	0
  6654  002F46  221E               	addwfc	___flmul@grs+2,f,c
  6655  002F48  0E00               	movlw	0
  6656  002F4A  221F               	addwfc	___flmul@grs+3,f,c
  6657  002F4C  5014               	movf	___flmul@a+1,w,c
  6658  002F4E  020F               	mulwf	___flmul@b,c
  6659  002F50  CFF3 F026          	movff	prodl,___flmul@temp
  6660  002F54  CFF4 F027          	movff	prodh,___flmul@temp+1
  6661  002F58  5026               	movf	___flmul@temp,w,c
  6662  002F5A  261C               	addwf	___flmul@grs,f,c
  6663  002F5C  5027               	movf	___flmul@temp+1,w,c
  6664  002F5E  221D               	addwfc	___flmul@grs+1,f,c
  6665  002F60  0E00               	movlw	0
  6666  002F62  221E               	addwfc	___flmul@grs+2,f,c
  6667  002F64  0E00               	movlw	0
  6668  002F66  221F               	addwfc	___flmul@grs+3,f,c
  6669  002F68  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6670  002F6C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6671  002F70  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6672  002F74  6A1C               	clrf	___flmul@grs,c
  6673  002F76  5013               	movf	___flmul@a,w,c
  6674  002F78  020F               	mulwf	___flmul@b,c
  6675  002F7A  CFF3 F026          	movff	prodl,___flmul@temp
  6676  002F7E  CFF4 F027          	movff	prodh,___flmul@temp+1
  6677  002F82  5026               	movf	___flmul@temp,w,c
  6678  002F84  261C               	addwf	___flmul@grs,f,c
  6679  002F86  5027               	movf	___flmul@temp+1,w,c
  6680  002F88  221D               	addwfc	___flmul@grs+1,f,c
  6681  002F8A  0E00               	movlw	0
  6682  002F8C  221E               	addwfc	___flmul@grs+2,f,c
  6683  002F8E  0E00               	movlw	0
  6684  002F90  221F               	addwfc	___flmul@grs+3,f,c
  6685  002F92  5015               	movf	___flmul@a+2,w,c
  6686  002F94  0210               	mulwf	___flmul@b+1,c
  6687  002F96  CFF3 F026          	movff	prodl,___flmul@temp
  6688  002F9A  CFF4 F027          	movff	prodh,___flmul@temp+1
  6689  002F9E  5026               	movf	___flmul@temp,w,c
  6690  002FA0  2622               	addwf	___flmul@prod,f,c
  6691  002FA2  5027               	movf	___flmul@temp+1,w,c
  6692  002FA4  2223               	addwfc	___flmul@prod+1,f,c
  6693  002FA6  0E00               	movlw	0
  6694  002FA8  2224               	addwfc	___flmul@prod+2,f,c
  6695  002FAA  0E00               	movlw	0
  6696  002FAC  2225               	addwfc	___flmul@prod+3,f,c
  6697  002FAE  5014               	movf	___flmul@a+1,w,c
  6698  002FB0  0211               	mulwf	___flmul@b+2,c
  6699  002FB2  CFF3 F026          	movff	prodl,___flmul@temp
  6700  002FB6  CFF4 F027          	movff	prodh,___flmul@temp+1
  6701  002FBA  5026               	movf	___flmul@temp,w,c
  6702  002FBC  2622               	addwf	___flmul@prod,f,c
  6703  002FBE  5027               	movf	___flmul@temp+1,w,c
  6704  002FC0  2223               	addwfc	___flmul@prod+1,f,c
  6705  002FC2  0E00               	movlw	0
  6706  002FC4  2224               	addwfc	___flmul@prod+2,f,c
  6707  002FC6  0E00               	movlw	0
  6708  002FC8  2225               	addwfc	___flmul@prod+3,f,c
  6709  002FCA  5015               	movf	___flmul@a+2,w,c
  6710  002FCC  0211               	mulwf	___flmul@b+2,c
  6711  002FCE  CFF3 F026          	movff	prodl,___flmul@temp
  6712  002FD2  CFF4 F027          	movff	prodh,___flmul@temp+1
  6713  002FD6  5026               	movf	___flmul@temp,w,c
  6714  002FD8  6E17               	movwf	??___flmul& (0+255),c
  6715  002FDA  5027               	movf	___flmul@temp+1,w,c
  6716  002FDC  6E18               	movwf	(??___flmul+1)& (0+255),c
  6717  002FDE  6A19               	clrf	(??___flmul+2)& (0+255),c
  6718  002FE0  6A1A               	clrf	(??___flmul+3)& (0+255),c
  6719  002FE2  C019  F01A         	movff	??___flmul+2,??___flmul+3
  6720  002FE6  C018  F019         	movff	??___flmul+1,??___flmul+2
  6721  002FEA  C017  F018         	movff	??___flmul,??___flmul+1
  6722  002FEE  6A17               	clrf	??___flmul,c
  6723  002FF0  5017               	movf	??___flmul,w,c
  6724  002FF2  2622               	addwf	___flmul@prod,f,c
  6725  002FF4  5018               	movf	??___flmul+1,w,c
  6726  002FF6  2223               	addwfc	___flmul@prod+1,f,c
  6727  002FF8  5019               	movf	??___flmul+2,w,c
  6728  002FFA  2224               	addwfc	___flmul@prod+2,f,c
  6729  002FFC  501A               	movf	??___flmul+3,w,c
  6730  002FFE  2225               	addwfc	___flmul@prod+3,f,c
  6731  003000  C01C  F017         	movff	___flmul@grs,??___flmul
  6732  003004  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  6733  003008  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  6734  00300C  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  6735  003010  0E19               	movlw	25
  6736  003012  D006               	goto	u2690
  6737  003014                     u2695:
  6738  003014  FFFF               	dw	65535	; assembler added errata NOP
  6739  003016  90D8               	bcf	status,0,c
  6740  003018  321A               	rrcf	??___flmul+3,f,c
  6741  00301A  3219               	rrcf	??___flmul+2,f,c
  6742  00301C  3218               	rrcf	??___flmul+1,f,c
  6743  00301E  3217               	rrcf	??___flmul,f,c
  6744  003020                     u2690:
  6745  003020  FFFF               	dw	65535	; assembler added errata NOP
  6746  003022  2EE8               	decfsz	wreg,f,c
  6747  003024  D7F7               	goto	u2695
  6748  003026  5017               	movf	??___flmul,w,c
  6749  003028  2622               	addwf	___flmul@prod,f,c
  6750  00302A  5018               	movf	??___flmul+1,w,c
  6751  00302C  2223               	addwfc	___flmul@prod+1,f,c
  6752  00302E  5019               	movf	??___flmul+2,w,c
  6753  003030  2224               	addwfc	___flmul@prod+2,f,c
  6754  003032  501A               	movf	??___flmul+3,w,c
  6755  003034  2225               	addwfc	___flmul@prod+3,f,c
  6756  003036  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6757  00303A  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6758  00303E  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6759  003042  6A1C               	clrf	___flmul@grs,c
  6760  003044  5020               	movf	___flmul@aexp,w,c
  6761  003046  C021  F017         	movff	___flmul@bexp,??___flmul
  6762  00304A  6A18               	clrf	(??___flmul+1)& (0+255),c
  6763  00304C  2617               	addwf	??___flmul,f,c
  6764  00304E  0E00               	movlw	0
  6765  003050  2218               	addwfc	??___flmul+1,f,c
  6766  003052  0E82               	movlw	130
  6767  003054  2417               	addwf	??___flmul,w,c
  6768  003056  6E26               	movwf	___flmul@temp,c
  6769  003058  0EFF               	movlw	255
  6770  00305A  2018               	addwfc	??___flmul+1,w,c
  6771  00305C  6E27               	movwf	___flmul@temp+1,c
  6772  00305E  D010               	goto	l2787
  6773  003060                     l2781:
  6774  003060  FFFF               	dw	65535	; assembler added errata NOP
  6775  003062  90D8               	bcf	status,0,c
  6776  003064  3622               	rlcf	___flmul@prod,f,c
  6777  003066  3623               	rlcf	___flmul@prod+1,f,c
  6778  003068  3624               	rlcf	___flmul@prod+2,f,c
  6779  00306A  3625               	rlcf	___flmul@prod+3,f,c
  6780  00306C  BE1F               	btfsc	___flmul@grs+3,7,c
  6781  00306E  8022               	bsf	___flmul@prod,0,c
  6782  003070  90D8               	bcf	status,0,c
  6783  003072  361C               	rlcf	___flmul@grs,f,c
  6784  003074  361D               	rlcf	___flmul@grs+1,f,c
  6785  003076  361E               	rlcf	___flmul@grs+2,f,c
  6786  003078  361F               	rlcf	___flmul@grs+3,f,c
  6787  00307A  0626               	decf	___flmul@temp,f,c
  6788  00307C  A0D8               	btfss	status,0,c
  6789  00307E  0627               	decf	___flmul@temp+1,f,c
  6790  003080                     l2787:
  6791  003080  FFFF               	dw	65535	; assembler added errata NOP
  6792  003082  AE24               	btfss	___flmul@prod+2,7,c
  6793  003084  D7ED               	goto	l2781
  6794  003086  0E00               	movlw	0
  6795  003088  6E20               	movwf	___flmul@aexp,c
  6796  00308A  AE1F               	btfss	___flmul@grs+3,7,c
  6797  00308C  D019               	goto	l906
  6798  00308E  0EFF               	movlw	255
  6799  003090  141C               	andwf	___flmul@grs,w,c
  6800  003092  6E17               	movwf	??___flmul& (0+255),c
  6801  003094  0EFF               	movlw	255
  6802  003096  141D               	andwf	___flmul@grs+1,w,c
  6803  003098  6E18               	movwf	(??___flmul+1)& (0+255),c
  6804  00309A  0EFF               	movlw	255
  6805  00309C  141E               	andwf	___flmul@grs+2,w,c
  6806  00309E  6E19               	movwf	(??___flmul+2)& (0+255),c
  6807  0030A0  0E7F               	movlw	127
  6808  0030A2  141F               	andwf	___flmul@grs+3,w,c
  6809  0030A4  6E1A               	movwf	(??___flmul+3)& (0+255),c
  6810  0030A6  5017               	movf	??___flmul,w,c
  6811  0030A8  1018               	iorwf	??___flmul+1,w,c
  6812  0030AA  1019               	iorwf	??___flmul+2,w,c
  6813  0030AC  101A               	iorwf	??___flmul+3,w,c
  6814  0030AE  B4D8               	btfsc	status,2,c
  6815  0030B0  D004               	goto	l907
  6816  0030B2                     u2730:
  6817  0030B2  FFFF               	dw	65535	; assembler added errata NOP
  6818  0030B4  0E01               	movlw	1
  6819  0030B6  6E20               	movwf	___flmul@aexp,c
  6820  0030B8  D003               	goto	l906
  6821  0030BA                     l907:
  6822  0030BA  FFFF               	dw	65535	; assembler added errata NOP
  6823  0030BC  B022               	btfsc	___flmul@prod,0,c
  6824  0030BE  D7F9               	goto	u2730
  6825  0030C0                     l906:
  6826  0030C0  FFFF               	dw	65535	; assembler added errata NOP
  6827  0030C2  5020               	movf	___flmul@aexp,w,c
  6828  0030C4  B4D8               	btfsc	status,2,c
  6829  0030C6  D01F               	goto	l2807
  6830  0030C8  0E01               	movlw	1
  6831  0030CA  2622               	addwf	___flmul@prod,f,c
  6832  0030CC  0E00               	movlw	0
  6833  0030CE  2223               	addwfc	___flmul@prod+1,f,c
  6834  0030D0  2224               	addwfc	___flmul@prod+2,f,c
  6835  0030D2  2225               	addwfc	___flmul@prod+3,f,c
  6836  0030D4  A025               	btfss	___flmul@prod+3,0,c
  6837  0030D6  D017               	goto	l2807
  6838  0030D8  C022  F017         	movff	___flmul@prod,??___flmul
  6839  0030DC  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  6840  0030E0  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  6841  0030E4  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  6842  0030E8  341A               	rlcf	??___flmul+3,w,c
  6843  0030EA  321A               	rrcf	??___flmul+3,f,c
  6844  0030EC  3219               	rrcf	??___flmul+2,f,c
  6845  0030EE  3218               	rrcf	??___flmul+1,f,c
  6846  0030F0  3217               	rrcf	??___flmul,f,c
  6847  0030F2  C017  F022         	movff	??___flmul,___flmul@prod
  6848  0030F6  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  6849  0030FA  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  6850  0030FE  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  6851  003102  4A26               	infsnz	___flmul@temp,f,c
  6852  003104  2A27               	incf	___flmul@temp+1,f,c
  6853  003106                     l2807:
  6854  003106  FFFF               	dw	65535	; assembler added errata NOP
  6855  003108  BE27               	btfsc	___flmul@temp+1,7,c
  6856  00310A  D00D               	goto	l2811
  6857  00310C  5027               	movf	___flmul@temp+1,w,c
  6858  00310E  E103               	bnz	u2770
  6859  003110  2826               	incf	___flmul@temp,w,c
  6860  003112  A0D8               	btfss	status,0,c
  6861  003114  D008               	goto	l2811
  6862  003116                     u2770:
  6863  003116  0E00               	movlw	0
  6864  003118  6E22               	movwf	___flmul@prod,c
  6865  00311A  0E00               	movlw	0
  6866  00311C  6E23               	movwf	___flmul@prod+1,c
  6867  00311E  0E80               	movlw	128
  6868  003120  6E24               	movwf	___flmul@prod+2,c
  6869  003122  0E7F               	movlw	127
  6870  003124  D023               	goto	L10
  6871  003126                     l2811:
  6872  003126  FFFF               	dw	65535	; assembler added errata NOP
  6873  003128  BE27               	btfsc	___flmul@temp+1,7,c
  6874  00312A  D005               	goto	u2780
  6875  00312C  5027               	movf	___flmul@temp+1,w,c
  6876  00312E  E10F               	bnz	l914
  6877  003130  0426               	decf	___flmul@temp,w,c
  6878  003132  B0D8               	btfsc	status,0,c
  6879  003134  D00C               	goto	l914
  6880  003136                     u2780:
  6881  003136  FFFF               	dw	65535	; assembler added errata NOP
  6882  003138  0E00               	movlw	0
  6883  00313A  6E22               	movwf	___flmul@prod,c
  6884  00313C  0E00               	movlw	0
  6885  00313E  6E23               	movwf	___flmul@prod+1,c
  6886  003140  0E00               	movlw	0
  6887  003142  6E24               	movwf	___flmul@prod+2,c
  6888  003144  0E00               	movlw	0
  6889  003146  6E25               	movwf	___flmul@prod+3,c
  6890  003148  0E00               	movlw	0
  6891  00314A  6E1B               	movwf	___flmul@sign,c
  6892  00314C  D011               	goto	l2823
  6893  00314E                     l914:
  6894  00314E  FFFF               	dw	65535	; assembler added errata NOP
  6895  003150  C026  F021         	movff	___flmul@temp,___flmul@bexp
  6896  003154  0EFF               	movlw	255
  6897  003156  1622               	andwf	___flmul@prod,f,c
  6898  003158  0EFF               	movlw	255
  6899  00315A  1623               	andwf	___flmul@prod+1,f,c
  6900  00315C  0E7F               	movlw	127
  6901  00315E  1624               	andwf	___flmul@prod+2,f,c
  6902  003160  0E00               	movlw	0
  6903  003162  1625               	andwf	___flmul@prod+3,f,c
  6904  003164  B021               	btfsc	___flmul@bexp,0,c
  6905  003166  8E24               	bsf	___flmul@prod+2,7,c
  6906  003168  90D8               	bcf	status,0,c
  6907  00316A  3021               	rrcf	___flmul@bexp,w,c
  6908  00316C                     L10:
  6909  00316C  FFFF               	dw	65535	; assembler added errata NOP
  6910  00316E  6E25               	movwf	___flmul@prod+3,c
  6911  003170                     l2823:
  6912  003170  FFFF               	dw	65535	; assembler added errata NOP
  6913  003172  501B               	movf	___flmul@sign,w,c
  6914  003174  1225               	iorwf	___flmul@prod+3,f,c
  6915  003176  C022  F00F         	movff	___flmul@prod,?___flmul
  6916  00317A  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  6917  00317E  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  6918  003182  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  6919  003186                     l901:
  6920  003186  FFFF               	dw	65535	; assembler added errata NOP
  6921  003188  0012               	return		;funcret
  6922  00318A  FFFF               	dw	65535	; errata NOP
  6923  00318C                     __end_of___flmul:
  6924                           	opt callstack 0
  6925                           
  6926 ;; *************** function ___fldiv *****************
  6927 ;; Defined at:
  6928 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
  6929 ;; Parameters:    Size  Location     Type
  6930 ;;  b               4   39[COMRAM] unsigned char 
  6931 ;;  a               4   43[COMRAM] unsigned char 
  6932 ;; Auto vars:     Size  Location     Type
  6933 ;;  grs             4   58[COMRAM] unsigned long 
  6934 ;;  rem             4   51[COMRAM] unsigned long 
  6935 ;;  new_exp         2   56[COMRAM] int 
  6936 ;;  aexp            1   63[COMRAM] unsigned char 
  6937 ;;  bexp            1   62[COMRAM] unsigned char 
  6938 ;;  sign            1   55[COMRAM] unsigned char 
  6939 ;; Return value:  Size  Location     Type
  6940 ;;                  4   39[COMRAM] unsigned char 
  6941 ;; Registers used:
  6942 ;;		wreg, status,2, status,0
  6943 ;; Tracked objects:
  6944 ;;		On entry : 0/0
  6945 ;;		On exit  : 0/0
  6946 ;;		Unchanged: 0/0
  6947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6948 ;;      Params:         8       0       0       0       0       0       0
  6949 ;;      Locals:        13       0       0       0       0       0       0
  6950 ;;      Temps:          4       0       0       0       0       0       0
  6951 ;;      Totals:        25       0       0       0       0       0       0
  6952 ;;Total ram usage:       25 bytes
  6953 ;; Hardware stack levels used:    1
  6954 ;; This function calls:
  6955 ;;		Nothing
  6956 ;; This function is called by:
  6957 ;;		_get_voltage
  6958 ;;		_get_temp
  6959 ;; This function uses a non-reentrant model
  6960 ;;
  6961                           
  6962                           	psect	text33
  6963  002806                     __ptext33:
  6964                           	opt callstack 0
  6965  002806                     ___fldiv:
  6966                           	opt callstack 0
  6967  002806  FFFF               	dw	65535	; assembler added errata NOP
  6968                           
  6969                           ;incstack = 0
  6970  002808  502B               	movf	___fldiv@b+3,w,c
  6971  00280A  0B80               	andlw	128
  6972  00280C  6E38               	movwf	___fldiv@sign,c
  6973  00280E  502B               	movf	___fldiv@b+3,w,c
  6974  002810  242B               	addwf	___fldiv@b+3,w,c
  6975  002812  6E3F               	movwf	___fldiv@bexp,c
  6976  002814  BE2A               	btfsc	___fldiv@b+2,7,c
  6977  002816  803F               	bsf	___fldiv@bexp,0,c
  6978  002818  503F               	movf	___fldiv@bexp,w,c
  6979  00281A  B4D8               	btfsc	status,2,c
  6980  00281C  D00E               	goto	l3205
  6981  00281E  283F               	incf	___fldiv@bexp,w,c
  6982  002820  A4D8               	btfss	status,2,c
  6983  002822  D008               	goto	l3201
  6984  002824  0E00               	movlw	0
  6985  002826  6E28               	movwf	___fldiv@b,c
  6986  002828  0E00               	movlw	0
  6987  00282A  6E29               	movwf	___fldiv@b+1,c
  6988  00282C  0E00               	movlw	0
  6989  00282E  6E2A               	movwf	___fldiv@b+2,c
  6990  002830  0E00               	movlw	0
  6991  002832  6E2B               	movwf	___fldiv@b+3,c
  6992  002834                     l3201:
  6993  002834  FFFF               	dw	65535	; assembler added errata NOP
  6994  002836  8E2A               	bsf	___fldiv@b+2,7,c
  6995  002838  D007               	goto	L11
  6996  00283A                     l3205:
  6997  00283A  FFFF               	dw	65535	; assembler added errata NOP
  6998  00283C  0E00               	movlw	0
  6999  00283E  6E28               	movwf	___fldiv@b,c
  7000  002840  0E00               	movlw	0
  7001  002842  6E29               	movwf	___fldiv@b+1,c
  7002  002844  0E00               	movlw	0
  7003  002846  6E2A               	movwf	___fldiv@b+2,c
  7004  002848                     L11:
  7005  002848  FFFF               	dw	65535	; assembler added errata NOP
  7006  00284A  0E00               	movlw	0
  7007  00284C  6E2B               	movwf	___fldiv@b+3,c
  7008  00284E  502F               	movf	___fldiv@a+3,w,c
  7009  002850  0B80               	andlw	128
  7010  002852  1A38               	xorwf	___fldiv@sign,f,c
  7011  002854  502F               	movf	___fldiv@a+3,w,c
  7012  002856  242F               	addwf	___fldiv@a+3,w,c
  7013  002858  6E40               	movwf	___fldiv@aexp,c
  7014  00285A  BE2E               	btfsc	___fldiv@a+2,7,c
  7015  00285C  8040               	bsf	___fldiv@aexp,0,c
  7016  00285E  5040               	movf	___fldiv@aexp,w,c
  7017  002860  B4D8               	btfsc	status,2,c
  7018  002862  D00E               	goto	l3225
  7019  002864  2840               	incf	___fldiv@aexp,w,c
  7020  002866  A4D8               	btfss	status,2,c
  7021  002868  D008               	goto	l3221
  7022  00286A  0E00               	movlw	0
  7023  00286C  6E2C               	movwf	___fldiv@a,c
  7024  00286E  0E00               	movlw	0
  7025  002870  6E2D               	movwf	___fldiv@a+1,c
  7026  002872  0E00               	movlw	0
  7027  002874  6E2E               	movwf	___fldiv@a+2,c
  7028  002876  0E00               	movlw	0
  7029  002878  6E2F               	movwf	___fldiv@a+3,c
  7030  00287A                     l3221:
  7031  00287A  FFFF               	dw	65535	; assembler added errata NOP
  7032  00287C  8E2E               	bsf	___fldiv@a+2,7,c
  7033  00287E  D007               	goto	L12
  7034  002880                     l3225:
  7035  002880  FFFF               	dw	65535	; assembler added errata NOP
  7036  002882  0E00               	movlw	0
  7037  002884  6E2C               	movwf	___fldiv@a,c
  7038  002886  0E00               	movlw	0
  7039  002888  6E2D               	movwf	___fldiv@a+1,c
  7040  00288A  0E00               	movlw	0
  7041  00288C  6E2E               	movwf	___fldiv@a+2,c
  7042  00288E                     L12:
  7043  00288E  FFFF               	dw	65535	; assembler added errata NOP
  7044  002890  0E00               	movlw	0
  7045  002892  6E2F               	movwf	___fldiv@a+3,c
  7046  002894  502C               	movf	___fldiv@a,w,c
  7047  002896  102D               	iorwf	___fldiv@a+1,w,c
  7048  002898  102E               	iorwf	___fldiv@a+2,w,c
  7049  00289A  102F               	iorwf	___fldiv@a+3,w,c
  7050  00289C  A4D8               	btfss	status,2,c
  7051  00289E  D018               	goto	l3239
  7052  0028A0  0E00               	movlw	0
  7053  0028A2  6E28               	movwf	___fldiv@b,c
  7054  0028A4  0E00               	movlw	0
  7055  0028A6  6E29               	movwf	___fldiv@b+1,c
  7056  0028A8  0E00               	movlw	0
  7057  0028AA  6E2A               	movwf	___fldiv@b+2,c
  7058  0028AC  0E00               	movlw	0
  7059  0028AE  6E2B               	movwf	___fldiv@b+3,c
  7060  0028B0  0E80               	movlw	128
  7061  0028B2  122A               	iorwf	___fldiv@b+2,f,c
  7062  0028B4  0E7F               	movlw	127
  7063  0028B6  122B               	iorwf	___fldiv@b+3,f,c
  7064  0028B8                     l3233:
  7065  0028B8  FFFF               	dw	65535	; assembler added errata NOP
  7066  0028BA  5038               	movf	___fldiv@sign,w,c
  7067  0028BC  122B               	iorwf	___fldiv@b+3,f,c
  7068  0028BE  C028  F028         	movff	___fldiv@b,?___fldiv
  7069  0028C2  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  7070  0028C6  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  7071  0028CA  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  7072  0028CE  D0F8               	goto	l865
  7073  0028D0                     l3239:
  7074  0028D0  FFFF               	dw	65535	; assembler added errata NOP
  7075  0028D2  503F               	movf	___fldiv@bexp,w,c
  7076  0028D4  A4D8               	btfss	status,2,c
  7077  0028D6  D009               	goto	l3247
  7078  0028D8  0E00               	movlw	0
  7079  0028DA  6E28               	movwf	?___fldiv,c
  7080  0028DC  0E00               	movlw	0
  7081  0028DE  6E29               	movwf	?___fldiv+1,c
  7082  0028E0  0E00               	movlw	0
  7083  0028E2  6E2A               	movwf	?___fldiv+2,c
  7084  0028E4  0E00               	movlw	0
  7085  0028E6  6E2B               	movwf	?___fldiv+3,c
  7086  0028E8  D0EB               	goto	l865
  7087  0028EA                     l3247:
  7088  0028EA  FFFF               	dw	65535	; assembler added errata NOP
  7089  0028EC  5040               	movf	___fldiv@aexp,w,c
  7090  0028EE  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  7091  0028F2  6A31               	clrf	(??___fldiv+1)& (0+255),c
  7092  0028F4  5E30               	subwf	??___fldiv,f,c
  7093  0028F6  0E00               	movlw	0
  7094  0028F8  5A31               	subwfb	??___fldiv+1,f,c
  7095  0028FA  0E7F               	movlw	127
  7096  0028FC  2430               	addwf	??___fldiv,w,c
  7097  0028FE  6E39               	movwf	___fldiv@new_exp,c
  7098  002900  0E00               	movlw	0
  7099  002902  2031               	addwfc	??___fldiv+1,w,c
  7100  002904  6E3A               	movwf	___fldiv@new_exp+1,c
  7101  002906  C028  F034         	movff	___fldiv@b,___fldiv@rem
  7102  00290A  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  7103  00290E  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  7104  002912  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  7105  002916  0E00               	movlw	0
  7106  002918  6E28               	movwf	___fldiv@b,c
  7107  00291A  0E00               	movlw	0
  7108  00291C  6E29               	movwf	___fldiv@b+1,c
  7109  00291E  0E00               	movlw	0
  7110  002920  6E2A               	movwf	___fldiv@b+2,c
  7111  002922  0E00               	movlw	0
  7112  002924  6E2B               	movwf	___fldiv@b+3,c
  7113  002926  0E00               	movlw	0
  7114  002928  6E3B               	movwf	___fldiv@grs,c
  7115  00292A  0E00               	movlw	0
  7116  00292C  6E3C               	movwf	___fldiv@grs+1,c
  7117  00292E  0E00               	movlw	0
  7118  002930  6E3D               	movwf	___fldiv@grs+2,c
  7119  002932  0E00               	movlw	0
  7120  002934  6E3E               	movwf	___fldiv@grs+3,c
  7121  002936  0E00               	movlw	0
  7122  002938  6E40               	movwf	___fldiv@aexp,c
  7123  00293A  D02B               	goto	l867
  7124  00293C                     l3257:
  7125  00293C  FFFF               	dw	65535	; assembler added errata NOP
  7126  00293E  5040               	movf	___fldiv@aexp,w,c
  7127  002940  B4D8               	btfsc	status,2,c
  7128  002942  D011               	goto	l3265
  7129  002944  90D8               	bcf	status,0,c
  7130  002946  3634               	rlcf	___fldiv@rem,f,c
  7131  002948  3635               	rlcf	___fldiv@rem+1,f,c
  7132  00294A  3636               	rlcf	___fldiv@rem+2,f,c
  7133  00294C  3637               	rlcf	___fldiv@rem+3,f,c
  7134  00294E  90D8               	bcf	status,0,c
  7135  002950  3628               	rlcf	___fldiv@b,f,c
  7136  002952  3629               	rlcf	___fldiv@b+1,f,c
  7137  002954  362A               	rlcf	___fldiv@b+2,f,c
  7138  002956  362B               	rlcf	___fldiv@b+3,f,c
  7139  002958  BE3E               	btfsc	___fldiv@grs+3,7,c
  7140  00295A  8028               	bsf	___fldiv@b,0,c
  7141  00295C  90D8               	bcf	status,0,c
  7142  00295E  363B               	rlcf	___fldiv@grs,f,c
  7143  002960  363C               	rlcf	___fldiv@grs+1,f,c
  7144  002962  363D               	rlcf	___fldiv@grs+2,f,c
  7145  002964  363E               	rlcf	___fldiv@grs+3,f,c
  7146  002966                     l3265:
  7147  002966  FFFF               	dw	65535	; assembler added errata NOP
  7148  002968  502C               	movf	___fldiv@a,w,c
  7149  00296A  5C34               	subwf	___fldiv@rem,w,c
  7150  00296C  502D               	movf	___fldiv@a+1,w,c
  7151  00296E  5835               	subwfb	___fldiv@rem+1,w,c
  7152  002970  502E               	movf	___fldiv@a+2,w,c
  7153  002972  5836               	subwfb	___fldiv@rem+2,w,c
  7154  002974  502F               	movf	___fldiv@a+3,w,c
  7155  002976  5837               	subwfb	___fldiv@rem+3,w,c
  7156  002978  A0D8               	btfss	status,0,c
  7157  00297A  D009               	goto	l3271
  7158  00297C  8C3E               	bsf	___fldiv@grs+3,6,c
  7159  00297E  502C               	movf	___fldiv@a,w,c
  7160  002980  5E34               	subwf	___fldiv@rem,f,c
  7161  002982  502D               	movf	___fldiv@a+1,w,c
  7162  002984  5A35               	subwfb	___fldiv@rem+1,f,c
  7163  002986  502E               	movf	___fldiv@a+2,w,c
  7164  002988  5A36               	subwfb	___fldiv@rem+2,f,c
  7165  00298A  502F               	movf	___fldiv@a+3,w,c
  7166  00298C  5A37               	subwfb	___fldiv@rem+3,f,c
  7167  00298E                     l3271:
  7168  00298E  FFFF               	dw	65535	; assembler added errata NOP
  7169  002990  2A40               	incf	___fldiv@aexp,f,c
  7170  002992                     l867:
  7171  002992  FFFF               	dw	65535	; assembler added errata NOP
  7172  002994  0E19               	movlw	25
  7173  002996  6440               	cpfsgt	___fldiv@aexp,c
  7174  002998  D7D1               	goto	l3257
  7175  00299A  5034               	movf	___fldiv@rem,w,c
  7176  00299C  1035               	iorwf	___fldiv@rem+1,w,c
  7177  00299E  1036               	iorwf	___fldiv@rem+2,w,c
  7178  0029A0  1037               	iorwf	___fldiv@rem+3,w,c
  7179  0029A2  B4D8               	btfsc	status,2,c
  7180  0029A4  D012               	goto	l3283
  7181  0029A6  803B               	bsf	___fldiv@grs,0,c
  7182  0029A8  D010               	goto	l3283
  7183  0029AA                     l3277:
  7184  0029AA  FFFF               	dw	65535	; assembler added errata NOP
  7185  0029AC  90D8               	bcf	status,0,c
  7186  0029AE  3628               	rlcf	___fldiv@b,f,c
  7187  0029B0  3629               	rlcf	___fldiv@b+1,f,c
  7188  0029B2  362A               	rlcf	___fldiv@b+2,f,c
  7189  0029B4  362B               	rlcf	___fldiv@b+3,f,c
  7190  0029B6  BE3E               	btfsc	___fldiv@grs+3,7,c
  7191  0029B8  8028               	bsf	___fldiv@b,0,c
  7192  0029BA  90D8               	bcf	status,0,c
  7193  0029BC  363B               	rlcf	___fldiv@grs,f,c
  7194  0029BE  363C               	rlcf	___fldiv@grs+1,f,c
  7195  0029C0  363D               	rlcf	___fldiv@grs+2,f,c
  7196  0029C2  363E               	rlcf	___fldiv@grs+3,f,c
  7197  0029C4  0639               	decf	___fldiv@new_exp,f,c
  7198  0029C6  A0D8               	btfss	status,0,c
  7199  0029C8  063A               	decf	___fldiv@new_exp+1,f,c
  7200  0029CA                     l3283:
  7201  0029CA  FFFF               	dw	65535	; assembler added errata NOP
  7202  0029CC  AE2A               	btfss	___fldiv@b+2,7,c
  7203  0029CE  D7ED               	goto	l3277
  7204  0029D0  0E00               	movlw	0
  7205  0029D2  6E40               	movwf	___fldiv@aexp,c
  7206  0029D4  AE3E               	btfss	___fldiv@grs+3,7,c
  7207  0029D6  D019               	goto	l878
  7208  0029D8  0EFF               	movlw	255
  7209  0029DA  143B               	andwf	___fldiv@grs,w,c
  7210  0029DC  6E30               	movwf	??___fldiv& (0+255),c
  7211  0029DE  0EFF               	movlw	255
  7212  0029E0  143C               	andwf	___fldiv@grs+1,w,c
  7213  0029E2  6E31               	movwf	(??___fldiv+1)& (0+255),c
  7214  0029E4  0EFF               	movlw	255
  7215  0029E6  143D               	andwf	___fldiv@grs+2,w,c
  7216  0029E8  6E32               	movwf	(??___fldiv+2)& (0+255),c
  7217  0029EA  0E7F               	movlw	127
  7218  0029EC  143E               	andwf	___fldiv@grs+3,w,c
  7219  0029EE  6E33               	movwf	(??___fldiv+3)& (0+255),c
  7220  0029F0  5030               	movf	??___fldiv,w,c
  7221  0029F2  1031               	iorwf	??___fldiv+1,w,c
  7222  0029F4  1032               	iorwf	??___fldiv+2,w,c
  7223  0029F6  1033               	iorwf	??___fldiv+3,w,c
  7224  0029F8  B4D8               	btfsc	status,2,c
  7225  0029FA  D004               	goto	l879
  7226  0029FC                     u3440:
  7227  0029FC  FFFF               	dw	65535	; assembler added errata NOP
  7228  0029FE  0E01               	movlw	1
  7229  002A00  6E40               	movwf	___fldiv@aexp,c
  7230  002A02  D003               	goto	l878
  7231  002A04                     l879:
  7232  002A04  FFFF               	dw	65535	; assembler added errata NOP
  7233  002A06  B028               	btfsc	___fldiv@b,0,c
  7234  002A08  D7F9               	goto	u3440
  7235  002A0A                     l878:
  7236  002A0A  FFFF               	dw	65535	; assembler added errata NOP
  7237  002A0C  5040               	movf	___fldiv@aexp,w,c
  7238  002A0E  B4D8               	btfsc	status,2,c
  7239  002A10  D01F               	goto	l3303
  7240  002A12  0E01               	movlw	1
  7241  002A14  2628               	addwf	___fldiv@b,f,c
  7242  002A16  0E00               	movlw	0
  7243  002A18  2229               	addwfc	___fldiv@b+1,f,c
  7244  002A1A  222A               	addwfc	___fldiv@b+2,f,c
  7245  002A1C  222B               	addwfc	___fldiv@b+3,f,c
  7246  002A1E  A02B               	btfss	___fldiv@b+3,0,c
  7247  002A20  D017               	goto	l3303
  7248  002A22  C028  F030         	movff	___fldiv@b,??___fldiv
  7249  002A26  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  7250  002A2A  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  7251  002A2E  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  7252  002A32  3433               	rlcf	??___fldiv+3,w,c
  7253  002A34  3233               	rrcf	??___fldiv+3,f,c
  7254  002A36  3232               	rrcf	??___fldiv+2,f,c
  7255  002A38  3231               	rrcf	??___fldiv+1,f,c
  7256  002A3A  3230               	rrcf	??___fldiv,f,c
  7257  002A3C  C030  F028         	movff	??___fldiv,___fldiv@b
  7258  002A40  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  7259  002A44  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  7260  002A48  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  7261  002A4C  4A39               	infsnz	___fldiv@new_exp,f,c
  7262  002A4E  2A3A               	incf	___fldiv@new_exp+1,f,c
  7263  002A50                     l3303:
  7264  002A50  FFFF               	dw	65535	; assembler added errata NOP
  7265  002A52  BE3A               	btfsc	___fldiv@new_exp+1,7,c
  7266  002A54  D010               	goto	l3307
  7267  002A56  503A               	movf	___fldiv@new_exp+1,w,c
  7268  002A58  E103               	bnz	u3480
  7269  002A5A  2839               	incf	___fldiv@new_exp,w,c
  7270  002A5C  A0D8               	btfss	status,0,c
  7271  002A5E  D00B               	goto	l3307
  7272  002A60                     u3480:
  7273  002A60  0E00               	movlw	0
  7274  002A62  6E3A               	movwf	___fldiv@new_exp+1,c
  7275  002A64  6839               	setf	___fldiv@new_exp,c
  7276  002A66  0E00               	movlw	0
  7277  002A68  6E28               	movwf	___fldiv@b,c
  7278  002A6A  0E00               	movlw	0
  7279  002A6C  6E29               	movwf	___fldiv@b+1,c
  7280  002A6E  0E00               	movlw	0
  7281  002A70  6E2A               	movwf	___fldiv@b+2,c
  7282  002A72  0E00               	movlw	0
  7283  002A74  6E2B               	movwf	___fldiv@b+3,c
  7284  002A76                     l3307:
  7285  002A76  FFFF               	dw	65535	; assembler added errata NOP
  7286  002A78  BE3A               	btfsc	___fldiv@new_exp+1,7,c
  7287  002A7A  D005               	goto	u3490
  7288  002A7C  503A               	movf	___fldiv@new_exp+1,w,c
  7289  002A7E  E112               	bnz	l3311
  7290  002A80  0439               	decf	___fldiv@new_exp,w,c
  7291  002A82  B0D8               	btfsc	status,0,c
  7292  002A84  D00F               	goto	l3311
  7293  002A86                     u3490:
  7294  002A86  FFFF               	dw	65535	; assembler added errata NOP
  7295  002A88  0E00               	movlw	0
  7296  002A8A  6E3A               	movwf	___fldiv@new_exp+1,c
  7297  002A8C  0E00               	movlw	0
  7298  002A8E  6E39               	movwf	___fldiv@new_exp,c
  7299  002A90  0E00               	movlw	0
  7300  002A92  6E28               	movwf	___fldiv@b,c
  7301  002A94  0E00               	movlw	0
  7302  002A96  6E29               	movwf	___fldiv@b+1,c
  7303  002A98  0E00               	movlw	0
  7304  002A9A  6E2A               	movwf	___fldiv@b+2,c
  7305  002A9C  0E00               	movlw	0
  7306  002A9E  6E2B               	movwf	___fldiv@b+3,c
  7307  002AA0  0E00               	movlw	0
  7308  002AA2  6E38               	movwf	___fldiv@sign,c
  7309  002AA4                     l3311:
  7310  002AA4  FFFF               	dw	65535	; assembler added errata NOP
  7311  002AA6  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  7312  002AAA  A03F               	btfss	___fldiv@bexp,0,c
  7313  002AAC  D002               	goto	l3317
  7314  002AAE  8E2A               	bsf	___fldiv@b+2,7,c
  7315  002AB0  D002               	goto	l3319
  7316  002AB2                     l3317:
  7317  002AB2  FFFF               	dw	65535	; assembler added errata NOP
  7318  002AB4  9E2A               	bcf	___fldiv@b+2,7,c
  7319  002AB6                     l3319:
  7320  002AB6  FFFF               	dw	65535	; assembler added errata NOP
  7321  002AB8  90D8               	bcf	status,0,c
  7322  002ABA  303F               	rrcf	___fldiv@bexp,w,c
  7323  002ABC  6E2B               	movwf	___fldiv@b+3,c
  7324  002ABE  D6FC               	goto	l3233
  7325  002AC0                     l865:
  7326  002AC0  FFFF               	dw	65535	; assembler added errata NOP
  7327  002AC2  0012               	return		;funcret
  7328  002AC4  FFFF               	dw	65535	; errata NOP
  7329  002AC6                     __end_of___fldiv:
  7330                           	opt callstack 0
  7331                           
  7332 ;; *************** function ___fladd *****************
  7333 ;; Defined at:
  7334 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  7335 ;; Parameters:    Size  Location     Type
  7336 ;;  b               4   52[COMRAM] unsigned char 
  7337 ;;  a               4   56[COMRAM] unsigned char 
  7338 ;; Auto vars:     Size  Location     Type
  7339 ;;  grs             1   67[COMRAM] unsigned char 
  7340 ;;  bexp            1   66[COMRAM] unsigned char 
  7341 ;;  aexp            1   65[COMRAM] unsigned char 
  7342 ;;  signs           1   64[COMRAM] unsigned char 
  7343 ;; Return value:  Size  Location     Type
  7344 ;;                  4   52[COMRAM] unsigned char 
  7345 ;; Registers used:
  7346 ;;		wreg, status,2, status,0
  7347 ;; Tracked objects:
  7348 ;;		On entry : 0/0
  7349 ;;		On exit  : 0/0
  7350 ;;		Unchanged: 0/0
  7351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7352 ;;      Params:         8       0       0       0       0       0       0
  7353 ;;      Locals:         4       0       0       0       0       0       0
  7354 ;;      Temps:          4       0       0       0       0       0       0
  7355 ;;      Totals:        16       0       0       0       0       0       0
  7356 ;;Total ram usage:       16 bytes
  7357 ;; Hardware stack levels used:    1
  7358 ;; This function calls:
  7359 ;;		Nothing
  7360 ;; This function is called by:
  7361 ;;		_get_temp
  7362 ;;		_sprintf
  7363 ;;		___flsub
  7364 ;; This function uses a non-reentrant model
  7365 ;;
  7366                           
  7367                           	psect	text34
  7368  002AC6                     __ptext34:
  7369                           	opt callstack 0
  7370  002AC6                     ___fladd:
  7371                           	opt callstack 0
  7372  002AC6  FFFF               	dw	65535	; assembler added errata NOP
  7373                           
  7374                           ;incstack = 0
  7375  002AC8  5038               	movf	___fladd@b+3,w,c
  7376  002ACA  0B80               	andlw	128
  7377  002ACC  6E41               	movwf	___fladd@signs,c
  7378  002ACE  5038               	movf	___fladd@b+3,w,c
  7379  002AD0  2438               	addwf	___fladd@b+3,w,c
  7380  002AD2  6E43               	movwf	___fladd@bexp,c
  7381  002AD4  BE37               	btfsc	___fladd@b+2,7,c
  7382  002AD6  8043               	bsf	___fladd@bexp,0,c
  7383  002AD8  5043               	movf	___fladd@bexp,w,c
  7384  002ADA  B4D8               	btfsc	status,2,c
  7385  002ADC  D00E               	goto	l2513
  7386  002ADE  2843               	incf	___fladd@bexp,w,c
  7387  002AE0  A4D8               	btfss	status,2,c
  7388  002AE2  D008               	goto	l2509
  7389  002AE4  0E00               	movlw	0
  7390  002AE6  6E35               	movwf	___fladd@b,c
  7391  002AE8  0E00               	movlw	0
  7392  002AEA  6E36               	movwf	___fladd@b+1,c
  7393  002AEC  0E00               	movlw	0
  7394  002AEE  6E37               	movwf	___fladd@b+2,c
  7395  002AF0  0E00               	movlw	0
  7396  002AF2  6E38               	movwf	___fladd@b+3,c
  7397  002AF4                     l2509:
  7398  002AF4  FFFF               	dw	65535	; assembler added errata NOP
  7399  002AF6  8E37               	bsf	___fladd@b+2,7,c
  7400  002AF8  D007               	goto	L13
  7401  002AFA                     l2513:
  7402  002AFA  FFFF               	dw	65535	; assembler added errata NOP
  7403  002AFC  0E00               	movlw	0
  7404  002AFE  6E35               	movwf	___fladd@b,c
  7405  002B00  0E00               	movlw	0
  7406  002B02  6E36               	movwf	___fladd@b+1,c
  7407  002B04  0E00               	movlw	0
  7408  002B06  6E37               	movwf	___fladd@b+2,c
  7409  002B08                     L13:
  7410  002B08  FFFF               	dw	65535	; assembler added errata NOP
  7411  002B0A  0E00               	movlw	0
  7412  002B0C  6E38               	movwf	___fladd@b+3,c
  7413  002B0E  503C               	movf	___fladd@a+3,w,c
  7414  002B10  0B80               	andlw	128
  7415  002B12  6E42               	movwf	___fladd@aexp,c
  7416  002B14  5041               	movf	___fladd@signs,w,c
  7417  002B16  1842               	xorwf	___fladd@aexp,w,c
  7418  002B18  A4D8               	btfss	status,2,c
  7419  002B1A  8C41               	bsf	___fladd@signs,6,c
  7420  002B1C  503C               	movf	___fladd@a+3,w,c
  7421  002B1E  243C               	addwf	___fladd@a+3,w,c
  7422  002B20  6E42               	movwf	___fladd@aexp,c
  7423  002B22  BE3B               	btfsc	___fladd@a+2,7,c
  7424  002B24  8042               	bsf	___fladd@aexp,0,c
  7425  002B26  5042               	movf	___fladd@aexp,w,c
  7426  002B28  B4D8               	btfsc	status,2,c
  7427  002B2A  D00E               	goto	l2537
  7428  002B2C  2842               	incf	___fladd@aexp,w,c
  7429  002B2E  A4D8               	btfss	status,2,c
  7430  002B30  D008               	goto	l2533
  7431  002B32  0E00               	movlw	0
  7432  002B34  6E39               	movwf	___fladd@a,c
  7433  002B36  0E00               	movlw	0
  7434  002B38  6E3A               	movwf	___fladd@a+1,c
  7435  002B3A  0E00               	movlw	0
  7436  002B3C  6E3B               	movwf	___fladd@a+2,c
  7437  002B3E  0E00               	movlw	0
  7438  002B40  6E3C               	movwf	___fladd@a+3,c
  7439  002B42                     l2533:
  7440  002B42  FFFF               	dw	65535	; assembler added errata NOP
  7441  002B44  8E3B               	bsf	___fladd@a+2,7,c
  7442  002B46  D007               	goto	L14
  7443  002B48                     l2537:
  7444  002B48  FFFF               	dw	65535	; assembler added errata NOP
  7445  002B4A  0E00               	movlw	0
  7446  002B4C  6E39               	movwf	___fladd@a,c
  7447  002B4E  0E00               	movlw	0
  7448  002B50  6E3A               	movwf	___fladd@a+1,c
  7449  002B52  0E00               	movlw	0
  7450  002B54  6E3B               	movwf	___fladd@a+2,c
  7451  002B56                     L14:
  7452  002B56  FFFF               	dw	65535	; assembler added errata NOP
  7453  002B58  0E00               	movlw	0
  7454  002B5A  6E3C               	movwf	___fladd@a+3,c
  7455  002B5C  5043               	movf	___fladd@bexp,w,c
  7456  002B5E  5C42               	subwf	___fladd@aexp,w,c
  7457  002B60  B0D8               	btfsc	status,0,c
  7458  002B62  D023               	goto	l2575
  7459  002B64  AC41               	btfss	___fladd@signs,6,c
  7460  002B66  D002               	goto	l2545
  7461  002B68  0E80               	movlw	128
  7462  002B6A  1A41               	xorwf	___fladd@signs,f,c
  7463  002B6C                     l2545:
  7464  002B6C  FFFF               	dw	65535	; assembler added errata NOP
  7465  002B6E  C043  F044         	movff	___fladd@bexp,___fladd@grs
  7466  002B72  C042  F043         	movff	___fladd@aexp,___fladd@bexp
  7467  002B76  C044  F042         	movff	___fladd@grs,___fladd@aexp
  7468  002B7A  C035  F044         	movff	___fladd@b,___fladd@grs
  7469  002B7E  C039  F035         	movff	___fladd@a,___fladd@b
  7470  002B82  C044  F039         	movff	___fladd@grs,___fladd@a
  7471  002B86  C036  F044         	movff	___fladd@b+1,___fladd@grs
  7472  002B8A  C03A  F036         	movff	___fladd@a+1,___fladd@b+1
  7473  002B8E  C044  F03A         	movff	___fladd@grs,___fladd@a+1
  7474  002B92  C037  F044         	movff	___fladd@b+2,___fladd@grs
  7475  002B96  C03B  F037         	movff	___fladd@a+2,___fladd@b+2
  7476  002B9A  C044  F03B         	movff	___fladd@grs,___fladd@a+2
  7477  002B9E  C038  F044         	movff	___fladd@b+3,___fladd@grs
  7478  002BA2  C03C  F038         	movff	___fladd@a+3,___fladd@b+3
  7479  002BA6  C044  F03C         	movff	___fladd@grs,___fladd@a+3
  7480  002BAA                     l2575:
  7481  002BAA  FFFF               	dw	65535	; assembler added errata NOP
  7482  002BAC  0E00               	movlw	0
  7483  002BAE  6E44               	movwf	___fladd@grs,c
  7484  002BB0  5043               	movf	___fladd@bexp,w,c
  7485  002BB2  C042  F03D         	movff	___fladd@aexp,??___fladd
  7486  002BB6  6A3E               	clrf	(??___fladd+1)& (0+255),c
  7487  002BB8  5E3D               	subwf	??___fladd,f,c
  7488  002BBA  0E00               	movlw	0
  7489  002BBC  5A3E               	subwfb	??___fladd+1,f,c
  7490  002BBE  BE3E               	btfsc	??___fladd+1,7,c
  7491  002BC0  D031               	goto	l812
  7492  002BC2  503E               	movf	??___fladd+1,w,c
  7493  002BC4  E104               	bnz	u2310
  7494  002BC6  0E1A               	movlw	26
  7495  002BC8  5C3D               	subwf	??___fladd,w,c
  7496  002BCA  A0D8               	btfss	status,0,c
  7497  002BCC  D02B               	goto	l812
  7498  002BCE                     u2310:
  7499  002BCE  5035               	movf	___fladd@b,w,c
  7500  002BD0  1036               	iorwf	___fladd@b+1,w,c
  7501  002BD2  1037               	iorwf	___fladd@b+2,w,c
  7502  002BD4  1038               	iorwf	___fladd@b+3,w,c
  7503  002BD6  B4D8               	btfsc	status,2,c
  7504  002BD8  D002               	goto	u2320
  7505  002BDA  0E01               	movlw	1
  7506  002BDC  D002               	goto	u2330
  7507  002BDE                     u2320:
  7508  002BDE  FFFF               	dw	65535	; assembler added errata NOP
  7509  002BE0  0E00               	movlw	0
  7510  002BE2                     u2330:
  7511  002BE2  FFFF               	dw	65535	; assembler added errata NOP
  7512  002BE4  6E44               	movwf	___fladd@grs,c
  7513  002BE6  0E00               	movlw	0
  7514  002BE8  6E35               	movwf	___fladd@b,c
  7515  002BEA  0E00               	movlw	0
  7516  002BEC  6E36               	movwf	___fladd@b+1,c
  7517  002BEE  0E00               	movlw	0
  7518  002BF0  6E37               	movwf	___fladd@b+2,c
  7519  002BF2  0E00               	movlw	0
  7520  002BF4  6E38               	movwf	___fladd@b+3,c
  7521  002BF6  C042  F043         	movff	___fladd@aexp,___fladd@bexp
  7522  002BFA  D019               	goto	u2360
  7523  002BFC                     l813:
  7524  002BFC  FFFF               	dw	65535	; assembler added errata NOP
  7525  002BFE  A044               	btfss	___fladd@grs,0,c
  7526  002C00  D005               	goto	l2587
  7527  002C02  90D8               	bcf	status,0,c
  7528  002C04  3044               	rrcf	___fladd@grs,w,c
  7529  002C06  0901               	iorlw	1
  7530  002C08  6E44               	movwf	___fladd@grs,c
  7531  002C0A  D003               	goto	l2589
  7532  002C0C                     l2587:
  7533  002C0C  FFFF               	dw	65535	; assembler added errata NOP
  7534  002C0E  90D8               	bcf	status,0,c
  7535  002C10  3244               	rrcf	___fladd@grs,f,c
  7536  002C12                     l2589:
  7537  002C12  FFFF               	dw	65535	; assembler added errata NOP
  7538  002C14  B035               	btfsc	___fladd@b,0,c
  7539  002C16  8E44               	bsf	___fladd@grs,7,c
  7540  002C18  3438               	rlcf	___fladd@b+3,w,c
  7541  002C1A  3238               	rrcf	___fladd@b+3,f,c
  7542  002C1C  3237               	rrcf	___fladd@b+2,f,c
  7543  002C1E  3236               	rrcf	___fladd@b+1,f,c
  7544  002C20  3235               	rrcf	___fladd@b,f,c
  7545  002C22  2A43               	incf	___fladd@bexp,f,c
  7546  002C24                     l812:
  7547  002C24  FFFF               	dw	65535	; assembler added errata NOP
  7548  002C26  5042               	movf	___fladd@aexp,w,c
  7549  002C28  5C43               	subwf	___fladd@bexp,w,c
  7550  002C2A  A0D8               	btfss	status,0,c
  7551  002C2C  D7E7               	goto	l813
  7552  002C2E                     u2360:
  7553  002C2E  FFFF               	dw	65535	; assembler added errata NOP
  7554  002C30  BC41               	btfsc	___fladd@signs,6,c
  7555  002C32  D021               	goto	l2621
  7556  002C34  5043               	movf	___fladd@bexp,w,c
  7557  002C36  B4D8               	btfsc	status,2,c
  7558  002C38  D065               	goto	u2450
  7559  002C3A  5039               	movf	___fladd@a,w,c
  7560  002C3C  2635               	addwf	___fladd@b,f,c
  7561  002C3E  503A               	movf	___fladd@a+1,w,c
  7562  002C40  2236               	addwfc	___fladd@b+1,f,c
  7563  002C42  503B               	movf	___fladd@a+2,w,c
  7564  002C44  2237               	addwfc	___fladd@b+2,f,c
  7565  002C46  503C               	movf	___fladd@a+3,w,c
  7566  002C48  2238               	addwfc	___fladd@b+3,f,c
  7567  002C4A  A038               	btfss	___fladd@b+3,0,c
  7568  002C4C  D07B               	goto	u2490
  7569  002C4E  A044               	btfss	___fladd@grs,0,c
  7570  002C50  D005               	goto	l2611
  7571  002C52  90D8               	bcf	status,0,c
  7572  002C54  3044               	rrcf	___fladd@grs,w,c
  7573  002C56  0901               	iorlw	1
  7574  002C58  6E44               	movwf	___fladd@grs,c
  7575  002C5A  D003               	goto	l2613
  7576  002C5C                     l2611:
  7577  002C5C  FFFF               	dw	65535	; assembler added errata NOP
  7578  002C5E  90D8               	bcf	status,0,c
  7579  002C60  3244               	rrcf	___fladd@grs,f,c
  7580  002C62                     l2613:
  7581  002C62  FFFF               	dw	65535	; assembler added errata NOP
  7582  002C64  B035               	btfsc	___fladd@b,0,c
  7583  002C66  8E44               	bsf	___fladd@grs,7,c
  7584  002C68  3438               	rlcf	___fladd@b+3,w,c
  7585  002C6A  3238               	rrcf	___fladd@b+3,f,c
  7586  002C6C  3237               	rrcf	___fladd@b+2,f,c
  7587  002C6E  3236               	rrcf	___fladd@b+1,f,c
  7588  002C70  3235               	rrcf	___fladd@b,f,c
  7589  002C72  2A43               	incf	___fladd@bexp,f,c
  7590  002C74  D067               	goto	u2490
  7591  002C76                     l2621:
  7592  002C76  FFFF               	dw	65535	; assembler added errata NOP
  7593  002C78  5039               	movf	___fladd@a,w,c
  7594  002C7A  5C35               	subwf	___fladd@b,w,c
  7595  002C7C  503A               	movf	___fladd@a+1,w,c
  7596  002C7E  5836               	subwfb	___fladd@b+1,w,c
  7597  002C80  503B               	movf	___fladd@a+2,w,c
  7598  002C82  5837               	subwfb	___fladd@b+2,w,c
  7599  002C84  5038               	movf	___fladd@b+3,w,c
  7600  002C86  0A80               	xorlw	128
  7601  002C88  6E3D               	movwf	??___fladd& (0+255),c
  7602  002C8A  503C               	movf	___fladd@a+3,w,c
  7603  002C8C  0A80               	xorlw	128
  7604  002C8E  583D               	subwfb	??___fladd& (0+255),w,c
  7605  002C90  B0D8               	btfsc	status,0,c
  7606  002C92  D025               	goto	l2631
  7607  002C94  5035               	movf	___fladd@b,w,c
  7608  002C96  5C39               	subwf	___fladd@a,w,c
  7609  002C98  6E3D               	movwf	??___fladd& (0+255),c
  7610  002C9A  5036               	movf	___fladd@b+1,w,c
  7611  002C9C  583A               	subwfb	___fladd@a+1,w,c
  7612  002C9E  6E3E               	movwf	(??___fladd+1)& (0+255),c
  7613  002CA0  5037               	movf	___fladd@b+2,w,c
  7614  002CA2  583B               	subwfb	___fladd@a+2,w,c
  7615  002CA4  6E3F               	movwf	(??___fladd+2)& (0+255),c
  7616  002CA6  5038               	movf	___fladd@b+3,w,c
  7617  002CA8  583C               	subwfb	___fladd@a+3,w,c
  7618  002CAA  6E40               	movwf	(??___fladd+3)& (0+255),c
  7619  002CAC  0EFF               	movlw	255
  7620  002CAE  243D               	addwf	??___fladd,w,c
  7621  002CB0  6E35               	movwf	___fladd@b,c
  7622  002CB2  0EFF               	movlw	255
  7623  002CB4  203E               	addwfc	??___fladd+1,w,c
  7624  002CB6  6E36               	movwf	___fladd@b+1,c
  7625  002CB8  0EFF               	movlw	255
  7626  002CBA  203F               	addwfc	??___fladd+2,w,c
  7627  002CBC  6E37               	movwf	___fladd@b+2,c
  7628  002CBE  0EFF               	movlw	255
  7629  002CC0  2040               	addwfc	??___fladd+3,w,c
  7630  002CC2  6E38               	movwf	___fladd@b+3,c
  7631  002CC4  0E80               	movlw	128
  7632  002CC6  1A41               	xorwf	___fladd@signs,f,c
  7633  002CC8  6C44               	negf	___fladd@grs,c
  7634  002CCA  5044               	movf	___fladd@grs,w,c
  7635  002CCC  A4D8               	btfss	status,2,c
  7636  002CCE  D010               	goto	l828
  7637  002CD0  0E01               	movlw	1
  7638  002CD2  2635               	addwf	___fladd@b,f,c
  7639  002CD4  0E00               	movlw	0
  7640  002CD6  2236               	addwfc	___fladd@b+1,f,c
  7641  002CD8  2237               	addwfc	___fladd@b+2,f,c
  7642  002CDA  2238               	addwfc	___fladd@b+3,f,c
  7643  002CDC  D009               	goto	l828
  7644  002CDE                     l2631:
  7645  002CDE  FFFF               	dw	65535	; assembler added errata NOP
  7646  002CE0  5039               	movf	___fladd@a,w,c
  7647  002CE2  5E35               	subwf	___fladd@b,f,c
  7648  002CE4  503A               	movf	___fladd@a+1,w,c
  7649  002CE6  5A36               	subwfb	___fladd@b+1,f,c
  7650  002CE8  503B               	movf	___fladd@a+2,w,c
  7651  002CEA  5A37               	subwfb	___fladd@b+2,f,c
  7652  002CEC  503C               	movf	___fladd@a+3,w,c
  7653  002CEE  5A38               	subwfb	___fladd@b+3,f,c
  7654  002CF0                     l828:
  7655  002CF0  FFFF               	dw	65535	; assembler added errata NOP
  7656  002CF2  5035               	movf	___fladd@b,w,c
  7657  002CF4  1036               	iorwf	___fladd@b+1,w,c
  7658  002CF6  1037               	iorwf	___fladd@b+2,w,c
  7659  002CF8  1038               	iorwf	___fladd@b+3,w,c
  7660  002CFA  A4D8               	btfss	status,2,c
  7661  002CFC  D020               	goto	l2655
  7662  002CFE  5044               	movf	___fladd@grs,w,c
  7663  002D00  A4D8               	btfss	status,2,c
  7664  002D02  D01D               	goto	l2655
  7665  002D04                     u2450:
  7666  002D04  FFFF               	dw	65535	; assembler added errata NOP
  7667  002D06  0E00               	movlw	0
  7668  002D08  6E35               	movwf	?___fladd,c
  7669  002D0A  0E00               	movlw	0
  7670  002D0C  6E36               	movwf	?___fladd+1,c
  7671  002D0E  0E00               	movlw	0
  7672  002D10  6E37               	movwf	?___fladd+2,c
  7673  002D12  0E00               	movlw	0
  7674  002D14  6E38               	movwf	?___fladd+3,c
  7675  002D16  D076               	goto	l820
  7676  002D18                     l2639:
  7677  002D18  FFFF               	dw	65535	; assembler added errata NOP
  7678  002D1A  90D8               	bcf	status,0,c
  7679  002D1C  3635               	rlcf	___fladd@b,f,c
  7680  002D1E  3636               	rlcf	___fladd@b+1,f,c
  7681  002D20  3637               	rlcf	___fladd@b+2,f,c
  7682  002D22  3638               	rlcf	___fladd@b+3,f,c
  7683  002D24  BE44               	btfsc	___fladd@grs,7,c
  7684  002D26  8035               	bsf	___fladd@b,0,c
  7685  002D28  A044               	btfss	___fladd@grs,0,c
  7686  002D2A  D002               	goto	l2649
  7687  002D2C  80D8               	bsf	status,0,c
  7688  002D2E  D002               	goto	L15
  7689  002D30                     l2649:
  7690  002D30  FFFF               	dw	65535	; assembler added errata NOP
  7691  002D32  90D8               	bcf	status,0,c
  7692  002D34                     L15:
  7693  002D34  FFFF               	dw	65535	; assembler added errata NOP
  7694  002D36  3644               	rlcf	___fladd@grs,f,c
  7695  002D38  5043               	movf	___fladd@bexp,w,c
  7696  002D3A  A4D8               	btfss	status,2,c
  7697  002D3C  0643               	decf	___fladd@bexp,f,c
  7698  002D3E                     l2655:
  7699  002D3E  FFFF               	dw	65535	; assembler added errata NOP
  7700  002D40  AE37               	btfss	___fladd@b+2,7,c
  7701  002D42  D7EA               	goto	l2639
  7702  002D44                     u2490:
  7703  002D44  FFFF               	dw	65535	; assembler added errata NOP
  7704  002D46  0E00               	movlw	0
  7705  002D48  6E42               	movwf	___fladd@aexp,c
  7706  002D4A  AE44               	btfss	___fladd@grs,7,c
  7707  002D4C  D00D               	goto	l837
  7708  002D4E  C044  F03D         	movff	___fladd@grs,??___fladd
  7709  002D52  0E7F               	movlw	127
  7710  002D54  163D               	andwf	??___fladd,f,c
  7711  002D56  B4D8               	btfsc	status,2,c
  7712  002D58  D004               	goto	l838
  7713  002D5A                     u2510:
  7714  002D5A  FFFF               	dw	65535	; assembler added errata NOP
  7715  002D5C  0E01               	movlw	1
  7716  002D5E  6E42               	movwf	___fladd@aexp,c
  7717  002D60  D003               	goto	l837
  7718  002D62                     l838:
  7719  002D62  FFFF               	dw	65535	; assembler added errata NOP
  7720  002D64  B035               	btfsc	___fladd@b,0,c
  7721  002D66  D7F9               	goto	u2510
  7722  002D68                     l837:
  7723  002D68  FFFF               	dw	65535	; assembler added errata NOP
  7724  002D6A  5042               	movf	___fladd@aexp,w,c
  7725  002D6C  B4D8               	btfsc	status,2,c
  7726  002D6E  D020               	goto	l2675
  7727  002D70  0E01               	movlw	1
  7728  002D72  2635               	addwf	___fladd@b,f,c
  7729  002D74  0E00               	movlw	0
  7730  002D76  2236               	addwfc	___fladd@b+1,f,c
  7731  002D78  2237               	addwfc	___fladd@b+2,f,c
  7732  002D7A  2238               	addwfc	___fladd@b+3,f,c
  7733  002D7C  A038               	btfss	___fladd@b+3,0,c
  7734  002D7E  D018               	goto	l2675
  7735  002D80  C035  F03D         	movff	___fladd@b,??___fladd
  7736  002D84  C036  F03E         	movff	___fladd@b+1,??___fladd+1
  7737  002D88  C037  F03F         	movff	___fladd@b+2,??___fladd+2
  7738  002D8C  C038  F040         	movff	___fladd@b+3,??___fladd+3
  7739  002D90  3440               	rlcf	??___fladd+3,w,c
  7740  002D92  3240               	rrcf	??___fladd+3,f,c
  7741  002D94  323F               	rrcf	??___fladd+2,f,c
  7742  002D96  323E               	rrcf	??___fladd+1,f,c
  7743  002D98  323D               	rrcf	??___fladd,f,c
  7744  002D9A  C03D  F035         	movff	??___fladd,___fladd@b
  7745  002D9E  C03E  F036         	movff	??___fladd+1,___fladd@b+1
  7746  002DA2  C03F  F037         	movff	??___fladd+2,___fladd@b+2
  7747  002DA6  C040  F038         	movff	??___fladd+3,___fladd@b+3
  7748  002DAA  2843               	incf	___fladd@bexp,w,c
  7749  002DAC  A4D8               	btfss	status,2,c
  7750  002DAE  2A43               	incf	___fladd@bexp,f,c
  7751  002DB0                     l2675:
  7752  002DB0  FFFF               	dw	65535	; assembler added errata NOP
  7753  002DB2  2843               	incf	___fladd@bexp,w,c
  7754  002DB4  B4D8               	btfsc	status,2,c
  7755  002DB6  D003               	goto	u2570
  7756  002DB8  5043               	movf	___fladd@bexp,w,c
  7757  002DBA  A4D8               	btfss	status,2,c
  7758  002DBC  D00E               	goto	l2683
  7759  002DBE                     u2570:
  7760  002DBE  FFFF               	dw	65535	; assembler added errata NOP
  7761  002DC0  0E00               	movlw	0
  7762  002DC2  6E35               	movwf	___fladd@b,c
  7763  002DC4  0E00               	movlw	0
  7764  002DC6  6E36               	movwf	___fladd@b+1,c
  7765  002DC8  0E00               	movlw	0
  7766  002DCA  6E37               	movwf	___fladd@b+2,c
  7767  002DCC  0E00               	movlw	0
  7768  002DCE  6E38               	movwf	___fladd@b+3,c
  7769  002DD0  5043               	movf	___fladd@bexp,w,c
  7770  002DD2  A4D8               	btfss	status,2,c
  7771  002DD4  D002               	goto	l2683
  7772  002DD6  0E00               	movlw	0
  7773  002DD8  6E41               	movwf	___fladd@signs,c
  7774  002DDA                     l2683:
  7775  002DDA  FFFF               	dw	65535	; assembler added errata NOP
  7776  002DDC  A043               	btfss	___fladd@bexp,0,c
  7777  002DDE  D002               	goto	l2687
  7778  002DE0  8E37               	bsf	___fladd@b+2,7,c
  7779  002DE2  D002               	goto	l2689
  7780  002DE4                     l2687:
  7781  002DE4  FFFF               	dw	65535	; assembler added errata NOP
  7782  002DE6  9E37               	bcf	___fladd@b+2,7,c
  7783  002DE8                     l2689:
  7784  002DE8  FFFF               	dw	65535	; assembler added errata NOP
  7785  002DEA  90D8               	bcf	status,0,c
  7786  002DEC  3043               	rrcf	___fladd@bexp,w,c
  7787  002DEE  6E38               	movwf	___fladd@b+3,c
  7788  002DF0  BE41               	btfsc	___fladd@signs,7,c
  7789  002DF2  8E38               	bsf	___fladd@b+3,7,c
  7790  002DF4  C035  F035         	movff	___fladd@b,?___fladd
  7791  002DF8  C036  F036         	movff	___fladd@b+1,?___fladd+1
  7792  002DFC  C037  F037         	movff	___fladd@b+2,?___fladd+2
  7793  002E00  C038  F038         	movff	___fladd@b+3,?___fladd+3
  7794  002E04                     l820:
  7795  002E04  FFFF               	dw	65535	; assembler added errata NOP
  7796  002E06  0012               	return		;funcret
  7797  002E08  FFFF               	dw	65535	; errata NOP
  7798  002E0A                     __end_of___fladd:
  7799                           	opt callstack 0
  7800                           
  7801                           	psect	rparam
  7802  0000                     tosu	equ	0xFFF
  7803                           tosh	equ	0xFFE
  7804                           tosl	equ	0xFFD
  7805                           stkptr	equ	0xFFC
  7806                           pclatu	equ	0xFFB
  7807                           pclath	equ	0xFFA
  7808                           pcl	equ	0xFF9
  7809                           tblptru	equ	0xFF8
  7810                           tblptrh	equ	0xFF7
  7811                           tblptrl	equ	0xFF6
  7812                           tablat	equ	0xFF5
  7813                           prodh	equ	0xFF4
  7814                           prodl	equ	0xFF3
  7815                           indf0	equ	0xFEF
  7816                           postinc0	equ	0xFEE
  7817                           postdec0	equ	0xFED
  7818                           preinc0	equ	0xFEC
  7819                           plusw0	equ	0xFEB
  7820                           fsr0h	equ	0xFEA
  7821                           fsr0l	equ	0xFE9
  7822                           wreg	equ	0xFE8
  7823                           indf1	equ	0xFE7
  7824                           postinc1	equ	0xFE6
  7825                           postdec1	equ	0xFE5
  7826                           preinc1	equ	0xFE4
  7827                           plusw1	equ	0xFE3
  7828                           fsr1h	equ	0xFE2
  7829                           fsr1l	equ	0xFE1
  7830                           bsr	equ	0xFE0
  7831                           indf2	equ	0xFDF
  7832                           postinc2	equ	0xFDE
  7833                           postdec2	equ	0xFDD
  7834                           preinc2	equ	0xFDC
  7835                           plusw2	equ	0xFDB
  7836                           fsr2h	equ	0xFDA
  7837                           fsr2l	equ	0xFD9
  7838                           status	equ	0xFD8


Data Sizes:
    Strings     165
    Constant    144
    Data        0
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    117     117
    BANK0           128     33      53
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_10(CODE[17]), STR_9(CODE[16]), STR_8(CODE[17]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[15]), main@message(BANK0[20]), STR_2(CODE[14]), 
		 -> STR_1(CODE[14]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_10(CODE[17]), STR_9(CODE[16]), STR_8(CODE[17]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[15]), main@message(BANK0[20]), STR_2(CODE[14]), 
		 -> STR_1(CODE[14]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_4(CODE[19]), STR_3(CODE[19]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> main@message(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    print_message_onLCD@message	PTR unsigned char  size(2) Largest target is 20
		 -> STR_10(CODE[17]), STR_9(CODE[16]), STR_8(CODE[17]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[15]), main@message(BANK0[20]), STR_2(CODE[14]), 
		 -> STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___lwmod
    ___fltol->_scale
    ___flsub->___fladd
    _print_message_onLCD->_strlen
    _init_LCD->_R_I
    _get_voltage->___fldiv
    _get_temp->___fladd
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___fladd->_fround

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                35    35      0   50221
                                            115 COMRAM     2     2      0
                                              0 BANK0     33    33      0
                                _R_I
                             ___flge
                           _get_temp
                        _get_voltage
                           _init_LCD
                     _initial_config
                     _light_the_bulb
    _light_the_bulb_and_start_engine
                _print_message_onLCD
                            _sprintf
                       _start_engine
                 _turn_of_everything
 ---------------------------------------------------------------------------------
 (1) _turn_of_everything                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_engine                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             45    37      8   32367
                                             76 COMRAM    39    31      8
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     5      4    7039
                                             39 COMRAM     9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1208
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1364
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13     9      4    5502
                                             39 COMRAM    13     9      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     615
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              0 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          14     6      8     455
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     615
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     466
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             48 COMRAM    10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3041
                                             68 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1246
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _print_message_onLCD                                  5     3      2     962
                                              4 COMRAM     5     3      2
                                _R_D
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _R_D                                                  1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _light_the_bulb_and_start_engine                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _light_the_bulb                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initial_config                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_LCD                                             1     1      0      22
                                              1 COMRAM     1     1      0
                                _R_I
 ---------------------------------------------------------------------------------
 (2) _R_I                                                  1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _get_voltage                                          4     0      4    6223
                                             64 COMRAM     4     0      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _get_temp                                             8     4      4    9009
                                             68 COMRAM     8     4      4
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    4024
                                             14 COMRAM    25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1551
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2718
                                             52 COMRAM    16     8      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _R_I
   ___flge
   _get_temp
     ___fladd
       _fround (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fldiv
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _get_voltage
     ___fldiv
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _init_LCD
     _R_I
   _initial_config
   _light_the_bulb
   _light_the_bulb_and_start_engine
   _print_message_onLCD
     _R_D
     _strlen
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
   _start_engine
   _turn_of_everything

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     21      35       5       41.4%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     75      75       1       92.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AA      15        0.0%
DATA                 0      0      AA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Apr 03 20:14:21 2020

                                                     ___fldiv@aexp 0040  
                                                     ___fldiv@bexp 003F  
                                                     ___fldiv@sign 0038  
                                                               l78 25D8  
                                                     ___awdiv@sign 000C  
                                                     ?_get_voltage 0041  
                                              ___wmul@multiplicand 0003  
                                                      __CFG_OSC$XT 000000  
                                                              l117 1F00  
                                                              l228 3CAC  
                                                              l157 3596  
                                                              l515 2040  
                                                              l540 1E4E  
                                                              l533 1C02  
                                                              l703 1A48  
                                                              l288 1B5C  
                                                              l624 2156  
                                                              l626 20CC  
                                                              l539 1E10  
                                                              l627 20F6  
                                                              l820 2E04  
                                                              l812 2C24  
                                                              l813 2BFC  
                                                              l901 3186  
                                                              l567 1D6E  
                                                              l914 314E  
                                                              l906 30C0  
                                                              l907 30BA  
                                                              l828 2CF0  
                                                              l837 2D68  
                                                              l941 22B2  
                                                              l838 2D62  
                                                              l774 1908  
                                                              l784 1850  
                                                              l865 2AC0  
                                                              l945 2226  
                                                              _LC3 007C5B  
                                                              l938 219C  
                                                              _LC4 007C5C  
                                                              l867 2992  
                                                              l878 2A0A  
                                                              l879 2A04  
                                                              l897 2E96  
                                                              _R_D 1694  
                                                              _R_I 1678  
                                                     __CFG_BOR$OFF 000000  
                                                     ___awmod@sign 0006  
                                                              wreg 000FE8  
                                                 ??_initial_config 0001  
                                                     ___flmul@aexp 0020  
                                                     ___flmul@bexp 0021  
                                                      _sprintf$837 0059  
                                                     ___flmul@sign 001B  
                                                     ___flmul@temp 0026  
                                                     ___flmul@prod 0022  
                                                     __CFG_LVP$OFF 000000  
                                                             ?_R_D 0001  
                                                             ?_R_I 0001  
                                                     ___fltol@exp1 003A  
                                                     __CFG_WDT$OFF 000000  
                                                             l3011 335A  
                                                             l3005 32B8  
                                                             l3023 34AE  
                                                             l3015 338A  
                                                             l3201 2834  
                                                             l3041 16C8  
                                                             l3107 1F5C  
                                                             l3051 2076  
                                                             l3221 287A  
                                                             l3205 283A  
                                                             l3029 3562  
                                                             l3311 2AA4  
                                                             l3303 2A50  
                                                             l3151 200E  
                                                             l3135 1FDE  
                                                             l3127 1FAC  
                                                             l2513 2AFA  
                                                             l3233 28B8  
                                                             l3225 2880  
                                                             l3401 1D12  
                                                             l2611 2C5C  
                                                             l3307 2A76  
                                                             l3411 1D2E  
                                                             l3147 1FFC  
                                                             l3091 2124  
                                                             l2613 2C62  
                                                             l2621 2C76  
                                                             l2533 2B42  
                                                             l2509 2AF4  
                                                             l3317 2AB2  
                                                             l3501 1954  
                                                             l3341 1BDE  
                                                             l3413 1D3C  
                                                             l3405 1D24  
                                                             l3173 1B06  
                                                             l3157 2018  
                                                             l2631 2CDE  
                                                             l3319 2AB6  
                                                             l3271 298E  
                                                             l3247 28EA  
                                                             l3239 28D0  
                                                             l2711 2E38  
                                                             l3175 1B14  
                                                             l3159 2026  
                                                             l3087 2112  
                                                             l2545 2B6C  
                                                             l2537 2B48  
                                                             l3265 2966  
                                                             l3257 293C  
                                                             l2713 2E3E  
                                                             l3345 1BFE  
                                                             l3337 1BA8  
                                                             l3361 1DF8  
                                                             l3353 1DAA  
                                                             l3185 1B4C  
                                                             l3097 212E  
                                                             l3601 38CC  
                                                             l3521 35E6  
                                                             l3513 35C0  
                                                             l3283 29CA  
                                                             l2811 3126  
                                                             l2731 2E84  
                                                             l2715 2E50  
                                                             l3451 21CE  
                                                             l3419 1D5C  
                                                             l3435 1A38  
                                                             l3427 19FE  
                                                             l3099 213C  
                                                             l3515 35CA  
                                                             l3277 29AA  
                                                             l3453 21D6  
                                                             l3445 21AE  
                                                             l3357 1DE0  
                                                             l3429 1A0C  
                                                             l2901 1AC4  
                                                             l3613 3986  
                                                             l3605 391A  
                                                             l3541 36A2  
                                                             l3517 35DE  
                                                             l3509 35AA  
                                                             l2639 2D18  
                                                             l2655 2D3E  
                                                             l2575 2BAA  
                                                             l2823 3170  
                                                             l2807 3106  
                                                             l3463 224E  
                                                             l3455 21E4  
                                                             l3367 1E4A  
                                                             l3375 171C  
                                                             l3631 3A92  
                                                             l3551 3704  
                                                             l3527 361A  
                                                             l2649 2D30  
                                                             l2729 2E7E  
                                                             l3481 22A0  
                                                             l3465 225C  
                                                             l3457 220C  
                                                             l3385 1CC2  
                                                             l2905 1AD4  
                                                             l3713 3CD2  
                                                             l3705 3CB2  
                                                             l3617 39B2  
                                                             l3545 36DC  
                                                             l3801 3FD0  
                                                             l2683 2DDA  
                                                             l2675 2DB0  
                                                             l2587 2C0C  
                                                             l2739 2EB8  
                                                             l2915 18CE  
                                                             l2851 1C52  
                                                             l2843 1C30  
                                                             l3627 3A1A  
                                                             l3563 374A  
                                                             l3555 370A  
                                                             l3547 36F6  
                                                             l2589 2C12  
                                                             l2781 3060  
                                                             l2917 18D8  
                                                             l2861 1C76  
                                                             l2837 1C1E  
                                                             l3717 3D34  
                                                             l3661 3B4C  
                                                             l3653 3B20  
                                                             l3637 3A98  
                                                             l3573 3798  
                                                             l3557 3734  
                                                             l2687 2DE4  
                                                             l2927 18FC  
                                                             l2943 1844  
                                                             l2935 181E  
                                                             l3751 3EB2  
                                                             l3743 3E6E  
                                                             l3735 3E48  
                                                             l3727 3E24  
                                                             l3903 27E0  
                                                             l2689 2DE8  
                                                             l3497 191E  
                                                             l2937 1828  
                                                             l2849 1C48  
                                                             l2865 1C82  
                                                             l2881 1A74  
                                                             l3729 3E30  
                                                             l3649 3B04  
                                                             l3737 3E54  
                                                             l2787 3080  
                                                             l2971 17D4  
                                                             l2891 1A9C  
                                                             l3771 3F34  
                                                             l3763 3EFA  
                                                             l3747 3E90  
                                                             l3683 3BC8  
                                                             l3691 3C60  
                                                             l3667 3B64  
                                                             l3675 3B8E  
                                                             l2869 1C92  
                                                             l2885 1A82  
                                                             l3765 3F04  
                                                             l3757 3ED6  
                                                             l3693 3C6C  
                                                             l3669 3B76  
                                                             l3597 389E  
                                                             l3589 3820  
                                                             l3861 2662  
                                                             l2991 2500  
                                                             l3839 25BE  
                                                             l2969 17CE  
                                                             l2985 2422  
                                                             l2897 1AB8  
                                                             l2889 1A92  
                                                             l3769 3F2A  
                                                             l3779 3F5E  
                                                             l3787 3F80  
                                                             l3699 3C84  
                                                             l3867 26AA  
                                                             l3877 26FE  
                                                             l3889 277A  
                                                             l3899 27CE  
                                                             STR_1 7FF0  
                                                             STR_2 7FE2  
                                                             STR_3 7F6C  
                                                             STR_4 7F59  
                                                             STR_5 7FD3  
                                                             STR_6 7FA1  
                                                             STR_7 7F90  
                                                             STR_8 7FB2  
                                                             STR_9 7FC3  
                                                             u3100 2062  
                                                             _LATA 000F89  
                                                             u2310 2BCE  
                                                             _LATB 000F8A  
                                                             u3111 2088  
                                                             _LATC 000F8B  
                                                             u2320 2BDE  
                                                             _LATD 000F8C  
                                                             _LATE 000F8D  
                                                             u2330 2BE2  
                                                             u4010 3AD8  
                                                             u4100 3C94  
                                                             u2510 2D5A  
                                                             u4110 3CA6  
                                                             u2360 2C2E  
                                                             u3240 202E  
                                                             u2450 2D04  
                                                             u3170 2144  
                                                             u3091 2058  
                                                             u3260 1B1A  
                                                             u3180 1F48  
                                                             u4310 3FEE  
                                                             u4070 3B9E  
                                                             u3440 29FC  
                                                             u3600 1CAE  
                                                             u2570 2DBE  
                                                             u2490 2D44  
                                                             u2730 30B2  
                                                             u3530 1BFA  
                                                             u3610 1CE4  
                                                             u4410 2800  
                                                             u2830 1C58  
                                                             u3615 1CD8  
                                                             u4351 260C  
                                                             u3480 2A60  
                                                             u2680 2EA4  
                                                             u3800 194E  
                                                             u4280 3F8A  
                                                             u3490 2A86  
                                                             u2770 3116  
                                                             u2690 3020  
                                                             u3650 1D44  
                                                             u2930 18DE  
                                                             u4290 3FAA  
                                                             u4507 18A6  
                                                             u2780 3136  
                                                             u4517 1688  
                                                             u4437 2594  
                                                             u2695 3014  
                                                             u3807 1944  
                                                             u4447 25D0  
                                                             u3760 2268  
                                                             u3680 1A12  
                                                             u2960 182E  
                                                             u3840 367C  
                                                             u4457 25FC  
                                                             u2890 1AA2  
                                                             u4467 27E8  
                                                             u2980 17F8  
                                                             u3940 38DE  
                                                             u4477 16A4  
                                                             u3950 392C  
                                                             u4487 1866  
                                                             u4497 187E  
                                                             u2987 17EE  
                                                             u3980 3984  
                                                     __CFG_PWRT$ON 000000  
                                                     _start_engine 164E  
                                                      main@message 0080  
                                                             _main 255C  
                                                             fsr0h 000FEA  
                                                             indf0 000FEF  
                                                             fsr2h 000FDA  
                                                             fsr0l 000FE9  
                                                             indf2 000FDF  
                                                             fsr2l 000FD9  
                                                             prodh 000FF4  
                                                             prodl 000FF3  
                                                             start 0002  
                                                  ___fldiv@new_exp 0039  
                                                     ___param_bank 000000  
                                                            ??_R_D 0001  
                                                            ??_R_I 0001  
                                                    ___fltol@sign1 0039  
                                                  __end_of___fladd 2E0A  
                                                            ?_main 0001  
                                                  __end_of___fldiv 2AC6  
                                                  __end_of___awdiv 1CA0  
                                                  __end_of___flneg 1732  
                                                            STR_10 7F7F  
                                                  __end_of___awmod 1AE2  
                                                  __end_of___flmul 318C  
                                                  __end_of___flsub 17C2  
                                                  __end_of___fltol 1D74  
                                                  __end_of___lldiv 1B72  
                                                  ___awdiv@divisor 0009  
                                                  __end_of___llmod 1A5E  
                                                  __end_of___lwdiv 1916  
                                                  __end_of___lwmod 185E  
                                                  ___awdiv@counter 000B  
                                                            _PORTA 000F80  
                                                            _PORTB 000F81  
                                                            _PORTC 000F82  
                                                            _PORTD 000F83  
                                                            _PORTE 000F84  
                                                            _TRISA 000F92  
                                                            _TRISB 000F93  
                                                            _TRISC 000F94  
                                                            _TRISD 000F95  
                                                  __end_of_dpowers 7F59  
                                                            _scale 318C  
                                                  __end_of_isdigit 16D4  
                                                            tablat 000FF5  
                                                            status 000FD8  
                                                  __end_of_sprintf 4000  
                                                  __initialization 1662  
                                                     __end_of_main 2806  
                                             print_message_onLCD@i 0009  
                                                           ??_main 0074  
                                                    __activetblptr 000002  
                                             __size_of__tdiv_to_l_ 0116  
                                                    get_temp@ac_in 0045  
                                                           _ADCON0 000FC2  
                                                           _ADCON1 000FC1  
                                                 ___llmod@dividend 0001  
                                                           ?_scale 0028  
                                                           _ADRESH 000FC4  
                                                           _ADRESL 000FC3  
                                                 ___awdiv@dividend 0007  
                                                 __end_of___xxtofl 22B8  
                                                 __end_of__powers_ 7EFD  
                                                 __end_of_get_temp 1F3A  
                                                           ___flge 1D74  
                                                           ___fleq 1B72  
                                                        ??___fladd 003D  
                                                           ___wmul 16D4  
                                                        ??___fldiv 0030  
                                                        ??___awdiv 000B  
                                                        ??___flneg 0005  
                                                        ??___awmod 0005  
                                                        ??___flmul 0017  
                                                        ??___flsub 004D  
                                                        ??___fltol 0035  
                                                        ??___lldiv 0009  
                                                        ??___llmod 0009  
                                                        ??___lwdiv 000A  
                                                 __end_of_init_LCD 18B6  
                                                        ??___lwmod 0005  
                                                           _fround 22B8  
                                                           clear_0 1668  
                                                 ___awdiv@quotient 000D  
                                                  ___awmod@divisor 0003  
                                                  ___awmod@counter 0005  
                                                           main@in 0096  
                                                           _strlen 17C2  
                                             __size_of_get_voltage 0070  
                                                        ??_isdigit 0001  
                                                     __mediumconst 7EC8  
                                                           tblptrh 000FF7  
                                                           tblptrl 000FF6  
                                                           tblptru 000FF8  
                                                        ??_sprintf 0055  
                                                       ___flge@ff1 0001  
                                                       ___flge@ff2 0005  
                                                     ___xxtofl@arg 000B  
                                                     ___xxtofl@exp 000A  
                                                     ___xxtofl@val 0001  
                                                       ___fleq@ff1 0001  
                                                       ___fleq@ff2 0005  
                                                       __accesstop 0080  
                                          __end_of__initialization 166E  
                                                       ___flneg@f1 0001  
                                                    ___rparam_used 000001  
                                                       ___fltol@f1 0031  
                                                   __pcstackCOMRAM 0001  
                                                    __end_of_scale 359C  
                                       __end_of_turn_of_everything 1662  
                                                       __div_to_l_ 1F3A  
                                                  __div_to_l_@exp1 000E  
                                                  __div_to_l_@cntr 000D  
                                      __end_of_print_message_onLCD 197A  
                                                          ??_scale 002C  
                                                  __div_to_l_@quot 0009  
                                                     sprintf@width 006B  
                                                       __pbssBANK0 00A1  
                                                    __div_to_l_@f1 0001  
                                                    __div_to_l_@f2 0005  
                                                          ?___flge 0001  
                                                          ?___fleq 0001  
                                                          ?___wmul 0001  
                                                          ?_fround 0028  
                                                          R_D@dato 0001  
                                                          ?_strlen 0001  
                                                          R_I@dato 0001  
                                          __size_of_light_the_bulb 000A  
                                                        ?___xxtofl 0001  
                                                          _GO_DONE 007E12  
                                                        ?_get_temp 0045  
                                                        ?_init_LCD 0001  
                                                __end_of__npowers_ 7F31  
                                                          __Hparam 0000  
                                                          __Lparam 0000  
                                                  __size_of___flge 00E0  
                                                  __size_of___fleq 0096  
                                                          ___fladd 2AC6  
                                                          ___fldiv 2806  
                                                          ___awdiv 1C08  
                                                          ___flneg 16FE  
                                                          ___awmod 1A5E  
                                                          ___flmul 2E0A  
                                                          ___flsub 1778  
                                                          ___fltol 1CA0  
                                                          ___lldiv 1AE2  
                                                  __size_of___wmul 002A  
                                                          ___llmod 19EA  
                                                          ___lwdiv 18B6  
                                                       _fround$834 0030  
                                                       _fround$835 002C  
                                                          ___lwmod 180E  
                                                          __pcinit 1662  
                                                  __size_of_fround 02A4  
                                                          __ramtop 0600  
                                                          __ptext0 255C  
                                                          __ptext1 1658  
                                                          __ptext2 164E  
                                                          __ptext3 359C  
                                                          __ptext4 318C  
                                                          __ptext5 1A5E  
                                                          __ptext6 1C08  
                                                          __ptext7 16B0  
                                                          __ptext8 22B8  
                                                          __ptext9 180E  
                                                  __size_of_strlen 004C  
                                                      ?__div_to_l_ 0001  
                                                     __size_of_R_D 001C  
                                                     __size_of_R_I 001C  
                                                          _dpowers 7F31  
                                                          _isdigit 16B0  
                                                       ??___xxtofl 0005  
                                                 ___awmod@dividend 0001  
                                                          _sprintf 359C  
                                                       ??_get_temp 0049  
                                             end_of_initialization 166E  
                                                       ??_init_LCD 0002  
                                                    __Lmediumconst 7EC8  
                                          __size_of_initial_config 0046  
                                                  ___lldiv@divisor 0005  
                                                  ___lldiv@counter 000D  
                                                          postinc0 000FEE  
                                                          postinc2 000FDE  
                                                   __tdiv_to_l_@f1 0001  
                                                   __tdiv_to_l_@f2 0005  
                                                          strlen@s 0001  
                                                    ??__tdiv_to_l_ 0009  
                                                      ___fladd@grs 0044  
                                                    ___xxtofl@sign 0009  
                                                      ___fldiv@grs 003B  
                                                      ___fldiv@rem 0034  
                                                      ___flmul@grs 001C  
                                              __size_of__div_to_l_ 010C  
                                                   __end_of___flge 1E54  
                                                   __end_of___fleq 1C08  
                                                    ??_get_voltage 0045  
                                                   __end_of___wmul 16FE  
                                                   __end_of_fround 255C  
                                                   _light_the_bulb 163A  
                                                   __end_of_strlen 180E  
                                              start_initialization 1662  
                                                      __end_of_R_D 16B0  
                                                      __end_of_R_I 1694  
                                              __end_of__tdiv_to_l_ 215C  
                                               _turn_of_everything 1658  
                                                    ?_start_engine 0001  
                                              ?_turn_of_everything 0001  
                                                  ___llmod@divisor 0005  
                                                  ___llmod@counter 0009  
                                                         ??___flge 0009  
                                                         ??___fleq 0009  
                                                         ??___wmul 0005  
                                                         ??_fround 002C  
                                           __end_of_light_the_bulb 1644  
                                             ??_turn_of_everything 0001  
                                                    sprintf@tmpval 0063  
                                                         ??_strlen 0003  
                                                        ___fladd@a 0039  
                                                        ___fladd@b 0035  
                                                       fround@prec 0034  
                                                        ___fldiv@a 002C  
                                                        ___fldiv@b 0028  
                                                        ___flmul@a 0013  
                                                        ___flmul@b 000F  
                                              __end_of_get_voltage 19EA  
                                                        ___flsub@a 0049  
                                                        ___flsub@b 0045  
                                                    __pcstackBANK0 0080  
                                                __size_of___xxtofl 015C  
                                                   ??_start_engine 0001  
                                                __size_of_get_temp 00E6  
                                                      sprintf@flag 0069  
                                                      sprintf@eexp 0067  
                                                      sprintf@fval 006D  
                                                   _initial_config 1732  
                                                      sprintf@prec 0071  
                                                __size_of_init_LCD 0058  
                                     __size_of_print_message_onLCD 0064  
                                       print_message_onLCD@message 0005  
                                                 ___lwdiv@dividend 0006  
                                                    __pmediumconst 7EC8  
                                                         ?___fladd 0035  
                                                         ?___fldiv 0028  
                                                         ?___awdiv 0007  
                                                         ?___flneg 0001  
                                                         ?___awmod 0001  
                                                         ?___flmul 000F  
                                                         ?___flsub 0045  
                                                         ?___fltol 0031  
                                                         ?___lldiv 0001  
                                                         ?___llmod 0001  
                                                        __npowers_ 7EFD  
                                                         ?___lwdiv 0006  
                                                         ?___lwmod 0001  
                                                  ?_light_the_bulb 0001  
                                                      __tdiv_to_l_ 2046  
                                                     ??__div_to_l_ 0009  
                                                         ?_isdigit 0001  
                                                        _scale$836 002C  
                                                 ___lwdiv@quotient 000A  
                                                         ?_sprintf 004D  
                                                   __size_of_scale 0410  
                                           __end_of_initial_config 1778  
                                                   ___wmul@product 0005  
                                               __end_of__div_to_l_ 2046  
                                                        main@F2154 00A1  
                                                      _get_voltage 197A  
                                                ___wmul@multiplier 0001  
                                                        main@canal 00A0  
                                                        get_temp@r 0049  
                                                  ?_initial_config 0001  
                                                         __Hrparam 0000  
                                                         __Lrparam 0000  
                                                 __size_of___fladd 0344  
                                                 __size_of___fldiv 02C0  
                                                 __size_of___awdiv 0098  
                                                 __size_of___flneg 0034  
                                                 __size_of___awmod 0084  
                                                 __size_of___flmul 0382  
                                                 __size_of___flsub 004A  
                                                 __size_of___fltol 00D4  
                                                 __size_of___lldiv 0090  
                                             __end_of_start_engine 1658  
                                                 __size_of___llmod 0074  
                                                 __size_of___lwdiv 0060  
                                                 __size_of___lwmod 0050  
                                                      _isdigit$653 0002  
                                                       sprintf@val 005F  
                                                         ___xxtofl 215C  
                                                 __size_of_isdigit 0024  
                                                         _main$116 0094  
                                                  ___lwdiv@divisor 0008  
                                                  ___lwdiv@counter 000C  
                                                         __ptext10 18B6  
                                                         __ptext11 2046  
                                                         __ptext20 1B72  
                                                         __ptext12 1F3A  
                                                         __ptext21 1916  
                                                         __ptext13 16D4  
                                                         __ptext30 1E54  
                                                         __ptext22 17C2  
                                                         __ptext14 19EA  
                                                         __ptext31 215C  
                                                         __ptext23 1694  
                                                         __ptext15 1AE2  
                                                         __ptext32 2E0A  
                                                         __ptext24 1644  
                                                         __ptext16 1CA0  
                                                         __ptext33 2806  
                                                         __ptext25 163A  
                                                         __ptext17 1778  
                                                         __ptext34 2AC6  
                                                         __ptext26 1732  
                                                         __ptext18 16FE  
                                                         __ptext27 185E  
                                                         __ptext19 1D74  
                                                         __ptext28 1678  
                                                         __ptext29 197A  
                                                         __powers_ 7EC9  
                                                         _get_temp 1E54  
                                                 __size_of_sprintf 0A64  
                                                         _init_LCD 185E  
                                                    __size_of_main 02AA  
                                                         main@temp 009C  
                                                         main@volt 0098  
                                              _print_message_onLCD 1916  
                                                         isdigit@c 0003  
                                                         scale@scl 0030  
                                                        sprintf@ap 005D  
                                                 __tdiv_to_l_@exp1 0011  
                                                        sprintf@sp 004D  
                                                 __tdiv_to_l_@cntr 0010  
                                                 __tdiv_to_l_@quot 000C  
                                                 ___lwmod@dividend 0001  
                                                 ___lldiv@dividend 0001  
                                             ?_print_message_onLCD 0005  
                                                 ??_light_the_bulb 0001  
                                                     ?__tdiv_to_l_ 0001  
                                      __size_of_turn_of_everything 000A  
                                                         sprintf@c 0073  
                                                         sprintf@f 004F  
                                                 get_voltage@ac_in 0041  
                                                 ___lldiv@quotient 0009  
                                                  ___lwmod@divisor 0003  
                                                         strlen@cp 0003  
                                                  ___lwmod@counter 0005  
                                                    ___fladd@signs 0041  
                                                     ___fladd@aexp 0042  
                                                     ___fladd@bexp 0043  
                                            ??_print_message_onLCD 0007  
                                            __size_of_start_engine 000A  
                          __end_of_light_the_bulb_and_start_engine 164E  
                         __size_of_light_the_bulb_and_start_engine 000A  
                                ??_light_the_bulb_and_start_engine 0001  
                                 ?_light_the_bulb_and_start_engine 0001  
                                  _light_the_bulb_and_start_engine 1644  
