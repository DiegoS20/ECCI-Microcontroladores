

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Apr 04 10:48:18 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47  0000                     
    48                           ; Version 2.05
    49                           ; Generated 20/12/2018 GMT
    50                           ; 
    51                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F452 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     
    83                           	psect	mediumconst
    84  007EC8                     __pmediumconst:
    85                           	opt callstack 0
    86  007EC8  00                 	db	0
    87  007EC9                     __powers_:
    88                           	opt callstack 0
    89  007EC9  0000               	dw	0
    90  007ECB  3F80               	dw	16256
    91  007ECD  0000               	dw	0
    92  007ECF  4120               	dw	16672
    93  007ED1  0000               	dw	0
    94  007ED3  42C8               	dw	17096
    95  007ED5  0000               	dw	0
    96  007ED7  447A               	dw	17530
    97  007ED9  4000               	dw	16384
    98  007EDB  461C               	dw	17948
    99  007EDD  5000               	dw	20480
   100  007EDF  47C3               	dw	18371
   101  007EE1  2400               	dw	9216
   102  007EE3  4974               	dw	18804
   103  007EE5  9680               	dw	38528
   104  007EE7  4B18               	dw	19224
   105  007EE9  BC20               	dw	48160
   106  007EEB  4CBE               	dw	19646
   107  007EED  6B28               	dw	27432
   108  007EEF  4E6E               	dw	20078
   109  007EF1  02F9               	dw	761
   110  007EF3  5015               	dw	20501
   111  007EF5  78EC               	dw	30956
   112  007EF7  60AD               	dw	24749
   113  007EF9  F2CA               	dw	62154
   114  007EFB  7149               	dw	29001
   115  007EFD                     __end_of__powers_:
   116                           	opt callstack 0
   117  007EFD                     __npowers_:
   118                           	opt callstack 0
   119  007EFD  0000               	dw	0
   120  007EFF  3F80               	dw	16256
   121  007F01  CCCD               	dw	52429
   122  007F03  3DCC               	dw	15820
   123  007F05  D70A               	dw	55050
   124  007F07  3C23               	dw	15395
   125  007F09  126F               	dw	4719
   126  007F0B  3A83               	dw	14979
   127  007F0D  B717               	dw	46871
   128  007F0F  38D1               	dw	14545
   129  007F11  C5AC               	dw	50604
   130  007F13  3727               	dw	14119
   131  007F15  37BD               	dw	14269
   132  007F17  3586               	dw	13702
   133  007F19  BF95               	dw	49045
   134  007F1B  33D6               	dw	13270
   135  007F1D  CC77               	dw	52343
   136  007F1F  322B               	dw	12843
   137  007F21  705F               	dw	28767
   138  007F23  3089               	dw	12425
   139  007F25  E6FF               	dw	59135
   140  007F27  2EDB               	dw	11995
   141  007F29  E508               	dw	58632
   142  007F2B  1E3C               	dw	7740
   143  007F2D  4260               	dw	16992
   144  007F2F  0DA2               	dw	3490
   145  007F31                     __end_of__npowers_:
   146                           	opt callstack 0
   147  007F31                     _dpowers:
   148                           	opt callstack 0
   149  007F31  0001               	dw	1
   150  007F33  0000               	dw	0
   151  007F35  000A               	dw	10
   152  007F37  0000               	dw	0
   153  007F39  0064               	dw	100
   154  007F3B  0000               	dw	0
   155  007F3D  03E8               	dw	1000
   156  007F3F  0000               	dw	0
   157  007F41  2710               	dw	10000
   158  007F43  0000               	dw	0
   159  007F45  86A0               	dw	34464
   160  007F47  0001               	dw	1
   161  007F49  4240               	dw	16960
   162  007F4B  000F               	dw	15
   163  007F4D  9680               	dw	38528
   164  007F4F  0098               	dw	152
   165  007F51  E100               	dw	57600
   166  007F53  05F5               	dw	1525
   167  007F55  CA00               	dw	51712
   168  007F57  3B9A               	dw	15258
   169  007F59                     __end_of_dpowers:
   170                           	opt callstack 0
   171  0000                     _PORTD	set	3971
   172  0000                     _PORTC	set	3970
   173  0000                     _PORTB	set	3969
   174  0000                     _PORTA	set	3968
   175  0000                     _LATD	set	3980
   176  0000                     _LATC	set	3979
   177  0000                     _LATB	set	3978
   178  0000                     _LATA	set	3977
   179  0000                     _ADCON1	set	4033
   180  0000                     _TRISD	set	3989
   181  0000                     _TRISC	set	3988
   182  0000                     _TRISB	set	3987
   183  0000                     _TRISA	set	3986
   184  0000                     _ADRESL	set	4035
   185  0000                     _ADRESH	set	4036
   186  0000                     _ADCON0	set	4034
   187  0000                     _LC4	set	31836
   188  0000                     _LC3	set	31835
   189  0000                     _GO_DONE	set	32274
   190  007F59                     STR_4:
   191  007F59  54                 	db	84	;'T'
   192  007F5A  65                 	db	101	;'e'
   193  007F5B  6D                 	db	109	;'m'
   194  007F5C  70                 	db	112	;'p'
   195  007F5D  3A                 	db	58	;':'
   196  007F5E  20                 	db	32
   197  007F5F  25                 	db	37
   198  007F60  2E                 	db	46
   199  007F61  30                 	db	48	;'0'
   200  007F62  66                 	db	102	;'f'
   201  007F63  43                 	db	67	;'C'
   202  007F64  20                 	db	32
   203  007F65  20                 	db	32
   204  007F66  20                 	db	32
   205  007F67  20                 	db	32
   206  007F68  20                 	db	32
   207  007F69  20                 	db	32
   208  007F6A  20                 	db	32
   209  007F6B  00                 	db	0
   210  007F6C                     STR_3:
   211  007F6C  56                 	db	86	;'V'
   212  007F6D  6F                 	db	111	;'o'
   213  007F6E  6C                 	db	108	;'l'
   214  007F6F  74                 	db	116	;'t'
   215  007F70  61                 	db	97	;'a'
   216  007F71  6A                 	db	106	;'j'
   217  007F72  65                 	db	101	;'e'
   218  007F73  3A                 	db	58	;':'
   219  007F74  20                 	db	32
   220  007F75  25                 	db	37
   221  007F76  30                 	db	48	;'0'
   222  007F77  2E                 	db	46
   223  007F78  32                 	db	50	;'2'
   224  007F79  66                 	db	102	;'f'
   225  007F7A  56                 	db	86	;'V'
   226  007F7B  20                 	db	32
   227  007F7C  20                 	db	32
   228  007F7D  20                 	db	32
   229  007F7E  00                 	db	0
   230  007F7F                     STR_10:
   231  007F7F  20                 	db	32
   232  007F80  20                 	db	32
   233  007F81  20                 	db	32
   234  007F82  20                 	db	32
   235  007F83  20                 	db	32
   236  007F84  45                 	db	69	;'E'
   237  007F85  4C                 	db	76	;'L'
   238  007F86  20                 	db	32
   239  007F87  46                 	db	70	;'F'
   240  007F88  49                 	db	73	;'I'
   241  007F89  4E                 	db	78	;'N'
   242  007F8A  20                 	db	32
   243  007F8B  20                 	db	32
   244  007F8C  20                 	db	32
   245  007F8D  20                 	db	32
   246  007F8E  20                 	db	32
   247  007F8F  00                 	db	0
   248  007F90                     STR_7:
   249  007F90  20                 	db	32
   250  007F91  20                 	db	32
   251  007F92  20                 	db	32
   252  007F93  20                 	db	32
   253  007F94  20                 	db	32
   254  007F95  52                 	db	82	;'R'
   255  007F96  49                 	db	73	;'I'
   256  007F97  45                 	db	69	;'E'
   257  007F98  53                 	db	83	;'S'
   258  007F99  47                 	db	71	;'G'
   259  007F9A  4F                 	db	79	;'O'
   260  007F9B  20                 	db	32
   261  007F9C  20                 	db	32
   262  007F9D  20                 	db	32
   263  007F9E  20                 	db	32
   264  007F9F  20                 	db	32
   265  007FA0  00                 	db	0
   266  007FA1                     STR_6:
   267  007FA1  20                 	db	32
   268  007FA2  20                 	db	32
   269  007FA3  41                 	db	65	;'A'
   270  007FA4  4C                 	db	76	;'L'
   271  007FA5  54                 	db	84	;'T'
   272  007FA6  4F                 	db	79	;'O'
   273  007FA7  20                 	db	32
   274  007FA8  56                 	db	86	;'V'
   275  007FA9  4F                 	db	79	;'O'
   276  007FAA  4C                 	db	76	;'L'
   277  007FAB  54                 	db	84	;'T'
   278  007FAC  41                 	db	65	;'A'
   279  007FAD  4A                 	db	74	;'J'
   280  007FAE  45                 	db	69	;'E'
   281  007FAF  20                 	db	32
   282  007FB0  20                 	db	32
   283  007FB1  00                 	db	0
   284  007FB2                     STR_8:
   285  007FB2  20                 	db	32
   286  007FB3  44                 	db	68	;'D'
   287  007FB4  45                 	db	69	;'E'
   288  007FB5  20                 	db	32
   289  007FB6  44                 	db	68	;'D'
   290  007FB7  45                 	db	69	;'E'
   291  007FB8  53                 	db	83	;'S'
   292  007FB9  54                 	db	84	;'T'
   293  007FBA  52                 	db	82	;'R'
   294  007FBB  55                 	db	85	;'U'
   295  007FBC  43                 	db	67	;'C'
   296  007FBD  43                 	db	67	;'C'
   297  007FBE  49                 	db	73	;'I'
   298  007FBF  4F                 	db	79	;'O'
   299  007FC0  4E                 	db	78	;'N'
   300  007FC1  20                 	db	32
   301  007FC2  00                 	db	0
   302  007FC3                     STR_9:
   303  007FC3  20                 	db	32
   304  007FC4  20                 	db	32
   305  007FC5  20                 	db	32
   306  007FC6  20                 	db	32
   307  007FC7  20                 	db	32
   308  007FC8  4C                 	db	76	;'L'
   309  007FC9  4C                 	db	76	;'L'
   310  007FCA  45                 	db	69	;'E'
   311  007FCB  47                 	db	71	;'G'
   312  007FCC  4F                 	db	79	;'O'
   313  007FCD  20                 	db	32
   314  007FCE  20                 	db	32
   315  007FCF  20                 	db	32
   316  007FD0  20                 	db	32
   317  007FD1  20                 	db	32
   318  007FD2  00                 	db	0
   319  007FD3                     STR_5:
   320  007FD3  20                 	db	32
   321  007FD4  20                 	db	32
   322  007FD5  20                 	db	32
   323  007FD6  20                 	db	32
   324  007FD7  50                 	db	80	;'P'
   325  007FD8  45                 	db	69	;'E'
   326  007FD9  4C                 	db	76	;'L'
   327  007FDA  49                 	db	73	;'I'
   328  007FDB  47                 	db	71	;'G'
   329  007FDC  52                 	db	82	;'R'
   330  007FDD  4F                 	db	79	;'O'
   331  007FDE  20                 	db	32
   332  007FDF  20                 	db	32
   333  007FE0  20                 	db	32
   334  007FE1  00                 	db	0
   335  007FE2                     STR_2:
   336  007FE2  44                 	db	68	;'D'
   337  007FE3  69                 	db	105	;'i'
   338  007FE4  65                 	db	101	;'e'
   339  007FE5  67                 	db	103	;'g'
   340  007FE6  6F                 	db	111	;'o'
   341  007FE7  20                 	db	32
   342  007FE8  2D                 	db	45
   343  007FE9  20                 	db	32
   344  007FEA  38                 	db	56	;'8'
   345  007FEB  34                 	db	52	;'4'
   346  007FEC  30                 	db	48	;'0'
   347  007FED  31                 	db	49	;'1'
   348  007FEE  30                 	db	48	;'0'
   349  007FEF  00                 	db	0
   350  007FF0                     STR_1:
   351  007FF0  43                 	db	67	;'C'
   352  007FF1  4F                 	db	79	;'O'
   353  007FF2  4E                 	db	78	;'N'
   354  007FF3  56                 	db	86	;'V'
   355  007FF4  45                 	db	69	;'E'
   356  007FF5  52                 	db	82	;'R'
   357  007FF6  53                 	db	83	;'S'
   358  007FF7  4F                 	db	79	;'O'
   359  007FF8  52                 	db	82	;'R'
   360  007FF9  20                 	db	32
   361  007FFA  41                 	db	65	;'A'
   362  007FFB  44                 	db	68	;'D'
   363  007FFC  43                 	db	67	;'C'
   364  007FFD  00                 	db	0
   365                           
   366                           ; #config settings
   367  007FFE  00                 	db	0	; dummy byte at the end
   368  0000                     
   369                           	psect	cinit
   370  00166A                     __pcinit:
   371                           	opt callstack 0
   372  00166A                     start_initialization:
   373                           	opt callstack 0
   374  00166A                     __initialization:
   375                           	opt callstack 0
   376                           
   377                           ; Clear objects allocated to BANK0 (20 bytes)
   378  00166A  EE00  F0A1         	lfsr	0,__pbssBANK0
   379  00166E  0E14               	movlw	20
   380  001670                     clear_0:
   381  001670  6AEE               	clrf	postinc0,c
   382  001672  06E8               	decf	wreg,f,c
   383  001674  E1FD               	bnz	clear_0
   384  001676                     end_of_initialization:
   385                           	opt callstack 0
   386  001676                     __end_of__initialization:
   387                           	opt callstack 0
   388  001676  0E00               	movlw	low (__Lmediumconst shr (0+16))
   389  001678  6EF8               	movwf	tblptru,c
   390  00167A  0100               	movlb	0
   391  00167C  EFAE  F012         	goto	_main	;jump to C main() function
   392                           
   393                           	psect	bssBANK0
   394  0000A1                     __pbssBANK0:
   395                           	opt callstack 0
   396  0000A1                     	ds	20
   397                           
   398                           	psect	cstackBANK0
   399  000080                     __pcstackBANK0:
   400                           	opt callstack 0
   401  000080                     main@message:
   402                           	opt callstack 0
   403                           
   404                           ; 20 bytes @ 0x0
   405  000080                     	ds	20
   406  000094                     _main$114:
   407                           	opt callstack 0
   408                           
   409                           ; 2 bytes @ 0x14
   410  000094                     	ds	2
   411  000096                     main@in:
   412                           	opt callstack 0
   413                           
   414                           ; 2 bytes @ 0x16
   415  000096                     	ds	2
   416  000098                     main@volt:
   417                           	opt callstack 0
   418                           
   419                           ; 4 bytes @ 0x18
   420  000098                     	ds	4
   421  00009C                     main@temp:
   422                           	opt callstack 0
   423                           
   424                           ; 4 bytes @ 0x1C
   425  00009C                     	ds	4
   426  0000A0                     main@canal:
   427                           	opt callstack 0
   428                           
   429                           ; 1 bytes @ 0x20
   430  0000A0                     	ds	1
   431                           
   432                           	psect	cstackCOMRAM
   433  000001                     __pcstackCOMRAM:
   434                           	opt callstack 0
   435  000001                     ??_isdigit:
   436  000001                     ?_strlen:
   437                           	opt callstack 0
   438  000001                     ?___wmul:
   439                           	opt callstack 0
   440  000001                     ?___awmod:
   441                           	opt callstack 0
   442  000001                     ?___lwmod:
   443                           	opt callstack 0
   444  000001                     ?__tdiv_to_l_:
   445                           	opt callstack 0
   446  000001                     ?__div_to_l_:
   447                           	opt callstack 0
   448  000001                     ?___lldiv:
   449                           	opt callstack 0
   450  000001                     ?___flneg:
   451                           	opt callstack 0
   452  000001                     ?___llmod:
   453                           	opt callstack 0
   454  000001                     ?___xxtofl:
   455                           	opt callstack 0
   456  000001                     R_I@dato:
   457                           	opt callstack 0
   458  000001                     R_D@dato:
   459                           	opt callstack 0
   460  000001                     ___wmul@multiplier:
   461                           	opt callstack 0
   462  000001                     ___awmod@dividend:
   463                           	opt callstack 0
   464  000001                     ___lwmod@dividend:
   465                           	opt callstack 0
   466  000001                     strlen@s:
   467                           	opt callstack 0
   468  000001                     ___lldiv@dividend:
   469                           	opt callstack 0
   470  000001                     __div_to_l_@f1:
   471                           	opt callstack 0
   472  000001                     ___fleq@ff1:
   473                           	opt callstack 0
   474  000001                     ___flge@ff1:
   475                           	opt callstack 0
   476  000001                     ___flneg@f1:
   477                           	opt callstack 0
   478  000001                     __tdiv_to_l_@f1:
   479                           	opt callstack 0
   480  000001                     ___llmod@dividend:
   481                           	opt callstack 0
   482  000001                     ___xxtofl@val:
   483                           	opt callstack 0
   484                           
   485                           ; 4 bytes @ 0x0
   486  000001                     	ds	1
   487  000002                     ??_init_LCD:
   488  000002                     _isdigit$651:
   489                           	opt callstack 0
   490                           
   491                           ; 1 bytes @ 0x1
   492  000002                     	ds	1
   493  000003                     isdigit@c:
   494                           	opt callstack 0
   495  000003                     ___wmul@multiplicand:
   496                           	opt callstack 0
   497  000003                     ___awmod@divisor:
   498                           	opt callstack 0
   499  000003                     ___lwmod@divisor:
   500                           	opt callstack 0
   501  000003                     strlen@cp:
   502                           	opt callstack 0
   503                           
   504                           ; 2 bytes @ 0x2
   505  000003                     	ds	2
   506  000005                     ??___xxtofl:
   507  000005                     ___awmod@counter:
   508                           	opt callstack 0
   509  000005                     ___lwmod@counter:
   510                           	opt callstack 0
   511  000005                     print_message_onLCD@message:
   512                           	opt callstack 0
   513  000005                     ___wmul@product:
   514                           	opt callstack 0
   515  000005                     ___lldiv@divisor:
   516                           	opt callstack 0
   517  000005                     __div_to_l_@f2:
   518                           	opt callstack 0
   519  000005                     ___fleq@ff2:
   520                           	opt callstack 0
   521  000005                     ___flge@ff2:
   522                           	opt callstack 0
   523  000005                     __tdiv_to_l_@f2:
   524                           	opt callstack 0
   525  000005                     ___llmod@divisor:
   526                           	opt callstack 0
   527                           
   528                           ; 4 bytes @ 0x4
   529  000005                     	ds	1
   530  000006                     ?___lwdiv:
   531                           	opt callstack 0
   532  000006                     ___awmod@sign:
   533                           	opt callstack 0
   534  000006                     ___lwdiv@dividend:
   535                           	opt callstack 0
   536                           
   537                           ; 2 bytes @ 0x5
   538  000006                     	ds	1
   539  000007                     ??_print_message_onLCD:
   540  000007                     ?___awdiv:
   541                           	opt callstack 0
   542  000007                     ___awdiv@dividend:
   543                           	opt callstack 0
   544                           
   545                           ; 2 bytes @ 0x6
   546  000007                     	ds	1
   547  000008                     ___lwdiv@divisor:
   548                           	opt callstack 0
   549                           
   550                           ; 2 bytes @ 0x7
   551  000008                     	ds	1
   552  000009                     ??__tdiv_to_l_:
   553  000009                     ??___fleq:
   554  000009                     ??___flge:
   555  000009                     print_message_onLCD@i:
   556                           	opt callstack 0
   557  000009                     ___llmod@counter:
   558                           	opt callstack 0
   559  000009                     ___xxtofl@sign:
   560                           	opt callstack 0
   561  000009                     ___awdiv@divisor:
   562                           	opt callstack 0
   563  000009                     ___lldiv@quotient:
   564                           	opt callstack 0
   565  000009                     __div_to_l_@quot:
   566                           	opt callstack 0
   567                           
   568                           ; 4 bytes @ 0x8
   569  000009                     	ds	1
   570  00000A                     ___xxtofl@exp:
   571                           	opt callstack 0
   572  00000A                     ___lwdiv@quotient:
   573                           	opt callstack 0
   574                           
   575                           ; 2 bytes @ 0x9
   576  00000A                     	ds	1
   577  00000B                     ___awdiv@counter:
   578                           	opt callstack 0
   579  00000B                     ___xxtofl@arg:
   580                           	opt callstack 0
   581                           
   582                           ; 4 bytes @ 0xA
   583  00000B                     	ds	1
   584  00000C                     ___awdiv@sign:
   585                           	opt callstack 0
   586  00000C                     ___lwdiv@counter:
   587                           	opt callstack 0
   588  00000C                     __tdiv_to_l_@quot:
   589                           	opt callstack 0
   590                           
   591                           ; 4 bytes @ 0xB
   592  00000C                     	ds	1
   593  00000D                     ___lldiv@counter:
   594                           	opt callstack 0
   595  00000D                     __div_to_l_@cntr:
   596                           	opt callstack 0
   597  00000D                     ___awdiv@quotient:
   598                           	opt callstack 0
   599                           
   600                           ; 2 bytes @ 0xC
   601  00000D                     	ds	1
   602  00000E                     __div_to_l_@exp1:
   603                           	opt callstack 0
   604                           
   605                           ; 1 bytes @ 0xD
   606  00000E                     	ds	1
   607  00000F                     ?___flmul:
   608                           	opt callstack 0
   609  00000F                     ___flmul@b:
   610                           	opt callstack 0
   611                           
   612                           ; 4 bytes @ 0xE
   613  00000F                     	ds	1
   614  000010                     __tdiv_to_l_@cntr:
   615                           	opt callstack 0
   616                           
   617                           ; 1 bytes @ 0xF
   618  000010                     	ds	1
   619  000011                     __tdiv_to_l_@exp1:
   620                           	opt callstack 0
   621                           
   622                           ; 1 bytes @ 0x10
   623  000011                     	ds	2
   624  000013                     ___flmul@a:
   625                           	opt callstack 0
   626                           
   627                           ; 4 bytes @ 0x12
   628  000013                     	ds	4
   629  000017                     ??___flmul:
   630                           
   631                           ; 1 bytes @ 0x16
   632  000017                     	ds	4
   633  00001B                     ___flmul@sign:
   634                           	opt callstack 0
   635                           
   636                           ; 1 bytes @ 0x1A
   637  00001B                     	ds	1
   638  00001C                     ___flmul@grs:
   639                           	opt callstack 0
   640                           
   641                           ; 4 bytes @ 0x1B
   642  00001C                     	ds	4
   643  000020                     ___flmul@aexp:
   644                           	opt callstack 0
   645                           
   646                           ; 1 bytes @ 0x1F
   647  000020                     	ds	1
   648  000021                     ___flmul@bexp:
   649                           	opt callstack 0
   650                           
   651                           ; 1 bytes @ 0x20
   652  000021                     	ds	1
   653  000022                     ___flmul@prod:
   654                           	opt callstack 0
   655                           
   656                           ; 4 bytes @ 0x21
   657  000022                     	ds	4
   658  000026                     ___flmul@temp:
   659                           	opt callstack 0
   660                           
   661                           ; 2 bytes @ 0x25
   662  000026                     	ds	2
   663  000028                     ?___fldiv:
   664                           	opt callstack 0
   665  000028                     ?_fround:
   666                           	opt callstack 0
   667  000028                     ?_scale:
   668                           	opt callstack 0
   669  000028                     ___fldiv@b:
   670                           	opt callstack 0
   671                           
   672                           ; 4 bytes @ 0x27
   673  000028                     	ds	4
   674  00002C                     ___fldiv@a:
   675                           	opt callstack 0
   676  00002C                     _fround$833:
   677                           	opt callstack 0
   678  00002C                     _scale$834:
   679                           	opt callstack 0
   680                           
   681                           ; 4 bytes @ 0x2B
   682  00002C                     	ds	4
   683  000030                     ??___fldiv:
   684  000030                     scale@scl:
   685                           	opt callstack 0
   686  000030                     _fround$832:
   687                           	opt callstack 0
   688                           
   689                           ; 4 bytes @ 0x2F
   690  000030                     	ds	1
   691  000031                     ?___fltol:
   692                           	opt callstack 0
   693  000031                     ___fltol@f1:
   694                           	opt callstack 0
   695                           
   696                           ; 4 bytes @ 0x30
   697  000031                     	ds	3
   698  000034                     fround@prec:
   699                           	opt callstack 0
   700  000034                     ___fldiv@rem:
   701                           	opt callstack 0
   702                           
   703                           ; 4 bytes @ 0x33
   704  000034                     	ds	1
   705  000035                     ??___fltol:
   706  000035                     ?___fladd:
   707                           	opt callstack 0
   708  000035                     ___fladd@b:
   709                           	opt callstack 0
   710                           
   711                           ; 4 bytes @ 0x34
   712  000035                     	ds	3
   713  000038                     ___fldiv@sign:
   714                           	opt callstack 0
   715                           
   716                           ; 1 bytes @ 0x37
   717  000038                     	ds	1
   718  000039                     ___fltol@sign1:
   719                           	opt callstack 0
   720  000039                     ___fldiv@new_exp:
   721                           	opt callstack 0
   722  000039                     ___fladd@a:
   723                           	opt callstack 0
   724                           
   725                           ; 4 bytes @ 0x38
   726  000039                     	ds	1
   727  00003A                     ___fltol@exp1:
   728                           	opt callstack 0
   729                           
   730                           ; 1 bytes @ 0x39
   731  00003A                     	ds	1
   732  00003B                     ___fldiv@grs:
   733                           	opt callstack 0
   734                           
   735                           ; 4 bytes @ 0x3A
   736  00003B                     	ds	2
   737  00003D                     ??___fladd:
   738                           
   739                           ; 1 bytes @ 0x3C
   740  00003D                     	ds	2
   741  00003F                     ___fldiv@bexp:
   742                           	opt callstack 0
   743                           
   744                           ; 1 bytes @ 0x3E
   745  00003F                     	ds	1
   746  000040                     ___fldiv@aexp:
   747                           	opt callstack 0
   748                           
   749                           ; 1 bytes @ 0x3F
   750  000040                     	ds	1
   751  000041                     ?_get_voltage:
   752                           	opt callstack 0
   753  000041                     ___fladd@signs:
   754                           	opt callstack 0
   755  000041                     get_voltage@ac_in:
   756                           	opt callstack 0
   757                           
   758                           ; 2 bytes @ 0x40
   759  000041                     	ds	1
   760  000042                     ___fladd@aexp:
   761                           	opt callstack 0
   762                           
   763                           ; 1 bytes @ 0x41
   764  000042                     	ds	1
   765  000043                     ___fladd@bexp:
   766                           	opt callstack 0
   767                           
   768                           ; 1 bytes @ 0x42
   769  000043                     	ds	1
   770  000044                     ___fladd@grs:
   771                           	opt callstack 0
   772                           
   773                           ; 1 bytes @ 0x43
   774  000044                     	ds	1
   775  000045                     ?_get_temp:
   776                           	opt callstack 0
   777  000045                     ?___flsub:
   778                           	opt callstack 0
   779  000045                     get_temp@ac_in:
   780                           	opt callstack 0
   781  000045                     ___flsub@b:
   782                           	opt callstack 0
   783                           
   784                           ; 4 bytes @ 0x44
   785  000045                     	ds	4
   786  000049                     get_temp@r:
   787                           	opt callstack 0
   788  000049                     ___flsub@a:
   789                           	opt callstack 0
   790                           
   791                           ; 4 bytes @ 0x48
   792  000049                     	ds	4
   793  00004D                     ?_sprintf:
   794                           	opt callstack 0
   795  00004D                     sprintf@sp:
   796                           	opt callstack 0
   797                           
   798                           ; 2 bytes @ 0x4C
   799  00004D                     	ds	2
   800  00004F                     sprintf@f:
   801                           	opt callstack 0
   802                           
   803                           ; 2 bytes @ 0x4E
   804  00004F                     	ds	6
   805  000055                     ??_sprintf:
   806                           
   807                           ; 1 bytes @ 0x54
   808  000055                     	ds	4
   809  000059                     _sprintf$835:
   810                           	opt callstack 0
   811                           
   812                           ; 4 bytes @ 0x58
   813  000059                     	ds	4
   814  00005D                     sprintf@ap:
   815                           	opt callstack 0
   816                           
   817                           ; 2 bytes @ 0x5C
   818  00005D                     	ds	2
   819  00005F                     sprintf@val:
   820                           	opt callstack 0
   821                           
   822                           ; 4 bytes @ 0x5E
   823  00005F                     	ds	4
   824  000063                     sprintf@tmpval:
   825                           	opt callstack 0
   826                           
   827                           ; 4 bytes @ 0x62
   828  000063                     	ds	4
   829  000067                     sprintf@eexp:
   830                           	opt callstack 0
   831                           
   832                           ; 2 bytes @ 0x66
   833  000067                     	ds	2
   834  000069                     sprintf@flag:
   835                           	opt callstack 0
   836                           
   837                           ; 2 bytes @ 0x68
   838  000069                     	ds	2
   839  00006B                     sprintf@width:
   840                           	opt callstack 0
   841                           
   842                           ; 2 bytes @ 0x6A
   843  00006B                     	ds	2
   844  00006D                     sprintf@fval:
   845                           	opt callstack 0
   846                           
   847                           ; 4 bytes @ 0x6C
   848  00006D                     	ds	4
   849  000071                     sprintf@prec:
   850                           	opt callstack 0
   851                           
   852                           ; 2 bytes @ 0x70
   853  000071                     	ds	2
   854  000073                     sprintf@c:
   855                           	opt callstack 0
   856                           
   857                           ; 1 bytes @ 0x72
   858  000073                     	ds	1
   859  000074                     ??_main:
   860                           
   861                           ; 1 bytes @ 0x73
   862  000074                     	ds	2
   863                           
   864 ;;
   865 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   866 ;;
   867 ;; *************** function _main *****************
   868 ;; Defined at:
   869 ;;		line 35 in file "main.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;		None
   872 ;; Auto vars:     Size  Location     Type
   873 ;;  message        20    0[BANK0 ] unsigned char [20]
   874 ;;  in              2   22[BANK0 ] unsigned int 
   875 ;;  temp            4   28[BANK0 ] float 
   876 ;;  volt            4   24[BANK0 ] float 
   877 ;;  canal           1   32[BANK0 ] unsigned char 
   878 ;; Return value:  Size  Location     Type
   879 ;;                  1    wreg      void 
   880 ;; Registers used:
   881 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   882 ;; Tracked objects:
   883 ;;		On entry : 0/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   887 ;;      Params:         0       0       0       0       0       0       0
   888 ;;      Locals:         0      33       0       0       0       0       0
   889 ;;      Temps:          2       0       0       0       0       0       0
   890 ;;      Totals:         2      33       0       0       0       0       0
   891 ;;Total ram usage:       35 bytes
   892 ;; Hardware stack levels required when called:    3
   893 ;; This function calls:
   894 ;;		_R_I
   895 ;;		___flge
   896 ;;		_get_temp
   897 ;;		_get_voltage
   898 ;;		_init_LCD
   899 ;;		_initial_config
   900 ;;		_light_the_bulb
   901 ;;		_light_the_bulb_and_start_engine
   902 ;;		_print_message_onLCD
   903 ;;		_sprintf
   904 ;;		_start_engine
   905 ;;		_turn_of_everything
   906 ;; This function is called by:
   907 ;;		Startup code after reset
   908 ;; This function uses a non-reentrant model
   909 ;;
   910                           
   911                           	psect	text0
   912  00255C                     __ptext0:
   913                           	opt callstack 0
   914  00255C                     _main:
   915                           	opt callstack 0
   916  00255C  FFFF               	dw	65535	; assembler added errata NOP
   917                           
   918                           ;main.c: 36: initial_config();
   919                           
   920                           ;incstack = 0
   921  00255E  EC9D  F00B         	call	_initial_config	;wreg free
   922                           
   923                           ;main.c: 37: init_LCD();
   924  002562  EC2F  F00C         	call	_init_LCD	;wreg free
   925                           
   926                           ;main.c: 38: R_I(128);
   927  002566  0E80               	movlw	128
   928  002568  EC40  F00B         	call	_R_I
   929                           
   930                           ;main.c: 39: print_message_onLCD("CONVERSOR ADC");
   931  00256C  0EF0               	movlw	low STR_1
   932  00256E  6E05               	movwf	print_message_onLCD@message,c
   933  002570  0E7F               	movlw	high STR_1
   934  002572  6E06               	movwf	print_message_onLCD@message+1,c
   935  002574  EC8B  F00C         	call	_print_message_onLCD	;wreg free
   936                           
   937                           ;main.c: 41: R_I(192);
   938  002578  0EC0               	movlw	192
   939  00257A  EC40  F00B         	call	_R_I
   940                           
   941                           ;main.c: 42: print_message_onLCD("Diego - 84010");
   942  00257E  0EE2               	movlw	low STR_2
   943  002580  6E05               	movwf	print_message_onLCD@message,c
   944  002582  0E7F               	movlw	high STR_2
   945  002584  6E06               	movwf	print_message_onLCD@message+1,c
   946  002586  EC8B  F00C         	call	_print_message_onLCD	;wreg free
   947                           
   948                           ;main.c: 43: _delay((unsigned long)((3000)*(4000000/4000.0)));
   949  00258A  0E0C               	movlw	12
   950  00258C  6E75               	movwf	(??_main+1)& (0+255),c
   951  00258E  0E6C               	movlw	108
   952  002590  6E74               	movwf	??_main& (0+255),c
   953  002592  0EF3               	movlw	243
   954  002594                     u4437:
   955  002594  FFFF               	dw	65535	; errata NOP
   956  002596  2EE8               	decfsz	wreg,f,c
   957  002598  D7FD               	bra	u4437
   958  00259A  2E74               	decfsz	??_main& (0+255),f,c
   959  00259C  D7FB               	bra	u4437
   960  00259E  2E75               	decfsz	(??_main+1)& (0+255),f,c
   961  0025A0  D7F9               	bra	u4437
   962                           
   963                           ;main.c: 45: R_I(0X01);
   964  0025A2  0E01               	movlw	1
   965  0025A4  EC40  F00B         	call	_R_I
   966                           
   967                           ;main.c: 47: char canal = 0;
   968  0025A8  0E00               	movlw	0
   969  0025AA  0100               	movlb	0	; () banked
   970  0025AC  FFFF               	dw	65535	; assembler added errata NOP
   971  0025AE  6FA0               	movwf	main@canal& (0+255),b
   972                           
   973                           ; BSR set to: 0
   974                           ;main.c: 51: ADCON0 = canal ? 0B01001001 : 0B01000001;
   975  0025B0  51A0               	movf	main@canal& (0+255),w,b
   976  0025B2  A4D8               	btfss	status,2,c
   977  0025B4  D004               	goto	l3835
   978                           
   979                           ; BSR set to: 0
   980  0025B6  0E00               	movlw	0
   981  0025B8  6F95               	movwf	(_main$114+1)& (0+255),b
   982  0025BA  0E41               	movlw	65
   983  0025BC  D004               	goto	L1
   984  0025BE                     l3835:
   985  0025BE  FFFF               	dw	65535	; assembler added errata NOP
   986                           
   987                           ; BSR set to: 0
   988  0025C0  0E00               	movlw	0
   989  0025C2  6F95               	movwf	(_main$114+1)& (0+255),b
   990  0025C4  0E49               	movlw	73
   991  0025C6                     L1:
   992  0025C6  FFFF               	dw	65535	; assembler added errata NOP
   993  0025C8  6F94               	movwf	_main$114& (0+255),b
   994                           
   995                           ; BSR set to: 0
   996  0025CA  C094  FFC2         	movff	_main$114,4034	;volatile
   997                           
   998                           ; BSR set to: 0
   999                           ;main.c: 52: _delay((unsigned long)((20)*(4000000/4000000.0)));
  1000  0025CE  0E05               	movlw	5
  1001  0025D0                     u4447:
  1002  0025D0  FFFF               	dw	65535	; errata NOP
  1003  0025D2  2EE8               	decfsz	wreg,f,c
  1004  0025D4  D7FD               	bra	u4447
  1005                           
  1006                           ;main.c: 53: GO_DONE = 1;
  1007  0025D6  84C2               	bsf	4034,2,c	;volatile
  1008  0025D8                     l74:
  1009  0025D8  FFFF               	dw	65535	; assembler added errata NOP
  1010  0025DA  B4C2               	btfsc	4034,2,c	;volatile
  1011  0025DC  D7FD               	goto	l74
  1012                           
  1013                           ;main.c: 57: unsigned int in = (ADRESH<<8) | ADRESL;
  1014  0025DE  50C3               	movf	4035,w,c	;volatile
  1015  0025E0  CFC4 F074          	movff	4036,??_main	;volatile
  1016  0025E4  6A75               	clrf	(??_main+1)& (0+255),c
  1017  0025E6  C074  F075         	movff	??_main,??_main+1
  1018  0025EA  6A74               	clrf	??_main,c
  1019  0025EC  1074               	iorwf	??_main,w,c
  1020  0025EE  0100               	movlb	0	; () banked
  1021  0025F0  6F96               	movwf	main@in& (0+255),b
  1022  0025F2  5075               	movf	??_main+1,w,c
  1023  0025F4  6F97               	movwf	(main@in+1)& (0+255),b
  1024                           
  1025                           ; BSR set to: 0
  1026                           ;main.c: 58: _delay((unsigned long)((50)*(4000000/4000.0)));
  1027  0025F6  0E31               	movlw	49
  1028  0025F8  6E74               	movwf	??_main& (0+255),c
  1029  0025FA  0EBB               	movlw	187
  1030  0025FC                     u4457:
  1031  0025FC  FFFF               	dw	65535	; errata NOP
  1032  0025FE  2EE8               	decfsz	wreg,f,c
  1033  002600  D7FD               	bra	u4457
  1034  002602  2E74               	decfsz	??_main& (0+255),f,c
  1035  002604  D7FB               	bra	u4457
  1036                           
  1037                           ;main.c: 59: char message[20] = "";
  1038  002606  EE20  F080         	lfsr	2,main@message
  1039  00260A  0E13               	movlw	19
  1040  00260C                     u4351:
  1041  00260C  6ADE               	clrf	postinc2,c
  1042  00260E  06E8               	decf	wreg,f,c
  1043  002610  E2FD               	bc	u4351
  1044                           
  1045                           ;main.c: 60: if (!canal) {
  1046  002612  0100               	movlb	0	; () banked
  1047  002614  51A0               	movf	main@canal& (0+255),w,b
  1048  002616  A4D8               	btfss	status,2,c
  1049  002618  D024               	goto	l3857
  1050                           
  1051                           ; BSR set to: 0
  1052                           ;main.c: 61: volt = get_voltage(in);
  1053  00261A  C096  F041         	movff	main@in,get_voltage@ac_in
  1054  00261E  C097  F042         	movff	main@in+1,get_voltage@ac_in+1
  1055  002622  ECBD  F00C         	call	_get_voltage	;wreg free
  1056  002626  C041  F098         	movff	?_get_voltage,main@volt
  1057  00262A  C042  F099         	movff	?_get_voltage+1,main@volt+1
  1058  00262E  C043  F09A         	movff	?_get_voltage+2,main@volt+2
  1059  002632  C044  F09B         	movff	?_get_voltage+3,main@volt+3
  1060                           
  1061                           ;main.c: 62: R_I(128);
  1062  002636  0E80               	movlw	128
  1063  002638  EC40  F00B         	call	_R_I
  1064                           
  1065                           ;main.c: 63: sprintf(message, "Voltaje: %0.2fV   ", volt);
  1066  00263C  0E80               	movlw	low main@message
  1067  00263E  6E4D               	movwf	sprintf@sp,c
  1068  002640  0E00               	movlw	high main@message
  1069  002642  6E4E               	movwf	sprintf@sp+1,c
  1070  002644  0E6C               	movlw	low STR_3
  1071  002646  6E4F               	movwf	sprintf@f,c
  1072  002648  0E7F               	movlw	high STR_3
  1073  00264A  6E50               	movwf	sprintf@f+1,c
  1074  00264C  C098  F051         	movff	main@volt,?_sprintf+4
  1075  002650  C099  F052         	movff	main@volt+1,?_sprintf+5
  1076  002654  C09A  F053         	movff	main@volt+2,?_sprintf+6
  1077  002658  C09B  F054         	movff	main@volt+3,?_sprintf+7
  1078  00265C  ECCE  F01A         	call	_sprintf	;wreg free
  1079                           
  1080                           ;main.c: 64: } else {
  1081  002660  D024               	goto	l3863
  1082  002662                     l3857:
  1083  002662  FFFF               	dw	65535	; assembler added errata NOP
  1084                           
  1085                           ; BSR set to: 0
  1086                           ;main.c: 65: temp = get_temp(in);
  1087  002664  C096  F045         	movff	main@in,get_temp@ac_in
  1088  002668  C097  F046         	movff	main@in+1,get_temp@ac_in+1
  1089  00266C  EC2A  F00F         	call	_get_temp	;wreg free
  1090  002670  C045  F09C         	movff	?_get_temp,main@temp
  1091  002674  C046  F09D         	movff	?_get_temp+1,main@temp+1
  1092  002678  C047  F09E         	movff	?_get_temp+2,main@temp+2
  1093  00267C  C048  F09F         	movff	?_get_temp+3,main@temp+3
  1094                           
  1095                           ;main.c: 66: R_I(192);
  1096  002680  0EC0               	movlw	192
  1097  002682  EC40  F00B         	call	_R_I
  1098                           
  1099                           ;main.c: 67: sprintf(message, "Temp: %.0fC       ", temp);
  1100  002686  0E80               	movlw	low main@message
  1101  002688  6E4D               	movwf	sprintf@sp,c
  1102  00268A  0E00               	movlw	high main@message
  1103  00268C  6E4E               	movwf	sprintf@sp+1,c
  1104  00268E  0E59               	movlw	low STR_4
  1105  002690  6E4F               	movwf	sprintf@f,c
  1106  002692  0E7F               	movlw	high STR_4
  1107  002694  6E50               	movwf	sprintf@f+1,c
  1108  002696  C09C  F051         	movff	main@temp,?_sprintf+4
  1109  00269A  C09D  F052         	movff	main@temp+1,?_sprintf+5
  1110  00269E  C09E  F053         	movff	main@temp+2,?_sprintf+6
  1111  0026A2  C09F  F054         	movff	main@temp+3,?_sprintf+7
  1112  0026A6  ECCE  F01A         	call	_sprintf	;wreg free
  1113  0026AA                     l3863:
  1114  0026AA  FFFF               	dw	65535	; assembler added errata NOP
  1115                           
  1116                           ;main.c: 68: };main.c: 70: if (volt > 3.8) {
  1117  0026AC  0E33               	movlw	51
  1118  0026AE  6E01               	movwf	___flge@ff1,c
  1119  0026B0  0E33               	movlw	51
  1120  0026B2  6E02               	movwf	___flge@ff1+1,c
  1121  0026B4  0E73               	movlw	115
  1122  0026B6  6E03               	movwf	___flge@ff1+2,c
  1123  0026B8  0E40               	movlw	64
  1124  0026BA  6E04               	movwf	___flge@ff1+3,c
  1125  0026BC  C098  F005         	movff	main@volt,___flge@ff2
  1126  0026C0  C099  F006         	movff	main@volt+1,___flge@ff2+1
  1127  0026C4  C09A  F007         	movff	main@volt+2,___flge@ff2+2
  1128  0026C8  C09B  F008         	movff	main@volt+3,___flge@ff2+3
  1129  0026CC  ECBA  F00E         	call	___flge	;wreg free
  1130  0026D0  B0D8               	btfsc	status,0,c
  1131  0026D2  D015               	goto	l3873
  1132                           
  1133                           ;main.c: 71: R_I(128);
  1134  0026D4  0E80               	movlw	128
  1135  0026D6  EC40  F00B         	call	_R_I
  1136                           
  1137                           ;main.c: 72: print_message_onLCD("    PELIGRO   ");
  1138  0026DA  0ED3               	movlw	low STR_5
  1139  0026DC  6E05               	movwf	print_message_onLCD@message,c
  1140  0026DE  0E7F               	movlw	high STR_5
  1141  0026E0  6E06               	movwf	print_message_onLCD@message+1,c
  1142  0026E2  EC8B  F00C         	call	_print_message_onLCD	;wreg free
  1143                           
  1144                           ;main.c: 73: R_I(192);
  1145  0026E6  0EC0               	movlw	192
  1146  0026E8  EC40  F00B         	call	_R_I
  1147                           
  1148                           ;main.c: 74: print_message_onLCD("  ALTO VOLTAJE  ");
  1149  0026EC  0EA1               	movlw	low STR_6
  1150  0026EE  6E05               	movwf	print_message_onLCD@message,c
  1151  0026F0  0E7F               	movlw	high STR_6
  1152  0026F2  6E06               	movwf	print_message_onLCD@message+1,c
  1153  0026F4  EC8B  F00C         	call	_print_message_onLCD	;wreg free
  1154                           
  1155                           ;main.c: 75: light_the_bulb();
  1156  0026F8  EC21  F00B         	call	_light_the_bulb	;wreg free
  1157                           
  1158                           ;main.c: 76: } else if (volt <= 0.29 && temp >= 61) {
  1159  0026FC  D071               	goto	l3899
  1160  0026FE                     l3873:
  1161  0026FE  FFFF               	dw	65535	; assembler added errata NOP
  1162  002700  0EE1               	movlw	225
  1163  002702  6E01               	movwf	___flge@ff1,c
  1164  002704  0E7A               	movlw	122
  1165  002706  6E02               	movwf	___flge@ff1+1,c
  1166  002708  0E94               	movlw	148
  1167  00270A  6E03               	movwf	___flge@ff1+2,c
  1168  00270C  0E3E               	movlw	62
  1169  00270E  6E04               	movwf	___flge@ff1+3,c
  1170  002710  C098  F005         	movff	main@volt,___flge@ff2
  1171  002714  C099  F006         	movff	main@volt+1,___flge@ff2+1
  1172  002718  C09A  F007         	movff	main@volt+2,___flge@ff2+2
  1173  00271C  C09B  F008         	movff	main@volt+3,___flge@ff2+3
  1174  002720  ECBA  F00E         	call	___flge	;wreg free
  1175  002724  A0D8               	btfss	status,0,c
  1176  002726  D029               	goto	l3885
  1177  002728  C09C  F001         	movff	main@temp,___flge@ff1
  1178  00272C  C09D  F002         	movff	main@temp+1,___flge@ff1+1
  1179  002730  C09E  F003         	movff	main@temp+2,___flge@ff1+2
  1180  002734  C09F  F004         	movff	main@temp+3,___flge@ff1+3
  1181  002738  0E00               	movlw	0
  1182  00273A  6E05               	movwf	___flge@ff2,c
  1183  00273C  0E00               	movlw	0
  1184  00273E  6E06               	movwf	___flge@ff2+1,c
  1185  002740  0E74               	movlw	116
  1186  002742  6E07               	movwf	___flge@ff2+2,c
  1187  002744  0E42               	movlw	66
  1188  002746  6E08               	movwf	___flge@ff2+3,c
  1189  002748  ECBA  F00E         	call	___flge	;wreg free
  1190  00274C  A0D8               	btfss	status,0,c
  1191  00274E  D015               	goto	l3885
  1192                           
  1193                           ;main.c: 77: R_I(128);
  1194  002750  0E80               	movlw	128
  1195  002752  EC40  F00B         	call	_R_I
  1196                           
  1197                           ;main.c: 78: print_message_onLCD("     RIESGO     ");
  1198  002756  0E90               	movlw	low STR_7
  1199  002758  6E05               	movwf	print_message_onLCD@message,c
  1200  00275A  0E7F               	movlw	high STR_7
  1201  00275C  6E06               	movwf	print_message_onLCD@message+1,c
  1202  00275E  EC8B  F00C         	call	_print_message_onLCD	;wreg free
  1203                           
  1204                           ;main.c: 79: R_I(192);
  1205  002762  0EC0               	movlw	192
  1206  002764  EC40  F00B         	call	_R_I
  1207                           
  1208                           ;main.c: 80: print_message_onLCD(" DE DESTRUCCION ");
  1209  002768  0EB2               	movlw	low STR_8
  1210  00276A  6E05               	movwf	print_message_onLCD@message,c
  1211  00276C  0E7F               	movlw	high STR_8
  1212  00276E  6E06               	movwf	print_message_onLCD@message+1,c
  1213  002770  EC8B  F00C         	call	_print_message_onLCD	;wreg free
  1214                           
  1215                           ;main.c: 81: start_engine();
  1216  002774  EC2B  F00B         	call	_start_engine	;wreg free
  1217                           
  1218                           ;main.c: 82: } else if (temp < 5) {
  1219  002778  D033               	goto	l3899
  1220  00277A                     l3885:
  1221  00277A  FFFF               	dw	65535	; assembler added errata NOP
  1222  00277C  C09C  F001         	movff	main@temp,___flge@ff1
  1223  002780  C09D  F002         	movff	main@temp+1,___flge@ff1+1
  1224  002784  C09E  F003         	movff	main@temp+2,___flge@ff1+2
  1225  002788  C09F  F004         	movff	main@temp+3,___flge@ff1+3
  1226  00278C  0E00               	movlw	0
  1227  00278E  6E05               	movwf	___flge@ff2,c
  1228  002790  0E00               	movlw	0
  1229  002792  6E06               	movwf	___flge@ff2+1,c
  1230  002794  0EA0               	movlw	160
  1231  002796  6E07               	movwf	___flge@ff2+2,c
  1232  002798  0E40               	movlw	64
  1233  00279A  6E08               	movwf	___flge@ff2+3,c
  1234  00279C  ECBA  F00E         	call	___flge	;wreg free
  1235  0027A0  B0D8               	btfsc	status,0,c
  1236  0027A2  D015               	goto	l3895
  1237                           
  1238                           ;main.c: 83: R_I(128);
  1239  0027A4  0E80               	movlw	128
  1240  0027A6  EC40  F00B         	call	_R_I
  1241                           
  1242                           ;main.c: 84: print_message_onLCD("     LLEGO     ");
  1243  0027AA  0EC3               	movlw	low STR_9
  1244  0027AC  6E05               	movwf	print_message_onLCD@message,c
  1245  0027AE  0E7F               	movlw	high STR_9
  1246  0027B0  6E06               	movwf	print_message_onLCD@message+1,c
  1247  0027B2  EC8B  F00C         	call	_print_message_onLCD	;wreg free
  1248                           
  1249                           ;main.c: 85: R_I(192);
  1250  0027B6  0EC0               	movlw	192
  1251  0027B8  EC40  F00B         	call	_R_I
  1252                           
  1253                           ;main.c: 86: print_message_onLCD("     EL FIN     ");
  1254  0027BC  0E7F               	movlw	low STR_10
  1255  0027BE  6E05               	movwf	print_message_onLCD@message,c
  1256  0027C0  0E7F               	movlw	high STR_10
  1257  0027C2  6E06               	movwf	print_message_onLCD@message+1,c
  1258  0027C4  EC8B  F00C         	call	_print_message_onLCD	;wreg free
  1259                           
  1260                           ;main.c: 87: light_the_bulb_and_start_engine();
  1261  0027C8  EC26  F00B         	call	_light_the_bulb_and_start_engine	;wreg free
  1262                           
  1263                           ;main.c: 88: } else {
  1264  0027CC  D009               	goto	l3899
  1265  0027CE                     l3895:
  1266  0027CE  FFFF               	dw	65535	; assembler added errata NOP
  1267                           
  1268                           ;main.c: 89: print_message_onLCD(message);
  1269  0027D0  0E80               	movlw	low main@message
  1270  0027D2  6E05               	movwf	print_message_onLCD@message,c
  1271  0027D4  0E00               	movlw	high main@message
  1272  0027D6  6E06               	movwf	print_message_onLCD@message+1,c
  1273  0027D8  EC8B  F00C         	call	_print_message_onLCD	;wreg free
  1274                           
  1275                           ;main.c: 90: turn_of_everything();
  1276  0027DC  EC30  F00B         	call	_turn_of_everything	;wreg free
  1277  0027E0                     l3899:
  1278  0027E0  FFFF               	dw	65535	; assembler added errata NOP
  1279                           
  1280                           ;main.c: 91: };main.c: 93: _delay((unsigned long)((10)*(4000000/4000.0)));
  1281  0027E2  0E0A               	movlw	10
  1282  0027E4  6E74               	movwf	??_main& (0+255),c
  1283  0027E6  0EBE               	movlw	190
  1284  0027E8                     u4467:
  1285  0027E8  FFFF               	dw	65535	; errata NOP
  1286  0027EA  2EE8               	decfsz	wreg,f,c
  1287  0027EC  D7FD               	bra	u4467
  1288  0027EE  2E74               	decfsz	??_main& (0+255),f,c
  1289  0027F0  D7FB               	bra	u4467
  1290  0027F2  D000               	nop2	
  1291                           
  1292                           ;main.c: 94: canal = canal ? 0 : 1;
  1293  0027F4  0100               	movlb	0	; () banked
  1294  0027F6  51A0               	movf	main@canal& (0+255),w,b
  1295  0027F8  A4D8               	btfss	status,2,c
  1296  0027FA  D002               	goto	u4410
  1297  0027FC  0E01               	movlw	1
  1298  0027FE  D6D6               	goto	L2
  1299  002800                     u4410:
  1300  002800  FFFF               	dw	65535	; assembler added errata NOP
  1301  002802  0E00               	movlw	0
  1302  002804  D6D3               	goto	L2
  1303  002806                     __end_of_main:
  1304                           	opt callstack 0
  1305                           
  1306 ;; *************** function _turn_of_everything *****************
  1307 ;; Defined at:
  1308 ;;		line 169 in file "main.c"
  1309 ;; Parameters:    Size  Location     Type
  1310 ;;		None
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;		None
  1313 ;; Return value:  Size  Location     Type
  1314 ;;                  1    wreg      void 
  1315 ;; Registers used:
  1316 ;;		wreg, status,2
  1317 ;; Tracked objects:
  1318 ;;		On entry : 0/0
  1319 ;;		On exit  : 0/0
  1320 ;;		Unchanged: 0/0
  1321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1322 ;;      Params:         0       0       0       0       0       0       0
  1323 ;;      Locals:         0       0       0       0       0       0       0
  1324 ;;      Temps:          0       0       0       0       0       0       0
  1325 ;;      Totals:         0       0       0       0       0       0       0
  1326 ;;Total ram usage:        0 bytes
  1327 ;; Hardware stack levels used:    1
  1328 ;; This function calls:
  1329 ;;		Nothing
  1330 ;; This function is called by:
  1331 ;;		_main
  1332 ;; This function uses a non-reentrant model
  1333 ;;
  1334                           
  1335                           	psect	text1
  1336  001660                     __ptext1:
  1337                           	opt callstack 0
  1338  001660                     _turn_of_everything:
  1339                           	opt callstack 0
  1340  001660  FFFF               	dw	65535	; assembler added errata NOP
  1341                           
  1342                           ;main.c: 170: LATB = 0;
  1343                           
  1344                           ; BSR set to: 0
  1345                           ;incstack = 0
  1346  001662  0E00               	movlw	0
  1347  001664  6E8A               	movwf	3978,c	;volatile
  1348  001666  0012               	return		;funcret
  1349  001668  FFFF               	dw	65535	; errata NOP
  1350  00166A                     __end_of_turn_of_everything:
  1351                           	opt callstack 0
  1352                           
  1353 ;; *************** function _start_engine *****************
  1354 ;; Defined at:
  1355 ;;		line 177 in file "main.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;		None
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;		None
  1360 ;; Return value:  Size  Location     Type
  1361 ;;                  1    wreg      void 
  1362 ;; Registers used:
  1363 ;;		wreg, status,2
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1369 ;;      Params:         0       0       0       0       0       0       0
  1370 ;;      Locals:         0       0       0       0       0       0       0
  1371 ;;      Temps:          0       0       0       0       0       0       0
  1372 ;;      Totals:         0       0       0       0       0       0       0
  1373 ;;Total ram usage:        0 bytes
  1374 ;; Hardware stack levels used:    1
  1375 ;; This function calls:
  1376 ;;		Nothing
  1377 ;; This function is called by:
  1378 ;;		_main
  1379 ;; This function uses a non-reentrant model
  1380 ;;
  1381                           
  1382                           	psect	text2
  1383  001656                     __ptext2:
  1384                           	opt callstack 0
  1385  001656                     _start_engine:
  1386                           	opt callstack 0
  1387  001656  FFFF               	dw	65535	; assembler added errata NOP
  1388                           
  1389                           ;main.c: 178: LATB = 2;
  1390                           
  1391                           ;incstack = 0
  1392  001658  0E02               	movlw	2
  1393  00165A  6E8A               	movwf	3978,c	;volatile
  1394  00165C  0012               	return		;funcret
  1395  00165E  FFFF               	dw	65535	; errata NOP
  1396  001660                     __end_of_start_engine:
  1397                           	opt callstack 0
  1398                           
  1399 ;; *************** function _sprintf *****************
  1400 ;; Defined at:
  1401 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;  sp              2   76[COMRAM] PTR unsigned char 
  1404 ;;		 -> main@message(20), 
  1405 ;;  f               2   78[COMRAM] PTR const unsigned char 
  1406 ;;		 -> STR_4(19), STR_3(19), 
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;  fval            4  108[COMRAM] PTR const unsigned char 
  1409 ;;  tmpval          4   98[COMRAM] struct .
  1410 ;;  val             4   94[COMRAM] unsigned long 
  1411 ;;  cp              3    0        PTR const unsigned char 
  1412 ;;  prec            2  112[COMRAM] int 
  1413 ;;  width           2  106[COMRAM] int 
  1414 ;;  flag            2  104[COMRAM] unsigned short 
  1415 ;;  eexp            2  102[COMRAM] int 
  1416 ;;  ap              2   92[COMRAM] PTR void [1]
  1417 ;;		 -> ?_sprintf(2), 
  1418 ;;  len             2    0        unsigned int 
  1419 ;;  c               1  114[COMRAM] unsigned char 
  1420 ;;  d               1    0        unsigned char 
  1421 ;; Return value:  Size  Location     Type
  1422 ;;                  2   76[COMRAM] int 
  1423 ;; Registers used:
  1424 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1425 ;; Tracked objects:
  1426 ;;		On entry : 0/0
  1427 ;;		On exit  : 0/0
  1428 ;;		Unchanged: 0/0
  1429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1430 ;;      Params:         8       0       0       0       0       0       0
  1431 ;;      Locals:        27       0       0       0       0       0       0
  1432 ;;      Temps:          4       0       0       0       0       0       0
  1433 ;;      Totals:        39       0       0       0       0       0       0
  1434 ;;Total ram usage:       39 bytes
  1435 ;; Hardware stack levels used:    1
  1436 ;; Hardware stack levels required when called:    2
  1437 ;; This function calls:
  1438 ;;		___awdiv
  1439 ;;		___fladd
  1440 ;;		___fleq
  1441 ;;		___flge
  1442 ;;		___flmul
  1443 ;;		___flneg
  1444 ;;		___flsub
  1445 ;;		___fltol
  1446 ;;		___lldiv
  1447 ;;		___llmod
  1448 ;;		___wmul
  1449 ;;		___xxtofl
  1450 ;;		__div_to_l_
  1451 ;;		__tdiv_to_l_
  1452 ;;		_fround
  1453 ;;		_isdigit
  1454 ;;		_scale
  1455 ;; This function is called by:
  1456 ;;		_main
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text3
  1461  00359C                     __ptext3:
  1462                           	opt callstack 0
  1463  00359C                     _sprintf:
  1464                           	opt callstack 0
  1465  00359C  FFFF               	dw	65535	; assembler added errata NOP
  1466                           
  1467                           ;doprnt.c: 502: va_list ap;;doprnt.c: 507: char c;;doprnt.c: 509: int width;;doprnt.c: 5
      +                          12: int prec;;doprnt.c: 520: unsigned short flag;;doprnt.c: 527: char d;;doprnt.c: 528: 
      +                          double fval;;doprnt.c: 529: int eexp;;doprnt.c: 535: union {;doprnt.c: 536: unsigned lon
      +                          g vd;;doprnt.c: 537: double integ;;doprnt.c: 538: } tmpval;;doprnt.c: 540: unsigned long
      +                           val;;doprnt.c: 541: unsigned len;;doprnt.c: 542: const char * cp;;doprnt.c: 545: *ap = 
      +                          __va_start();
  1468                           
  1469                           ;incstack = 0
  1470  00359E  0E51               	movlw	low (?_sprintf+4)
  1471  0035A0  6E5D               	movwf	sprintf@ap,c
  1472  0035A2  0E00               	movlw	high (?_sprintf+4)
  1473  0035A4  6E5E               	movwf	sprintf@ap+1,c
  1474                           
  1475                           ;doprnt.c: 548: while((c = *f++)) {
  1476  0035A6  EFE8  F01F         	goto	l3797
  1477  0035AA                     l3505:
  1478  0035AA  FFFF               	dw	65535	; assembler added errata NOP
  1479                           
  1480                           ;doprnt.c: 550: if(c != '%')
  1481  0035AC  0E25               	movlw	37
  1482  0035AE  1873               	xorwf	sprintf@c,w,c
  1483  0035B0  B4D8               	btfsc	status,2,c
  1484  0035B2  D00B               	goto	l3511
  1485                           
  1486                           ;doprnt.c: 552: {;doprnt.c: 553: ((*sp++ = (c)));
  1487  0035B4  C04D  FFD9         	movff	sprintf@sp,fsr2l
  1488  0035B8  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  1489  0035BC  C073  FFDF         	movff	sprintf@c,indf2
  1490  0035C0                     l3509:
  1491  0035C0  FFFF               	dw	65535	; assembler added errata NOP
  1492  0035C2  4A4D               	infsnz	sprintf@sp,f,c
  1493  0035C4  2A4E               	incf	sprintf@sp+1,f,c
  1494                           
  1495                           ;doprnt.c: 554: continue;
  1496  0035C6  EFE8  F01F         	goto	l3797
  1497  0035CA                     l3511:
  1498  0035CA  FFFF               	dw	65535	; assembler added errata NOP
  1499                           
  1500                           ;doprnt.c: 555: };doprnt.c: 558: width = 0;
  1501  0035CC  0E00               	movlw	0
  1502  0035CE  6E6C               	movwf	sprintf@width+1,c
  1503  0035D0  0E00               	movlw	0
  1504  0035D2  6E6B               	movwf	sprintf@width,c
  1505                           
  1506                           ;doprnt.c: 560: flag = 0;
  1507  0035D4  0E00               	movlw	0
  1508  0035D6  6E6A               	movwf	sprintf@flag+1,c
  1509  0035D8  0E00               	movlw	0
  1510  0035DA  6E69               	movwf	sprintf@flag,c
  1511  0035DC  D004               	goto	l3517
  1512  0035DE                     l3513:
  1513  0035DE  FFFF               	dw	65535	; assembler added errata NOP
  1514                           
  1515                           ;doprnt.c: 592: flag |= 0x04;
  1516  0035E0  8469               	bsf	sprintf@flag,2,c
  1517                           
  1518                           ;doprnt.c: 593: f++;
  1519  0035E2  4A4F               	infsnz	sprintf@f,f,c
  1520  0035E4  2A50               	incf	sprintf@f+1,f,c
  1521  0035E6                     l3517:
  1522  0035E6  FFFF               	dw	65535	; assembler added errata NOP
  1523  0035E8  C04F  FFF6         	movff	sprintf@f,tblptrl
  1524  0035EC  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1525  0035F0                     	if	0	;tblptru may be non-zero
  1526  0035F0                     	endif
  1527  0035F0                     	if	0	;tblptru may be non-zero
  1528  0035F0                     	endif
  1529  0035F0  0008               	tblrd		*
  1530  0035F2  FFFF               	dw	65535	; errata NOP
  1531  0035F4  50F5               	movf	tablat,w,c
  1532                           
  1533                           ; Switch size 1, requested type "simple"
  1534                           ; Number of cases is 1, Range of values is 48 to 48
  1535                           ; switch strategies available:
  1536                           ; Name         Instructions Cycles
  1537                           ; simple_byte            4     3 (average)
  1538                           ;	Chosen strategy is simple_byte
  1539  0035F6  0A30               	xorlw	48	; case 48
  1540  0035F8  B4D8               	btfsc	status,2,c
  1541  0035FA  D7F1               	goto	l3513
  1542                           
  1543                           ;doprnt.c: 609: if(isdigit((unsigned)*f)) {
  1544  0035FC  C04F  FFF6         	movff	sprintf@f,tblptrl
  1545  003600  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1546  003604                     	if	0	;tblptru may be non-zero
  1547  003604                     	endif
  1548  003604                     	if	0	;tblptru may be non-zero
  1549  003604                     	endif
  1550  003604  0008               	tblrd		*
  1551  003606  FFFF               	dw	65535	; errata NOP
  1552  003608  50F5               	movf	tablat,w,c
  1553  00360A  EC5C  F00B         	call	_isdigit
  1554  00360E  A0D8               	btfss	status,0,c
  1555  003610  D035               	goto	u3840
  1556                           
  1557                           ;doprnt.c: 610: width = 0;
  1558  003612  0E00               	movlw	0
  1559  003614  6E6C               	movwf	sprintf@width+1,c
  1560  003616  0E00               	movlw	0
  1561  003618  6E6B               	movwf	sprintf@width,c
  1562  00361A                     l3523:
  1563  00361A  FFFF               	dw	65535	; assembler added errata NOP
  1564                           
  1565                           ;doprnt.c: 612: width *= 10;
  1566  00361C  C06B  F001         	movff	sprintf@width,___wmul@multiplier
  1567  003620  C06C  F002         	movff	sprintf@width+1,___wmul@multiplier+1
  1568  003624  0E00               	movlw	0
  1569  003626  6E04               	movwf	___wmul@multiplicand+1,c
  1570  003628  0E0A               	movlw	10
  1571  00362A  6E03               	movwf	___wmul@multiplicand,c
  1572  00362C  EC6E  F00B         	call	___wmul	;wreg free
  1573  003630  C001  F06B         	movff	?___wmul,sprintf@width
  1574  003634  C002  F06C         	movff	?___wmul+1,sprintf@width+1
  1575                           
  1576                           ;doprnt.c: 613: width += *f++ - '0';
  1577  003638  0ED0               	movlw	208
  1578  00363A  6E55               	movwf	??_sprintf& (0+255),c
  1579  00363C  0EFF               	movlw	255
  1580  00363E  6E56               	movwf	(??_sprintf+1)& (0+255),c
  1581  003640  C04F  FFF6         	movff	sprintf@f,tblptrl
  1582  003644  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1583  003648                     	if	0	;tblptru may be non-zero
  1584  003648                     	endif
  1585  003648                     	if	0	;tblptru may be non-zero
  1586  003648                     	endif
  1587  003648  0008               	tblrd		*
  1588  00364A  FFFF               	dw	65535	; errata NOP
  1589  00364C  50F5               	movf	tablat,w,c
  1590  00364E  6E57               	movwf	(??_sprintf+2)& (0+255),c
  1591  003650  6A58               	clrf	(??_sprintf+3)& (0+255),c
  1592  003652  5055               	movf	??_sprintf,w,c
  1593  003654  2657               	addwf	??_sprintf+2,f,c
  1594  003656  5056               	movf	??_sprintf+1,w,c
  1595  003658  2258               	addwfc	??_sprintf+3,f,c
  1596  00365A  5057               	movf	??_sprintf+2,w,c
  1597  00365C  266B               	addwf	sprintf@width,f,c
  1598  00365E  5058               	movf	??_sprintf+3,w,c
  1599  003660  226C               	addwfc	sprintf@width+1,f,c
  1600  003662  4A4F               	infsnz	sprintf@f,f,c
  1601  003664  2A50               	incf	sprintf@f+1,f,c
  1602                           
  1603                           ;doprnt.c: 614: } while(isdigit((unsigned)*f));
  1604  003666  C04F  FFF6         	movff	sprintf@f,tblptrl
  1605  00366A  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1606  00366E                     	if	0	;tblptru may be non-zero
  1607  00366E                     	endif
  1608  00366E                     	if	0	;tblptru may be non-zero
  1609  00366E                     	endif
  1610  00366E  0008               	tblrd		*
  1611  003670  FFFF               	dw	65535	; errata NOP
  1612  003672  50F5               	movf	tablat,w,c
  1613  003674  EC5C  F00B         	call	_isdigit
  1614  003678  B0D8               	btfsc	status,0,c
  1615  00367A  D7CF               	goto	l3523
  1616  00367C                     u3840:
  1617  00367C  FFFF               	dw	65535	; assembler added errata NOP
  1618                           
  1619                           ;doprnt.c: 620: };doprnt.c: 623: if(*f == '.') {
  1620  00367E  C04F  FFF6         	movff	sprintf@f,tblptrl
  1621  003682  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1622  003686                     	if	0	;tblptru may be non-zero
  1623  003686                     	endif
  1624  003686                     	if	0	;tblptru may be non-zero
  1625  003686                     	endif
  1626  003686  0008               	tblrd		*
  1627  003688  FFFF               	dw	65535	; errata NOP
  1628  00368A  50F5               	movf	tablat,w,c
  1629  00368C  0A2E               	xorlw	46
  1630  00368E  A4D8               	btfss	status,2,c
  1631  003690  D032               	goto	l3543
  1632                           
  1633                           ;doprnt.c: 624: flag |= 0x4000;
  1634  003692  8C6A               	bsf	sprintf@flag+1,6,c
  1635                           
  1636                           ;doprnt.c: 625: f++;
  1637  003694  4A4F               	infsnz	sprintf@f,f,c
  1638  003696  2A50               	incf	sprintf@f+1,f,c
  1639                           
  1640                           ;doprnt.c: 639: {;doprnt.c: 640: prec = 0;
  1641  003698  0E00               	movlw	0
  1642  00369A  6E72               	movwf	sprintf@prec+1,c
  1643  00369C  0E00               	movlw	0
  1644  00369E  6E71               	movwf	sprintf@prec,c
  1645                           
  1646                           ;doprnt.c: 641: while(isdigit((unsigned)*f))
  1647  0036A0  D01D               	goto	l3541
  1648  0036A2                     l3537:
  1649  0036A2  FFFF               	dw	65535	; assembler added errata NOP
  1650                           
  1651                           ;doprnt.c: 642: prec = prec*10 + *f++ - '0';
  1652  0036A4  C071  F001         	movff	sprintf@prec,___wmul@multiplier
  1653  0036A8  C072  F002         	movff	sprintf@prec+1,___wmul@multiplier+1
  1654  0036AC  0E00               	movlw	0
  1655  0036AE  6E04               	movwf	___wmul@multiplicand+1,c
  1656  0036B0  0E0A               	movlw	10
  1657  0036B2  6E03               	movwf	___wmul@multiplicand,c
  1658  0036B4  EC6E  F00B         	call	___wmul	;wreg free
  1659  0036B8  C04F  FFF6         	movff	sprintf@f,tblptrl
  1660  0036BC  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1661  0036C0                     	if	0	;tblptru may be non-zero
  1662  0036C0                     	endif
  1663  0036C0                     	if	0	;tblptru may be non-zero
  1664  0036C0                     	endif
  1665  0036C0  0008               	tblrd		*
  1666  0036C2  FFFF               	dw	65535	; errata NOP
  1667  0036C4  50F5               	movf	tablat,w,c
  1668  0036C6  2601               	addwf	?___wmul,f,c
  1669  0036C8  0E00               	movlw	0
  1670  0036CA  2202               	addwfc	?___wmul+1,f,c
  1671  0036CC  0ED0               	movlw	208
  1672  0036CE  2401               	addwf	?___wmul,w,c
  1673  0036D0  6E71               	movwf	sprintf@prec,c
  1674  0036D2  0EFF               	movlw	255
  1675  0036D4  2002               	addwfc	?___wmul+1,w,c
  1676  0036D6  6E72               	movwf	sprintf@prec+1,c
  1677  0036D8  4A4F               	infsnz	sprintf@f,f,c
  1678  0036DA  2A50               	incf	sprintf@f+1,f,c
  1679  0036DC                     l3541:
  1680  0036DC  FFFF               	dw	65535	; assembler added errata NOP
  1681  0036DE  C04F  FFF6         	movff	sprintf@f,tblptrl
  1682  0036E2  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1683  0036E6                     	if	0	;tblptru may be non-zero
  1684  0036E6                     	endif
  1685  0036E6                     	if	0	;tblptru may be non-zero
  1686  0036E6                     	endif
  1687  0036E6  0008               	tblrd		*
  1688  0036E8  FFFF               	dw	65535	; errata NOP
  1689  0036EA  50F5               	movf	tablat,w,c
  1690  0036EC  EC5C  F00B         	call	_isdigit
  1691  0036F0  A0D8               	btfss	status,0,c
  1692  0036F2  D00B               	goto	l3551
  1693  0036F4  D7D6               	goto	l3537
  1694  0036F6                     l3543:
  1695  0036F6  FFFF               	dw	65535	; assembler added errata NOP
  1696                           
  1697                           ;doprnt.c: 645: prec = 0;
  1698  0036F8  0E00               	movlw	0
  1699  0036FA  6E72               	movwf	sprintf@prec+1,c
  1700  0036FC  0E00               	movlw	0
  1701  0036FE  6E71               	movwf	sprintf@prec,c
  1702                           
  1703                           ;doprnt.c: 647: flag |= 0x1000;
  1704  003700  886A               	bsf	sprintf@flag+1,4,c
  1705  003702  D003               	goto	l3551
  1706  003704                     l3547:
  1707  003704  FFFF               	dw	65535	; assembler added errata NOP
  1708                           
  1709                           ;doprnt.c: 682: flag |= 0x400;
  1710  003706  846A               	bsf	sprintf@flag+1,2,c
  1711                           
  1712                           ;doprnt.c: 683: break;
  1713  003708  D015               	goto	l3553
  1714  00370A                     l3551:
  1715  00370A  FFFF               	dw	65535	; assembler added errata NOP
  1716  00370C  C04F  FFF6         	movff	sprintf@f,tblptrl
  1717  003710  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1718  003714  4A4F               	infsnz	sprintf@f,f,c
  1719  003716  2A50               	incf	sprintf@f+1,f,c
  1720  003718                     	if	0	;tblptru may be non-zero
  1721  003718                     	endif
  1722  003718                     	if	0	;tblptru may be non-zero
  1723  003718                     	endif
  1724  003718  0008               	tblrd		*
  1725  00371A  FFFF               	dw	65535	; errata NOP
  1726  00371C  CFF5 F073          	movff	tablat,sprintf@c
  1727  003720  5073               	movf	sprintf@c,w,c
  1728                           
  1729                           ; Switch size 1, requested type "simple"
  1730                           ; Number of cases is 2, Range of values is 0 to 102
  1731                           ; switch strategies available:
  1732                           ; Name         Instructions Cycles
  1733                           ; simple_byte            7     4 (average)
  1734                           ;	Chosen strategy is simple_byte
  1735  003722  0A00               	xorlw	0	; case 0
  1736  003724  B4D8               	btfsc	status,2,c
  1737  003726  EFF7  F01F         	goto	u4310
  1738  00372A  0A66               	xorlw	102	; case 102
  1739  00372C  B4D8               	btfsc	status,2,c
  1740  00372E  D7EA               	goto	l3547
  1741  003730  EFE8  F01F         	goto	l3797
  1742  003734                     l3553:
  1743  003734  FFFF               	dw	65535	; assembler added errata NOP
  1744                           
  1745                           ;doprnt.c: 844: if(flag & (0x700)) {
  1746  003736  0E07               	movlw	7
  1747  003738  146A               	andwf	sprintf@flag+1,w,c
  1748  00373A  B4D8               	btfsc	status,2,c
  1749  00373C  D38B               	goto	l3733
  1750                           
  1751                           ;doprnt.c: 846: if(flag & 0x1000)
  1752  00373E  A86A               	btfss	sprintf@flag+1,4,c
  1753  003740  D004               	goto	l3559
  1754                           
  1755                           ;doprnt.c: 848: prec = 6;
  1756  003742  0E00               	movlw	0
  1757  003744  6E72               	movwf	sprintf@prec+1,c
  1758  003746  0E06               	movlw	6
  1759  003748  6E71               	movwf	sprintf@prec,c
  1760  00374A                     l3559:
  1761  00374A  FFFF               	dw	65535	; assembler added errata NOP
  1762                           
  1763                           ;doprnt.c: 849: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1764  00374C  C05D  FFD9         	movff	sprintf@ap,fsr2l
  1765  003750  C05E  FFDA         	movff	sprintf@ap+1,fsr2h
  1766  003754  CFDE F06D          	movff	postinc2,sprintf@fval
  1767  003758  CFDE F06E          	movff	postinc2,sprintf@fval+1
  1768  00375C  CFDE F06F          	movff	postinc2,sprintf@fval+2
  1769  003760  CFDE F070          	movff	postinc2,sprintf@fval+3
  1770  003764  0E04               	movlw	4
  1771  003766  265D               	addwf	sprintf@ap,f,c
  1772  003768  0E00               	movlw	0
  1773  00376A  225E               	addwfc	sprintf@ap+1,f,c
  1774                           
  1775                           ;doprnt.c: 850: if(fval < 0.0) {
  1776  00376C  AE70               	btfss	sprintf@fval+3,7,c
  1777  00376E  D014               	goto	l3569
  1778                           
  1779                           ;doprnt.c: 851: fval = -fval;
  1780  003770  C06D  F001         	movff	sprintf@fval,___flneg@f1
  1781  003774  C06E  F002         	movff	sprintf@fval+1,___flneg@f1+1
  1782  003778  C06F  F003         	movff	sprintf@fval+2,___flneg@f1+2
  1783  00377C  C070  F004         	movff	sprintf@fval+3,___flneg@f1+3
  1784  003780  EC83  F00B         	call	___flneg	;wreg free
  1785  003784  C001  F06D         	movff	?___flneg,sprintf@fval
  1786  003788  C002  F06E         	movff	?___flneg+1,sprintf@fval+1
  1787  00378C  C003  F06F         	movff	?___flneg+2,sprintf@fval+2
  1788  003790  C004  F070         	movff	?___flneg+3,sprintf@fval+3
  1789                           
  1790                           ;doprnt.c: 852: flag |= 0x03;
  1791  003794  0E03               	movlw	3
  1792  003796  1269               	iorwf	sprintf@flag,f,c
  1793  003798                     l3569:
  1794  003798  FFFF               	dw	65535	; assembler added errata NOP
  1795                           
  1796                           ;doprnt.c: 853: };doprnt.c: 854: eexp = 0;
  1797  00379A  0E00               	movlw	0
  1798  00379C  6E68               	movwf	sprintf@eexp+1,c
  1799  00379E  0E00               	movlw	0
  1800  0037A0  6E67               	movwf	sprintf@eexp,c
  1801                           
  1802                           ;doprnt.c: 855: if( fval!=0) {
  1803  0037A2  C06D  F001         	movff	sprintf@fval,___fleq@ff1
  1804  0037A6  C06E  F002         	movff	sprintf@fval+1,___fleq@ff1+1
  1805  0037AA  C06F  F003         	movff	sprintf@fval+2,___fleq@ff1+2
  1806  0037AE  C070  F004         	movff	sprintf@fval+3,___fleq@ff1+3
  1807  0037B2  0E00               	movlw	0
  1808  0037B4  6E05               	movwf	___fleq@ff2,c
  1809  0037B6  0E00               	movlw	0
  1810  0037B8  6E06               	movwf	___fleq@ff2+1,c
  1811  0037BA  0E00               	movlw	0
  1812  0037BC  6E07               	movwf	___fleq@ff2+2,c
  1813  0037BE  0E00               	movlw	0
  1814  0037C0  6E08               	movwf	___fleq@ff2+3,c
  1815  0037C2  ECB9  F00D         	call	___fleq	;wreg free
  1816  0037C6  B0D8               	btfsc	status,0,c
  1817  0037C8  D081               	goto	l3597
  1818                           
  1819                           ;doprnt.c: 856: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
  1820  0037CA  346F               	rlcf	sprintf@fval+2,w,c
  1821  0037CC  3470               	rlcf	sprintf@fval+3,w,c
  1822  0037CE  0F82               	addlw	130
  1823  0037D0  6E67               	movwf	sprintf@eexp,c
  1824  0037D2  6A68               	clrf	sprintf@eexp+1,c
  1825  0037D4  0EFF               	movlw	255
  1826  0037D6  2268               	addwfc	sprintf@eexp+1,f,c
  1827                           
  1828                           ;doprnt.c: 857: eexp--;
  1829  0037D8  0667               	decf	sprintf@eexp,f,c
  1830  0037DA  A0D8               	btfss	status,0,c
  1831  0037DC  0668               	decf	sprintf@eexp+1,f,c
  1832                           
  1833                           ;doprnt.c: 858: eexp *= 3;
  1834  0037DE  C067  F001         	movff	sprintf@eexp,___wmul@multiplier
  1835  0037E2  C068  F002         	movff	sprintf@eexp+1,___wmul@multiplier+1
  1836  0037E6  0E00               	movlw	0
  1837  0037E8  6E04               	movwf	___wmul@multiplicand+1,c
  1838  0037EA  0E03               	movlw	3
  1839  0037EC  6E03               	movwf	___wmul@multiplicand,c
  1840  0037EE  EC6E  F00B         	call	___wmul	;wreg free
  1841  0037F2  C001  F067         	movff	?___wmul,sprintf@eexp
  1842  0037F6  C002  F068         	movff	?___wmul+1,sprintf@eexp+1
  1843                           
  1844                           ;doprnt.c: 859: eexp /= 10;
  1845  0037FA  C067  F007         	movff	sprintf@eexp,___awdiv@dividend
  1846  0037FE  C068  F008         	movff	sprintf@eexp+1,___awdiv@dividend+1
  1847  003802  0E00               	movlw	0
  1848  003804  6E0A               	movwf	___awdiv@divisor+1,c
  1849  003806  0E0A               	movlw	10
  1850  003808  6E09               	movwf	___awdiv@divisor,c
  1851  00380A  EC04  F00E         	call	___awdiv	;wreg free
  1852  00380E  C007  F067         	movff	?___awdiv,sprintf@eexp
  1853  003812  C008  F068         	movff	?___awdiv+1,sprintf@eexp+1
  1854                           
  1855                           ;doprnt.c: 860: if(eexp < 0)
  1856  003816  AE68               	btfss	sprintf@eexp+1,7,c
  1857  003818  D003               	goto	l3585
  1858                           
  1859                           ;doprnt.c: 861: eexp--;
  1860  00381A  0667               	decf	sprintf@eexp,f,c
  1861  00381C  A0D8               	btfss	status,0,c
  1862  00381E  0668               	decf	sprintf@eexp+1,f,c
  1863  003820                     l3585:
  1864  003820  FFFF               	dw	65535	; assembler added errata NOP
  1865                           
  1866                           ;doprnt.c: 865: tmpval.integ = scale(-eexp);
  1867  003822  5067               	movf	sprintf@eexp,w,c
  1868  003824  0800               	sublw	0
  1869  003826  ECC6  F018         	call	_scale
  1870  00382A  C028  F063         	movff	?_scale,sprintf@tmpval
  1871  00382E  C029  F064         	movff	?_scale+1,sprintf@tmpval+1
  1872  003832  C02A  F065         	movff	?_scale+2,sprintf@tmpval+2
  1873  003836  C02B  F066         	movff	?_scale+3,sprintf@tmpval+3
  1874                           
  1875                           ;doprnt.c: 866: tmpval.integ *= fval;
  1876  00383A  C063  F00F         	movff	sprintf@tmpval,___flmul@b
  1877  00383E  C064  F010         	movff	sprintf@tmpval+1,___flmul@b+1
  1878  003842  C065  F011         	movff	sprintf@tmpval+2,___flmul@b+2
  1879  003846  C066  F012         	movff	sprintf@tmpval+3,___flmul@b+3
  1880  00384A  C06D  F013         	movff	sprintf@fval,___flmul@a
  1881  00384E  C06E  F014         	movff	sprintf@fval+1,___flmul@a+1
  1882  003852  C06F  F015         	movff	sprintf@fval+2,___flmul@a+2
  1883  003856  C070  F016         	movff	sprintf@fval+3,___flmul@a+3
  1884  00385A  EC05  F017         	call	___flmul	;wreg free
  1885  00385E  C00F  F063         	movff	?___flmul,sprintf@tmpval
  1886  003862  C010  F064         	movff	?___flmul+1,sprintf@tmpval+1
  1887  003866  C011  F065         	movff	?___flmul+2,sprintf@tmpval+2
  1888  00386A  C012  F066         	movff	?___flmul+3,sprintf@tmpval+3
  1889                           
  1890                           ;doprnt.c: 867: if(tmpval.integ < 1.0)
  1891  00386E  C063  F001         	movff	sprintf@tmpval,___flge@ff1
  1892  003872  C064  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  1893  003876  C065  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  1894  00387A  C066  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  1895  00387E  0E00               	movlw	0
  1896  003880  6E05               	movwf	___flge@ff2,c
  1897  003882  0E00               	movlw	0
  1898  003884  6E06               	movwf	___flge@ff2+1,c
  1899  003886  0E80               	movlw	128
  1900  003888  6E07               	movwf	___flge@ff2+2,c
  1901  00388A  0E3F               	movlw	63
  1902  00388C  6E08               	movwf	___flge@ff2+3,c
  1903  00388E  ECBA  F00E         	call	___flge	;wreg free
  1904  003892  B0D8               	btfsc	status,0,c
  1905  003894  D004               	goto	l3593
  1906                           
  1907                           ;doprnt.c: 868: eexp--;
  1908  003896  0667               	decf	sprintf@eexp,f,c
  1909  003898  A0D8               	btfss	status,0,c
  1910  00389A  0668               	decf	sprintf@eexp+1,f,c
  1911  00389C  D017               	goto	l3597
  1912  00389E                     l3593:
  1913  00389E  FFFF               	dw	65535	; assembler added errata NOP
  1914                           
  1915                           ;doprnt.c: 869: else if(tmpval.integ >= 10.0)
  1916  0038A0  C063  F001         	movff	sprintf@tmpval,___flge@ff1
  1917  0038A4  C064  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  1918  0038A8  C065  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  1919  0038AC  C066  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  1920  0038B0  0E00               	movlw	0
  1921  0038B2  6E05               	movwf	___flge@ff2,c
  1922  0038B4  0E00               	movlw	0
  1923  0038B6  6E06               	movwf	___flge@ff2+1,c
  1924  0038B8  0E20               	movlw	32
  1925  0038BA  6E07               	movwf	___flge@ff2+2,c
  1926  0038BC  0E41               	movlw	65
  1927  0038BE  6E08               	movwf	___flge@ff2+3,c
  1928  0038C0  ECBA  F00E         	call	___flge	;wreg free
  1929  0038C4  A0D8               	btfss	status,0,c
  1930  0038C6  D002               	goto	l3597
  1931                           
  1932                           ;doprnt.c: 870: eexp++;
  1933  0038C8  4A67               	infsnz	sprintf@eexp,f,c
  1934  0038CA  2A68               	incf	sprintf@eexp+1,f,c
  1935  0038CC                     l3597:
  1936  0038CC  FFFF               	dw	65535	; assembler added errata NOP
  1937                           
  1938                           ;doprnt.c: 871: };doprnt.c: 1131: if(prec <= 12)
  1939  0038CE  BE72               	btfsc	sprintf@prec+1,7,c
  1940  0038D0  D006               	goto	u3940
  1941  0038D2  5072               	movf	sprintf@prec+1,w,c
  1942  0038D4  E122               	bnz	l3601
  1943  0038D6  0E0D               	movlw	13
  1944  0038D8  5C71               	subwf	sprintf@prec,w,c
  1945  0038DA  B0D8               	btfsc	status,0,c
  1946  0038DC  D01E               	goto	l3601
  1947  0038DE                     u3940:
  1948  0038DE  FFFF               	dw	65535	; assembler added errata NOP
  1949                           
  1950                           ;doprnt.c: 1132: fval += fround((unsigned int)prec);
  1951  0038E0  C06D  F035         	movff	sprintf@fval,___fladd@b
  1952  0038E4  C06E  F036         	movff	sprintf@fval+1,___fladd@b+1
  1953  0038E8  C06F  F037         	movff	sprintf@fval+2,___fladd@b+2
  1954  0038EC  C070  F038         	movff	sprintf@fval+3,___fladd@b+3
  1955  0038F0  5071               	movf	sprintf@prec,w,c
  1956  0038F2  EC5C  F011         	call	_fround
  1957  0038F6  C028  F039         	movff	?_fround,___fladd@a
  1958  0038FA  C029  F03A         	movff	?_fround+1,___fladd@a+1
  1959  0038FE  C02A  F03B         	movff	?_fround+2,___fladd@a+2
  1960  003902  C02B  F03C         	movff	?_fround+3,___fladd@a+3
  1961  003906  EC63  F015         	call	___fladd	;wreg free
  1962  00390A  C035  F06D         	movff	?___fladd,sprintf@fval
  1963  00390E  C036  F06E         	movff	?___fladd+1,sprintf@fval+1
  1964  003912  C037  F06F         	movff	?___fladd+2,sprintf@fval+2
  1965  003916  C038  F070         	movff	?___fladd+3,sprintf@fval+3
  1966  00391A                     l3601:
  1967  00391A  FFFF               	dw	65535	; assembler added errata NOP
  1968                           
  1969                           ;doprnt.c: 1135: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  1970  00391C  BE68               	btfsc	sprintf@eexp+1,7,c
  1971  00391E  D006               	goto	u3950
  1972  003920  5068               	movf	sprintf@eexp+1,w,c
  1973  003922  E131               	bnz	l3609
  1974  003924  0E0A               	movlw	10
  1975  003926  5C67               	subwf	sprintf@eexp,w,c
  1976  003928  B0D8               	btfsc	status,0,c
  1977  00392A  D02C               	goto	u3980
  1978  00392C                     u3950:
  1979  00392C  FFFF               	dw	65535	; assembler added errata NOP
  1980  00392E  C06D  F001         	movff	sprintf@fval,___fleq@ff1
  1981  003932  C06E  F002         	movff	sprintf@fval+1,___fleq@ff1+1
  1982  003936  C06F  F003         	movff	sprintf@fval+2,___fleq@ff1+2
  1983  00393A  C070  F004         	movff	sprintf@fval+3,___fleq@ff1+3
  1984  00393E  0E00               	movlw	0
  1985  003940  6E05               	movwf	___fleq@ff2,c
  1986  003942  0E00               	movlw	0
  1987  003944  6E06               	movwf	___fleq@ff2+1,c
  1988  003946  0E00               	movlw	0
  1989  003948  6E07               	movwf	___fleq@ff2+2,c
  1990  00394A  0E00               	movlw	0
  1991  00394C  6E08               	movwf	___fleq@ff2+3,c
  1992  00394E  ECB9  F00D         	call	___fleq	;wreg free
  1993  003952  B0D8               	btfsc	status,0,c
  1994  003954  D062               	goto	l3623
  1995  003956  C06D  F031         	movff	sprintf@fval,___fltol@f1
  1996  00395A  C06E  F032         	movff	sprintf@fval+1,___fltol@f1+1
  1997  00395E  C06F  F033         	movff	sprintf@fval+2,___fltol@f1+2
  1998  003962  C070  F034         	movff	sprintf@fval+3,___fltol@f1+3
  1999  003966  EC50  F00E         	call	___fltol	;wreg free
  2000  00396A  5031               	movf	?___fltol,w,c
  2001  00396C  1032               	iorwf	?___fltol+1,w,c
  2002  00396E  1033               	iorwf	?___fltol+2,w,c
  2003  003970  1034               	iorwf	?___fltol+3,w,c
  2004  003972  B4D8               	btfsc	status,2,c
  2005  003974  BE68               	btfsc	sprintf@eexp+1,7,c
  2006  003976  D051               	goto	l3623
  2007  003978  5068               	movf	sprintf@eexp+1,w,c
  2008  00397A  E104               	bnz	u3980
  2009  00397C  0E02               	movlw	2
  2010  00397E  5C67               	subwf	sprintf@eexp,w,c
  2011  003980  A0D8               	btfss	status,0,c
  2012  003982  D04B               	goto	l3623
  2013  003984                     u3980:
  2014  003984  FFFF               	dw	65535	; assembler added errata NOP
  2015  003986                     l3609:
  2016                           
  2017                           ;doprnt.c: 1139: if(tmpval.integ < 4.294967296){
  2018  003986  C063  F001         	movff	sprintf@tmpval,___flge@ff1
  2019  00398A  C064  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  2020  00398E  C065  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  2021  003992  C066  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  2022  003996  0E5F               	movlw	95
  2023  003998  6E05               	movwf	___flge@ff2,c
  2024  00399A  0E70               	movlw	112
  2025  00399C  6E06               	movwf	___flge@ff2+1,c
  2026  00399E  0E89               	movlw	137
  2027  0039A0  6E07               	movwf	___flge@ff2+2,c
  2028  0039A2  0E40               	movlw	64
  2029  0039A4  6E08               	movwf	___flge@ff2+3,c
  2030  0039A6  ECBA  F00E         	call	___flge	;wreg free
  2031  0039AA  B0D8               	btfsc	status,0,c
  2032  0039AC  D002               	goto	l3613
  2033                           
  2034                           ;doprnt.c: 1140: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2035  0039AE  0EF7               	movlw	247
  2036  0039B0  D002               	goto	L3
  2037  0039B2                     l3613:
  2038  0039B2  FFFF               	dw	65535	; assembler added errata NOP
  2039                           
  2040                           ;doprnt.c: 1142: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2041  0039B4  0EF8               	movlw	248
  2042  0039B6                     L3:
  2043  0039B6  FFFF               	dw	65535	; assembler added errata NOP
  2044  0039B8  2667               	addwf	sprintf@eexp,f,c
  2045  0039BA  0EFF               	movlw	255
  2046  0039BC  2268               	addwfc	sprintf@eexp+1,f,c
  2047                           
  2048                           ;doprnt.c: 1145: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  2049  0039BE  5067               	movf	sprintf@eexp,w,c
  2050  0039C0  ECC6  F018         	call	_scale
  2051  0039C4  C028  F063         	movff	?_scale,sprintf@tmpval
  2052  0039C8  C029  F064         	movff	?_scale+1,sprintf@tmpval+1
  2053  0039CC  C02A  F065         	movff	?_scale+2,sprintf@tmpval+2
  2054  0039D0  C02B  F066         	movff	?_scale+3,sprintf@tmpval+3
  2055  0039D4  C06D  F001         	movff	sprintf@fval,__div_to_l_@f1
  2056  0039D8  C06E  F002         	movff	sprintf@fval+1,__div_to_l_@f1+1
  2057  0039DC  C06F  F003         	movff	sprintf@fval+2,__div_to_l_@f1+2
  2058  0039E0  C070  F004         	movff	sprintf@fval+3,__div_to_l_@f1+3
  2059  0039E4  C063  F005         	movff	sprintf@tmpval,__div_to_l_@f2
  2060  0039E8  C064  F006         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  2061  0039EC  C065  F007         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  2062  0039F0  C066  F008         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  2063  0039F4  EC9D  F00F         	call	__div_to_l_	;wreg free
  2064  0039F8  C001  F05F         	movff	?__div_to_l_,sprintf@val
  2065  0039FC  C002  F060         	movff	?__div_to_l_+1,sprintf@val+1
  2066  003A00  C003  F061         	movff	?__div_to_l_+2,sprintf@val+2
  2067  003A04  C004  F062         	movff	?__div_to_l_+3,sprintf@val+3
  2068                           
  2069                           ;doprnt.c: 1148: fval = 0.0;
  2070  003A08  0E00               	movlw	0
  2071  003A0A  6E6D               	movwf	sprintf@fval,c
  2072  003A0C  0E00               	movlw	0
  2073  003A0E  6E6E               	movwf	sprintf@fval+1,c
  2074  003A10  0E00               	movlw	0
  2075  003A12  6E6F               	movwf	sprintf@fval+2,c
  2076  003A14  0E00               	movlw	0
  2077  003A16  6E70               	movwf	sprintf@fval+3,c
  2078                           
  2079                           ;doprnt.c: 1149: } else {
  2080  003A18  D03C               	goto	l3627
  2081  003A1A                     l3623:
  2082  003A1A  FFFF               	dw	65535	; assembler added errata NOP
  2083                           
  2084                           ;doprnt.c: 1150: val = (unsigned long)fval;
  2085  003A1C  C06D  F031         	movff	sprintf@fval,___fltol@f1
  2086  003A20  C06E  F032         	movff	sprintf@fval+1,___fltol@f1+1
  2087  003A24  C06F  F033         	movff	sprintf@fval+2,___fltol@f1+2
  2088  003A28  C070  F034         	movff	sprintf@fval+3,___fltol@f1+3
  2089  003A2C  EC50  F00E         	call	___fltol	;wreg free
  2090  003A30  C031  F05F         	movff	?___fltol,sprintf@val
  2091  003A34  C032  F060         	movff	?___fltol+1,sprintf@val+1
  2092  003A38  C033  F061         	movff	?___fltol+2,sprintf@val+2
  2093  003A3C  C034  F062         	movff	?___fltol+3,sprintf@val+3
  2094                           
  2095                           ;doprnt.c: 1151: fval -= (double)val;
  2096  003A40  C06D  F045         	movff	sprintf@fval,___flsub@b
  2097  003A44  C06E  F046         	movff	sprintf@fval+1,___flsub@b+1
  2098  003A48  C06F  F047         	movff	sprintf@fval+2,___flsub@b+2
  2099  003A4C  C070  F048         	movff	sprintf@fval+3,___flsub@b+3
  2100  003A50  C05F  F001         	movff	sprintf@val,___xxtofl@val
  2101  003A54  C060  F002         	movff	sprintf@val+1,___xxtofl@val+1
  2102  003A58  C061  F003         	movff	sprintf@val+2,___xxtofl@val+2
  2103  003A5C  C062  F004         	movff	sprintf@val+3,___xxtofl@val+3
  2104  003A60  0E00               	movlw	0
  2105  003A62  ECAE  F010         	call	___xxtofl
  2106  003A66  C001  F049         	movff	?___xxtofl,___flsub@a
  2107  003A6A  C002  F04A         	movff	?___xxtofl+1,___flsub@a+1
  2108  003A6E  C003  F04B         	movff	?___xxtofl+2,___flsub@a+2
  2109  003A72  C004  F04C         	movff	?___xxtofl+3,___flsub@a+3
  2110  003A76  ECBC  F00B         	call	___flsub	;wreg free
  2111  003A7A  C045  F06D         	movff	?___flsub,sprintf@fval
  2112  003A7E  C046  F06E         	movff	?___flsub+1,sprintf@fval+1
  2113  003A82  C047  F06F         	movff	?___flsub+2,sprintf@fval+2
  2114  003A86  C048  F070         	movff	?___flsub+3,sprintf@fval+3
  2115                           
  2116                           ;doprnt.c: 1152: eexp = 0;
  2117  003A8A  0E00               	movlw	0
  2118  003A8C  6E68               	movwf	sprintf@eexp+1,c
  2119  003A8E  0E00               	movlw	0
  2120  003A90  6E67               	movwf	sprintf@eexp,c
  2121  003A92                     l3627:
  2122  003A92  FFFF               	dw	65535	; assembler added errata NOP
  2123                           
  2124                           ;doprnt.c: 1153: };doprnt.c: 1155: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  2125  003A94  0E01               	movlw	1
  2126  003A96  6E73               	movwf	sprintf@c,c
  2127  003A98                     l3633:
  2128  003A98  FFFF               	dw	65535	; assembler added errata NOP
  2129                           
  2130                           ;doprnt.c: 1156: if(val < dpowers[c])
  2131  003A9A  5073               	movf	sprintf@c,w,c
  2132  003A9C  0D04               	mullw	4
  2133  003A9E  0E31               	movlw	low _dpowers
  2134  003AA0  24F3               	addwf	prodl,w,c
  2135  003AA2  6EF6               	movwf	tblptrl,c
  2136  003AA4  0E7F               	movlw	high _dpowers
  2137  003AA6  20F4               	addwfc	prodh,w,c
  2138  003AA8  6EF7               	movwf	tblptrh,c
  2139  003AAA                     	if	0	;There are less than 3 active tblptr bytes
  2140  003AAA                     	endif
  2141  003AAA  0009               	tblrd		*+
  2142  003AAC  FFFF               	dw	65535	; errata NOP
  2143  003AAE  50F5               	movf	tablat,w,c
  2144  003AB0  5C5F               	subwf	sprintf@val,w,c
  2145  003AB2  0009               	tblrd		*+
  2146  003AB4  FFFF               	dw	65535	; errata NOP
  2147  003AB6  50F5               	movf	tablat,w,c
  2148  003AB8  5860               	subwfb	sprintf@val+1,w,c
  2149  003ABA  0009               	tblrd		*+
  2150  003ABC  FFFF               	dw	65535	; errata NOP
  2151  003ABE  50F5               	movf	tablat,w,c
  2152  003AC0  5861               	subwfb	sprintf@val+2,w,c
  2153  003AC2  0009               	tblrd		*+
  2154  003AC4  FFFF               	dw	65535	; errata NOP
  2155  003AC6  50F5               	movf	tablat,w,c
  2156  003AC8  5862               	subwfb	sprintf@val+3,w,c
  2157  003ACA  A0D8               	btfss	status,0,c
  2158  003ACC  D005               	goto	u4010
  2159  003ACE  2A73               	incf	sprintf@c,f,c
  2160  003AD0  0E0A               	movlw	10
  2161  003AD2  1873               	xorwf	sprintf@c,w,c
  2162  003AD4  A4D8               	btfss	status,2,c
  2163  003AD6  D7E0               	goto	l3633
  2164  003AD8                     u4010:
  2165  003AD8  FFFF               	dw	65535	; assembler added errata NOP
  2166                           
  2167                           ;doprnt.c: 1161: width -= prec + c + eexp;
  2168  003ADA  5073               	movf	sprintf@c,w,c
  2169  003ADC  2471               	addwf	sprintf@prec,w,c
  2170  003ADE  6E55               	movwf	??_sprintf& (0+255),c
  2171  003AE0  0E00               	movlw	0
  2172  003AE2  2072               	addwfc	sprintf@prec+1,w,c
  2173  003AE4  6E56               	movwf	(??_sprintf+1)& (0+255),c
  2174  003AE6  5067               	movf	sprintf@eexp,w,c
  2175  003AE8  2655               	addwf	??_sprintf,f,c
  2176  003AEA  5068               	movf	sprintf@eexp+1,w,c
  2177  003AEC  2256               	addwfc	??_sprintf+1,f,c
  2178  003AEE  5055               	movf	??_sprintf,w,c
  2179  003AF0  5E6B               	subwf	sprintf@width,f,c
  2180  003AF2  5056               	movf	??_sprintf+1,w,c
  2181  003AF4  5A6C               	subwfb	sprintf@width+1,f,c
  2182                           
  2183                           ;doprnt.c: 1162: if(;doprnt.c: 1166: prec)
  2184  003AF6  5071               	movf	sprintf@prec,w,c
  2185  003AF8  1072               	iorwf	sprintf@prec+1,w,c
  2186  003AFA  B4D8               	btfsc	status,2,c
  2187  003AFC  D003               	goto	l3645
  2188                           
  2189                           ;doprnt.c: 1167: width--;
  2190  003AFE  066B               	decf	sprintf@width,f,c
  2191  003B00  A0D8               	btfss	status,0,c
  2192  003B02  066C               	decf	sprintf@width+1,f,c
  2193  003B04                     l3645:
  2194  003B04  FFFF               	dw	65535	; assembler added errata NOP
  2195                           
  2196                           ;doprnt.c: 1168: if(flag & 0x03)
  2197  003B06  0E03               	movlw	3
  2198  003B08  1469               	andwf	sprintf@flag,w,c
  2199  003B0A  6E55               	movwf	??_sprintf& (0+255),c
  2200  003B0C  0E00               	movlw	0
  2201  003B0E  146A               	andwf	sprintf@flag+1,w,c
  2202  003B10  6E56               	movwf	(??_sprintf+1)& (0+255),c
  2203  003B12  5055               	movf	??_sprintf,w,c
  2204  003B14  1056               	iorwf	??_sprintf+1,w,c
  2205  003B16  B4D8               	btfsc	status,2,c
  2206  003B18  D003               	goto	l3649
  2207                           
  2208                           ;doprnt.c: 1169: width--;
  2209  003B1A  066B               	decf	sprintf@width,f,c
  2210  003B1C  A0D8               	btfss	status,0,c
  2211  003B1E  066C               	decf	sprintf@width+1,f,c
  2212  003B20                     l3649:
  2213  003B20  FFFF               	dw	65535	; assembler added errata NOP
  2214                           
  2215                           ;doprnt.c: 1172: if(flag & 0x04) {
  2216  003B22  A469               	btfss	sprintf@flag,2,c
  2217  003B24  D034               	goto	l3671
  2218                           
  2219                           ;doprnt.c: 1176: if(flag & 0x03)
  2220  003B26  0E03               	movlw	3
  2221  003B28  1469               	andwf	sprintf@flag,w,c
  2222  003B2A  6E55               	movwf	??_sprintf& (0+255),c
  2223  003B2C  0E00               	movlw	0
  2224  003B2E  146A               	andwf	sprintf@flag+1,w,c
  2225  003B30  6E56               	movwf	(??_sprintf+1)& (0+255),c
  2226  003B32  5055               	movf	??_sprintf,w,c
  2227  003B34  1056               	iorwf	??_sprintf+1,w,c
  2228  003B36  B4D8               	btfsc	status,2,c
  2229  003B38  D015               	goto	l3663
  2230                           
  2231                           ;doprnt.c: 1178: ((*sp++ = ('-')));
  2232  003B3A  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2233  003B3E  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2234  003B42  0E2D               	movlw	45
  2235  003B44  6EDF               	movwf	indf2,c
  2236  003B46  4A4D               	infsnz	sprintf@sp,f,c
  2237  003B48  2A4E               	incf	sprintf@sp+1,f,c
  2238  003B4A  D00C               	goto	l3663
  2239  003B4C                     l3657:
  2240  003B4C  FFFF               	dw	65535	; assembler added errata NOP
  2241                           
  2242                           ;doprnt.c: 1188: ((*sp++ = ('0')));
  2243  003B4E  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2244  003B52  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2245  003B56  0E30               	movlw	48
  2246  003B58  6EDF               	movwf	indf2,c
  2247  003B5A  4A4D               	infsnz	sprintf@sp,f,c
  2248  003B5C  2A4E               	incf	sprintf@sp+1,f,c
  2249                           
  2250                           ;doprnt.c: 1189: width--;
  2251  003B5E  066B               	decf	sprintf@width,f,c
  2252  003B60  A0D8               	btfss	status,0,c
  2253  003B62  066C               	decf	sprintf@width+1,f,c
  2254  003B64                     l3663:
  2255  003B64  FFFF               	dw	65535	; assembler added errata NOP
  2256  003B66  BE6C               	btfsc	sprintf@width+1,7,c
  2257  003B68  D07B               	goto	l3687
  2258  003B6A  506C               	movf	sprintf@width+1,w,c
  2259  003B6C  E1EF               	bnz	l3657
  2260  003B6E  046B               	decf	sprintf@width,w,c
  2261  003B70  A0D8               	btfss	status,0,c
  2262  003B72  D076               	goto	l3687
  2263  003B74  D7EB               	goto	l3657
  2264  003B76                     l3665:
  2265  003B76  FFFF               	dw	65535	; assembler added errata NOP
  2266                           
  2267                           ;doprnt.c: 1200: ((*sp++ = (' ')));
  2268  003B78  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2269  003B7C  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2270  003B80  0E20               	movlw	32
  2271  003B82  6EDF               	movwf	indf2,c
  2272  003B84  4A4D               	infsnz	sprintf@sp,f,c
  2273  003B86  2A4E               	incf	sprintf@sp+1,f,c
  2274                           
  2275                           ;doprnt.c: 1201: width--;
  2276  003B88  066B               	decf	sprintf@width,f,c
  2277  003B8A  A0D8               	btfss	status,0,c
  2278  003B8C  066C               	decf	sprintf@width+1,f,c
  2279  003B8E                     l3671:
  2280  003B8E  FFFF               	dw	65535	; assembler added errata NOP
  2281  003B90  BE6C               	btfsc	sprintf@width+1,7,c
  2282  003B92  D005               	goto	u4070
  2283  003B94  506C               	movf	sprintf@width+1,w,c
  2284  003B96  E1EF               	bnz	l3665
  2285  003B98  046B               	decf	sprintf@width,w,c
  2286  003B9A  B0D8               	btfsc	status,0,c
  2287  003B9C  D7EC               	goto	l3665
  2288  003B9E                     u4070:
  2289  003B9E  FFFF               	dw	65535	; assembler added errata NOP
  2290                           
  2291                           ;doprnt.c: 1202: };doprnt.c: 1207: if(flag & 0x03)
  2292  003BA0  0E03               	movlw	3
  2293  003BA2  1469               	andwf	sprintf@flag,w,c
  2294  003BA4  6E55               	movwf	??_sprintf& (0+255),c
  2295  003BA6  0E00               	movlw	0
  2296  003BA8  146A               	andwf	sprintf@flag+1,w,c
  2297  003BAA  6E56               	movwf	(??_sprintf+1)& (0+255),c
  2298  003BAC  5055               	movf	??_sprintf,w,c
  2299  003BAE  1056               	iorwf	??_sprintf+1,w,c
  2300  003BB0  B4D8               	btfsc	status,2,c
  2301  003BB2  D056               	goto	l3687
  2302                           
  2303                           ;doprnt.c: 1209: ((*sp++ = ('-')));
  2304  003BB4  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2305  003BB8  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2306  003BBC  0E2D               	movlw	45
  2307  003BBE  FFFF               	dw	65535	; assembler added errata NOP
  2308  003BC0  6EDF               	movwf	indf2,c
  2309  003BC2  4A4D               	infsnz	sprintf@sp,f,c
  2310  003BC4  2A4E               	incf	sprintf@sp+1,f,c
  2311  003BC6  D04C               	goto	l3687
  2312  003BC8                     l3679:
  2313  003BC8  FFFF               	dw	65535	; assembler added errata NOP
  2314                           
  2315                           ;doprnt.c: 1219: {;doprnt.c: 1220: tmpval.vd = val/dpowers[c];
  2316  003BCA  C05F  F001         	movff	sprintf@val,___lldiv@dividend
  2317  003BCE  C060  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  2318  003BD2  C061  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  2319  003BD6  C062  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  2320  003BDA  5073               	movf	sprintf@c,w,c
  2321  003BDC  0D04               	mullw	4
  2322  003BDE  0E31               	movlw	low _dpowers
  2323  003BE0  24F3               	addwf	prodl,w,c
  2324  003BE2  6EF6               	movwf	tblptrl,c
  2325  003BE4  0E7F               	movlw	high _dpowers
  2326  003BE6  20F4               	addwfc	prodh,w,c
  2327  003BE8  6EF7               	movwf	tblptrh,c
  2328  003BEA                     	if	0	;There are less than 3 active tblptr bytes
  2329  003BEA                     	endif
  2330  003BEA  0009               	tblrd		*+
  2331  003BEC  FFFF               	dw	65535	; errata NOP
  2332  003BEE  CFF5 F005          	movff	tablat,___lldiv@divisor
  2333  003BF2  0009               	tblrd		*+
  2334  003BF4  FFFF               	dw	65535	; errata NOP
  2335  003BF6  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2336  003BFA  0009               	tblrd		*+
  2337  003BFC  FFFF               	dw	65535	; errata NOP
  2338  003BFE  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2339  003C02  000A               	tblrd		*-
  2340  003C04  FFFF               	dw	65535	; errata NOP
  2341  003C06  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2342  003C0A  EC71  F00D         	call	___lldiv	;wreg free
  2343  003C0E  C001  F063         	movff	?___lldiv,sprintf@tmpval
  2344  003C12  C002  F064         	movff	?___lldiv+1,sprintf@tmpval+1
  2345  003C16  C003  F065         	movff	?___lldiv+2,sprintf@tmpval+2
  2346  003C1A  C004  F066         	movff	?___lldiv+3,sprintf@tmpval+3
  2347                           
  2348                           ;doprnt.c: 1221: tmpval.vd %= 10;
  2349  003C1E  C063  F001         	movff	sprintf@tmpval,___llmod@dividend
  2350  003C22  C064  F002         	movff	sprintf@tmpval+1,___llmod@dividend+1
  2351  003C26  C065  F003         	movff	sprintf@tmpval+2,___llmod@dividend+2
  2352  003C2A  C066  F004         	movff	sprintf@tmpval+3,___llmod@dividend+3
  2353  003C2E  0E0A               	movlw	10
  2354  003C30  6E05               	movwf	___llmod@divisor,c
  2355  003C32  0E00               	movlw	0
  2356  003C34  6E06               	movwf	___llmod@divisor+1,c
  2357  003C36  0E00               	movlw	0
  2358  003C38  6E07               	movwf	___llmod@divisor+2,c
  2359  003C3A  0E00               	movlw	0
  2360  003C3C  6E08               	movwf	___llmod@divisor+3,c
  2361  003C3E  ECF5  F00C         	call	___llmod	;wreg free
  2362  003C42  C001  F063         	movff	?___llmod,sprintf@tmpval
  2363  003C46  C002  F064         	movff	?___llmod+1,sprintf@tmpval+1
  2364  003C4A  C003  F065         	movff	?___llmod+2,sprintf@tmpval+2
  2365  003C4E  C004  F066         	movff	?___llmod+3,sprintf@tmpval+3
  2366                           
  2367                           ;doprnt.c: 1222: ((*sp++ = ('0' + tmpval.vd)));
  2368  003C52  5063               	movf	sprintf@tmpval,w,c
  2369  003C54  0F30               	addlw	48
  2370  003C56  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2371  003C5A  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2372  003C5E  D7AF               	goto	L4
  2373  003C60                     l3687:
  2374  003C60  FFFF               	dw	65535	; assembler added errata NOP
  2375  003C62  0673               	decf	sprintf@c,f,c
  2376  003C64  2873               	incf	sprintf@c,w,c
  2377  003C66  B4D8               	btfsc	status,2,c
  2378  003C68  D00D               	goto	l3695
  2379  003C6A  D7AE               	goto	l3679
  2380  003C6C                     l3689:
  2381  003C6C  FFFF               	dw	65535	; assembler added errata NOP
  2382                           
  2383                           ;doprnt.c: 1227: ((*sp++ = ('0')));
  2384  003C6E  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2385  003C72  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2386  003C76  0E30               	movlw	48
  2387  003C78  6EDF               	movwf	indf2,c
  2388  003C7A  4A4D               	infsnz	sprintf@sp,f,c
  2389  003C7C  2A4E               	incf	sprintf@sp+1,f,c
  2390                           
  2391                           ;doprnt.c: 1228: eexp--;
  2392  003C7E  0667               	decf	sprintf@eexp,f,c
  2393  003C80  A0D8               	btfss	status,0,c
  2394  003C82  0668               	decf	sprintf@eexp+1,f,c
  2395  003C84                     l3695:
  2396  003C84  FFFF               	dw	65535	; assembler added errata NOP
  2397  003C86  BE68               	btfsc	sprintf@eexp+1,7,c
  2398  003C88  D005               	goto	u4100
  2399  003C8A  5068               	movf	sprintf@eexp+1,w,c
  2400  003C8C  E1EF               	bnz	l3689
  2401  003C8E  0467               	decf	sprintf@eexp,w,c
  2402  003C90  B0D8               	btfsc	status,0,c
  2403  003C92  D7EC               	goto	l3689
  2404  003C94                     u4100:
  2405  003C94  FFFF               	dw	65535	; assembler added errata NOP
  2406                           
  2407                           ;doprnt.c: 1229: };doprnt.c: 1230: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
  2408  003C96  BE72               	btfsc	sprintf@prec+1,7,c
  2409  003C98  D009               	goto	l224
  2410  003C9A  5072               	movf	sprintf@prec+1,w,c
  2411  003C9C  E104               	bnz	u4110
  2412  003C9E  0E09               	movlw	9
  2413  003CA0  5C71               	subwf	sprintf@prec,w,c
  2414  003CA2  A0D8               	btfss	status,0,c
  2415  003CA4  D003               	goto	l224
  2416  003CA6                     u4110:
  2417                           
  2418                           ;doprnt.c: 1231: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2419  003CA6  0E08               	movlw	8
  2420  003CA8  6E73               	movwf	sprintf@c,c
  2421  003CAA  D003               	goto	l3701
  2422  003CAC                     l224:
  2423  003CAC  FFFF               	dw	65535	; assembler added errata NOP
  2424                           
  2425                           ;doprnt.c: 1232: else;doprnt.c: 1233: c = (char)prec;
  2426  003CAE  C071  F073         	movff	sprintf@prec,sprintf@c
  2427  003CB2                     l3701:
  2428  003CB2  FFFF               	dw	65535	; assembler added errata NOP
  2429                           
  2430                           ;doprnt.c: 1234: prec -= (int)c;
  2431  003CB4  5073               	movf	sprintf@c,w,c
  2432  003CB6  5E71               	subwf	sprintf@prec,f,c
  2433  003CB8  0E00               	movlw	0
  2434  003CBA  5A72               	subwfb	sprintf@prec+1,f,c
  2435                           
  2436                           ;doprnt.c: 1238: if(c)
  2437  003CBC  5073               	movf	sprintf@c,w,c
  2438  003CBE  B4D8               	btfsc	status,2,c
  2439  003CC0  D008               	goto	l3709
  2440                           
  2441                           ;doprnt.c: 1240: ((*sp++ = ('.')));
  2442  003CC2  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2443  003CC6  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2444  003CCA  0E2E               	movlw	46
  2445  003CCC  6EDF               	movwf	indf2,c
  2446  003CCE  4A4D               	infsnz	sprintf@sp,f,c
  2447  003CD0  2A4E               	incf	sprintf@sp+1,f,c
  2448  003CD2                     l3709:
  2449  003CD2  FFFF               	dw	65535	; assembler added errata NOP
  2450                           
  2451                           ;doprnt.c: 1246: val = (unsigned long)(fval * scale((signed char)c));
  2452  003CD4  5073               	movf	sprintf@c,w,c
  2453  003CD6  ECC6  F018         	call	_scale
  2454  003CDA  C028  F059         	movff	?_scale,_sprintf$835
  2455  003CDE  C029  F05A         	movff	?_scale+1,_sprintf$835+1
  2456  003CE2  C02A  F05B         	movff	?_scale+2,_sprintf$835+2
  2457  003CE6  C02B  F05C         	movff	?_scale+3,_sprintf$835+3
  2458                           
  2459                           ;doprnt.c: 1246: val = (unsigned long)(fval * scale((signed char)c));
  2460  003CEA  C06D  F013         	movff	sprintf@fval,___flmul@a
  2461  003CEE  C06E  F014         	movff	sprintf@fval+1,___flmul@a+1
  2462  003CF2  C06F  F015         	movff	sprintf@fval+2,___flmul@a+2
  2463  003CF6  C070  F016         	movff	sprintf@fval+3,___flmul@a+3
  2464  003CFA  C059  F00F         	movff	_sprintf$835,___flmul@b
  2465  003CFE  C05A  F010         	movff	_sprintf$835+1,___flmul@b+1
  2466  003D02  C05B  F011         	movff	_sprintf$835+2,___flmul@b+2
  2467  003D06  C05C  F012         	movff	_sprintf$835+3,___flmul@b+3
  2468  003D0A  EC05  F017         	call	___flmul	;wreg free
  2469  003D0E  C00F  F031         	movff	?___flmul,___fltol@f1
  2470  003D12  C010  F032         	movff	?___flmul+1,___fltol@f1+1
  2471  003D16  C011  F033         	movff	?___flmul+2,___fltol@f1+2
  2472  003D1A  C012  F034         	movff	?___flmul+3,___fltol@f1+3
  2473  003D1E  EC50  F00E         	call	___fltol	;wreg free
  2474  003D22  C031  F05F         	movff	?___fltol,sprintf@val
  2475  003D26  C032  F060         	movff	?___fltol+1,sprintf@val+1
  2476  003D2A  C033  F061         	movff	?___fltol+2,sprintf@val+2
  2477  003D2E  C034  F062         	movff	?___fltol+3,sprintf@val+3
  2478                           
  2479                           ;doprnt.c: 1247: while(c--) {
  2480  003D32  D078               	goto	l3723
  2481  003D34                     l3713:
  2482  003D34  FFFF               	dw	65535	; assembler added errata NOP
  2483                           
  2484                           ;doprnt.c: 1248: tmpval.vd = val/dpowers[c];
  2485  003D36  C05F  F001         	movff	sprintf@val,___lldiv@dividend
  2486  003D3A  C060  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  2487  003D3E  C061  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  2488  003D42  C062  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  2489  003D46  5073               	movf	sprintf@c,w,c
  2490  003D48  0D04               	mullw	4
  2491  003D4A  0E31               	movlw	low _dpowers
  2492  003D4C  24F3               	addwf	prodl,w,c
  2493  003D4E  6EF6               	movwf	tblptrl,c
  2494  003D50  0E7F               	movlw	high _dpowers
  2495  003D52  20F4               	addwfc	prodh,w,c
  2496  003D54  6EF7               	movwf	tblptrh,c
  2497  003D56                     	if	0	;There are less than 3 active tblptr bytes
  2498  003D56                     	endif
  2499  003D56  0009               	tblrd		*+
  2500  003D58  FFFF               	dw	65535	; errata NOP
  2501  003D5A  CFF5 F005          	movff	tablat,___lldiv@divisor
  2502  003D5E  0009               	tblrd		*+
  2503  003D60  FFFF               	dw	65535	; errata NOP
  2504  003D62  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2505  003D66  0009               	tblrd		*+
  2506  003D68  FFFF               	dw	65535	; errata NOP
  2507  003D6A  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2508  003D6E  000A               	tblrd		*-
  2509  003D70  FFFF               	dw	65535	; errata NOP
  2510  003D72  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2511  003D76  EC71  F00D         	call	___lldiv	;wreg free
  2512  003D7A  C001  F063         	movff	?___lldiv,sprintf@tmpval
  2513  003D7E  C002  F064         	movff	?___lldiv+1,sprintf@tmpval+1
  2514  003D82  C003  F065         	movff	?___lldiv+2,sprintf@tmpval+2
  2515  003D86  C004  F066         	movff	?___lldiv+3,sprintf@tmpval+3
  2516                           
  2517                           ;doprnt.c: 1249: tmpval.vd %= 10;
  2518  003D8A  C063  F001         	movff	sprintf@tmpval,___llmod@dividend
  2519  003D8E  C064  F002         	movff	sprintf@tmpval+1,___llmod@dividend+1
  2520  003D92  C065  F003         	movff	sprintf@tmpval+2,___llmod@dividend+2
  2521  003D96  C066  F004         	movff	sprintf@tmpval+3,___llmod@dividend+3
  2522  003D9A  0E0A               	movlw	10
  2523  003D9C  6E05               	movwf	___llmod@divisor,c
  2524  003D9E  0E00               	movlw	0
  2525  003DA0  6E06               	movwf	___llmod@divisor+1,c
  2526  003DA2  0E00               	movlw	0
  2527  003DA4  6E07               	movwf	___llmod@divisor+2,c
  2528  003DA6  0E00               	movlw	0
  2529  003DA8  6E08               	movwf	___llmod@divisor+3,c
  2530  003DAA  ECF5  F00C         	call	___llmod	;wreg free
  2531  003DAE  C001  F063         	movff	?___llmod,sprintf@tmpval
  2532  003DB2  C002  F064         	movff	?___llmod+1,sprintf@tmpval+1
  2533  003DB6  C003  F065         	movff	?___llmod+2,sprintf@tmpval+2
  2534  003DBA  C004  F066         	movff	?___llmod+3,sprintf@tmpval+3
  2535                           
  2536                           ;doprnt.c: 1250: ((*sp++ = ('0' + tmpval.vd)));
  2537  003DBE  5063               	movf	sprintf@tmpval,w,c
  2538  003DC0  0F30               	addlw	48
  2539  003DC2  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2540  003DC6  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2541  003DCA  6EDF               	movwf	indf2,c
  2542  003DCC  4A4D               	infsnz	sprintf@sp,f,c
  2543  003DCE  2A4E               	incf	sprintf@sp+1,f,c
  2544                           
  2545                           ;doprnt.c: 1251: val %= dpowers[c];
  2546  003DD0  C05F  F001         	movff	sprintf@val,___llmod@dividend
  2547  003DD4  C060  F002         	movff	sprintf@val+1,___llmod@dividend+1
  2548  003DD8  C061  F003         	movff	sprintf@val+2,___llmod@dividend+2
  2549  003DDC  C062  F004         	movff	sprintf@val+3,___llmod@dividend+3
  2550  003DE0  5073               	movf	sprintf@c,w,c
  2551  003DE2  0D04               	mullw	4
  2552  003DE4  0E31               	movlw	low _dpowers
  2553  003DE6  24F3               	addwf	prodl,w,c
  2554  003DE8  6EF6               	movwf	tblptrl,c
  2555  003DEA  0E7F               	movlw	high _dpowers
  2556  003DEC  20F4               	addwfc	prodh,w,c
  2557  003DEE  6EF7               	movwf	tblptrh,c
  2558  003DF0                     	if	0	;There are less than 3 active tblptr bytes
  2559  003DF0                     	endif
  2560  003DF0  0009               	tblrd		*+
  2561  003DF2  FFFF               	dw	65535	; errata NOP
  2562  003DF4  CFF5 F005          	movff	tablat,___llmod@divisor
  2563  003DF8  0009               	tblrd		*+
  2564  003DFA  FFFF               	dw	65535	; errata NOP
  2565  003DFC  CFF5 F006          	movff	tablat,___llmod@divisor+1
  2566  003E00  0009               	tblrd		*+
  2567  003E02  FFFF               	dw	65535	; errata NOP
  2568  003E04  CFF5 F007          	movff	tablat,___llmod@divisor+2
  2569  003E08  000A               	tblrd		*-
  2570  003E0A  FFFF               	dw	65535	; errata NOP
  2571  003E0C  CFF5 F008          	movff	tablat,___llmod@divisor+3
  2572  003E10  ECF5  F00C         	call	___llmod	;wreg free
  2573  003E14  C001  F05F         	movff	?___llmod,sprintf@val
  2574  003E18  C002  F060         	movff	?___llmod+1,sprintf@val+1
  2575  003E1C  C003  F061         	movff	?___llmod+2,sprintf@val+2
  2576  003E20  C004  F062         	movff	?___llmod+3,sprintf@val+3
  2577  003E24                     l3723:
  2578  003E24  FFFF               	dw	65535	; assembler added errata NOP
  2579  003E26  0673               	decf	sprintf@c,f,c
  2580  003E28  2873               	incf	sprintf@c,w,c
  2581  003E2A  B4D8               	btfsc	status,2,c
  2582  003E2C  D00D               	goto	l3731
  2583  003E2E  D782               	goto	l3713
  2584  003E30                     l3725:
  2585  003E30  FFFF               	dw	65535	; assembler added errata NOP
  2586                           
  2587                           ;doprnt.c: 1255: ((*sp++ = ('0')));
  2588  003E32  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2589  003E36  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2590  003E3A  0E30               	movlw	48
  2591  003E3C  6EDF               	movwf	indf2,c
  2592  003E3E  4A4D               	infsnz	sprintf@sp,f,c
  2593  003E40  2A4E               	incf	sprintf@sp+1,f,c
  2594                           
  2595                           ;doprnt.c: 1256: prec--;
  2596  003E42  0671               	decf	sprintf@prec,f,c
  2597  003E44  A0D8               	btfss	status,0,c
  2598  003E46  0672               	decf	sprintf@prec+1,f,c
  2599  003E48                     l3731:
  2600  003E48  FFFF               	dw	65535	; assembler added errata NOP
  2601  003E4A  5071               	movf	sprintf@prec,w,c
  2602  003E4C  1072               	iorwf	sprintf@prec+1,w,c
  2603  003E4E  B4D8               	btfsc	status,2,c
  2604  003E50  D0BF               	goto	l3797
  2605  003E52  D7EE               	goto	l3725
  2606  003E54                     l3733:
  2607  003E54  FFFF               	dw	65535	; assembler added errata NOP
  2608                           
  2609                           ;doprnt.c: 1265: };doprnt.c: 1309: if(prec == 0 && val == 0)
  2610  003E56  5071               	movf	sprintf@prec,w,c
  2611  003E58  1072               	iorwf	sprintf@prec+1,w,c
  2612  003E5A  A4D8               	btfss	status,2,c
  2613  003E5C  D008               	goto	l3739
  2614  003E5E  505F               	movf	sprintf@val,w,c
  2615  003E60  1060               	iorwf	sprintf@val+1,w,c
  2616  003E62  1061               	iorwf	sprintf@val+2,w,c
  2617  003E64  1062               	iorwf	sprintf@val+3,w,c
  2618  003E66  A4D8               	btfss	status,2,c
  2619  003E68  D002               	goto	l3739
  2620                           
  2621                           ;doprnt.c: 1310: prec++;
  2622  003E6A  4A71               	infsnz	sprintf@prec,f,c
  2623  003E6C  2A72               	incf	sprintf@prec+1,f,c
  2624  003E6E                     l3739:
  2625  003E6E  FFFF               	dw	65535	; assembler added errata NOP
  2626                           
  2627                           ;doprnt.c: 1358: if(c < prec)
  2628  003E70  5073               	movf	sprintf@c,w,c
  2629  003E72  6E55               	movwf	??_sprintf& (0+255),c
  2630  003E74  6A56               	clrf	(??_sprintf+1)& (0+255),c
  2631  003E76  5071               	movf	sprintf@prec,w,c
  2632  003E78  5C55               	subwf	??_sprintf,w,c
  2633  003E7A  5056               	movf	??_sprintf+1,w,c
  2634  003E7C  0A80               	xorlw	128
  2635  003E7E  6E57               	movwf	(??_sprintf+2)& (0+255),c
  2636  003E80  5072               	movf	sprintf@prec+1,w,c
  2637  003E82  0A80               	xorlw	128
  2638  003E84  5857               	subwfb	(??_sprintf+2)& (0+255),w,c
  2639  003E86  B0D8               	btfsc	status,0,c
  2640  003E88  D003               	goto	l3743
  2641                           
  2642                           ;doprnt.c: 1359: c = prec;
  2643  003E8A  C071  F073         	movff	sprintf@prec,sprintf@c
  2644  003E8E  D011               	goto	l3747
  2645  003E90                     l3743:
  2646  003E90  FFFF               	dw	65535	; assembler added errata NOP
  2647                           
  2648                           ;doprnt.c: 1360: else if(prec < c)
  2649  003E92  5073               	movf	sprintf@c,w,c
  2650  003E94  6E55               	movwf	??_sprintf& (0+255),c
  2651  003E96  6A56               	clrf	(??_sprintf+1)& (0+255),c
  2652  003E98  5055               	movf	??_sprintf,w,c
  2653  003E9A  5C71               	subwf	sprintf@prec,w,c
  2654  003E9C  5072               	movf	sprintf@prec+1,w,c
  2655  003E9E  0A80               	xorlw	128
  2656  003EA0  6E57               	movwf	(??_sprintf+2)& (0+255),c
  2657  003EA2  5056               	movf	??_sprintf+1,w,c
  2658  003EA4  0A80               	xorlw	128
  2659  003EA6  5857               	subwfb	(??_sprintf+2)& (0+255),w,c
  2660  003EA8  B0D8               	btfsc	status,0,c
  2661  003EAA  D003               	goto	l3747
  2662                           
  2663                           ;doprnt.c: 1361: prec = c;
  2664  003EAC  C073  F071         	movff	sprintf@c,sprintf@prec
  2665  003EB0  6A72               	clrf	sprintf@prec+1,c
  2666  003EB2                     l3747:
  2667  003EB2  FFFF               	dw	65535	; assembler added errata NOP
  2668                           
  2669                           ;doprnt.c: 1364: if(width && flag & 0x03)
  2670  003EB4  506B               	movf	sprintf@width,w,c
  2671  003EB6  106C               	iorwf	sprintf@width+1,w,c
  2672  003EB8  B4D8               	btfsc	status,2,c
  2673  003EBA  D00D               	goto	l3753
  2674  003EBC  0E03               	movlw	3
  2675  003EBE  1469               	andwf	sprintf@flag,w,c
  2676  003EC0  6E55               	movwf	??_sprintf& (0+255),c
  2677  003EC2  0E00               	movlw	0
  2678  003EC4  146A               	andwf	sprintf@flag+1,w,c
  2679  003EC6  6E56               	movwf	(??_sprintf+1)& (0+255),c
  2680  003EC8  5055               	movf	??_sprintf,w,c
  2681  003ECA  1056               	iorwf	??_sprintf+1,w,c
  2682  003ECC  B4D8               	btfsc	status,2,c
  2683  003ECE  D003               	goto	l3753
  2684                           
  2685                           ;doprnt.c: 1365: width--;
  2686  003ED0  066B               	decf	sprintf@width,f,c
  2687  003ED2  A0D8               	btfss	status,0,c
  2688  003ED4  066C               	decf	sprintf@width+1,f,c
  2689  003ED6                     l3753:
  2690  003ED6  FFFF               	dw	65535	; assembler added errata NOP
  2691                           
  2692                           ;doprnt.c: 1367: if(flag & 0x4000) {
  2693  003ED8  AC6A               	btfss	sprintf@flag+1,6,c
  2694  003EDA  D014               	goto	l3761
  2695                           
  2696                           ;doprnt.c: 1368: if(width > prec)
  2697  003EDC  506B               	movf	sprintf@width,w,c
  2698  003EDE  5C71               	subwf	sprintf@prec,w,c
  2699  003EE0  5072               	movf	sprintf@prec+1,w,c
  2700  003EE2  0A80               	xorlw	128
  2701  003EE4  6E55               	movwf	??_sprintf& (0+255),c
  2702  003EE6  506C               	movf	sprintf@width+1,w,c
  2703  003EE8  0A80               	xorlw	128
  2704  003EEA  5855               	subwfb	??_sprintf& (0+255),w,c
  2705  003EEC  B0D8               	btfsc	status,0,c
  2706  003EEE  D005               	goto	l3759
  2707                           
  2708                           ;doprnt.c: 1369: width -= prec;
  2709  003EF0  5071               	movf	sprintf@prec,w,c
  2710  003EF2  5E6B               	subwf	sprintf@width,f,c
  2711  003EF4  5072               	movf	sprintf@prec+1,w,c
  2712  003EF6  5A6C               	subwfb	sprintf@width+1,f,c
  2713  003EF8  D005               	goto	l3761
  2714  003EFA                     l3759:
  2715  003EFA  FFFF               	dw	65535	; assembler added errata NOP
  2716                           
  2717                           ;doprnt.c: 1370: else;doprnt.c: 1371: width = 0;
  2718  003EFC  0E00               	movlw	0
  2719  003EFE  6E6C               	movwf	sprintf@width+1,c
  2720  003F00  0E00               	movlw	0
  2721  003F02  6E6B               	movwf	sprintf@width,c
  2722  003F04                     l3761:
  2723  003F04  FFFF               	dw	65535	; assembler added errata NOP
  2724                           
  2725                           ;doprnt.c: 1372: };doprnt.c: 1400: if(width > c)
  2726  003F06  5073               	movf	sprintf@c,w,c
  2727  003F08  6E55               	movwf	??_sprintf& (0+255),c
  2728  003F0A  6A56               	clrf	(??_sprintf+1)& (0+255),c
  2729  003F0C  506B               	movf	sprintf@width,w,c
  2730  003F0E  5C55               	subwf	??_sprintf,w,c
  2731  003F10  5056               	movf	??_sprintf+1,w,c
  2732  003F12  0A80               	xorlw	128
  2733  003F14  6E57               	movwf	(??_sprintf+2)& (0+255),c
  2734  003F16  506C               	movf	sprintf@width+1,w,c
  2735  003F18  0A80               	xorlw	128
  2736  003F1A  5857               	subwfb	(??_sprintf+2)& (0+255),w,c
  2737  003F1C  B0D8               	btfsc	status,0,c
  2738  003F1E  D005               	goto	l3765
  2739                           
  2740                           ;doprnt.c: 1401: width -= c;
  2741  003F20  5073               	movf	sprintf@c,w,c
  2742  003F22  5E6B               	subwf	sprintf@width,f,c
  2743  003F24  0E00               	movlw	0
  2744  003F26  5A6C               	subwfb	sprintf@width+1,f,c
  2745  003F28  D005               	goto	l3767
  2746  003F2A                     l3765:
  2747  003F2A  FFFF               	dw	65535	; assembler added errata NOP
  2748                           
  2749                           ;doprnt.c: 1402: else;doprnt.c: 1403: width = 0;
  2750  003F2C  0E00               	movlw	0
  2751  003F2E  6E6C               	movwf	sprintf@width+1,c
  2752  003F30  0E00               	movlw	0
  2753  003F32  6E6B               	movwf	sprintf@width,c
  2754  003F34                     l3767:
  2755  003F34  FFFF               	dw	65535	; assembler added errata NOP
  2756                           
  2757                           ;doprnt.c: 1406: if(flag & 0x04) {
  2758  003F36  A469               	btfss	sprintf@flag,2,c
  2759  003F38  D023               	goto	l3783
  2760                           
  2761                           ;doprnt.c: 1411: if(flag & 0x03)
  2762  003F3A  0E03               	movlw	3
  2763  003F3C  1469               	andwf	sprintf@flag,w,c
  2764  003F3E  6E55               	movwf	??_sprintf& (0+255),c
  2765  003F40  0E00               	movlw	0
  2766  003F42  146A               	andwf	sprintf@flag+1,w,c
  2767  003F44  6E56               	movwf	(??_sprintf+1)& (0+255),c
  2768  003F46  5055               	movf	??_sprintf,w,c
  2769  003F48  1056               	iorwf	??_sprintf+1,w,c
  2770  003F4A  B4D8               	btfsc	status,2,c
  2771  003F4C  D008               	goto	l3775
  2772                           
  2773                           ;doprnt.c: 1412: ((*sp++ = ('-')));
  2774  003F4E  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2775  003F52  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2776  003F56  0E2D               	movlw	45
  2777  003F58  6EDF               	movwf	indf2,c
  2778  003F5A  4A4D               	infsnz	sprintf@sp,f,c
  2779  003F5C  2A4E               	incf	sprintf@sp+1,f,c
  2780  003F5E                     l3775:
  2781  003F5E  FFFF               	dw	65535	; assembler added errata NOP
  2782                           
  2783                           ;doprnt.c: 1434: if(width)
  2784  003F60  506B               	movf	sprintf@width,w,c
  2785  003F62  106C               	iorwf	sprintf@width+1,w,c
  2786  003F64  B4D8               	btfsc	status,2,c
  2787  003F66  D034               	goto	l3797
  2788                           
  2789                           ;doprnt.c: 1436: ((*sp++ = ('0')));
  2790  003F68  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2791  003F6C  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2792  003F70  0E30               	movlw	48
  2793  003F72  6EDF               	movwf	indf2,c
  2794  003F74  4A4D               	infsnz	sprintf@sp,f,c
  2795  003F76  2A4E               	incf	sprintf@sp+1,f,c
  2796                           
  2797                           ;doprnt.c: 1437: while(--width);
  2798  003F78  066B               	decf	sprintf@width,f,c
  2799  003F7A  A0D8               	btfss	status,0,c
  2800  003F7C  066C               	decf	sprintf@width+1,f,c
  2801  003F7E  D7EF               	goto	l3775
  2802  003F80                     l3783:
  2803  003F80  FFFF               	dw	65535	; assembler added errata NOP
  2804                           
  2805                           ;doprnt.c: 1441: {;doprnt.c: 1443: if(width;doprnt.c: 1447: )
  2806  003F82  506B               	movf	sprintf@width,w,c
  2807  003F84  106C               	iorwf	sprintf@width+1,w,c
  2808  003F86  B4D8               	btfsc	status,2,c
  2809  003F88  D010               	goto	u4290
  2810  003F8A                     u4280:
  2811  003F8A  FFFF               	dw	65535	; assembler added errata NOP
  2812                           
  2813                           ;doprnt.c: 1449: ((*sp++ = (' ')));
  2814  003F8C  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2815  003F90  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2816  003F94  0E20               	movlw	32
  2817  003F96  6EDF               	movwf	indf2,c
  2818  003F98  4A4D               	infsnz	sprintf@sp,f,c
  2819  003F9A  2A4E               	incf	sprintf@sp+1,f,c
  2820                           
  2821                           ;doprnt.c: 1450: while(--width);
  2822  003F9C  066B               	decf	sprintf@width,f,c
  2823  003F9E  A0D8               	btfss	status,0,c
  2824  003FA0  066C               	decf	sprintf@width+1,f,c
  2825  003FA2  506B               	movf	sprintf@width,w,c
  2826  003FA4  106C               	iorwf	sprintf@width+1,w,c
  2827  003FA6  A4D8               	btfss	status,2,c
  2828  003FA8  D7F0               	goto	u4280
  2829  003FAA                     u4290:
  2830  003FAA  FFFF               	dw	65535	; assembler added errata NOP
  2831                           
  2832                           ;doprnt.c: 1457: if(flag & 0x03)
  2833  003FAC  0E03               	movlw	3
  2834  003FAE  1469               	andwf	sprintf@flag,w,c
  2835  003FB0  6E55               	movwf	??_sprintf& (0+255),c
  2836  003FB2  0E00               	movlw	0
  2837  003FB4  146A               	andwf	sprintf@flag+1,w,c
  2838  003FB6  6E56               	movwf	(??_sprintf+1)& (0+255),c
  2839  003FB8  5055               	movf	??_sprintf,w,c
  2840  003FBA  1056               	iorwf	??_sprintf+1,w,c
  2841  003FBC  B4D8               	btfsc	status,2,c
  2842  003FBE  D008               	goto	l3797
  2843                           
  2844                           ;doprnt.c: 1458: ((*sp++ = ('-')));
  2845  003FC0  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2846  003FC4  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2847  003FC8  0E2D               	movlw	45
  2848  003FCA  6EDF               	movwf	indf2,c
  2849  003FCC  EFE0  F01A         	goto	l3509
  2850  003FD0                     l3797:
  2851  003FD0  FFFF               	dw	65535	; assembler added errata NOP
  2852  003FD2  C04F  FFF6         	movff	sprintf@f,tblptrl
  2853  003FD6  C050  FFF7         	movff	sprintf@f+1,tblptrh
  2854  003FDA  4A4F               	infsnz	sprintf@f,f,c
  2855  003FDC  2A50               	incf	sprintf@f+1,f,c
  2856  003FDE                     	if	0	;tblptru may be non-zero
  2857  003FDE                     	endif
  2858  003FDE                     	if	0	;tblptru may be non-zero
  2859  003FDE                     	endif
  2860  003FDE  0008               	tblrd		*
  2861  003FE0  FFFF               	dw	65535	; errata NOP
  2862  003FE2  CFF5 F073          	movff	tablat,sprintf@c
  2863  003FE6  5073               	movf	sprintf@c,w,c
  2864  003FE8  A4D8               	btfss	status,2,c
  2865  003FEA  EFD5  F01A         	goto	l3505
  2866  003FEE                     u4310:
  2867  003FEE  FFFF               	dw	65535	; assembler added errata NOP
  2868                           
  2869                           ;doprnt.c: 1557: *sp = 0;
  2870  003FF0  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2871  003FF4  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2872  003FF8  0E00               	movlw	0
  2873  003FFA  6EDF               	movwf	indf2,c
  2874  003FFC  0012               	return		;funcret
  2875  003FFE  FFFF               	dw	65535	; errata NOP
  2876  004000                     __end_of_sprintf:
  2877                           	opt callstack 0
  2878                           
  2879 ;; *************** function _scale *****************
  2880 ;; Defined at:
  2881 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;  scl             1    wreg     char 
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;  scl             1   47[COMRAM] char 
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  4   39[COMRAM] char 
  2888 ;; Registers used:
  2889 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2895 ;;      Params:         4       0       0       0       0       0       0
  2896 ;;      Locals:         5       0       0       0       0       0       0
  2897 ;;      Temps:          0       0       0       0       0       0       0
  2898 ;;      Totals:         9       0       0       0       0       0       0
  2899 ;;Total ram usage:        9 bytes
  2900 ;; Hardware stack levels used:    1
  2901 ;; Hardware stack levels required when called:    1
  2902 ;; This function calls:
  2903 ;;		___awdiv
  2904 ;;		___awmod
  2905 ;;		___flmul
  2906 ;; This function is called by:
  2907 ;;		_sprintf
  2908 ;; This function uses a non-reentrant model
  2909 ;;
  2910                           
  2911                           	psect	text4
  2912  00318C                     __ptext4:
  2913                           	opt callstack 0
  2914  00318C                     _scale:
  2915                           	opt callstack 0
  2916  00318C  FFFF               	dw	65535	; assembler added errata NOP
  2917                           
  2918                           ;incstack = 0
  2919                           ;scale@scl stored from wreg
  2920  00318E  6E30               	movwf	scale@scl,c
  2921                           
  2922                           ;doprnt.c: 436: if(scl < 0) {
  2923  003190  AE30               	btfss	scale@scl,7,c
  2924  003192  D0FB               	goto	l3011
  2925                           
  2926                           ;doprnt.c: 437: scl = -scl;
  2927  003194  6C30               	negf	scale@scl,c
  2928                           
  2929                           ;doprnt.c: 438: if(scl>=110)
  2930  003196  5030               	movf	scale@scl,w,c
  2931  003198  0A80               	xorlw	128
  2932  00319A  0F12               	addlw	-238
  2933  00319C  A0D8               	btfss	status,0,c
  2934  00319E  D08C               	goto	l3001
  2935                           
  2936                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2937  0031A0  0E00               	movlw	0
  2938  0031A2  6E0A               	movwf	___awdiv@divisor+1,c
  2939  0031A4  0E0A               	movlw	10
  2940  0031A6  6E09               	movwf	___awdiv@divisor,c
  2941  0031A8  0E00               	movlw	0
  2942  0031AA  6E04               	movwf	___awmod@divisor+1,c
  2943  0031AC  0E64               	movlw	100
  2944  0031AE  6E03               	movwf	___awmod@divisor,c
  2945  0031B0  5030               	movf	scale@scl,w,c
  2946  0031B2  6E01               	movwf	___awmod@dividend,c
  2947  0031B4  6A02               	clrf	___awmod@dividend+1,c
  2948  0031B6  BE01               	btfsc	___awmod@dividend,7,c
  2949  0031B8  0602               	decf	___awmod@dividend+1,f,c
  2950  0031BA  EC2F  F00D         	call	___awmod	;wreg free
  2951  0031BE  C001  F007         	movff	?___awmod,___awdiv@dividend
  2952  0031C2  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2953  0031C6  EC04  F00E         	call	___awdiv	;wreg free
  2954  0031CA  0E09               	movlw	9
  2955  0031CC  2607               	addwf	?___awdiv,f,c
  2956  0031CE  5007               	movf	?___awdiv,w,c
  2957  0031D0  0D04               	mullw	4
  2958  0031D2  0EFD               	movlw	low __npowers_
  2959  0031D4  24F3               	addwf	prodl,w,c
  2960  0031D6  6EF6               	movwf	tblptrl,c
  2961  0031D8  0E7E               	movlw	high __npowers_
  2962  0031DA  20F4               	addwfc	prodh,w,c
  2963  0031DC  6EF7               	movwf	tblptrh,c
  2964  0031DE                     	if	0	;There are less than 3 active tblptr bytes
  2965  0031DE                     	endif
  2966  0031DE  0009               	tblrd		*+
  2967  0031E0  FFFF               	dw	65535	; errata NOP
  2968  0031E2  CFF5 F013          	movff	tablat,___flmul@a
  2969  0031E6  0009               	tblrd		*+
  2970  0031E8  FFFF               	dw	65535	; errata NOP
  2971  0031EA  CFF5 F014          	movff	tablat,___flmul@a+1
  2972  0031EE  0009               	tblrd		*+
  2973  0031F0  FFFF               	dw	65535	; errata NOP
  2974  0031F2  CFF5 F015          	movff	tablat,___flmul@a+2
  2975  0031F6  000A               	tblrd		*-
  2976  0031F8  FFFF               	dw	65535	; errata NOP
  2977  0031FA  CFF5 F016          	movff	tablat,___flmul@a+3
  2978  0031FE  0E00               	movlw	0
  2979  003200  6E0A               	movwf	___awdiv@divisor+1,c
  2980  003202  0E64               	movlw	100
  2981  003204  6E09               	movwf	___awdiv@divisor,c
  2982  003206  5030               	movf	scale@scl,w,c
  2983  003208  6E07               	movwf	___awdiv@dividend,c
  2984  00320A  6A08               	clrf	___awdiv@dividend+1,c
  2985  00320C  BE07               	btfsc	___awdiv@dividend,7,c
  2986  00320E  0608               	decf	___awdiv@dividend+1,f,c
  2987  003210  EC04  F00E         	call	___awdiv	;wreg free
  2988  003214  0E12               	movlw	18
  2989  003216  2607               	addwf	?___awdiv,f,c
  2990  003218  5007               	movf	?___awdiv,w,c
  2991  00321A  0D04               	mullw	4
  2992  00321C  0EFD               	movlw	low __npowers_
  2993  00321E  24F3               	addwf	prodl,w,c
  2994  003220  6EF6               	movwf	tblptrl,c
  2995  003222  0E7E               	movlw	high __npowers_
  2996  003224  20F4               	addwfc	prodh,w,c
  2997  003226  6EF7               	movwf	tblptrh,c
  2998  003228                     	if	0	;There are less than 3 active tblptr bytes
  2999  003228                     	endif
  3000  003228  0009               	tblrd		*+
  3001  00322A  FFFF               	dw	65535	; errata NOP
  3002  00322C  CFF5 F00F          	movff	tablat,___flmul@b
  3003  003230  0009               	tblrd		*+
  3004  003232  FFFF               	dw	65535	; errata NOP
  3005  003234  CFF5 F010          	movff	tablat,___flmul@b+1
  3006  003238  0009               	tblrd		*+
  3007  00323A  FFFF               	dw	65535	; errata NOP
  3008  00323C  CFF5 F011          	movff	tablat,___flmul@b+2
  3009  003240  000A               	tblrd		*-
  3010  003242  FFFF               	dw	65535	; errata NOP
  3011  003244  CFF5 F012          	movff	tablat,___flmul@b+3
  3012  003248  EC05  F017         	call	___flmul	;wreg free
  3013  00324C  C00F  F02C         	movff	?___flmul,_scale$834
  3014  003250  C010  F02D         	movff	?___flmul+1,_scale$834+1
  3015  003254  C011  F02E         	movff	?___flmul+2,_scale$834+2
  3016  003258  C012  F02F         	movff	?___flmul+3,_scale$834+3
  3017                           
  3018                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3019  00325C  C02C  F00F         	movff	_scale$834,___flmul@b
  3020  003260  C02D  F010         	movff	_scale$834+1,___flmul@b+1
  3021  003264  C02E  F011         	movff	_scale$834+2,___flmul@b+2
  3022  003268  C02F  F012         	movff	_scale$834+3,___flmul@b+3
  3023  00326C  0E00               	movlw	0
  3024  00326E  6E04               	movwf	___awmod@divisor+1,c
  3025  003270  0E0A               	movlw	10
  3026  003272  6E03               	movwf	___awmod@divisor,c
  3027  003274  5030               	movf	scale@scl,w,c
  3028  003276  6E01               	movwf	___awmod@dividend,c
  3029  003278  6A02               	clrf	___awmod@dividend+1,c
  3030  00327A  BE01               	btfsc	___awmod@dividend,7,c
  3031  00327C  0602               	decf	___awmod@dividend+1,f,c
  3032  00327E  EC2F  F00D         	call	___awmod	;wreg free
  3033  003282  5001               	movf	?___awmod,w,c
  3034  003284  0D04               	mullw	4
  3035  003286  0EFD               	movlw	low __npowers_
  3036  003288  24F3               	addwf	prodl,w,c
  3037  00328A  6EF6               	movwf	tblptrl,c
  3038  00328C  0E7E               	movlw	high __npowers_
  3039  00328E  20F4               	addwfc	prodh,w,c
  3040  003290  6EF7               	movwf	tblptrh,c
  3041  003292                     	if	0	;There are less than 3 active tblptr bytes
  3042  003292                     	endif
  3043  003292  0009               	tblrd		*+
  3044  003294  FFFF               	dw	65535	; errata NOP
  3045  003296  CFF5 F013          	movff	tablat,___flmul@a
  3046  00329A  0009               	tblrd		*+
  3047  00329C  FFFF               	dw	65535	; errata NOP
  3048  00329E  CFF5 F014          	movff	tablat,___flmul@a+1
  3049  0032A2  0009               	tblrd		*+
  3050  0032A4  FFFF               	dw	65535	; errata NOP
  3051  0032A6  CFF5 F015          	movff	tablat,___flmul@a+2
  3052  0032AA  000A               	tblrd		*-
  3053  0032AC  FFFF               	dw	65535	; errata NOP
  3054  0032AE  CFF5 F016          	movff	tablat,___flmul@a+3
  3055  0032B2  EC05  F017         	call	___flmul	;wreg free
  3056  0032B6  D14B               	goto	L8
  3057  0032B8                     l3001:
  3058  0032B8  FFFF               	dw	65535	; assembler added errata NOP
  3059                           
  3060                           ;doprnt.c: 440: else if(scl > 10)
  3061  0032BA  5030               	movf	scale@scl,w,c
  3062  0032BC  0A80               	xorlw	128
  3063  0032BE  0F75               	addlw	-139
  3064  0032C0  A0D8               	btfss	status,0,c
  3065  0032C2  D04B               	goto	l3007
  3066                           
  3067                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  3068  0032C4  0E00               	movlw	0
  3069  0032C6  6E0A               	movwf	___awdiv@divisor+1,c
  3070  0032C8  0E0A               	movlw	10
  3071  0032CA  6E09               	movwf	___awdiv@divisor,c
  3072  0032CC  5030               	movf	scale@scl,w,c
  3073  0032CE  6E07               	movwf	___awdiv@dividend,c
  3074  0032D0  6A08               	clrf	___awdiv@dividend+1,c
  3075  0032D2  BE07               	btfsc	___awdiv@dividend,7,c
  3076  0032D4  0608               	decf	___awdiv@dividend+1,f,c
  3077  0032D6  EC04  F00E         	call	___awdiv	;wreg free
  3078  0032DA  0E09               	movlw	9
  3079  0032DC  2607               	addwf	?___awdiv,f,c
  3080  0032DE  5007               	movf	?___awdiv,w,c
  3081  0032E0  0D04               	mullw	4
  3082  0032E2  0EFD               	movlw	low __npowers_
  3083  0032E4  24F3               	addwf	prodl,w,c
  3084  0032E6  6EF6               	movwf	tblptrl,c
  3085  0032E8  0E7E               	movlw	high __npowers_
  3086  0032EA  20F4               	addwfc	prodh,w,c
  3087  0032EC  6EF7               	movwf	tblptrh,c
  3088  0032EE                     	if	0	;There are less than 3 active tblptr bytes
  3089  0032EE                     	endif
  3090  0032EE  0009               	tblrd		*+
  3091  0032F0  FFFF               	dw	65535	; errata NOP
  3092  0032F2  CFF5 F00F          	movff	tablat,___flmul@b
  3093  0032F6  0009               	tblrd		*+
  3094  0032F8  FFFF               	dw	65535	; errata NOP
  3095  0032FA  CFF5 F010          	movff	tablat,___flmul@b+1
  3096  0032FE  0009               	tblrd		*+
  3097  003300  FFFF               	dw	65535	; errata NOP
  3098  003302  CFF5 F011          	movff	tablat,___flmul@b+2
  3099  003306  000A               	tblrd		*-
  3100  003308  FFFF               	dw	65535	; errata NOP
  3101  00330A  CFF5 F012          	movff	tablat,___flmul@b+3
  3102  00330E  0E00               	movlw	0
  3103  003310  6E04               	movwf	___awmod@divisor+1,c
  3104  003312  0E0A               	movlw	10
  3105  003314  6E03               	movwf	___awmod@divisor,c
  3106  003316  5030               	movf	scale@scl,w,c
  3107  003318  6E01               	movwf	___awmod@dividend,c
  3108  00331A  6A02               	clrf	___awmod@dividend+1,c
  3109  00331C  BE01               	btfsc	___awmod@dividend,7,c
  3110  00331E  0602               	decf	___awmod@dividend+1,f,c
  3111  003320  EC2F  F00D         	call	___awmod	;wreg free
  3112  003324  5001               	movf	?___awmod,w,c
  3113  003326  0D04               	mullw	4
  3114  003328  0EFD               	movlw	low __npowers_
  3115  00332A  24F3               	addwf	prodl,w,c
  3116  00332C  6EF6               	movwf	tblptrl,c
  3117  00332E  0E7E               	movlw	high __npowers_
  3118  003330  20F4               	addwfc	prodh,w,c
  3119  003332  6EF7               	movwf	tblptrh,c
  3120  003334                     	if	0	;There are less than 3 active tblptr bytes
  3121  003334                     	endif
  3122  003334  0009               	tblrd		*+
  3123  003336  FFFF               	dw	65535	; errata NOP
  3124  003338  CFF5 F013          	movff	tablat,___flmul@a
  3125  00333C  0009               	tblrd		*+
  3126  00333E  FFFF               	dw	65535	; errata NOP
  3127  003340  CFF5 F014          	movff	tablat,___flmul@a+1
  3128  003344  0009               	tblrd		*+
  3129  003346  FFFF               	dw	65535	; errata NOP
  3130  003348  CFF5 F015          	movff	tablat,___flmul@a+2
  3131  00334C  000A               	tblrd		*-
  3132  00334E  FFFF               	dw	65535	; errata NOP
  3133  003350  CFF5 F016          	movff	tablat,___flmul@a+3
  3134  003354  EC05  F017         	call	___flmul	;wreg free
  3135  003358  D0FA               	goto	L8
  3136  00335A                     l3007:
  3137  00335A  FFFF               	dw	65535	; assembler added errata NOP
  3138                           
  3139                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  3140  00335C  5030               	movf	scale@scl,w,c
  3141  00335E  0D04               	mullw	4
  3142  003360  0EFD               	movlw	low __npowers_
  3143  003362  24F3               	addwf	prodl,w,c
  3144  003364  6EF6               	movwf	tblptrl,c
  3145  003366  0E7E               	movlw	high __npowers_
  3146  003368  20F4               	addwfc	prodh,w,c
  3147  00336A  6EF7               	movwf	tblptrh,c
  3148  00336C                     	if	0	;There are less than 3 active tblptr bytes
  3149  00336C                     	endif
  3150  00336C  0009               	tblrd		*+
  3151  00336E  FFFF               	dw	65535	; errata NOP
  3152  003370  CFF5 F028          	movff	tablat,?_scale
  3153  003374  0009               	tblrd		*+
  3154  003376  FFFF               	dw	65535	; errata NOP
  3155  003378  CFF5 F029          	movff	tablat,?_scale+1
  3156  00337C  0009               	tblrd		*+
  3157  00337E  FFFF               	dw	65535	; errata NOP
  3158  003380  CFF5 F02A          	movff	tablat,?_scale+2
  3159  003384  000A               	tblrd		*-
  3160  003386  FFFF               	dw	65535	; errata NOP
  3161  003388  D103               	goto	L7
  3162  00338A                     l3011:
  3163  00338A  FFFF               	dw	65535	; assembler added errata NOP
  3164                           
  3165                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  3166  00338C  5030               	movf	scale@scl,w,c
  3167  00338E  0A80               	xorlw	128
  3168  003390  0F12               	addlw	-238
  3169  003392  A0D8               	btfss	status,0,c
  3170  003394  D08C               	goto	l3019
  3171                           
  3172                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  3173  003396  0E00               	movlw	0
  3174  003398  6E0A               	movwf	___awdiv@divisor+1,c
  3175  00339A  0E0A               	movlw	10
  3176  00339C  6E09               	movwf	___awdiv@divisor,c
  3177  00339E  0E00               	movlw	0
  3178  0033A0  6E04               	movwf	___awmod@divisor+1,c
  3179  0033A2  0E64               	movlw	100
  3180  0033A4  6E03               	movwf	___awmod@divisor,c
  3181  0033A6  5030               	movf	scale@scl,w,c
  3182  0033A8  6E01               	movwf	___awmod@dividend,c
  3183  0033AA  6A02               	clrf	___awmod@dividend+1,c
  3184  0033AC  BE01               	btfsc	___awmod@dividend,7,c
  3185  0033AE  0602               	decf	___awmod@dividend+1,f,c
  3186  0033B0  EC2F  F00D         	call	___awmod	;wreg free
  3187  0033B4  C001  F007         	movff	?___awmod,___awdiv@dividend
  3188  0033B8  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  3189  0033BC  EC04  F00E         	call	___awdiv	;wreg free
  3190  0033C0  0E09               	movlw	9
  3191  0033C2  2607               	addwf	?___awdiv,f,c
  3192  0033C4  5007               	movf	?___awdiv,w,c
  3193  0033C6  0D04               	mullw	4
  3194  0033C8  0EC9               	movlw	low __powers_
  3195  0033CA  24F3               	addwf	prodl,w,c
  3196  0033CC  6EF6               	movwf	tblptrl,c
  3197  0033CE  0E7E               	movlw	high __powers_
  3198  0033D0  20F4               	addwfc	prodh,w,c
  3199  0033D2  6EF7               	movwf	tblptrh,c
  3200  0033D4                     	if	0	;There are less than 3 active tblptr bytes
  3201  0033D4                     	endif
  3202  0033D4  0009               	tblrd		*+
  3203  0033D6  FFFF               	dw	65535	; errata NOP
  3204  0033D8  CFF5 F013          	movff	tablat,___flmul@a
  3205  0033DC  0009               	tblrd		*+
  3206  0033DE  FFFF               	dw	65535	; errata NOP
  3207  0033E0  CFF5 F014          	movff	tablat,___flmul@a+1
  3208  0033E4  0009               	tblrd		*+
  3209  0033E6  FFFF               	dw	65535	; errata NOP
  3210  0033E8  CFF5 F015          	movff	tablat,___flmul@a+2
  3211  0033EC  000A               	tblrd		*-
  3212  0033EE  FFFF               	dw	65535	; errata NOP
  3213  0033F0  CFF5 F016          	movff	tablat,___flmul@a+3
  3214  0033F4  0E00               	movlw	0
  3215  0033F6  6E0A               	movwf	___awdiv@divisor+1,c
  3216  0033F8  0E64               	movlw	100
  3217  0033FA  6E09               	movwf	___awdiv@divisor,c
  3218  0033FC  5030               	movf	scale@scl,w,c
  3219  0033FE  6E07               	movwf	___awdiv@dividend,c
  3220  003400  6A08               	clrf	___awdiv@dividend+1,c
  3221  003402  BE07               	btfsc	___awdiv@dividend,7,c
  3222  003404  0608               	decf	___awdiv@dividend+1,f,c
  3223  003406  EC04  F00E         	call	___awdiv	;wreg free
  3224  00340A  0E12               	movlw	18
  3225  00340C  2607               	addwf	?___awdiv,f,c
  3226  00340E  5007               	movf	?___awdiv,w,c
  3227  003410  0D04               	mullw	4
  3228  003412  0EC9               	movlw	low __powers_
  3229  003414  24F3               	addwf	prodl,w,c
  3230  003416  6EF6               	movwf	tblptrl,c
  3231  003418  0E7E               	movlw	high __powers_
  3232  00341A  20F4               	addwfc	prodh,w,c
  3233  00341C  6EF7               	movwf	tblptrh,c
  3234  00341E                     	if	0	;There are less than 3 active tblptr bytes
  3235  00341E                     	endif
  3236  00341E  0009               	tblrd		*+
  3237  003420  FFFF               	dw	65535	; errata NOP
  3238  003422  CFF5 F00F          	movff	tablat,___flmul@b
  3239  003426  0009               	tblrd		*+
  3240  003428  FFFF               	dw	65535	; errata NOP
  3241  00342A  CFF5 F010          	movff	tablat,___flmul@b+1
  3242  00342E  0009               	tblrd		*+
  3243  003430  FFFF               	dw	65535	; errata NOP
  3244  003432  CFF5 F011          	movff	tablat,___flmul@b+2
  3245  003436  000A               	tblrd		*-
  3246  003438  FFFF               	dw	65535	; errata NOP
  3247  00343A  CFF5 F012          	movff	tablat,___flmul@b+3
  3248  00343E  EC05  F017         	call	___flmul	;wreg free
  3249  003442  C00F  F02C         	movff	?___flmul,_scale$834
  3250  003446  C010  F02D         	movff	?___flmul+1,_scale$834+1
  3251  00344A  C011  F02E         	movff	?___flmul+2,_scale$834+2
  3252  00344E  C012  F02F         	movff	?___flmul+3,_scale$834+3
  3253                           
  3254                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  3255  003452  C02C  F00F         	movff	_scale$834,___flmul@b
  3256  003456  C02D  F010         	movff	_scale$834+1,___flmul@b+1
  3257  00345A  C02E  F011         	movff	_scale$834+2,___flmul@b+2
  3258  00345E  C02F  F012         	movff	_scale$834+3,___flmul@b+3
  3259  003462  0E00               	movlw	0
  3260  003464  6E04               	movwf	___awmod@divisor+1,c
  3261  003466  0E0A               	movlw	10
  3262  003468  6E03               	movwf	___awmod@divisor,c
  3263  00346A  5030               	movf	scale@scl,w,c
  3264  00346C  6E01               	movwf	___awmod@dividend,c
  3265  00346E  6A02               	clrf	___awmod@dividend+1,c
  3266  003470  BE01               	btfsc	___awmod@dividend,7,c
  3267  003472  0602               	decf	___awmod@dividend+1,f,c
  3268  003474  EC2F  F00D         	call	___awmod	;wreg free
  3269  003478  5001               	movf	?___awmod,w,c
  3270  00347A  0D04               	mullw	4
  3271  00347C  0EC9               	movlw	low __powers_
  3272  00347E  24F3               	addwf	prodl,w,c
  3273  003480  6EF6               	movwf	tblptrl,c
  3274  003482  0E7E               	movlw	high __powers_
  3275  003484  20F4               	addwfc	prodh,w,c
  3276  003486  6EF7               	movwf	tblptrh,c
  3277  003488                     	if	0	;There are less than 3 active tblptr bytes
  3278  003488                     	endif
  3279  003488  0009               	tblrd		*+
  3280  00348A  FFFF               	dw	65535	; errata NOP
  3281  00348C  CFF5 F013          	movff	tablat,___flmul@a
  3282  003490  0009               	tblrd		*+
  3283  003492  FFFF               	dw	65535	; errata NOP
  3284  003494  CFF5 F014          	movff	tablat,___flmul@a+1
  3285  003498  0009               	tblrd		*+
  3286  00349A  FFFF               	dw	65535	; errata NOP
  3287  00349C  CFF5 F015          	movff	tablat,___flmul@a+2
  3288  0034A0  000A               	tblrd		*-
  3289  0034A2  FFFF               	dw	65535	; errata NOP
  3290  0034A4  CFF5 F016          	movff	tablat,___flmul@a+3
  3291  0034A8  EC05  F017         	call	___flmul	;wreg free
  3292  0034AC  D050               	goto	L8
  3293  0034AE                     l3019:
  3294  0034AE  FFFF               	dw	65535	; assembler added errata NOP
  3295                           
  3296                           ;doprnt.c: 446: else if(scl > 10)
  3297  0034B0  5030               	movf	scale@scl,w,c
  3298  0034B2  0A80               	xorlw	128
  3299  0034B4  0F75               	addlw	-139
  3300  0034B6  A0D8               	btfss	status,0,c
  3301  0034B8  D054               	goto	l3025
  3302                           
  3303                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  3304  0034BA  0E00               	movlw	0
  3305  0034BC  6E0A               	movwf	___awdiv@divisor+1,c
  3306  0034BE  0E0A               	movlw	10
  3307  0034C0  6E09               	movwf	___awdiv@divisor,c
  3308  0034C2  5030               	movf	scale@scl,w,c
  3309  0034C4  6E07               	movwf	___awdiv@dividend,c
  3310  0034C6  6A08               	clrf	___awdiv@dividend+1,c
  3311  0034C8  BE07               	btfsc	___awdiv@dividend,7,c
  3312  0034CA  0608               	decf	___awdiv@dividend+1,f,c
  3313  0034CC  EC04  F00E         	call	___awdiv	;wreg free
  3314  0034D0  0E09               	movlw	9
  3315  0034D2  2607               	addwf	?___awdiv,f,c
  3316  0034D4  5007               	movf	?___awdiv,w,c
  3317  0034D6  0D04               	mullw	4
  3318  0034D8  0EC9               	movlw	low __powers_
  3319  0034DA  24F3               	addwf	prodl,w,c
  3320  0034DC  6EF6               	movwf	tblptrl,c
  3321  0034DE  0E7E               	movlw	high __powers_
  3322  0034E0  20F4               	addwfc	prodh,w,c
  3323  0034E2  6EF7               	movwf	tblptrh,c
  3324  0034E4                     	if	0	;There are less than 3 active tblptr bytes
  3325  0034E4                     	endif
  3326  0034E4  0009               	tblrd		*+
  3327  0034E6  FFFF               	dw	65535	; errata NOP
  3328  0034E8  CFF5 F00F          	movff	tablat,___flmul@b
  3329  0034EC  0009               	tblrd		*+
  3330  0034EE  FFFF               	dw	65535	; errata NOP
  3331  0034F0  CFF5 F010          	movff	tablat,___flmul@b+1
  3332  0034F4  0009               	tblrd		*+
  3333  0034F6  FFFF               	dw	65535	; errata NOP
  3334  0034F8  CFF5 F011          	movff	tablat,___flmul@b+2
  3335  0034FC  000A               	tblrd		*-
  3336  0034FE  FFFF               	dw	65535	; errata NOP
  3337  003500  CFF5 F012          	movff	tablat,___flmul@b+3
  3338  003504  0E00               	movlw	0
  3339  003506  6E04               	movwf	___awmod@divisor+1,c
  3340  003508  0E0A               	movlw	10
  3341  00350A  6E03               	movwf	___awmod@divisor,c
  3342  00350C  5030               	movf	scale@scl,w,c
  3343  00350E  6E01               	movwf	___awmod@dividend,c
  3344  003510  6A02               	clrf	___awmod@dividend+1,c
  3345  003512  BE01               	btfsc	___awmod@dividend,7,c
  3346  003514  0602               	decf	___awmod@dividend+1,f,c
  3347  003516  EC2F  F00D         	call	___awmod	;wreg free
  3348  00351A  5001               	movf	?___awmod,w,c
  3349  00351C  0D04               	mullw	4
  3350  00351E  0EC9               	movlw	low __powers_
  3351  003520  24F3               	addwf	prodl,w,c
  3352  003522  6EF6               	movwf	tblptrl,c
  3353  003524  0E7E               	movlw	high __powers_
  3354  003526  20F4               	addwfc	prodh,w,c
  3355  003528  6EF7               	movwf	tblptrh,c
  3356  00352A                     	if	0	;There are less than 3 active tblptr bytes
  3357  00352A                     	endif
  3358  00352A  0009               	tblrd		*+
  3359  00352C  FFFF               	dw	65535	; errata NOP
  3360  00352E  CFF5 F013          	movff	tablat,___flmul@a
  3361  003532  0009               	tblrd		*+
  3362  003534  FFFF               	dw	65535	; errata NOP
  3363  003536  CFF5 F014          	movff	tablat,___flmul@a+1
  3364  00353A  0009               	tblrd		*+
  3365  00353C  FFFF               	dw	65535	; errata NOP
  3366  00353E  CFF5 F015          	movff	tablat,___flmul@a+2
  3367  003542  000A               	tblrd		*-
  3368  003544  FFFF               	dw	65535	; errata NOP
  3369  003546  CFF5 F016          	movff	tablat,___flmul@a+3
  3370  00354A  EC05  F017         	call	___flmul	;wreg free
  3371  00354E                     L8:
  3372  00354E  FFFF               	dw	65535	; assembler added errata NOP
  3373  003550  C00F  F028         	movff	?___flmul,?_scale
  3374  003554  C010  F029         	movff	?___flmul+1,?_scale+1
  3375  003558  C011  F02A         	movff	?___flmul+2,?_scale+2
  3376  00355C  C012  F02B         	movff	?___flmul+3,?_scale+3
  3377  003560  D01A               	goto	l153
  3378  003562                     l3025:
  3379  003562  FFFF               	dw	65535	; assembler added errata NOP
  3380                           
  3381                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  3382  003564  5030               	movf	scale@scl,w,c
  3383  003566  0D04               	mullw	4
  3384  003568  0EC9               	movlw	low __powers_
  3385  00356A  24F3               	addwf	prodl,w,c
  3386  00356C  6EF6               	movwf	tblptrl,c
  3387  00356E  0E7E               	movlw	high __powers_
  3388  003570  20F4               	addwfc	prodh,w,c
  3389  003572  6EF7               	movwf	tblptrh,c
  3390  003574                     	if	0	;There are less than 3 active tblptr bytes
  3391  003574                     	endif
  3392  003574  0009               	tblrd		*+
  3393  003576  FFFF               	dw	65535	; errata NOP
  3394  003578  CFF5 F028          	movff	tablat,?_scale
  3395  00357C  0009               	tblrd		*+
  3396  00357E  FFFF               	dw	65535	; errata NOP
  3397  003580  CFF5 F029          	movff	tablat,?_scale+1
  3398  003584  0009               	tblrd		*+
  3399  003586  FFFF               	dw	65535	; errata NOP
  3400  003588  CFF5 F02A          	movff	tablat,?_scale+2
  3401  00358C  000A               	tblrd		*-
  3402  00358E  FFFF               	dw	65535	; errata NOP
  3403  003590                     L7:
  3404  003590  FFFF               	dw	65535	; assembler added errata NOP
  3405  003592  CFF5 F02B          	movff	tablat,?_scale+3
  3406  003596                     l153:
  3407  003596  FFFF               	dw	65535	; assembler added errata NOP
  3408  003598  0012               	return		;funcret
  3409  00359A  FFFF               	dw	65535	; errata NOP
  3410  00359C                     __end_of_scale:
  3411                           	opt callstack 0
  3412                           
  3413 ;; *************** function ___awmod *****************
  3414 ;; Defined at:
  3415 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  3416 ;; Parameters:    Size  Location     Type
  3417 ;;  dividend        2    0[COMRAM] int 
  3418 ;;  divisor         2    2[COMRAM] int 
  3419 ;; Auto vars:     Size  Location     Type
  3420 ;;  sign            1    5[COMRAM] unsigned char 
  3421 ;;  counter         1    4[COMRAM] unsigned char 
  3422 ;; Return value:  Size  Location     Type
  3423 ;;                  2    0[COMRAM] int 
  3424 ;; Registers used:
  3425 ;;		wreg, status,2, status,0
  3426 ;; Tracked objects:
  3427 ;;		On entry : 0/0
  3428 ;;		On exit  : 0/0
  3429 ;;		Unchanged: 0/0
  3430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3431 ;;      Params:         4       0       0       0       0       0       0
  3432 ;;      Locals:         2       0       0       0       0       0       0
  3433 ;;      Temps:          0       0       0       0       0       0       0
  3434 ;;      Totals:         6       0       0       0       0       0       0
  3435 ;;Total ram usage:        6 bytes
  3436 ;; Hardware stack levels used:    1
  3437 ;; This function calls:
  3438 ;;		Nothing
  3439 ;; This function is called by:
  3440 ;;		_scale
  3441 ;; This function uses a non-reentrant model
  3442 ;;
  3443                           
  3444                           	psect	text5
  3445  001A5E                     __ptext5:
  3446                           	opt callstack 0
  3447  001A5E                     ___awmod:
  3448                           	opt callstack 0
  3449  001A5E  FFFF               	dw	65535	; assembler added errata NOP
  3450                           
  3451                           ;incstack = 0
  3452  001A60  0E00               	movlw	0
  3453  001A62  6E06               	movwf	___awmod@sign,c
  3454  001A64  AE02               	btfss	___awmod@dividend+1,7,c
  3455  001A66  D006               	goto	l2877
  3456  001A68  6C01               	negf	___awmod@dividend,c
  3457  001A6A  1E02               	comf	___awmod@dividend+1,f,c
  3458  001A6C  B0D8               	btfsc	status,0,c
  3459  001A6E  2A02               	incf	___awmod@dividend+1,f,c
  3460  001A70  0E01               	movlw	1
  3461  001A72  6E06               	movwf	___awmod@sign,c
  3462  001A74                     l2877:
  3463  001A74  FFFF               	dw	65535	; assembler added errata NOP
  3464  001A76  AE04               	btfss	___awmod@divisor+1,7,c
  3465  001A78  D004               	goto	l2881
  3466  001A7A  6C03               	negf	___awmod@divisor,c
  3467  001A7C  1E04               	comf	___awmod@divisor+1,f,c
  3468  001A7E  B0D8               	btfsc	status,0,c
  3469  001A80  2A04               	incf	___awmod@divisor+1,f,c
  3470  001A82                     l2881:
  3471  001A82  FFFF               	dw	65535	; assembler added errata NOP
  3472  001A84  5003               	movf	___awmod@divisor,w,c
  3473  001A86  1004               	iorwf	___awmod@divisor+1,w,c
  3474  001A88  B4D8               	btfsc	status,2,c
  3475  001A8A  D01C               	goto	l2897
  3476  001A8C  0E01               	movlw	1
  3477  001A8E  6E05               	movwf	___awmod@counter,c
  3478  001A90  D005               	goto	l2887
  3479  001A92                     l2885:
  3480  001A92  FFFF               	dw	65535	; assembler added errata NOP
  3481  001A94  90D8               	bcf	status,0,c
  3482  001A96  3603               	rlcf	___awmod@divisor,f,c
  3483  001A98  3604               	rlcf	___awmod@divisor+1,f,c
  3484  001A9A  2A05               	incf	___awmod@counter,f,c
  3485  001A9C                     l2887:
  3486  001A9C  FFFF               	dw	65535	; assembler added errata NOP
  3487  001A9E  AE04               	btfss	___awmod@divisor+1,7,c
  3488  001AA0  D7F8               	goto	l2885
  3489  001AA2                     u2890:
  3490  001AA2  FFFF               	dw	65535	; assembler added errata NOP
  3491  001AA4  5003               	movf	___awmod@divisor,w,c
  3492  001AA6  5C01               	subwf	___awmod@dividend,w,c
  3493  001AA8  5004               	movf	___awmod@divisor+1,w,c
  3494  001AAA  5802               	subwfb	___awmod@dividend+1,w,c
  3495  001AAC  A0D8               	btfss	status,0,c
  3496  001AAE  D004               	goto	l2893
  3497  001AB0  5003               	movf	___awmod@divisor,w,c
  3498  001AB2  5E01               	subwf	___awmod@dividend,f,c
  3499  001AB4  5004               	movf	___awmod@divisor+1,w,c
  3500  001AB6  5A02               	subwfb	___awmod@dividend+1,f,c
  3501  001AB8                     l2893:
  3502  001AB8  FFFF               	dw	65535	; assembler added errata NOP
  3503  001ABA  90D8               	bcf	status,0,c
  3504  001ABC  3204               	rrcf	___awmod@divisor+1,f,c
  3505  001ABE  3203               	rrcf	___awmod@divisor,f,c
  3506  001AC0  2E05               	decfsz	___awmod@counter,f,c
  3507  001AC2  D7EF               	goto	u2890
  3508  001AC4                     l2897:
  3509  001AC4  FFFF               	dw	65535	; assembler added errata NOP
  3510  001AC6  5006               	movf	___awmod@sign,w,c
  3511  001AC8  B4D8               	btfsc	status,2,c
  3512  001ACA  D004               	goto	l2901
  3513  001ACC  6C01               	negf	___awmod@dividend,c
  3514  001ACE  1E02               	comf	___awmod@dividend+1,f,c
  3515  001AD0  B0D8               	btfsc	status,0,c
  3516  001AD2  2A02               	incf	___awmod@dividend+1,f,c
  3517  001AD4                     l2901:
  3518  001AD4  FFFF               	dw	65535	; assembler added errata NOP
  3519  001AD6  C001  F001         	movff	___awmod@dividend,?___awmod
  3520  001ADA  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3521  001ADE  0012               	return		;funcret
  3522  001AE0  FFFF               	dw	65535	; errata NOP
  3523  001AE2                     __end_of___awmod:
  3524                           	opt callstack 0
  3525                           
  3526 ;; *************** function ___awdiv *****************
  3527 ;; Defined at:
  3528 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  3529 ;; Parameters:    Size  Location     Type
  3530 ;;  dividend        2    6[COMRAM] int 
  3531 ;;  divisor         2    8[COMRAM] int 
  3532 ;; Auto vars:     Size  Location     Type
  3533 ;;  quotient        2   12[COMRAM] int 
  3534 ;;  sign            1   11[COMRAM] unsigned char 
  3535 ;;  counter         1   10[COMRAM] unsigned char 
  3536 ;; Return value:  Size  Location     Type
  3537 ;;                  2    6[COMRAM] int 
  3538 ;; Registers used:
  3539 ;;		wreg, status,2, status,0
  3540 ;; Tracked objects:
  3541 ;;		On entry : 0/0
  3542 ;;		On exit  : 0/0
  3543 ;;		Unchanged: 0/0
  3544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3545 ;;      Params:         4       0       0       0       0       0       0
  3546 ;;      Locals:         4       0       0       0       0       0       0
  3547 ;;      Temps:          0       0       0       0       0       0       0
  3548 ;;      Totals:         8       0       0       0       0       0       0
  3549 ;;Total ram usage:        8 bytes
  3550 ;; Hardware stack levels used:    1
  3551 ;; This function calls:
  3552 ;;		Nothing
  3553 ;; This function is called by:
  3554 ;;		_scale
  3555 ;;		_sprintf
  3556 ;; This function uses a non-reentrant model
  3557 ;;
  3558                           
  3559                           	psect	text6
  3560  001C08                     __ptext6:
  3561                           	opt callstack 0
  3562  001C08                     ___awdiv:
  3563                           	opt callstack 0
  3564  001C08  FFFF               	dw	65535	; assembler added errata NOP
  3565                           
  3566                           ;incstack = 0
  3567  001C0A  0E00               	movlw	0
  3568  001C0C  6E0C               	movwf	___awdiv@sign,c
  3569  001C0E  AE0A               	btfss	___awdiv@divisor+1,7,c
  3570  001C10  D006               	goto	l2833
  3571  001C12  6C09               	negf	___awdiv@divisor,c
  3572  001C14  1E0A               	comf	___awdiv@divisor+1,f,c
  3573  001C16  B0D8               	btfsc	status,0,c
  3574  001C18  2A0A               	incf	___awdiv@divisor+1,f,c
  3575  001C1A  0E01               	movlw	1
  3576  001C1C  6E0C               	movwf	___awdiv@sign,c
  3577  001C1E                     l2833:
  3578  001C1E  FFFF               	dw	65535	; assembler added errata NOP
  3579  001C20  AE08               	btfss	___awdiv@dividend+1,7,c
  3580  001C22  D006               	goto	l2839
  3581  001C24  6C07               	negf	___awdiv@dividend,c
  3582  001C26  1E08               	comf	___awdiv@dividend+1,f,c
  3583  001C28  B0D8               	btfsc	status,0,c
  3584  001C2A  2A08               	incf	___awdiv@dividend+1,f,c
  3585  001C2C  0E01               	movlw	1
  3586  001C2E  1A0C               	xorwf	___awdiv@sign,f,c
  3587  001C30                     l2839:
  3588  001C30  FFFF               	dw	65535	; assembler added errata NOP
  3589  001C32  0E00               	movlw	0
  3590  001C34  6E0E               	movwf	___awdiv@quotient+1,c
  3591  001C36  0E00               	movlw	0
  3592  001C38  6E0D               	movwf	___awdiv@quotient,c
  3593  001C3A  5009               	movf	___awdiv@divisor,w,c
  3594  001C3C  100A               	iorwf	___awdiv@divisor+1,w,c
  3595  001C3E  B4D8               	btfsc	status,2,c
  3596  001C40  D020               	goto	l2861
  3597  001C42  0E01               	movlw	1
  3598  001C44  6E0B               	movwf	___awdiv@counter,c
  3599  001C46  D005               	goto	l2847
  3600  001C48                     l2845:
  3601  001C48  FFFF               	dw	65535	; assembler added errata NOP
  3602  001C4A  90D8               	bcf	status,0,c
  3603  001C4C  3609               	rlcf	___awdiv@divisor,f,c
  3604  001C4E  360A               	rlcf	___awdiv@divisor+1,f,c
  3605  001C50  2A0B               	incf	___awdiv@counter,f,c
  3606  001C52                     l2847:
  3607  001C52  FFFF               	dw	65535	; assembler added errata NOP
  3608  001C54  AE0A               	btfss	___awdiv@divisor+1,7,c
  3609  001C56  D7F8               	goto	l2845
  3610  001C58                     u2830:
  3611  001C58  FFFF               	dw	65535	; assembler added errata NOP
  3612  001C5A  90D8               	bcf	status,0,c
  3613  001C5C  360D               	rlcf	___awdiv@quotient,f,c
  3614  001C5E  360E               	rlcf	___awdiv@quotient+1,f,c
  3615  001C60  5009               	movf	___awdiv@divisor,w,c
  3616  001C62  5C07               	subwf	___awdiv@dividend,w,c
  3617  001C64  500A               	movf	___awdiv@divisor+1,w,c
  3618  001C66  5808               	subwfb	___awdiv@dividend+1,w,c
  3619  001C68  A0D8               	btfss	status,0,c
  3620  001C6A  D005               	goto	l2857
  3621  001C6C  5009               	movf	___awdiv@divisor,w,c
  3622  001C6E  5E07               	subwf	___awdiv@dividend,f,c
  3623  001C70  500A               	movf	___awdiv@divisor+1,w,c
  3624  001C72  5A08               	subwfb	___awdiv@dividend+1,f,c
  3625  001C74  800D               	bsf	___awdiv@quotient,0,c
  3626  001C76                     l2857:
  3627  001C76  FFFF               	dw	65535	; assembler added errata NOP
  3628  001C78  90D8               	bcf	status,0,c
  3629  001C7A  320A               	rrcf	___awdiv@divisor+1,f,c
  3630  001C7C  3209               	rrcf	___awdiv@divisor,f,c
  3631  001C7E  2E0B               	decfsz	___awdiv@counter,f,c
  3632  001C80  D7EB               	goto	u2830
  3633  001C82                     l2861:
  3634  001C82  FFFF               	dw	65535	; assembler added errata NOP
  3635  001C84  500C               	movf	___awdiv@sign,w,c
  3636  001C86  B4D8               	btfsc	status,2,c
  3637  001C88  D004               	goto	l2865
  3638  001C8A  6C0D               	negf	___awdiv@quotient,c
  3639  001C8C  1E0E               	comf	___awdiv@quotient+1,f,c
  3640  001C8E  B0D8               	btfsc	status,0,c
  3641  001C90  2A0E               	incf	___awdiv@quotient+1,f,c
  3642  001C92                     l2865:
  3643  001C92  FFFF               	dw	65535	; assembler added errata NOP
  3644  001C94  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  3645  001C98  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  3646  001C9C  0012               	return		;funcret
  3647  001C9E  FFFF               	dw	65535	; errata NOP
  3648  001CA0                     __end_of___awdiv:
  3649                           	opt callstack 0
  3650                           
  3651 ;; *************** function _isdigit *****************
  3652 ;; Defined at:
  3653 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
  3654 ;; Parameters:    Size  Location     Type
  3655 ;;  c               1    wreg     unsigned char 
  3656 ;; Auto vars:     Size  Location     Type
  3657 ;;  c               1    2[COMRAM] unsigned char 
  3658 ;; Return value:  Size  Location     Type
  3659 ;;		None               void
  3660 ;; Registers used:
  3661 ;;		wreg, status,2, status,0
  3662 ;; Tracked objects:
  3663 ;;		On entry : 0/0
  3664 ;;		On exit  : 0/0
  3665 ;;		Unchanged: 0/0
  3666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3667 ;;      Params:         0       0       0       0       0       0       0
  3668 ;;      Locals:         2       0       0       0       0       0       0
  3669 ;;      Temps:          1       0       0       0       0       0       0
  3670 ;;      Totals:         3       0       0       0       0       0       0
  3671 ;;Total ram usage:        3 bytes
  3672 ;; Hardware stack levels used:    1
  3673 ;; This function calls:
  3674 ;;		Nothing
  3675 ;; This function is called by:
  3676 ;;		_sprintf
  3677 ;; This function uses a non-reentrant model
  3678 ;;
  3679                           
  3680                           	psect	text7
  3681  0016B8                     __ptext7:
  3682                           	opt callstack 0
  3683  0016B8                     _isdigit:
  3684                           	opt callstack 0
  3685  0016B8  FFFF               	dw	65535	; assembler added errata NOP
  3686                           
  3687                           ;incstack = 0
  3688                           ;isdigit@c stored from wreg
  3689  0016BA  6E03               	movwf	isdigit@c,c
  3690  0016BC  0E00               	movlw	0
  3691  0016BE  6E02               	movwf	_isdigit$651,c
  3692  0016C0  0E3A               	movlw	58
  3693  0016C2  6003               	cpfslt	isdigit@c,c
  3694  0016C4  D005               	goto	l3037
  3695  0016C6  0E2F               	movlw	47
  3696  0016C8  6403               	cpfsgt	isdigit@c,c
  3697  0016CA  D002               	goto	l3037
  3698  0016CC  0E01               	movlw	1
  3699  0016CE  6E02               	movwf	_isdigit$651,c
  3700  0016D0                     l3037:
  3701  0016D0  FFFF               	dw	65535	; assembler added errata NOP
  3702  0016D2  C002  F001         	movff	_isdigit$651,??_isdigit
  3703  0016D6  3001               	rrcf	??_isdigit,w,c
  3704  0016D8  0012               	return		;funcret
  3705  0016DA  FFFF               	dw	65535	; errata NOP
  3706  0016DC                     __end_of_isdigit:
  3707                           	opt callstack 0
  3708                           
  3709 ;; *************** function _fround *****************
  3710 ;; Defined at:
  3711 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;  prec            1    wreg     unsigned char 
  3714 ;; Auto vars:     Size  Location     Type
  3715 ;;  prec            1   51[COMRAM] unsigned char 
  3716 ;; Return value:  Size  Location     Type
  3717 ;;                  4   39[COMRAM] unsigned char 
  3718 ;; Registers used:
  3719 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3720 ;; Tracked objects:
  3721 ;;		On entry : 0/0
  3722 ;;		On exit  : 0/0
  3723 ;;		Unchanged: 0/0
  3724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3725 ;;      Params:         4       0       0       0       0       0       0
  3726 ;;      Locals:         9       0       0       0       0       0       0
  3727 ;;      Temps:          0       0       0       0       0       0       0
  3728 ;;      Totals:        13       0       0       0       0       0       0
  3729 ;;Total ram usage:       13 bytes
  3730 ;; Hardware stack levels used:    1
  3731 ;; Hardware stack levels required when called:    1
  3732 ;; This function calls:
  3733 ;;		___flmul
  3734 ;;		___lwdiv
  3735 ;;		___lwmod
  3736 ;; This function is called by:
  3737 ;;		_sprintf
  3738 ;; This function uses a non-reentrant model
  3739 ;;
  3740                           
  3741                           	psect	text8
  3742  0022B8                     __ptext8:
  3743                           	opt callstack 0
  3744  0022B8                     _fround:
  3745                           	opt callstack 0
  3746  0022B8  FFFF               	dw	65535	; assembler added errata NOP
  3747                           
  3748                           ;incstack = 0
  3749                           ;fround@prec stored from wreg
  3750  0022BA  6E34               	movwf	fround@prec,c
  3751                           
  3752                           ;doprnt.c: 421: if(prec>=110)
  3753  0022BC  0E6D               	movlw	109
  3754  0022BE  6434               	cpfsgt	fround@prec,c
  3755  0022C0  D0B0               	goto	l2981
  3756                           
  3757                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  3758  0022C2  0E00               	movlw	0
  3759  0022C4  6E13               	movwf	___flmul@a,c
  3760  0022C6  0E00               	movlw	0
  3761  0022C8  6E14               	movwf	___flmul@a+1,c
  3762  0022CA  0E00               	movlw	0
  3763  0022CC  6E15               	movwf	___flmul@a+2,c
  3764  0022CE  0E3F               	movlw	63
  3765  0022D0  6E16               	movwf	___flmul@a+3,c
  3766  0022D2  0E00               	movlw	0
  3767  0022D4  6E09               	movwf	___lwdiv@divisor+1,c
  3768  0022D6  0E64               	movlw	100
  3769  0022D8  6E08               	movwf	___lwdiv@divisor,c
  3770  0022DA  C034  F006         	movff	fround@prec,___lwdiv@dividend
  3771  0022DE  6A07               	clrf	___lwdiv@dividend+1,c
  3772  0022E0  EC5B  F00C         	call	___lwdiv	;wreg free
  3773  0022E4  90D8               	bcf	status,0,c
  3774  0022E6  3606               	rlcf	?___lwdiv,f,c
  3775  0022E8  3607               	rlcf	?___lwdiv+1,f,c
  3776  0022EA  90D8               	bcf	status,0,c
  3777  0022EC  3606               	rlcf	?___lwdiv,f,c
  3778  0022EE  3607               	rlcf	?___lwdiv+1,f,c
  3779  0022F0  0E48               	movlw	72
  3780  0022F2  2606               	addwf	?___lwdiv,f,c
  3781  0022F4  0E00               	movlw	0
  3782  0022F6  2207               	addwfc	?___lwdiv+1,f,c
  3783  0022F8  0EFD               	movlw	low __npowers_
  3784  0022FA  2406               	addwf	?___lwdiv,w,c
  3785  0022FC  6EF6               	movwf	tblptrl,c
  3786  0022FE  0E7E               	movlw	high __npowers_
  3787  002300  2007               	addwfc	?___lwdiv+1,w,c
  3788  002302  6EF7               	movwf	tblptrh,c
  3789  002304                     	if	0	;There are less than 3 active tblptr bytes
  3790  002304                     	endif
  3791  002304  0009               	tblrd		*+
  3792  002306  FFFF               	dw	65535	; errata NOP
  3793  002308  CFF5 F00F          	movff	tablat,___flmul@b
  3794  00230C  0009               	tblrd		*+
  3795  00230E  FFFF               	dw	65535	; errata NOP
  3796  002310  CFF5 F010          	movff	tablat,___flmul@b+1
  3797  002314  0009               	tblrd		*+
  3798  002316  FFFF               	dw	65535	; errata NOP
  3799  002318  CFF5 F011          	movff	tablat,___flmul@b+2
  3800  00231C  000A               	tblrd		*-
  3801  00231E  FFFF               	dw	65535	; errata NOP
  3802  002320  CFF5 F012          	movff	tablat,___flmul@b+3
  3803  002324  EC05  F017         	call	___flmul	;wreg free
  3804  002328  C00F  F030         	movff	?___flmul,_fround$832
  3805  00232C  C010  F031         	movff	?___flmul+1,_fround$832+1
  3806  002330  C011  F032         	movff	?___flmul+2,_fround$832+2
  3807  002334  C012  F033         	movff	?___flmul+3,_fround$832+3
  3808                           
  3809                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  3810  002338  0E00               	movlw	0
  3811  00233A  6E09               	movwf	___lwdiv@divisor+1,c
  3812  00233C  0E0A               	movlw	10
  3813  00233E  6E08               	movwf	___lwdiv@divisor,c
  3814  002340  0E00               	movlw	0
  3815  002342  6E04               	movwf	___lwmod@divisor+1,c
  3816  002344  0E64               	movlw	100
  3817  002346  6E03               	movwf	___lwmod@divisor,c
  3818  002348  C034  F001         	movff	fround@prec,___lwmod@dividend
  3819  00234C  6A02               	clrf	___lwmod@dividend+1,c
  3820  00234E  EC07  F00C         	call	___lwmod	;wreg free
  3821  002352  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  3822  002356  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  3823  00235A  EC5B  F00C         	call	___lwdiv	;wreg free
  3824  00235E  90D8               	bcf	status,0,c
  3825  002360  3606               	rlcf	?___lwdiv,f,c
  3826  002362  3607               	rlcf	?___lwdiv+1,f,c
  3827  002364  90D8               	bcf	status,0,c
  3828  002366  3606               	rlcf	?___lwdiv,f,c
  3829  002368  3607               	rlcf	?___lwdiv+1,f,c
  3830  00236A  0E24               	movlw	36
  3831  00236C  2606               	addwf	?___lwdiv,f,c
  3832  00236E  0E00               	movlw	0
  3833  002370  2207               	addwfc	?___lwdiv+1,f,c
  3834  002372  0EFD               	movlw	low __npowers_
  3835  002374  2406               	addwf	?___lwdiv,w,c
  3836  002376  6EF6               	movwf	tblptrl,c
  3837  002378  0E7E               	movlw	high __npowers_
  3838  00237A  2007               	addwfc	?___lwdiv+1,w,c
  3839  00237C  6EF7               	movwf	tblptrh,c
  3840  00237E                     	if	0	;There are less than 3 active tblptr bytes
  3841  00237E                     	endif
  3842  00237E  0009               	tblrd		*+
  3843  002380  FFFF               	dw	65535	; errata NOP
  3844  002382  CFF5 F013          	movff	tablat,___flmul@a
  3845  002386  0009               	tblrd		*+
  3846  002388  FFFF               	dw	65535	; errata NOP
  3847  00238A  CFF5 F014          	movff	tablat,___flmul@a+1
  3848  00238E  0009               	tblrd		*+
  3849  002390  FFFF               	dw	65535	; errata NOP
  3850  002392  CFF5 F015          	movff	tablat,___flmul@a+2
  3851  002396  000A               	tblrd		*-
  3852  002398  FFFF               	dw	65535	; errata NOP
  3853  00239A  CFF5 F016          	movff	tablat,___flmul@a+3
  3854  00239E  C030  F00F         	movff	_fround$832,___flmul@b
  3855  0023A2  C031  F010         	movff	_fround$832+1,___flmul@b+1
  3856  0023A6  C032  F011         	movff	_fround$832+2,___flmul@b+2
  3857  0023AA  C033  F012         	movff	_fround$832+3,___flmul@b+3
  3858  0023AE  EC05  F017         	call	___flmul	;wreg free
  3859  0023B2  C00F  F02C         	movff	?___flmul,_fround$833
  3860  0023B6  C010  F02D         	movff	?___flmul+1,_fround$833+1
  3861  0023BA  C011  F02E         	movff	?___flmul+2,_fround$833+2
  3862  0023BE  C012  F02F         	movff	?___flmul+3,_fround$833+3
  3863                           
  3864                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  3865  0023C2  C02C  F00F         	movff	_fround$833,___flmul@b
  3866  0023C6  C02D  F010         	movff	_fround$833+1,___flmul@b+1
  3867  0023CA  C02E  F011         	movff	_fround$833+2,___flmul@b+2
  3868  0023CE  C02F  F012         	movff	_fround$833+3,___flmul@b+3
  3869  0023D2  0E00               	movlw	0
  3870  0023D4  6E04               	movwf	___lwmod@divisor+1,c
  3871  0023D6  0E0A               	movlw	10
  3872  0023D8  6E03               	movwf	___lwmod@divisor,c
  3873  0023DA  C034  F001         	movff	fround@prec,___lwmod@dividend
  3874  0023DE  6A02               	clrf	___lwmod@dividend+1,c
  3875  0023E0  EC07  F00C         	call	___lwmod	;wreg free
  3876  0023E4  90D8               	bcf	status,0,c
  3877  0023E6  3601               	rlcf	?___lwmod,f,c
  3878  0023E8  3602               	rlcf	?___lwmod+1,f,c
  3879  0023EA  90D8               	bcf	status,0,c
  3880  0023EC  3601               	rlcf	?___lwmod,f,c
  3881  0023EE  3602               	rlcf	?___lwmod+1,f,c
  3882  0023F0  0EFD               	movlw	low __npowers_
  3883  0023F2  2401               	addwf	?___lwmod,w,c
  3884  0023F4  6EF6               	movwf	tblptrl,c
  3885  0023F6  0E7E               	movlw	high __npowers_
  3886  0023F8  2002               	addwfc	?___lwmod+1,w,c
  3887  0023FA  6EF7               	movwf	tblptrh,c
  3888  0023FC                     	if	0	;There are less than 3 active tblptr bytes
  3889  0023FC                     	endif
  3890  0023FC  0009               	tblrd		*+
  3891  0023FE  FFFF               	dw	65535	; errata NOP
  3892  002400  CFF5 F013          	movff	tablat,___flmul@a
  3893  002404  0009               	tblrd		*+
  3894  002406  FFFF               	dw	65535	; errata NOP
  3895  002408  CFF5 F014          	movff	tablat,___flmul@a+1
  3896  00240C  0009               	tblrd		*+
  3897  00240E  FFFF               	dw	65535	; errata NOP
  3898  002410  CFF5 F015          	movff	tablat,___flmul@a+2
  3899  002414  000A               	tblrd		*-
  3900  002416  FFFF               	dw	65535	; errata NOP
  3901  002418  CFF5 F016          	movff	tablat,___flmul@a+3
  3902  00241C  EC05  F017         	call	___flmul	;wreg free
  3903  002420  D092               	goto	L9
  3904  002422                     l2981:
  3905  002422  FFFF               	dw	65535	; assembler added errata NOP
  3906                           
  3907                           ;doprnt.c: 423: else if(prec > 10)
  3908  002424  0E0A               	movlw	10
  3909  002426  6434               	cpfsgt	fround@prec,c
  3910  002428  D06B               	goto	l2987
  3911                           
  3912                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3913  00242A  0E00               	movlw	0
  3914  00242C  6E13               	movwf	___flmul@a,c
  3915  00242E  0E00               	movlw	0
  3916  002430  6E14               	movwf	___flmul@a+1,c
  3917  002432  0E00               	movlw	0
  3918  002434  6E15               	movwf	___flmul@a+2,c
  3919  002436  0E3F               	movlw	63
  3920  002438  6E16               	movwf	___flmul@a+3,c
  3921  00243A  0E00               	movlw	0
  3922  00243C  6E09               	movwf	___lwdiv@divisor+1,c
  3923  00243E  0E0A               	movlw	10
  3924  002440  6E08               	movwf	___lwdiv@divisor,c
  3925  002442  C034  F006         	movff	fround@prec,___lwdiv@dividend
  3926  002446  6A07               	clrf	___lwdiv@dividend+1,c
  3927  002448  EC5B  F00C         	call	___lwdiv	;wreg free
  3928  00244C  90D8               	bcf	status,0,c
  3929  00244E  3606               	rlcf	?___lwdiv,f,c
  3930  002450  3607               	rlcf	?___lwdiv+1,f,c
  3931  002452  90D8               	bcf	status,0,c
  3932  002454  3606               	rlcf	?___lwdiv,f,c
  3933  002456  3607               	rlcf	?___lwdiv+1,f,c
  3934  002458  0E24               	movlw	36
  3935  00245A  2606               	addwf	?___lwdiv,f,c
  3936  00245C  0E00               	movlw	0
  3937  00245E  2207               	addwfc	?___lwdiv+1,f,c
  3938  002460  0EFD               	movlw	low __npowers_
  3939  002462  2406               	addwf	?___lwdiv,w,c
  3940  002464  6EF6               	movwf	tblptrl,c
  3941  002466  0E7E               	movlw	high __npowers_
  3942  002468  2007               	addwfc	?___lwdiv+1,w,c
  3943  00246A  6EF7               	movwf	tblptrh,c
  3944  00246C                     	if	0	;There are less than 3 active tblptr bytes
  3945  00246C                     	endif
  3946  00246C  0009               	tblrd		*+
  3947  00246E  FFFF               	dw	65535	; errata NOP
  3948  002470  CFF5 F00F          	movff	tablat,___flmul@b
  3949  002474  0009               	tblrd		*+
  3950  002476  FFFF               	dw	65535	; errata NOP
  3951  002478  CFF5 F010          	movff	tablat,___flmul@b+1
  3952  00247C  0009               	tblrd		*+
  3953  00247E  FFFF               	dw	65535	; errata NOP
  3954  002480  CFF5 F011          	movff	tablat,___flmul@b+2
  3955  002484  000A               	tblrd		*-
  3956  002486  FFFF               	dw	65535	; errata NOP
  3957  002488  CFF5 F012          	movff	tablat,___flmul@b+3
  3958  00248C  EC05  F017         	call	___flmul	;wreg free
  3959  002490  C00F  F030         	movff	?___flmul,_fround$832
  3960  002494  C010  F031         	movff	?___flmul+1,_fround$832+1
  3961  002498  C011  F032         	movff	?___flmul+2,_fround$832+2
  3962  00249C  C012  F033         	movff	?___flmul+3,_fround$832+3
  3963                           
  3964                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3965  0024A0  C030  F00F         	movff	_fround$832,___flmul@b
  3966  0024A4  C031  F010         	movff	_fround$832+1,___flmul@b+1
  3967  0024A8  C032  F011         	movff	_fround$832+2,___flmul@b+2
  3968  0024AC  C033  F012         	movff	_fround$832+3,___flmul@b+3
  3969  0024B0  0E00               	movlw	0
  3970  0024B2  6E04               	movwf	___lwmod@divisor+1,c
  3971  0024B4  0E0A               	movlw	10
  3972  0024B6  6E03               	movwf	___lwmod@divisor,c
  3973  0024B8  C034  F001         	movff	fround@prec,___lwmod@dividend
  3974  0024BC  6A02               	clrf	___lwmod@dividend+1,c
  3975  0024BE  EC07  F00C         	call	___lwmod	;wreg free
  3976  0024C2  90D8               	bcf	status,0,c
  3977  0024C4  3601               	rlcf	?___lwmod,f,c
  3978  0024C6  3602               	rlcf	?___lwmod+1,f,c
  3979  0024C8  90D8               	bcf	status,0,c
  3980  0024CA  3601               	rlcf	?___lwmod,f,c
  3981  0024CC  3602               	rlcf	?___lwmod+1,f,c
  3982  0024CE  0EFD               	movlw	low __npowers_
  3983  0024D0  2401               	addwf	?___lwmod,w,c
  3984  0024D2  6EF6               	movwf	tblptrl,c
  3985  0024D4  0E7E               	movlw	high __npowers_
  3986  0024D6  2002               	addwfc	?___lwmod+1,w,c
  3987  0024D8  6EF7               	movwf	tblptrh,c
  3988  0024DA                     	if	0	;There are less than 3 active tblptr bytes
  3989  0024DA                     	endif
  3990  0024DA  0009               	tblrd		*+
  3991  0024DC  FFFF               	dw	65535	; errata NOP
  3992  0024DE  CFF5 F013          	movff	tablat,___flmul@a
  3993  0024E2  0009               	tblrd		*+
  3994  0024E4  FFFF               	dw	65535	; errata NOP
  3995  0024E6  CFF5 F014          	movff	tablat,___flmul@a+1
  3996  0024EA  0009               	tblrd		*+
  3997  0024EC  FFFF               	dw	65535	; errata NOP
  3998  0024EE  CFF5 F015          	movff	tablat,___flmul@a+2
  3999  0024F2  000A               	tblrd		*-
  4000  0024F4  FFFF               	dw	65535	; errata NOP
  4001  0024F6  CFF5 F016          	movff	tablat,___flmul@a+3
  4002  0024FA  EC05  F017         	call	___flmul	;wreg free
  4003  0024FE  D023               	goto	L9
  4004  002500                     l2987:
  4005  002500  FFFF               	dw	65535	; assembler added errata NOP
  4006                           
  4007                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  4008  002502  5034               	movf	fround@prec,w,c
  4009  002504  0D04               	mullw	4
  4010  002506  0EFD               	movlw	low __npowers_
  4011  002508  24F3               	addwf	prodl,w,c
  4012  00250A  6EF6               	movwf	tblptrl,c
  4013  00250C  0E7E               	movlw	high __npowers_
  4014  00250E  20F4               	addwfc	prodh,w,c
  4015  002510  6EF7               	movwf	tblptrh,c
  4016  002512                     	if	0	;There are less than 3 active tblptr bytes
  4017  002512                     	endif
  4018  002512  0009               	tblrd		*+
  4019  002514  FFFF               	dw	65535	; errata NOP
  4020  002516  CFF5 F00F          	movff	tablat,___flmul@b
  4021  00251A  0009               	tblrd		*+
  4022  00251C  FFFF               	dw	65535	; errata NOP
  4023  00251E  CFF5 F010          	movff	tablat,___flmul@b+1
  4024  002522  0009               	tblrd		*+
  4025  002524  FFFF               	dw	65535	; errata NOP
  4026  002526  CFF5 F011          	movff	tablat,___flmul@b+2
  4027  00252A  000A               	tblrd		*-
  4028  00252C  FFFF               	dw	65535	; errata NOP
  4029  00252E  CFF5 F012          	movff	tablat,___flmul@b+3
  4030  002532  0E00               	movlw	0
  4031  002534  6E13               	movwf	___flmul@a,c
  4032  002536  0E00               	movlw	0
  4033  002538  6E14               	movwf	___flmul@a+1,c
  4034  00253A  0E00               	movlw	0
  4035  00253C  6E15               	movwf	___flmul@a+2,c
  4036  00253E  0E3F               	movlw	63
  4037  002540  6E16               	movwf	___flmul@a+3,c
  4038  002542  EC05  F017         	call	___flmul	;wreg free
  4039  002546                     L9:
  4040  002546  FFFF               	dw	65535	; assembler added errata NOP
  4041  002548  C00F  F028         	movff	?___flmul,?_fround
  4042  00254C  C010  F029         	movff	?___flmul+1,?_fround+1
  4043  002550  C011  F02A         	movff	?___flmul+2,?_fround+2
  4044  002554  C012  F02B         	movff	?___flmul+3,?_fround+3
  4045  002558  0012               	return		;funcret
  4046  00255A  FFFF               	dw	65535	; errata NOP
  4047  00255C                     __end_of_fround:
  4048                           	opt callstack 0
  4049                           
  4050 ;; *************** function ___lwmod *****************
  4051 ;; Defined at:
  4052 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  4053 ;; Parameters:    Size  Location     Type
  4054 ;;  dividend        2    0[COMRAM] unsigned int 
  4055 ;;  divisor         2    2[COMRAM] unsigned int 
  4056 ;; Auto vars:     Size  Location     Type
  4057 ;;  counter         1    4[COMRAM] unsigned char 
  4058 ;; Return value:  Size  Location     Type
  4059 ;;                  2    0[COMRAM] unsigned int 
  4060 ;; Registers used:
  4061 ;;		wreg, status,2, status,0
  4062 ;; Tracked objects:
  4063 ;;		On entry : 0/0
  4064 ;;		On exit  : 0/0
  4065 ;;		Unchanged: 0/0
  4066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4067 ;;      Params:         4       0       0       0       0       0       0
  4068 ;;      Locals:         1       0       0       0       0       0       0
  4069 ;;      Temps:          0       0       0       0       0       0       0
  4070 ;;      Totals:         5       0       0       0       0       0       0
  4071 ;;Total ram usage:        5 bytes
  4072 ;; Hardware stack levels used:    1
  4073 ;; This function calls:
  4074 ;;		Nothing
  4075 ;; This function is called by:
  4076 ;;		_fround
  4077 ;; This function uses a non-reentrant model
  4078 ;;
  4079                           
  4080                           	psect	text9
  4081  00180E                     __ptext9:
  4082                           	opt callstack 0
  4083  00180E                     ___lwmod:
  4084                           	opt callstack 0
  4085  00180E  FFFF               	dw	65535	; assembler added errata NOP
  4086                           
  4087                           ;incstack = 0
  4088  001810  5003               	movf	___lwmod@divisor,w,c
  4089  001812  1004               	iorwf	___lwmod@divisor+1,w,c
  4090  001814  B4D8               	btfsc	status,2,c
  4091  001816  D01C               	goto	l780
  4092  001818  0E01               	movlw	1
  4093  00181A  6E05               	movwf	___lwmod@counter,c
  4094  00181C  D005               	goto	l2933
  4095  00181E                     l2931:
  4096  00181E  FFFF               	dw	65535	; assembler added errata NOP
  4097  001820  90D8               	bcf	status,0,c
  4098  001822  3603               	rlcf	___lwmod@divisor,f,c
  4099  001824  3604               	rlcf	___lwmod@divisor+1,f,c
  4100  001826  2A05               	incf	___lwmod@counter,f,c
  4101  001828                     l2933:
  4102  001828  FFFF               	dw	65535	; assembler added errata NOP
  4103  00182A  AE04               	btfss	___lwmod@divisor+1,7,c
  4104  00182C  D7F8               	goto	l2931
  4105  00182E                     u2960:
  4106  00182E  FFFF               	dw	65535	; assembler added errata NOP
  4107  001830  5003               	movf	___lwmod@divisor,w,c
  4108  001832  5C01               	subwf	___lwmod@dividend,w,c
  4109  001834  5004               	movf	___lwmod@divisor+1,w,c
  4110  001836  5802               	subwfb	___lwmod@dividend+1,w,c
  4111  001838  A0D8               	btfss	status,0,c
  4112  00183A  D004               	goto	l2939
  4113  00183C  5003               	movf	___lwmod@divisor,w,c
  4114  00183E  5E01               	subwf	___lwmod@dividend,f,c
  4115  001840  5004               	movf	___lwmod@divisor+1,w,c
  4116  001842  5A02               	subwfb	___lwmod@dividend+1,f,c
  4117  001844                     l2939:
  4118  001844  FFFF               	dw	65535	; assembler added errata NOP
  4119  001846  90D8               	bcf	status,0,c
  4120  001848  3204               	rrcf	___lwmod@divisor+1,f,c
  4121  00184A  3203               	rrcf	___lwmod@divisor,f,c
  4122  00184C  2E05               	decfsz	___lwmod@counter,f,c
  4123  00184E  D7EF               	goto	u2960
  4124  001850                     l780:
  4125  001850  FFFF               	dw	65535	; assembler added errata NOP
  4126  001852  C001  F001         	movff	___lwmod@dividend,?___lwmod
  4127  001856  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  4128  00185A  0012               	return		;funcret
  4129  00185C  FFFF               	dw	65535	; errata NOP
  4130  00185E                     __end_of___lwmod:
  4131                           	opt callstack 0
  4132                           
  4133 ;; *************** function ___lwdiv *****************
  4134 ;; Defined at:
  4135 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;  dividend        2    5[COMRAM] unsigned int 
  4138 ;;  divisor         2    7[COMRAM] unsigned int 
  4139 ;; Auto vars:     Size  Location     Type
  4140 ;;  quotient        2    9[COMRAM] unsigned int 
  4141 ;;  counter         1   11[COMRAM] unsigned char 
  4142 ;; Return value:  Size  Location     Type
  4143 ;;                  2    5[COMRAM] unsigned int 
  4144 ;; Registers used:
  4145 ;;		wreg, status,2, status,0
  4146 ;; Tracked objects:
  4147 ;;		On entry : 0/0
  4148 ;;		On exit  : 0/0
  4149 ;;		Unchanged: 0/0
  4150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4151 ;;      Params:         4       0       0       0       0       0       0
  4152 ;;      Locals:         3       0       0       0       0       0       0
  4153 ;;      Temps:          0       0       0       0       0       0       0
  4154 ;;      Totals:         7       0       0       0       0       0       0
  4155 ;;Total ram usage:        7 bytes
  4156 ;; Hardware stack levels used:    1
  4157 ;; This function calls:
  4158 ;;		Nothing
  4159 ;; This function is called by:
  4160 ;;		_fround
  4161 ;; This function uses a non-reentrant model
  4162 ;;
  4163                           
  4164                           	psect	text10
  4165  0018B6                     __ptext10:
  4166                           	opt callstack 0
  4167  0018B6                     ___lwdiv:
  4168                           	opt callstack 0
  4169  0018B6  FFFF               	dw	65535	; assembler added errata NOP
  4170                           
  4171                           ;incstack = 0
  4172  0018B8  0E00               	movlw	0
  4173  0018BA  6E0B               	movwf	___lwdiv@quotient+1,c
  4174  0018BC  0E00               	movlw	0
  4175  0018BE  6E0A               	movwf	___lwdiv@quotient,c
  4176  0018C0  5008               	movf	___lwdiv@divisor,w,c
  4177  0018C2  1009               	iorwf	___lwdiv@divisor+1,w,c
  4178  0018C4  B4D8               	btfsc	status,2,c
  4179  0018C6  D020               	goto	l770
  4180  0018C8  0E01               	movlw	1
  4181  0018CA  6E0C               	movwf	___lwdiv@counter,c
  4182  0018CC  D005               	goto	l2913
  4183  0018CE                     l2911:
  4184  0018CE  FFFF               	dw	65535	; assembler added errata NOP
  4185  0018D0  90D8               	bcf	status,0,c
  4186  0018D2  3608               	rlcf	___lwdiv@divisor,f,c
  4187  0018D4  3609               	rlcf	___lwdiv@divisor+1,f,c
  4188  0018D6  2A0C               	incf	___lwdiv@counter,f,c
  4189  0018D8                     l2913:
  4190  0018D8  FFFF               	dw	65535	; assembler added errata NOP
  4191  0018DA  AE09               	btfss	___lwdiv@divisor+1,7,c
  4192  0018DC  D7F8               	goto	l2911
  4193  0018DE                     u2930:
  4194  0018DE  FFFF               	dw	65535	; assembler added errata NOP
  4195  0018E0  90D8               	bcf	status,0,c
  4196  0018E2  360A               	rlcf	___lwdiv@quotient,f,c
  4197  0018E4  360B               	rlcf	___lwdiv@quotient+1,f,c
  4198  0018E6  5008               	movf	___lwdiv@divisor,w,c
  4199  0018E8  5C06               	subwf	___lwdiv@dividend,w,c
  4200  0018EA  5009               	movf	___lwdiv@divisor+1,w,c
  4201  0018EC  5807               	subwfb	___lwdiv@dividend+1,w,c
  4202  0018EE  A0D8               	btfss	status,0,c
  4203  0018F0  D005               	goto	l2923
  4204  0018F2  5008               	movf	___lwdiv@divisor,w,c
  4205  0018F4  5E06               	subwf	___lwdiv@dividend,f,c
  4206  0018F6  5009               	movf	___lwdiv@divisor+1,w,c
  4207  0018F8  5A07               	subwfb	___lwdiv@dividend+1,f,c
  4208  0018FA  800A               	bsf	___lwdiv@quotient,0,c
  4209  0018FC                     l2923:
  4210  0018FC  FFFF               	dw	65535	; assembler added errata NOP
  4211  0018FE  90D8               	bcf	status,0,c
  4212  001900  3209               	rrcf	___lwdiv@divisor+1,f,c
  4213  001902  3208               	rrcf	___lwdiv@divisor,f,c
  4214  001904  2E0C               	decfsz	___lwdiv@counter,f,c
  4215  001906  D7EB               	goto	u2930
  4216  001908                     l770:
  4217  001908  FFFF               	dw	65535	; assembler added errata NOP
  4218  00190A  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  4219  00190E  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4220  001912  0012               	return		;funcret
  4221  001914  FFFF               	dw	65535	; errata NOP
  4222  001916                     __end_of___lwdiv:
  4223                           	opt callstack 0
  4224                           
  4225 ;; *************** function __tdiv_to_l_ *****************
  4226 ;; Defined at:
  4227 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftdivl.c"
  4228 ;; Parameters:    Size  Location     Type
  4229 ;;  f1              4    0[COMRAM] float 
  4230 ;;  f2              4    4[COMRAM] float 
  4231 ;; Auto vars:     Size  Location     Type
  4232 ;;  quot            4   11[COMRAM] unsigned long 
  4233 ;;  exp1            1   16[COMRAM] unsigned char 
  4234 ;;  cntr            1   15[COMRAM] unsigned char 
  4235 ;; Return value:  Size  Location     Type
  4236 ;;                  4    0[COMRAM] unsigned long 
  4237 ;; Registers used:
  4238 ;;		wreg, status,2, status,0
  4239 ;; Tracked objects:
  4240 ;;		On entry : 0/0
  4241 ;;		On exit  : 0/0
  4242 ;;		Unchanged: 0/0
  4243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4244 ;;      Params:         8       0       0       0       0       0       0
  4245 ;;      Locals:         6       0       0       0       0       0       0
  4246 ;;      Temps:          3       0       0       0       0       0       0
  4247 ;;      Totals:        17       0       0       0       0       0       0
  4248 ;;Total ram usage:       17 bytes
  4249 ;; Hardware stack levels used:    1
  4250 ;; This function calls:
  4251 ;;		Nothing
  4252 ;; This function is called by:
  4253 ;;		_sprintf
  4254 ;; This function uses a non-reentrant model
  4255 ;;
  4256                           
  4257                           	psect	text11
  4258  002046                     __ptext11:
  4259                           	opt callstack 0
  4260  002046                     __tdiv_to_l_:
  4261                           	opt callstack 0
  4262  002046  FFFF               	dw	65535	; assembler added errata NOP
  4263                           
  4264                           ;incstack = 0
  4265  002048  C003  F009         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  4266  00204C  6A0A               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  4267  00204E  6A0B               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  4268  002050  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  4269  002052  3609               	rlcf	??__tdiv_to_l_& (0+255),f,c
  4270  002054  E301               	bnc	u3091
  4271  002056  800A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  4272  002058                     u3091:
  4273  002058  5009               	movf	??__tdiv_to_l_,w,c
  4274  00205A  6E11               	movwf	__tdiv_to_l_@exp1,c
  4275  00205C  5011               	movf	__tdiv_to_l_@exp1,w,c
  4276  00205E  A4D8               	btfss	status,2,c
  4277  002060  D00A               	goto	l3047
  4278  002062                     u3100:
  4279  002062  FFFF               	dw	65535	; assembler added errata NOP
  4280  002064  0E00               	movlw	0
  4281  002066  6E01               	movwf	?__tdiv_to_l_,c
  4282  002068  0E00               	movlw	0
  4283  00206A  6E02               	movwf	?__tdiv_to_l_+1,c
  4284  00206C  0E00               	movlw	0
  4285  00206E  6E03               	movwf	?__tdiv_to_l_+2,c
  4286  002070  0E00               	movlw	0
  4287  002072  6E04               	movwf	?__tdiv_to_l_+3,c
  4288  002074  D070               	goto	l620
  4289  002076                     l3047:
  4290  002076  FFFF               	dw	65535	; assembler added errata NOP
  4291  002078  C007  F009         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  4292  00207C  6A0A               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  4293  00207E  6A0B               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  4294  002080  3406               	rlcf	__tdiv_to_l_@f2+1,w,c
  4295  002082  3609               	rlcf	??__tdiv_to_l_& (0+255),f,c
  4296  002084  E301               	bnc	u3111
  4297  002086  800A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  4298  002088                     u3111:
  4299  002088  5009               	movf	??__tdiv_to_l_,w,c
  4300  00208A  6E10               	movwf	__tdiv_to_l_@cntr,c
  4301  00208C  5010               	movf	__tdiv_to_l_@cntr,w,c
  4302  00208E  B4D8               	btfsc	status,2,c
  4303  002090  D7E8               	goto	u3100
  4304  002092  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  4305  002094  0EFF               	movlw	255
  4306  002096  1601               	andwf	__tdiv_to_l_@f1,f,c
  4307  002098  0EFF               	movlw	255
  4308  00209A  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  4309  00209C  0E00               	movlw	0
  4310  00209E  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  4311  0020A0  8E06               	bsf	__tdiv_to_l_@f2+1,7,c
  4312  0020A2  0EFF               	movlw	255
  4313  0020A4  1605               	andwf	__tdiv_to_l_@f2,f,c
  4314  0020A6  0EFF               	movlw	255
  4315  0020A8  1606               	andwf	__tdiv_to_l_@f2+1,f,c
  4316  0020AA  0E00               	movlw	0
  4317  0020AC  1607               	andwf	__tdiv_to_l_@f2+2,f,c
  4318  0020AE  0E00               	movlw	0
  4319  0020B0  6E0C               	movwf	__tdiv_to_l_@quot,c
  4320  0020B2  0E00               	movlw	0
  4321  0020B4  6E0D               	movwf	__tdiv_to_l_@quot+1,c
  4322  0020B6  0E00               	movlw	0
  4323  0020B8  6E0E               	movwf	__tdiv_to_l_@quot+2,c
  4324  0020BA  0E00               	movlw	0
  4325  0020BC  6E0F               	movwf	__tdiv_to_l_@quot+3,c
  4326  0020BE  0E7F               	movlw	127
  4327  0020C0  5E11               	subwf	__tdiv_to_l_@exp1,f,c
  4328  0020C2  5010               	movf	__tdiv_to_l_@cntr,w,c
  4329  0020C4  0F98               	addlw	152
  4330  0020C6  5E11               	subwf	__tdiv_to_l_@exp1,f,c
  4331  0020C8  0E18               	movlw	24
  4332  0020CA  6E10               	movwf	__tdiv_to_l_@cntr,c
  4333  0020CC                     l622:
  4334  0020CC  FFFF               	dw	65535	; assembler added errata NOP
  4335  0020CE  90D8               	bcf	status,0,c
  4336  0020D0  360C               	rlcf	__tdiv_to_l_@quot,f,c
  4337  0020D2  360D               	rlcf	__tdiv_to_l_@quot+1,f,c
  4338  0020D4  360E               	rlcf	__tdiv_to_l_@quot+2,f,c
  4339  0020D6  360F               	rlcf	__tdiv_to_l_@quot+3,f,c
  4340  0020D8  5005               	movf	__tdiv_to_l_@f2,w,c
  4341  0020DA  5C01               	subwf	__tdiv_to_l_@f1,w,c
  4342  0020DC  5006               	movf	__tdiv_to_l_@f2+1,w,c
  4343  0020DE  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  4344  0020E0  5007               	movf	__tdiv_to_l_@f2+2,w,c
  4345  0020E2  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  4346  0020E4  A0D8               	btfss	status,0,c
  4347  0020E6  D007               	goto	l623
  4348  0020E8  5005               	movf	__tdiv_to_l_@f2,w,c
  4349  0020EA  5E01               	subwf	__tdiv_to_l_@f1,f,c
  4350  0020EC  5006               	movf	__tdiv_to_l_@f2+1,w,c
  4351  0020EE  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  4352  0020F0  5007               	movf	__tdiv_to_l_@f2+2,w,c
  4353  0020F2  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  4354  0020F4  800C               	bsf	__tdiv_to_l_@quot,0,c
  4355  0020F6                     l623:
  4356  0020F6  FFFF               	dw	65535	; assembler added errata NOP
  4357  0020F8  90D8               	bcf	status,0,c
  4358  0020FA  3601               	rlcf	__tdiv_to_l_@f1,f,c
  4359  0020FC  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  4360  0020FE  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  4361  002100  2E10               	decfsz	__tdiv_to_l_@cntr,f,c
  4362  002102  D7E4               	goto	l622
  4363  002104  AE11               	btfss	__tdiv_to_l_@exp1,7,c
  4364  002106  D00E               	goto	l3087
  4365  002108  5011               	movf	__tdiv_to_l_@exp1,w,c
  4366  00210A  0A80               	xorlw	128
  4367  00210C  0F97               	addlw	151
  4368  00210E  A0D8               	btfss	status,0,c
  4369  002110  D7A8               	goto	u3100
  4370  002112                     l3083:
  4371  002112  FFFF               	dw	65535	; assembler added errata NOP
  4372  002114  90D8               	bcf	status,0,c
  4373  002116  320F               	rrcf	__tdiv_to_l_@quot+3,f,c
  4374  002118  320E               	rrcf	__tdiv_to_l_@quot+2,f,c
  4375  00211A  320D               	rrcf	__tdiv_to_l_@quot+1,f,c
  4376  00211C  320C               	rrcf	__tdiv_to_l_@quot,f,c
  4377  00211E  3E11               	incfsz	__tdiv_to_l_@exp1,f,c
  4378  002120  D7F8               	goto	l3083
  4379  002122  D010               	goto	u3170
  4380  002124                     l3087:
  4381  002124  FFFF               	dw	65535	; assembler added errata NOP
  4382  002126  0E17               	movlw	23
  4383  002128  6411               	cpfsgt	__tdiv_to_l_@exp1,c
  4384  00212A  D008               	goto	l3095
  4385  00212C  D79A               	goto	u3100
  4386  00212E                     l3093:
  4387  00212E  FFFF               	dw	65535	; assembler added errata NOP
  4388  002130  90D8               	bcf	status,0,c
  4389  002132  360C               	rlcf	__tdiv_to_l_@quot,f,c
  4390  002134  360D               	rlcf	__tdiv_to_l_@quot+1,f,c
  4391  002136  360E               	rlcf	__tdiv_to_l_@quot+2,f,c
  4392  002138  360F               	rlcf	__tdiv_to_l_@quot+3,f,c
  4393  00213A  0611               	decf	__tdiv_to_l_@exp1,f,c
  4394  00213C                     l3095:
  4395  00213C  FFFF               	dw	65535	; assembler added errata NOP
  4396  00213E  5011               	movf	__tdiv_to_l_@exp1,w,c
  4397  002140  A4D8               	btfss	status,2,c
  4398  002142  D7F5               	goto	l3093
  4399  002144                     u3170:
  4400  002144  FFFF               	dw	65535	; assembler added errata NOP
  4401  002146  C00C  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  4402  00214A  C00D  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  4403  00214E  C00E  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  4404  002152  C00F  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  4405  002156                     l620:
  4406  002156  FFFF               	dw	65535	; assembler added errata NOP
  4407  002158  0012               	return		;funcret
  4408  00215A  FFFF               	dw	65535	; errata NOP
  4409  00215C                     __end_of__tdiv_to_l_:
  4410                           	opt callstack 0
  4411                           
  4412 ;; *************** function __div_to_l_ *****************
  4413 ;; Defined at:
  4414 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fldivl.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;  f1              4    0[COMRAM] unsigned long 
  4417 ;;  f2              4    4[COMRAM] unsigned long 
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;  quot            4    8[COMRAM] unsigned long 
  4420 ;;  exp1            1   13[COMRAM] unsigned char 
  4421 ;;  cntr            1   12[COMRAM] unsigned char 
  4422 ;; Return value:  Size  Location     Type
  4423 ;;                  4    0[COMRAM] unsigned long 
  4424 ;; Registers used:
  4425 ;;		wreg, status,2, status,0
  4426 ;; Tracked objects:
  4427 ;;		On entry : 0/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4431 ;;      Params:         8       0       0       0       0       0       0
  4432 ;;      Locals:         6       0       0       0       0       0       0
  4433 ;;      Temps:          0       0       0       0       0       0       0
  4434 ;;      Totals:        14       0       0       0       0       0       0
  4435 ;;Total ram usage:       14 bytes
  4436 ;; Hardware stack levels used:    1
  4437 ;; This function calls:
  4438 ;;		Nothing
  4439 ;; This function is called by:
  4440 ;;		_sprintf
  4441 ;; This function uses a non-reentrant model
  4442 ;;
  4443                           
  4444                           	psect	text12
  4445  001F3A                     __ptext12:
  4446                           	opt callstack 0
  4447  001F3A                     __div_to_l_:
  4448                           	opt callstack 0
  4449  001F3A  FFFF               	dw	65535	; assembler added errata NOP
  4450                           
  4451                           ;incstack = 0
  4452  001F3C  3403               	rlcf	__div_to_l_@f1+2,w,c
  4453  001F3E  3404               	rlcf	__div_to_l_@f1+3,w,c
  4454  001F40  6E0E               	movwf	__div_to_l_@exp1,c
  4455  001F42  500E               	movf	__div_to_l_@exp1,w,c
  4456  001F44  A4D8               	btfss	status,2,c
  4457  001F46  D00A               	goto	l3103
  4458  001F48                     u3180:
  4459  001F48  FFFF               	dw	65535	; assembler added errata NOP
  4460  001F4A  0E00               	movlw	0
  4461  001F4C  6E01               	movwf	?__div_to_l_,c
  4462  001F4E  0E00               	movlw	0
  4463  001F50  6E02               	movwf	?__div_to_l_+1,c
  4464  001F52  0E00               	movlw	0
  4465  001F54  6E03               	movwf	?__div_to_l_+2,c
  4466  001F56  0E00               	movlw	0
  4467  001F58  6E04               	movwf	?__div_to_l_+3,c
  4468  001F5A  D072               	goto	l511
  4469  001F5C                     l3103:
  4470  001F5C  FFFF               	dw	65535	; assembler added errata NOP
  4471  001F5E  3407               	rlcf	__div_to_l_@f2+2,w,c
  4472  001F60  3408               	rlcf	__div_to_l_@f2+3,w,c
  4473  001F62  6E0D               	movwf	__div_to_l_@cntr,c
  4474  001F64  500D               	movf	__div_to_l_@cntr,w,c
  4475  001F66  B4D8               	btfsc	status,2,c
  4476  001F68  D7EF               	goto	u3180
  4477  001F6A  8E03               	bsf	__div_to_l_@f1+2,7,c
  4478  001F6C  0EFF               	movlw	255
  4479  001F6E  1601               	andwf	__div_to_l_@f1,f,c
  4480  001F70  0EFF               	movlw	255
  4481  001F72  1602               	andwf	__div_to_l_@f1+1,f,c
  4482  001F74  0EFF               	movlw	255
  4483  001F76  1603               	andwf	__div_to_l_@f1+2,f,c
  4484  001F78  0E00               	movlw	0
  4485  001F7A  1604               	andwf	__div_to_l_@f1+3,f,c
  4486  001F7C  8E07               	bsf	__div_to_l_@f2+2,7,c
  4487  001F7E  0EFF               	movlw	255
  4488  001F80  1605               	andwf	__div_to_l_@f2,f,c
  4489  001F82  0EFF               	movlw	255
  4490  001F84  1606               	andwf	__div_to_l_@f2+1,f,c
  4491  001F86  0EFF               	movlw	255
  4492  001F88  1607               	andwf	__div_to_l_@f2+2,f,c
  4493  001F8A  0E00               	movlw	0
  4494  001F8C  1608               	andwf	__div_to_l_@f2+3,f,c
  4495  001F8E  0E00               	movlw	0
  4496  001F90  6E09               	movwf	__div_to_l_@quot,c
  4497  001F92  0E00               	movlw	0
  4498  001F94  6E0A               	movwf	__div_to_l_@quot+1,c
  4499  001F96  0E00               	movlw	0
  4500  001F98  6E0B               	movwf	__div_to_l_@quot+2,c
  4501  001F9A  0E00               	movlw	0
  4502  001F9C  6E0C               	movwf	__div_to_l_@quot+3,c
  4503  001F9E  0E7F               	movlw	127
  4504  001FA0  5E0E               	subwf	__div_to_l_@exp1,f,c
  4505  001FA2  500D               	movf	__div_to_l_@cntr,w,c
  4506  001FA4  0FA0               	addlw	160
  4507  001FA6  5E0E               	subwf	__div_to_l_@exp1,f,c
  4508  001FA8  0E20               	movlw	32
  4509  001FAA  6E0D               	movwf	__div_to_l_@cntr,c
  4510  001FAC                     l3123:
  4511  001FAC  FFFF               	dw	65535	; assembler added errata NOP
  4512  001FAE  90D8               	bcf	status,0,c
  4513  001FB0  3609               	rlcf	__div_to_l_@quot,f,c
  4514  001FB2  360A               	rlcf	__div_to_l_@quot+1,f,c
  4515  001FB4  360B               	rlcf	__div_to_l_@quot+2,f,c
  4516  001FB6  360C               	rlcf	__div_to_l_@quot+3,f,c
  4517  001FB8  5005               	movf	__div_to_l_@f2,w,c
  4518  001FBA  5C01               	subwf	__div_to_l_@f1,w,c
  4519  001FBC  5006               	movf	__div_to_l_@f2+1,w,c
  4520  001FBE  5802               	subwfb	__div_to_l_@f1+1,w,c
  4521  001FC0  5007               	movf	__div_to_l_@f2+2,w,c
  4522  001FC2  5803               	subwfb	__div_to_l_@f1+2,w,c
  4523  001FC4  5008               	movf	__div_to_l_@f2+3,w,c
  4524  001FC6  5804               	subwfb	__div_to_l_@f1+3,w,c
  4525  001FC8  A0D8               	btfss	status,0,c
  4526  001FCA  D009               	goto	l3131
  4527  001FCC  5005               	movf	__div_to_l_@f2,w,c
  4528  001FCE  5E01               	subwf	__div_to_l_@f1,f,c
  4529  001FD0  5006               	movf	__div_to_l_@f2+1,w,c
  4530  001FD2  5A02               	subwfb	__div_to_l_@f1+1,f,c
  4531  001FD4  5007               	movf	__div_to_l_@f2+2,w,c
  4532  001FD6  5A03               	subwfb	__div_to_l_@f1+2,f,c
  4533  001FD8  5008               	movf	__div_to_l_@f2+3,w,c
  4534  001FDA  5A04               	subwfb	__div_to_l_@f1+3,f,c
  4535  001FDC  8009               	bsf	__div_to_l_@quot,0,c
  4536  001FDE                     l3131:
  4537  001FDE  FFFF               	dw	65535	; assembler added errata NOP
  4538  001FE0  90D8               	bcf	status,0,c
  4539  001FE2  3601               	rlcf	__div_to_l_@f1,f,c
  4540  001FE4  3602               	rlcf	__div_to_l_@f1+1,f,c
  4541  001FE6  3603               	rlcf	__div_to_l_@f1+2,f,c
  4542  001FE8  3604               	rlcf	__div_to_l_@f1+3,f,c
  4543  001FEA  2E0D               	decfsz	__div_to_l_@cntr,f,c
  4544  001FEC  D7DF               	goto	l3123
  4545  001FEE  AE0E               	btfss	__div_to_l_@exp1,7,c
  4546  001FF0  D00E               	goto	l3147
  4547  001FF2  500E               	movf	__div_to_l_@exp1,w,c
  4548  001FF4  0A80               	xorlw	128
  4549  001FF6  0F9F               	addlw	159
  4550  001FF8  A0D8               	btfss	status,0,c
  4551  001FFA  D7A6               	goto	u3180
  4552  001FFC                     l3143:
  4553  001FFC  FFFF               	dw	65535	; assembler added errata NOP
  4554  001FFE  90D8               	bcf	status,0,c
  4555  002000  320C               	rrcf	__div_to_l_@quot+3,f,c
  4556  002002  320B               	rrcf	__div_to_l_@quot+2,f,c
  4557  002004  320A               	rrcf	__div_to_l_@quot+1,f,c
  4558  002006  3209               	rrcf	__div_to_l_@quot,f,c
  4559  002008  3E0E               	incfsz	__div_to_l_@exp1,f,c
  4560  00200A  D7F8               	goto	l3143
  4561  00200C  D010               	goto	u3240
  4562  00200E                     l3147:
  4563  00200E  FFFF               	dw	65535	; assembler added errata NOP
  4564  002010  0E1F               	movlw	31
  4565  002012  640E               	cpfsgt	__div_to_l_@exp1,c
  4566  002014  D008               	goto	l3155
  4567  002016  D798               	goto	u3180
  4568  002018                     l3153:
  4569  002018  FFFF               	dw	65535	; assembler added errata NOP
  4570  00201A  90D8               	bcf	status,0,c
  4571  00201C  3609               	rlcf	__div_to_l_@quot,f,c
  4572  00201E  360A               	rlcf	__div_to_l_@quot+1,f,c
  4573  002020  360B               	rlcf	__div_to_l_@quot+2,f,c
  4574  002022  360C               	rlcf	__div_to_l_@quot+3,f,c
  4575  002024  060E               	decf	__div_to_l_@exp1,f,c
  4576  002026                     l3155:
  4577  002026  FFFF               	dw	65535	; assembler added errata NOP
  4578  002028  500E               	movf	__div_to_l_@exp1,w,c
  4579  00202A  A4D8               	btfss	status,2,c
  4580  00202C  D7F5               	goto	l3153
  4581  00202E                     u3240:
  4582  00202E  FFFF               	dw	65535	; assembler added errata NOP
  4583  002030  C009  F001         	movff	__div_to_l_@quot,?__div_to_l_
  4584  002034  C00A  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  4585  002038  C00B  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  4586  00203C  C00C  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  4587  002040                     l511:
  4588  002040  FFFF               	dw	65535	; assembler added errata NOP
  4589  002042  0012               	return		;funcret
  4590  002044  FFFF               	dw	65535	; errata NOP
  4591  002046                     __end_of__div_to_l_:
  4592                           	opt callstack 0
  4593                           
  4594 ;; *************** function ___wmul *****************
  4595 ;; Defined at:
  4596 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  4597 ;; Parameters:    Size  Location     Type
  4598 ;;  multiplier      2    0[COMRAM] unsigned int 
  4599 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4600 ;; Auto vars:     Size  Location     Type
  4601 ;;  product         2    4[COMRAM] unsigned int 
  4602 ;; Return value:  Size  Location     Type
  4603 ;;                  2    0[COMRAM] unsigned int 
  4604 ;; Registers used:
  4605 ;;		wreg, status,2, status,0, prodl, prodh
  4606 ;; Tracked objects:
  4607 ;;		On entry : 0/0
  4608 ;;		On exit  : 0/0
  4609 ;;		Unchanged: 0/0
  4610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4611 ;;      Params:         4       0       0       0       0       0       0
  4612 ;;      Locals:         2       0       0       0       0       0       0
  4613 ;;      Temps:          0       0       0       0       0       0       0
  4614 ;;      Totals:         6       0       0       0       0       0       0
  4615 ;;Total ram usage:        6 bytes
  4616 ;; Hardware stack levels used:    1
  4617 ;; This function calls:
  4618 ;;		Nothing
  4619 ;; This function is called by:
  4620 ;;		_sprintf
  4621 ;; This function uses a non-reentrant model
  4622 ;;
  4623                           
  4624                           	psect	text13
  4625  0016DC                     __ptext13:
  4626                           	opt callstack 0
  4627  0016DC                     ___wmul:
  4628                           	opt callstack 0
  4629  0016DC  FFFF               	dw	65535	; assembler added errata NOP
  4630                           
  4631                           ;incstack = 0
  4632  0016DE  5001               	movf	___wmul@multiplier,w,c
  4633  0016E0  0203               	mulwf	___wmul@multiplicand,c
  4634  0016E2  CFF3 F005          	movff	prodl,___wmul@product
  4635  0016E6  CFF4 F006          	movff	prodh,___wmul@product+1
  4636  0016EA  5001               	movf	___wmul@multiplier,w,c
  4637  0016EC  0204               	mulwf	___wmul@multiplicand+1,c
  4638  0016EE  50F3               	movf	prodl,w,c
  4639  0016F0  2606               	addwf	___wmul@product+1,f,c
  4640  0016F2  5002               	movf	___wmul@multiplier+1,w,c
  4641  0016F4  0203               	mulwf	___wmul@multiplicand,c
  4642  0016F6  50F3               	movf	prodl,w,c
  4643  0016F8  2606               	addwf	___wmul@product+1,f,c
  4644  0016FA  C005  F001         	movff	___wmul@product,?___wmul
  4645  0016FE  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4646  001702  0012               	return		;funcret
  4647  001704  FFFF               	dw	65535	; errata NOP
  4648  001706                     __end_of___wmul:
  4649                           	opt callstack 0
  4650                           
  4651 ;; *************** function ___llmod *****************
  4652 ;; Defined at:
  4653 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
  4654 ;; Parameters:    Size  Location     Type
  4655 ;;  dividend        4    0[COMRAM] unsigned long 
  4656 ;;  divisor         4    4[COMRAM] unsigned long 
  4657 ;; Auto vars:     Size  Location     Type
  4658 ;;  counter         1    8[COMRAM] unsigned char 
  4659 ;; Return value:  Size  Location     Type
  4660 ;;                  4    0[COMRAM] unsigned long 
  4661 ;; Registers used:
  4662 ;;		wreg, status,2, status,0
  4663 ;; Tracked objects:
  4664 ;;		On entry : 0/0
  4665 ;;		On exit  : 0/0
  4666 ;;		Unchanged: 0/0
  4667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4668 ;;      Params:         8       0       0       0       0       0       0
  4669 ;;      Locals:         1       0       0       0       0       0       0
  4670 ;;      Temps:          0       0       0       0       0       0       0
  4671 ;;      Totals:         9       0       0       0       0       0       0
  4672 ;;Total ram usage:        9 bytes
  4673 ;; Hardware stack levels used:    1
  4674 ;; This function calls:
  4675 ;;		Nothing
  4676 ;; This function is called by:
  4677 ;;		_sprintf
  4678 ;; This function uses a non-reentrant model
  4679 ;;
  4680                           
  4681                           	psect	text14
  4682  0019EA                     __ptext14:
  4683                           	opt callstack 0
  4684  0019EA                     ___llmod:
  4685                           	opt callstack 0
  4686  0019EA  FFFF               	dw	65535	; assembler added errata NOP
  4687                           
  4688                           ;incstack = 0
  4689  0019EC  5005               	movf	___llmod@divisor,w,c
  4690  0019EE  1006               	iorwf	___llmod@divisor+1,w,c
  4691  0019F0  1007               	iorwf	___llmod@divisor+2,w,c
  4692  0019F2  1008               	iorwf	___llmod@divisor+3,w,c
  4693  0019F4  B4D8               	btfsc	status,2,c
  4694  0019F6  D028               	goto	l699
  4695  0019F8  0E01               	movlw	1
  4696  0019FA  6E09               	movwf	___llmod@counter,c
  4697  0019FC  D007               	goto	l3425
  4698  0019FE                     l3423:
  4699  0019FE  FFFF               	dw	65535	; assembler added errata NOP
  4700  001A00  90D8               	bcf	status,0,c
  4701  001A02  3605               	rlcf	___llmod@divisor,f,c
  4702  001A04  3606               	rlcf	___llmod@divisor+1,f,c
  4703  001A06  3607               	rlcf	___llmod@divisor+2,f,c
  4704  001A08  3608               	rlcf	___llmod@divisor+3,f,c
  4705  001A0A  2A09               	incf	___llmod@counter,f,c
  4706  001A0C                     l3425:
  4707  001A0C  FFFF               	dw	65535	; assembler added errata NOP
  4708  001A0E  AE08               	btfss	___llmod@divisor+3,7,c
  4709  001A10  D7F6               	goto	l3423
  4710  001A12                     u3680:
  4711  001A12  FFFF               	dw	65535	; assembler added errata NOP
  4712  001A14  5005               	movf	___llmod@divisor,w,c
  4713  001A16  5C01               	subwf	___llmod@dividend,w,c
  4714  001A18  5006               	movf	___llmod@divisor+1,w,c
  4715  001A1A  5802               	subwfb	___llmod@dividend+1,w,c
  4716  001A1C  5007               	movf	___llmod@divisor+2,w,c
  4717  001A1E  5803               	subwfb	___llmod@dividend+2,w,c
  4718  001A20  5008               	movf	___llmod@divisor+3,w,c
  4719  001A22  5804               	subwfb	___llmod@dividend+3,w,c
  4720  001A24  A0D8               	btfss	status,0,c
  4721  001A26  D008               	goto	l3431
  4722  001A28  5005               	movf	___llmod@divisor,w,c
  4723  001A2A  5E01               	subwf	___llmod@dividend,f,c
  4724  001A2C  5006               	movf	___llmod@divisor+1,w,c
  4725  001A2E  5A02               	subwfb	___llmod@dividend+1,f,c
  4726  001A30  5007               	movf	___llmod@divisor+2,w,c
  4727  001A32  5A03               	subwfb	___llmod@dividend+2,f,c
  4728  001A34  5008               	movf	___llmod@divisor+3,w,c
  4729  001A36  5A04               	subwfb	___llmod@dividend+3,f,c
  4730  001A38                     l3431:
  4731  001A38  FFFF               	dw	65535	; assembler added errata NOP
  4732  001A3A  90D8               	bcf	status,0,c
  4733  001A3C  3208               	rrcf	___llmod@divisor+3,f,c
  4734  001A3E  3207               	rrcf	___llmod@divisor+2,f,c
  4735  001A40  3206               	rrcf	___llmod@divisor+1,f,c
  4736  001A42  3205               	rrcf	___llmod@divisor,f,c
  4737  001A44  2E09               	decfsz	___llmod@counter,f,c
  4738  001A46  D7E5               	goto	u3680
  4739  001A48                     l699:
  4740  001A48  FFFF               	dw	65535	; assembler added errata NOP
  4741  001A4A  C001  F001         	movff	___llmod@dividend,?___llmod
  4742  001A4E  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  4743  001A52  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  4744  001A56  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  4745  001A5A  0012               	return		;funcret
  4746  001A5C  FFFF               	dw	65535	; errata NOP
  4747  001A5E                     __end_of___llmod:
  4748                           	opt callstack 0
  4749                           
  4750 ;; *************** function ___lldiv *****************
  4751 ;; Defined at:
  4752 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;  dividend        4    0[COMRAM] unsigned long 
  4755 ;;  divisor         4    4[COMRAM] unsigned long 
  4756 ;; Auto vars:     Size  Location     Type
  4757 ;;  quotient        4    8[COMRAM] unsigned long 
  4758 ;;  counter         1   12[COMRAM] unsigned char 
  4759 ;; Return value:  Size  Location     Type
  4760 ;;                  4    0[COMRAM] unsigned long 
  4761 ;; Registers used:
  4762 ;;		wreg, status,2, status,0
  4763 ;; Tracked objects:
  4764 ;;		On entry : 0/0
  4765 ;;		On exit  : 0/0
  4766 ;;		Unchanged: 0/0
  4767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4768 ;;      Params:         8       0       0       0       0       0       0
  4769 ;;      Locals:         5       0       0       0       0       0       0
  4770 ;;      Temps:          0       0       0       0       0       0       0
  4771 ;;      Totals:        13       0       0       0       0       0       0
  4772 ;;Total ram usage:       13 bytes
  4773 ;; Hardware stack levels used:    1
  4774 ;; This function calls:
  4775 ;;		Nothing
  4776 ;; This function is called by:
  4777 ;;		_sprintf
  4778 ;; This function uses a non-reentrant model
  4779 ;;
  4780                           
  4781                           	psect	text15
  4782  001AE2                     __ptext15:
  4783                           	opt callstack 0
  4784  001AE2                     ___lldiv:
  4785                           	opt callstack 0
  4786  001AE2  FFFF               	dw	65535	; assembler added errata NOP
  4787                           
  4788                           ;incstack = 0
  4789  001AE4  0E00               	movlw	0
  4790  001AE6  6E09               	movwf	___lldiv@quotient,c
  4791  001AE8  0E00               	movlw	0
  4792  001AEA  6E0A               	movwf	___lldiv@quotient+1,c
  4793  001AEC  0E00               	movlw	0
  4794  001AEE  6E0B               	movwf	___lldiv@quotient+2,c
  4795  001AF0  0E00               	movlw	0
  4796  001AF2  6E0C               	movwf	___lldiv@quotient+3,c
  4797  001AF4  5005               	movf	___lldiv@divisor,w,c
  4798  001AF6  1006               	iorwf	___lldiv@divisor+1,w,c
  4799  001AF8  1007               	iorwf	___lldiv@divisor+2,w,c
  4800  001AFA  1008               	iorwf	___lldiv@divisor+3,w,c
  4801  001AFC  B4D8               	btfsc	status,2,c
  4802  001AFE  D02E               	goto	l284
  4803  001B00  0E01               	movlw	1
  4804  001B02  6E0D               	movwf	___lldiv@counter,c
  4805  001B04  D007               	goto	l3171
  4806  001B06                     l3169:
  4807  001B06  FFFF               	dw	65535	; assembler added errata NOP
  4808  001B08  90D8               	bcf	status,0,c
  4809  001B0A  3605               	rlcf	___lldiv@divisor,f,c
  4810  001B0C  3606               	rlcf	___lldiv@divisor+1,f,c
  4811  001B0E  3607               	rlcf	___lldiv@divisor+2,f,c
  4812  001B10  3608               	rlcf	___lldiv@divisor+3,f,c
  4813  001B12  2A0D               	incf	___lldiv@counter,f,c
  4814  001B14                     l3171:
  4815  001B14  FFFF               	dw	65535	; assembler added errata NOP
  4816  001B16  AE08               	btfss	___lldiv@divisor+3,7,c
  4817  001B18  D7F6               	goto	l3169
  4818  001B1A                     u3260:
  4819  001B1A  FFFF               	dw	65535	; assembler added errata NOP
  4820  001B1C  90D8               	bcf	status,0,c
  4821  001B1E  3609               	rlcf	___lldiv@quotient,f,c
  4822  001B20  360A               	rlcf	___lldiv@quotient+1,f,c
  4823  001B22  360B               	rlcf	___lldiv@quotient+2,f,c
  4824  001B24  360C               	rlcf	___lldiv@quotient+3,f,c
  4825  001B26  5005               	movf	___lldiv@divisor,w,c
  4826  001B28  5C01               	subwf	___lldiv@dividend,w,c
  4827  001B2A  5006               	movf	___lldiv@divisor+1,w,c
  4828  001B2C  5802               	subwfb	___lldiv@dividend+1,w,c
  4829  001B2E  5007               	movf	___lldiv@divisor+2,w,c
  4830  001B30  5803               	subwfb	___lldiv@dividend+2,w,c
  4831  001B32  5008               	movf	___lldiv@divisor+3,w,c
  4832  001B34  5804               	subwfb	___lldiv@dividend+3,w,c
  4833  001B36  A0D8               	btfss	status,0,c
  4834  001B38  D009               	goto	l3181
  4835  001B3A  5005               	movf	___lldiv@divisor,w,c
  4836  001B3C  5E01               	subwf	___lldiv@dividend,f,c
  4837  001B3E  5006               	movf	___lldiv@divisor+1,w,c
  4838  001B40  5A02               	subwfb	___lldiv@dividend+1,f,c
  4839  001B42  5007               	movf	___lldiv@divisor+2,w,c
  4840  001B44  5A03               	subwfb	___lldiv@dividend+2,f,c
  4841  001B46  5008               	movf	___lldiv@divisor+3,w,c
  4842  001B48  5A04               	subwfb	___lldiv@dividend+3,f,c
  4843  001B4A  8009               	bsf	___lldiv@quotient,0,c
  4844  001B4C                     l3181:
  4845  001B4C  FFFF               	dw	65535	; assembler added errata NOP
  4846  001B4E  90D8               	bcf	status,0,c
  4847  001B50  3208               	rrcf	___lldiv@divisor+3,f,c
  4848  001B52  3207               	rrcf	___lldiv@divisor+2,f,c
  4849  001B54  3206               	rrcf	___lldiv@divisor+1,f,c
  4850  001B56  3205               	rrcf	___lldiv@divisor,f,c
  4851  001B58  2E0D               	decfsz	___lldiv@counter,f,c
  4852  001B5A  D7DF               	goto	u3260
  4853  001B5C                     l284:
  4854  001B5C  FFFF               	dw	65535	; assembler added errata NOP
  4855  001B5E  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4856  001B62  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4857  001B66  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4858  001B6A  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4859  001B6E  0012               	return		;funcret
  4860  001B70  FFFF               	dw	65535	; errata NOP
  4861  001B72                     __end_of___lldiv:
  4862                           	opt callstack 0
  4863                           
  4864 ;; *************** function ___fltol *****************
  4865 ;; Defined at:
  4866 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  4867 ;; Parameters:    Size  Location     Type
  4868 ;;  f1              4   48[COMRAM] unsigned long 
  4869 ;; Auto vars:     Size  Location     Type
  4870 ;;  exp1            1   57[COMRAM] unsigned char 
  4871 ;;  sign1           1   56[COMRAM] unsigned char 
  4872 ;; Return value:  Size  Location     Type
  4873 ;;                  4   48[COMRAM] long 
  4874 ;; Registers used:
  4875 ;;		wreg, status,2, status,0
  4876 ;; Tracked objects:
  4877 ;;		On entry : 0/0
  4878 ;;		On exit  : 0/0
  4879 ;;		Unchanged: 0/0
  4880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4881 ;;      Params:         4       0       0       0       0       0       0
  4882 ;;      Locals:         2       0       0       0       0       0       0
  4883 ;;      Temps:          4       0       0       0       0       0       0
  4884 ;;      Totals:        10       0       0       0       0       0       0
  4885 ;;Total ram usage:       10 bytes
  4886 ;; Hardware stack levels used:    1
  4887 ;; This function calls:
  4888 ;;		Nothing
  4889 ;; This function is called by:
  4890 ;;		_sprintf
  4891 ;; This function uses a non-reentrant model
  4892 ;;
  4893                           
  4894                           	psect	text16
  4895  001CA0                     __ptext16:
  4896                           	opt callstack 0
  4897  001CA0                     ___fltol:
  4898                           	opt callstack 0
  4899  001CA0  FFFF               	dw	65535	; assembler added errata NOP
  4900                           
  4901                           ;incstack = 0
  4902  001CA2  3433               	rlcf	___fltol@f1+2,w,c
  4903  001CA4  3434               	rlcf	___fltol@f1+3,w,c
  4904  001CA6  6E3A               	movwf	___fltol@exp1,c
  4905  001CA8  503A               	movf	___fltol@exp1,w,c
  4906  001CAA  A4D8               	btfss	status,2,c
  4907  001CAC  D00A               	goto	l3381
  4908  001CAE                     u3600:
  4909  001CAE  FFFF               	dw	65535	; assembler added errata NOP
  4910  001CB0  0E00               	movlw	0
  4911  001CB2  6E31               	movwf	?___fltol,c
  4912  001CB4  0E00               	movlw	0
  4913  001CB6  6E32               	movwf	?___fltol+1,c
  4914  001CB8  0E00               	movlw	0
  4915  001CBA  6E33               	movwf	?___fltol+2,c
  4916  001CBC  0E00               	movlw	0
  4917  001CBE  6E34               	movwf	?___fltol+3,c
  4918  001CC0  D056               	goto	l563
  4919  001CC2                     l3381:
  4920  001CC2  FFFF               	dw	65535	; assembler added errata NOP
  4921  001CC4  C031  F035         	movff	___fltol@f1,??___fltol
  4922  001CC8  C032  F036         	movff	___fltol@f1+1,??___fltol+1
  4923  001CCC  C033  F037         	movff	___fltol@f1+2,??___fltol+2
  4924  001CD0  C034  F038         	movff	___fltol@f1+3,??___fltol+3
  4925  001CD4  0E20               	movlw	32
  4926  001CD6  D006               	goto	u3610
  4927  001CD8                     u3615:
  4928  001CD8  FFFF               	dw	65535	; assembler added errata NOP
  4929  001CDA  90D8               	bcf	status,0,c
  4930  001CDC  3238               	rrcf	??___fltol+3,f,c
  4931  001CDE  3237               	rrcf	??___fltol+2,f,c
  4932  001CE0  3236               	rrcf	??___fltol+1,f,c
  4933  001CE2  3235               	rrcf	??___fltol,f,c
  4934  001CE4                     u3610:
  4935  001CE4  FFFF               	dw	65535	; assembler added errata NOP
  4936  001CE6  2EE8               	decfsz	wreg,f,c
  4937  001CE8  D7F7               	goto	u3615
  4938  001CEA  5035               	movf	??___fltol,w,c
  4939  001CEC  6E39               	movwf	___fltol@sign1,c
  4940  001CEE  8E33               	bsf	___fltol@f1+2,7,c
  4941  001CF0  0EFF               	movlw	255
  4942  001CF2  1631               	andwf	___fltol@f1,f,c
  4943  001CF4  0EFF               	movlw	255
  4944  001CF6  1632               	andwf	___fltol@f1+1,f,c
  4945  001CF8  0EFF               	movlw	255
  4946  001CFA  1633               	andwf	___fltol@f1+2,f,c
  4947  001CFC  0E00               	movlw	0
  4948  001CFE  1634               	andwf	___fltol@f1+3,f,c
  4949  001D00  0E96               	movlw	150
  4950  001D02  5E3A               	subwf	___fltol@exp1,f,c
  4951  001D04  AE3A               	btfss	___fltol@exp1,7,c
  4952  001D06  D00E               	goto	l3401
  4953  001D08  503A               	movf	___fltol@exp1,w,c
  4954  001D0A  0A80               	xorlw	128
  4955  001D0C  0F97               	addlw	151
  4956  001D0E  A0D8               	btfss	status,0,c
  4957  001D10  D7CE               	goto	u3600
  4958  001D12                     l3397:
  4959  001D12  FFFF               	dw	65535	; assembler added errata NOP
  4960  001D14  90D8               	bcf	status,0,c
  4961  001D16  3234               	rrcf	___fltol@f1+3,f,c
  4962  001D18  3233               	rrcf	___fltol@f1+2,f,c
  4963  001D1A  3232               	rrcf	___fltol@f1+1,f,c
  4964  001D1C  3231               	rrcf	___fltol@f1,f,c
  4965  001D1E  3E3A               	incfsz	___fltol@exp1,f,c
  4966  001D20  D7F8               	goto	l3397
  4967  001D22  D010               	goto	u3650
  4968  001D24                     l3401:
  4969  001D24  FFFF               	dw	65535	; assembler added errata NOP
  4970  001D26  0E1F               	movlw	31
  4971  001D28  643A               	cpfsgt	___fltol@exp1,c
  4972  001D2A  D008               	goto	l3409
  4973  001D2C  D7C0               	goto	u3600
  4974  001D2E                     l3407:
  4975  001D2E  FFFF               	dw	65535	; assembler added errata NOP
  4976  001D30  90D8               	bcf	status,0,c
  4977  001D32  3631               	rlcf	___fltol@f1,f,c
  4978  001D34  3632               	rlcf	___fltol@f1+1,f,c
  4979  001D36  3633               	rlcf	___fltol@f1+2,f,c
  4980  001D38  3634               	rlcf	___fltol@f1+3,f,c
  4981  001D3A  063A               	decf	___fltol@exp1,f,c
  4982  001D3C                     l3409:
  4983  001D3C  FFFF               	dw	65535	; assembler added errata NOP
  4984  001D3E  503A               	movf	___fltol@exp1,w,c
  4985  001D40  A4D8               	btfss	status,2,c
  4986  001D42  D7F5               	goto	l3407
  4987  001D44                     u3650:
  4988  001D44  FFFF               	dw	65535	; assembler added errata NOP
  4989  001D46  5039               	movf	___fltol@sign1,w,c
  4990  001D48  B4D8               	btfsc	status,2,c
  4991  001D4A  D008               	goto	l3415
  4992  001D4C  1E34               	comf	___fltol@f1+3,f,c
  4993  001D4E  1E33               	comf	___fltol@f1+2,f,c
  4994  001D50  1E32               	comf	___fltol@f1+1,f,c
  4995  001D52  6C31               	negf	___fltol@f1,c
  4996  001D54  0E00               	movlw	0
  4997  001D56  2232               	addwfc	___fltol@f1+1,f,c
  4998  001D58  2233               	addwfc	___fltol@f1+2,f,c
  4999  001D5A  2234               	addwfc	___fltol@f1+3,f,c
  5000  001D5C                     l3415:
  5001  001D5C  FFFF               	dw	65535	; assembler added errata NOP
  5002  001D5E  C031  F031         	movff	___fltol@f1,?___fltol
  5003  001D62  C032  F032         	movff	___fltol@f1+1,?___fltol+1
  5004  001D66  C033  F033         	movff	___fltol@f1+2,?___fltol+2
  5005  001D6A  C034  F034         	movff	___fltol@f1+3,?___fltol+3
  5006  001D6E                     l563:
  5007  001D6E  FFFF               	dw	65535	; assembler added errata NOP
  5008  001D70  0012               	return		;funcret
  5009  001D72  FFFF               	dw	65535	; errata NOP
  5010  001D74                     __end_of___fltol:
  5011                           	opt callstack 0
  5012                           
  5013 ;; *************** function ___flsub *****************
  5014 ;; Defined at:
  5015 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  5016 ;; Parameters:    Size  Location     Type
  5017 ;;  b               4   68[COMRAM] long 
  5018 ;;  a               4   72[COMRAM] long 
  5019 ;; Auto vars:     Size  Location     Type
  5020 ;;		None
  5021 ;; Return value:  Size  Location     Type
  5022 ;;                  4   68[COMRAM] long 
  5023 ;; Registers used:
  5024 ;;		wreg, status,2, status,0, cstack
  5025 ;; Tracked objects:
  5026 ;;		On entry : 0/0
  5027 ;;		On exit  : 0/0
  5028 ;;		Unchanged: 0/0
  5029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5030 ;;      Params:         8       0       0       0       0       0       0
  5031 ;;      Locals:         0       0       0       0       0       0       0
  5032 ;;      Temps:          0       0       0       0       0       0       0
  5033 ;;      Totals:         8       0       0       0       0       0       0
  5034 ;;Total ram usage:        8 bytes
  5035 ;; Hardware stack levels used:    1
  5036 ;; Hardware stack levels required when called:    1
  5037 ;; This function calls:
  5038 ;;		___fladd
  5039 ;; This function is called by:
  5040 ;;		_sprintf
  5041 ;; This function uses a non-reentrant model
  5042 ;;
  5043                           
  5044                           	psect	text17
  5045  001778                     __ptext17:
  5046                           	opt callstack 0
  5047  001778                     ___flsub:
  5048                           	opt callstack 0
  5049  001778  FFFF               	dw	65535	; assembler added errata NOP
  5050                           
  5051                           ;incstack = 0
  5052  00177A  0E00               	movlw	0
  5053  00177C  1A49               	xorwf	___flsub@a,f,c
  5054  00177E  0E00               	movlw	0
  5055  001780  1A4A               	xorwf	___flsub@a+1,f,c
  5056  001782  0E00               	movlw	0
  5057  001784  1A4B               	xorwf	___flsub@a+2,f,c
  5058  001786  0E80               	movlw	128
  5059  001788  1A4C               	xorwf	___flsub@a+3,f,c
  5060  00178A  C045  F035         	movff	___flsub@b,___fladd@b
  5061  00178E  C046  F036         	movff	___flsub@b+1,___fladd@b+1
  5062  001792  C047  F037         	movff	___flsub@b+2,___fladd@b+2
  5063  001796  C048  F038         	movff	___flsub@b+3,___fladd@b+3
  5064  00179A  C049  F039         	movff	___flsub@a,___fladd@a
  5065  00179E  C04A  F03A         	movff	___flsub@a+1,___fladd@a+1
  5066  0017A2  C04B  F03B         	movff	___flsub@a+2,___fladd@a+2
  5067  0017A6  C04C  F03C         	movff	___flsub@a+3,___fladd@a+3
  5068  0017AA  EC63  F015         	call	___fladd	;wreg free
  5069  0017AE  C035  F045         	movff	?___fladd,?___flsub
  5070  0017B2  C036  F046         	movff	?___fladd+1,?___flsub+1
  5071  0017B6  C037  F047         	movff	?___fladd+2,?___flsub+2
  5072  0017BA  C038  F048         	movff	?___fladd+3,?___flsub+3
  5073  0017BE  0012               	return		;funcret
  5074  0017C0  FFFF               	dw	65535	; errata NOP
  5075  0017C2                     __end_of___flsub:
  5076                           	opt callstack 0
  5077                           
  5078 ;; *************** function ___flneg *****************
  5079 ;; Defined at:
  5080 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flneg.c"
  5081 ;; Parameters:    Size  Location     Type
  5082 ;;  f1              4    0[COMRAM] long 
  5083 ;; Auto vars:     Size  Location     Type
  5084 ;;		None
  5085 ;; Return value:  Size  Location     Type
  5086 ;;                  4    0[COMRAM] long 
  5087 ;; Registers used:
  5088 ;;		wreg, status,2, status,0
  5089 ;; Tracked objects:
  5090 ;;		On entry : 0/0
  5091 ;;		On exit  : 0/0
  5092 ;;		Unchanged: 0/0
  5093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5094 ;;      Params:         4       0       0       0       0       0       0
  5095 ;;      Locals:         0       0       0       0       0       0       0
  5096 ;;      Temps:          0       0       0       0       0       0       0
  5097 ;;      Totals:         4       0       0       0       0       0       0
  5098 ;;Total ram usage:        4 bytes
  5099 ;; Hardware stack levels used:    1
  5100 ;; This function calls:
  5101 ;;		Nothing
  5102 ;; This function is called by:
  5103 ;;		_sprintf
  5104 ;; This function uses a non-reentrant model
  5105 ;;
  5106                           
  5107                           	psect	text18
  5108  001706                     __ptext18:
  5109                           	opt callstack 0
  5110  001706                     ___flneg:
  5111                           	opt callstack 0
  5112  001706  FFFF               	dw	65535	; assembler added errata NOP
  5113                           
  5114                           ;incstack = 0
  5115  001708  5001               	movf	___flneg@f1,w,c
  5116  00170A  1002               	iorwf	___flneg@f1+1,w,c
  5117  00170C  1003               	iorwf	___flneg@f1+2,w,c
  5118  00170E  1004               	iorwf	___flneg@f1+3,w,c
  5119  001710  B4D8               	btfsc	status,2,c
  5120  001712  D008               	goto	l3371
  5121  001714  0E00               	movlw	0
  5122  001716  1A01               	xorwf	___flneg@f1,f,c
  5123  001718  0E00               	movlw	0
  5124  00171A  1A02               	xorwf	___flneg@f1+1,f,c
  5125  00171C  0E00               	movlw	0
  5126  00171E  1A03               	xorwf	___flneg@f1+2,f,c
  5127  001720  0E80               	movlw	128
  5128  001722  1A04               	xorwf	___flneg@f1+3,f,c
  5129  001724                     l3371:
  5130  001724  FFFF               	dw	65535	; assembler added errata NOP
  5131  001726  C001  F001         	movff	___flneg@f1,?___flneg
  5132  00172A  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5133  00172E  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5134  001732  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5135  001736  0012               	return		;funcret
  5136  001738  FFFF               	dw	65535	; errata NOP
  5137  00173A                     __end_of___flneg:
  5138                           	opt callstack 0
  5139                           
  5140 ;; *************** function ___flge *****************
  5141 ;; Defined at:
  5142 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
  5143 ;; Parameters:    Size  Location     Type
  5144 ;;  ff1             4    0[COMRAM] long 
  5145 ;;  ff2             4    4[COMRAM] long 
  5146 ;; Auto vars:     Size  Location     Type
  5147 ;;		None
  5148 ;; Return value:  Size  Location     Type
  5149 ;;		None               void
  5150 ;; Registers used:
  5151 ;;		wreg, status,2, status,0
  5152 ;; Tracked objects:
  5153 ;;		On entry : 0/0
  5154 ;;		On exit  : 0/0
  5155 ;;		Unchanged: 0/0
  5156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5157 ;;      Params:         8       0       0       0       0       0       0
  5158 ;;      Locals:         0       0       0       0       0       0       0
  5159 ;;      Temps:          4       0       0       0       0       0       0
  5160 ;;      Totals:        12       0       0       0       0       0       0
  5161 ;;Total ram usage:       12 bytes
  5162 ;; Hardware stack levels used:    1
  5163 ;; This function calls:
  5164 ;;		Nothing
  5165 ;; This function is called by:
  5166 ;;		_main
  5167 ;;		_sprintf
  5168 ;; This function uses a non-reentrant model
  5169 ;;
  5170                           
  5171                           	psect	text19
  5172  001D74                     __ptext19:
  5173                           	opt callstack 0
  5174  001D74                     ___flge:
  5175                           	opt callstack 0
  5176  001D74  FFFF               	dw	65535	; assembler added errata NOP
  5177                           
  5178                           ;incstack = 0
  5179  001D76  0E00               	movlw	0
  5180  001D78  1401               	andwf	___flge@ff1,w,c
  5181  001D7A  6E09               	movwf	??___flge& (0+255),c
  5182  001D7C  0E00               	movlw	0
  5183  001D7E  1402               	andwf	___flge@ff1+1,w,c
  5184  001D80  6E0A               	movwf	(??___flge+1)& (0+255),c
  5185  001D82  0E80               	movlw	128
  5186  001D84  1403               	andwf	___flge@ff1+2,w,c
  5187  001D86  6E0B               	movwf	(??___flge+2)& (0+255),c
  5188  001D88  0E7F               	movlw	127
  5189  001D8A  1404               	andwf	___flge@ff1+3,w,c
  5190  001D8C  6E0C               	movwf	(??___flge+3)& (0+255),c
  5191  001D8E  5009               	movf	??___flge,w,c
  5192  001D90  100A               	iorwf	??___flge+1,w,c
  5193  001D92  100B               	iorwf	??___flge+2,w,c
  5194  001D94  100C               	iorwf	??___flge+3,w,c
  5195  001D96  A4D8               	btfss	status,2,c
  5196  001D98  D008               	goto	l3349
  5197  001D9A  0E00               	movlw	0
  5198  001D9C  6E01               	movwf	___flge@ff1,c
  5199  001D9E  0E00               	movlw	0
  5200  001DA0  6E02               	movwf	___flge@ff1+1,c
  5201  001DA2  0E00               	movlw	0
  5202  001DA4  6E03               	movwf	___flge@ff1+2,c
  5203  001DA6  0E00               	movlw	0
  5204  001DA8  6E04               	movwf	___flge@ff1+3,c
  5205  001DAA                     l3349:
  5206  001DAA  FFFF               	dw	65535	; assembler added errata NOP
  5207  001DAC  0E00               	movlw	0
  5208  001DAE  1405               	andwf	___flge@ff2,w,c
  5209  001DB0  6E09               	movwf	??___flge& (0+255),c
  5210  001DB2  0E00               	movlw	0
  5211  001DB4  1406               	andwf	___flge@ff2+1,w,c
  5212  001DB6  6E0A               	movwf	(??___flge+1)& (0+255),c
  5213  001DB8  0E80               	movlw	128
  5214  001DBA  1407               	andwf	___flge@ff2+2,w,c
  5215  001DBC  6E0B               	movwf	(??___flge+2)& (0+255),c
  5216  001DBE  0E7F               	movlw	127
  5217  001DC0  1408               	andwf	___flge@ff2+3,w,c
  5218  001DC2  6E0C               	movwf	(??___flge+3)& (0+255),c
  5219  001DC4  5009               	movf	??___flge,w,c
  5220  001DC6  100A               	iorwf	??___flge+1,w,c
  5221  001DC8  100B               	iorwf	??___flge+2,w,c
  5222  001DCA  100C               	iorwf	??___flge+3,w,c
  5223  001DCC  A4D8               	btfss	status,2,c
  5224  001DCE  D008               	goto	l3353
  5225  001DD0  0E00               	movlw	0
  5226  001DD2  6E05               	movwf	___flge@ff2,c
  5227  001DD4  0E00               	movlw	0
  5228  001DD6  6E06               	movwf	___flge@ff2+1,c
  5229  001DD8  0E00               	movlw	0
  5230  001DDA  6E07               	movwf	___flge@ff2+2,c
  5231  001DDC  0E00               	movlw	0
  5232  001DDE  6E08               	movwf	___flge@ff2+3,c
  5233  001DE0                     l3353:
  5234  001DE0  FFFF               	dw	65535	; assembler added errata NOP
  5235  001DE2  AE04               	btfss	___flge@ff1+3,7,c
  5236  001DE4  D009               	goto	l3357
  5237  001DE6  6C01               	negf	___flge@ff1,c
  5238  001DE8  1E02               	comf	___flge@ff1+1,f,c
  5239  001DEA  B0D8               	btfsc	status,0,c
  5240  001DEC  2A02               	incf	___flge@ff1+1,f,c
  5241  001DEE  1E03               	comf	___flge@ff1+2,f,c
  5242  001DF0  B0D8               	btfsc	status,0,c
  5243  001DF2  2A03               	incf	___flge@ff1+2,f,c
  5244  001DF4  0E80               	movlw	128
  5245  001DF6  5604               	subfwb	___flge@ff1+3,f,c
  5246  001DF8                     l3357:
  5247  001DF8  FFFF               	dw	65535	; assembler added errata NOP
  5248  001DFA  AE08               	btfss	___flge@ff2+3,7,c
  5249  001DFC  D009               	goto	l535
  5250  001DFE  6C05               	negf	___flge@ff2,c
  5251  001E00  1E06               	comf	___flge@ff2+1,f,c
  5252  001E02  B0D8               	btfsc	status,0,c
  5253  001E04  2A06               	incf	___flge@ff2+1,f,c
  5254  001E06  1E07               	comf	___flge@ff2+2,f,c
  5255  001E08  B0D8               	btfsc	status,0,c
  5256  001E0A  2A07               	incf	___flge@ff2+2,f,c
  5257  001E0C  0E80               	movlw	128
  5258  001E0E  5608               	subfwb	___flge@ff2+3,f,c
  5259  001E10                     l535:
  5260  001E10  FFFF               	dw	65535	; assembler added errata NOP
  5261  001E12  0E00               	movlw	0
  5262  001E14  1A01               	xorwf	___flge@ff1,f,c
  5263  001E16  0E00               	movlw	0
  5264  001E18  1A02               	xorwf	___flge@ff1+1,f,c
  5265  001E1A  0E00               	movlw	0
  5266  001E1C  1A03               	xorwf	___flge@ff1+2,f,c
  5267  001E1E  0E80               	movlw	128
  5268  001E20  1A04               	xorwf	___flge@ff1+3,f,c
  5269  001E22  0E00               	movlw	0
  5270  001E24  1A05               	xorwf	___flge@ff2,f,c
  5271  001E26  0E00               	movlw	0
  5272  001E28  1A06               	xorwf	___flge@ff2+1,f,c
  5273  001E2A  0E00               	movlw	0
  5274  001E2C  1A07               	xorwf	___flge@ff2+2,f,c
  5275  001E2E  0E80               	movlw	128
  5276  001E30  1A08               	xorwf	___flge@ff2+3,f,c
  5277  001E32  5005               	movf	___flge@ff2,w,c
  5278  001E34  5C01               	subwf	___flge@ff1,w,c
  5279  001E36  5006               	movf	___flge@ff2+1,w,c
  5280  001E38  5802               	subwfb	___flge@ff1+1,w,c
  5281  001E3A  5007               	movf	___flge@ff2+2,w,c
  5282  001E3C  5803               	subwfb	___flge@ff1+2,w,c
  5283  001E3E  5008               	movf	___flge@ff2+3,w,c
  5284  001E40  5804               	subwfb	___flge@ff1+3,w,c
  5285  001E42  B0D8               	btfsc	status,0,c
  5286  001E44  D002               	goto	l3363
  5287  001E46  90D8               	bcf	status,0,c
  5288  001E48  D002               	goto	l536
  5289  001E4A                     l3363:
  5290  001E4A  FFFF               	dw	65535	; assembler added errata NOP
  5291  001E4C  80D8               	bsf	status,0,c
  5292  001E4E                     l536:
  5293  001E4E  FFFF               	dw	65535	; assembler added errata NOP
  5294  001E50  0012               	return		;funcret
  5295  001E52  FFFF               	dw	65535	; errata NOP
  5296  001E54                     __end_of___flge:
  5297                           	opt callstack 0
  5298                           
  5299 ;; *************** function ___fleq *****************
  5300 ;; Defined at:
  5301 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fleq.c"
  5302 ;; Parameters:    Size  Location     Type
  5303 ;;  ff1             4    0[COMRAM] long 
  5304 ;;  ff2             4    4[COMRAM] long 
  5305 ;; Auto vars:     Size  Location     Type
  5306 ;;		None
  5307 ;; Return value:  Size  Location     Type
  5308 ;;		None               void
  5309 ;; Registers used:
  5310 ;;		wreg, status,2, status,0
  5311 ;; Tracked objects:
  5312 ;;		On entry : 0/0
  5313 ;;		On exit  : 0/0
  5314 ;;		Unchanged: 0/0
  5315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5316 ;;      Params:         8       0       0       0       0       0       0
  5317 ;;      Locals:         0       0       0       0       0       0       0
  5318 ;;      Temps:          4       0       0       0       0       0       0
  5319 ;;      Totals:        12       0       0       0       0       0       0
  5320 ;;Total ram usage:       12 bytes
  5321 ;; Hardware stack levels used:    1
  5322 ;; This function calls:
  5323 ;;		Nothing
  5324 ;; This function is called by:
  5325 ;;		_sprintf
  5326 ;; This function uses a non-reentrant model
  5327 ;;
  5328                           
  5329                           	psect	text20
  5330  001B72                     __ptext20:
  5331                           	opt callstack 0
  5332  001B72                     ___fleq:
  5333                           	opt callstack 0
  5334  001B72  FFFF               	dw	65535	; assembler added errata NOP
  5335                           
  5336                           ;incstack = 0
  5337  001B74  0E00               	movlw	0
  5338  001B76  1401               	andwf	___fleq@ff1,w,c
  5339  001B78  6E09               	movwf	??___fleq& (0+255),c
  5340  001B7A  0E00               	movlw	0
  5341  001B7C  1402               	andwf	___fleq@ff1+1,w,c
  5342  001B7E  6E0A               	movwf	(??___fleq+1)& (0+255),c
  5343  001B80  0E80               	movlw	128
  5344  001B82  1403               	andwf	___fleq@ff1+2,w,c
  5345  001B84  6E0B               	movwf	(??___fleq+2)& (0+255),c
  5346  001B86  0E7F               	movlw	127
  5347  001B88  1404               	andwf	___fleq@ff1+3,w,c
  5348  001B8A  6E0C               	movwf	(??___fleq+3)& (0+255),c
  5349  001B8C  5009               	movf	??___fleq,w,c
  5350  001B8E  100A               	iorwf	??___fleq+1,w,c
  5351  001B90  100B               	iorwf	??___fleq+2,w,c
  5352  001B92  100C               	iorwf	??___fleq+3,w,c
  5353  001B94  A4D8               	btfss	status,2,c
  5354  001B96  D008               	goto	l3333
  5355  001B98  0E00               	movlw	0
  5356  001B9A  6E01               	movwf	___fleq@ff1,c
  5357  001B9C  0E00               	movlw	0
  5358  001B9E  6E02               	movwf	___fleq@ff1+1,c
  5359  001BA0  0E00               	movlw	0
  5360  001BA2  6E03               	movwf	___fleq@ff1+2,c
  5361  001BA4  0E00               	movlw	0
  5362  001BA6  6E04               	movwf	___fleq@ff1+3,c
  5363  001BA8                     l3333:
  5364  001BA8  FFFF               	dw	65535	; assembler added errata NOP
  5365  001BAA  0E00               	movlw	0
  5366  001BAC  1405               	andwf	___fleq@ff2,w,c
  5367  001BAE  6E09               	movwf	??___fleq& (0+255),c
  5368  001BB0  0E00               	movlw	0
  5369  001BB2  1406               	andwf	___fleq@ff2+1,w,c
  5370  001BB4  6E0A               	movwf	(??___fleq+1)& (0+255),c
  5371  001BB6  0E80               	movlw	128
  5372  001BB8  1407               	andwf	___fleq@ff2+2,w,c
  5373  001BBA  6E0B               	movwf	(??___fleq+2)& (0+255),c
  5374  001BBC  0E7F               	movlw	127
  5375  001BBE  1408               	andwf	___fleq@ff2+3,w,c
  5376  001BC0  6E0C               	movwf	(??___fleq+3)& (0+255),c
  5377  001BC2  5009               	movf	??___fleq,w,c
  5378  001BC4  100A               	iorwf	??___fleq+1,w,c
  5379  001BC6  100B               	iorwf	??___fleq+2,w,c
  5380  001BC8  100C               	iorwf	??___fleq+3,w,c
  5381  001BCA  A4D8               	btfss	status,2,c
  5382  001BCC  D008               	goto	l3337
  5383  001BCE  0E00               	movlw	0
  5384  001BD0  6E05               	movwf	___fleq@ff2,c
  5385  001BD2  0E00               	movlw	0
  5386  001BD4  6E06               	movwf	___fleq@ff2+1,c
  5387  001BD6  0E00               	movlw	0
  5388  001BD8  6E07               	movwf	___fleq@ff2+2,c
  5389  001BDA  0E00               	movlw	0
  5390  001BDC  6E08               	movwf	___fleq@ff2+3,c
  5391  001BDE                     l3337:
  5392  001BDE  FFFF               	dw	65535	; assembler added errata NOP
  5393  001BE0  5005               	movf	___fleq@ff2,w,c
  5394  001BE2  1801               	xorwf	___fleq@ff1,w,c
  5395  001BE4  E10A               	bnz	u3530
  5396  001BE6  5006               	movf	___fleq@ff2+1,w,c
  5397  001BE8  1802               	xorwf	___fleq@ff1+1,w,c
  5398  001BEA  E107               	bnz	u3530
  5399  001BEC  5007               	movf	___fleq@ff2+2,w,c
  5400  001BEE  1803               	xorwf	___fleq@ff1+2,w,c
  5401  001BF0  E104               	bnz	u3530
  5402  001BF2  5008               	movf	___fleq@ff2+3,w,c
  5403  001BF4  1804               	xorwf	___fleq@ff1+3,w,c
  5404  001BF6  B4D8               	btfsc	status,2,c
  5405  001BF8  D002               	goto	l3341
  5406  001BFA                     u3530:
  5407  001BFA  90D8               	bcf	status,0,c
  5408  001BFC  D002               	goto	l529
  5409  001BFE                     l3341:
  5410  001BFE  FFFF               	dw	65535	; assembler added errata NOP
  5411  001C00  80D8               	bsf	status,0,c
  5412  001C02                     l529:
  5413  001C02  FFFF               	dw	65535	; assembler added errata NOP
  5414  001C04  0012               	return		;funcret
  5415  001C06  FFFF               	dw	65535	; errata NOP
  5416  001C08                     __end_of___fleq:
  5417                           	opt callstack 0
  5418                           
  5419 ;; *************** function _print_message_onLCD *****************
  5420 ;; Defined at:
  5421 ;;		line 152 in file "main.c"
  5422 ;; Parameters:    Size  Location     Type
  5423 ;;  message         2    4[COMRAM] PTR unsigned char 
  5424 ;;		 -> STR_10(17), STR_9(16), STR_8(17), STR_7(17), 
  5425 ;;		 -> STR_6(17), STR_5(15), main@message(20), STR_2(14), 
  5426 ;;		 -> STR_1(14), 
  5427 ;; Auto vars:     Size  Location     Type
  5428 ;;  i               1    8[COMRAM] unsigned char 
  5429 ;; Return value:  Size  Location     Type
  5430 ;;                  1    wreg      void 
  5431 ;; Registers used:
  5432 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5433 ;; Tracked objects:
  5434 ;;		On entry : 0/0
  5435 ;;		On exit  : 0/0
  5436 ;;		Unchanged: 0/0
  5437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5438 ;;      Params:         2       0       0       0       0       0       0
  5439 ;;      Locals:         1       0       0       0       0       0       0
  5440 ;;      Temps:          2       0       0       0       0       0       0
  5441 ;;      Totals:         5       0       0       0       0       0       0
  5442 ;;Total ram usage:        5 bytes
  5443 ;; Hardware stack levels used:    1
  5444 ;; Hardware stack levels required when called:    1
  5445 ;; This function calls:
  5446 ;;		_R_D
  5447 ;;		_strlen
  5448 ;; This function is called by:
  5449 ;;		_main
  5450 ;; This function uses a non-reentrant model
  5451 ;;
  5452                           
  5453                           	psect	text21
  5454  001916                     __ptext21:
  5455                           	opt callstack 0
  5456  001916                     _print_message_onLCD:
  5457                           	opt callstack 0
  5458  001916  FFFF               	dw	65535	; assembler added errata NOP
  5459                           
  5460                           ;main.c: 153: for (char i = 0; i < strlen(message); i++) {
  5461                           
  5462                           ;incstack = 0
  5463  001918  0E00               	movlw	0
  5464  00191A  6E09               	movwf	print_message_onLCD@i,c
  5465  00191C  D01B               	goto	l3497
  5466  00191E                     l3493:
  5467  00191E  FFFF               	dw	65535	; assembler added errata NOP
  5468                           
  5469                           ;main.c: 154: R_D(message[i]);
  5470  001920  5009               	movf	print_message_onLCD@i,w,c
  5471  001922  2405               	addwf	print_message_onLCD@message,w,c
  5472  001924  6E07               	movwf	??_print_message_onLCD& (0+255),c
  5473  001926  0E00               	movlw	0
  5474  001928  2006               	addwfc	print_message_onLCD@message+1,w,c
  5475  00192A  6E08               	movwf	(??_print_message_onLCD+1)& (0+255),c
  5476  00192C  C007  FFF6         	movff	??_print_message_onLCD,tblptrl
  5477  001930  C008  FFF7         	movff	??_print_message_onLCD+1,tblptrh
  5478  001934  6AF8               	clrf	tblptru,c
  5479  001936  0E05               	movlw	(high __ramtop+-1)
  5480  001938  64F7               	cpfsgt	tblptrh,c
  5481  00193A  D004               	bra	u3807
  5482  00193C  0008               	tblrd		*
  5483  00193E  FFFF               	dw	65535	; errata NOP
  5484  001940  50F5               	movf	tablat,w,c
  5485  001942  D005               	bra	u3800
  5486  001944                     u3807:
  5487  001944  CFF6 FFE9          	movff	tblptrl,fsr0l
  5488  001948  CFF7 FFEA          	movff	tblptrh,fsr0h
  5489  00194C  50EF               	movf	indf0,w,c
  5490  00194E                     u3800:
  5491  00194E  EC4E  F00B         	call	_R_D
  5492  001952  2A09               	incf	print_message_onLCD@i,f,c
  5493  001954                     l3497:
  5494  001954  FFFF               	dw	65535	; assembler added errata NOP
  5495  001956  C005  F001         	movff	print_message_onLCD@message,strlen@s
  5496  00195A  C006  F002         	movff	print_message_onLCD@message+1,strlen@s+1
  5497  00195E  ECE1  F00B         	call	_strlen	;wreg free
  5498  001962  5009               	movf	print_message_onLCD@i,w,c
  5499  001964  6E07               	movwf	??_print_message_onLCD& (0+255),c
  5500  001966  6A08               	clrf	(??_print_message_onLCD+1)& (0+255),c
  5501  001968  5001               	movf	?_strlen,w,c
  5502  00196A  5C07               	subwf	??_print_message_onLCD,w,c
  5503  00196C  5002               	movf	?_strlen+1,w,c
  5504  00196E  5808               	subwfb	??_print_message_onLCD+1,w,c
  5505  001970  B0D8               	btfsc	status,0,c
  5506  001972  0012               	return		;funcret
  5507  001974  FFFF               	dw	65535	; assembler added errata NOP
  5508  001976  D7D3               	goto	l3493
  5509  001978  FFFF               	dw	65535	; errata NOP
  5510  00197A                     __end_of_print_message_onLCD:
  5511                           	opt callstack 0
  5512                           
  5513 ;; *************** function _strlen *****************
  5514 ;; Defined at:
  5515 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strlen.c"
  5516 ;; Parameters:    Size  Location     Type
  5517 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5518 ;;		 -> STR_10(17), STR_9(16), STR_8(17), STR_7(17), 
  5519 ;;		 -> STR_6(17), STR_5(15), main@message(20), STR_2(14), 
  5520 ;;		 -> STR_1(14), 
  5521 ;; Auto vars:     Size  Location     Type
  5522 ;;  cp              2    2[COMRAM] PTR const unsigned char 
  5523 ;;		 -> STR_10(17), STR_9(16), STR_8(17), STR_7(17), 
  5524 ;;		 -> STR_6(17), STR_5(15), main@message(20), STR_2(14), 
  5525 ;;		 -> STR_1(14), 
  5526 ;; Return value:  Size  Location     Type
  5527 ;;                  2    0[COMRAM] unsigned int 
  5528 ;; Registers used:
  5529 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  5530 ;; Tracked objects:
  5531 ;;		On entry : 0/0
  5532 ;;		On exit  : 0/0
  5533 ;;		Unchanged: 0/0
  5534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5535 ;;      Params:         2       0       0       0       0       0       0
  5536 ;;      Locals:         2       0       0       0       0       0       0
  5537 ;;      Temps:          0       0       0       0       0       0       0
  5538 ;;      Totals:         4       0       0       0       0       0       0
  5539 ;;Total ram usage:        4 bytes
  5540 ;; Hardware stack levels used:    1
  5541 ;; This function calls:
  5542 ;;		Nothing
  5543 ;; This function is called by:
  5544 ;;		_print_message_onLCD
  5545 ;; This function uses a non-reentrant model
  5546 ;;
  5547                           
  5548                           	psect	text22
  5549  0017C2                     __ptext22:
  5550                           	opt callstack 0
  5551  0017C2                     _strlen:
  5552                           	opt callstack 0
  5553  0017C2  FFFF               	dw	65535	; assembler added errata NOP
  5554                           
  5555                           ;incstack = 0
  5556  0017C4  C001  F003         	movff	strlen@s,strlen@cp
  5557  0017C8  C002  F004         	movff	strlen@s+1,strlen@cp+1
  5558  0017CC  D003               	goto	l2967
  5559  0017CE                     l2965:
  5560  0017CE  FFFF               	dw	65535	; assembler added errata NOP
  5561  0017D0  4A03               	infsnz	strlen@cp,f,c
  5562  0017D2  2A04               	incf	strlen@cp+1,f,c
  5563  0017D4                     l2967:
  5564  0017D4  FFFF               	dw	65535	; assembler added errata NOP
  5565  0017D6  C003  FFF6         	movff	strlen@cp,tblptrl
  5566  0017DA  C004  FFF7         	movff	strlen@cp+1,tblptrh
  5567  0017DE  6AF8               	clrf	tblptru,c
  5568  0017E0  0E05               	movlw	(high __ramtop+-1)
  5569  0017E2  64F7               	cpfsgt	tblptrh,c
  5570  0017E4  D004               	bra	u2987
  5571  0017E6  0008               	tblrd		*
  5572  0017E8  FFFF               	dw	65535	; errata NOP
  5573  0017EA  50F5               	movf	tablat,w,c
  5574  0017EC  D005               	bra	u2980
  5575  0017EE                     u2987:
  5576  0017EE  CFF6 FFE9          	movff	tblptrl,fsr0l
  5577  0017F2  CFF7 FFEA          	movff	tblptrh,fsr0h
  5578  0017F6  50EF               	movf	indf0,w,c
  5579  0017F8                     u2980:
  5580  0017F8  0900               	iorlw	0
  5581  0017FA  A4D8               	btfss	status,2,c
  5582  0017FC  D7E8               	goto	l2965
  5583  0017FE  5001               	movf	strlen@s,w,c
  5584  001800  5C03               	subwf	strlen@cp,w,c
  5585  001802  6E01               	movwf	?_strlen,c
  5586  001804  5002               	movf	strlen@s+1,w,c
  5587  001806  5804               	subwfb	strlen@cp+1,w,c
  5588  001808  6E02               	movwf	?_strlen+1,c
  5589  00180A  0012               	return		;funcret
  5590  00180C  FFFF               	dw	65535	; errata NOP
  5591  00180E                     __end_of_strlen:
  5592                           	opt callstack 0
  5593                           
  5594 ;; *************** function _R_D *****************
  5595 ;; Defined at:
  5596 ;;		line 143 in file "main.c"
  5597 ;; Parameters:    Size  Location     Type
  5598 ;;  dato            1    wreg     unsigned char 
  5599 ;; Auto vars:     Size  Location     Type
  5600 ;;  dato            1    0[COMRAM] unsigned char 
  5601 ;; Return value:  Size  Location     Type
  5602 ;;                  1    wreg      void 
  5603 ;; Registers used:
  5604 ;;		wreg, status,2, cstack
  5605 ;; Tracked objects:
  5606 ;;		On entry : 0/0
  5607 ;;		On exit  : 0/0
  5608 ;;		Unchanged: 0/0
  5609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5610 ;;      Params:         0       0       0       0       0       0       0
  5611 ;;      Locals:         1       0       0       0       0       0       0
  5612 ;;      Temps:          0       0       0       0       0       0       0
  5613 ;;      Totals:         1       0       0       0       0       0       0
  5614 ;;Total ram usage:        1 bytes
  5615 ;; Hardware stack levels used:    1
  5616 ;; This function calls:
  5617 ;;		Nothing
  5618 ;; This function is called by:
  5619 ;;		_print_message_onLCD
  5620 ;; This function uses a non-reentrant model
  5621 ;;
  5622                           
  5623                           	psect	text23
  5624  00169C                     __ptext23:
  5625                           	opt callstack 0
  5626  00169C                     _R_D:
  5627                           	opt callstack 0
  5628  00169C  FFFF               	dw	65535	; assembler added errata NOP
  5629                           
  5630                           ;incstack = 0
  5631                           ;R_D@dato stored from wreg
  5632  00169E  6E01               	movwf	R_D@dato,c
  5633                           
  5634                           ;main.c: 144: LC3 = 0;
  5635  0016A0  968B               	bcf	3979,3,c	;volatile
  5636                           
  5637                           ;main.c: 145: LC4 = 1;
  5638  0016A2  888B               	bsf	3979,4,c	;volatile
  5639                           
  5640                           ;main.c: 146: LATD = dato;
  5641  0016A4  C001  FF8C         	movff	R_D@dato,3980	;volatile
  5642                           
  5643                           ;main.c: 147: LC3 = 1;
  5644  0016A8  868B               	bsf	3979,3,c	;volatile
  5645                           
  5646                           ;main.c: 148: _delay((unsigned long)((100)*(4000000/4000000.0)));
  5647  0016AA  0E19               	movlw	25
  5648  0016AC                     u4477:
  5649  0016AC  FFFF               	dw	65535	; errata NOP
  5650  0016AE  2EE8               	decfsz	wreg,f,c
  5651  0016B0  D7FD               	bra	u4477
  5652                           
  5653                           ;main.c: 149: LC3 = 0;
  5654  0016B2  968B               	bcf	3979,3,c	;volatile
  5655  0016B4  0012               	return		;funcret
  5656  0016B6  FFFF               	dw	65535	; errata NOP
  5657  0016B8                     __end_of_R_D:
  5658                           	opt callstack 0
  5659                           
  5660 ;; *************** function _light_the_bulb_and_start_engine *****************
  5661 ;; Defined at:
  5662 ;;		line 181 in file "main.c"
  5663 ;; Parameters:    Size  Location     Type
  5664 ;;		None
  5665 ;; Auto vars:     Size  Location     Type
  5666 ;;		None
  5667 ;; Return value:  Size  Location     Type
  5668 ;;                  1    wreg      void 
  5669 ;; Registers used:
  5670 ;;		wreg, status,2
  5671 ;; Tracked objects:
  5672 ;;		On entry : 0/0
  5673 ;;		On exit  : 0/0
  5674 ;;		Unchanged: 0/0
  5675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5676 ;;      Params:         0       0       0       0       0       0       0
  5677 ;;      Locals:         0       0       0       0       0       0       0
  5678 ;;      Temps:          0       0       0       0       0       0       0
  5679 ;;      Totals:         0       0       0       0       0       0       0
  5680 ;;Total ram usage:        0 bytes
  5681 ;; Hardware stack levels used:    1
  5682 ;; This function calls:
  5683 ;;		Nothing
  5684 ;; This function is called by:
  5685 ;;		_main
  5686 ;; This function uses a non-reentrant model
  5687 ;;
  5688                           
  5689                           	psect	text24
  5690  00164C                     __ptext24:
  5691                           	opt callstack 0
  5692  00164C                     _light_the_bulb_and_start_engine:
  5693                           	opt callstack 0
  5694  00164C  FFFF               	dw	65535	; assembler added errata NOP
  5695                           
  5696                           ;main.c: 182: LATB = 3;
  5697                           
  5698                           ;incstack = 0
  5699  00164E  0E03               	movlw	3
  5700  001650  6E8A               	movwf	3978,c	;volatile
  5701  001652  0012               	return		;funcret
  5702  001654  FFFF               	dw	65535	; errata NOP
  5703  001656                     __end_of_light_the_bulb_and_start_engine:
  5704                           	opt callstack 0
  5705                           
  5706 ;; *************** function _light_the_bulb *****************
  5707 ;; Defined at:
  5708 ;;		line 173 in file "main.c"
  5709 ;; Parameters:    Size  Location     Type
  5710 ;;		None
  5711 ;; Auto vars:     Size  Location     Type
  5712 ;;		None
  5713 ;; Return value:  Size  Location     Type
  5714 ;;                  1    wreg      void 
  5715 ;; Registers used:
  5716 ;;		wreg, status,2
  5717 ;; Tracked objects:
  5718 ;;		On entry : 0/0
  5719 ;;		On exit  : 0/0
  5720 ;;		Unchanged: 0/0
  5721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5722 ;;      Params:         0       0       0       0       0       0       0
  5723 ;;      Locals:         0       0       0       0       0       0       0
  5724 ;;      Temps:          0       0       0       0       0       0       0
  5725 ;;      Totals:         0       0       0       0       0       0       0
  5726 ;;Total ram usage:        0 bytes
  5727 ;; Hardware stack levels used:    1
  5728 ;; This function calls:
  5729 ;;		Nothing
  5730 ;; This function is called by:
  5731 ;;		_main
  5732 ;; This function uses a non-reentrant model
  5733 ;;
  5734                           
  5735                           	psect	text25
  5736  001642                     __ptext25:
  5737                           	opt callstack 0
  5738  001642                     _light_the_bulb:
  5739                           	opt callstack 0
  5740  001642  FFFF               	dw	65535	; assembler added errata NOP
  5741                           
  5742                           ;main.c: 174: LATB = 1;
  5743                           
  5744                           ;incstack = 0
  5745  001644  0E01               	movlw	1
  5746  001646  6E8A               	movwf	3978,c	;volatile
  5747  001648  0012               	return		;funcret
  5748  00164A  FFFF               	dw	65535	; errata NOP
  5749  00164C                     __end_of_light_the_bulb:
  5750                           	opt callstack 0
  5751                           
  5752 ;; *************** function _initial_config *****************
  5753 ;; Defined at:
  5754 ;;		line 99 in file "main.c"
  5755 ;; Parameters:    Size  Location     Type
  5756 ;;		None
  5757 ;; Auto vars:     Size  Location     Type
  5758 ;;		None
  5759 ;; Return value:  Size  Location     Type
  5760 ;;                  1    wreg      void 
  5761 ;; Registers used:
  5762 ;;		wreg, status,2
  5763 ;; Tracked objects:
  5764 ;;		On entry : 0/0
  5765 ;;		On exit  : 0/0
  5766 ;;		Unchanged: 0/0
  5767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5768 ;;      Params:         0       0       0       0       0       0       0
  5769 ;;      Locals:         0       0       0       0       0       0       0
  5770 ;;      Temps:          0       0       0       0       0       0       0
  5771 ;;      Totals:         0       0       0       0       0       0       0
  5772 ;;Total ram usage:        0 bytes
  5773 ;; Hardware stack levels used:    1
  5774 ;; This function calls:
  5775 ;;		Nothing
  5776 ;; This function is called by:
  5777 ;;		_main
  5778 ;; This function uses a non-reentrant model
  5779 ;;
  5780                           
  5781                           	psect	text26
  5782  00173A                     __ptext26:
  5783                           	opt callstack 0
  5784  00173A                     _initial_config:
  5785                           	opt callstack 0
  5786  00173A  FFFF               	dw	65535	; assembler added errata NOP
  5787                           
  5788                           ;main.c: 100: TRISA = 0X03;
  5789                           
  5790                           ;incstack = 0
  5791  00173C  0E03               	movlw	3
  5792  00173E  6E92               	movwf	3986,c	;volatile
  5793                           
  5794                           ;main.c: 102: TRISB = 0X00;
  5795  001740  0E00               	movlw	0
  5796  001742  6E93               	movwf	3987,c	;volatile
  5797                           
  5798                           ;main.c: 103: TRISC = 0X00;
  5799  001744  0E00               	movlw	0
  5800  001746  6E94               	movwf	3988,c	;volatile
  5801                           
  5802                           ;main.c: 104: TRISD = 0X00;
  5803  001748  0E00               	movlw	0
  5804  00174A  6E95               	movwf	3989,c	;volatile
  5805                           
  5806                           ;main.c: 108: ADCON0 = 0B01000001;
  5807  00174C  0E41               	movlw	65
  5808  00174E  6EC2               	movwf	4034,c	;volatile
  5809                           
  5810                           ;main.c: 109: ADCON1 = 0B10000100;
  5811  001750  0E84               	movlw	132
  5812  001752  6EC1               	movwf	4033,c	;volatile
  5813                           
  5814                           ;main.c: 112: LATA = 0;
  5815  001754  0E00               	movlw	0
  5816  001756  6E89               	movwf	3977,c	;volatile
  5817                           
  5818                           ;main.c: 113: LATB = 0;
  5819  001758  0E00               	movlw	0
  5820  00175A  6E8A               	movwf	3978,c	;volatile
  5821                           
  5822                           ;main.c: 114: LATC = 0;
  5823  00175C  0E00               	movlw	0
  5824  00175E  6E8B               	movwf	3979,c	;volatile
  5825                           
  5826                           ;main.c: 115: LATD = 0;
  5827  001760  0E00               	movlw	0
  5828  001762  6E8C               	movwf	3980,c	;volatile
  5829                           
  5830                           ;main.c: 116: PORTA = 0;
  5831  001764  0E00               	movlw	0
  5832  001766  6E80               	movwf	3968,c	;volatile
  5833                           
  5834                           ;main.c: 117: PORTB = 0;
  5835  001768  0E00               	movlw	0
  5836  00176A  6E81               	movwf	3969,c	;volatile
  5837                           
  5838                           ;main.c: 118: PORTC = 0;
  5839  00176C  0E00               	movlw	0
  5840  00176E  6E82               	movwf	3970,c	;volatile
  5841                           
  5842                           ;main.c: 119: PORTD = 0;
  5843  001770  0E00               	movlw	0
  5844  001772  6E83               	movwf	3971,c	;volatile
  5845  001774  0012               	return		;funcret
  5846  001776  FFFF               	dw	65535	; errata NOP
  5847  001778                     __end_of_initial_config:
  5848                           	opt callstack 0
  5849                           
  5850 ;; *************** function _init_LCD *****************
  5851 ;; Defined at:
  5852 ;;		line 122 in file "main.c"
  5853 ;; Parameters:    Size  Location     Type
  5854 ;;		None
  5855 ;; Auto vars:     Size  Location     Type
  5856 ;;		None
  5857 ;; Return value:  Size  Location     Type
  5858 ;;                  1    wreg      void 
  5859 ;; Registers used:
  5860 ;;		wreg, status,2, cstack
  5861 ;; Tracked objects:
  5862 ;;		On entry : 0/0
  5863 ;;		On exit  : 0/0
  5864 ;;		Unchanged: 0/0
  5865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5866 ;;      Params:         0       0       0       0       0       0       0
  5867 ;;      Locals:         0       0       0       0       0       0       0
  5868 ;;      Temps:          1       0       0       0       0       0       0
  5869 ;;      Totals:         1       0       0       0       0       0       0
  5870 ;;Total ram usage:        1 bytes
  5871 ;; Hardware stack levels used:    1
  5872 ;; Hardware stack levels required when called:    1
  5873 ;; This function calls:
  5874 ;;		_R_I
  5875 ;; This function is called by:
  5876 ;;		_main
  5877 ;; This function uses a non-reentrant model
  5878 ;;
  5879                           
  5880                           	psect	text27
  5881  00185E                     __ptext27:
  5882                           	opt callstack 0
  5883  00185E                     _init_LCD:
  5884                           	opt callstack 0
  5885  00185E  FFFF               	dw	65535	; assembler added errata NOP
  5886                           
  5887                           ;main.c: 123: _delay((unsigned long)((20)*(4000000/4000.0)));
  5888                           
  5889                           ;incstack = 0
  5890  001860  0E14               	movlw	20
  5891  001862  6E02               	movwf	??_init_LCD& (0+255),c
  5892  001864  0E7D               	movlw	125
  5893  001866                     u4487:
  5894  001866  FFFF               	dw	65535	; errata NOP
  5895  001868  2EE8               	decfsz	wreg,f,c
  5896  00186A  D7FD               	bra	u4487
  5897  00186C  2E02               	decfsz	??_init_LCD& (0+255),f,c
  5898  00186E  D7FB               	bra	u4487
  5899  001870  D000               	nop2	
  5900                           
  5901                           ;main.c: 125: R_I(0X30);
  5902  001872  0E30               	movlw	48
  5903  001874  EC40  F00B         	call	_R_I
  5904                           
  5905                           ;main.c: 126: _delay((unsigned long)((5)*(4000000/4000.0)));
  5906  001878  0E05               	movlw	5
  5907  00187A  6E02               	movwf	??_init_LCD& (0+255),c
  5908  00187C  0EDF               	movlw	223
  5909  00187E                     u4497:
  5910  00187E  FFFF               	dw	65535	; errata NOP
  5911  001880  2EE8               	decfsz	wreg,f,c
  5912  001882  D7FD               	bra	u4497
  5913  001884  2E02               	decfsz	??_init_LCD& (0+255),f,c
  5914  001886  D7FB               	bra	u4497
  5915                           
  5916                           ;main.c: 127: R_I(0X30);
  5917  001888  0E30               	movlw	48
  5918  00188A  EC40  F00B         	call	_R_I
  5919                           
  5920                           ;main.c: 128: R_I(0X3C);
  5921  00188E  0E3C               	movlw	60
  5922  001890  EC40  F00B         	call	_R_I
  5923                           
  5924                           ;main.c: 129: R_I(0X0C);
  5925  001894  0E0C               	movlw	12
  5926  001896  EC40  F00B         	call	_R_I
  5927                           
  5928                           ;main.c: 130: R_I(0X01);
  5929  00189A  0E01               	movlw	1
  5930  00189C  EC40  F00B         	call	_R_I
  5931                           
  5932                           ;main.c: 131: _delay((unsigned long)((20)*(4000000/4000.0)));
  5933  0018A0  0E14               	movlw	20
  5934  0018A2  6E02               	movwf	??_init_LCD& (0+255),c
  5935  0018A4  0E7D               	movlw	125
  5936  0018A6                     u4507:
  5937  0018A6  FFFF               	dw	65535	; errata NOP
  5938  0018A8  2EE8               	decfsz	wreg,f,c
  5939  0018AA  D7FD               	bra	u4507
  5940  0018AC  2E02               	decfsz	??_init_LCD& (0+255),f,c
  5941  0018AE  D7FB               	bra	u4507
  5942  0018B0  D000               	nop2	
  5943  0018B2  0012               	return		;funcret
  5944  0018B4  FFFF               	dw	65535	; errata NOP
  5945  0018B6                     __end_of_init_LCD:
  5946                           	opt callstack 0
  5947                           
  5948 ;; *************** function _R_I *****************
  5949 ;; Defined at:
  5950 ;;		line 134 in file "main.c"
  5951 ;; Parameters:    Size  Location     Type
  5952 ;;  dato            1    wreg     unsigned char 
  5953 ;; Auto vars:     Size  Location     Type
  5954 ;;  dato            1    0[COMRAM] unsigned char 
  5955 ;; Return value:  Size  Location     Type
  5956 ;;                  1    wreg      void 
  5957 ;; Registers used:
  5958 ;;		wreg, status,2, cstack
  5959 ;; Tracked objects:
  5960 ;;		On entry : 0/0
  5961 ;;		On exit  : 0/0
  5962 ;;		Unchanged: 0/0
  5963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5964 ;;      Params:         0       0       0       0       0       0       0
  5965 ;;      Locals:         1       0       0       0       0       0       0
  5966 ;;      Temps:          0       0       0       0       0       0       0
  5967 ;;      Totals:         1       0       0       0       0       0       0
  5968 ;;Total ram usage:        1 bytes
  5969 ;; Hardware stack levels used:    1
  5970 ;; This function calls:
  5971 ;;		Nothing
  5972 ;; This function is called by:
  5973 ;;		_main
  5974 ;;		_init_LCD
  5975 ;; This function uses a non-reentrant model
  5976 ;;
  5977                           
  5978                           	psect	text28
  5979  001680                     __ptext28:
  5980                           	opt callstack 0
  5981  001680                     _R_I:
  5982                           	opt callstack 0
  5983  001680  FFFF               	dw	65535	; assembler added errata NOP
  5984                           
  5985                           ;incstack = 0
  5986                           ;R_I@dato stored from wreg
  5987  001682  6E01               	movwf	R_I@dato,c
  5988                           
  5989                           ;main.c: 135: LC3 = 0;
  5990  001684  968B               	bcf	3979,3,c	;volatile
  5991                           
  5992                           ;main.c: 136: LC4 = 0;
  5993  001686  988B               	bcf	3979,4,c	;volatile
  5994                           
  5995                           ;main.c: 137: LATD = dato;
  5996  001688  C001  FF8C         	movff	R_I@dato,3980	;volatile
  5997                           
  5998                           ;main.c: 138: LC3 = 1;
  5999  00168C  868B               	bsf	3979,3,c	;volatile
  6000                           
  6001                           ;main.c: 139: _delay((unsigned long)((100)*(4000000/4000000.0)));
  6002  00168E  0E19               	movlw	25
  6003  001690                     u4517:
  6004  001690  FFFF               	dw	65535	; errata NOP
  6005  001692  2EE8               	decfsz	wreg,f,c
  6006  001694  D7FD               	bra	u4517
  6007                           
  6008                           ;main.c: 140: LC3 = 0;
  6009  001696  968B               	bcf	3979,3,c	;volatile
  6010  001698  0012               	return		;funcret
  6011  00169A  FFFF               	dw	65535	; errata NOP
  6012  00169C                     __end_of_R_I:
  6013                           	opt callstack 0
  6014                           
  6015 ;; *************** function _get_voltage *****************
  6016 ;; Defined at:
  6017 ;;		line 158 in file "main.c"
  6018 ;; Parameters:    Size  Location     Type
  6019 ;;  ac_in           2   64[COMRAM] unsigned int 
  6020 ;; Auto vars:     Size  Location     Type
  6021 ;;		None
  6022 ;; Return value:  Size  Location     Type
  6023 ;;                  4   64[COMRAM] float 
  6024 ;; Registers used:
  6025 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6026 ;; Tracked objects:
  6027 ;;		On entry : 0/0
  6028 ;;		On exit  : 0/0
  6029 ;;		Unchanged: 0/0
  6030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6031 ;;      Params:         4       0       0       0       0       0       0
  6032 ;;      Locals:         0       0       0       0       0       0       0
  6033 ;;      Temps:          0       0       0       0       0       0       0
  6034 ;;      Totals:         4       0       0       0       0       0       0
  6035 ;;Total ram usage:        4 bytes
  6036 ;; Hardware stack levels used:    1
  6037 ;; Hardware stack levels required when called:    1
  6038 ;; This function calls:
  6039 ;;		___fldiv
  6040 ;;		___flmul
  6041 ;;		___xxtofl
  6042 ;; This function is called by:
  6043 ;;		_main
  6044 ;; This function uses a non-reentrant model
  6045 ;;
  6046                           
  6047                           	psect	text29
  6048  00197A                     __ptext29:
  6049                           	opt callstack 0
  6050  00197A                     _get_voltage:
  6051                           	opt callstack 0
  6052  00197A  FFFF               	dw	65535	; assembler added errata NOP
  6053                           
  6054                           ;main.c: 159: return (ac_in * 5.0 / 1023);
  6055                           
  6056                           ;incstack = 0
  6057  00197C  0E00               	movlw	0
  6058  00197E  6E13               	movwf	___flmul@a,c
  6059  001980  0E00               	movlw	0
  6060  001982  6E14               	movwf	___flmul@a+1,c
  6061  001984  0EA0               	movlw	160
  6062  001986  6E15               	movwf	___flmul@a+2,c
  6063  001988  0E40               	movlw	64
  6064  00198A  6E16               	movwf	___flmul@a+3,c
  6065  00198C  C041  F001         	movff	get_voltage@ac_in,___xxtofl@val
  6066  001990  C042  F002         	movff	get_voltage@ac_in+1,___xxtofl@val+1
  6067  001994  6A03               	clrf	___xxtofl@val+2,c
  6068  001996  6A04               	clrf	___xxtofl@val+3,c
  6069  001998  0E00               	movlw	0
  6070  00199A  ECAE  F010         	call	___xxtofl
  6071  00199E  C001  F00F         	movff	?___xxtofl,___flmul@b
  6072  0019A2  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  6073  0019A6  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  6074  0019AA  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  6075  0019AE  EC05  F017         	call	___flmul	;wreg free
  6076  0019B2  C00F  F028         	movff	?___flmul,___fldiv@b
  6077  0019B6  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  6078  0019BA  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  6079  0019BE  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  6080  0019C2  0E00               	movlw	0
  6081  0019C4  6E2C               	movwf	___fldiv@a,c
  6082  0019C6  0EC0               	movlw	192
  6083  0019C8  6E2D               	movwf	___fldiv@a+1,c
  6084  0019CA  0E7F               	movlw	127
  6085  0019CC  6E2E               	movwf	___fldiv@a+2,c
  6086  0019CE  0E44               	movlw	68
  6087  0019D0  6E2F               	movwf	___fldiv@a+3,c
  6088  0019D2  EC03  F014         	call	___fldiv	;wreg free
  6089  0019D6  C028  F041         	movff	?___fldiv,?_get_voltage
  6090  0019DA  C029  F042         	movff	?___fldiv+1,?_get_voltage+1
  6091  0019DE  C02A  F043         	movff	?___fldiv+2,?_get_voltage+2
  6092  0019E2  C02B  F044         	movff	?___fldiv+3,?_get_voltage+3
  6093  0019E6  0012               	return		;funcret
  6094  0019E8  FFFF               	dw	65535	; errata NOP
  6095  0019EA                     __end_of_get_voltage:
  6096                           	opt callstack 0
  6097                           
  6098 ;; *************** function _get_temp *****************
  6099 ;; Defined at:
  6100 ;;		line 161 in file "main.c"
  6101 ;; Parameters:    Size  Location     Type
  6102 ;;  ac_in           2   68[COMRAM] unsigned int 
  6103 ;; Auto vars:     Size  Location     Type
  6104 ;;  r               4   72[COMRAM] float 
  6105 ;; Return value:  Size  Location     Type
  6106 ;;                  4   68[COMRAM] float 
  6107 ;; Registers used:
  6108 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6109 ;; Tracked objects:
  6110 ;;		On entry : 0/0
  6111 ;;		On exit  : 0/0
  6112 ;;		Unchanged: 0/0
  6113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6114 ;;      Params:         4       0       0       0       0       0       0
  6115 ;;      Locals:         4       0       0       0       0       0       0
  6116 ;;      Temps:          0       0       0       0       0       0       0
  6117 ;;      Totals:         8       0       0       0       0       0       0
  6118 ;;Total ram usage:        8 bytes
  6119 ;; Hardware stack levels used:    1
  6120 ;; Hardware stack levels required when called:    1
  6121 ;; This function calls:
  6122 ;;		___fladd
  6123 ;;		___fldiv
  6124 ;;		___flmul
  6125 ;;		___xxtofl
  6126 ;; This function is called by:
  6127 ;;		_main
  6128 ;; This function uses a non-reentrant model
  6129 ;;
  6130                           
  6131                           	psect	text30
  6132  001E54                     __ptext30:
  6133                           	opt callstack 0
  6134  001E54                     _get_temp:
  6135                           	opt callstack 0
  6136  001E54  FFFF               	dw	65535	; assembler added errata NOP
  6137                           
  6138                           ;main.c: 162: float r = ac_in * 500.0 / 1023;
  6139                           
  6140                           ;incstack = 0
  6141  001E56  0E00               	movlw	0
  6142  001E58  6E13               	movwf	___flmul@a,c
  6143  001E5A  0E00               	movlw	0
  6144  001E5C  6E14               	movwf	___flmul@a+1,c
  6145  001E5E  0EFA               	movlw	250
  6146  001E60  6E15               	movwf	___flmul@a+2,c
  6147  001E62  0E43               	movlw	67
  6148  001E64  6E16               	movwf	___flmul@a+3,c
  6149  001E66  C045  F001         	movff	get_temp@ac_in,___xxtofl@val
  6150  001E6A  C046  F002         	movff	get_temp@ac_in+1,___xxtofl@val+1
  6151  001E6E  6A03               	clrf	___xxtofl@val+2,c
  6152  001E70  6A04               	clrf	___xxtofl@val+3,c
  6153  001E72  0E00               	movlw	0
  6154  001E74  ECAE  F010         	call	___xxtofl
  6155  001E78  C001  F00F         	movff	?___xxtofl,___flmul@b
  6156  001E7C  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  6157  001E80  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  6158  001E84  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  6159  001E88  EC05  F017         	call	___flmul	;wreg free
  6160  001E8C  C00F  F028         	movff	?___flmul,___fldiv@b
  6161  001E90  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  6162  001E94  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  6163  001E98  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  6164  001E9C  0E00               	movlw	0
  6165  001E9E  6E2C               	movwf	___fldiv@a,c
  6166  001EA0  0EC0               	movlw	192
  6167  001EA2  6E2D               	movwf	___fldiv@a+1,c
  6168  001EA4  0E7F               	movlw	127
  6169  001EA6  6E2E               	movwf	___fldiv@a+2,c
  6170  001EA8  0E44               	movlw	68
  6171  001EAA  6E2F               	movwf	___fldiv@a+3,c
  6172  001EAC  EC03  F014         	call	___fldiv	;wreg free
  6173  001EB0  C028  F049         	movff	?___fldiv,get_temp@r
  6174  001EB4  C029  F04A         	movff	?___fldiv+1,get_temp@r+1
  6175  001EB8  C02A  F04B         	movff	?___fldiv+2,get_temp@r+2
  6176  001EBC  C02B  F04C         	movff	?___fldiv+3,get_temp@r+3
  6177                           
  6178                           ;main.c: 163: if (ac_in <= 10) {
  6179  001EC0  5046               	movf	get_temp@ac_in+1,w,c
  6180  001EC2  E11E               	bnz	l113
  6181  001EC4  0E0B               	movlw	11
  6182  001EC6  5C45               	subwf	get_temp@ac_in,w,c
  6183  001EC8  B0D8               	btfsc	status,0,c
  6184  001ECA  D01A               	goto	l113
  6185                           
  6186                           ;main.c: 164: r += 0.3;
  6187  001ECC  C049  F035         	movff	get_temp@r,___fladd@b
  6188  001ED0  C04A  F036         	movff	get_temp@r+1,___fladd@b+1
  6189  001ED4  C04B  F037         	movff	get_temp@r+2,___fladd@b+2
  6190  001ED8  C04C  F038         	movff	get_temp@r+3,___fladd@b+3
  6191  001EDC  0E9A               	movlw	154
  6192  001EDE  6E39               	movwf	___fladd@a,c
  6193  001EE0  0E99               	movlw	153
  6194  001EE2  6E3A               	movwf	___fladd@a+1,c
  6195  001EE4  0E99               	movlw	153
  6196  001EE6  6E3B               	movwf	___fladd@a+2,c
  6197  001EE8  0E3E               	movlw	62
  6198  001EEA  6E3C               	movwf	___fladd@a+3,c
  6199  001EEC  EC63  F015         	call	___fladd	;wreg free
  6200  001EF0  C035  F049         	movff	?___fladd,get_temp@r
  6201  001EF4  C036  F04A         	movff	?___fladd+1,get_temp@r+1
  6202  001EF8  C037  F04B         	movff	?___fladd+2,get_temp@r+2
  6203  001EFC  C038  F04C         	movff	?___fladd+3,get_temp@r+3
  6204  001F00                     l113:
  6205  001F00  FFFF               	dw	65535	; assembler added errata NOP
  6206                           
  6207                           ;main.c: 165: };main.c: 166: return (r - 0.0099999);
  6208  001F02  C049  F035         	movff	get_temp@r,___fladd@b
  6209  001F06  C04A  F036         	movff	get_temp@r+1,___fladd@b+1
  6210  001F0A  C04B  F037         	movff	get_temp@r+2,___fladd@b+2
  6211  001F0E  C04C  F038         	movff	get_temp@r+3,___fladd@b+3
  6212  001F12  0E9F               	movlw	159
  6213  001F14  6E39               	movwf	___fladd@a,c
  6214  001F16  0ED6               	movlw	214
  6215  001F18  6E3A               	movwf	___fladd@a+1,c
  6216  001F1A  0E23               	movlw	35
  6217  001F1C  6E3B               	movwf	___fladd@a+2,c
  6218  001F1E  0EBC               	movlw	188
  6219  001F20  6E3C               	movwf	___fladd@a+3,c
  6220  001F22  EC63  F015         	call	___fladd	;wreg free
  6221  001F26  C035  F045         	movff	?___fladd,?_get_temp
  6222  001F2A  C036  F046         	movff	?___fladd+1,?_get_temp+1
  6223  001F2E  C037  F047         	movff	?___fladd+2,?_get_temp+2
  6224  001F32  C038  F048         	movff	?___fladd+3,?_get_temp+3
  6225  001F36  0012               	return		;funcret
  6226  001F38  FFFF               	dw	65535	; errata NOP
  6227  001F3A                     __end_of_get_temp:
  6228                           	opt callstack 0
  6229                           
  6230 ;; *************** function ___xxtofl *****************
  6231 ;; Defined at:
  6232 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  6233 ;; Parameters:    Size  Location     Type
  6234 ;;  sign            1    wreg     unsigned char 
  6235 ;;  val             4    0[COMRAM] long 
  6236 ;; Auto vars:     Size  Location     Type
  6237 ;;  sign            1    8[COMRAM] unsigned char 
  6238 ;;  arg             4   10[COMRAM] unsigned long 
  6239 ;;  exp             1    9[COMRAM] unsigned char 
  6240 ;; Return value:  Size  Location     Type
  6241 ;;                  4    0[COMRAM] unsigned char 
  6242 ;; Registers used:
  6243 ;;		wreg, status,2, status,0
  6244 ;; Tracked objects:
  6245 ;;		On entry : 0/0
  6246 ;;		On exit  : 0/0
  6247 ;;		Unchanged: 0/0
  6248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6249 ;;      Params:         4       0       0       0       0       0       0
  6250 ;;      Locals:         6       0       0       0       0       0       0
  6251 ;;      Temps:          4       0       0       0       0       0       0
  6252 ;;      Totals:        14       0       0       0       0       0       0
  6253 ;;Total ram usage:       14 bytes
  6254 ;; Hardware stack levels used:    1
  6255 ;; This function calls:
  6256 ;;		Nothing
  6257 ;; This function is called by:
  6258 ;;		_get_voltage
  6259 ;;		_get_temp
  6260 ;;		_sprintf
  6261 ;; This function uses a non-reentrant model
  6262 ;;
  6263                           
  6264                           	psect	text31
  6265  00215C                     __ptext31:
  6266                           	opt callstack 0
  6267  00215C                     ___xxtofl:
  6268                           	opt callstack 0
  6269  00215C  FFFF               	dw	65535	; assembler added errata NOP
  6270                           
  6271                           ;incstack = 0
  6272                           ;___xxtofl@sign stored from wreg
  6273  00215E  6E09               	movwf	___xxtofl@sign,c
  6274  002160  5009               	movf	___xxtofl@sign,w,c
  6275  002162  A4D8               	btfss	status,2,c
  6276  002164  AE04               	btfss	___xxtofl@val+3,7,c
  6277  002166  D01A               	goto	l934
  6278  002168  C001  F005         	movff	___xxtofl@val,??___xxtofl
  6279  00216C  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  6280  002170  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  6281  002174  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  6282  002178  1E05               	comf	??___xxtofl,f,c
  6283  00217A  1E06               	comf	??___xxtofl+1,f,c
  6284  00217C  1E07               	comf	??___xxtofl+2,f,c
  6285  00217E  1E08               	comf	??___xxtofl+3,f,c
  6286  002180  2A05               	incf	??___xxtofl,f,c
  6287  002182  0E00               	movlw	0
  6288  002184  2206               	addwfc	??___xxtofl+1,f,c
  6289  002186  2207               	addwfc	??___xxtofl+2,f,c
  6290  002188  2208               	addwfc	??___xxtofl+3,f,c
  6291  00218A  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  6292  00218E  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  6293  002192  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  6294  002196  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  6295  00219A  D009               	goto	l3441
  6296  00219C                     l934:
  6297  00219C  FFFF               	dw	65535	; assembler added errata NOP
  6298  00219E  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  6299  0021A2  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6300  0021A6  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6301  0021AA  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6302  0021AE                     l3441:
  6303  0021AE  FFFF               	dw	65535	; assembler added errata NOP
  6304  0021B0  5001               	movf	___xxtofl@val,w,c
  6305  0021B2  1002               	iorwf	___xxtofl@val+1,w,c
  6306  0021B4  1003               	iorwf	___xxtofl@val+2,w,c
  6307  0021B6  1004               	iorwf	___xxtofl@val+3,w,c
  6308  0021B8  A4D8               	btfss	status,2,c
  6309  0021BA  D009               	goto	l3447
  6310  0021BC  0E00               	movlw	0
  6311  0021BE  6E01               	movwf	?___xxtofl,c
  6312  0021C0  0E00               	movlw	0
  6313  0021C2  6E02               	movwf	?___xxtofl+1,c
  6314  0021C4  0E00               	movlw	0
  6315  0021C6  6E03               	movwf	?___xxtofl+2,c
  6316  0021C8  0E00               	movlw	0
  6317  0021CA  6E04               	movwf	?___xxtofl+3,c
  6318  0021CC  D072               	goto	l937
  6319  0021CE                     l3447:
  6320  0021CE  FFFF               	dw	65535	; assembler added errata NOP
  6321  0021D0  0E96               	movlw	150
  6322  0021D2  6E0A               	movwf	___xxtofl@exp,c
  6323  0021D4  D007               	goto	l3451
  6324  0021D6                     l3449:
  6325  0021D6  FFFF               	dw	65535	; assembler added errata NOP
  6326  0021D8  2A0A               	incf	___xxtofl@exp,f,c
  6327  0021DA  90D8               	bcf	status,0,c
  6328  0021DC  320E               	rrcf	___xxtofl@arg+3,f,c
  6329  0021DE  320D               	rrcf	___xxtofl@arg+2,f,c
  6330  0021E0  320C               	rrcf	___xxtofl@arg+1,f,c
  6331  0021E2  320B               	rrcf	___xxtofl@arg,f,c
  6332  0021E4                     l3451:
  6333  0021E4  FFFF               	dw	65535	; assembler added errata NOP
  6334  0021E6  0E00               	movlw	0
  6335  0021E8  140B               	andwf	___xxtofl@arg,w,c
  6336  0021EA  6E05               	movwf	??___xxtofl& (0+255),c
  6337  0021EC  0E00               	movlw	0
  6338  0021EE  140C               	andwf	___xxtofl@arg+1,w,c
  6339  0021F0  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  6340  0021F2  0E00               	movlw	0
  6341  0021F4  140D               	andwf	___xxtofl@arg+2,w,c
  6342  0021F6  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  6343  0021F8  0EFE               	movlw	254
  6344  0021FA  140E               	andwf	___xxtofl@arg+3,w,c
  6345  0021FC  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  6346  0021FE  5005               	movf	??___xxtofl,w,c
  6347  002200  1006               	iorwf	??___xxtofl+1,w,c
  6348  002202  1007               	iorwf	??___xxtofl+2,w,c
  6349  002204  1008               	iorwf	??___xxtofl+3,w,c
  6350  002206  B4D8               	btfsc	status,2,c
  6351  002208  D00E               	goto	l941
  6352  00220A  D7E5               	goto	l3449
  6353  00220C                     l3453:
  6354  00220C  FFFF               	dw	65535	; assembler added errata NOP
  6355  00220E  2A0A               	incf	___xxtofl@exp,f,c
  6356  002210  0E01               	movlw	1
  6357  002212  260B               	addwf	___xxtofl@arg,f,c
  6358  002214  0E00               	movlw	0
  6359  002216  220C               	addwfc	___xxtofl@arg+1,f,c
  6360  002218  220D               	addwfc	___xxtofl@arg+2,f,c
  6361  00221A  220E               	addwfc	___xxtofl@arg+3,f,c
  6362  00221C  90D8               	bcf	status,0,c
  6363  00221E  320E               	rrcf	___xxtofl@arg+3,f,c
  6364  002220  320D               	rrcf	___xxtofl@arg+2,f,c
  6365  002222  320C               	rrcf	___xxtofl@arg+1,f,c
  6366  002224  320B               	rrcf	___xxtofl@arg,f,c
  6367  002226                     l941:
  6368  002226  FFFF               	dw	65535	; assembler added errata NOP
  6369  002228  0E00               	movlw	0
  6370  00222A  140B               	andwf	___xxtofl@arg,w,c
  6371  00222C  6E05               	movwf	??___xxtofl& (0+255),c
  6372  00222E  0E00               	movlw	0
  6373  002230  140C               	andwf	___xxtofl@arg+1,w,c
  6374  002232  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  6375  002234  0E00               	movlw	0
  6376  002236  140D               	andwf	___xxtofl@arg+2,w,c
  6377  002238  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  6378  00223A  0EFF               	movlw	255
  6379  00223C  140E               	andwf	___xxtofl@arg+3,w,c
  6380  00223E  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  6381  002240  5005               	movf	??___xxtofl,w,c
  6382  002242  1006               	iorwf	??___xxtofl+1,w,c
  6383  002244  1007               	iorwf	??___xxtofl+2,w,c
  6384  002246  1008               	iorwf	??___xxtofl+3,w,c
  6385  002248  B4D8               	btfsc	status,2,c
  6386  00224A  D008               	goto	l3461
  6387  00224C  D7DF               	goto	l3453
  6388  00224E                     l3459:
  6389  00224E  FFFF               	dw	65535	; assembler added errata NOP
  6390  002250  060A               	decf	___xxtofl@exp,f,c
  6391  002252  90D8               	bcf	status,0,c
  6392  002254  360B               	rlcf	___xxtofl@arg,f,c
  6393  002256  360C               	rlcf	___xxtofl@arg+1,f,c
  6394  002258  360D               	rlcf	___xxtofl@arg+2,f,c
  6395  00225A  360E               	rlcf	___xxtofl@arg+3,f,c
  6396  00225C                     l3461:
  6397  00225C  FFFF               	dw	65535	; assembler added errata NOP
  6398  00225E  BE0D               	btfsc	___xxtofl@arg+2,7,c
  6399  002260  D003               	goto	u3760
  6400  002262  0E02               	movlw	2
  6401  002264  600A               	cpfslt	___xxtofl@exp,c
  6402  002266  D7F3               	goto	l3459
  6403  002268                     u3760:
  6404  002268  FFFF               	dw	65535	; assembler added errata NOP
  6405  00226A  A00A               	btfss	___xxtofl@exp,0,c
  6406  00226C  9E0D               	bcf	___xxtofl@arg+2,7,c
  6407  00226E  90D8               	bcf	status,0,c
  6408  002270  320A               	rrcf	___xxtofl@exp,f,c
  6409  002272  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  6410  002276  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  6411  002278  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  6412  00227A  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  6413  00227C  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  6414  002280  6A07               	clrf	??___xxtofl+2,c
  6415  002282  6A06               	clrf	??___xxtofl+1,c
  6416  002284  6A05               	clrf	??___xxtofl,c
  6417  002286  5005               	movf	??___xxtofl,w,c
  6418  002288  120B               	iorwf	___xxtofl@arg,f,c
  6419  00228A  5006               	movf	??___xxtofl+1,w,c
  6420  00228C  120C               	iorwf	___xxtofl@arg+1,f,c
  6421  00228E  5007               	movf	??___xxtofl+2,w,c
  6422  002290  120D               	iorwf	___xxtofl@arg+2,f,c
  6423  002292  5008               	movf	??___xxtofl+3,w,c
  6424  002294  120E               	iorwf	___xxtofl@arg+3,f,c
  6425  002296  5009               	movf	___xxtofl@sign,w,c
  6426  002298  A4D8               	btfss	status,2,c
  6427  00229A  AE04               	btfss	___xxtofl@val+3,7,c
  6428  00229C  D001               	goto	l3477
  6429  00229E  8E0E               	bsf	___xxtofl@arg+3,7,c
  6430  0022A0                     l3477:
  6431  0022A0  FFFF               	dw	65535	; assembler added errata NOP
  6432  0022A2  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  6433  0022A6  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  6434  0022AA  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  6435  0022AE  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  6436  0022B2                     l937:
  6437  0022B2  FFFF               	dw	65535	; assembler added errata NOP
  6438  0022B4  0012               	return		;funcret
  6439  0022B6  FFFF               	dw	65535	; errata NOP
  6440  0022B8                     __end_of___xxtofl:
  6441                           	opt callstack 0
  6442                           
  6443 ;; *************** function ___flmul *****************
  6444 ;; Defined at:
  6445 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  6446 ;; Parameters:    Size  Location     Type
  6447 ;;  b               4   14[COMRAM] unsigned char 
  6448 ;;  a               4   18[COMRAM] unsigned char 
  6449 ;; Auto vars:     Size  Location     Type
  6450 ;;  prod            4   33[COMRAM] struct .
  6451 ;;  grs             4   27[COMRAM] unsigned long 
  6452 ;;  temp            2   37[COMRAM] struct .
  6453 ;;  bexp            1   32[COMRAM] unsigned char 
  6454 ;;  aexp            1   31[COMRAM] unsigned char 
  6455 ;;  sign            1   26[COMRAM] unsigned char 
  6456 ;; Return value:  Size  Location     Type
  6457 ;;                  4   14[COMRAM] unsigned char 
  6458 ;; Registers used:
  6459 ;;		wreg, status,2, status,0, prodl, prodh
  6460 ;; Tracked objects:
  6461 ;;		On entry : 0/0
  6462 ;;		On exit  : 0/0
  6463 ;;		Unchanged: 0/0
  6464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6465 ;;      Params:         8       0       0       0       0       0       0
  6466 ;;      Locals:        13       0       0       0       0       0       0
  6467 ;;      Temps:          4       0       0       0       0       0       0
  6468 ;;      Totals:        25       0       0       0       0       0       0
  6469 ;;Total ram usage:       25 bytes
  6470 ;; Hardware stack levels used:    1
  6471 ;; This function calls:
  6472 ;;		Nothing
  6473 ;; This function is called by:
  6474 ;;		_get_voltage
  6475 ;;		_get_temp
  6476 ;;		_fround
  6477 ;;		_scale
  6478 ;;		_sprintf
  6479 ;; This function uses a non-reentrant model
  6480 ;;
  6481                           
  6482                           	psect	text32
  6483  002E0A                     __ptext32:
  6484                           	opt callstack 0
  6485  002E0A                     ___flmul:
  6486                           	opt callstack 0
  6487  002E0A  FFFF               	dw	65535	; assembler added errata NOP
  6488                           
  6489                           ;incstack = 0
  6490  002E0C  5012               	movf	___flmul@b+3,w,c
  6491  002E0E  0B80               	andlw	128
  6492  002E10  6E1B               	movwf	___flmul@sign,c
  6493  002E12  5012               	movf	___flmul@b+3,w,c
  6494  002E14  2412               	addwf	___flmul@b+3,w,c
  6495  002E16  6E21               	movwf	___flmul@bexp,c
  6496  002E18  BE11               	btfsc	___flmul@b+2,7,c
  6497  002E1A  8021               	bsf	___flmul@bexp,0,c
  6498  002E1C  5021               	movf	___flmul@bexp,w,c
  6499  002E1E  B4D8               	btfsc	status,2,c
  6500  002E20  D00E               	goto	l2709
  6501  002E22  2821               	incf	___flmul@bexp,w,c
  6502  002E24  A4D8               	btfss	status,2,c
  6503  002E26  D008               	goto	l2707
  6504  002E28  0E00               	movlw	0
  6505  002E2A  6E0F               	movwf	___flmul@b,c
  6506  002E2C  0E00               	movlw	0
  6507  002E2E  6E10               	movwf	___flmul@b+1,c
  6508  002E30  0E00               	movlw	0
  6509  002E32  6E11               	movwf	___flmul@b+2,c
  6510  002E34  0E00               	movlw	0
  6511  002E36  6E12               	movwf	___flmul@b+3,c
  6512  002E38                     l2707:
  6513  002E38  FFFF               	dw	65535	; assembler added errata NOP
  6514  002E3A  8E11               	bsf	___flmul@b+2,7,c
  6515  002E3C  D009               	goto	l2711
  6516  002E3E                     l2709:
  6517  002E3E  FFFF               	dw	65535	; assembler added errata NOP
  6518  002E40  0E00               	movlw	0
  6519  002E42  6E0F               	movwf	___flmul@b,c
  6520  002E44  0E00               	movlw	0
  6521  002E46  6E10               	movwf	___flmul@b+1,c
  6522  002E48  0E00               	movlw	0
  6523  002E4A  6E11               	movwf	___flmul@b+2,c
  6524  002E4C  0E00               	movlw	0
  6525  002E4E  6E12               	movwf	___flmul@b+3,c
  6526  002E50                     l2711:
  6527  002E50  FFFF               	dw	65535	; assembler added errata NOP
  6528  002E52  5016               	movf	___flmul@a+3,w,c
  6529  002E54  0B80               	andlw	128
  6530  002E56  1A1B               	xorwf	___flmul@sign,f,c
  6531  002E58  5016               	movf	___flmul@a+3,w,c
  6532  002E5A  2416               	addwf	___flmul@a+3,w,c
  6533  002E5C  6E20               	movwf	___flmul@aexp,c
  6534  002E5E  BE15               	btfsc	___flmul@a+2,7,c
  6535  002E60  8020               	bsf	___flmul@aexp,0,c
  6536  002E62  5020               	movf	___flmul@aexp,w,c
  6537  002E64  B4D8               	btfsc	status,2,c
  6538  002E66  D00E               	goto	l2727
  6539  002E68  2820               	incf	___flmul@aexp,w,c
  6540  002E6A  A4D8               	btfss	status,2,c
  6541  002E6C  D008               	goto	l2725
  6542  002E6E  0E00               	movlw	0
  6543  002E70  6E13               	movwf	___flmul@a,c
  6544  002E72  0E00               	movlw	0
  6545  002E74  6E14               	movwf	___flmul@a+1,c
  6546  002E76  0E00               	movlw	0
  6547  002E78  6E15               	movwf	___flmul@a+2,c
  6548  002E7A  0E00               	movlw	0
  6549  002E7C  6E16               	movwf	___flmul@a+3,c
  6550  002E7E                     l2725:
  6551  002E7E  FFFF               	dw	65535	; assembler added errata NOP
  6552  002E80  8E15               	bsf	___flmul@a+2,7,c
  6553  002E82  D009               	goto	l893
  6554  002E84                     l2727:
  6555  002E84  FFFF               	dw	65535	; assembler added errata NOP
  6556  002E86  0E00               	movlw	0
  6557  002E88  6E13               	movwf	___flmul@a,c
  6558  002E8A  0E00               	movlw	0
  6559  002E8C  6E14               	movwf	___flmul@a+1,c
  6560  002E8E  0E00               	movlw	0
  6561  002E90  6E15               	movwf	___flmul@a+2,c
  6562  002E92  0E00               	movlw	0
  6563  002E94  6E16               	movwf	___flmul@a+3,c
  6564  002E96                     l893:
  6565  002E96  FFFF               	dw	65535	; assembler added errata NOP
  6566  002E98  5020               	movf	___flmul@aexp,w,c
  6567  002E9A  B4D8               	btfsc	status,2,c
  6568  002E9C  D003               	goto	u2680
  6569  002E9E  5021               	movf	___flmul@bexp,w,c
  6570  002EA0  A4D8               	btfss	status,2,c
  6571  002EA2  D00A               	goto	l2735
  6572  002EA4                     u2680:
  6573  002EA4  FFFF               	dw	65535	; assembler added errata NOP
  6574  002EA6  0E00               	movlw	0
  6575  002EA8  6E0F               	movwf	?___flmul,c
  6576  002EAA  0E00               	movlw	0
  6577  002EAC  6E10               	movwf	?___flmul+1,c
  6578  002EAE  0E00               	movlw	0
  6579  002EB0  6E11               	movwf	?___flmul+2,c
  6580  002EB2  0E00               	movlw	0
  6581  002EB4  6E12               	movwf	?___flmul+3,c
  6582  002EB6  D167               	goto	l897
  6583  002EB8                     l2735:
  6584  002EB8  FFFF               	dw	65535	; assembler added errata NOP
  6585  002EBA  5015               	movf	___flmul@a+2,w,c
  6586  002EBC  020F               	mulwf	___flmul@b,c
  6587  002EBE  CFF3 F026          	movff	prodl,___flmul@temp
  6588  002EC2  CFF4 F027          	movff	prodh,___flmul@temp+1
  6589  002EC6  5026               	movf	___flmul@temp,w,c
  6590  002EC8  6E1C               	movwf	___flmul@grs,c
  6591  002ECA  6A1D               	clrf	___flmul@grs+1,c
  6592  002ECC  6A1E               	clrf	___flmul@grs+2,c
  6593  002ECE  6A1F               	clrf	___flmul@grs+3,c
  6594  002ED0  5027               	movf	___flmul@temp+1,w,c
  6595  002ED2  6E22               	movwf	___flmul@prod,c
  6596  002ED4  6A23               	clrf	___flmul@prod+1,c
  6597  002ED6  6A24               	clrf	___flmul@prod+2,c
  6598  002ED8  6A25               	clrf	___flmul@prod+3,c
  6599  002EDA  5014               	movf	___flmul@a+1,w,c
  6600  002EDC  0210               	mulwf	___flmul@b+1,c
  6601  002EDE  CFF3 F026          	movff	prodl,___flmul@temp
  6602  002EE2  CFF4 F027          	movff	prodh,___flmul@temp+1
  6603  002EE6  5026               	movf	___flmul@temp,w,c
  6604  002EE8  261C               	addwf	___flmul@grs,f,c
  6605  002EEA  0E00               	movlw	0
  6606  002EEC  221D               	addwfc	___flmul@grs+1,f,c
  6607  002EEE  221E               	addwfc	___flmul@grs+2,f,c
  6608  002EF0  221F               	addwfc	___flmul@grs+3,f,c
  6609  002EF2  5027               	movf	___flmul@temp+1,w,c
  6610  002EF4  2622               	addwf	___flmul@prod,f,c
  6611  002EF6  0E00               	movlw	0
  6612  002EF8  2223               	addwfc	___flmul@prod+1,f,c
  6613  002EFA  2224               	addwfc	___flmul@prod+2,f,c
  6614  002EFC  2225               	addwfc	___flmul@prod+3,f,c
  6615  002EFE  5013               	movf	___flmul@a,w,c
  6616  002F00  0211               	mulwf	___flmul@b+2,c
  6617  002F02  CFF3 F026          	movff	prodl,___flmul@temp
  6618  002F06  CFF4 F027          	movff	prodh,___flmul@temp+1
  6619  002F0A  5026               	movf	___flmul@temp,w,c
  6620  002F0C  261C               	addwf	___flmul@grs,f,c
  6621  002F0E  0E00               	movlw	0
  6622  002F10  221D               	addwfc	___flmul@grs+1,f,c
  6623  002F12  221E               	addwfc	___flmul@grs+2,f,c
  6624  002F14  221F               	addwfc	___flmul@grs+3,f,c
  6625  002F16  5027               	movf	___flmul@temp+1,w,c
  6626  002F18  2622               	addwf	___flmul@prod,f,c
  6627  002F1A  0E00               	movlw	0
  6628  002F1C  2223               	addwfc	___flmul@prod+1,f,c
  6629  002F1E  2224               	addwfc	___flmul@prod+2,f,c
  6630  002F20  2225               	addwfc	___flmul@prod+3,f,c
  6631  002F22  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6632  002F26  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6633  002F2A  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6634  002F2E  6A1C               	clrf	___flmul@grs,c
  6635  002F30  5013               	movf	___flmul@a,w,c
  6636  002F32  0210               	mulwf	___flmul@b+1,c
  6637  002F34  CFF3 F026          	movff	prodl,___flmul@temp
  6638  002F38  CFF4 F027          	movff	prodh,___flmul@temp+1
  6639  002F3C  5026               	movf	___flmul@temp,w,c
  6640  002F3E  261C               	addwf	___flmul@grs,f,c
  6641  002F40  5027               	movf	___flmul@temp+1,w,c
  6642  002F42  221D               	addwfc	___flmul@grs+1,f,c
  6643  002F44  0E00               	movlw	0
  6644  002F46  221E               	addwfc	___flmul@grs+2,f,c
  6645  002F48  0E00               	movlw	0
  6646  002F4A  221F               	addwfc	___flmul@grs+3,f,c
  6647  002F4C  5014               	movf	___flmul@a+1,w,c
  6648  002F4E  020F               	mulwf	___flmul@b,c
  6649  002F50  CFF3 F026          	movff	prodl,___flmul@temp
  6650  002F54  CFF4 F027          	movff	prodh,___flmul@temp+1
  6651  002F58  5026               	movf	___flmul@temp,w,c
  6652  002F5A  261C               	addwf	___flmul@grs,f,c
  6653  002F5C  5027               	movf	___flmul@temp+1,w,c
  6654  002F5E  221D               	addwfc	___flmul@grs+1,f,c
  6655  002F60  0E00               	movlw	0
  6656  002F62  221E               	addwfc	___flmul@grs+2,f,c
  6657  002F64  0E00               	movlw	0
  6658  002F66  221F               	addwfc	___flmul@grs+3,f,c
  6659  002F68  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6660  002F6C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6661  002F70  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6662  002F74  6A1C               	clrf	___flmul@grs,c
  6663  002F76  5013               	movf	___flmul@a,w,c
  6664  002F78  020F               	mulwf	___flmul@b,c
  6665  002F7A  CFF3 F026          	movff	prodl,___flmul@temp
  6666  002F7E  CFF4 F027          	movff	prodh,___flmul@temp+1
  6667  002F82  5026               	movf	___flmul@temp,w,c
  6668  002F84  261C               	addwf	___flmul@grs,f,c
  6669  002F86  5027               	movf	___flmul@temp+1,w,c
  6670  002F88  221D               	addwfc	___flmul@grs+1,f,c
  6671  002F8A  0E00               	movlw	0
  6672  002F8C  221E               	addwfc	___flmul@grs+2,f,c
  6673  002F8E  0E00               	movlw	0
  6674  002F90  221F               	addwfc	___flmul@grs+3,f,c
  6675  002F92  5015               	movf	___flmul@a+2,w,c
  6676  002F94  0210               	mulwf	___flmul@b+1,c
  6677  002F96  CFF3 F026          	movff	prodl,___flmul@temp
  6678  002F9A  CFF4 F027          	movff	prodh,___flmul@temp+1
  6679  002F9E  5026               	movf	___flmul@temp,w,c
  6680  002FA0  2622               	addwf	___flmul@prod,f,c
  6681  002FA2  5027               	movf	___flmul@temp+1,w,c
  6682  002FA4  2223               	addwfc	___flmul@prod+1,f,c
  6683  002FA6  0E00               	movlw	0
  6684  002FA8  2224               	addwfc	___flmul@prod+2,f,c
  6685  002FAA  0E00               	movlw	0
  6686  002FAC  2225               	addwfc	___flmul@prod+3,f,c
  6687  002FAE  5014               	movf	___flmul@a+1,w,c
  6688  002FB0  0211               	mulwf	___flmul@b+2,c
  6689  002FB2  CFF3 F026          	movff	prodl,___flmul@temp
  6690  002FB6  CFF4 F027          	movff	prodh,___flmul@temp+1
  6691  002FBA  5026               	movf	___flmul@temp,w,c
  6692  002FBC  2622               	addwf	___flmul@prod,f,c
  6693  002FBE  5027               	movf	___flmul@temp+1,w,c
  6694  002FC0  2223               	addwfc	___flmul@prod+1,f,c
  6695  002FC2  0E00               	movlw	0
  6696  002FC4  2224               	addwfc	___flmul@prod+2,f,c
  6697  002FC6  0E00               	movlw	0
  6698  002FC8  2225               	addwfc	___flmul@prod+3,f,c
  6699  002FCA  5015               	movf	___flmul@a+2,w,c
  6700  002FCC  0211               	mulwf	___flmul@b+2,c
  6701  002FCE  CFF3 F026          	movff	prodl,___flmul@temp
  6702  002FD2  CFF4 F027          	movff	prodh,___flmul@temp+1
  6703  002FD6  5026               	movf	___flmul@temp,w,c
  6704  002FD8  6E17               	movwf	??___flmul& (0+255),c
  6705  002FDA  5027               	movf	___flmul@temp+1,w,c
  6706  002FDC  6E18               	movwf	(??___flmul+1)& (0+255),c
  6707  002FDE  6A19               	clrf	(??___flmul+2)& (0+255),c
  6708  002FE0  6A1A               	clrf	(??___flmul+3)& (0+255),c
  6709  002FE2  C019  F01A         	movff	??___flmul+2,??___flmul+3
  6710  002FE6  C018  F019         	movff	??___flmul+1,??___flmul+2
  6711  002FEA  C017  F018         	movff	??___flmul,??___flmul+1
  6712  002FEE  6A17               	clrf	??___flmul,c
  6713  002FF0  5017               	movf	??___flmul,w,c
  6714  002FF2  2622               	addwf	___flmul@prod,f,c
  6715  002FF4  5018               	movf	??___flmul+1,w,c
  6716  002FF6  2223               	addwfc	___flmul@prod+1,f,c
  6717  002FF8  5019               	movf	??___flmul+2,w,c
  6718  002FFA  2224               	addwfc	___flmul@prod+2,f,c
  6719  002FFC  501A               	movf	??___flmul+3,w,c
  6720  002FFE  2225               	addwfc	___flmul@prod+3,f,c
  6721  003000  C01C  F017         	movff	___flmul@grs,??___flmul
  6722  003004  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  6723  003008  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  6724  00300C  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  6725  003010  0E19               	movlw	25
  6726  003012  D006               	goto	u2690
  6727  003014                     u2695:
  6728  003014  FFFF               	dw	65535	; assembler added errata NOP
  6729  003016  90D8               	bcf	status,0,c
  6730  003018  321A               	rrcf	??___flmul+3,f,c
  6731  00301A  3219               	rrcf	??___flmul+2,f,c
  6732  00301C  3218               	rrcf	??___flmul+1,f,c
  6733  00301E  3217               	rrcf	??___flmul,f,c
  6734  003020                     u2690:
  6735  003020  FFFF               	dw	65535	; assembler added errata NOP
  6736  003022  2EE8               	decfsz	wreg,f,c
  6737  003024  D7F7               	goto	u2695
  6738  003026  5017               	movf	??___flmul,w,c
  6739  003028  2622               	addwf	___flmul@prod,f,c
  6740  00302A  5018               	movf	??___flmul+1,w,c
  6741  00302C  2223               	addwfc	___flmul@prod+1,f,c
  6742  00302E  5019               	movf	??___flmul+2,w,c
  6743  003030  2224               	addwfc	___flmul@prod+2,f,c
  6744  003032  501A               	movf	??___flmul+3,w,c
  6745  003034  2225               	addwfc	___flmul@prod+3,f,c
  6746  003036  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6747  00303A  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6748  00303E  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6749  003042  6A1C               	clrf	___flmul@grs,c
  6750  003044  5020               	movf	___flmul@aexp,w,c
  6751  003046  C021  F017         	movff	___flmul@bexp,??___flmul
  6752  00304A  6A18               	clrf	(??___flmul+1)& (0+255),c
  6753  00304C  2617               	addwf	??___flmul,f,c
  6754  00304E  0E00               	movlw	0
  6755  003050  2218               	addwfc	??___flmul+1,f,c
  6756  003052  0E82               	movlw	130
  6757  003054  2417               	addwf	??___flmul,w,c
  6758  003056  6E26               	movwf	___flmul@temp,c
  6759  003058  0EFF               	movlw	255
  6760  00305A  2018               	addwfc	??___flmul+1,w,c
  6761  00305C  6E27               	movwf	___flmul@temp+1,c
  6762  00305E  D010               	goto	l2783
  6763  003060                     l2777:
  6764  003060  FFFF               	dw	65535	; assembler added errata NOP
  6765  003062  90D8               	bcf	status,0,c
  6766  003064  3622               	rlcf	___flmul@prod,f,c
  6767  003066  3623               	rlcf	___flmul@prod+1,f,c
  6768  003068  3624               	rlcf	___flmul@prod+2,f,c
  6769  00306A  3625               	rlcf	___flmul@prod+3,f,c
  6770  00306C  BE1F               	btfsc	___flmul@grs+3,7,c
  6771  00306E  8022               	bsf	___flmul@prod,0,c
  6772  003070  90D8               	bcf	status,0,c
  6773  003072  361C               	rlcf	___flmul@grs,f,c
  6774  003074  361D               	rlcf	___flmul@grs+1,f,c
  6775  003076  361E               	rlcf	___flmul@grs+2,f,c
  6776  003078  361F               	rlcf	___flmul@grs+3,f,c
  6777  00307A  0626               	decf	___flmul@temp,f,c
  6778  00307C  A0D8               	btfss	status,0,c
  6779  00307E  0627               	decf	___flmul@temp+1,f,c
  6780  003080                     l2783:
  6781  003080  FFFF               	dw	65535	; assembler added errata NOP
  6782  003082  AE24               	btfss	___flmul@prod+2,7,c
  6783  003084  D7ED               	goto	l2777
  6784  003086  0E00               	movlw	0
  6785  003088  6E20               	movwf	___flmul@aexp,c
  6786  00308A  AE1F               	btfss	___flmul@grs+3,7,c
  6787  00308C  D019               	goto	l902
  6788  00308E  0EFF               	movlw	255
  6789  003090  141C               	andwf	___flmul@grs,w,c
  6790  003092  6E17               	movwf	??___flmul& (0+255),c
  6791  003094  0EFF               	movlw	255
  6792  003096  141D               	andwf	___flmul@grs+1,w,c
  6793  003098  6E18               	movwf	(??___flmul+1)& (0+255),c
  6794  00309A  0EFF               	movlw	255
  6795  00309C  141E               	andwf	___flmul@grs+2,w,c
  6796  00309E  6E19               	movwf	(??___flmul+2)& (0+255),c
  6797  0030A0  0E7F               	movlw	127
  6798  0030A2  141F               	andwf	___flmul@grs+3,w,c
  6799  0030A4  6E1A               	movwf	(??___flmul+3)& (0+255),c
  6800  0030A6  5017               	movf	??___flmul,w,c
  6801  0030A8  1018               	iorwf	??___flmul+1,w,c
  6802  0030AA  1019               	iorwf	??___flmul+2,w,c
  6803  0030AC  101A               	iorwf	??___flmul+3,w,c
  6804  0030AE  B4D8               	btfsc	status,2,c
  6805  0030B0  D004               	goto	l903
  6806  0030B2                     u2730:
  6807  0030B2  FFFF               	dw	65535	; assembler added errata NOP
  6808  0030B4  0E01               	movlw	1
  6809  0030B6  6E20               	movwf	___flmul@aexp,c
  6810  0030B8  D003               	goto	l902
  6811  0030BA                     l903:
  6812  0030BA  FFFF               	dw	65535	; assembler added errata NOP
  6813  0030BC  B022               	btfsc	___flmul@prod,0,c
  6814  0030BE  D7F9               	goto	u2730
  6815  0030C0                     l902:
  6816  0030C0  FFFF               	dw	65535	; assembler added errata NOP
  6817  0030C2  5020               	movf	___flmul@aexp,w,c
  6818  0030C4  B4D8               	btfsc	status,2,c
  6819  0030C6  D01F               	goto	l2803
  6820  0030C8  0E01               	movlw	1
  6821  0030CA  2622               	addwf	___flmul@prod,f,c
  6822  0030CC  0E00               	movlw	0
  6823  0030CE  2223               	addwfc	___flmul@prod+1,f,c
  6824  0030D0  2224               	addwfc	___flmul@prod+2,f,c
  6825  0030D2  2225               	addwfc	___flmul@prod+3,f,c
  6826  0030D4  A025               	btfss	___flmul@prod+3,0,c
  6827  0030D6  D017               	goto	l2803
  6828  0030D8  C022  F017         	movff	___flmul@prod,??___flmul
  6829  0030DC  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  6830  0030E0  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  6831  0030E4  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  6832  0030E8  341A               	rlcf	??___flmul+3,w,c
  6833  0030EA  321A               	rrcf	??___flmul+3,f,c
  6834  0030EC  3219               	rrcf	??___flmul+2,f,c
  6835  0030EE  3218               	rrcf	??___flmul+1,f,c
  6836  0030F0  3217               	rrcf	??___flmul,f,c
  6837  0030F2  C017  F022         	movff	??___flmul,___flmul@prod
  6838  0030F6  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  6839  0030FA  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  6840  0030FE  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  6841  003102  4A26               	infsnz	___flmul@temp,f,c
  6842  003104  2A27               	incf	___flmul@temp+1,f,c
  6843  003106                     l2803:
  6844  003106  FFFF               	dw	65535	; assembler added errata NOP
  6845  003108  BE27               	btfsc	___flmul@temp+1,7,c
  6846  00310A  D00D               	goto	l2807
  6847  00310C  5027               	movf	___flmul@temp+1,w,c
  6848  00310E  E103               	bnz	u2770
  6849  003110  2826               	incf	___flmul@temp,w,c
  6850  003112  A0D8               	btfss	status,0,c
  6851  003114  D008               	goto	l2807
  6852  003116                     u2770:
  6853  003116  0E00               	movlw	0
  6854  003118  6E22               	movwf	___flmul@prod,c
  6855  00311A  0E00               	movlw	0
  6856  00311C  6E23               	movwf	___flmul@prod+1,c
  6857  00311E  0E80               	movlw	128
  6858  003120  6E24               	movwf	___flmul@prod+2,c
  6859  003122  0E7F               	movlw	127
  6860  003124  D023               	goto	L10
  6861  003126                     l2807:
  6862  003126  FFFF               	dw	65535	; assembler added errata NOP
  6863  003128  BE27               	btfsc	___flmul@temp+1,7,c
  6864  00312A  D005               	goto	u2780
  6865  00312C  5027               	movf	___flmul@temp+1,w,c
  6866  00312E  E10F               	bnz	l910
  6867  003130  0426               	decf	___flmul@temp,w,c
  6868  003132  B0D8               	btfsc	status,0,c
  6869  003134  D00C               	goto	l910
  6870  003136                     u2780:
  6871  003136  FFFF               	dw	65535	; assembler added errata NOP
  6872  003138  0E00               	movlw	0
  6873  00313A  6E22               	movwf	___flmul@prod,c
  6874  00313C  0E00               	movlw	0
  6875  00313E  6E23               	movwf	___flmul@prod+1,c
  6876  003140  0E00               	movlw	0
  6877  003142  6E24               	movwf	___flmul@prod+2,c
  6878  003144  0E00               	movlw	0
  6879  003146  6E25               	movwf	___flmul@prod+3,c
  6880  003148  0E00               	movlw	0
  6881  00314A  6E1B               	movwf	___flmul@sign,c
  6882  00314C  D011               	goto	l2819
  6883  00314E                     l910:
  6884  00314E  FFFF               	dw	65535	; assembler added errata NOP
  6885  003150  C026  F021         	movff	___flmul@temp,___flmul@bexp
  6886  003154  0EFF               	movlw	255
  6887  003156  1622               	andwf	___flmul@prod,f,c
  6888  003158  0EFF               	movlw	255
  6889  00315A  1623               	andwf	___flmul@prod+1,f,c
  6890  00315C  0E7F               	movlw	127
  6891  00315E  1624               	andwf	___flmul@prod+2,f,c
  6892  003160  0E00               	movlw	0
  6893  003162  1625               	andwf	___flmul@prod+3,f,c
  6894  003164  B021               	btfsc	___flmul@bexp,0,c
  6895  003166  8E24               	bsf	___flmul@prod+2,7,c
  6896  003168  90D8               	bcf	status,0,c
  6897  00316A  3021               	rrcf	___flmul@bexp,w,c
  6898  00316C                     L10:
  6899  00316C  FFFF               	dw	65535	; assembler added errata NOP
  6900  00316E  6E25               	movwf	___flmul@prod+3,c
  6901  003170                     l2819:
  6902  003170  FFFF               	dw	65535	; assembler added errata NOP
  6903  003172  501B               	movf	___flmul@sign,w,c
  6904  003174  1225               	iorwf	___flmul@prod+3,f,c
  6905  003176  C022  F00F         	movff	___flmul@prod,?___flmul
  6906  00317A  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  6907  00317E  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  6908  003182  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  6909  003186                     l897:
  6910  003186  FFFF               	dw	65535	; assembler added errata NOP
  6911  003188  0012               	return		;funcret
  6912  00318A  FFFF               	dw	65535	; errata NOP
  6913  00318C                     __end_of___flmul:
  6914                           	opt callstack 0
  6915                           
  6916 ;; *************** function ___fldiv *****************
  6917 ;; Defined at:
  6918 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
  6919 ;; Parameters:    Size  Location     Type
  6920 ;;  b               4   39[COMRAM] unsigned char 
  6921 ;;  a               4   43[COMRAM] unsigned char 
  6922 ;; Auto vars:     Size  Location     Type
  6923 ;;  grs             4   58[COMRAM] unsigned long 
  6924 ;;  rem             4   51[COMRAM] unsigned long 
  6925 ;;  new_exp         2   56[COMRAM] int 
  6926 ;;  aexp            1   63[COMRAM] unsigned char 
  6927 ;;  bexp            1   62[COMRAM] unsigned char 
  6928 ;;  sign            1   55[COMRAM] unsigned char 
  6929 ;; Return value:  Size  Location     Type
  6930 ;;                  4   39[COMRAM] unsigned char 
  6931 ;; Registers used:
  6932 ;;		wreg, status,2, status,0
  6933 ;; Tracked objects:
  6934 ;;		On entry : 0/0
  6935 ;;		On exit  : 0/0
  6936 ;;		Unchanged: 0/0
  6937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6938 ;;      Params:         8       0       0       0       0       0       0
  6939 ;;      Locals:        13       0       0       0       0       0       0
  6940 ;;      Temps:          4       0       0       0       0       0       0
  6941 ;;      Totals:        25       0       0       0       0       0       0
  6942 ;;Total ram usage:       25 bytes
  6943 ;; Hardware stack levels used:    1
  6944 ;; This function calls:
  6945 ;;		Nothing
  6946 ;; This function is called by:
  6947 ;;		_get_voltage
  6948 ;;		_get_temp
  6949 ;; This function uses a non-reentrant model
  6950 ;;
  6951                           
  6952                           	psect	text33
  6953  002806                     __ptext33:
  6954                           	opt callstack 0
  6955  002806                     ___fldiv:
  6956                           	opt callstack 0
  6957  002806  FFFF               	dw	65535	; assembler added errata NOP
  6958                           
  6959                           ;incstack = 0
  6960  002808  502B               	movf	___fldiv@b+3,w,c
  6961  00280A  0B80               	andlw	128
  6962  00280C  6E38               	movwf	___fldiv@sign,c
  6963  00280E  502B               	movf	___fldiv@b+3,w,c
  6964  002810  242B               	addwf	___fldiv@b+3,w,c
  6965  002812  6E3F               	movwf	___fldiv@bexp,c
  6966  002814  BE2A               	btfsc	___fldiv@b+2,7,c
  6967  002816  803F               	bsf	___fldiv@bexp,0,c
  6968  002818  503F               	movf	___fldiv@bexp,w,c
  6969  00281A  B4D8               	btfsc	status,2,c
  6970  00281C  D00E               	goto	l3201
  6971  00281E  283F               	incf	___fldiv@bexp,w,c
  6972  002820  A4D8               	btfss	status,2,c
  6973  002822  D008               	goto	l3197
  6974  002824  0E00               	movlw	0
  6975  002826  6E28               	movwf	___fldiv@b,c
  6976  002828  0E00               	movlw	0
  6977  00282A  6E29               	movwf	___fldiv@b+1,c
  6978  00282C  0E00               	movlw	0
  6979  00282E  6E2A               	movwf	___fldiv@b+2,c
  6980  002830  0E00               	movlw	0
  6981  002832  6E2B               	movwf	___fldiv@b+3,c
  6982  002834                     l3197:
  6983  002834  FFFF               	dw	65535	; assembler added errata NOP
  6984  002836  8E2A               	bsf	___fldiv@b+2,7,c
  6985  002838  D007               	goto	L11
  6986  00283A                     l3201:
  6987  00283A  FFFF               	dw	65535	; assembler added errata NOP
  6988  00283C  0E00               	movlw	0
  6989  00283E  6E28               	movwf	___fldiv@b,c
  6990  002840  0E00               	movlw	0
  6991  002842  6E29               	movwf	___fldiv@b+1,c
  6992  002844  0E00               	movlw	0
  6993  002846  6E2A               	movwf	___fldiv@b+2,c
  6994  002848                     L11:
  6995  002848  FFFF               	dw	65535	; assembler added errata NOP
  6996  00284A  0E00               	movlw	0
  6997  00284C  6E2B               	movwf	___fldiv@b+3,c
  6998  00284E  502F               	movf	___fldiv@a+3,w,c
  6999  002850  0B80               	andlw	128
  7000  002852  1A38               	xorwf	___fldiv@sign,f,c
  7001  002854  502F               	movf	___fldiv@a+3,w,c
  7002  002856  242F               	addwf	___fldiv@a+3,w,c
  7003  002858  6E40               	movwf	___fldiv@aexp,c
  7004  00285A  BE2E               	btfsc	___fldiv@a+2,7,c
  7005  00285C  8040               	bsf	___fldiv@aexp,0,c
  7006  00285E  5040               	movf	___fldiv@aexp,w,c
  7007  002860  B4D8               	btfsc	status,2,c
  7008  002862  D00E               	goto	l3221
  7009  002864  2840               	incf	___fldiv@aexp,w,c
  7010  002866  A4D8               	btfss	status,2,c
  7011  002868  D008               	goto	l3217
  7012  00286A  0E00               	movlw	0
  7013  00286C  6E2C               	movwf	___fldiv@a,c
  7014  00286E  0E00               	movlw	0
  7015  002870  6E2D               	movwf	___fldiv@a+1,c
  7016  002872  0E00               	movlw	0
  7017  002874  6E2E               	movwf	___fldiv@a+2,c
  7018  002876  0E00               	movlw	0
  7019  002878  6E2F               	movwf	___fldiv@a+3,c
  7020  00287A                     l3217:
  7021  00287A  FFFF               	dw	65535	; assembler added errata NOP
  7022  00287C  8E2E               	bsf	___fldiv@a+2,7,c
  7023  00287E  D007               	goto	L12
  7024  002880                     l3221:
  7025  002880  FFFF               	dw	65535	; assembler added errata NOP
  7026  002882  0E00               	movlw	0
  7027  002884  6E2C               	movwf	___fldiv@a,c
  7028  002886  0E00               	movlw	0
  7029  002888  6E2D               	movwf	___fldiv@a+1,c
  7030  00288A  0E00               	movlw	0
  7031  00288C  6E2E               	movwf	___fldiv@a+2,c
  7032  00288E                     L12:
  7033  00288E  FFFF               	dw	65535	; assembler added errata NOP
  7034  002890  0E00               	movlw	0
  7035  002892  6E2F               	movwf	___fldiv@a+3,c
  7036  002894  502C               	movf	___fldiv@a,w,c
  7037  002896  102D               	iorwf	___fldiv@a+1,w,c
  7038  002898  102E               	iorwf	___fldiv@a+2,w,c
  7039  00289A  102F               	iorwf	___fldiv@a+3,w,c
  7040  00289C  A4D8               	btfss	status,2,c
  7041  00289E  D018               	goto	l3235
  7042  0028A0  0E00               	movlw	0
  7043  0028A2  6E28               	movwf	___fldiv@b,c
  7044  0028A4  0E00               	movlw	0
  7045  0028A6  6E29               	movwf	___fldiv@b+1,c
  7046  0028A8  0E00               	movlw	0
  7047  0028AA  6E2A               	movwf	___fldiv@b+2,c
  7048  0028AC  0E00               	movlw	0
  7049  0028AE  6E2B               	movwf	___fldiv@b+3,c
  7050  0028B0  0E80               	movlw	128
  7051  0028B2  122A               	iorwf	___fldiv@b+2,f,c
  7052  0028B4  0E7F               	movlw	127
  7053  0028B6  122B               	iorwf	___fldiv@b+3,f,c
  7054  0028B8                     l3229:
  7055  0028B8  FFFF               	dw	65535	; assembler added errata NOP
  7056  0028BA  5038               	movf	___fldiv@sign,w,c
  7057  0028BC  122B               	iorwf	___fldiv@b+3,f,c
  7058  0028BE  C028  F028         	movff	___fldiv@b,?___fldiv
  7059  0028C2  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  7060  0028C6  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  7061  0028CA  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  7062  0028CE  D0F8               	goto	l861
  7063  0028D0                     l3235:
  7064  0028D0  FFFF               	dw	65535	; assembler added errata NOP
  7065  0028D2  503F               	movf	___fldiv@bexp,w,c
  7066  0028D4  A4D8               	btfss	status,2,c
  7067  0028D6  D009               	goto	l3243
  7068  0028D8  0E00               	movlw	0
  7069  0028DA  6E28               	movwf	?___fldiv,c
  7070  0028DC  0E00               	movlw	0
  7071  0028DE  6E29               	movwf	?___fldiv+1,c
  7072  0028E0  0E00               	movlw	0
  7073  0028E2  6E2A               	movwf	?___fldiv+2,c
  7074  0028E4  0E00               	movlw	0
  7075  0028E6  6E2B               	movwf	?___fldiv+3,c
  7076  0028E8  D0EB               	goto	l861
  7077  0028EA                     l3243:
  7078  0028EA  FFFF               	dw	65535	; assembler added errata NOP
  7079  0028EC  5040               	movf	___fldiv@aexp,w,c
  7080  0028EE  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  7081  0028F2  6A31               	clrf	(??___fldiv+1)& (0+255),c
  7082  0028F4  5E30               	subwf	??___fldiv,f,c
  7083  0028F6  0E00               	movlw	0
  7084  0028F8  5A31               	subwfb	??___fldiv+1,f,c
  7085  0028FA  0E7F               	movlw	127
  7086  0028FC  2430               	addwf	??___fldiv,w,c
  7087  0028FE  6E39               	movwf	___fldiv@new_exp,c
  7088  002900  0E00               	movlw	0
  7089  002902  2031               	addwfc	??___fldiv+1,w,c
  7090  002904  6E3A               	movwf	___fldiv@new_exp+1,c
  7091  002906  C028  F034         	movff	___fldiv@b,___fldiv@rem
  7092  00290A  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  7093  00290E  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  7094  002912  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  7095  002916  0E00               	movlw	0
  7096  002918  6E28               	movwf	___fldiv@b,c
  7097  00291A  0E00               	movlw	0
  7098  00291C  6E29               	movwf	___fldiv@b+1,c
  7099  00291E  0E00               	movlw	0
  7100  002920  6E2A               	movwf	___fldiv@b+2,c
  7101  002922  0E00               	movlw	0
  7102  002924  6E2B               	movwf	___fldiv@b+3,c
  7103  002926  0E00               	movlw	0
  7104  002928  6E3B               	movwf	___fldiv@grs,c
  7105  00292A  0E00               	movlw	0
  7106  00292C  6E3C               	movwf	___fldiv@grs+1,c
  7107  00292E  0E00               	movlw	0
  7108  002930  6E3D               	movwf	___fldiv@grs+2,c
  7109  002932  0E00               	movlw	0
  7110  002934  6E3E               	movwf	___fldiv@grs+3,c
  7111  002936  0E00               	movlw	0
  7112  002938  6E40               	movwf	___fldiv@aexp,c
  7113  00293A  D02B               	goto	l863
  7114  00293C                     l3253:
  7115  00293C  FFFF               	dw	65535	; assembler added errata NOP
  7116  00293E  5040               	movf	___fldiv@aexp,w,c
  7117  002940  B4D8               	btfsc	status,2,c
  7118  002942  D011               	goto	l3261
  7119  002944  90D8               	bcf	status,0,c
  7120  002946  3634               	rlcf	___fldiv@rem,f,c
  7121  002948  3635               	rlcf	___fldiv@rem+1,f,c
  7122  00294A  3636               	rlcf	___fldiv@rem+2,f,c
  7123  00294C  3637               	rlcf	___fldiv@rem+3,f,c
  7124  00294E  90D8               	bcf	status,0,c
  7125  002950  3628               	rlcf	___fldiv@b,f,c
  7126  002952  3629               	rlcf	___fldiv@b+1,f,c
  7127  002954  362A               	rlcf	___fldiv@b+2,f,c
  7128  002956  362B               	rlcf	___fldiv@b+3,f,c
  7129  002958  BE3E               	btfsc	___fldiv@grs+3,7,c
  7130  00295A  8028               	bsf	___fldiv@b,0,c
  7131  00295C  90D8               	bcf	status,0,c
  7132  00295E  363B               	rlcf	___fldiv@grs,f,c
  7133  002960  363C               	rlcf	___fldiv@grs+1,f,c
  7134  002962  363D               	rlcf	___fldiv@grs+2,f,c
  7135  002964  363E               	rlcf	___fldiv@grs+3,f,c
  7136  002966                     l3261:
  7137  002966  FFFF               	dw	65535	; assembler added errata NOP
  7138  002968  502C               	movf	___fldiv@a,w,c
  7139  00296A  5C34               	subwf	___fldiv@rem,w,c
  7140  00296C  502D               	movf	___fldiv@a+1,w,c
  7141  00296E  5835               	subwfb	___fldiv@rem+1,w,c
  7142  002970  502E               	movf	___fldiv@a+2,w,c
  7143  002972  5836               	subwfb	___fldiv@rem+2,w,c
  7144  002974  502F               	movf	___fldiv@a+3,w,c
  7145  002976  5837               	subwfb	___fldiv@rem+3,w,c
  7146  002978  A0D8               	btfss	status,0,c
  7147  00297A  D009               	goto	l3267
  7148  00297C  8C3E               	bsf	___fldiv@grs+3,6,c
  7149  00297E  502C               	movf	___fldiv@a,w,c
  7150  002980  5E34               	subwf	___fldiv@rem,f,c
  7151  002982  502D               	movf	___fldiv@a+1,w,c
  7152  002984  5A35               	subwfb	___fldiv@rem+1,f,c
  7153  002986  502E               	movf	___fldiv@a+2,w,c
  7154  002988  5A36               	subwfb	___fldiv@rem+2,f,c
  7155  00298A  502F               	movf	___fldiv@a+3,w,c
  7156  00298C  5A37               	subwfb	___fldiv@rem+3,f,c
  7157  00298E                     l3267:
  7158  00298E  FFFF               	dw	65535	; assembler added errata NOP
  7159  002990  2A40               	incf	___fldiv@aexp,f,c
  7160  002992                     l863:
  7161  002992  FFFF               	dw	65535	; assembler added errata NOP
  7162  002994  0E19               	movlw	25
  7163  002996  6440               	cpfsgt	___fldiv@aexp,c
  7164  002998  D7D1               	goto	l3253
  7165  00299A  5034               	movf	___fldiv@rem,w,c
  7166  00299C  1035               	iorwf	___fldiv@rem+1,w,c
  7167  00299E  1036               	iorwf	___fldiv@rem+2,w,c
  7168  0029A0  1037               	iorwf	___fldiv@rem+3,w,c
  7169  0029A2  B4D8               	btfsc	status,2,c
  7170  0029A4  D012               	goto	l3279
  7171  0029A6  803B               	bsf	___fldiv@grs,0,c
  7172  0029A8  D010               	goto	l3279
  7173  0029AA                     l3273:
  7174  0029AA  FFFF               	dw	65535	; assembler added errata NOP
  7175  0029AC  90D8               	bcf	status,0,c
  7176  0029AE  3628               	rlcf	___fldiv@b,f,c
  7177  0029B0  3629               	rlcf	___fldiv@b+1,f,c
  7178  0029B2  362A               	rlcf	___fldiv@b+2,f,c
  7179  0029B4  362B               	rlcf	___fldiv@b+3,f,c
  7180  0029B6  BE3E               	btfsc	___fldiv@grs+3,7,c
  7181  0029B8  8028               	bsf	___fldiv@b,0,c
  7182  0029BA  90D8               	bcf	status,0,c
  7183  0029BC  363B               	rlcf	___fldiv@grs,f,c
  7184  0029BE  363C               	rlcf	___fldiv@grs+1,f,c
  7185  0029C0  363D               	rlcf	___fldiv@grs+2,f,c
  7186  0029C2  363E               	rlcf	___fldiv@grs+3,f,c
  7187  0029C4  0639               	decf	___fldiv@new_exp,f,c
  7188  0029C6  A0D8               	btfss	status,0,c
  7189  0029C8  063A               	decf	___fldiv@new_exp+1,f,c
  7190  0029CA                     l3279:
  7191  0029CA  FFFF               	dw	65535	; assembler added errata NOP
  7192  0029CC  AE2A               	btfss	___fldiv@b+2,7,c
  7193  0029CE  D7ED               	goto	l3273
  7194  0029D0  0E00               	movlw	0
  7195  0029D2  6E40               	movwf	___fldiv@aexp,c
  7196  0029D4  AE3E               	btfss	___fldiv@grs+3,7,c
  7197  0029D6  D019               	goto	l874
  7198  0029D8  0EFF               	movlw	255
  7199  0029DA  143B               	andwf	___fldiv@grs,w,c
  7200  0029DC  6E30               	movwf	??___fldiv& (0+255),c
  7201  0029DE  0EFF               	movlw	255
  7202  0029E0  143C               	andwf	___fldiv@grs+1,w,c
  7203  0029E2  6E31               	movwf	(??___fldiv+1)& (0+255),c
  7204  0029E4  0EFF               	movlw	255
  7205  0029E6  143D               	andwf	___fldiv@grs+2,w,c
  7206  0029E8  6E32               	movwf	(??___fldiv+2)& (0+255),c
  7207  0029EA  0E7F               	movlw	127
  7208  0029EC  143E               	andwf	___fldiv@grs+3,w,c
  7209  0029EE  6E33               	movwf	(??___fldiv+3)& (0+255),c
  7210  0029F0  5030               	movf	??___fldiv,w,c
  7211  0029F2  1031               	iorwf	??___fldiv+1,w,c
  7212  0029F4  1032               	iorwf	??___fldiv+2,w,c
  7213  0029F6  1033               	iorwf	??___fldiv+3,w,c
  7214  0029F8  B4D8               	btfsc	status,2,c
  7215  0029FA  D004               	goto	l875
  7216  0029FC                     u3440:
  7217  0029FC  FFFF               	dw	65535	; assembler added errata NOP
  7218  0029FE  0E01               	movlw	1
  7219  002A00  6E40               	movwf	___fldiv@aexp,c
  7220  002A02  D003               	goto	l874
  7221  002A04                     l875:
  7222  002A04  FFFF               	dw	65535	; assembler added errata NOP
  7223  002A06  B028               	btfsc	___fldiv@b,0,c
  7224  002A08  D7F9               	goto	u3440
  7225  002A0A                     l874:
  7226  002A0A  FFFF               	dw	65535	; assembler added errata NOP
  7227  002A0C  5040               	movf	___fldiv@aexp,w,c
  7228  002A0E  B4D8               	btfsc	status,2,c
  7229  002A10  D01F               	goto	l3299
  7230  002A12  0E01               	movlw	1
  7231  002A14  2628               	addwf	___fldiv@b,f,c
  7232  002A16  0E00               	movlw	0
  7233  002A18  2229               	addwfc	___fldiv@b+1,f,c
  7234  002A1A  222A               	addwfc	___fldiv@b+2,f,c
  7235  002A1C  222B               	addwfc	___fldiv@b+3,f,c
  7236  002A1E  A02B               	btfss	___fldiv@b+3,0,c
  7237  002A20  D017               	goto	l3299
  7238  002A22  C028  F030         	movff	___fldiv@b,??___fldiv
  7239  002A26  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  7240  002A2A  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  7241  002A2E  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  7242  002A32  3433               	rlcf	??___fldiv+3,w,c
  7243  002A34  3233               	rrcf	??___fldiv+3,f,c
  7244  002A36  3232               	rrcf	??___fldiv+2,f,c
  7245  002A38  3231               	rrcf	??___fldiv+1,f,c
  7246  002A3A  3230               	rrcf	??___fldiv,f,c
  7247  002A3C  C030  F028         	movff	??___fldiv,___fldiv@b
  7248  002A40  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  7249  002A44  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  7250  002A48  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  7251  002A4C  4A39               	infsnz	___fldiv@new_exp,f,c
  7252  002A4E  2A3A               	incf	___fldiv@new_exp+1,f,c
  7253  002A50                     l3299:
  7254  002A50  FFFF               	dw	65535	; assembler added errata NOP
  7255  002A52  BE3A               	btfsc	___fldiv@new_exp+1,7,c
  7256  002A54  D010               	goto	l3303
  7257  002A56  503A               	movf	___fldiv@new_exp+1,w,c
  7258  002A58  E103               	bnz	u3480
  7259  002A5A  2839               	incf	___fldiv@new_exp,w,c
  7260  002A5C  A0D8               	btfss	status,0,c
  7261  002A5E  D00B               	goto	l3303
  7262  002A60                     u3480:
  7263  002A60  0E00               	movlw	0
  7264  002A62  6E3A               	movwf	___fldiv@new_exp+1,c
  7265  002A64  6839               	setf	___fldiv@new_exp,c
  7266  002A66  0E00               	movlw	0
  7267  002A68  6E28               	movwf	___fldiv@b,c
  7268  002A6A  0E00               	movlw	0
  7269  002A6C  6E29               	movwf	___fldiv@b+1,c
  7270  002A6E  0E00               	movlw	0
  7271  002A70  6E2A               	movwf	___fldiv@b+2,c
  7272  002A72  0E00               	movlw	0
  7273  002A74  6E2B               	movwf	___fldiv@b+3,c
  7274  002A76                     l3303:
  7275  002A76  FFFF               	dw	65535	; assembler added errata NOP
  7276  002A78  BE3A               	btfsc	___fldiv@new_exp+1,7,c
  7277  002A7A  D005               	goto	u3490
  7278  002A7C  503A               	movf	___fldiv@new_exp+1,w,c
  7279  002A7E  E112               	bnz	l3307
  7280  002A80  0439               	decf	___fldiv@new_exp,w,c
  7281  002A82  B0D8               	btfsc	status,0,c
  7282  002A84  D00F               	goto	l3307
  7283  002A86                     u3490:
  7284  002A86  FFFF               	dw	65535	; assembler added errata NOP
  7285  002A88  0E00               	movlw	0
  7286  002A8A  6E3A               	movwf	___fldiv@new_exp+1,c
  7287  002A8C  0E00               	movlw	0
  7288  002A8E  6E39               	movwf	___fldiv@new_exp,c
  7289  002A90  0E00               	movlw	0
  7290  002A92  6E28               	movwf	___fldiv@b,c
  7291  002A94  0E00               	movlw	0
  7292  002A96  6E29               	movwf	___fldiv@b+1,c
  7293  002A98  0E00               	movlw	0
  7294  002A9A  6E2A               	movwf	___fldiv@b+2,c
  7295  002A9C  0E00               	movlw	0
  7296  002A9E  6E2B               	movwf	___fldiv@b+3,c
  7297  002AA0  0E00               	movlw	0
  7298  002AA2  6E38               	movwf	___fldiv@sign,c
  7299  002AA4                     l3307:
  7300  002AA4  FFFF               	dw	65535	; assembler added errata NOP
  7301  002AA6  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  7302  002AAA  A03F               	btfss	___fldiv@bexp,0,c
  7303  002AAC  D002               	goto	l3313
  7304  002AAE  8E2A               	bsf	___fldiv@b+2,7,c
  7305  002AB0  D002               	goto	l3315
  7306  002AB2                     l3313:
  7307  002AB2  FFFF               	dw	65535	; assembler added errata NOP
  7308  002AB4  9E2A               	bcf	___fldiv@b+2,7,c
  7309  002AB6                     l3315:
  7310  002AB6  FFFF               	dw	65535	; assembler added errata NOP
  7311  002AB8  90D8               	bcf	status,0,c
  7312  002ABA  303F               	rrcf	___fldiv@bexp,w,c
  7313  002ABC  6E2B               	movwf	___fldiv@b+3,c
  7314  002ABE  D6FC               	goto	l3229
  7315  002AC0                     l861:
  7316  002AC0  FFFF               	dw	65535	; assembler added errata NOP
  7317  002AC2  0012               	return		;funcret
  7318  002AC4  FFFF               	dw	65535	; errata NOP
  7319  002AC6                     __end_of___fldiv:
  7320                           	opt callstack 0
  7321                           
  7322 ;; *************** function ___fladd *****************
  7323 ;; Defined at:
  7324 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  7325 ;; Parameters:    Size  Location     Type
  7326 ;;  b               4   52[COMRAM] unsigned char 
  7327 ;;  a               4   56[COMRAM] unsigned char 
  7328 ;; Auto vars:     Size  Location     Type
  7329 ;;  grs             1   67[COMRAM] unsigned char 
  7330 ;;  bexp            1   66[COMRAM] unsigned char 
  7331 ;;  aexp            1   65[COMRAM] unsigned char 
  7332 ;;  signs           1   64[COMRAM] unsigned char 
  7333 ;; Return value:  Size  Location     Type
  7334 ;;                  4   52[COMRAM] unsigned char 
  7335 ;; Registers used:
  7336 ;;		wreg, status,2, status,0
  7337 ;; Tracked objects:
  7338 ;;		On entry : 0/0
  7339 ;;		On exit  : 0/0
  7340 ;;		Unchanged: 0/0
  7341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7342 ;;      Params:         8       0       0       0       0       0       0
  7343 ;;      Locals:         4       0       0       0       0       0       0
  7344 ;;      Temps:          4       0       0       0       0       0       0
  7345 ;;      Totals:        16       0       0       0       0       0       0
  7346 ;;Total ram usage:       16 bytes
  7347 ;; Hardware stack levels used:    1
  7348 ;; This function calls:
  7349 ;;		Nothing
  7350 ;; This function is called by:
  7351 ;;		_get_temp
  7352 ;;		_sprintf
  7353 ;;		___flsub
  7354 ;; This function uses a non-reentrant model
  7355 ;;
  7356                           
  7357                           	psect	text34
  7358  002AC6                     __ptext34:
  7359                           	opt callstack 0
  7360  002AC6                     ___fladd:
  7361                           	opt callstack 0
  7362  002AC6  FFFF               	dw	65535	; assembler added errata NOP
  7363                           
  7364                           ;incstack = 0
  7365  002AC8  5038               	movf	___fladd@b+3,w,c
  7366  002ACA  0B80               	andlw	128
  7367  002ACC  6E41               	movwf	___fladd@signs,c
  7368  002ACE  5038               	movf	___fladd@b+3,w,c
  7369  002AD0  2438               	addwf	___fladd@b+3,w,c
  7370  002AD2  6E43               	movwf	___fladd@bexp,c
  7371  002AD4  BE37               	btfsc	___fladd@b+2,7,c
  7372  002AD6  8043               	bsf	___fladd@bexp,0,c
  7373  002AD8  5043               	movf	___fladd@bexp,w,c
  7374  002ADA  B4D8               	btfsc	status,2,c
  7375  002ADC  D00E               	goto	l2509
  7376  002ADE  2843               	incf	___fladd@bexp,w,c
  7377  002AE0  A4D8               	btfss	status,2,c
  7378  002AE2  D008               	goto	l2505
  7379  002AE4  0E00               	movlw	0
  7380  002AE6  6E35               	movwf	___fladd@b,c
  7381  002AE8  0E00               	movlw	0
  7382  002AEA  6E36               	movwf	___fladd@b+1,c
  7383  002AEC  0E00               	movlw	0
  7384  002AEE  6E37               	movwf	___fladd@b+2,c
  7385  002AF0  0E00               	movlw	0
  7386  002AF2  6E38               	movwf	___fladd@b+3,c
  7387  002AF4                     l2505:
  7388  002AF4  FFFF               	dw	65535	; assembler added errata NOP
  7389  002AF6  8E37               	bsf	___fladd@b+2,7,c
  7390  002AF8  D007               	goto	L13
  7391  002AFA                     l2509:
  7392  002AFA  FFFF               	dw	65535	; assembler added errata NOP
  7393  002AFC  0E00               	movlw	0
  7394  002AFE  6E35               	movwf	___fladd@b,c
  7395  002B00  0E00               	movlw	0
  7396  002B02  6E36               	movwf	___fladd@b+1,c
  7397  002B04  0E00               	movlw	0
  7398  002B06  6E37               	movwf	___fladd@b+2,c
  7399  002B08                     L13:
  7400  002B08  FFFF               	dw	65535	; assembler added errata NOP
  7401  002B0A  0E00               	movlw	0
  7402  002B0C  6E38               	movwf	___fladd@b+3,c
  7403  002B0E  503C               	movf	___fladd@a+3,w,c
  7404  002B10  0B80               	andlw	128
  7405  002B12  6E42               	movwf	___fladd@aexp,c
  7406  002B14  5041               	movf	___fladd@signs,w,c
  7407  002B16  1842               	xorwf	___fladd@aexp,w,c
  7408  002B18  A4D8               	btfss	status,2,c
  7409  002B1A  8C41               	bsf	___fladd@signs,6,c
  7410  002B1C  503C               	movf	___fladd@a+3,w,c
  7411  002B1E  243C               	addwf	___fladd@a+3,w,c
  7412  002B20  6E42               	movwf	___fladd@aexp,c
  7413  002B22  BE3B               	btfsc	___fladd@a+2,7,c
  7414  002B24  8042               	bsf	___fladd@aexp,0,c
  7415  002B26  5042               	movf	___fladd@aexp,w,c
  7416  002B28  B4D8               	btfsc	status,2,c
  7417  002B2A  D00E               	goto	l2533
  7418  002B2C  2842               	incf	___fladd@aexp,w,c
  7419  002B2E  A4D8               	btfss	status,2,c
  7420  002B30  D008               	goto	l2529
  7421  002B32  0E00               	movlw	0
  7422  002B34  6E39               	movwf	___fladd@a,c
  7423  002B36  0E00               	movlw	0
  7424  002B38  6E3A               	movwf	___fladd@a+1,c
  7425  002B3A  0E00               	movlw	0
  7426  002B3C  6E3B               	movwf	___fladd@a+2,c
  7427  002B3E  0E00               	movlw	0
  7428  002B40  6E3C               	movwf	___fladd@a+3,c
  7429  002B42                     l2529:
  7430  002B42  FFFF               	dw	65535	; assembler added errata NOP
  7431  002B44  8E3B               	bsf	___fladd@a+2,7,c
  7432  002B46  D007               	goto	L14
  7433  002B48                     l2533:
  7434  002B48  FFFF               	dw	65535	; assembler added errata NOP
  7435  002B4A  0E00               	movlw	0
  7436  002B4C  6E39               	movwf	___fladd@a,c
  7437  002B4E  0E00               	movlw	0
  7438  002B50  6E3A               	movwf	___fladd@a+1,c
  7439  002B52  0E00               	movlw	0
  7440  002B54  6E3B               	movwf	___fladd@a+2,c
  7441  002B56                     L14:
  7442  002B56  FFFF               	dw	65535	; assembler added errata NOP
  7443  002B58  0E00               	movlw	0
  7444  002B5A  6E3C               	movwf	___fladd@a+3,c
  7445  002B5C  5043               	movf	___fladd@bexp,w,c
  7446  002B5E  5C42               	subwf	___fladd@aexp,w,c
  7447  002B60  B0D8               	btfsc	status,0,c
  7448  002B62  D023               	goto	l2571
  7449  002B64  AC41               	btfss	___fladd@signs,6,c
  7450  002B66  D002               	goto	l2541
  7451  002B68  0E80               	movlw	128
  7452  002B6A  1A41               	xorwf	___fladd@signs,f,c
  7453  002B6C                     l2541:
  7454  002B6C  FFFF               	dw	65535	; assembler added errata NOP
  7455  002B6E  C043  F044         	movff	___fladd@bexp,___fladd@grs
  7456  002B72  C042  F043         	movff	___fladd@aexp,___fladd@bexp
  7457  002B76  C044  F042         	movff	___fladd@grs,___fladd@aexp
  7458  002B7A  C035  F044         	movff	___fladd@b,___fladd@grs
  7459  002B7E  C039  F035         	movff	___fladd@a,___fladd@b
  7460  002B82  C044  F039         	movff	___fladd@grs,___fladd@a
  7461  002B86  C036  F044         	movff	___fladd@b+1,___fladd@grs
  7462  002B8A  C03A  F036         	movff	___fladd@a+1,___fladd@b+1
  7463  002B8E  C044  F03A         	movff	___fladd@grs,___fladd@a+1
  7464  002B92  C037  F044         	movff	___fladd@b+2,___fladd@grs
  7465  002B96  C03B  F037         	movff	___fladd@a+2,___fladd@b+2
  7466  002B9A  C044  F03B         	movff	___fladd@grs,___fladd@a+2
  7467  002B9E  C038  F044         	movff	___fladd@b+3,___fladd@grs
  7468  002BA2  C03C  F038         	movff	___fladd@a+3,___fladd@b+3
  7469  002BA6  C044  F03C         	movff	___fladd@grs,___fladd@a+3
  7470  002BAA                     l2571:
  7471  002BAA  FFFF               	dw	65535	; assembler added errata NOP
  7472  002BAC  0E00               	movlw	0
  7473  002BAE  6E44               	movwf	___fladd@grs,c
  7474  002BB0  5043               	movf	___fladd@bexp,w,c
  7475  002BB2  C042  F03D         	movff	___fladd@aexp,??___fladd
  7476  002BB6  6A3E               	clrf	(??___fladd+1)& (0+255),c
  7477  002BB8  5E3D               	subwf	??___fladd,f,c
  7478  002BBA  0E00               	movlw	0
  7479  002BBC  5A3E               	subwfb	??___fladd+1,f,c
  7480  002BBE  BE3E               	btfsc	??___fladd+1,7,c
  7481  002BC0  D031               	goto	l808
  7482  002BC2  503E               	movf	??___fladd+1,w,c
  7483  002BC4  E104               	bnz	u2310
  7484  002BC6  0E1A               	movlw	26
  7485  002BC8  5C3D               	subwf	??___fladd,w,c
  7486  002BCA  A0D8               	btfss	status,0,c
  7487  002BCC  D02B               	goto	l808
  7488  002BCE                     u2310:
  7489  002BCE  5035               	movf	___fladd@b,w,c
  7490  002BD0  1036               	iorwf	___fladd@b+1,w,c
  7491  002BD2  1037               	iorwf	___fladd@b+2,w,c
  7492  002BD4  1038               	iorwf	___fladd@b+3,w,c
  7493  002BD6  B4D8               	btfsc	status,2,c
  7494  002BD8  D002               	goto	u2320
  7495  002BDA  0E01               	movlw	1
  7496  002BDC  D002               	goto	u2330
  7497  002BDE                     u2320:
  7498  002BDE  FFFF               	dw	65535	; assembler added errata NOP
  7499  002BE0  0E00               	movlw	0
  7500  002BE2                     u2330:
  7501  002BE2  FFFF               	dw	65535	; assembler added errata NOP
  7502  002BE4  6E44               	movwf	___fladd@grs,c
  7503  002BE6  0E00               	movlw	0
  7504  002BE8  6E35               	movwf	___fladd@b,c
  7505  002BEA  0E00               	movlw	0
  7506  002BEC  6E36               	movwf	___fladd@b+1,c
  7507  002BEE  0E00               	movlw	0
  7508  002BF0  6E37               	movwf	___fladd@b+2,c
  7509  002BF2  0E00               	movlw	0
  7510  002BF4  6E38               	movwf	___fladd@b+3,c
  7511  002BF6  C042  F043         	movff	___fladd@aexp,___fladd@bexp
  7512  002BFA  D019               	goto	u2360
  7513  002BFC                     l809:
  7514  002BFC  FFFF               	dw	65535	; assembler added errata NOP
  7515  002BFE  A044               	btfss	___fladd@grs,0,c
  7516  002C00  D005               	goto	l2583
  7517  002C02  90D8               	bcf	status,0,c
  7518  002C04  3044               	rrcf	___fladd@grs,w,c
  7519  002C06  0901               	iorlw	1
  7520  002C08  6E44               	movwf	___fladd@grs,c
  7521  002C0A  D003               	goto	l2585
  7522  002C0C                     l2583:
  7523  002C0C  FFFF               	dw	65535	; assembler added errata NOP
  7524  002C0E  90D8               	bcf	status,0,c
  7525  002C10  3244               	rrcf	___fladd@grs,f,c
  7526  002C12                     l2585:
  7527  002C12  FFFF               	dw	65535	; assembler added errata NOP
  7528  002C14  B035               	btfsc	___fladd@b,0,c
  7529  002C16  8E44               	bsf	___fladd@grs,7,c
  7530  002C18  3438               	rlcf	___fladd@b+3,w,c
  7531  002C1A  3238               	rrcf	___fladd@b+3,f,c
  7532  002C1C  3237               	rrcf	___fladd@b+2,f,c
  7533  002C1E  3236               	rrcf	___fladd@b+1,f,c
  7534  002C20  3235               	rrcf	___fladd@b,f,c
  7535  002C22  2A43               	incf	___fladd@bexp,f,c
  7536  002C24                     l808:
  7537  002C24  FFFF               	dw	65535	; assembler added errata NOP
  7538  002C26  5042               	movf	___fladd@aexp,w,c
  7539  002C28  5C43               	subwf	___fladd@bexp,w,c
  7540  002C2A  A0D8               	btfss	status,0,c
  7541  002C2C  D7E7               	goto	l809
  7542  002C2E                     u2360:
  7543  002C2E  FFFF               	dw	65535	; assembler added errata NOP
  7544  002C30  BC41               	btfsc	___fladd@signs,6,c
  7545  002C32  D021               	goto	l2617
  7546  002C34  5043               	movf	___fladd@bexp,w,c
  7547  002C36  B4D8               	btfsc	status,2,c
  7548  002C38  D065               	goto	u2450
  7549  002C3A  5039               	movf	___fladd@a,w,c
  7550  002C3C  2635               	addwf	___fladd@b,f,c
  7551  002C3E  503A               	movf	___fladd@a+1,w,c
  7552  002C40  2236               	addwfc	___fladd@b+1,f,c
  7553  002C42  503B               	movf	___fladd@a+2,w,c
  7554  002C44  2237               	addwfc	___fladd@b+2,f,c
  7555  002C46  503C               	movf	___fladd@a+3,w,c
  7556  002C48  2238               	addwfc	___fladd@b+3,f,c
  7557  002C4A  A038               	btfss	___fladd@b+3,0,c
  7558  002C4C  D07B               	goto	u2490
  7559  002C4E  A044               	btfss	___fladd@grs,0,c
  7560  002C50  D005               	goto	l2607
  7561  002C52  90D8               	bcf	status,0,c
  7562  002C54  3044               	rrcf	___fladd@grs,w,c
  7563  002C56  0901               	iorlw	1
  7564  002C58  6E44               	movwf	___fladd@grs,c
  7565  002C5A  D003               	goto	l2609
  7566  002C5C                     l2607:
  7567  002C5C  FFFF               	dw	65535	; assembler added errata NOP
  7568  002C5E  90D8               	bcf	status,0,c
  7569  002C60  3244               	rrcf	___fladd@grs,f,c
  7570  002C62                     l2609:
  7571  002C62  FFFF               	dw	65535	; assembler added errata NOP
  7572  002C64  B035               	btfsc	___fladd@b,0,c
  7573  002C66  8E44               	bsf	___fladd@grs,7,c
  7574  002C68  3438               	rlcf	___fladd@b+3,w,c
  7575  002C6A  3238               	rrcf	___fladd@b+3,f,c
  7576  002C6C  3237               	rrcf	___fladd@b+2,f,c
  7577  002C6E  3236               	rrcf	___fladd@b+1,f,c
  7578  002C70  3235               	rrcf	___fladd@b,f,c
  7579  002C72  2A43               	incf	___fladd@bexp,f,c
  7580  002C74  D067               	goto	u2490
  7581  002C76                     l2617:
  7582  002C76  FFFF               	dw	65535	; assembler added errata NOP
  7583  002C78  5039               	movf	___fladd@a,w,c
  7584  002C7A  5C35               	subwf	___fladd@b,w,c
  7585  002C7C  503A               	movf	___fladd@a+1,w,c
  7586  002C7E  5836               	subwfb	___fladd@b+1,w,c
  7587  002C80  503B               	movf	___fladd@a+2,w,c
  7588  002C82  5837               	subwfb	___fladd@b+2,w,c
  7589  002C84  5038               	movf	___fladd@b+3,w,c
  7590  002C86  0A80               	xorlw	128
  7591  002C88  6E3D               	movwf	??___fladd& (0+255),c
  7592  002C8A  503C               	movf	___fladd@a+3,w,c
  7593  002C8C  0A80               	xorlw	128
  7594  002C8E  583D               	subwfb	??___fladd& (0+255),w,c
  7595  002C90  B0D8               	btfsc	status,0,c
  7596  002C92  D025               	goto	l2627
  7597  002C94  5035               	movf	___fladd@b,w,c
  7598  002C96  5C39               	subwf	___fladd@a,w,c
  7599  002C98  6E3D               	movwf	??___fladd& (0+255),c
  7600  002C9A  5036               	movf	___fladd@b+1,w,c
  7601  002C9C  583A               	subwfb	___fladd@a+1,w,c
  7602  002C9E  6E3E               	movwf	(??___fladd+1)& (0+255),c
  7603  002CA0  5037               	movf	___fladd@b+2,w,c
  7604  002CA2  583B               	subwfb	___fladd@a+2,w,c
  7605  002CA4  6E3F               	movwf	(??___fladd+2)& (0+255),c
  7606  002CA6  5038               	movf	___fladd@b+3,w,c
  7607  002CA8  583C               	subwfb	___fladd@a+3,w,c
  7608  002CAA  6E40               	movwf	(??___fladd+3)& (0+255),c
  7609  002CAC  0EFF               	movlw	255
  7610  002CAE  243D               	addwf	??___fladd,w,c
  7611  002CB0  6E35               	movwf	___fladd@b,c
  7612  002CB2  0EFF               	movlw	255
  7613  002CB4  203E               	addwfc	??___fladd+1,w,c
  7614  002CB6  6E36               	movwf	___fladd@b+1,c
  7615  002CB8  0EFF               	movlw	255
  7616  002CBA  203F               	addwfc	??___fladd+2,w,c
  7617  002CBC  6E37               	movwf	___fladd@b+2,c
  7618  002CBE  0EFF               	movlw	255
  7619  002CC0  2040               	addwfc	??___fladd+3,w,c
  7620  002CC2  6E38               	movwf	___fladd@b+3,c
  7621  002CC4  0E80               	movlw	128
  7622  002CC6  1A41               	xorwf	___fladd@signs,f,c
  7623  002CC8  6C44               	negf	___fladd@grs,c
  7624  002CCA  5044               	movf	___fladd@grs,w,c
  7625  002CCC  A4D8               	btfss	status,2,c
  7626  002CCE  D010               	goto	l824
  7627  002CD0  0E01               	movlw	1
  7628  002CD2  2635               	addwf	___fladd@b,f,c
  7629  002CD4  0E00               	movlw	0
  7630  002CD6  2236               	addwfc	___fladd@b+1,f,c
  7631  002CD8  2237               	addwfc	___fladd@b+2,f,c
  7632  002CDA  2238               	addwfc	___fladd@b+3,f,c
  7633  002CDC  D009               	goto	l824
  7634  002CDE                     l2627:
  7635  002CDE  FFFF               	dw	65535	; assembler added errata NOP
  7636  002CE0  5039               	movf	___fladd@a,w,c
  7637  002CE2  5E35               	subwf	___fladd@b,f,c
  7638  002CE4  503A               	movf	___fladd@a+1,w,c
  7639  002CE6  5A36               	subwfb	___fladd@b+1,f,c
  7640  002CE8  503B               	movf	___fladd@a+2,w,c
  7641  002CEA  5A37               	subwfb	___fladd@b+2,f,c
  7642  002CEC  503C               	movf	___fladd@a+3,w,c
  7643  002CEE  5A38               	subwfb	___fladd@b+3,f,c
  7644  002CF0                     l824:
  7645  002CF0  FFFF               	dw	65535	; assembler added errata NOP
  7646  002CF2  5035               	movf	___fladd@b,w,c
  7647  002CF4  1036               	iorwf	___fladd@b+1,w,c
  7648  002CF6  1037               	iorwf	___fladd@b+2,w,c
  7649  002CF8  1038               	iorwf	___fladd@b+3,w,c
  7650  002CFA  A4D8               	btfss	status,2,c
  7651  002CFC  D020               	goto	l2651
  7652  002CFE  5044               	movf	___fladd@grs,w,c
  7653  002D00  A4D8               	btfss	status,2,c
  7654  002D02  D01D               	goto	l2651
  7655  002D04                     u2450:
  7656  002D04  FFFF               	dw	65535	; assembler added errata NOP
  7657  002D06  0E00               	movlw	0
  7658  002D08  6E35               	movwf	?___fladd,c
  7659  002D0A  0E00               	movlw	0
  7660  002D0C  6E36               	movwf	?___fladd+1,c
  7661  002D0E  0E00               	movlw	0
  7662  002D10  6E37               	movwf	?___fladd+2,c
  7663  002D12  0E00               	movlw	0
  7664  002D14  6E38               	movwf	?___fladd+3,c
  7665  002D16  D076               	goto	l816
  7666  002D18                     l2635:
  7667  002D18  FFFF               	dw	65535	; assembler added errata NOP
  7668  002D1A  90D8               	bcf	status,0,c
  7669  002D1C  3635               	rlcf	___fladd@b,f,c
  7670  002D1E  3636               	rlcf	___fladd@b+1,f,c
  7671  002D20  3637               	rlcf	___fladd@b+2,f,c
  7672  002D22  3638               	rlcf	___fladd@b+3,f,c
  7673  002D24  BE44               	btfsc	___fladd@grs,7,c
  7674  002D26  8035               	bsf	___fladd@b,0,c
  7675  002D28  A044               	btfss	___fladd@grs,0,c
  7676  002D2A  D002               	goto	l2645
  7677  002D2C  80D8               	bsf	status,0,c
  7678  002D2E  D002               	goto	L15
  7679  002D30                     l2645:
  7680  002D30  FFFF               	dw	65535	; assembler added errata NOP
  7681  002D32  90D8               	bcf	status,0,c
  7682  002D34                     L15:
  7683  002D34  FFFF               	dw	65535	; assembler added errata NOP
  7684  002D36  3644               	rlcf	___fladd@grs,f,c
  7685  002D38  5043               	movf	___fladd@bexp,w,c
  7686  002D3A  A4D8               	btfss	status,2,c
  7687  002D3C  0643               	decf	___fladd@bexp,f,c
  7688  002D3E                     l2651:
  7689  002D3E  FFFF               	dw	65535	; assembler added errata NOP
  7690  002D40  AE37               	btfss	___fladd@b+2,7,c
  7691  002D42  D7EA               	goto	l2635
  7692  002D44                     u2490:
  7693  002D44  FFFF               	dw	65535	; assembler added errata NOP
  7694  002D46  0E00               	movlw	0
  7695  002D48  6E42               	movwf	___fladd@aexp,c
  7696  002D4A  AE44               	btfss	___fladd@grs,7,c
  7697  002D4C  D00D               	goto	l833
  7698  002D4E  C044  F03D         	movff	___fladd@grs,??___fladd
  7699  002D52  0E7F               	movlw	127
  7700  002D54  163D               	andwf	??___fladd,f,c
  7701  002D56  B4D8               	btfsc	status,2,c
  7702  002D58  D004               	goto	l834
  7703  002D5A                     u2510:
  7704  002D5A  FFFF               	dw	65535	; assembler added errata NOP
  7705  002D5C  0E01               	movlw	1
  7706  002D5E  6E42               	movwf	___fladd@aexp,c
  7707  002D60  D003               	goto	l833
  7708  002D62                     l834:
  7709  002D62  FFFF               	dw	65535	; assembler added errata NOP
  7710  002D64  B035               	btfsc	___fladd@b,0,c
  7711  002D66  D7F9               	goto	u2510
  7712  002D68                     l833:
  7713  002D68  FFFF               	dw	65535	; assembler added errata NOP
  7714  002D6A  5042               	movf	___fladd@aexp,w,c
  7715  002D6C  B4D8               	btfsc	status,2,c
  7716  002D6E  D020               	goto	l2671
  7717  002D70  0E01               	movlw	1
  7718  002D72  2635               	addwf	___fladd@b,f,c
  7719  002D74  0E00               	movlw	0
  7720  002D76  2236               	addwfc	___fladd@b+1,f,c
  7721  002D78  2237               	addwfc	___fladd@b+2,f,c
  7722  002D7A  2238               	addwfc	___fladd@b+3,f,c
  7723  002D7C  A038               	btfss	___fladd@b+3,0,c
  7724  002D7E  D018               	goto	l2671
  7725  002D80  C035  F03D         	movff	___fladd@b,??___fladd
  7726  002D84  C036  F03E         	movff	___fladd@b+1,??___fladd+1
  7727  002D88  C037  F03F         	movff	___fladd@b+2,??___fladd+2
  7728  002D8C  C038  F040         	movff	___fladd@b+3,??___fladd+3
  7729  002D90  3440               	rlcf	??___fladd+3,w,c
  7730  002D92  3240               	rrcf	??___fladd+3,f,c
  7731  002D94  323F               	rrcf	??___fladd+2,f,c
  7732  002D96  323E               	rrcf	??___fladd+1,f,c
  7733  002D98  323D               	rrcf	??___fladd,f,c
  7734  002D9A  C03D  F035         	movff	??___fladd,___fladd@b
  7735  002D9E  C03E  F036         	movff	??___fladd+1,___fladd@b+1
  7736  002DA2  C03F  F037         	movff	??___fladd+2,___fladd@b+2
  7737  002DA6  C040  F038         	movff	??___fladd+3,___fladd@b+3
  7738  002DAA  2843               	incf	___fladd@bexp,w,c
  7739  002DAC  A4D8               	btfss	status,2,c
  7740  002DAE  2A43               	incf	___fladd@bexp,f,c
  7741  002DB0                     l2671:
  7742  002DB0  FFFF               	dw	65535	; assembler added errata NOP
  7743  002DB2  2843               	incf	___fladd@bexp,w,c
  7744  002DB4  B4D8               	btfsc	status,2,c
  7745  002DB6  D003               	goto	u2570
  7746  002DB8  5043               	movf	___fladd@bexp,w,c
  7747  002DBA  A4D8               	btfss	status,2,c
  7748  002DBC  D00E               	goto	l2679
  7749  002DBE                     u2570:
  7750  002DBE  FFFF               	dw	65535	; assembler added errata NOP
  7751  002DC0  0E00               	movlw	0
  7752  002DC2  6E35               	movwf	___fladd@b,c
  7753  002DC4  0E00               	movlw	0
  7754  002DC6  6E36               	movwf	___fladd@b+1,c
  7755  002DC8  0E00               	movlw	0
  7756  002DCA  6E37               	movwf	___fladd@b+2,c
  7757  002DCC  0E00               	movlw	0
  7758  002DCE  6E38               	movwf	___fladd@b+3,c
  7759  002DD0  5043               	movf	___fladd@bexp,w,c
  7760  002DD2  A4D8               	btfss	status,2,c
  7761  002DD4  D002               	goto	l2679
  7762  002DD6  0E00               	movlw	0
  7763  002DD8  6E41               	movwf	___fladd@signs,c
  7764  002DDA                     l2679:
  7765  002DDA  FFFF               	dw	65535	; assembler added errata NOP
  7766  002DDC  A043               	btfss	___fladd@bexp,0,c
  7767  002DDE  D002               	goto	l2683
  7768  002DE0  8E37               	bsf	___fladd@b+2,7,c
  7769  002DE2  D002               	goto	l2685
  7770  002DE4                     l2683:
  7771  002DE4  FFFF               	dw	65535	; assembler added errata NOP
  7772  002DE6  9E37               	bcf	___fladd@b+2,7,c
  7773  002DE8                     l2685:
  7774  002DE8  FFFF               	dw	65535	; assembler added errata NOP
  7775  002DEA  90D8               	bcf	status,0,c
  7776  002DEC  3043               	rrcf	___fladd@bexp,w,c
  7777  002DEE  6E38               	movwf	___fladd@b+3,c
  7778  002DF0  BE41               	btfsc	___fladd@signs,7,c
  7779  002DF2  8E38               	bsf	___fladd@b+3,7,c
  7780  002DF4  C035  F035         	movff	___fladd@b,?___fladd
  7781  002DF8  C036  F036         	movff	___fladd@b+1,?___fladd+1
  7782  002DFC  C037  F037         	movff	___fladd@b+2,?___fladd+2
  7783  002E00  C038  F038         	movff	___fladd@b+3,?___fladd+3
  7784  002E04                     l816:
  7785  002E04  FFFF               	dw	65535	; assembler added errata NOP
  7786  002E06  0012               	return		;funcret
  7787  002E08  FFFF               	dw	65535	; errata NOP
  7788  002E0A                     __end_of___fladd:
  7789                           	opt callstack 0
  7790                           
  7791                           	psect	rparam
  7792  0000                     tosu	equ	0xFFF
  7793                           tosh	equ	0xFFE
  7794                           tosl	equ	0xFFD
  7795                           stkptr	equ	0xFFC
  7796                           pclatu	equ	0xFFB
  7797                           pclath	equ	0xFFA
  7798                           pcl	equ	0xFF9
  7799                           tblptru	equ	0xFF8
  7800                           tblptrh	equ	0xFF7
  7801                           tblptrl	equ	0xFF6
  7802                           tablat	equ	0xFF5
  7803                           prodh	equ	0xFF4
  7804                           prodl	equ	0xFF3
  7805                           indf0	equ	0xFEF
  7806                           postinc0	equ	0xFEE
  7807                           postdec0	equ	0xFED
  7808                           preinc0	equ	0xFEC
  7809                           plusw0	equ	0xFEB
  7810                           fsr0h	equ	0xFEA
  7811                           fsr0l	equ	0xFE9
  7812                           wreg	equ	0xFE8
  7813                           indf1	equ	0xFE7
  7814                           postinc1	equ	0xFE6
  7815                           postdec1	equ	0xFE5
  7816                           preinc1	equ	0xFE4
  7817                           plusw1	equ	0xFE3
  7818                           fsr1h	equ	0xFE2
  7819                           fsr1l	equ	0xFE1
  7820                           bsr	equ	0xFE0
  7821                           indf2	equ	0xFDF
  7822                           postinc2	equ	0xFDE
  7823                           postdec2	equ	0xFDD
  7824                           preinc2	equ	0xFDC
  7825                           plusw2	equ	0xFDB
  7826                           fsr2h	equ	0xFDA
  7827                           fsr2l	equ	0xFD9
  7828                           status	equ	0xFD8


Data Sizes:
    Strings     165
    Constant    144
    Data        0
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    117     117
    BANK0           128     33      53
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_10(CODE[17]), STR_9(CODE[16]), STR_8(CODE[17]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[15]), main@message(BANK0[20]), STR_2(CODE[14]), 
		 -> STR_1(CODE[14]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_10(CODE[17]), STR_9(CODE[16]), STR_8(CODE[17]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[15]), main@message(BANK0[20]), STR_2(CODE[14]), 
		 -> STR_1(CODE[14]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_4(CODE[19]), STR_3(CODE[19]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> main@message(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    print_message_onLCD@message	PTR unsigned char  size(2) Largest target is 20
		 -> STR_10(CODE[17]), STR_9(CODE[16]), STR_8(CODE[17]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[15]), main@message(BANK0[20]), STR_2(CODE[14]), 
		 -> STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___lwmod
    ___fltol->_scale
    ___flsub->___fladd
    _print_message_onLCD->_strlen
    _init_LCD->_R_I
    _get_voltage->___fldiv
    _get_temp->___fladd
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___fladd->_fround

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                35    35      0   50221
                                            115 COMRAM     2     2      0
                                              0 BANK0     33    33      0
                                _R_I
                             ___flge
                           _get_temp
                        _get_voltage
                           _init_LCD
                     _initial_config
                     _light_the_bulb
    _light_the_bulb_and_start_engine
                _print_message_onLCD
                            _sprintf
                       _start_engine
                 _turn_of_everything
 ---------------------------------------------------------------------------------
 (1) _turn_of_everything                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_engine                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             45    37      8   32367
                                             76 COMRAM    39    31      8
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     5      4    7039
                                             39 COMRAM     9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1208
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1364
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13     9      4    5502
                                             39 COMRAM    13     9      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     615
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              0 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          14     6      8     455
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     615
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     466
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             48 COMRAM    10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3041
                                             68 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1246
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _print_message_onLCD                                  5     3      2     962
                                              4 COMRAM     5     3      2
                                _R_D
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _R_D                                                  1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _light_the_bulb_and_start_engine                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _light_the_bulb                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initial_config                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_LCD                                             1     1      0      22
                                              1 COMRAM     1     1      0
                                _R_I
 ---------------------------------------------------------------------------------
 (2) _R_I                                                  1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _get_voltage                                          4     0      4    6223
                                             64 COMRAM     4     0      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _get_temp                                             8     4      4    9009
                                             68 COMRAM     8     4      4
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    4024
                                             14 COMRAM    25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1551
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2718
                                             52 COMRAM    16     8      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _R_I
   ___flge
   _get_temp
     ___fladd
       _fround (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fldiv
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _get_voltage
     ___fldiv
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _init_LCD
     _R_I
   _initial_config
   _light_the_bulb
   _light_the_bulb_and_start_engine
   _print_message_onLCD
     _R_D
     _strlen
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
   _start_engine
   _turn_of_everything

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     21      35       5       41.4%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     75      75       1       92.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AA      15        0.0%
DATA                 0      0      AA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Apr 04 10:48:18 2020

                                                     ___fldiv@aexp 0040  
                                                     ___fldiv@bexp 003F  
                                                     ___fldiv@sign 0038  
                                                               l74 25D8  
                                                     ___awdiv@sign 000C  
                                                     ?_get_voltage 0041  
                                              ___wmul@multiplicand 0003  
                                                      __CFG_OSC$XT 000000  
                                                              l113 1F00  
                                                              l224 3CAC  
                                                              l153 3596  
                                                              l511 2040  
                                                              l284 1B5C  
                                                              l620 2156  
                                                              l622 20CC  
                                                              l535 1E10  
                                                              l623 20F6  
                                                              l536 1E4E  
                                                              l529 1C02  
                                                              l563 1D6E  
                                                              l910 314E  
                                                              l902 30C0  
                                                              l903 30BA  
                                                              l824 2CF0  
                                                              l816 2E04  
                                                              l808 2C24  
                                                              l833 2D68  
                                                              l809 2BFC  
                                                              l834 2D62  
                                                              l770 1908  
                                                              l780 1850  
                                                              l861 2AC0  
                                                              l941 2226  
                                                              l934 219C  
                                                              l863 2992  
                                                              l937 22B2  
                                                              _LC3 007C5B  
                                                              l874 2A0A  
                                                              _LC4 007C5C  
                                                              l875 2A04  
                                                              l699 1A48  
                                                              l893 2E96  
                                                              l897 3186  
                                                              _R_D 169C  
                                                              _R_I 1680  
                                                     __CFG_BOR$OFF 000000  
                                                     ___awmod@sign 0006  
                                                              wreg 000FE8  
                                                 ??_initial_config 0001  
                                                     ___flmul@aexp 0020  
                                                     ___flmul@bexp 0021  
                                                      _sprintf$835 0059  
                                                     ___flmul@sign 001B  
                                                     ___flmul@temp 0026  
                                                     ___flmul@prod 0022  
                                                     __CFG_LVP$OFF 000000  
                                                             ?_R_D 0001  
                                                             ?_R_I 0001  
                                                     ___fltol@exp1 003A  
                                                     __CFG_WDT$OFF 000000  
                                                             l3001 32B8  
                                                             l3011 338A  
                                                             l3103 1F5C  
                                                             l3007 335A  
                                                             l3201 283A  
                                                             l3025 3562  
                                                             l3131 1FDE  
                                                             l3123 1FAC  
                                                             l3019 34AE  
                                                             l3221 2880  
                                                             l3037 16D0  
                                                             l3303 2A76  
                                                             l3143 1FFC  
                                                             l3047 2076  
                                                             l2505 2AF4  
                                                             l3313 2AB2  
                                                             l3217 287A  
                                                             l3401 1D24  
                                                             l3153 2018  
                                                             l3315 2AB6  
                                                             l3307 2AA4  
                                                             l3243 28EA  
                                                             l3235 28D0  
                                                             l3171 1B14  
                                                             l3155 2026  
                                                             l3147 200E  
                                                             l3083 2112  
                                                             l2541 2B6C  
                                                             l2533 2B48  
                                                             l2509 2AFA  
                                                             l3261 2966  
                                                             l3253 293C  
                                                             l3229 28B8  
                                                             l3341 1BFE  
                                                             l3333 1BA8  
                                                             l3181 1B4C  
                                                             l3093 212E  
                                                             l2607 2C5C  
                                                             l2711 2E50  
                                                             l3415 1D5C  
                                                             l3407 1D2E  
                                                             l3431 1A38  
                                                             l3423 19FE  
                                                             l3095 213C  
                                                             l3087 2124  
                                                             l3511 35CA  
                                                             l2609 2C62  
                                                             l2617 2C76  
                                                             l2529 2B42  
                                                             l3273 29AA  
                                                             l3441 21AE  
                                                             l3337 1BDE  
                                                             l3353 1DE0  
                                                             l3409 1D3C  
                                                             l3169 1B06  
                                                             l3425 1A0C  
                                                             l3601 391A  
                                                             l3513 35DE  
                                                             l3505 35AA  
                                                             l2635 2D18  
                                                             l2651 2D3E  
                                                             l2627 2CDE  
                                                             l2571 2BAA  
                                                             l3267 298E  
                                                             l2803 3106  
                                                             l2707 2E38  
                                                             l3451 21E4  
                                                             l3363 1E4A  
                                                             l3371 1724  
                                                             l3523 361A  
                                                             l2645 2D30  
                                                             l3197 2834  
                                                             l2725 2E7E  
                                                             l2709 2E3E  
                                                             l3461 225C  
                                                             l3453 220C  
                                                             l3357 1DF8  
                                                             l3349 1DAA  
                                                             l3381 1CC2  
                                                             l2901 1AD4  
                                                             l3701 3CB2  
                                                             l3613 39B2  
                                                             l3541 36DC  
                                                             l3517 35E6  
                                                             l3509 35C0  
                                                             l2671 2DB0  
                                                             l2583 2C0C  
                                                             l3279 29CA  
                                                             l2807 3126  
                                                             l2735 2EB8  
                                                             l2727 2E84  
                                                             l3447 21CE  
                                                             l2911 18CE  
                                                             l3623 3A1A  
                                                             l3551 370A  
                                                             l3543 36F6  
                                                             l2585 2C12  
                                                             l3449 21D6  
                                                             l2913 18D8  
                                                             l2833 1C1E  
                                                             l3713 3D34  
                                                             l3633 3A98  
                                                             l3609 3986  
                                                             l3553 3734  
                                                             l3537 36A2  
                                                             l2683 2DE4  
                                                             l3299 2A50  
                                                             l2819 3170  
                                                             l3459 224E  
                                                             l2923 18FC  
                                                             l2931 181E  
                                                             l3731 3E48  
                                                             l3723 3E24  
                                                             l3627 3A92  
                                                             l3547 3704  
                                                             l2685 2DE8  
                                                             l3477 22A0  
                                                             l3493 191E  
                                                             l3397 1D12  
                                                             l2933 1828  
                                                             l2845 1C48  
                                                             l2861 1C82  
                                                             l3725 3E30  
                                                             l3709 3CD2  
                                                             l3645 3B04  
                                                             l3733 3E54  
                                                             l2679 2DDA  
                                                             l2783 3080  
                                                             l2847 1C52  
                                                             l2839 1C30  
                                                             l3743 3E90  
                                                             l3663 3B64  
                                                             l3671 3B8E  
                                                             l3559 374A  
                                                             l2777 3060  
                                                             l3497 1954  
                                                             l2865 1C92  
                                                             l2857 1C76  
                                                             l2881 1A82  
                                                             l3761 3F04  
                                                             l3753 3ED6  
                                                             l3665 3B76  
                                                             l3657 3B4C  
                                                             l3649 3B20  
                                                             l3593 389E  
                                                             l3585 3820  
                                                             l3569 3798  
                                                             l2939 1844  
                                                             l3747 3EB2  
                                                             l3739 3E6E  
                                                             l3835 25BE  
                                                             l2965 17CE  
                                                             l2981 2422  
                                                             l2893 1AB8  
                                                             l2885 1A92  
                                                             l2877 1A74  
                                                             l3765 3F2A  
                                                             l3597 38CC  
                                                             l2967 17D4  
                                                             l2887 1A9C  
                                                             l3775 3F5E  
                                                             l3783 3F80  
                                                             l3767 3F34  
                                                             l3759 3EFA  
                                                             l3695 3C84  
                                                             l3679 3BC8  
                                                             l3687 3C60  
                                                             l3863 26AA  
                                                             l2897 1AC4  
                                                             l3689 3C6C  
                                                             l3873 26FE  
                                                             l3857 2662  
                                                             l2987 2500  
                                                             l3797 3FD0  
                                                             l3885 277A  
                                                             l3895 27CE  
                                                             l3899 27E0  
                                                             STR_1 7FF0  
                                                             STR_2 7FE2  
                                                             STR_3 7F6C  
                                                             STR_4 7F59  
                                                             STR_5 7FD3  
                                                             STR_6 7FA1  
                                                             STR_7 7F90  
                                                             STR_8 7FB2  
                                                             STR_9 7FC3  
                                                             u3100 2062  
                                                             _LATA 000F89  
                                                             u2310 2BCE  
                                                             _LATB 000F8A  
                                                             u3111 2088  
                                                             _LATC 000F8B  
                                                             u2320 2BDE  
                                                             _LATD 000F8C  
                                                             u2330 2BE2  
                                                             u4010 3AD8  
                                                             u4100 3C94  
                                                             u2510 2D5A  
                                                             u4110 3CA6  
                                                             u2360 2C2E  
                                                             u3240 202E  
                                                             u2450 2D04  
                                                             u3170 2144  
                                                             u3091 2058  
                                                             u3260 1B1A  
                                                             u3180 1F48  
                                                             u4310 3FEE  
                                                             u4070 3B9E  
                                                             u3440 29FC  
                                                             u3600 1CAE  
                                                             u2570 2DBE  
                                                             u2490 2D44  
                                                             u2730 30B2  
                                                             u3530 1BFA  
                                                             u3610 1CE4  
                                                             u4410 2800  
                                                             u2830 1C58  
                                                             u3615 1CD8  
                                                             u4351 260C  
                                                             u3480 2A60  
                                                             u2680 2EA4  
                                                             u3800 194E  
                                                             u4280 3F8A  
                                                             u3490 2A86  
                                                             u2770 3116  
                                                             u2690 3020  
                                                             u3650 1D44  
                                                             u2930 18DE  
                                                             u4290 3FAA  
                                                             u4507 18A6  
                                                             u2780 3136  
                                                             u4517 1690  
                                                             u4437 2594  
                                                             u2695 3014  
                                                             u3807 1944  
                                                             u4447 25D0  
                                                             u3760 2268  
                                                             u3680 1A12  
                                                             u2960 182E  
                                                             u3840 367C  
                                                             u4457 25FC  
                                                             u2890 1AA2  
                                                             u4467 27E8  
                                                             u2980 17F8  
                                                             u3940 38DE  
                                                             u4477 16AC  
                                                             u3950 392C  
                                                             u4487 1866  
                                                             u4497 187E  
                                                             u2987 17EE  
                                                             u3980 3984  
                                                     __CFG_PWRT$ON 000000  
                                                     _start_engine 1656  
                                                      main@message 0080  
                                                             _main 255C  
                                                             fsr0h 000FEA  
                                                             indf0 000FEF  
                                                             fsr2h 000FDA  
                                                             fsr0l 000FE9  
                                                             indf2 000FDF  
                                                             fsr2l 000FD9  
                                                             prodh 000FF4  
                                                             prodl 000FF3  
                                                             start 0002  
                                                  ___fldiv@new_exp 0039  
                                                     ___param_bank 000000  
                                                            ??_R_D 0001  
                                                            ??_R_I 0001  
                                                    ___fltol@sign1 0039  
                                                  __end_of___fladd 2E0A  
                                                            ?_main 0001  
                                                  __end_of___fldiv 2AC6  
                                                  __end_of___awdiv 1CA0  
                                                  __end_of___flneg 173A  
                                                            STR_10 7F7F  
                                                  __end_of___awmod 1AE2  
                                                  __end_of___flmul 318C  
                                                  __end_of___flsub 17C2  
                                                  __end_of___fltol 1D74  
                                                  __end_of___lldiv 1B72  
                                                  ___awdiv@divisor 0009  
                                                  __end_of___llmod 1A5E  
                                                  __end_of___lwdiv 1916  
                                                  __end_of___lwmod 185E  
                                                  ___awdiv@counter 000B  
                                                            _PORTA 000F80  
                                                            _PORTB 000F81  
                                                            _PORTC 000F82  
                                                            _PORTD 000F83  
                                                            _TRISA 000F92  
                                                            _TRISB 000F93  
                                                            _TRISC 000F94  
                                                            _TRISD 000F95  
                                                  __end_of_dpowers 7F59  
                                                            _scale 318C  
                                                  __end_of_isdigit 16DC  
                                                            tablat 000FF5  
                                                            status 000FD8  
                                                  __end_of_sprintf 4000  
                                                  __initialization 166A  
                                                     __end_of_main 2806  
                                             print_message_onLCD@i 0009  
                                                           ??_main 0074  
                                                    __activetblptr 000002  
                                             __size_of__tdiv_to_l_ 0116  
                                                    get_temp@ac_in 0045  
                                                           _ADCON0 000FC2  
                                                           _ADCON1 000FC1  
                                                 ___llmod@dividend 0001  
                                                           ?_scale 0028  
                                                           _ADRESH 000FC4  
                                                           _ADRESL 000FC3  
                                                 ___awdiv@dividend 0007  
                                                 __end_of___xxtofl 22B8  
                                                 __end_of__powers_ 7EFD  
                                                 __end_of_get_temp 1F3A  
                                                           ___flge 1D74  
                                                           ___fleq 1B72  
                                                        ??___fladd 003D  
                                                           ___wmul 16DC  
                                                        ??___fldiv 0030  
                                                        ??___awdiv 000B  
                                                        ??___flneg 0005  
                                                        ??___awmod 0005  
                                                        ??___flmul 0017  
                                                        ??___flsub 004D  
                                                        ??___fltol 0035  
                                                        ??___lldiv 0009  
                                                        ??___llmod 0009  
                                                        ??___lwdiv 000A  
                                                 __end_of_init_LCD 18B6  
                                                        ??___lwmod 0005  
                                                           _fround 22B8  
                                                           clear_0 1670  
                                                 ___awdiv@quotient 000D  
                                                  ___awmod@divisor 0003  
                                                  ___awmod@counter 0005  
                                                           main@in 0096  
                                                           _strlen 17C2  
                                             __size_of_get_voltage 0070  
                                                        ??_isdigit 0001  
                                                     __mediumconst 7EC8  
                                                           tblptrh 000FF7  
                                                           tblptrl 000FF6  
                                                           tblptru 000FF8  
                                                        ??_sprintf 0055  
                                                       ___flge@ff1 0001  
                                                       ___flge@ff2 0005  
                                                     ___xxtofl@arg 000B  
                                                     ___xxtofl@exp 000A  
                                                     ___xxtofl@val 0001  
                                                       ___fleq@ff1 0001  
                                                       ___fleq@ff2 0005  
                                                       __accesstop 0080  
                                          __end_of__initialization 1676  
                                                       ___flneg@f1 0001  
                                                    ___rparam_used 000001  
                                                       ___fltol@f1 0031  
                                                   __pcstackCOMRAM 0001  
                                                    __end_of_scale 359C  
                                       __end_of_turn_of_everything 166A  
                                                       __div_to_l_ 1F3A  
                                                  __div_to_l_@exp1 000E  
                                                  __div_to_l_@cntr 000D  
                                      __end_of_print_message_onLCD 197A  
                                                          ??_scale 002C  
                                                  __div_to_l_@quot 0009  
                                                     sprintf@width 006B  
                                                       __pbssBANK0 00A1  
                                                    __div_to_l_@f1 0001  
                                                    __div_to_l_@f2 0005  
                                                          ?___flge 0001  
                                                          ?___fleq 0001  
                                                          ?___wmul 0001  
                                                          ?_fround 0028  
                                                          R_D@dato 0001  
                                                          ?_strlen 0001  
                                                          R_I@dato 0001  
                                          __size_of_light_the_bulb 000A  
                                                        ?___xxtofl 0001  
                                                          _GO_DONE 007E12  
                                                        ?_get_temp 0045  
                                                        ?_init_LCD 0001  
                                                __end_of__npowers_ 7F31  
                                                          __Hparam 0000  
                                                          __Lparam 0000  
                                                  __size_of___flge 00E0  
                                                  __size_of___fleq 0096  
                                                          ___fladd 2AC6  
                                                          ___fldiv 2806  
                                                          ___awdiv 1C08  
                                                          ___flneg 1706  
                                                          ___awmod 1A5E  
                                                          ___flmul 2E0A  
                                                          ___flsub 1778  
                                                          ___fltol 1CA0  
                                                          ___lldiv 1AE2  
                                                  __size_of___wmul 002A  
                                                          ___llmod 19EA  
                                                          ___lwdiv 18B6  
                                                       _fround$832 0030  
                                                       _fround$833 002C  
                                                          ___lwmod 180E  
                                                          __pcinit 166A  
                                                  __size_of_fround 02A4  
                                                          __ramtop 0600  
                                                          __ptext0 255C  
                                                          __ptext1 1660  
                                                          __ptext2 1656  
                                                          __ptext3 359C  
                                                          __ptext4 318C  
                                                          __ptext5 1A5E  
                                                          __ptext6 1C08  
                                                          __ptext7 16B8  
                                                          __ptext8 22B8  
                                                          __ptext9 180E  
                                                  __size_of_strlen 004C  
                                                      ?__div_to_l_ 0001  
                                                     __size_of_R_D 001C  
                                                     __size_of_R_I 001C  
                                                          _dpowers 7F31  
                                                          _isdigit 16B8  
                                                       ??___xxtofl 0005  
                                                 ___awmod@dividend 0001  
                                                          _sprintf 359C  
                                                       ??_get_temp 0049  
                                             end_of_initialization 1676  
                                                       ??_init_LCD 0002  
                                                    __Lmediumconst 7EC8  
                                          __size_of_initial_config 003E  
                                                  ___lldiv@divisor 0005  
                                                  ___lldiv@counter 000D  
                                                          postinc0 000FEE  
                                                          postinc2 000FDE  
                                                   __tdiv_to_l_@f1 0001  
                                                   __tdiv_to_l_@f2 0005  
                                                          strlen@s 0001  
                                                    ??__tdiv_to_l_ 0009  
                                                      ___fladd@grs 0044  
                                                    ___xxtofl@sign 0009  
                                                      ___fldiv@grs 003B  
                                                      ___fldiv@rem 0034  
                                                      ___flmul@grs 001C  
                                              __size_of__div_to_l_ 010C  
                                                   __end_of___flge 1E54  
                                                   __end_of___fleq 1C08  
                                                    ??_get_voltage 0045  
                                                   __end_of___wmul 1706  
                                                   __end_of_fround 255C  
                                                   _light_the_bulb 1642  
                                                   __end_of_strlen 180E  
                                              start_initialization 166A  
                                                      __end_of_R_D 16B8  
                                                      __end_of_R_I 169C  
                                              __end_of__tdiv_to_l_ 215C  
                                               _turn_of_everything 1660  
                                                    ?_start_engine 0001  
                                              ?_turn_of_everything 0001  
                                                  ___llmod@divisor 0005  
                                                  ___llmod@counter 0009  
                                                         ??___flge 0009  
                                                         ??___fleq 0009  
                                                         ??___wmul 0005  
                                                         ??_fround 002C  
                                           __end_of_light_the_bulb 164C  
                                             ??_turn_of_everything 0001  
                                                    sprintf@tmpval 0063  
                                                         ??_strlen 0003  
                                                        ___fladd@a 0039  
                                                        ___fladd@b 0035  
                                                       fround@prec 0034  
                                                        ___fldiv@a 002C  
                                                        ___fldiv@b 0028  
                                                        ___flmul@a 0013  
                                                        ___flmul@b 000F  
                                              __end_of_get_voltage 19EA  
                                                        ___flsub@a 0049  
                                                        ___flsub@b 0045  
                                                    __pcstackBANK0 0080  
                                                __size_of___xxtofl 015C  
                                                   ??_start_engine 0001  
                                                __size_of_get_temp 00E6  
                                                      sprintf@flag 0069  
                                                      sprintf@eexp 0067  
                                                      sprintf@fval 006D  
                                                   _initial_config 173A  
                                                      sprintf@prec 0071  
                                                __size_of_init_LCD 0058  
                                     __size_of_print_message_onLCD 0064  
                                       print_message_onLCD@message 0005  
                                                 ___lwdiv@dividend 0006  
                                                    __pmediumconst 7EC8  
                                                         ?___fladd 0035  
                                                         ?___fldiv 0028  
                                                         ?___awdiv 0007  
                                                         ?___flneg 0001  
                                                         ?___awmod 0001  
                                                         ?___flmul 000F  
                                                         ?___flsub 0045  
                                                         ?___fltol 0031  
                                                         ?___lldiv 0001  
                                                         ?___llmod 0001  
                                                        __npowers_ 7EFD  
                                                         ?___lwdiv 0006  
                                                         ?___lwmod 0001  
                                                  ?_light_the_bulb 0001  
                                                      __tdiv_to_l_ 2046  
                                                     ??__div_to_l_ 0009  
                                                         ?_isdigit 0001  
                                                        _scale$834 002C  
                                                 ___lwdiv@quotient 000A  
                                                         ?_sprintf 004D  
                                                   __size_of_scale 0410  
                                           __end_of_initial_config 1778  
                                                   ___wmul@product 0005  
                                               __end_of__div_to_l_ 2046  
                                                        main@F2154 00A1  
                                                      _get_voltage 197A  
                                                ___wmul@multiplier 0001  
                                                        main@canal 00A0  
                                                        get_temp@r 0049  
                                                  ?_initial_config 0001  
                                                         __Hrparam 0000  
                                                         __Lrparam 0000  
                                                 __size_of___fladd 0344  
                                                 __size_of___fldiv 02C0  
                                                 __size_of___awdiv 0098  
                                                 __size_of___flneg 0034  
                                                 __size_of___awmod 0084  
                                                 __size_of___flmul 0382  
                                                 __size_of___flsub 004A  
                                                 __size_of___fltol 00D4  
                                                 __size_of___lldiv 0090  
                                             __end_of_start_engine 1660  
                                                 __size_of___llmod 0074  
                                                 __size_of___lwdiv 0060  
                                                 __size_of___lwmod 0050  
                                                      _isdigit$651 0002  
                                                       sprintf@val 005F  
                                                         ___xxtofl 215C  
                                                 __size_of_isdigit 0024  
                                                         _main$114 0094  
                                                  ___lwdiv@divisor 0008  
                                                  ___lwdiv@counter 000C  
                                                         __ptext10 18B6  
                                                         __ptext11 2046  
                                                         __ptext20 1B72  
                                                         __ptext12 1F3A  
                                                         __ptext21 1916  
                                                         __ptext13 16DC  
                                                         __ptext30 1E54  
                                                         __ptext22 17C2  
                                                         __ptext14 19EA  
                                                         __ptext31 215C  
                                                         __ptext23 169C  
                                                         __ptext15 1AE2  
                                                         __ptext32 2E0A  
                                                         __ptext24 164C  
                                                         __ptext16 1CA0  
                                                         __ptext33 2806  
                                                         __ptext25 1642  
                                                         __ptext17 1778  
                                                         __ptext34 2AC6  
                                                         __ptext26 173A  
                                                         __ptext18 1706  
                                                         __ptext27 185E  
                                                         __ptext19 1D74  
                                                         __ptext28 1680  
                                                         __ptext29 197A  
                                                         __powers_ 7EC9  
                                                         _get_temp 1E54  
                                                 __size_of_sprintf 0A64  
                                                         _init_LCD 185E  
                                                    __size_of_main 02AA  
                                                         main@temp 009C  
                                                         main@volt 0098  
                                              _print_message_onLCD 1916  
                                                         isdigit@c 0003  
                                                         scale@scl 0030  
                                                        sprintf@ap 005D  
                                                 __tdiv_to_l_@exp1 0011  
                                                        sprintf@sp 004D  
                                                 __tdiv_to_l_@cntr 0010  
                                                 __tdiv_to_l_@quot 000C  
                                                 ___lwmod@dividend 0001  
                                                 ___lldiv@dividend 0001  
                                             ?_print_message_onLCD 0005  
                                                 ??_light_the_bulb 0001  
                                                     ?__tdiv_to_l_ 0001  
                                      __size_of_turn_of_everything 000A  
                                                         sprintf@c 0073  
                                                         sprintf@f 004F  
                                                 get_voltage@ac_in 0041  
                                                 ___lldiv@quotient 0009  
                                                  ___lwmod@divisor 0003  
                                                         strlen@cp 0003  
                                                  ___lwmod@counter 0005  
                                                    ___fladd@signs 0041  
                                                     ___fladd@aexp 0042  
                                                     ___fladd@bexp 0043  
                                            ??_print_message_onLCD 0007  
                                            __size_of_start_engine 000A  
                          __end_of_light_the_bulb_and_start_engine 1656  
                         __size_of_light_the_bulb_and_start_engine 000A  
                                ??_light_the_bulb_and_start_engine 0001  
                                 ?_light_the_bulb_and_start_engine 0001  
                                  _light_the_bulb_and_start_engine 164C  
