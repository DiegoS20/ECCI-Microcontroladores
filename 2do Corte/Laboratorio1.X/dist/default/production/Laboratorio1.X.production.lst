

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Apr 03 19:12:45 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30  0000                     
    31                           ; Version 2.05
    32                           ; Generated 20/12/2018 GMT
    33                           ; 
    34                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F452 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     
    66                           	psect	idataCOMRAM
    67  003B0C                     __pidataCOMRAM:
    68                           	opt callstack 0
    69                           
    70                           ;initializer for _NUMERO
    71  003B0C  F8                 	db	248
    72  003B0D  88                 	db	136
    73  003B0E  F8                 	db	248
    74  003B0F  40                 	db	64
    75  003B10  F8                 	db	248
    76  003B11  F8                 	db	248
    77  003B12  B8                 	db	184
    78  003B13  A8                 	db	168
    79  003B14  E8                 	db	232
    80  003B15  A8                 	db	168
    81  003B16  A8                 	db	168
    82  003B17  F8                 	db	248
    83  003B18  E0                 	db	224
    84  003B19  20                 	db	32
    85  003B1A  F8                 	db	248
    86  003B1B  E8                 	db	232
    87  003B1C  A8                 	db	168
    88  003B1D  B8                 	db	184
    89  003B1E  F8                 	db	248
    90  003B1F  A8                 	db	168
    91  003B20  B8                 	db	184
    92  003B21  80                 	db	128
    93  003B22  80                 	db	128
    94  003B23  F8                 	db	248
    95  003B24  F8                 	db	248
    96  003B25  A8                 	db	168
    97  003B26  F8                 	db	248
    98  003B27  E0                 	db	224
    99  003B28  A0                 	db	160
   100  003B29  F8                 	db	248
   101  003B2A  F8                 	db	248
   102  003B2B  A0                 	db	160
   103  003B2C  F8                 	db	248
   104  003B2D  F8                 	db	248
   105  003B2E  28                 	db	40
   106  003B2F  38                 	db	56
   107  003B30  F8                 	db	248
   108  003B31  88                 	db	136
   109  003B32  88                 	db	136
   110  003B33  38                 	db	56
   111  003B34  28                 	db	40
   112  003B35  F8                 	db	248
   113  003B36  F8                 	db	248
   114  003B37  A8                 	db	168
   115  003B38  A8                 	db	168
   116  003B39  F8                 	db	248
   117  003B3A  A0                 	db	160
   118  003B3B  A0                 	db	160
   119                           
   120                           ;initializer for _SIMBOLO
   121  003B3C  20                 	db	32
   122  003B3D  70                 	db	112
   123  003B3E  20                 	db	32
   124  003B3F  20                 	db	32
   125  003B40  20                 	db	32
   126  003B41  20                 	db	32
   127  003B42  50                 	db	80
   128  003B43  20                 	db	32
   129  003B44  50                 	db	80
   130  003B45  10                 	db	16
   131  003B46  20                 	db	32
   132  003B47  40                 	db	64
   133  003B48  70                 	db	112
   134  003B49  20                 	db	32
   135  003B4A  70                 	db	112
   136  003B4B  20                 	db	32
   137  003B4C  40                 	db	64
   138  003B4D  20                 	db	32
   139  003B4E  40                 	db	64
   140  003B4F  20                 	db	32
   141  003B50  40                 	db	64
   142  003B51  50                 	db	80
   143  003B52  60                 	db	96
   144  003B53  50                 	db	80
   145  003B54  60                 	db	96
   146  003B55  50                 	db	80
   147  003B56  60                 	db	96
   148  003B57  80                 	db	128
   149  003B58  F8                 	db	248
   150  003B59  80                 	db	128
   151  003B5A  50                 	db	80
   152  003B5B  50                 	db	80
   153  003B5C  50                 	db	80
   154  003B5D  F8                 	db	248
   155  003B5E  B0                 	db	176
   156  003B5F  E8                 	db	232
   157  0000                     _PORTE	set	3972
   158  0000                     _LATE	set	3981
   159  0000                     _TRISE	set	3990
   160  0000                     _PORTD	set	3971
   161  0000                     _LATD	set	3980
   162  0000                     _TRISD	set	3989
   163  0000                     _LATC	set	3979
   164  0000                     _TRISC	set	3988
   165  0000                     _LATB	set	3978
   166  0000                     _TRISB	set	3987
   167  0000                     _PORTA	set	3968
   168  0000                     _LATA	set	3977
   169  0000                     _TRISA	set	3986
   170  0000                     _ADCON1	set	4033
   171  0000                     _PORTC	set	3970
   172  0000                     _PORTB	set	3969
   173  0000                     _LA5	set	31821
   174  0000                     _LA3	set	31819
   175                           
   176                           ; #config settings
   177  0000                     
   178                           	psect	cinit
   179  0039F0                     __pcinit:
   180                           	opt callstack 0
   181  0039F0                     start_initialization:
   182                           	opt callstack 0
   183  0039F0                     __initialization:
   184                           	opt callstack 0
   185                           
   186                           ; Initialize objects allocated to COMRAM (84 bytes)
   187                           ; load TBLPTR registers with __pidataCOMRAM
   188  0039F0  0E0C               	movlw	low __pidataCOMRAM
   189  0039F2  6EF6               	movwf	tblptrl,c
   190  0039F4  0E3B               	movlw	high __pidataCOMRAM
   191  0039F6  6EF7               	movwf	tblptrh,c
   192  0039F8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   193  0039FA  6EF8               	movwf	tblptru,c
   194  0039FC  EE00  F001         	lfsr	0,__pdataCOMRAM
   195  003A00  EE10 F054          	lfsr	1,84
   196  003A04                     copy_data0:
   197  003A04  0009               	tblrd		*+
   198  003A06  CFF5 FFEE          	movff	tablat,postinc0
   199  003A0A  50E5               	movf	postdec1,w,c
   200  003A0C  50E1               	movf	fsr1l,w,c
   201  003A0E  E1FA               	bnz	copy_data0
   202  003A10                     end_of_initialization:
   203                           	opt callstack 0
   204  003A10                     __end_of__initialization:
   205                           	opt callstack 0
   206  003A10  0E00               	movlw	low (__Lmediumconst shr (0+16))
   207  003A12  6EF8               	movwf	tblptru,c
   208  003A14  0100               	movlb	0
   209  003A16  EFE6  F01E         	goto	_main	;jump to C main() function
   210                           
   211                           	psect	dataCOMRAM
   212  000001                     __pdataCOMRAM:
   213                           	opt callstack 0
   214  000001                     _NUMERO:
   215                           	opt callstack 0
   216  000001                     	ds	48
   217  000031                     _SIMBOLO:
   218                           	opt callstack 0
   219  000031                     	ds	36
   220                           
   221                           	psect	cstackCOMRAM
   222  000055                     __pcstackCOMRAM:
   223                           	opt callstack 0
   224  000055                     suma@oper_2:
   225                           	opt callstack 0
   226  000055                     resta@oper_2:
   227                           	opt callstack 0
   228  000055                     multi@oper_2:
   229                           	opt callstack 0
   230  000055                     and@oper_2:
   231                           	opt callstack 0
   232  000055                     or@oper_2:
   233                           	opt callstack 0
   234  000055                     xor@oper_2:
   235                           	opt callstack 0
   236  000055                     ___lbdiv@divisor:
   237                           	opt callstack 0
   238  000055                     ___lbmod@divisor:
   239                           	opt callstack 0
   240  000055                     tolower@c:
   241                           	opt callstack 0
   242                           
   243                           ; 1 bytes @ 0x0
   244  000055                     	ds	1
   245  000056                     visualizar@position:
   246                           	opt callstack 0
   247  000056                     suma@oper_1:
   248                           	opt callstack 0
   249  000056                     resta@oper_1:
   250                           	opt callstack 0
   251  000056                     multi@oper_1:
   252                           	opt callstack 0
   253  000056                     and@oper_1:
   254                           	opt callstack 0
   255  000056                     or@oper_1:
   256                           	opt callstack 0
   257  000056                     xor@oper_1:
   258                           	opt callstack 0
   259  000056                     ___lbdiv@dividend:
   260                           	opt callstack 0
   261  000056                     ___lbmod@dividend:
   262                           	opt callstack 0
   263                           
   264                           ; 1 bytes @ 0x1
   265  000056                     	ds	1
   266  000057                     visualizar@from:
   267                           	opt callstack 0
   268  000057                     nand@oper_2:
   269                           	opt callstack 0
   270  000057                     ___lbdiv@counter:
   271                           	opt callstack 0
   272  000057                     ___lbmod@counter:
   273                           	opt callstack 0
   274                           
   275                           ; 1 bytes @ 0x2
   276  000057                     	ds	1
   277  000058                     visualizar@enable:
   278                           	opt callstack 0
   279  000058                     nand@oper_1:
   280                           	opt callstack 0
   281  000058                     ___lbdiv@quotient:
   282                           	opt callstack 0
   283  000058                     ___lbmod@rem:
   284                           	opt callstack 0
   285                           
   286                           ; 1 bytes @ 0x3
   287  000058                     	ds	1
   288  000059                     ??_visualizar:
   289  000059                     division@oper_2:
   290                           	opt callstack 0
   291  000059                     module@oper_2:
   292                           	opt callstack 0
   293                           
   294                           ; 1 bytes @ 0x4
   295  000059                     	ds	1
   296  00005A                     division@oper_1:
   297                           	opt callstack 0
   298  00005A                     module@oper_1:
   299                           	opt callstack 0
   300                           
   301                           ; 1 bytes @ 0x5
   302  00005A                     	ds	1
   303  00005B                     division@result:
   304                           	opt callstack 0
   305  00005B                     no_es_primo@num:
   306                           	opt callstack 0
   307                           
   308                           ; 1 bytes @ 0x6
   309  00005B                     	ds	1
   310  00005C                     no_es_primo@i:
   311                           	opt callstack 0
   312                           
   313                           ; 1 bytes @ 0x7
   314  00005C                     	ds	1
   315  00005D                     visualizar@SoN:
   316                           	opt callstack 0
   317  00005D                     operar@oper_1:
   318                           	opt callstack 0
   319                           
   320                           ; 1 bytes @ 0x8
   321  00005D                     	ds	1
   322  00005E                     operar@oper_2:
   323                           	opt callstack 0
   324  00005E                     _visualizar$170:
   325                           	opt callstack 0
   326                           
   327                           ; 2 bytes @ 0x9
   328  00005E                     	ds	1
   329  00005F                     operar@oper:
   330                           	opt callstack 0
   331                           
   332                           ; 1 bytes @ 0xA
   333  00005F                     	ds	1
   334  000060                     visualizar@x:
   335                           	opt callstack 0
   336                           
   337                           ; 1 bytes @ 0xB
   338  000060                     	ds	1
   339  000061                     ??_show_error_message:
   340  000061                     see_full_operation@oper_2:
   341                           	opt callstack 0
   342                           
   343                           ; 1 bytes @ 0xC
   344  000061                     	ds	1
   345  000062                     see_full_operation@oper:
   346                           	opt callstack 0
   347                           
   348                           ; 1 bytes @ 0xD
   349  000062                     	ds	1
   350  000063                     ??_see_full_operation:
   351                           
   352                           ; 1 bytes @ 0xE
   353  000063                     	ds	1
   354  000064                     see_full_operation@oper_1:
   355                           	opt callstack 0
   356                           
   357                           ; 1 bytes @ 0xF
   358  000064                     	ds	1
   359  000065                     ??_main:
   360                           
   361                           ; 1 bytes @ 0x10
   362  000065                     	ds	1
   363  000066                     _main$157:
   364                           	opt callstack 0
   365                           
   366                           ; 2 bytes @ 0x11
   367  000066                     	ds	2
   368  000068                     _main$161:
   369                           	opt callstack 0
   370                           
   371                           ; 2 bytes @ 0x13
   372  000068                     	ds	2
   373  00006A                     main@_SoN:
   374                           	opt callstack 0
   375                           
   376                           ; 1 bytes @ 0x15
   377  00006A                     	ds	1
   378  00006B                     main@_resultado:
   379                           	opt callstack 0
   380                           
   381                           ; 2 bytes @ 0x16
   382  00006B                     	ds	2
   383  00006D                     main@i:
   384                           	opt callstack 0
   385                           
   386                           ; 1 bytes @ 0x18
   387  00006D                     	ds	1
   388  00006E                     main@i_156:
   389                           	opt callstack 0
   390                           
   391                           ; 1 bytes @ 0x19
   392  00006E                     	ds	1
   393  00006F                     main@x:
   394                           	opt callstack 0
   395                           
   396                           ; 1 bytes @ 0x1A
   397  00006F                     	ds	1
   398  000070                     main@i_162:
   399                           	opt callstack 0
   400                           
   401                           ; 1 bytes @ 0x1B
   402  000070                     	ds	1
   403  000071                     main@resultado:
   404                           	opt callstack 0
   405                           
   406                           ; 1 bytes @ 0x1C
   407  000071                     	ds	1
   408  000072                     main@oper:
   409                           	opt callstack 0
   410                           
   411                           ; 1 bytes @ 0x1D
   412  000072                     	ds	1
   413  000073                     main@oper_1:
   414                           	opt callstack 0
   415                           
   416                           ; 1 bytes @ 0x1E
   417  000073                     	ds	1
   418  000074                     main@oper_2:
   419                           	opt callstack 0
   420                           
   421                           ; 1 bytes @ 0x1F
   422  000074                     	ds	1
   423                           
   424 ;;
   425 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   426 ;;
   427 ;; *************** function _main *****************
   428 ;; Defined at:
   429 ;;		line 58 in file "main.c"
   430 ;; Parameters:    Size  Location     Type
   431 ;;		None
   432 ;; Auto vars:     Size  Location     Type
   433 ;;  i               1   27[COMRAM] unsigned char 
   434 ;;  _resultado      2   22[COMRAM] int 
   435 ;;  x               1   26[COMRAM] unsigned char 
   436 ;;  _SoN            1   21[COMRAM] unsigned char 
   437 ;;  i               1   25[COMRAM] unsigned char 
   438 ;;  i               1   24[COMRAM] unsigned char 
   439 ;;  oper_2          1   31[COMRAM] unsigned char 
   440 ;;  oper_1          1   30[COMRAM] unsigned char 
   441 ;;  oper            1   29[COMRAM] unsigned char 
   442 ;;  resultado       1   28[COMRAM] unsigned char 
   443 ;; Return value:  Size  Location     Type
   444 ;;                  1    wreg      void 
   445 ;; Registers used:
   446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   447 ;; Tracked objects:
   448 ;;		On entry : 0/0
   449 ;;		On exit  : 0/0
   450 ;;		Unchanged: 0/0
   451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   452 ;;      Params:         0       0       0       0       0       0       0
   453 ;;      Locals:        15       0       0       0       0       0       0
   454 ;;      Temps:          1       0       0       0       0       0       0
   455 ;;      Totals:        16       0       0       0       0       0       0
   456 ;;Total ram usage:       16 bytes
   457 ;; Hardware stack levels required when called:    4
   458 ;; This function calls:
   459 ;;		_init_config
   460 ;;		_operar
   461 ;;		_see_full_operation
   462 ;;		_show_error_message
   463 ;;		_visualizar
   464 ;; This function is called by:
   465 ;;		Startup code after reset
   466 ;; This function uses a non-reentrant model
   467 ;;
   468                           
   469                           	psect	text0
   470  003DCC                     __ptext0:
   471                           	opt callstack 0
   472  003DCC                     _main:
   473                           	opt callstack 0
   474  003DCC  FFFF               	dw	65535	; assembler added errata NOP
   475                           
   476                           ;main.c: 60: char oper_1;;main.c: 61: char oper_2;;main.c: 62: char oper;;main.c: 63: ch
      +                          ar resultado;;main.c: 65: init_config();
   477                           
   478                           ;incstack = 0
   479  003DCE  EC41  F01D         	call	_init_config	;wreg free
   480  003DD2                     l1504:
   481  003DD2  FFFF               	dw	65535	; assembler added errata NOP
   482                           
   483                           ;main.c: 67: {;main.c: 68: oper_1 = PORTB>>4;
   484  003DD4  3881               	swapf	3969,w,c	;volatile
   485  003DD6  0B0F               	andlw	15
   486  003DD8  6E73               	movwf	main@oper_1,c
   487                           
   488                           ;main.c: 69: oper_2 = PORTB&0X0F;
   489  003DDA  5081               	movf	3969,w,c	;volatile
   490  003DDC  0B0F               	andlw	15
   491  003DDE  6E74               	movwf	main@oper_2,c
   492                           
   493                           ;main.c: 70: oper = PORTC&0X0F;
   494  003DE0  5082               	movf	3970,w,c	;volatile
   495  003DE2  0B0F               	andlw	15
   496  003DE4  6E72               	movwf	main@oper,c
   497                           
   498                           ;main.c: 72: for (char i = 0; i < 200; i++) {
   499  003DE6  0E00               	movlw	0
   500  003DE8  6E6D               	movwf	main@i,c
   501  003DEA                     l1516:
   502  003DEA  FFFF               	dw	65535	; assembler added errata NOP
   503                           
   504                           ;main.c: 73: see_full_operation(oper_1, oper_2, oper);
   505  003DEC  C074  F061         	movff	main@oper_2,see_full_operation@oper_2
   506  003DF0  C072  F062         	movff	main@oper,see_full_operation@oper
   507  003DF4  5073               	movf	main@oper_1,w,c
   508  003DF6  ECDF  F01D         	call	_see_full_operation
   509  003DFA  2A6D               	incf	main@i,f,c
   510  003DFC  0EC7               	movlw	199
   511  003DFE  646D               	cpfsgt	main@i,c
   512  003E00  D7F4               	goto	l1516
   513                           
   514                           ;main.c: 74: };main.c: 76: for (char i = 0; i < 200; i++) {
   515  003E02  0E00               	movlw	0
   516  003E04  6E6E               	movwf	main@i_156,c
   517  003E06  D0D2               	goto	l1592
   518  003E08                     l1528:
   519  003E08  FFFF               	dw	65535	; assembler added errata NOP
   520                           
   521                           ;main.c: 79: case 2:;main.c: 80: resultado = operar(oper, oper_1, oper_2);
   522  003E0A  C073  F05D         	movff	main@oper_1,operar@oper_1
   523  003E0E  C074  F05E         	movff	main@oper_2,operar@oper_2
   524  003E12  5072               	movf	main@oper,w,c
   525  003E14  EC67  F01E         	call	_operar
   526  003E18  6E71               	movwf	main@resultado,c
   527                           
   528                           ;main.c: 81: visualizar('n', resultado, 0, 1);
   529  003E1A  C071  F056         	movff	main@resultado,visualizar@position
   530  003E1E  0E00               	movlw	0
   531  003E20  6E57               	movwf	visualizar@from,c
   532  003E22  0E01               	movlw	1
   533  003E24  6E58               	movwf	visualizar@enable,c
   534  003E26  0E6E               	movlw	110
   535  003E28  EC0F  F01E         	call	_visualizar
   536                           
   537                           ;main.c: 82: break;
   538  003E2C  D0E3               	goto	l1594
   539  003E2E                     l1532:
   540  003E2E  FFFF               	dw	65535	; assembler added errata NOP
   541                           
   542                           ;main.c: 84: resultado = oper_1 < oper_2 ? operar(oper, oper_2, oper_1) : operar(oper, o
      +                          per_1, oper_2);
   543  003E30  5074               	movf	main@oper_2,w,c
   544  003E32  5C73               	subwf	main@oper_1,w,c
   545  003E34  A0D8               	btfss	status,0,c
   546  003E36  D008               	goto	l1536
   547  003E38  C073  F05D         	movff	main@oper_1,operar@oper_1
   548  003E3C  C074  F05E         	movff	main@oper_2,operar@oper_2
   549  003E40  5072               	movf	main@oper,w,c
   550  003E42  EC67  F01E         	call	_operar
   551  003E46  D008               	goto	L1
   552  003E48                     l1536:
   553  003E48  FFFF               	dw	65535	; assembler added errata NOP
   554  003E4A  C074  F05D         	movff	main@oper_2,operar@oper_1
   555  003E4E  C073  F05E         	movff	main@oper_1,operar@oper_2
   556  003E52  5072               	movf	main@oper,w,c
   557  003E54  EC67  F01E         	call	_operar
   558  003E58                     L1:
   559  003E58  FFFF               	dw	65535	; assembler added errata NOP
   560  003E5A  6E65               	movwf	??_main& (0+255),c
   561  003E5C  5065               	movf	??_main,w,c
   562  003E5E  6E66               	movwf	_main$157,c
   563  003E60  6A67               	clrf	_main$157+1,c
   564  003E62  C066  F071         	movff	_main$157,main@resultado
   565                           
   566                           ;main.c: 85: char x = 0;
   567  003E66  0E00               	movlw	0
   568  003E68  6E6F               	movwf	main@x,c
   569                           
   570                           ;main.c: 86: if (oper_1 < oper_2) {
   571  003E6A  5074               	movf	main@oper_2,w,c
   572  003E6C  5C73               	subwf	main@oper_1,w,c
   573  003E6E  B0D8               	btfsc	status,0,c
   574  003E70  D00B               	goto	l1548
   575                           
   576                           ;main.c: 87: visualizar('s', 1, x, 1);
   577  003E72  0E01               	movlw	1
   578  003E74  6E56               	movwf	visualizar@position,c
   579  003E76  0E00               	movlw	0
   580  003E78  6E57               	movwf	visualizar@from,c
   581  003E7A  0E01               	movlw	1
   582  003E7C  6E58               	movwf	visualizar@enable,c
   583  003E7E  0E73               	movlw	115
   584  003E80  EC0F  F01E         	call	_visualizar
   585                           
   586                           ;main.c: 88: x += 3;
   587  003E84  0E03               	movlw	3
   588  003E86  266F               	addwf	main@x,f,c
   589  003E88                     l1548:
   590  003E88  FFFF               	dw	65535	; assembler added errata NOP
   591                           
   592                           ;main.c: 89: };main.c: 91: visualizar('n', resultado, x, 1);
   593  003E8A  C071  F056         	movff	main@resultado,visualizar@position
   594  003E8E  C06F  F057         	movff	main@x,visualizar@from
   595  003E92  0E01               	movlw	1
   596  003E94  6E58               	movwf	visualizar@enable,c
   597  003E96  0E6E               	movlw	110
   598  003E98  EC0F  F01E         	call	_visualizar
   599                           
   600                           ;main.c: 92: break;
   601  003E9C  D0AB               	goto	l1594
   602  003E9E                     l1550:
   603  003E9E  FFFF               	dw	65535	; assembler added errata NOP
   604                           
   605                           ;main.c: 94: case 4:;main.c: 95: if (oper_2 == 0) {
   606  003EA0  5074               	movf	main@oper_2,w,c
   607  003EA2  A4D8               	btfss	status,2,c
   608  003EA4  D003               	goto	l1554
   609                           
   610                           ;main.c: 96: show_error_message();
   611  003EA6  ECB0  F01D         	call	_show_error_message	;wreg free
   612                           
   613                           ;main.c: 97: } else {
   614  003EAA  D0A4               	goto	l1594
   615  003EAC                     l1554:
   616  003EAC  FFFF               	dw	65535	; assembler added errata NOP
   617                           
   618                           ;main.c: 98: resultado = operar(oper, oper_1, oper_2);
   619  003EAE  C073  F05D         	movff	main@oper_1,operar@oper_1
   620  003EB2  C074  F05E         	movff	main@oper_2,operar@oper_2
   621  003EB6  5072               	movf	main@oper,w,c
   622  003EB8  EC67  F01E         	call	_operar
   623  003EBC  6E71               	movwf	main@resultado,c
   624                           
   625                           ;main.c: 99: visualizar('n', resultado, 0, 1);
   626  003EBE  C071  F056         	movff	main@resultado,visualizar@position
   627  003EC2  0E00               	movlw	0
   628  003EC4  6E57               	movwf	visualizar@from,c
   629  003EC6  0E01               	movlw	1
   630  003EC8  6E58               	movwf	visualizar@enable,c
   631  003ECA  0E6E               	movlw	110
   632  003ECC  EC0F  F01E         	call	_visualizar
   633  003ED0  D091               	goto	l1594
   634  003ED2                     l100:
   635  003ED2  FFFF               	dw	65535	; assembler added errata NOP
   636                           
   637                           ;main.c: 103: case 6:;main.c: 104: case 7:;main.c: 105: case 8:;main.c: 106: resultado =
      +                           operar(oper, oper_1, oper_2);
   638  003ED4  C073  F05D         	movff	main@oper_1,operar@oper_1
   639  003ED8  C074  F05E         	movff	main@oper_2,operar@oper_2
   640  003EDC  5072               	movf	main@oper,w,c
   641  003EDE  EC67  F01E         	call	_operar
   642  003EE2  6E71               	movwf	main@resultado,c
   643                           
   644                           ;main.c: 107: int _resultado = resultado&0X0F;
   645  003EE4  C071  F065         	movff	main@resultado,??_main
   646  003EE8  0E0F               	movlw	15
   647  003EEA  1665               	andwf	??_main,f,c
   648  003EEC  5065               	movf	??_main,w,c
   649  003EEE  6E6B               	movwf	main@_resultado,c
   650  003EF0  6A6C               	clrf	main@_resultado+1,c
   651                           
   652                           ;main.c: 108: visualizar('n', _resultado, 0, 1);
   653  003EF2  C06B  F056         	movff	main@_resultado,visualizar@position
   654  003EF6  0E00               	movlw	0
   655  003EF8  6E57               	movwf	visualizar@from,c
   656  003EFA  0E01               	movlw	1
   657  003EFC  6E58               	movwf	visualizar@enable,c
   658  003EFE  0E6E               	movlw	110
   659  003F00  EC0F  F01E         	call	_visualizar
   660                           
   661                           ;main.c: 109: break;
   662  003F04  D077               	goto	l1594
   663  003F06                     l1564:
   664  003F06  FFFF               	dw	65535	; assembler added errata NOP
   665                           
   666                           ;main.c: 111: case 10:;main.c: 112: resultado = operar(oper, oper_1, oper_2);
   667  003F08  C073  F05D         	movff	main@oper_1,operar@oper_1
   668  003F0C  C074  F05E         	movff	main@oper_2,operar@oper_2
   669  003F10  5072               	movf	main@oper,w,c
   670  003F12  EC67  F01E         	call	_operar
   671  003F16  6E71               	movwf	main@resultado,c
   672                           
   673                           ;main.c: 113: int _resultado = resultado ? 9 : 15;
   674  003F18  5071               	movf	main@resultado,w,c
   675  003F1A  A4D8               	btfss	status,2,c
   676  003F1C  D004               	goto	l1570
   677  003F1E  0E00               	movlw	0
   678  003F20  6E6C               	movwf	main@_resultado+1,c
   679  003F22  0E0F               	movlw	15
   680  003F24  D004               	goto	L2
   681  003F26                     l1570:
   682  003F26  FFFF               	dw	65535	; assembler added errata NOP
   683  003F28  0E00               	movlw	0
   684  003F2A  6E6C               	movwf	main@_resultado+1,c
   685  003F2C  0E09               	movlw	9
   686  003F2E                     L2:
   687  003F2E  FFFF               	dw	65535	; assembler added errata NOP
   688  003F30  6E6B               	movwf	main@_resultado,c
   689                           
   690                           ;main.c: 114: char _SoN = resultado ? 's' : 'n';
   691  003F32  5071               	movf	main@resultado,w,c
   692  003F34  A4D8               	btfss	status,2,c
   693  003F36  D004               	goto	l1574
   694  003F38  0E00               	movlw	0
   695  003F3A  6E69               	movwf	_main$161+1,c
   696  003F3C  0E6E               	movlw	110
   697  003F3E  D004               	goto	L3
   698  003F40                     l1574:
   699  003F40  FFFF               	dw	65535	; assembler added errata NOP
   700  003F42  0E00               	movlw	0
   701  003F44  6E69               	movwf	_main$161+1,c
   702  003F46  0E73               	movlw	115
   703  003F48                     L3:
   704  003F48  FFFF               	dw	65535	; assembler added errata NOP
   705  003F4A  6E68               	movwf	_main$161,c
   706  003F4C  C068  F06A         	movff	_main$161,main@_SoN
   707                           
   708                           ;main.c: 115: visualizar(_SoN, _resultado, 0, 1);
   709  003F50  C06B  F056         	movff	main@_resultado,visualizar@position
   710  003F54  0E00               	movlw	0
   711  003F56  6E57               	movwf	visualizar@from,c
   712  003F58  0E01               	movlw	1
   713  003F5A  6E58               	movwf	visualizar@enable,c
   714  003F5C  506A               	movf	main@_SoN,w,c
   715  003F5E  EC0F  F01E         	call	_visualizar
   716                           
   717                           ;main.c: 116: break;
   718  003F62  D048               	goto	l1594
   719  003F64                     l1580:
   720  003F64  FFFF               	dw	65535	; assembler added errata NOP
   721                           
   722                           ;main.c: 118: for (char i = 0; i < 2; i++) {
   723  003F66  0E00               	movlw	0
   724  003F68  6E70               	movwf	main@i_162,c
   725  003F6A                     l1586:
   726  003F6A  FFFF               	dw	65535	; assembler added errata NOP
   727                           
   728                           ;main.c: 119: visualizar('s', 1, 0, i + 1);
   729  003F6C  0E01               	movlw	1
   730  003F6E  6E56               	movwf	visualizar@position,c
   731  003F70  0E00               	movlw	0
   732  003F72  6E57               	movwf	visualizar@from,c
   733  003F74  2870               	incf	main@i_162,w,c
   734  003F76  6E58               	movwf	visualizar@enable,c
   735  003F78  0E73               	movlw	115
   736  003F7A  EC0F  F01E         	call	_visualizar
   737                           
   738                           ;main.c: 120: visualizar('s', 1, 3, i + 1);
   739  003F7E  0E01               	movlw	1
   740  003F80  6E56               	movwf	visualizar@position,c
   741  003F82  0E03               	movlw	3
   742  003F84  6E57               	movwf	visualizar@from,c
   743  003F86  2870               	incf	main@i_162,w,c
   744  003F88  6E58               	movwf	visualizar@enable,c
   745  003F8A  0E73               	movlw	115
   746  003F8C  EC0F  F01E         	call	_visualizar
   747                           
   748                           ;main.c: 121: visualizar('s', 1, 6, i + 1);
   749  003F90  0E01               	movlw	1
   750  003F92  6E56               	movwf	visualizar@position,c
   751  003F94  0E06               	movlw	6
   752  003F96  6E57               	movwf	visualizar@from,c
   753  003F98  2870               	incf	main@i_162,w,c
   754  003F9A  6E58               	movwf	visualizar@enable,c
   755  003F9C  0E73               	movlw	115
   756  003F9E  EC0F  F01E         	call	_visualizar
   757  003FA2  2A70               	incf	main@i_162,f,c
   758  003FA4  0E01               	movlw	1
   759  003FA6  6470               	cpfsgt	main@i_162,c
   760  003FA8  D7E0               	goto	l1586
   761  003FAA  D024               	goto	l1594
   762  003FAC                     l1592:
   763  003FAC  FFFF               	dw	65535	; assembler added errata NOP
   764  003FAE  5072               	movf	main@oper,w,c
   765                           
   766                           ; Switch size 1, requested type "simple"
   767                           ; Number of cases is 11, Range of values is 0 to 10
   768                           ; switch strategies available:
   769                           ; Name         Instructions Cycles
   770                           ; simple_byte           34    18 (average)
   771                           ;	Chosen strategy is simple_byte
   772  003FB0  0A00               	xorlw	0	; case 0
   773  003FB2  B4D8               	btfsc	status,2,c
   774  003FB4  D729               	goto	l1528
   775  003FB6  0A01               	xorlw	1	; case 1
   776  003FB8  B4D8               	btfsc	status,2,c
   777  003FBA  D739               	goto	l1532
   778  003FBC  0A03               	xorlw	3	; case 2
   779  003FBE  B4D8               	btfsc	status,2,c
   780  003FC0  D723               	goto	l1528
   781  003FC2  0A01               	xorlw	1	; case 3
   782  003FC4  B4D8               	btfsc	status,2,c
   783  003FC6  D76B               	goto	l1550
   784  003FC8  0A07               	xorlw	7	; case 4
   785  003FCA  B4D8               	btfsc	status,2,c
   786  003FCC  D768               	goto	l1550
   787  003FCE  0A01               	xorlw	1	; case 5
   788  003FD0  B4D8               	btfsc	status,2,c
   789  003FD2  D77F               	goto	l100
   790  003FD4  0A03               	xorlw	3	; case 6
   791  003FD6  B4D8               	btfsc	status,2,c
   792  003FD8  D77C               	goto	l100
   793  003FDA  0A01               	xorlw	1	; case 7
   794  003FDC  B4D8               	btfsc	status,2,c
   795  003FDE  D779               	goto	l100
   796  003FE0  0A0F               	xorlw	15	; case 8
   797  003FE2  B4D8               	btfsc	status,2,c
   798  003FE4  D776               	goto	l100
   799  003FE6  0A01               	xorlw	1	; case 9
   800  003FE8  B4D8               	btfsc	status,2,c
   801  003FEA  D78D               	goto	l1564
   802  003FEC  0A03               	xorlw	3	; case 10
   803  003FEE  B4D8               	btfsc	status,2,c
   804  003FF0  D78A               	goto	l1564
   805  003FF2  D7B8               	goto	l1580
   806  003FF4                     l1594:
   807  003FF4  FFFF               	dw	65535	; assembler added errata NOP
   808  003FF6  2A6E               	incf	main@i_156,f,c
   809  003FF8  0EC7               	movlw	199
   810  003FFA  646E               	cpfsgt	main@i_156,c
   811  003FFC  D7D7               	goto	l1592
   812  003FFE  D6E9               	goto	l1504
   813  004000                     __end_of_main:
   814                           	opt callstack 0
   815                           
   816 ;; *************** function _show_error_message *****************
   817 ;; Defined at:
   818 ;;		line 192 in file "main.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;		None
   821 ;; Auto vars:     Size  Location     Type
   822 ;;		None
   823 ;; Return value:  Size  Location     Type
   824 ;;                  1    wreg      void 
   825 ;; Registers used:
   826 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   832 ;;      Params:         0       0       0       0       0       0       0
   833 ;;      Locals:         0       0       0       0       0       0       0
   834 ;;      Temps:          1       0       0       0       0       0       0
   835 ;;      Totals:         1       0       0       0       0       0       0
   836 ;;Total ram usage:        1 bytes
   837 ;; Hardware stack levels used:    1
   838 ;; Hardware stack levels required when called:    2
   839 ;; This function calls:
   840 ;;		_visualizar
   841 ;; This function is called by:
   842 ;;		_main
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           	psect	text1
   847  003B60                     __ptext1:
   848                           	opt callstack 0
   849  003B60                     _show_error_message:
   850                           	opt callstack 0
   851  003B60  FFFF               	dw	65535	; assembler added errata NOP
   852                           
   853                           ;main.c: 193: visualizar('n', 14, 0, 1);
   854                           
   855                           ;incstack = 0
   856  003B62  0E0E               	movlw	14
   857  003B64  6E56               	movwf	visualizar@position,c
   858  003B66  0E00               	movlw	0
   859  003B68  6E57               	movwf	visualizar@from,c
   860  003B6A  0E01               	movlw	1
   861  003B6C  6E58               	movwf	visualizar@enable,c
   862  003B6E  0E6E               	movlw	110
   863  003B70  EC0F  F01E         	call	_visualizar
   864                           
   865                           ;main.c: 194: visualizar('s', 11, 4, 1);
   866  003B74  0E0B               	movlw	11
   867  003B76  6E56               	movwf	visualizar@position,c
   868  003B78  0E04               	movlw	4
   869  003B7A  6E57               	movwf	visualizar@from,c
   870  003B7C  0E01               	movlw	1
   871  003B7E  6E58               	movwf	visualizar@enable,c
   872  003B80  0E73               	movlw	115
   873  003B82  EC0F  F01E         	call	_visualizar
   874                           
   875                           ;main.c: 195: visualizar('n', 14, 0, 2);
   876  003B86  0E0E               	movlw	14
   877  003B88  6E56               	movwf	visualizar@position,c
   878  003B8A  0E00               	movlw	0
   879  003B8C  6E57               	movwf	visualizar@from,c
   880  003B8E  0E02               	movlw	2
   881  003B90  6E58               	movwf	visualizar@enable,c
   882  003B92  0E6E               	movlw	110
   883  003B94  EC0F  F01E         	call	_visualizar
   884                           
   885                           ;main.c: 196: visualizar('s', 11, 4, 2);
   886  003B98  0E0B               	movlw	11
   887  003B9A  6E56               	movwf	visualizar@position,c
   888  003B9C  0E04               	movlw	4
   889  003B9E  6E57               	movwf	visualizar@from,c
   890  003BA0  0E02               	movlw	2
   891  003BA2  6E58               	movwf	visualizar@enable,c
   892  003BA4  0E73               	movlw	115
   893  003BA6  EC0F  F01E         	call	_visualizar
   894                           
   895                           ;main.c: 197: _delay((unsigned long)((5)*(4000000/4000.0)));
   896  003BAA  0E05               	movlw	5
   897  003BAC  6E61               	movwf	??_show_error_message& (0+255),c
   898  003BAE  0EDF               	movlw	223
   899  003BB0                     u457:
   900  003BB0  FFFF               	dw	65535	; errata NOP
   901  003BB2  2EE8               	decfsz	wreg,f,c
   902  003BB4  D7FD               	bra	u457
   903  003BB6  2E61               	decfsz	??_show_error_message& (0+255),f,c
   904  003BB8  D7FB               	bra	u457
   905  003BBA  0012               	return		;funcret
   906  003BBC  FFFF               	dw	65535	; errata NOP
   907  003BBE                     __end_of_show_error_message:
   908                           	opt callstack 0
   909                           
   910 ;; *************** function _see_full_operation *****************
   911 ;; Defined at:
   912 ;;		line 184 in file "main.c"
   913 ;; Parameters:    Size  Location     Type
   914 ;;  oper_1          1    wreg     unsigned char 
   915 ;;  oper_2          1   12[COMRAM] unsigned char 
   916 ;;  oper            1   13[COMRAM] unsigned char 
   917 ;; Auto vars:     Size  Location     Type
   918 ;;  oper_1          1   15[COMRAM] unsigned char 
   919 ;; Return value:  Size  Location     Type
   920 ;;                  1    wreg      void 
   921 ;; Registers used:
   922 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   923 ;; Tracked objects:
   924 ;;		On entry : 0/0
   925 ;;		On exit  : 0/0
   926 ;;		Unchanged: 0/0
   927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   928 ;;      Params:         2       0       0       0       0       0       0
   929 ;;      Locals:         1       0       0       0       0       0       0
   930 ;;      Temps:          1       0       0       0       0       0       0
   931 ;;      Totals:         4       0       0       0       0       0       0
   932 ;;Total ram usage:        4 bytes
   933 ;; Hardware stack levels used:    1
   934 ;; Hardware stack levels required when called:    2
   935 ;; This function calls:
   936 ;;		_visualizar
   937 ;; This function is called by:
   938 ;;		_main
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942                           	psect	text2
   943  003BBE                     __ptext2:
   944                           	opt callstack 0
   945  003BBE                     _see_full_operation:
   946                           	opt callstack 0
   947  003BBE  FFFF               	dw	65535	; assembler added errata NOP
   948                           
   949                           ;incstack = 0
   950                           ;see_full_operation@oper_1 stored from wreg
   951  003BC0  6E64               	movwf	see_full_operation@oper_1,c
   952                           
   953                           ;main.c: 185: visualizar('n', oper_1, 0, 1);
   954  003BC2  C064  F056         	movff	see_full_operation@oper_1,visualizar@position
   955  003BC6  0E00               	movlw	0
   956  003BC8  6E57               	movwf	visualizar@from,c
   957  003BCA  0E01               	movlw	1
   958  003BCC  6E58               	movwf	visualizar@enable,c
   959  003BCE  0E6E               	movlw	110
   960  003BD0  EC0F  F01E         	call	_visualizar
   961                           
   962                           ;main.c: 186: visualizar('s', oper, 4, 1);
   963  003BD4  C062  F056         	movff	see_full_operation@oper,visualizar@position
   964  003BD8  0E04               	movlw	4
   965  003BDA  6E57               	movwf	visualizar@from,c
   966  003BDC  0E01               	movlw	1
   967  003BDE  6E58               	movwf	visualizar@enable,c
   968  003BE0  0E73               	movlw	115
   969  003BE2  EC0F  F01E         	call	_visualizar
   970                           
   971                           ;main.c: 187: visualizar('n', oper_2, 0, 2);
   972  003BE6  C061  F056         	movff	see_full_operation@oper_2,visualizar@position
   973  003BEA  0E00               	movlw	0
   974  003BEC  6E57               	movwf	visualizar@from,c
   975  003BEE  0E02               	movlw	2
   976  003BF0  6E58               	movwf	visualizar@enable,c
   977  003BF2  0E6E               	movlw	110
   978  003BF4  EC0F  F01E         	call	_visualizar
   979                           
   980                           ;main.c: 188: visualizar('s', 10, 4, 2);
   981  003BF8  0E0A               	movlw	10
   982  003BFA  6E56               	movwf	visualizar@position,c
   983  003BFC  0E04               	movlw	4
   984  003BFE  6E57               	movwf	visualizar@from,c
   985  003C00  0E02               	movlw	2
   986  003C02  6E58               	movwf	visualizar@enable,c
   987  003C04  0E73               	movlw	115
   988  003C06  EC0F  F01E         	call	_visualizar
   989                           
   990                           ;main.c: 189: _delay((unsigned long)((5)*(4000000/4000.0)));
   991  003C0A  0E05               	movlw	5
   992  003C0C  6E63               	movwf	??_see_full_operation& (0+255),c
   993  003C0E  0EDF               	movlw	223
   994  003C10                     u467:
   995  003C10  FFFF               	dw	65535	; errata NOP
   996  003C12  2EE8               	decfsz	wreg,f,c
   997  003C14  D7FD               	bra	u467
   998  003C16  2E63               	decfsz	??_see_full_operation& (0+255),f,c
   999  003C18  D7FB               	bra	u467
  1000  003C1A  0012               	return		;funcret
  1001  003C1C  FFFF               	dw	65535	; errata NOP
  1002  003C1E                     __end_of_see_full_operation:
  1003                           	opt callstack 0
  1004                           
  1005 ;; *************** function _visualizar *****************
  1006 ;; Defined at:
  1007 ;;		line 165 in file "main.c"
  1008 ;; Parameters:    Size  Location     Type
  1009 ;;  SoN             1    wreg     unsigned char 
  1010 ;;  position        1    1[COMRAM] unsigned char 
  1011 ;;  from            1    2[COMRAM] unsigned char 
  1012 ;;  enable          1    3[COMRAM] unsigned char 
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;  SoN             1    8[COMRAM] unsigned char 
  1015 ;;  x               1   11[COMRAM] unsigned char 
  1016 ;; Return value:  Size  Location     Type
  1017 ;;                  1    wreg      void 
  1018 ;; Registers used:
  1019 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1020 ;; Tracked objects:
  1021 ;;		On entry : 0/0
  1022 ;;		On exit  : 0/0
  1023 ;;		Unchanged: 0/0
  1024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1025 ;;      Params:         3       0       0       0       0       0       0
  1026 ;;      Locals:         4       0       0       0       0       0       0
  1027 ;;      Temps:          4       0       0       0       0       0       0
  1028 ;;      Totals:        11       0       0       0       0       0       0
  1029 ;;Total ram usage:       11 bytes
  1030 ;; Hardware stack levels used:    1
  1031 ;; Hardware stack levels required when called:    1
  1032 ;; This function calls:
  1033 ;;		_tolower
  1034 ;; This function is called by:
  1035 ;;		_main
  1036 ;;		_see_full_operation
  1037 ;;		_show_error_message
  1038 ;; This function uses a non-reentrant model
  1039 ;;
  1040                           
  1041                           	psect	text3
  1042  003C1E                     __ptext3:
  1043                           	opt callstack 0
  1044  003C1E                     _visualizar:
  1045                           	opt callstack 0
  1046  003C1E  FFFF               	dw	65535	; assembler added errata NOP
  1047                           
  1048                           ;incstack = 0
  1049                           ;visualizar@SoN stored from wreg
  1050  003C20  6E5D               	movwf	visualizar@SoN,c
  1051                           
  1052                           ;main.c: 167: for (char x = 0; x < 3; x++) {
  1053  003C22  0E00               	movlw	0
  1054  003C24  6E60               	movwf	visualizar@x,c
  1055  003C26                     l1336:
  1056  003C26  FFFF               	dw	65535	; assembler added errata NOP
  1057                           
  1058                           ;main.c: 168: if ((from + x) > 6) {
  1059  003C28  5060               	movf	visualizar@x,w,c
  1060  003C2A  C057  F059         	movff	visualizar@from,??_visualizar
  1061  003C2E  6A5A               	clrf	(??_visualizar+1)& (0+255),c
  1062  003C30  2659               	addwf	??_visualizar,f,c
  1063  003C32  0E00               	movlw	0
  1064  003C34  225A               	addwfc	??_visualizar+1,f,c
  1065  003C36  BE5A               	btfsc	??_visualizar+1,7,c
  1066  003C38  D006               	goto	l1340
  1067  003C3A  505A               	movf	??_visualizar+1,w,c
  1068  003C3C  E146               	bnz	l126
  1069  003C3E  0E07               	movlw	7
  1070  003C40  5C59               	subwf	??_visualizar,w,c
  1071  003C42  B0D8               	btfsc	status,0,c
  1072  003C44  D041               	goto	u320
  1073  003C46                     l1340:
  1074  003C46  FFFF               	dw	65535	; assembler added errata NOP
  1075                           
  1076                           ;main.c: 170: };main.c: 171: if (enable == 1) {
  1077  003C48  0458               	decf	visualizar@enable,w,c
  1078  003C4A  A4D8               	btfss	status,2,c
  1079  003C4C  D003               	goto	l127
  1080                           
  1081                           ;main.c: 172: LA3 = 1;
  1082  003C4E  8689               	bsf	3977,3,c	;volatile
  1083                           
  1084                           ;main.c: 173: LA5 = 0;
  1085  003C50  9A89               	bcf	3977,5,c	;volatile
  1086                           
  1087                           ;main.c: 174: } else {
  1088  003C52  D003               	goto	l1344
  1089  003C54                     l127:
  1090  003C54  FFFF               	dw	65535	; assembler added errata NOP
  1091                           
  1092                           ;main.c: 175: LA3 = 0;
  1093  003C56  9689               	bcf	3977,3,c	;volatile
  1094                           
  1095                           ;main.c: 176: LA5 = 1;
  1096  003C58  8A89               	bsf	3977,5,c	;volatile
  1097  003C5A                     l1344:
  1098  003C5A  FFFF               	dw	65535	; assembler added errata NOP
  1099                           
  1100                           ;main.c: 177: };main.c: 178: LATD = tolower(SoN) == 's' ? ~SIMBOLO[position][x] : ~NUMER
      +                          O[position][x];
  1101  003C5C  505D               	movf	visualizar@SoN,w,c
  1102  003C5E  ECEB  F01C         	call	_tolower
  1103  003C62  0A73               	xorlw	115
  1104  003C64  B4D8               	btfsc	status,2,c
  1105  003C66  D006               	goto	l1348
  1106  003C68  5056               	movf	visualizar@position,w,c
  1107  003C6A  0D03               	mullw	3
  1108  003C6C  0E01               	movlw	low _NUMERO
  1109  003C6E  6E59               	movwf	??_visualizar& (0+255),c
  1110  003C70  0E00               	movlw	high _NUMERO
  1111  003C72  D006               	goto	L4
  1112  003C74                     l1348:
  1113  003C74  FFFF               	dw	65535	; assembler added errata NOP
  1114  003C76  5056               	movf	visualizar@position,w,c
  1115  003C78  0D03               	mullw	3
  1116  003C7A  0E31               	movlw	low _SIMBOLO
  1117  003C7C  6E59               	movwf	??_visualizar& (0+255),c
  1118  003C7E  0E00               	movlw	high _SIMBOLO
  1119  003C80                     L4:
  1120  003C80  FFFF               	dw	65535	; assembler added errata NOP
  1121  003C82  6E5A               	movwf	(??_visualizar+1)& (0+255),c
  1122  003C84  50F3               	movf	prodl,w,c
  1123  003C86  2659               	addwf	??_visualizar,f,c
  1124  003C88  50F4               	movf	prodh,w,c
  1125  003C8A  225A               	addwfc	??_visualizar+1,f,c
  1126  003C8C  5060               	movf	visualizar@x,w,c
  1127  003C8E  2459               	addwf	??_visualizar,w,c
  1128  003C90  6ED9               	movwf	fsr2l,c
  1129  003C92  0E00               	movlw	0
  1130  003C94  205A               	addwfc	??_visualizar+1,w,c
  1131  003C96  6EDA               	movwf	fsr2h,c
  1132  003C98  50DF               	movf	indf2,w,c
  1133  003C9A  6E5B               	movwf	(??_visualizar+2)& (0+255),c
  1134  003C9C  6A5C               	clrf	(??_visualizar+3)& (0+255),c
  1135  003C9E  1C5B               	comf	??_visualizar+2,w,c
  1136  003CA0  6E5E               	movwf	_visualizar$170,c
  1137  003CA2  1C5C               	comf	??_visualizar+3,w,c
  1138  003CA4  6E5F               	movwf	_visualizar$170+1,c
  1139  003CA6  C05E  FF8C         	movff	_visualizar$170,3980	;volatile
  1140                           
  1141                           ;main.c: 179: LATE = x + from;
  1142  003CAA  5060               	movf	visualizar@x,w,c
  1143  003CAC  2457               	addwf	visualizar@from,w,c
  1144  003CAE  6E8D               	movwf	3981,c	;volatile
  1145                           
  1146                           ;main.c: 180: _delay((unsigned long)((5)*(4000000/4000.0)));
  1147  003CB0  0E05               	movlw	5
  1148  003CB2  6E59               	movwf	??_visualizar& (0+255),c
  1149  003CB4  0EDF               	movlw	223
  1150  003CB6                     u477:
  1151  003CB6  FFFF               	dw	65535	; errata NOP
  1152  003CB8  2EE8               	decfsz	wreg,f,c
  1153  003CBA  D7FD               	bra	u477
  1154  003CBC  2E59               	decfsz	??_visualizar& (0+255),f,c
  1155  003CBE  D7FB               	bra	u477
  1156  003CC0  2A60               	incf	visualizar@x,f,c
  1157  003CC2  0E02               	movlw	2
  1158  003CC4  6460               	cpfsgt	visualizar@x,c
  1159  003CC6  D7AF               	goto	l1336
  1160  003CC8                     u320:
  1161  003CC8  FFFF               	dw	65535	; assembler added errata NOP
  1162  003CCA                     l126:
  1163  003CCA  0012               	return		;funcret
  1164  003CCC  FFFF               	dw	65535	; errata NOP
  1165  003CCE                     __end_of_visualizar:
  1166                           	opt callstack 0
  1167                           
  1168 ;; *************** function _tolower *****************
  1169 ;; Defined at:
  1170 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\tolower.c"
  1171 ;; Parameters:    Size  Location     Type
  1172 ;;  c               1    wreg     unsigned char 
  1173 ;; Auto vars:     Size  Location     Type
  1174 ;;  c               1    0[COMRAM] unsigned char 
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  1    wreg      unsigned char 
  1177 ;; Registers used:
  1178 ;;		wreg, status,2, status,0
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1184 ;;      Params:         0       0       0       0       0       0       0
  1185 ;;      Locals:         1       0       0       0       0       0       0
  1186 ;;      Temps:          0       0       0       0       0       0       0
  1187 ;;      Totals:         1       0       0       0       0       0       0
  1188 ;;Total ram usage:        1 bytes
  1189 ;; Hardware stack levels used:    1
  1190 ;; This function calls:
  1191 ;;		Nothing
  1192 ;; This function is called by:
  1193 ;;		_visualizar
  1194 ;; This function uses a non-reentrant model
  1195 ;;
  1196                           
  1197                           	psect	text4
  1198  0039D6                     __ptext4:
  1199                           	opt callstack 0
  1200  0039D6                     _tolower:
  1201                           	opt callstack 0
  1202  0039D6  FFFF               	dw	65535	; assembler added errata NOP
  1203                           
  1204                           ;incstack = 0
  1205                           ;tolower@c stored from wreg
  1206  0039D8  6E55               	movwf	tolower@c,c
  1207  0039DA  0E5B               	movlw	91
  1208  0039DC  6055               	cpfslt	tolower@c,c
  1209  0039DE  D004               	goto	l1292
  1210  0039E0  0E40               	movlw	64
  1211  0039E2  6455               	cpfsgt	tolower@c,c
  1212  0039E4  D001               	goto	l1292
  1213  0039E6  8A55               	bsf	tolower@c,5,c
  1214  0039E8                     l1292:
  1215  0039E8  FFFF               	dw	65535	; assembler added errata NOP
  1216  0039EA  5055               	movf	tolower@c,w,c
  1217  0039EC  0012               	return		;funcret
  1218  0039EE  FFFF               	dw	65535	; errata NOP
  1219  0039F0                     __end_of_tolower:
  1220                           	opt callstack 0
  1221                           
  1222 ;; *************** function _operar *****************
  1223 ;; Defined at:
  1224 ;;		line 200 in file "main.c"
  1225 ;; Parameters:    Size  Location     Type
  1226 ;;  oper            1    wreg     unsigned char 
  1227 ;;  oper_1          1    8[COMRAM] unsigned char 
  1228 ;;  oper_2          1    9[COMRAM] unsigned char 
  1229 ;; Auto vars:     Size  Location     Type
  1230 ;;  oper            1   10[COMRAM] unsigned char 
  1231 ;; Return value:  Size  Location     Type
  1232 ;;                  1    wreg      unsigned char 
  1233 ;; Registers used:
  1234 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1235 ;; Tracked objects:
  1236 ;;		On entry : 0/0
  1237 ;;		On exit  : 0/0
  1238 ;;		Unchanged: 0/0
  1239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1240 ;;      Params:         2       0       0       0       0       0       0
  1241 ;;      Locals:         1       0       0       0       0       0       0
  1242 ;;      Temps:          0       0       0       0       0       0       0
  1243 ;;      Totals:         3       0       0       0       0       0       0
  1244 ;;Total ram usage:        3 bytes
  1245 ;; Hardware stack levels used:    1
  1246 ;; Hardware stack levels required when called:    3
  1247 ;; This function calls:
  1248 ;;		_and
  1249 ;;		_division
  1250 ;;		_module
  1251 ;;		_multi
  1252 ;;		_nand
  1253 ;;		_no_es_primo
  1254 ;;		_or
  1255 ;;		_resta
  1256 ;;		_suma
  1257 ;;		_xor
  1258 ;; This function is called by:
  1259 ;;		_main
  1260 ;; This function uses a non-reentrant model
  1261 ;;
  1262                           
  1263                           	psect	text5
  1264  003CCE                     __ptext5:
  1265                           	opt callstack 0
  1266  003CCE                     _operar:
  1267                           	opt callstack 0
  1268  003CCE  FFFF               	dw	65535	; assembler added errata NOP
  1269                           
  1270                           ;incstack = 0
  1271                           ;operar@oper stored from wreg
  1272  003CD0  6E5F               	movwf	operar@oper,c
  1273                           
  1274                           ;main.c: 201: switch (oper) {
  1275  003CD2  D056               	goto	l1496
  1276  003CD4                     l1420:
  1277  003CD4  FFFF               	dw	65535	; assembler added errata NOP
  1278                           
  1279                           ;main.c: 203: return suma(oper_1, oper_2);
  1280  003CD6  C05E  F055         	movff	operar@oper_2,suma@oper_2
  1281  003CDA  505D               	movf	operar@oper_1,w,c
  1282  003CDC  ECBA  F01C         	call	_suma
  1283  003CE0  D072               	goto	l143
  1284  003CE2                     l1426:
  1285  003CE2  FFFF               	dw	65535	; assembler added errata NOP
  1286                           
  1287                           ;main.c: 206: return resta(oper_1, oper_2);
  1288  003CE4  C05E  F055         	movff	operar@oper_2,resta@oper_2
  1289  003CE8  505D               	movf	operar@oper_1,w,c
  1290  003CEA  ECB4  F01C         	call	_resta
  1291  003CEE  D06B               	goto	l143
  1292  003CF0                     l1432:
  1293  003CF0  FFFF               	dw	65535	; assembler added errata NOP
  1294                           
  1295                           ;main.c: 209: return multi(oper_1, oper_2);
  1296  003CF2  C05E  F055         	movff	operar@oper_2,multi@oper_2
  1297  003CF6  505D               	movf	operar@oper_1,w,c
  1298  003CF8  ECC6  F01C         	call	_multi
  1299  003CFC  D064               	goto	l143
  1300  003CFE                     l1438:
  1301  003CFE  FFFF               	dw	65535	; assembler added errata NOP
  1302                           
  1303                           ;main.c: 212: return division(oper_1, oper_2);
  1304  003D00  C05E  F059         	movff	operar@oper_2,division@oper_2
  1305  003D04  505D               	movf	operar@oper_1,w,c
  1306  003D06  ECE0  F01C         	call	_division
  1307  003D0A  D05D               	goto	l143
  1308  003D0C                     l1444:
  1309  003D0C  FFFF               	dw	65535	; assembler added errata NOP
  1310                           
  1311                           ;main.c: 215: return module(oper_1, oper_2);
  1312  003D0E  C05E  F059         	movff	operar@oper_2,module@oper_2
  1313  003D12  505D               	movf	operar@oper_1,w,c
  1314  003D14  ECCD  F01C         	call	_module
  1315  003D18  D056               	goto	l143
  1316  003D1A                     l1450:
  1317  003D1A  FFFF               	dw	65535	; assembler added errata NOP
  1318                           
  1319                           ;main.c: 218: return and(oper_1, oper_2);
  1320  003D1C  C05E  F055         	movff	operar@oper_2,and@oper_2
  1321  003D20  505D               	movf	operar@oper_1,w,c
  1322  003D22  ECA8  F01C         	call	_and
  1323  003D26  D04F               	goto	l143
  1324  003D28                     l1456:
  1325  003D28  FFFF               	dw	65535	; assembler added errata NOP
  1326                           
  1327                           ;main.c: 221: return or(oper_1, oper_2);
  1328  003D2A  C05E  F055         	movff	operar@oper_2,or@oper_2
  1329  003D2E  505D               	movf	operar@oper_1,w,c
  1330  003D30  ECAE  F01C         	call	_or
  1331  003D34  D048               	goto	l143
  1332  003D36                     l1462:
  1333  003D36  FFFF               	dw	65535	; assembler added errata NOP
  1334                           
  1335                           ;main.c: 224: return nand(oper_1, oper_2);
  1336  003D38  C05E  F057         	movff	operar@oper_2,nand@oper_2
  1337  003D3C  505D               	movf	operar@oper_1,w,c
  1338  003D3E  ECD6  F01C         	call	_nand
  1339  003D42  D041               	goto	l143
  1340  003D44                     l1468:
  1341  003D44  FFFF               	dw	65535	; assembler added errata NOP
  1342                           
  1343                           ;main.c: 227: return xor(oper_1, oper_2);
  1344  003D46  C05E  F055         	movff	operar@oper_2,xor@oper_2
  1345  003D4A  505D               	movf	operar@oper_1,w,c
  1346  003D4C  ECC0  F01C         	call	_xor
  1347  003D50  D03A               	goto	l143
  1348  003D52                     l1474:
  1349  003D52  FFFF               	dw	65535	; assembler added errata NOP
  1350                           
  1351                           ;main.c: 230: return no_es_primo(oper_1);
  1352  003D54  505D               	movf	operar@oper_1,w,c
  1353  003D56  EC26  F01D         	call	_no_es_primo
  1354  003D5A  D035               	goto	l143
  1355  003D5C                     l1480:
  1356  003D5C  FFFF               	dw	65535	; assembler added errata NOP
  1357                           
  1358                           ;main.c: 233: if (oper_1 == 2 && !module(oper_2, 2)) {
  1359  003D5E  0E02               	movlw	2
  1360  003D60  185D               	xorwf	operar@oper_1,w,c
  1361  003D62  A4D8               	btfss	status,2,c
  1362  003D64  D00A               	goto	l1488
  1363  003D66  0E02               	movlw	2
  1364  003D68  6E59               	movwf	module@oper_2,c
  1365  003D6A  505E               	movf	operar@oper_2,w,c
  1366  003D6C  ECCD  F01C         	call	_module
  1367  003D70  0900               	iorlw	0
  1368  003D72  A4D8               	btfss	status,2,c
  1369  003D74  D002               	goto	l1488
  1370                           
  1371                           ;main.c: 234: return 1;
  1372  003D76  0E01               	movlw	1
  1373  003D78  D026               	goto	l143
  1374  003D7A                     l1488:
  1375  003D7A  FFFF               	dw	65535	; assembler added errata NOP
  1376                           
  1377                           ;main.c: 235: };main.c: 236: return 0;
  1378  003D7C  0E00               	movlw	0
  1379  003D7E  D023               	goto	l143
  1380  003D80                     l1496:
  1381  003D80  FFFF               	dw	65535	; assembler added errata NOP
  1382  003D82  505F               	movf	operar@oper,w,c
  1383                           
  1384                           ; Switch size 1, requested type "simple"
  1385                           ; Number of cases is 11, Range of values is 0 to 10
  1386                           ; switch strategies available:
  1387                           ; Name         Instructions Cycles
  1388                           ; simple_byte           34    18 (average)
  1389                           ;	Chosen strategy is simple_byte
  1390  003D84  0A00               	xorlw	0	; case 0
  1391  003D86  B4D8               	btfsc	status,2,c
  1392  003D88  D7A5               	goto	l1420
  1393  003D8A  0A01               	xorlw	1	; case 1
  1394  003D8C  B4D8               	btfsc	status,2,c
  1395  003D8E  D7A9               	goto	l1426
  1396  003D90  0A03               	xorlw	3	; case 2
  1397  003D92  B4D8               	btfsc	status,2,c
  1398  003D94  D7AD               	goto	l1432
  1399  003D96  0A01               	xorlw	1	; case 3
  1400  003D98  B4D8               	btfsc	status,2,c
  1401  003D9A  D7B1               	goto	l1438
  1402  003D9C  0A07               	xorlw	7	; case 4
  1403  003D9E  B4D8               	btfsc	status,2,c
  1404  003DA0  D7B5               	goto	l1444
  1405  003DA2  0A01               	xorlw	1	; case 5
  1406  003DA4  B4D8               	btfsc	status,2,c
  1407  003DA6  D7B9               	goto	l1450
  1408  003DA8  0A03               	xorlw	3	; case 6
  1409  003DAA  B4D8               	btfsc	status,2,c
  1410  003DAC  D7BD               	goto	l1456
  1411  003DAE  0A01               	xorlw	1	; case 7
  1412  003DB0  B4D8               	btfsc	status,2,c
  1413  003DB2  D7C1               	goto	l1462
  1414  003DB4  0A0F               	xorlw	15	; case 8
  1415  003DB6  B4D8               	btfsc	status,2,c
  1416  003DB8  D7C5               	goto	l1468
  1417  003DBA  0A01               	xorlw	1	; case 9
  1418  003DBC  B4D8               	btfsc	status,2,c
  1419  003DBE  D7C9               	goto	l1474
  1420  003DC0  0A03               	xorlw	3	; case 10
  1421  003DC2  B4D8               	btfsc	status,2,c
  1422  003DC4  D7CB               	goto	l1480
  1423  003DC6                     l143:
  1424  003DC6  FFFF               	dw	65535	; assembler added errata NOP
  1425  003DC8  0012               	return		;funcret
  1426  003DCA  FFFF               	dw	65535	; errata NOP
  1427  003DCC                     __end_of_operar:
  1428                           	opt callstack 0
  1429                           
  1430 ;; *************** function _xor *****************
  1431 ;; Defined at:
  1432 ;;		line 276 in file "main.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;  oper_1          1    wreg     unsigned char 
  1435 ;;  oper_2          1    0[COMRAM] unsigned char 
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;  oper_1          1    1[COMRAM] unsigned char 
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  1    wreg      unsigned char 
  1440 ;; Registers used:
  1441 ;;		wreg, status,2, status,0
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1447 ;;      Params:         1       0       0       0       0       0       0
  1448 ;;      Locals:         1       0       0       0       0       0       0
  1449 ;;      Temps:          0       0       0       0       0       0       0
  1450 ;;      Totals:         2       0       0       0       0       0       0
  1451 ;;Total ram usage:        2 bytes
  1452 ;; Hardware stack levels used:    1
  1453 ;; This function calls:
  1454 ;;		Nothing
  1455 ;; This function is called by:
  1456 ;;		_operar
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text6
  1461  003980                     __ptext6:
  1462                           	opt callstack 0
  1463  003980                     _xor:
  1464                           	opt callstack 0
  1465  003980  FFFF               	dw	65535	; assembler added errata NOP
  1466                           
  1467                           ;incstack = 0
  1468                           ;xor@oper_1 stored from wreg
  1469  003982  6E56               	movwf	xor@oper_1,c
  1470                           
  1471                           ;main.c: 277: return oper_1 ^ oper_2;
  1472  003984  5056               	movf	xor@oper_1,w,c
  1473  003986  1855               	xorwf	xor@oper_2,w,c
  1474  003988  0012               	return		;funcret
  1475  00398A  FFFF               	dw	65535	; errata NOP
  1476  00398C                     __end_of_xor:
  1477                           	opt callstack 0
  1478                           
  1479 ;; *************** function _suma *****************
  1480 ;; Defined at:
  1481 ;;		line 243 in file "main.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;  oper_1          1    wreg     unsigned char 
  1484 ;;  oper_2          1    0[COMRAM] unsigned char 
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;  oper_1          1    1[COMRAM] unsigned char 
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  1    wreg      unsigned char 
  1489 ;; Registers used:
  1490 ;;		wreg, status,2, status,0
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1496 ;;      Params:         1       0       0       0       0       0       0
  1497 ;;      Locals:         1       0       0       0       0       0       0
  1498 ;;      Temps:          0       0       0       0       0       0       0
  1499 ;;      Totals:         2       0       0       0       0       0       0
  1500 ;;Total ram usage:        2 bytes
  1501 ;; Hardware stack levels used:    1
  1502 ;; This function calls:
  1503 ;;		Nothing
  1504 ;; This function is called by:
  1505 ;;		_operar
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           	psect	text7
  1510  003974                     __ptext7:
  1511                           	opt callstack 0
  1512  003974                     _suma:
  1513                           	opt callstack 0
  1514  003974  FFFF               	dw	65535	; assembler added errata NOP
  1515                           
  1516                           ;incstack = 0
  1517                           ;suma@oper_1 stored from wreg
  1518  003976  6E56               	movwf	suma@oper_1,c
  1519                           
  1520                           ;main.c: 244: return oper_1 + oper_2;
  1521  003978  5056               	movf	suma@oper_1,w,c
  1522  00397A  2455               	addwf	suma@oper_2,w,c
  1523  00397C  0012               	return		;funcret
  1524  00397E  FFFF               	dw	65535	; errata NOP
  1525  003980                     __end_of_suma:
  1526                           	opt callstack 0
  1527                           
  1528 ;; *************** function _resta *****************
  1529 ;; Defined at:
  1530 ;;		line 247 in file "main.c"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;  oper_1          1    wreg     unsigned char 
  1533 ;;  oper_2          1    0[COMRAM] unsigned char 
  1534 ;; Auto vars:     Size  Location     Type
  1535 ;;  oper_1          1    1[COMRAM] unsigned char 
  1536 ;; Return value:  Size  Location     Type
  1537 ;;                  1    wreg      unsigned char 
  1538 ;; Registers used:
  1539 ;;		wreg, status,2, status,0
  1540 ;; Tracked objects:
  1541 ;;		On entry : 0/0
  1542 ;;		On exit  : 0/0
  1543 ;;		Unchanged: 0/0
  1544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1545 ;;      Params:         1       0       0       0       0       0       0
  1546 ;;      Locals:         1       0       0       0       0       0       0
  1547 ;;      Temps:          0       0       0       0       0       0       0
  1548 ;;      Totals:         2       0       0       0       0       0       0
  1549 ;;Total ram usage:        2 bytes
  1550 ;; Hardware stack levels used:    1
  1551 ;; This function calls:
  1552 ;;		Nothing
  1553 ;; This function is called by:
  1554 ;;		_operar
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           	psect	text8
  1559  003968                     __ptext8:
  1560                           	opt callstack 0
  1561  003968                     _resta:
  1562                           	opt callstack 0
  1563  003968  FFFF               	dw	65535	; assembler added errata NOP
  1564                           
  1565                           ;incstack = 0
  1566                           ;resta@oper_1 stored from wreg
  1567  00396A  6E56               	movwf	resta@oper_1,c
  1568                           
  1569                           ;main.c: 248: return oper_1 - oper_2;
  1570  00396C  5055               	movf	resta@oper_2,w,c
  1571  00396E  5C56               	subwf	resta@oper_1,w,c
  1572  003970  0012               	return		;funcret
  1573  003972  FFFF               	dw	65535	; errata NOP
  1574  003974                     __end_of_resta:
  1575                           	opt callstack 0
  1576                           
  1577 ;; *************** function _or *****************
  1578 ;; Defined at:
  1579 ;;		line 268 in file "main.c"
  1580 ;; Parameters:    Size  Location     Type
  1581 ;;  oper_1          1    wreg     unsigned char 
  1582 ;;  oper_2          1    0[COMRAM] unsigned char 
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;  oper_1          1    1[COMRAM] unsigned char 
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  1    wreg      unsigned char 
  1587 ;; Registers used:
  1588 ;;		wreg, status,2, status,0
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1594 ;;      Params:         1       0       0       0       0       0       0
  1595 ;;      Locals:         1       0       0       0       0       0       0
  1596 ;;      Temps:          0       0       0       0       0       0       0
  1597 ;;      Totals:         2       0       0       0       0       0       0
  1598 ;;Total ram usage:        2 bytes
  1599 ;; Hardware stack levels used:    1
  1600 ;; This function calls:
  1601 ;;		Nothing
  1602 ;; This function is called by:
  1603 ;;		_operar
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607                           	psect	text9
  1608  00395C                     __ptext9:
  1609                           	opt callstack 0
  1610  00395C                     _or:
  1611                           	opt callstack 0
  1612  00395C  FFFF               	dw	65535	; assembler added errata NOP
  1613                           
  1614                           ;incstack = 0
  1615                           ;or@oper_1 stored from wreg
  1616  00395E  6E56               	movwf	or@oper_1,c
  1617                           
  1618                           ;main.c: 269: return oper_1 | oper_2;
  1619  003960  5056               	movf	or@oper_1,w,c
  1620  003962  1055               	iorwf	or@oper_2,w,c
  1621  003964  0012               	return		;funcret
  1622  003966  FFFF               	dw	65535	; errata NOP
  1623  003968                     __end_of_or:
  1624                           	opt callstack 0
  1625                           
  1626 ;; *************** function _no_es_primo *****************
  1627 ;; Defined at:
  1628 ;;		line 280 in file "main.c"
  1629 ;; Parameters:    Size  Location     Type
  1630 ;;  num             1    wreg     unsigned char 
  1631 ;; Auto vars:     Size  Location     Type
  1632 ;;  num             1    6[COMRAM] unsigned char 
  1633 ;;  i               1    7[COMRAM] unsigned char 
  1634 ;; Return value:  Size  Location     Type
  1635 ;;                  1    wreg      unsigned char 
  1636 ;; Registers used:
  1637 ;;		wreg, status,2, status,0, cstack
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1643 ;;      Params:         0       0       0       0       0       0       0
  1644 ;;      Locals:         2       0       0       0       0       0       0
  1645 ;;      Temps:          0       0       0       0       0       0       0
  1646 ;;      Totals:         2       0       0       0       0       0       0
  1647 ;;Total ram usage:        2 bytes
  1648 ;; Hardware stack levels used:    1
  1649 ;; Hardware stack levels required when called:    2
  1650 ;; This function calls:
  1651 ;;		_module
  1652 ;; This function is called by:
  1653 ;;		_operar
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657                           	psect	text10
  1658  003A4C                     __ptext10:
  1659                           	opt callstack 0
  1660  003A4C                     _no_es_primo:
  1661                           	opt callstack 0
  1662  003A4C  FFFF               	dw	65535	; assembler added errata NOP
  1663                           
  1664                           ;incstack = 0
  1665                           ;no_es_primo@num stored from wreg
  1666  003A4E  6E5B               	movwf	no_es_primo@num,c
  1667                           
  1668                           ;main.c: 281: for (char i = 2; i < num; i++) {
  1669  003A50  0E02               	movlw	2
  1670  003A52  6E5C               	movwf	no_es_primo@i,c
  1671  003A54  D00D               	goto	l1400
  1672  003A56                     l1392:
  1673  003A56  FFFF               	dw	65535	; assembler added errata NOP
  1674                           
  1675                           ;main.c: 282: if (!module(num, i)) {
  1676  003A58  C05C  F059         	movff	no_es_primo@i,module@oper_2
  1677  003A5C  505B               	movf	no_es_primo@num,w,c
  1678  003A5E  ECCD  F01C         	call	_module
  1679  003A62  0900               	iorlw	0
  1680  003A64  A4D8               	btfss	status,2,c
  1681  003A66  D002               	goto	l1398
  1682                           
  1683                           ;main.c: 283: return 1;
  1684  003A68  0E01               	movlw	1
  1685  003A6A  D008               	goto	l189
  1686  003A6C                     l1398:
  1687  003A6C  FFFF               	dw	65535	; assembler added errata NOP
  1688  003A6E  2A5C               	incf	no_es_primo@i,f,c
  1689  003A70                     l1400:
  1690  003A70  FFFF               	dw	65535	; assembler added errata NOP
  1691  003A72  505B               	movf	no_es_primo@num,w,c
  1692  003A74  5C5C               	subwf	no_es_primo@i,w,c
  1693  003A76  A0D8               	btfss	status,0,c
  1694  003A78  D7EE               	goto	l1392
  1695                           
  1696                           ;main.c: 284: };main.c: 285: };main.c: 286: return 0;
  1697  003A7A  0E00               	movlw	0
  1698  003A7C                     l189:
  1699  003A7C  FFFF               	dw	65535	; assembler added errata NOP
  1700  003A7E  0012               	return		;funcret
  1701  003A80  FFFF               	dw	65535	; errata NOP
  1702  003A82                     __end_of_no_es_primo:
  1703                           	opt callstack 0
  1704                           
  1705 ;; *************** function _module *****************
  1706 ;; Defined at:
  1707 ;;		line 260 in file "main.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;  oper_1          1    wreg     unsigned char 
  1710 ;;  oper_2          1    4[COMRAM] unsigned char 
  1711 ;; Auto vars:     Size  Location     Type
  1712 ;;  oper_1          1    5[COMRAM] unsigned char 
  1713 ;; Return value:  Size  Location     Type
  1714 ;;                  1    wreg      unsigned char 
  1715 ;; Registers used:
  1716 ;;		wreg, status,2, status,0, cstack
  1717 ;; Tracked objects:
  1718 ;;		On entry : 0/0
  1719 ;;		On exit  : 0/0
  1720 ;;		Unchanged: 0/0
  1721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1722 ;;      Params:         1       0       0       0       0       0       0
  1723 ;;      Locals:         1       0       0       0       0       0       0
  1724 ;;      Temps:          0       0       0       0       0       0       0
  1725 ;;      Totals:         2       0       0       0       0       0       0
  1726 ;;Total ram usage:        2 bytes
  1727 ;; Hardware stack levels used:    1
  1728 ;; Hardware stack levels required when called:    1
  1729 ;; This function calls:
  1730 ;;		___lbmod
  1731 ;; This function is called by:
  1732 ;;		_operar
  1733 ;;		_no_es_primo
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737                           	psect	text11
  1738  00399A                     __ptext11:
  1739                           	opt callstack 0
  1740  00399A                     _module:
  1741                           	opt callstack 0
  1742  00399A  FFFF               	dw	65535	; assembler added errata NOP
  1743                           
  1744                           ;incstack = 0
  1745                           ;module@oper_1 stored from wreg
  1746  00399C  6E5A               	movwf	module@oper_1,c
  1747                           
  1748                           ;main.c: 261: return oper_1 % oper_2;
  1749  00399E  C059  F055         	movff	module@oper_2,___lbmod@divisor
  1750  0039A2  505A               	movf	module@oper_1,w,c
  1751  0039A4  EC0D  F01D         	call	___lbmod
  1752  0039A8  0012               	return		;funcret
  1753  0039AA  FFFF               	dw	65535	; errata NOP
  1754  0039AC                     __end_of_module:
  1755                           	opt callstack 0
  1756                           
  1757 ;; *************** function ___lbmod *****************
  1758 ;; Defined at:
  1759 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lbmod.c"
  1760 ;; Parameters:    Size  Location     Type
  1761 ;;  dividend        1    wreg     unsigned char 
  1762 ;;  divisor         1    0[COMRAM] unsigned char 
  1763 ;; Auto vars:     Size  Location     Type
  1764 ;;  dividend        1    1[COMRAM] unsigned char 
  1765 ;;  rem             1    3[COMRAM] unsigned char 
  1766 ;;  counter         1    2[COMRAM] unsigned char 
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  1    wreg      unsigned char 
  1769 ;; Registers used:
  1770 ;;		wreg, status,2, status,0
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1776 ;;      Params:         1       0       0       0       0       0       0
  1777 ;;      Locals:         3       0       0       0       0       0       0
  1778 ;;      Temps:          0       0       0       0       0       0       0
  1779 ;;      Totals:         4       0       0       0       0       0       0
  1780 ;;Total ram usage:        4 bytes
  1781 ;; Hardware stack levels used:    1
  1782 ;; This function calls:
  1783 ;;		Nothing
  1784 ;; This function is called by:
  1785 ;;		_module
  1786 ;; This function uses a non-reentrant model
  1787 ;;
  1788                           
  1789                           	psect	text12
  1790  003A1A                     __ptext12:
  1791                           	opt callstack 0
  1792  003A1A                     ___lbmod:
  1793                           	opt callstack 0
  1794  003A1A  FFFF               	dw	65535	; assembler added errata NOP
  1795                           
  1796                           ;incstack = 0
  1797                           ;___lbmod@dividend stored from wreg
  1798  003A1C  6E56               	movwf	___lbmod@dividend,c
  1799  003A1E  0E08               	movlw	8
  1800  003A20  6E57               	movwf	___lbmod@counter,c
  1801  003A22  0E00               	movlw	0
  1802  003A24  6E58               	movwf	___lbmod@rem,c
  1803  003A26                     l1272:
  1804  003A26  FFFF               	dw	65535	; assembler added errata NOP
  1805  003A28  90D8               	bcf	status,0,c
  1806  003A2A  3456               	rlcf	___lbmod@dividend,w,c
  1807  003A2C  3458               	rlcf	___lbmod@rem,w,c
  1808  003A2E  6E58               	movwf	___lbmod@rem,c
  1809  003A30  90D8               	bcf	status,0,c
  1810  003A32  3656               	rlcf	___lbmod@dividend,f,c
  1811  003A34  5055               	movf	___lbmod@divisor,w,c
  1812  003A36  5C58               	subwf	___lbmod@rem,w,c
  1813  003A38  A0D8               	btfss	status,0,c
  1814  003A3A  D002               	goto	l1280
  1815  003A3C  5055               	movf	___lbmod@divisor,w,c
  1816  003A3E  5E58               	subwf	___lbmod@rem,f,c
  1817  003A40                     l1280:
  1818  003A40  FFFF               	dw	65535	; assembler added errata NOP
  1819  003A42  2E57               	decfsz	___lbmod@counter,f,c
  1820  003A44  D7F0               	goto	l1272
  1821  003A46  5058               	movf	___lbmod@rem,w,c
  1822  003A48  0012               	return		;funcret
  1823  003A4A  FFFF               	dw	65535	; errata NOP
  1824  003A4C                     __end_of___lbmod:
  1825                           	opt callstack 0
  1826                           
  1827 ;; *************** function _nand *****************
  1828 ;; Defined at:
  1829 ;;		line 272 in file "main.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;  oper_1          1    wreg     unsigned char 
  1832 ;;  oper_2          1    2[COMRAM] unsigned char 
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;  oper_1          1    3[COMRAM] unsigned char 
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  1    wreg      unsigned char 
  1837 ;; Registers used:
  1838 ;;		wreg, status,2, status,0, cstack
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1844 ;;      Params:         1       0       0       0       0       0       0
  1845 ;;      Locals:         1       0       0       0       0       0       0
  1846 ;;      Temps:          0       0       0       0       0       0       0
  1847 ;;      Totals:         2       0       0       0       0       0       0
  1848 ;;Total ram usage:        2 bytes
  1849 ;; Hardware stack levels used:    1
  1850 ;; Hardware stack levels required when called:    1
  1851 ;; This function calls:
  1852 ;;		_and
  1853 ;; This function is called by:
  1854 ;;		_operar
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           	psect	text13
  1859  0039AC                     __ptext13:
  1860                           	opt callstack 0
  1861  0039AC                     _nand:
  1862                           	opt callstack 0
  1863  0039AC  FFFF               	dw	65535	; assembler added errata NOP
  1864                           
  1865                           ;incstack = 0
  1866                           ;nand@oper_1 stored from wreg
  1867  0039AE  6E58               	movwf	nand@oper_1,c
  1868                           
  1869                           ;main.c: 273: return ~(and(oper_1, oper_2));
  1870  0039B0  C057  F055         	movff	nand@oper_2,and@oper_2
  1871  0039B4  5058               	movf	nand@oper_1,w,c
  1872  0039B6  ECA8  F01C         	call	_and
  1873  0039BA  0AFF               	xorlw	255
  1874  0039BC  0012               	return		;funcret
  1875  0039BE  FFFF               	dw	65535	; errata NOP
  1876  0039C0                     __end_of_nand:
  1877                           	opt callstack 0
  1878                           
  1879 ;; *************** function _and *****************
  1880 ;; Defined at:
  1881 ;;		line 264 in file "main.c"
  1882 ;; Parameters:    Size  Location     Type
  1883 ;;  oper_1          1    wreg     unsigned char 
  1884 ;;  oper_2          1    0[COMRAM] unsigned char 
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;  oper_1          1    1[COMRAM] unsigned char 
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  1    wreg      unsigned char 
  1889 ;; Registers used:
  1890 ;;		wreg, status,2, status,0
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1896 ;;      Params:         1       0       0       0       0       0       0
  1897 ;;      Locals:         1       0       0       0       0       0       0
  1898 ;;      Temps:          0       0       0       0       0       0       0
  1899 ;;      Totals:         2       0       0       0       0       0       0
  1900 ;;Total ram usage:        2 bytes
  1901 ;; Hardware stack levels used:    1
  1902 ;; This function calls:
  1903 ;;		Nothing
  1904 ;; This function is called by:
  1905 ;;		_operar
  1906 ;;		_nand
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           	psect	text14
  1911  003950                     __ptext14:
  1912                           	opt callstack 0
  1913  003950                     _and:
  1914                           	opt callstack 0
  1915  003950  FFFF               	dw	65535	; assembler added errata NOP
  1916                           
  1917                           ;incstack = 0
  1918                           ;and@oper_1 stored from wreg
  1919  003952  6E56               	movwf	and@oper_1,c
  1920                           
  1921                           ;main.c: 265: return oper_1 & oper_2;
  1922  003954  5056               	movf	and@oper_1,w,c
  1923  003956  1455               	andwf	and@oper_2,w,c
  1924  003958  0012               	return		;funcret
  1925  00395A  FFFF               	dw	65535	; errata NOP
  1926  00395C                     __end_of_and:
  1927                           	opt callstack 0
  1928                           
  1929 ;; *************** function _multi *****************
  1930 ;; Defined at:
  1931 ;;		line 251 in file "main.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;  oper_1          1    wreg     unsigned char 
  1934 ;;  oper_2          1    0[COMRAM] unsigned char 
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;  oper_1          1    1[COMRAM] unsigned char 
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  1    wreg      unsigned char 
  1939 ;; Registers used:
  1940 ;;		wreg, status,2, status,0, prodl, prodh
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1946 ;;      Params:         1       0       0       0       0       0       0
  1947 ;;      Locals:         1       0       0       0       0       0       0
  1948 ;;      Temps:          0       0       0       0       0       0       0
  1949 ;;      Totals:         2       0       0       0       0       0       0
  1950 ;;Total ram usage:        2 bytes
  1951 ;; Hardware stack levels used:    1
  1952 ;; This function calls:
  1953 ;;		Nothing
  1954 ;; This function is called by:
  1955 ;;		_operar
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959                           	psect	text15
  1960  00398C                     __ptext15:
  1961                           	opt callstack 0
  1962  00398C                     _multi:
  1963                           	opt callstack 0
  1964  00398C  FFFF               	dw	65535	; assembler added errata NOP
  1965                           
  1966                           ;incstack = 0
  1967                           ;multi@oper_1 stored from wreg
  1968  00398E  6E56               	movwf	multi@oper_1,c
  1969                           
  1970                           ;main.c: 252: return oper_1 * oper_2;
  1971  003990  5056               	movf	multi@oper_1,w,c
  1972  003992  0255               	mulwf	multi@oper_2,c
  1973  003994  50F3               	movf	prodl,w,c
  1974  003996  0012               	return		;funcret
  1975  003998  FFFF               	dw	65535	; errata NOP
  1976  00399A                     __end_of_multi:
  1977                           	opt callstack 0
  1978                           
  1979 ;; *************** function _division *****************
  1980 ;; Defined at:
  1981 ;;		line 255 in file "main.c"
  1982 ;; Parameters:    Size  Location     Type
  1983 ;;  oper_1          1    wreg     unsigned char 
  1984 ;;  oper_2          1    4[COMRAM] unsigned char 
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;  oper_1          1    5[COMRAM] unsigned char 
  1987 ;;  result          1    6[COMRAM] unsigned char 
  1988 ;; Return value:  Size  Location     Type
  1989 ;;                  1    wreg      unsigned char 
  1990 ;; Registers used:
  1991 ;;		wreg, status,2, status,0, cstack
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1997 ;;      Params:         1       0       0       0       0       0       0
  1998 ;;      Locals:         2       0       0       0       0       0       0
  1999 ;;      Temps:          0       0       0       0       0       0       0
  2000 ;;      Totals:         3       0       0       0       0       0       0
  2001 ;;Total ram usage:        3 bytes
  2002 ;; Hardware stack levels used:    1
  2003 ;; Hardware stack levels required when called:    1
  2004 ;; This function calls:
  2005 ;;		___lbdiv
  2006 ;; This function is called by:
  2007 ;;		_operar
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011                           	psect	text16
  2012  0039C0                     __ptext16:
  2013                           	opt callstack 0
  2014  0039C0                     _division:
  2015                           	opt callstack 0
  2016  0039C0  FFFF               	dw	65535	; assembler added errata NOP
  2017                           
  2018                           ;incstack = 0
  2019                           ;division@oper_1 stored from wreg
  2020  0039C2  6E5A               	movwf	division@oper_1,c
  2021                           
  2022                           ;main.c: 256: char result = oper_1 / oper_2;
  2023  0039C4  C059  F055         	movff	division@oper_2,___lbdiv@divisor
  2024  0039C8  505A               	movf	division@oper_1,w,c
  2025  0039CA  EC62  F01D         	call	___lbdiv
  2026  0039CE  6E5B               	movwf	division@result,c
  2027                           
  2028                           ;main.c: 257: return result;
  2029  0039D0  505B               	movf	division@result,w,c
  2030  0039D2  0012               	return		;funcret
  2031  0039D4  FFFF               	dw	65535	; errata NOP
  2032  0039D6                     __end_of_division:
  2033                           	opt callstack 0
  2034                           
  2035 ;; *************** function ___lbdiv *****************
  2036 ;; Defined at:
  2037 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lbdiv.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;  dividend        1    wreg     unsigned char 
  2040 ;;  divisor         1    0[COMRAM] unsigned char 
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;  dividend        1    1[COMRAM] unsigned char 
  2043 ;;  quotient        1    3[COMRAM] unsigned char 
  2044 ;;  counter         1    2[COMRAM] unsigned char 
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  1    wreg      unsigned char 
  2047 ;; Registers used:
  2048 ;;		wreg, status,2, status,0
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2054 ;;      Params:         1       0       0       0       0       0       0
  2055 ;;      Locals:         3       0       0       0       0       0       0
  2056 ;;      Temps:          0       0       0       0       0       0       0
  2057 ;;      Totals:         4       0       0       0       0       0       0
  2058 ;;Total ram usage:        4 bytes
  2059 ;; Hardware stack levels used:    1
  2060 ;; This function calls:
  2061 ;;		Nothing
  2062 ;; This function is called by:
  2063 ;;		_division
  2064 ;; This function uses a non-reentrant model
  2065 ;;
  2066                           
  2067                           	psect	text17
  2068  003AC4                     __ptext17:
  2069                           	opt callstack 0
  2070  003AC4                     ___lbdiv:
  2071                           	opt callstack 0
  2072  003AC4  FFFF               	dw	65535	; assembler added errata NOP
  2073                           
  2074                           ;incstack = 0
  2075                           ;___lbdiv@dividend stored from wreg
  2076  003AC6  6E56               	movwf	___lbdiv@dividend,c
  2077  003AC8  0E00               	movlw	0
  2078  003ACA  6E58               	movwf	___lbdiv@quotient,c
  2079  003ACC  5055               	movf	___lbdiv@divisor,w,c
  2080  003ACE  B4D8               	btfsc	status,2,c
  2081  003AD0  D019               	goto	l1326
  2082  003AD2  0E01               	movlw	1
  2083  003AD4  6E57               	movwf	___lbdiv@counter,c
  2084  003AD6  D004               	goto	l1314
  2085  003AD8                     l1310:
  2086  003AD8  FFFF               	dw	65535	; assembler added errata NOP
  2087  003ADA  90D8               	bcf	status,0,c
  2088  003ADC  3655               	rlcf	___lbdiv@divisor,f,c
  2089  003ADE  2A57               	incf	___lbdiv@counter,f,c
  2090  003AE0                     l1314:
  2091  003AE0  FFFF               	dw	65535	; assembler added errata NOP
  2092  003AE2  AE55               	btfss	___lbdiv@divisor,7,c
  2093  003AE4  D7F9               	goto	l1310
  2094  003AE6                     u270:
  2095  003AE6  FFFF               	dw	65535	; assembler added errata NOP
  2096  003AE8  90D8               	bcf	status,0,c
  2097  003AEA  3658               	rlcf	___lbdiv@quotient,f,c
  2098  003AEC  5055               	movf	___lbdiv@divisor,w,c
  2099  003AEE  5C56               	subwf	___lbdiv@dividend,w,c
  2100  003AF0  A0D8               	btfss	status,0,c
  2101  003AF2  D003               	goto	l1322
  2102  003AF4  5055               	movf	___lbdiv@divisor,w,c
  2103  003AF6  5E56               	subwf	___lbdiv@dividend,f,c
  2104  003AF8  8058               	bsf	___lbdiv@quotient,0,c
  2105  003AFA                     l1322:
  2106  003AFA  FFFF               	dw	65535	; assembler added errata NOP
  2107  003AFC  90D8               	bcf	status,0,c
  2108  003AFE  3255               	rrcf	___lbdiv@divisor,f,c
  2109  003B00  2E57               	decfsz	___lbdiv@counter,f,c
  2110  003B02  D7F1               	goto	u270
  2111  003B04                     l1326:
  2112  003B04  FFFF               	dw	65535	; assembler added errata NOP
  2113  003B06  5058               	movf	___lbdiv@quotient,w,c
  2114  003B08  0012               	return		;funcret
  2115  003B0A  FFFF               	dw	65535	; errata NOP
  2116  003B0C                     __end_of___lbdiv:
  2117                           	opt callstack 0
  2118                           
  2119 ;; *************** function _init_config *****************
  2120 ;; Defined at:
  2121 ;;		line 128 in file "main.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;		None
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;		None
  2126 ;; Return value:  Size  Location     Type
  2127 ;;                  1    wreg      void 
  2128 ;; Registers used:
  2129 ;;		wreg, status,2
  2130 ;; Tracked objects:
  2131 ;;		On entry : 0/0
  2132 ;;		On exit  : 0/0
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2135 ;;      Params:         0       0       0       0       0       0       0
  2136 ;;      Locals:         0       0       0       0       0       0       0
  2137 ;;      Temps:          0       0       0       0       0       0       0
  2138 ;;      Totals:         0       0       0       0       0       0       0
  2139 ;;Total ram usage:        0 bytes
  2140 ;; Hardware stack levels used:    1
  2141 ;; This function calls:
  2142 ;;		Nothing
  2143 ;; This function is called by:
  2144 ;;		_main
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147                           
  2148                           	psect	text18
  2149  003A82                     __ptext18:
  2150                           	opt callstack 0
  2151  003A82                     _init_config:
  2152                           	opt callstack 0
  2153  003A82  FFFF               	dw	65535	; assembler added errata NOP
  2154                           
  2155                           ;main.c: 130: ADCON1 = 0X06;
  2156                           
  2157                           ;incstack = 0
  2158  003A84  0E06               	movlw	6
  2159  003A86  6EC1               	movwf	4033,c	;volatile
  2160                           
  2161                           ;main.c: 133: TRISA = 0B00000000;
  2162  003A88  0E00               	movlw	0
  2163  003A8A  6E92               	movwf	3986,c	;volatile
  2164                           
  2165                           ;main.c: 134: LATA = 0;
  2166  003A8C  0E00               	movlw	0
  2167  003A8E  6E89               	movwf	3977,c	;volatile
  2168                           
  2169                           ;main.c: 135: PORTA = 0;
  2170  003A90  0E00               	movlw	0
  2171  003A92  6E80               	movwf	3968,c	;volatile
  2172                           
  2173                           ;main.c: 138: TRISB = 0B11111111;
  2174  003A94  6893               	setf	3987,c	;volatile
  2175                           
  2176                           ;main.c: 139: LATB = 0;
  2177  003A96  0E00               	movlw	0
  2178  003A98  6E8A               	movwf	3978,c	;volatile
  2179                           
  2180                           ;main.c: 140: PORTB = 0B11111111;
  2181  003A9A  6881               	setf	3969,c	;volatile
  2182                           
  2183                           ;main.c: 143: TRISC = 0B11111111;
  2184  003A9C  6894               	setf	3988,c	;volatile
  2185                           
  2186                           ;main.c: 144: LATC = 0;
  2187  003A9E  0E00               	movlw	0
  2188  003AA0  6E8B               	movwf	3979,c	;volatile
  2189                           
  2190                           ;main.c: 145: PORTC = 0;
  2191  003AA2  0E00               	movlw	0
  2192  003AA4  6E82               	movwf	3970,c	;volatile
  2193                           
  2194                           ;main.c: 148: TRISD = 0B00000000;
  2195  003AA6  0E00               	movlw	0
  2196  003AA8  6E95               	movwf	3989,c	;volatile
  2197                           
  2198                           ;main.c: 149: LATD = 0;
  2199  003AAA  0E00               	movlw	0
  2200  003AAC  6E8C               	movwf	3980,c	;volatile
  2201                           
  2202                           ;main.c: 150: PORTD = 0;
  2203  003AAE  0E00               	movlw	0
  2204  003AB0  6E83               	movwf	3971,c	;volatile
  2205                           
  2206                           ;main.c: 153: TRISE = 0B00000000;
  2207  003AB2  0E00               	movlw	0
  2208  003AB4  6E96               	movwf	3990,c	;volatile
  2209                           
  2210                           ;main.c: 154: LATE = 0;
  2211  003AB6  0E00               	movlw	0
  2212  003AB8  6E8D               	movwf	3981,c	;volatile
  2213                           
  2214                           ;main.c: 155: PORTE = 0;
  2215  003ABA  0E00               	movlw	0
  2216  003ABC  6E84               	movwf	3972,c	;volatile
  2217  003ABE  0012               	return		;funcret
  2218  003AC0  FFFF               	dw	65535	; errata NOP
  2219  003AC2                     __end_of_init_config:
  2220                           	opt callstack 0
  2221  003AC2  FFFF               	dw	65535	; assembler added errata NOP
  2222                           
  2223                           	psect	rparam
  2224  0000                     tosu	equ	0xFFF
  2225                           tosh	equ	0xFFE
  2226                           tosl	equ	0xFFD
  2227                           stkptr	equ	0xFFC
  2228                           pclatu	equ	0xFFB
  2229                           pclath	equ	0xFFA
  2230                           pcl	equ	0xFF9
  2231                           tblptru	equ	0xFF8
  2232                           tblptrh	equ	0xFF7
  2233                           tblptrl	equ	0xFF6
  2234                           tablat	equ	0xFF5
  2235                           prodh	equ	0xFF4
  2236                           prodl	equ	0xFF3
  2237                           indf0	equ	0xFEF
  2238                           postinc0	equ	0xFEE
  2239                           postdec0	equ	0xFED
  2240                           preinc0	equ	0xFEC
  2241                           plusw0	equ	0xFEB
  2242                           fsr0h	equ	0xFEA
  2243                           fsr0l	equ	0xFE9
  2244                           wreg	equ	0xFE8
  2245                           indf1	equ	0xFE7
  2246                           postinc1	equ	0xFE6
  2247                           postdec1	equ	0xFE5
  2248                           preinc1	equ	0xFE4
  2249                           plusw1	equ	0xFE3
  2250                           fsr1h	equ	0xFE2
  2251                           fsr1l	equ	0xFE1
  2252                           bsr	equ	0xFE0
  2253                           indf2	equ	0xFDF
  2254                           postinc2	equ	0xFDE
  2255                           postdec2	equ	0xFDD
  2256                           preinc2	equ	0xFDC
  2257                           plusw2	equ	0xFDB
  2258                           fsr2h	equ	0xFDA
  2259                           fsr2l	equ	0xFD9
  2260                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        84
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     32     116
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_see_full_operation
    _show_error_message->_visualizar
    _see_full_operation->_visualizar
    _visualizar->_tolower
    _operar->_no_es_primo
    _no_es_primo->_module
    _module->___lbmod
    _nand->_and
    _division->___lbdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0   18012
                                             16 COMRAM    16    16      0
                        _init_config
                             _operar
                 _see_full_operation
                 _show_error_message
                         _visualizar
 ---------------------------------------------------------------------------------
 (1) _show_error_message                                   1     1      0    4233
                                             12 COMRAM     1     1      0
                         _visualizar
 ---------------------------------------------------------------------------------
 (1) _see_full_operation                                   4     2      2    4451
                                             12 COMRAM     4     2      2
                         _visualizar
 ---------------------------------------------------------------------------------
 (1) _visualizar                                          11     8      3    4233
                                              1 COMRAM    11     8      3
                            _tolower
 ---------------------------------------------------------------------------------
 (2) _tolower                                              1     1      0      67
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _operar                                               3     1      2    3993
                                              8 COMRAM     3     1      2
                                _and
                           _division
                             _module
                              _multi
                               _nand
                        _no_es_primo
                                 _or
                              _resta
                               _suma
                                _xor
 ---------------------------------------------------------------------------------
 (2) _xor                                                  2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _suma                                                 2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _resta                                                2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _or                                                   2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _no_es_primo                                          2     2      0     597
                                              6 COMRAM     2     2      0
                             _module
 ---------------------------------------------------------------------------------
 (3) _module                                               2     1      1     507
                                              4 COMRAM     2     1      1
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1     235
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _nand                                                 2     1      1     316
                                              2 COMRAM     2     1      1
                                _and
 ---------------------------------------------------------------------------------
 (3) _and                                                  2     1      1     196
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _multi                                                2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _division                                             3     2      1     381
                                              4 COMRAM     3     2      1
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1     238
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_config
   _operar
     _and
     _division
       ___lbdiv
     _module
       ___lbmod
     _multi
     _nand
       _and
     _no_es_primo
       _module
         ___lbmod
     _or
     _resta
     _suma
     _xor
   _see_full_operation
     _visualizar
       _tolower
   _show_error_message
     _visualizar
       _tolower
   _visualizar
     _tolower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     20      74       1       91.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      74      15        0.0%
DATA                 0      0      74       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Apr 03 19:12:45 2020

                                                               _or 395C  
                                                      __CFG_OSC$XT 000000  
                                                              l100 3ED2  
                                                              l126 3CCA  
                                                              l143 3DC6  
                                                              l127 3C54  
                                                              ?_or 0055  
                                                              l189 3A7C  
                                                              _LA3 007C4B  
                                                              _LA5 007C4D  
                                                              u320 3CC8  
                                                              u270 3AE6  
                                                              u457 3BB0  
                                                              u467 3C10  
                                                              u477 3CB6  
                                                     __CFG_BOR$OFF 000000  
                                                              _and 3950  
                                                              _xor 3980  
                                                              wreg 000FE8  
                                                             ??_or 0056  
                                                     __CFG_LVP$OFF 000000  
                                                     __CFG_WDT$OFF 000000  
                                                             l1310 3AD8  
                                                             l1400 3A70  
                                                             l1322 3AFA  
                                                             l1314 3AE0  
                                                             l1420 3CD4  
                                                             l1340 3C46  
                                                             ?_and 0055  
                                                             l1326 3B04  
                                                             l1280 3A40  
                                                             l1272 3A26  
                                                             l1432 3CF0  
                                                             l1344 3C5A  
                                                             l1336 3C26  
                                                             l1504 3DD2  
                                                             l1450 3D1A  
                                                             l1426 3CE2  
                                                             l1444 3D0C  
                                                             l1292 39E8  
                                                             l1348 3C74  
                                                             l1532 3E2E  
                                                             l1516 3DEA  
                                                             l1462 3D36  
                                                             l1438 3CFE  
                                                             l1550 3E9E  
                                                             l1392 3A56  
                                                             l1480 3D5C  
                                                             l1456 3D28  
                                                             l1536 3E48  
                                                             l1528 3E08  
                                                             l1474 3D52  
                                                             l1570 3F26  
                                                             l1554 3EAC  
                                                             l1468 3D44  
                                                             l1580 3F64  
                                                             l1564 3F06  
                                                             l1548 3E88  
                                                             l1398 3A6C  
                                                             l1574 3F40  
                                                             l1488 3D7A  
                                                             l1496 3D80  
                                                             l1592 3FAC  
                                                             l1586 3F6A  
                                                             l1594 3FF4  
                                                             ?_xor 0055  
                                                             _LATA 000F89  
                                                             _LATB 000F8A  
                                                             _LATC 000F8B  
                                                             _LATD 000F8C  
                                                             _LATE 000F8D  
                                      __size_of_see_full_operation 0060  
                                                     __CFG_PWRT$ON 000000  
                                                             _main 3DCC  
                                                             _nand 39AC  
                                                             indf2 000FDF  
                                                             fsr1l 000FE1  
                                                             fsr2l 000FD9  
                                                             _suma 3974  
                                                             prodh 000FF4  
                                                             prodl 000FF3  
                                                             start 0002  
                                                     ___param_bank 000000  
                                                            ??_and 0056  
                                                            ??_xor 0056  
                                                            ?_main 0055  
                                                            ?_nand 0057  
                                                  __end_of___lbdiv 3B0C  
                                                  __end_of___lbmod 3A4C  
                                                            ?_suma 0055  
                                                     ?_init_config 0055  
                                                            _PORTA 000F80  
                                                            _PORTB 000F81  
                                                            _PORTC 000F82  
                                                            _PORTD 000F83  
                                                            _PORTE 000F84  
                                                            _TRISA 000F92  
                                                            _TRISB 000F93  
                                                            _TRISC 000F94  
                                                            _TRISD 000F95  
                                                            _TRISE 000F96  
                                                            _resta 3968  
                                                            _multi 398C  
                                                            main@i 006D  
                                                            main@x 006F  
                                                            tablat 000FF5  
                                                            status 000FD8  
                                                  __end_of_tolower 39F0  
                                                  ___lbdiv@divisor 0055  
                                                  ___lbdiv@counter 0057  
                                                     ?_no_es_primo 0055  
                                                  __initialization 39F0  
                                                     __end_of_main 4000  
                                                     __end_of_nand 39C0  
                                                     __end_of_suma 3980  
                                                           ??_main 0065  
                                                           ??_nand 0058  
                                                           ??_suma 0056  
                                                    __activetblptr 000002  
                                                           _ADCON1 000FC1  
                                                           ?_resta 0055  
                                                           ?_multi 0055  
                                                           _NUMERO 0001  
                                                 __end_of_division 39D6  
                                                        ??___lbdiv 0056  
                                                        ??___lbmod 0056  
                                         see_full_operation@oper_1 0064  
                                         see_full_operation@oper_2 0061  
                                                           _module 399A  
                                                           _operar 3CCE  
                                               _show_error_message 3B60  
                                                    main@resultado 0071  
                                                     __pdataCOMRAM 0001  
                                                           tblptrh 000FF7  
                                                           tblptrl 000FF6  
                                                           tblptru 000FF8  
                                              ?_show_error_message 0055  
                                                        ??_tolower 0055  
                                                 ___lbdiv@dividend 0056  
                                                  ___lbmod@divisor 0055  
                                                       __accesstop 0080  
                                          __end_of__initialization 3A10  
                                                  ___lbmod@counter 0057  
                                                    ___rparam_used 000001  
                                                   __pcstackCOMRAM 0055  
                                             ??_show_error_message 0061  
                                                    __end_of_resta 3974  
                                                    __end_of_multi 399A  
                                                 ___lbdiv@quotient 0058  
                                                       __end_of_or 3968  
                                             __size_of_init_config 0040  
                                               visualizar@position 0056  
                                                          ??_resta 0056  
                                                          ??_multi 0056  
                                                   main@_resultado 006B  
                                             __size_of_no_es_primo 0036  
                                                          ?_module 0059  
                                                          ?_operar 005D  
                                                   no_es_primo@num 005B  
                                                          _SIMBOLO 0031  
                                       __end_of_see_full_operation 3C1E  
                                                        ?_division 0059  
                                                   visualizar@from 0057  
                                                          __Hparam 0000  
                                                          __Lparam 0000  
                                                          ___lbdiv 3AC4  
                                                          ___lbmod 3A1A  
                                                          __pcinit 39F0  
                                                   _visualizar$170 005E  
                                                          __ramtop 0600  
                                                  __size_of_module 0012  
                                                  __size_of_operar 00FE  
                                                          __ptext0 3DCC  
                                                          __ptext1 3B60  
                                                          __ptext2 3BBE  
                                                          __ptext3 3C1E  
                                                          __ptext4 39D6  
                                                          __ptext5 3CCE  
                                                          __ptext6 3980  
                                                          __ptext7 3974  
                                                          __ptext8 3968  
                                                          __ptext9 395C  
                                                      resta@oper_1 0056  
                                                      resta@oper_2 0055  
                                                     __size_of_and 000C  
                                                     __size_of_xor 000C  
                                                          _tolower 39D6  
                                             end_of_initialization 3A10  
                                                       ??_division 005A  
                                                    __Lmediumconst 0000  
                                                          postdec1 000FE5  
                                                          postinc0 000FEE  
                                                      multi@oper_1 0056  
                                                      multi@oper_2 0055  
                                                 ___lbmod@dividend 0056  
                                                      ___lbmod@rem 0058  
                                                       main@oper_1 0073  
                                                       main@oper_2 0074  
                                                       _visualizar 3C1E  
                                                       nand@oper_1 0058  
                                                       nand@oper_2 0057  
                                                    __pidataCOMRAM 3B0C  
                                           see_full_operation@oper 0062  
                                                   __end_of_module 39AC  
                                                   __end_of_operar 3DCC  
                                              start_initialization 39F0  
                                                 visualizar@enable 0058  
                                                   division@oper_1 005A  
                                                   division@oper_2 0059  
                                                      __end_of_and 395C  
                                                      __end_of_xor 398C  
                                                   division@result 005B  
                                                     no_es_primo@i 005C  
                                      __size_of_show_error_message 005E  
                                                         ??_module 005A  
                                                         ??_operar 005F  
                                                    ??_init_config 0055  
                                                __size_of_division 0016  
                                                      ?_visualizar 0056  
                                                    ??_no_es_primo 005B  
                                               _see_full_operation 3BBE  
                                                         ?___lbdiv 0055  
                                                         ?___lbmod 0055  
                                                      visualizar@x 0060  
                                                     module@oper_1 005A  
                                                     module@oper_2 0059  
                                                        and@oper_1 0056  
                                                        and@oper_2 0055  
                                              ?_see_full_operation 0061  
                                                    visualizar@SoN 005D  
                                                       operar@oper 005F  
                                                         ?_tolower 0055  
                                              __end_of_init_config 3AC2  
                                                   __size_of_resta 000C  
                                                   __size_of_multi 000E  
                                             ??_see_full_operation 0063  
                                                      __size_of_or 000C  
                                              __end_of_no_es_primo 3A82  
                                                        main@i_162 0070  
                                                        main@i_156 006E  
                                              __size_of_visualizar 00B0  
                                                        copy_data0 3A04  
                                                       suma@oper_1 0056  
                                                       suma@oper_2 0055  
                                                         __Hrparam 0000  
                                                         __Lrparam 0000  
                                                 __size_of___lbdiv 0048  
                                                 __size_of___lbmod 0032  
                                                     operar@oper_1 005D  
                                                     operar@oper_2 005E  
                                                      _init_config 3A82  
                                                         _main$161 0068  
                                                         _main$157 0066  
                                                         __ptext10 3A4C  
                                                         __ptext11 399A  
                                                         __ptext12 3A1A  
                                                         __ptext13 39AC  
                                                         __ptext14 3950  
                                                         __ptext15 398C  
                                                         __ptext16 39C0  
                                                         __ptext17 3AC4  
                                                         __ptext18 3A82  
                                                         _division 39C0  
                                                 __size_of_tolower 001A  
                                                    __size_of_main 0234  
                                                    __size_of_nand 0014  
                                                    __size_of_suma 000C  
                                                      _no_es_primo 3A4C  
                                                         main@_SoN 006A  
                                                         main@oper 0072  
                                                         or@oper_1 0056  
                                                         or@oper_2 0055  
                                                        xor@oper_1 0056  
                                                        xor@oper_2 0055  
                                                     ??_visualizar 0059  
                                       __end_of_show_error_message 3BBE  
                                                         tolower@c 0055  
                                               __end_of_visualizar 3CCE  
