

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Apr 06 23:34:00 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47  0000                     
    48                           ; Version 2.05
    49                           ; Generated 20/12/2018 GMT
    50                           ; 
    51                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F452 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     
    83                           	psect	mediumconst
    84  007EC8                     __pmediumconst:
    85                           	opt callstack 0
    86  007EC8  00                 	db	0
    87  007EC9                     __powers_:
    88                           	opt callstack 0
    89  007EC9  0000               	dw	0
    90  007ECB  3F80               	dw	16256
    91  007ECD  0000               	dw	0
    92  007ECF  4120               	dw	16672
    93  007ED1  0000               	dw	0
    94  007ED3  42C8               	dw	17096
    95  007ED5  0000               	dw	0
    96  007ED7  447A               	dw	17530
    97  007ED9  4000               	dw	16384
    98  007EDB  461C               	dw	17948
    99  007EDD  5000               	dw	20480
   100  007EDF  47C3               	dw	18371
   101  007EE1  2400               	dw	9216
   102  007EE3  4974               	dw	18804
   103  007EE5  9680               	dw	38528
   104  007EE7  4B18               	dw	19224
   105  007EE9  BC20               	dw	48160
   106  007EEB  4CBE               	dw	19646
   107  007EED  6B28               	dw	27432
   108  007EEF  4E6E               	dw	20078
   109  007EF1  02F9               	dw	761
   110  007EF3  5015               	dw	20501
   111  007EF5  78EC               	dw	30956
   112  007EF7  60AD               	dw	24749
   113  007EF9  F2CA               	dw	62154
   114  007EFB  7149               	dw	29001
   115  007EFD                     __end_of__powers_:
   116                           	opt callstack 0
   117  007EFD                     __npowers_:
   118                           	opt callstack 0
   119  007EFD  0000               	dw	0
   120  007EFF  3F80               	dw	16256
   121  007F01  CCCD               	dw	52429
   122  007F03  3DCC               	dw	15820
   123  007F05  D70A               	dw	55050
   124  007F07  3C23               	dw	15395
   125  007F09  126F               	dw	4719
   126  007F0B  3A83               	dw	14979
   127  007F0D  B717               	dw	46871
   128  007F0F  38D1               	dw	14545
   129  007F11  C5AC               	dw	50604
   130  007F13  3727               	dw	14119
   131  007F15  37BD               	dw	14269
   132  007F17  3586               	dw	13702
   133  007F19  BF95               	dw	49045
   134  007F1B  33D6               	dw	13270
   135  007F1D  CC77               	dw	52343
   136  007F1F  322B               	dw	12843
   137  007F21  705F               	dw	28767
   138  007F23  3089               	dw	12425
   139  007F25  E6FF               	dw	59135
   140  007F27  2EDB               	dw	11995
   141  007F29  E508               	dw	58632
   142  007F2B  1E3C               	dw	7740
   143  007F2D  4260               	dw	16992
   144  007F2F  0DA2               	dw	3490
   145  007F31                     __end_of__npowers_:
   146                           	opt callstack 0
   147  007F31                     _dpowers:
   148                           	opt callstack 0
   149  007F31  0001               	dw	1
   150  007F33  0000               	dw	0
   151  007F35  000A               	dw	10
   152  007F37  0000               	dw	0
   153  007F39  0064               	dw	100
   154  007F3B  0000               	dw	0
   155  007F3D  03E8               	dw	1000
   156  007F3F  0000               	dw	0
   157  007F41  2710               	dw	10000
   158  007F43  0000               	dw	0
   159  007F45  86A0               	dw	34464
   160  007F47  0001               	dw	1
   161  007F49  4240               	dw	16960
   162  007F4B  000F               	dw	15
   163  007F4D  9680               	dw	38528
   164  007F4F  0098               	dw	152
   165  007F51  E100               	dw	57600
   166  007F53  05F5               	dw	1525
   167  007F55  CA00               	dw	51712
   168  007F57  3B9A               	dw	15258
   169  007F59                     __end_of_dpowers:
   170                           	opt callstack 0
   171  0000                     _PORTD	set	3971
   172  0000                     _PORTC	set	3970
   173  0000                     _PORTB	set	3969
   174  0000                     _PORTA	set	3968
   175  0000                     _LATD	set	3980
   176  0000                     _LATC	set	3979
   177  0000                     _LATB	set	3978
   178  0000                     _LATA	set	3977
   179  0000                     _ADCON1	set	4033
   180  0000                     _TRISD	set	3989
   181  0000                     _TRISC	set	3988
   182  0000                     _TRISB	set	3987
   183  0000                     _TRISA	set	3986
   184  0000                     _ADRESL	set	4035
   185  0000                     _ADRESH	set	4036
   186  0000                     _ADCON0	set	4034
   187  0000                     _LC4	set	31836
   188  0000                     _LC3	set	31835
   189  0000                     _GO_DONE	set	32274
   190  007F59                     STR_4:
   191  007F59  54                 	db	84	;'T'
   192  007F5A  65                 	db	101	;'e'
   193  007F5B  6D                 	db	109	;'m'
   194  007F5C  70                 	db	112	;'p'
   195  007F5D  3A                 	db	58	;':'
   196  007F5E  20                 	db	32
   197  007F5F  25                 	db	37
   198  007F60  2E                 	db	46
   199  007F61  30                 	db	48	;'0'
   200  007F62  66                 	db	102	;'f'
   201  007F63  43                 	db	67	;'C'
   202  007F64  20                 	db	32
   203  007F65  20                 	db	32
   204  007F66  20                 	db	32
   205  007F67  20                 	db	32
   206  007F68  20                 	db	32
   207  007F69  20                 	db	32
   208  007F6A  20                 	db	32
   209  007F6B  00                 	db	0
   210  007F6C                     STR_3:
   211  007F6C  56                 	db	86	;'V'
   212  007F6D  6F                 	db	111	;'o'
   213  007F6E  6C                 	db	108	;'l'
   214  007F6F  74                 	db	116	;'t'
   215  007F70  61                 	db	97	;'a'
   216  007F71  6A                 	db	106	;'j'
   217  007F72  65                 	db	101	;'e'
   218  007F73  3A                 	db	58	;':'
   219  007F74  20                 	db	32
   220  007F75  25                 	db	37
   221  007F76  30                 	db	48	;'0'
   222  007F77  2E                 	db	46
   223  007F78  32                 	db	50	;'2'
   224  007F79  66                 	db	102	;'f'
   225  007F7A  56                 	db	86	;'V'
   226  007F7B  20                 	db	32
   227  007F7C  20                 	db	32
   228  007F7D  20                 	db	32
   229  007F7E  00                 	db	0
   230  007F7F                     STR_10:
   231  007F7F  20                 	db	32
   232  007F80  20                 	db	32
   233  007F81  20                 	db	32
   234  007F82  20                 	db	32
   235  007F83  20                 	db	32
   236  007F84  45                 	db	69	;'E'
   237  007F85  4C                 	db	76	;'L'
   238  007F86  20                 	db	32
   239  007F87  46                 	db	70	;'F'
   240  007F88  49                 	db	73	;'I'
   241  007F89  4E                 	db	78	;'N'
   242  007F8A  20                 	db	32
   243  007F8B  20                 	db	32
   244  007F8C  20                 	db	32
   245  007F8D  20                 	db	32
   246  007F8E  20                 	db	32
   247  007F8F  00                 	db	0
   248  007F90                     STR_7:
   249  007F90  20                 	db	32
   250  007F91  20                 	db	32
   251  007F92  20                 	db	32
   252  007F93  20                 	db	32
   253  007F94  20                 	db	32
   254  007F95  52                 	db	82	;'R'
   255  007F96  49                 	db	73	;'I'
   256  007F97  45                 	db	69	;'E'
   257  007F98  53                 	db	83	;'S'
   258  007F99  47                 	db	71	;'G'
   259  007F9A  4F                 	db	79	;'O'
   260  007F9B  20                 	db	32
   261  007F9C  20                 	db	32
   262  007F9D  20                 	db	32
   263  007F9E  20                 	db	32
   264  007F9F  20                 	db	32
   265  007FA0  00                 	db	0
   266  007FA1                     STR_6:
   267  007FA1  20                 	db	32
   268  007FA2  20                 	db	32
   269  007FA3  41                 	db	65	;'A'
   270  007FA4  4C                 	db	76	;'L'
   271  007FA5  54                 	db	84	;'T'
   272  007FA6  4F                 	db	79	;'O'
   273  007FA7  20                 	db	32
   274  007FA8  56                 	db	86	;'V'
   275  007FA9  4F                 	db	79	;'O'
   276  007FAA  4C                 	db	76	;'L'
   277  007FAB  54                 	db	84	;'T'
   278  007FAC  41                 	db	65	;'A'
   279  007FAD  4A                 	db	74	;'J'
   280  007FAE  45                 	db	69	;'E'
   281  007FAF  20                 	db	32
   282  007FB0  20                 	db	32
   283  007FB1  00                 	db	0
   284  007FB2                     STR_8:
   285  007FB2  20                 	db	32
   286  007FB3  44                 	db	68	;'D'
   287  007FB4  45                 	db	69	;'E'
   288  007FB5  20                 	db	32
   289  007FB6  44                 	db	68	;'D'
   290  007FB7  45                 	db	69	;'E'
   291  007FB8  53                 	db	83	;'S'
   292  007FB9  54                 	db	84	;'T'
   293  007FBA  52                 	db	82	;'R'
   294  007FBB  55                 	db	85	;'U'
   295  007FBC  43                 	db	67	;'C'
   296  007FBD  43                 	db	67	;'C'
   297  007FBE  49                 	db	73	;'I'
   298  007FBF  4F                 	db	79	;'O'
   299  007FC0  4E                 	db	78	;'N'
   300  007FC1  20                 	db	32
   301  007FC2  00                 	db	0
   302  007FC3                     STR_9:
   303  007FC3  20                 	db	32
   304  007FC4  20                 	db	32
   305  007FC5  20                 	db	32
   306  007FC6  20                 	db	32
   307  007FC7  20                 	db	32
   308  007FC8  4C                 	db	76	;'L'
   309  007FC9  4C                 	db	76	;'L'
   310  007FCA  45                 	db	69	;'E'
   311  007FCB  47                 	db	71	;'G'
   312  007FCC  4F                 	db	79	;'O'
   313  007FCD  20                 	db	32
   314  007FCE  20                 	db	32
   315  007FCF  20                 	db	32
   316  007FD0  20                 	db	32
   317  007FD1  20                 	db	32
   318  007FD2  00                 	db	0
   319  007FD3                     STR_5:
   320  007FD3  20                 	db	32
   321  007FD4  20                 	db	32
   322  007FD5  20                 	db	32
   323  007FD6  20                 	db	32
   324  007FD7  50                 	db	80	;'P'
   325  007FD8  45                 	db	69	;'E'
   326  007FD9  4C                 	db	76	;'L'
   327  007FDA  49                 	db	73	;'I'
   328  007FDB  47                 	db	71	;'G'
   329  007FDC  52                 	db	82	;'R'
   330  007FDD  4F                 	db	79	;'O'
   331  007FDE  20                 	db	32
   332  007FDF  20                 	db	32
   333  007FE0  20                 	db	32
   334  007FE1  00                 	db	0
   335  007FE2                     STR_2:
   336  007FE2  44                 	db	68	;'D'
   337  007FE3  69                 	db	105	;'i'
   338  007FE4  65                 	db	101	;'e'
   339  007FE5  67                 	db	103	;'g'
   340  007FE6  6F                 	db	111	;'o'
   341  007FE7  20                 	db	32
   342  007FE8  2D                 	db	45
   343  007FE9  20                 	db	32
   344  007FEA  38                 	db	56	;'8'
   345  007FEB  34                 	db	52	;'4'
   346  007FEC  30                 	db	48	;'0'
   347  007FED  31                 	db	49	;'1'
   348  007FEE  30                 	db	48	;'0'
   349  007FEF  00                 	db	0
   350  007FF0                     STR_1:
   351  007FF0  43                 	db	67	;'C'
   352  007FF1  4F                 	db	79	;'O'
   353  007FF2  4E                 	db	78	;'N'
   354  007FF3  56                 	db	86	;'V'
   355  007FF4  45                 	db	69	;'E'
   356  007FF5  52                 	db	82	;'R'
   357  007FF6  53                 	db	83	;'S'
   358  007FF7  4F                 	db	79	;'O'
   359  007FF8  52                 	db	82	;'R'
   360  007FF9  20                 	db	32
   361  007FFA  41                 	db	65	;'A'
   362  007FFB  44                 	db	68	;'D'
   363  007FFC  43                 	db	67	;'C'
   364  007FFD  00                 	db	0
   365                           
   366                           ; #config settings
   367  007FFE  00                 	db	0	; dummy byte at the end
   368  0000                     
   369                           	psect	cinit
   370  00166C                     __pcinit:
   371                           	opt callstack 0
   372  00166C                     start_initialization:
   373                           	opt callstack 0
   374  00166C                     __initialization:
   375                           	opt callstack 0
   376                           
   377                           ; Clear objects allocated to BANK0 (20 bytes)
   378  00166C  EE00  F0A4         	lfsr	0,__pbssBANK0
   379  001670  0E14               	movlw	20
   380  001672                     clear_0:
   381  001672  6AEE               	clrf	postinc0,c
   382  001674  06E8               	decf	wreg,f,c
   383  001676  E1FD               	bnz	clear_0
   384  001678                     end_of_initialization:
   385                           	opt callstack 0
   386  001678                     __end_of__initialization:
   387                           	opt callstack 0
   388  001678  0E00               	movlw	low (__Lmediumconst shr (0+16))
   389  00167A  6EF8               	movwf	tblptru,c
   390  00167C  0100               	movlb	0
   391  00167E  EF61  F011         	goto	_main	;jump to C main() function
   392                           
   393                           	psect	bssBANK0
   394  0000A4                     __pbssBANK0:
   395                           	opt callstack 0
   396  0000A4                     	ds	20
   397                           
   398                           	psect	cstackBANK0
   399  000080                     __pcstackBANK0:
   400                           	opt callstack 0
   401  000080                     main@message:
   402                           	opt callstack 0
   403                           
   404                           ; 20 bytes @ 0x0
   405  000080                     	ds	20
   406  000094                     _main$115:
   407                           	opt callstack 0
   408                           
   409                           ; 2 bytes @ 0x14
   410  000094                     	ds	2
   411  000096                     _main$128:
   412                           	opt callstack 0
   413                           
   414                           ; 2 bytes @ 0x16
   415  000096                     	ds	2
   416  000098                     main@line:
   417                           	opt callstack 0
   418                           
   419                           ; 1 bytes @ 0x18
   420  000098                     	ds	1
   421  000099                     main@in:
   422                           	opt callstack 0
   423                           
   424                           ; 2 bytes @ 0x19
   425  000099                     	ds	2
   426  00009B                     main@volt:
   427                           	opt callstack 0
   428                           
   429                           ; 4 bytes @ 0x1B
   430  00009B                     	ds	4
   431  00009F                     main@temp:
   432                           	opt callstack 0
   433                           
   434                           ; 4 bytes @ 0x1F
   435  00009F                     	ds	4
   436  0000A3                     main@canal:
   437                           	opt callstack 0
   438                           
   439                           ; 1 bytes @ 0x23
   440  0000A3                     	ds	1
   441                           
   442                           	psect	cstackCOMRAM
   443  000001                     __pcstackCOMRAM:
   444                           	opt callstack 0
   445  000001                     ??_isdigit:
   446  000001                     ?_strlen:
   447                           	opt callstack 0
   448  000001                     ?___wmul:
   449                           	opt callstack 0
   450  000001                     ?___awmod:
   451                           	opt callstack 0
   452  000001                     ?___lwmod:
   453                           	opt callstack 0
   454  000001                     ?__tdiv_to_l_:
   455                           	opt callstack 0
   456  000001                     ?__div_to_l_:
   457                           	opt callstack 0
   458  000001                     ?___lldiv:
   459                           	opt callstack 0
   460  000001                     ?___flneg:
   461                           	opt callstack 0
   462  000001                     ?___llmod:
   463                           	opt callstack 0
   464  000001                     ?___xxtofl:
   465                           	opt callstack 0
   466  000001                     R_I@dato:
   467                           	opt callstack 0
   468  000001                     R_D@dato:
   469                           	opt callstack 0
   470  000001                     ___wmul@multiplier:
   471                           	opt callstack 0
   472  000001                     ___awmod@dividend:
   473                           	opt callstack 0
   474  000001                     ___lwmod@dividend:
   475                           	opt callstack 0
   476  000001                     strlen@s:
   477                           	opt callstack 0
   478  000001                     ___lldiv@dividend:
   479                           	opt callstack 0
   480  000001                     __div_to_l_@f1:
   481                           	opt callstack 0
   482  000001                     ___fleq@ff1:
   483                           	opt callstack 0
   484  000001                     ___flge@ff1:
   485                           	opt callstack 0
   486  000001                     ___flneg@f1:
   487                           	opt callstack 0
   488  000001                     __tdiv_to_l_@f1:
   489                           	opt callstack 0
   490  000001                     ___llmod@dividend:
   491                           	opt callstack 0
   492  000001                     ___xxtofl@val:
   493                           	opt callstack 0
   494                           
   495                           ; 4 bytes @ 0x0
   496  000001                     	ds	1
   497  000002                     ??_init_LCD:
   498  000002                     _isdigit$655:
   499                           	opt callstack 0
   500                           
   501                           ; 1 bytes @ 0x1
   502  000002                     	ds	1
   503  000003                     isdigit@c:
   504                           	opt callstack 0
   505  000003                     ___wmul@multiplicand:
   506                           	opt callstack 0
   507  000003                     ___awmod@divisor:
   508                           	opt callstack 0
   509  000003                     ___lwmod@divisor:
   510                           	opt callstack 0
   511  000003                     strlen@cp:
   512                           	opt callstack 0
   513                           
   514                           ; 2 bytes @ 0x2
   515  000003                     	ds	2
   516  000005                     ??___xxtofl:
   517  000005                     ___awmod@counter:
   518                           	opt callstack 0
   519  000005                     ___lwmod@counter:
   520                           	opt callstack 0
   521  000005                     print_message_onLCD@message:
   522                           	opt callstack 0
   523  000005                     ___wmul@product:
   524                           	opt callstack 0
   525  000005                     ___lldiv@divisor:
   526                           	opt callstack 0
   527  000005                     __div_to_l_@f2:
   528                           	opt callstack 0
   529  000005                     ___fleq@ff2:
   530                           	opt callstack 0
   531  000005                     ___flge@ff2:
   532                           	opt callstack 0
   533  000005                     __tdiv_to_l_@f2:
   534                           	opt callstack 0
   535  000005                     ___llmod@divisor:
   536                           	opt callstack 0
   537                           
   538                           ; 4 bytes @ 0x4
   539  000005                     	ds	1
   540  000006                     ?___lwdiv:
   541                           	opt callstack 0
   542  000006                     ___awmod@sign:
   543                           	opt callstack 0
   544  000006                     ___lwdiv@dividend:
   545                           	opt callstack 0
   546                           
   547                           ; 2 bytes @ 0x5
   548  000006                     	ds	1
   549  000007                     ??_print_message_onLCD:
   550  000007                     ?___awdiv:
   551                           	opt callstack 0
   552  000007                     ___awdiv@dividend:
   553                           	opt callstack 0
   554                           
   555                           ; 2 bytes @ 0x6
   556  000007                     	ds	1
   557  000008                     ___lwdiv@divisor:
   558                           	opt callstack 0
   559                           
   560                           ; 2 bytes @ 0x7
   561  000008                     	ds	1
   562  000009                     ??__tdiv_to_l_:
   563  000009                     ??___fleq:
   564  000009                     ??___flge:
   565  000009                     print_message_onLCD@LCD_line:
   566                           	opt callstack 0
   567  000009                     ___llmod@counter:
   568                           	opt callstack 0
   569  000009                     ___xxtofl@sign:
   570                           	opt callstack 0
   571  000009                     ___awdiv@divisor:
   572                           	opt callstack 0
   573  000009                     ___lldiv@quotient:
   574                           	opt callstack 0
   575  000009                     __div_to_l_@quot:
   576                           	opt callstack 0
   577                           
   578                           ; 4 bytes @ 0x8
   579  000009                     	ds	1
   580  00000A                     print_message_onLCD@i:
   581                           	opt callstack 0
   582  00000A                     ___xxtofl@exp:
   583                           	opt callstack 0
   584  00000A                     ___lwdiv@quotient:
   585                           	opt callstack 0
   586                           
   587                           ; 2 bytes @ 0x9
   588  00000A                     	ds	1
   589  00000B                     ___awdiv@counter:
   590                           	opt callstack 0
   591  00000B                     ___xxtofl@arg:
   592                           	opt callstack 0
   593                           
   594                           ; 4 bytes @ 0xA
   595  00000B                     	ds	1
   596  00000C                     ___awdiv@sign:
   597                           	opt callstack 0
   598  00000C                     ___lwdiv@counter:
   599                           	opt callstack 0
   600  00000C                     __tdiv_to_l_@quot:
   601                           	opt callstack 0
   602                           
   603                           ; 4 bytes @ 0xB
   604  00000C                     	ds	1
   605  00000D                     ___lldiv@counter:
   606                           	opt callstack 0
   607  00000D                     __div_to_l_@cntr:
   608                           	opt callstack 0
   609  00000D                     ___awdiv@quotient:
   610                           	opt callstack 0
   611                           
   612                           ; 2 bytes @ 0xC
   613  00000D                     	ds	1
   614  00000E                     __div_to_l_@exp1:
   615                           	opt callstack 0
   616                           
   617                           ; 1 bytes @ 0xD
   618  00000E                     	ds	1
   619  00000F                     ?___flmul:
   620                           	opt callstack 0
   621  00000F                     ___flmul@b:
   622                           	opt callstack 0
   623                           
   624                           ; 4 bytes @ 0xE
   625  00000F                     	ds	1
   626  000010                     __tdiv_to_l_@cntr:
   627                           	opt callstack 0
   628                           
   629                           ; 1 bytes @ 0xF
   630  000010                     	ds	1
   631  000011                     __tdiv_to_l_@exp1:
   632                           	opt callstack 0
   633                           
   634                           ; 1 bytes @ 0x10
   635  000011                     	ds	2
   636  000013                     ___flmul@a:
   637                           	opt callstack 0
   638                           
   639                           ; 4 bytes @ 0x12
   640  000013                     	ds	4
   641  000017                     ??___flmul:
   642                           
   643                           ; 1 bytes @ 0x16
   644  000017                     	ds	4
   645  00001B                     ___flmul@sign:
   646                           	opt callstack 0
   647                           
   648                           ; 1 bytes @ 0x1A
   649  00001B                     	ds	1
   650  00001C                     ___flmul@grs:
   651                           	opt callstack 0
   652                           
   653                           ; 4 bytes @ 0x1B
   654  00001C                     	ds	4
   655  000020                     ___flmul@aexp:
   656                           	opt callstack 0
   657                           
   658                           ; 1 bytes @ 0x1F
   659  000020                     	ds	1
   660  000021                     ___flmul@bexp:
   661                           	opt callstack 0
   662                           
   663                           ; 1 bytes @ 0x20
   664  000021                     	ds	1
   665  000022                     ___flmul@prod:
   666                           	opt callstack 0
   667                           
   668                           ; 4 bytes @ 0x21
   669  000022                     	ds	4
   670  000026                     ___flmul@temp:
   671                           	opt callstack 0
   672                           
   673                           ; 2 bytes @ 0x25
   674  000026                     	ds	2
   675  000028                     ?___fldiv:
   676                           	opt callstack 0
   677  000028                     ?_fround:
   678                           	opt callstack 0
   679  000028                     ?_scale:
   680                           	opt callstack 0
   681  000028                     ___fldiv@b:
   682                           	opt callstack 0
   683                           
   684                           ; 4 bytes @ 0x27
   685  000028                     	ds	4
   686  00002C                     ___fldiv@a:
   687                           	opt callstack 0
   688  00002C                     _fround$837:
   689                           	opt callstack 0
   690  00002C                     _scale$838:
   691                           	opt callstack 0
   692                           
   693                           ; 4 bytes @ 0x2B
   694  00002C                     	ds	4
   695  000030                     ??___fldiv:
   696  000030                     scale@scl:
   697                           	opt callstack 0
   698  000030                     _fround$836:
   699                           	opt callstack 0
   700                           
   701                           ; 4 bytes @ 0x2F
   702  000030                     	ds	1
   703  000031                     ?___fltol:
   704                           	opt callstack 0
   705  000031                     ___fltol@f1:
   706                           	opt callstack 0
   707                           
   708                           ; 4 bytes @ 0x30
   709  000031                     	ds	3
   710  000034                     fround@prec:
   711                           	opt callstack 0
   712  000034                     ___fldiv@rem:
   713                           	opt callstack 0
   714                           
   715                           ; 4 bytes @ 0x33
   716  000034                     	ds	1
   717  000035                     ??___fltol:
   718  000035                     ?___fladd:
   719                           	opt callstack 0
   720  000035                     ___fladd@b:
   721                           	opt callstack 0
   722                           
   723                           ; 4 bytes @ 0x34
   724  000035                     	ds	3
   725  000038                     ___fldiv@sign:
   726                           	opt callstack 0
   727                           
   728                           ; 1 bytes @ 0x37
   729  000038                     	ds	1
   730  000039                     ___fltol@sign1:
   731                           	opt callstack 0
   732  000039                     ___fldiv@new_exp:
   733                           	opt callstack 0
   734  000039                     ___fladd@a:
   735                           	opt callstack 0
   736                           
   737                           ; 4 bytes @ 0x38
   738  000039                     	ds	1
   739  00003A                     ___fltol@exp1:
   740                           	opt callstack 0
   741                           
   742                           ; 1 bytes @ 0x39
   743  00003A                     	ds	1
   744  00003B                     ___fldiv@grs:
   745                           	opt callstack 0
   746                           
   747                           ; 4 bytes @ 0x3A
   748  00003B                     	ds	2
   749  00003D                     ??___fladd:
   750                           
   751                           ; 1 bytes @ 0x3C
   752  00003D                     	ds	2
   753  00003F                     ___fldiv@bexp:
   754                           	opt callstack 0
   755                           
   756                           ; 1 bytes @ 0x3E
   757  00003F                     	ds	1
   758  000040                     ___fldiv@aexp:
   759                           	opt callstack 0
   760                           
   761                           ; 1 bytes @ 0x3F
   762  000040                     	ds	1
   763  000041                     ?_get_voltage:
   764                           	opt callstack 0
   765  000041                     ___fladd@signs:
   766                           	opt callstack 0
   767  000041                     get_voltage@ac_in:
   768                           	opt callstack 0
   769                           
   770                           ; 2 bytes @ 0x40
   771  000041                     	ds	1
   772  000042                     ___fladd@aexp:
   773                           	opt callstack 0
   774                           
   775                           ; 1 bytes @ 0x41
   776  000042                     	ds	1
   777  000043                     ___fladd@bexp:
   778                           	opt callstack 0
   779                           
   780                           ; 1 bytes @ 0x42
   781  000043                     	ds	1
   782  000044                     ___fladd@grs:
   783                           	opt callstack 0
   784                           
   785                           ; 1 bytes @ 0x43
   786  000044                     	ds	1
   787  000045                     ?_get_temp:
   788                           	opt callstack 0
   789  000045                     ?___flsub:
   790                           	opt callstack 0
   791  000045                     get_temp@ac_in:
   792                           	opt callstack 0
   793  000045                     ___flsub@b:
   794                           	opt callstack 0
   795                           
   796                           ; 4 bytes @ 0x44
   797  000045                     	ds	4
   798  000049                     get_temp@r:
   799                           	opt callstack 0
   800  000049                     ___flsub@a:
   801                           	opt callstack 0
   802                           
   803                           ; 4 bytes @ 0x48
   804  000049                     	ds	4
   805  00004D                     ?_sprintf:
   806                           	opt callstack 0
   807  00004D                     sprintf@sp:
   808                           	opt callstack 0
   809                           
   810                           ; 2 bytes @ 0x4C
   811  00004D                     	ds	2
   812  00004F                     sprintf@f:
   813                           	opt callstack 0
   814                           
   815                           ; 2 bytes @ 0x4E
   816  00004F                     	ds	6
   817  000055                     ??_sprintf:
   818                           
   819                           ; 1 bytes @ 0x54
   820  000055                     	ds	4
   821  000059                     _sprintf$839:
   822                           	opt callstack 0
   823                           
   824                           ; 4 bytes @ 0x58
   825  000059                     	ds	4
   826  00005D                     sprintf@ap:
   827                           	opt callstack 0
   828                           
   829                           ; 2 bytes @ 0x5C
   830  00005D                     	ds	2
   831  00005F                     sprintf@val:
   832                           	opt callstack 0
   833                           
   834                           ; 4 bytes @ 0x5E
   835  00005F                     	ds	4
   836  000063                     sprintf@tmpval:
   837                           	opt callstack 0
   838                           
   839                           ; 4 bytes @ 0x62
   840  000063                     	ds	4
   841  000067                     sprintf@eexp:
   842                           	opt callstack 0
   843                           
   844                           ; 2 bytes @ 0x66
   845  000067                     	ds	2
   846  000069                     sprintf@flag:
   847                           	opt callstack 0
   848                           
   849                           ; 2 bytes @ 0x68
   850  000069                     	ds	2
   851  00006B                     sprintf@width:
   852                           	opt callstack 0
   853                           
   854                           ; 2 bytes @ 0x6A
   855  00006B                     	ds	2
   856  00006D                     sprintf@fval:
   857                           	opt callstack 0
   858                           
   859                           ; 4 bytes @ 0x6C
   860  00006D                     	ds	4
   861  000071                     sprintf@prec:
   862                           	opt callstack 0
   863                           
   864                           ; 2 bytes @ 0x70
   865  000071                     	ds	2
   866  000073                     sprintf@c:
   867                           	opt callstack 0
   868                           
   869                           ; 1 bytes @ 0x72
   870  000073                     	ds	1
   871  000074                     ??_main:
   872                           
   873                           ; 1 bytes @ 0x73
   874  000074                     	ds	2
   875                           
   876 ;;
   877 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   878 ;;
   879 ;; *************** function _main *****************
   880 ;; Defined at:
   881 ;;		line 35 in file "main.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;		None
   884 ;; Auto vars:     Size  Location     Type
   885 ;;  line            1   24[BANK0 ] unsigned char 
   886 ;;  message        20    0[BANK0 ] unsigned char [20]
   887 ;;  in              2   25[BANK0 ] unsigned int 
   888 ;;  temp            4   31[BANK0 ] float 
   889 ;;  volt            4   27[BANK0 ] float 
   890 ;;  canal           1   35[BANK0 ] unsigned char 
   891 ;; Return value:  Size  Location     Type
   892 ;;                  1    wreg      void 
   893 ;; Registers used:
   894 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   895 ;; Tracked objects:
   896 ;;		On entry : 0/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   900 ;;      Params:         0       0       0       0       0       0       0
   901 ;;      Locals:         0      36       0       0       0       0       0
   902 ;;      Temps:          2       0       0       0       0       0       0
   903 ;;      Totals:         2      36       0       0       0       0       0
   904 ;;Total ram usage:       38 bytes
   905 ;; Hardware stack levels required when called:    3
   906 ;; This function calls:
   907 ;;		_R_I
   908 ;;		___flge
   909 ;;		_get_temp
   910 ;;		_get_voltage
   911 ;;		_init_LCD
   912 ;;		_initial_config
   913 ;;		_light_the_bulb
   914 ;;		_light_the_bulb_and_start_engine
   915 ;;		_print_message_onLCD
   916 ;;		_sprintf
   917 ;;		_start_engine
   918 ;;		_turn_off_everything
   919 ;; This function is called by:
   920 ;;		Startup code after reset
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           	psect	text0
   925  0022C2                     __ptext0:
   926                           	opt callstack 0
   927  0022C2                     _main:
   928                           	opt callstack 0
   929  0022C2  FFFF               	dw	65535	; assembler added errata NOP
   930                           
   931                           ;main.c: 36: initial_config();
   932                           
   933                           ;incstack = 0
   934  0022C4  EC9E  F00B         	call	_initial_config	;wreg free
   935                           
   936                           ;main.c: 37: init_LCD();
   937  0022C8  EC30  F00C         	call	_init_LCD	;wreg free
   938                           
   939                           ;main.c: 38: print_message_onLCD(128, "CONVERSOR ADC");
   940  0022CC  0EF0               	movlw	low STR_1
   941  0022CE  6E05               	movwf	print_message_onLCD@message,c
   942  0022D0  0E7F               	movlw	high STR_1
   943  0022D2  6E06               	movwf	print_message_onLCD@message+1,c
   944  0022D4  0E80               	movlw	128
   945  0022D6  EC8C  F00C         	call	_print_message_onLCD
   946                           
   947                           ;main.c: 39: print_message_onLCD(192, "Diego - 84010");
   948  0022DA  0EE2               	movlw	low STR_2
   949  0022DC  6E05               	movwf	print_message_onLCD@message,c
   950  0022DE  0E7F               	movlw	high STR_2
   951  0022E0  6E06               	movwf	print_message_onLCD@message+1,c
   952  0022E2  0EC0               	movlw	192
   953  0022E4  EC8C  F00C         	call	_print_message_onLCD
   954                           
   955                           ;main.c: 40: _delay((unsigned long)((3000)*(4000000/4000.0)));
   956  0022E8  0E0C               	movlw	12
   957  0022EA  6E75               	movwf	(??_main+1)& (0+255),c
   958  0022EC  0E6C               	movlw	108
   959  0022EE  6E74               	movwf	??_main& (0+255),c
   960  0022F0  0EF3               	movlw	243
   961  0022F2                     u4457:
   962  0022F2  FFFF               	dw	65535	; errata NOP
   963  0022F4  2EE8               	decfsz	wreg,f,c
   964  0022F6  D7FD               	bra	u4457
   965  0022F8  2E74               	decfsz	??_main& (0+255),f,c
   966  0022FA  D7FB               	bra	u4457
   967  0022FC  2E75               	decfsz	(??_main+1)& (0+255),f,c
   968  0022FE  D7F9               	bra	u4457
   969                           
   970                           ;main.c: 42: R_I(0X01);
   971  002300  0E01               	movlw	1
   972  002302  EC41  F00B         	call	_R_I
   973                           
   974                           ;main.c: 44: char canal = 0;
   975  002306  0E00               	movlw	0
   976  002308  0100               	movlb	0	; () banked
   977  00230A  FFFF               	dw	65535	; assembler added errata NOP
   978  00230C  6FA3               	movwf	main@canal& (0+255),b
   979                           
   980                           ; BSR set to: 0
   981                           ;main.c: 48: ADCON0 = canal ? 0B01001001 : 0B01000001;
   982  00230E  51A3               	movf	main@canal& (0+255),w,b
   983  002310  A4D8               	btfss	status,2,c
   984  002312  D004               	goto	l3835
   985                           
   986                           ; BSR set to: 0
   987  002314  0E00               	movlw	0
   988  002316  6F95               	movwf	(_main$115+1)& (0+255),b
   989  002318  0E41               	movlw	65
   990  00231A  D004               	goto	L1
   991  00231C                     l3835:
   992  00231C  FFFF               	dw	65535	; assembler added errata NOP
   993                           
   994                           ; BSR set to: 0
   995  00231E  0E00               	movlw	0
   996  002320  6F95               	movwf	(_main$115+1)& (0+255),b
   997  002322  0E49               	movlw	73
   998  002324                     L1:
   999  002324  FFFF               	dw	65535	; assembler added errata NOP
  1000  002326  6F94               	movwf	_main$115& (0+255),b
  1001                           
  1002                           ; BSR set to: 0
  1003  002328  C094  FFC2         	movff	_main$115,4034	;volatile
  1004                           
  1005                           ; BSR set to: 0
  1006                           ;main.c: 49: _delay((unsigned long)((20)*(4000000/4000000.0)));
  1007  00232C  0E05               	movlw	5
  1008  00232E                     u4467:
  1009  00232E  FFFF               	dw	65535	; errata NOP
  1010  002330  2EE8               	decfsz	wreg,f,c
  1011  002332  D7FD               	bra	u4467
  1012                           
  1013                           ;main.c: 50: GO_DONE = 1;
  1014  002334  84C2               	bsf	4034,2,c	;volatile
  1015  002336                     l74:
  1016  002336  FFFF               	dw	65535	; assembler added errata NOP
  1017  002338  B4C2               	btfsc	4034,2,c	;volatile
  1018  00233A  D7FD               	goto	l74
  1019                           
  1020                           ;main.c: 54: unsigned int in = (ADRESH<<8) | ADRESL;
  1021  00233C  50C3               	movf	4035,w,c	;volatile
  1022  00233E  CFC4 F074          	movff	4036,??_main	;volatile
  1023  002342  6A75               	clrf	(??_main+1)& (0+255),c
  1024  002344  C074  F075         	movff	??_main,??_main+1
  1025  002348  6A74               	clrf	??_main,c
  1026  00234A  1074               	iorwf	??_main,w,c
  1027  00234C  0100               	movlb	0	; () banked
  1028  00234E  6F99               	movwf	main@in& (0+255),b
  1029  002350  5075               	movf	??_main+1,w,c
  1030  002352  6F9A               	movwf	(main@in+1)& (0+255),b
  1031                           
  1032                           ; BSR set to: 0
  1033                           ;main.c: 55: _delay((unsigned long)((50)*(4000000/4000.0)));
  1034  002354  0E31               	movlw	49
  1035  002356  6E74               	movwf	??_main& (0+255),c
  1036  002358  0EBB               	movlw	187
  1037  00235A                     u4477:
  1038  00235A  FFFF               	dw	65535	; errata NOP
  1039  00235C  2EE8               	decfsz	wreg,f,c
  1040  00235E  D7FD               	bra	u4477
  1041  002360  2E74               	decfsz	??_main& (0+255),f,c
  1042  002362  D7FB               	bra	u4477
  1043                           
  1044                           ;main.c: 56: char message[20] = "";
  1045  002364  EE20  F080         	lfsr	2,main@message
  1046  002368  0E13               	movlw	19
  1047  00236A                     u4361:
  1048  00236A  6ADE               	clrf	postinc2,c
  1049  00236C  06E8               	decf	wreg,f,c
  1050  00236E  E2FD               	bc	u4361
  1051                           
  1052                           ;main.c: 57: if (!canal) {
  1053  002370  0100               	movlb	0	; () banked
  1054  002372  51A3               	movf	main@canal& (0+255),w,b
  1055  002374  A4D8               	btfss	status,2,c
  1056  002376  D021               	goto	l3855
  1057                           
  1058                           ; BSR set to: 0
  1059                           ;main.c: 58: volt = get_voltage(in);
  1060  002378  C099  F041         	movff	main@in,get_voltage@ac_in
  1061  00237C  C09A  F042         	movff	main@in+1,get_voltage@ac_in+1
  1062  002380  ECC2  F00C         	call	_get_voltage	;wreg free
  1063  002384  C041  F09B         	movff	?_get_voltage,main@volt
  1064  002388  C042  F09C         	movff	?_get_voltage+1,main@volt+1
  1065  00238C  C043  F09D         	movff	?_get_voltage+2,main@volt+2
  1066  002390  C044  F09E         	movff	?_get_voltage+3,main@volt+3
  1067                           
  1068                           ;main.c: 59: sprintf(message, "Voltaje: %0.2fV   ", volt);
  1069  002394  0E80               	movlw	low main@message
  1070  002396  6E4D               	movwf	sprintf@sp,c
  1071  002398  0E00               	movlw	high main@message
  1072  00239A  6E4E               	movwf	sprintf@sp+1,c
  1073  00239C  0E6C               	movlw	low STR_3
  1074  00239E  6E4F               	movwf	sprintf@f,c
  1075  0023A0  0E7F               	movlw	high STR_3
  1076  0023A2  6E50               	movwf	sprintf@f+1,c
  1077  0023A4  C09B  F051         	movff	main@volt,?_sprintf+4
  1078  0023A8  C09C  F052         	movff	main@volt+1,?_sprintf+5
  1079  0023AC  C09D  F053         	movff	main@volt+2,?_sprintf+6
  1080  0023B0  C09E  F054         	movff	main@volt+3,?_sprintf+7
  1081  0023B4  ECCE  F01A         	call	_sprintf	;wreg free
  1082                           
  1083                           ;main.c: 60: } else {
  1084  0023B8  D021               	goto	l3859
  1085  0023BA                     l3855:
  1086  0023BA  FFFF               	dw	65535	; assembler added errata NOP
  1087                           
  1088                           ; BSR set to: 0
  1089                           ;main.c: 61: temp = get_temp(in);
  1090  0023BC  C099  F045         	movff	main@in,get_temp@ac_in
  1091  0023C0  C09A  F046         	movff	main@in+1,get_temp@ac_in+1
  1092  0023C4  EC2F  F00F         	call	_get_temp	;wreg free
  1093  0023C8  C045  F09F         	movff	?_get_temp,main@temp
  1094  0023CC  C046  F0A0         	movff	?_get_temp+1,main@temp+1
  1095  0023D0  C047  F0A1         	movff	?_get_temp+2,main@temp+2
  1096  0023D4  C048  F0A2         	movff	?_get_temp+3,main@temp+3
  1097                           
  1098                           ;main.c: 62: sprintf(message, "Temp: %.0fC       ", temp);
  1099  0023D8  0E80               	movlw	low main@message
  1100  0023DA  6E4D               	movwf	sprintf@sp,c
  1101  0023DC  0E00               	movlw	high main@message
  1102  0023DE  6E4E               	movwf	sprintf@sp+1,c
  1103  0023E0  0E59               	movlw	low STR_4
  1104  0023E2  6E4F               	movwf	sprintf@f,c
  1105  0023E4  0E7F               	movlw	high STR_4
  1106  0023E6  6E50               	movwf	sprintf@f+1,c
  1107  0023E8  C09F  F051         	movff	main@temp,?_sprintf+4
  1108  0023EC  C0A0  F052         	movff	main@temp+1,?_sprintf+5
  1109  0023F0  C0A1  F053         	movff	main@temp+2,?_sprintf+6
  1110  0023F4  C0A2  F054         	movff	main@temp+3,?_sprintf+7
  1111  0023F8  ECCE  F01A         	call	_sprintf	;wreg free
  1112  0023FC                     l3859:
  1113  0023FC  FFFF               	dw	65535	; assembler added errata NOP
  1114                           
  1115                           ;main.c: 63: };main.c: 65: if (volt > 3.8) {
  1116  0023FE  0E33               	movlw	51
  1117  002400  6E01               	movwf	___flge@ff1,c
  1118  002402  0E33               	movlw	51
  1119  002404  6E02               	movwf	___flge@ff1+1,c
  1120  002406  0E73               	movlw	115
  1121  002408  6E03               	movwf	___flge@ff1+2,c
  1122  00240A  0E40               	movlw	64
  1123  00240C  6E04               	movwf	___flge@ff1+3,c
  1124  00240E  C09B  F005         	movff	main@volt,___flge@ff2
  1125  002412  C09C  F006         	movff	main@volt+1,___flge@ff2+1
  1126  002416  C09D  F007         	movff	main@volt+2,___flge@ff2+2
  1127  00241A  C09E  F008         	movff	main@volt+3,___flge@ff2+3
  1128  00241E  ECBF  F00E         	call	___flge	;wreg free
  1129  002422  B0D8               	btfsc	status,0,c
  1130  002424  D011               	goto	l3865
  1131                           
  1132                           ;main.c: 66: print_message_onLCD(128, "    PELIGRO   ");
  1133  002426  0ED3               	movlw	low STR_5
  1134  002428  6E05               	movwf	print_message_onLCD@message,c
  1135  00242A  0E7F               	movlw	high STR_5
  1136  00242C  6E06               	movwf	print_message_onLCD@message+1,c
  1137  00242E  0E80               	movlw	128
  1138  002430  EC8C  F00C         	call	_print_message_onLCD
  1139                           
  1140                           ;main.c: 67: print_message_onLCD(192, "  ALTO VOLTAJE  ");
  1141  002434  0EA1               	movlw	low STR_6
  1142  002436  6E05               	movwf	print_message_onLCD@message,c
  1143  002438  0E7F               	movlw	high STR_6
  1144  00243A  6E06               	movwf	print_message_onLCD@message+1,c
  1145  00243C  0EC0               	movlw	192
  1146  00243E  EC8C  F00C         	call	_print_message_onLCD
  1147                           
  1148                           ;main.c: 68: light_the_bulb();
  1149  002442  EC22  F00B         	call	_light_the_bulb	;wreg free
  1150                           
  1151                           ;main.c: 69: } else if (volt <= 0.29 && temp >= 61) {
  1152  002446  D07A               	goto	l3891
  1153  002448                     l3865:
  1154  002448  FFFF               	dw	65535	; assembler added errata NOP
  1155  00244A  0EE1               	movlw	225
  1156  00244C  6E01               	movwf	___flge@ff1,c
  1157  00244E  0E7A               	movlw	122
  1158  002450  6E02               	movwf	___flge@ff1+1,c
  1159  002452  0E94               	movlw	148
  1160  002454  6E03               	movwf	___flge@ff1+2,c
  1161  002456  0E3E               	movlw	62
  1162  002458  6E04               	movwf	___flge@ff1+3,c
  1163  00245A  C09B  F005         	movff	main@volt,___flge@ff2
  1164  00245E  C09C  F006         	movff	main@volt+1,___flge@ff2+1
  1165  002462  C09D  F007         	movff	main@volt+2,___flge@ff2+2
  1166  002466  C09E  F008         	movff	main@volt+3,___flge@ff2+3
  1167  00246A  ECBF  F00E         	call	___flge	;wreg free
  1168  00246E  A0D8               	btfss	status,0,c
  1169  002470  D025               	goto	l3873
  1170  002472  C09F  F001         	movff	main@temp,___flge@ff1
  1171  002476  C0A0  F002         	movff	main@temp+1,___flge@ff1+1
  1172  00247A  C0A1  F003         	movff	main@temp+2,___flge@ff1+2
  1173  00247E  C0A2  F004         	movff	main@temp+3,___flge@ff1+3
  1174  002482  0E00               	movlw	0
  1175  002484  6E05               	movwf	___flge@ff2,c
  1176  002486  0E00               	movlw	0
  1177  002488  6E06               	movwf	___flge@ff2+1,c
  1178  00248A  0E74               	movlw	116
  1179  00248C  6E07               	movwf	___flge@ff2+2,c
  1180  00248E  0E42               	movlw	66
  1181  002490  6E08               	movwf	___flge@ff2+3,c
  1182  002492  ECBF  F00E         	call	___flge	;wreg free
  1183  002496  A0D8               	btfss	status,0,c
  1184  002498  D011               	goto	l3873
  1185                           
  1186                           ;main.c: 70: print_message_onLCD(128, "     RIESGO     ");
  1187  00249A  0E90               	movlw	low STR_7
  1188  00249C  6E05               	movwf	print_message_onLCD@message,c
  1189  00249E  0E7F               	movlw	high STR_7
  1190  0024A0  6E06               	movwf	print_message_onLCD@message+1,c
  1191  0024A2  0E80               	movlw	128
  1192  0024A4  EC8C  F00C         	call	_print_message_onLCD
  1193                           
  1194                           ;main.c: 71: print_message_onLCD(192, " DE DESTRUCCION ");
  1195  0024A8  0EB2               	movlw	low STR_8
  1196  0024AA  6E05               	movwf	print_message_onLCD@message,c
  1197  0024AC  0E7F               	movlw	high STR_8
  1198  0024AE  6E06               	movwf	print_message_onLCD@message+1,c
  1199  0024B0  0EC0               	movlw	192
  1200  0024B2  EC8C  F00C         	call	_print_message_onLCD
  1201                           
  1202                           ;main.c: 72: start_engine();
  1203  0024B6  EC2C  F00B         	call	_start_engine	;wreg free
  1204                           
  1205                           ;main.c: 73: } else if (temp < 5) {
  1206  0024BA  D040               	goto	l3891
  1207  0024BC                     l3873:
  1208  0024BC  FFFF               	dw	65535	; assembler added errata NOP
  1209  0024BE  C09F  F001         	movff	main@temp,___flge@ff1
  1210  0024C2  C0A0  F002         	movff	main@temp+1,___flge@ff1+1
  1211  0024C6  C0A1  F003         	movff	main@temp+2,___flge@ff1+2
  1212  0024CA  C0A2  F004         	movff	main@temp+3,___flge@ff1+3
  1213  0024CE  0E00               	movlw	0
  1214  0024D0  6E05               	movwf	___flge@ff2,c
  1215  0024D2  0E00               	movlw	0
  1216  0024D4  6E06               	movwf	___flge@ff2+1,c
  1217  0024D6  0EA0               	movlw	160
  1218  0024D8  6E07               	movwf	___flge@ff2+2,c
  1219  0024DA  0E40               	movlw	64
  1220  0024DC  6E08               	movwf	___flge@ff2+3,c
  1221  0024DE  ECBF  F00E         	call	___flge	;wreg free
  1222  0024E2  B0D8               	btfsc	status,0,c
  1223  0024E4  D011               	goto	l3879
  1224                           
  1225                           ;main.c: 74: print_message_onLCD(128, "     LLEGO     ");
  1226  0024E6  0EC3               	movlw	low STR_9
  1227  0024E8  6E05               	movwf	print_message_onLCD@message,c
  1228  0024EA  0E7F               	movlw	high STR_9
  1229  0024EC  6E06               	movwf	print_message_onLCD@message+1,c
  1230  0024EE  0E80               	movlw	128
  1231  0024F0  EC8C  F00C         	call	_print_message_onLCD
  1232                           
  1233                           ;main.c: 75: print_message_onLCD(192, "     EL FIN     ");
  1234  0024F4  0E7F               	movlw	low STR_10
  1235  0024F6  6E05               	movwf	print_message_onLCD@message,c
  1236  0024F8  0E7F               	movlw	high STR_10
  1237  0024FA  6E06               	movwf	print_message_onLCD@message+1,c
  1238  0024FC  0EC0               	movlw	192
  1239  0024FE  EC8C  F00C         	call	_print_message_onLCD
  1240                           
  1241                           ;main.c: 76: light_the_bulb_and_start_engine();
  1242  002502  EC27  F00B         	call	_light_the_bulb_and_start_engine	;wreg free
  1243                           
  1244                           ;main.c: 77: } else {
  1245  002506  D01A               	goto	l3891
  1246  002508                     l3879:
  1247  002508  FFFF               	dw	65535	; assembler added errata NOP
  1248                           
  1249                           ;main.c: 78: char line = !canal ? 128 : 192;
  1250  00250A  0100               	movlb	0	; () banked
  1251  00250C  51A3               	movf	main@canal& (0+255),w,b
  1252  00250E  B4D8               	btfsc	status,2,c
  1253  002510  D004               	goto	l3883
  1254                           
  1255                           ; BSR set to: 0
  1256  002512  0E00               	movlw	0
  1257  002514  6F97               	movwf	(_main$128+1)& (0+255),b
  1258  002516  0EC0               	movlw	192
  1259  002518  D004               	goto	L2
  1260  00251A                     l3883:
  1261  00251A  FFFF               	dw	65535	; assembler added errata NOP
  1262                           
  1263                           ; BSR set to: 0
  1264  00251C  0E00               	movlw	0
  1265  00251E  6F97               	movwf	(_main$128+1)& (0+255),b
  1266  002520  0E80               	movlw	128
  1267  002522                     L2:
  1268  002522  FFFF               	dw	65535	; assembler added errata NOP
  1269  002524  6F96               	movwf	_main$128& (0+255),b
  1270                           
  1271                           ; BSR set to: 0
  1272  002526  C096  F098         	movff	_main$128,main@line
  1273                           
  1274                           ; BSR set to: 0
  1275                           ;main.c: 79: print_message_onLCD(line, message);
  1276  00252A  0E80               	movlw	low main@message
  1277  00252C  6E05               	movwf	print_message_onLCD@message,c
  1278  00252E  0E00               	movlw	high main@message
  1279  002530  6E06               	movwf	print_message_onLCD@message+1,c
  1280  002532  5198               	movf	main@line& (0+255),w,b
  1281  002534  EC8C  F00C         	call	_print_message_onLCD
  1282                           
  1283                           ;main.c: 80: turn_off_everything();
  1284  002538  EC31  F00B         	call	_turn_off_everything	;wreg free
  1285  00253C                     l3891:
  1286  00253C  FFFF               	dw	65535	; assembler added errata NOP
  1287                           
  1288                           ;main.c: 81: };main.c: 83: _delay((unsigned long)((10)*(4000000/4000.0)));
  1289  00253E  0E0A               	movlw	10
  1290  002540  6E74               	movwf	??_main& (0+255),c
  1291  002542  0EBE               	movlw	190
  1292  002544                     u4487:
  1293  002544  FFFF               	dw	65535	; errata NOP
  1294  002546  2EE8               	decfsz	wreg,f,c
  1295  002548  D7FD               	bra	u4487
  1296  00254A  2E74               	decfsz	??_main& (0+255),f,c
  1297  00254C  D7FB               	bra	u4487
  1298  00254E  D000               	nop2	
  1299                           
  1300                           ;main.c: 84: canal = canal ? 0 : 1;
  1301  002550  0100               	movlb	0	; () banked
  1302  002552  51A3               	movf	main@canal& (0+255),w,b
  1303  002554  A4D8               	btfss	status,2,c
  1304  002556  D002               	goto	u4430
  1305  002558  0E01               	movlw	1
  1306  00255A  D6D7               	goto	L3
  1307  00255C                     u4430:
  1308  00255C  FFFF               	dw	65535	; assembler added errata NOP
  1309  00255E  0E00               	movlw	0
  1310  002560  D6D4               	goto	L3
  1311  002562                     __end_of_main:
  1312                           	opt callstack 0
  1313                           
  1314 ;; *************** function _turn_off_everything *****************
  1315 ;; Defined at:
  1316 ;;		line 160 in file "main.c"
  1317 ;; Parameters:    Size  Location     Type
  1318 ;;		None
  1319 ;; Auto vars:     Size  Location     Type
  1320 ;;		None
  1321 ;; Return value:  Size  Location     Type
  1322 ;;                  1    wreg      void 
  1323 ;; Registers used:
  1324 ;;		wreg, status,2
  1325 ;; Tracked objects:
  1326 ;;		On entry : 0/0
  1327 ;;		On exit  : 0/0
  1328 ;;		Unchanged: 0/0
  1329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1330 ;;      Params:         0       0       0       0       0       0       0
  1331 ;;      Locals:         0       0       0       0       0       0       0
  1332 ;;      Temps:          0       0       0       0       0       0       0
  1333 ;;      Totals:         0       0       0       0       0       0       0
  1334 ;;Total ram usage:        0 bytes
  1335 ;; Hardware stack levels used:    1
  1336 ;; This function calls:
  1337 ;;		Nothing
  1338 ;; This function is called by:
  1339 ;;		_main
  1340 ;; This function uses a non-reentrant model
  1341 ;;
  1342                           
  1343                           	psect	text1
  1344  001662                     __ptext1:
  1345                           	opt callstack 0
  1346  001662                     _turn_off_everything:
  1347                           	opt callstack 0
  1348  001662  FFFF               	dw	65535	; assembler added errata NOP
  1349                           
  1350                           ;main.c: 161: LATB = 0;
  1351                           
  1352                           ; BSR set to: 0
  1353                           ;incstack = 0
  1354  001664  0E00               	movlw	0
  1355  001666  6E8A               	movwf	3978,c	;volatile
  1356  001668  0012               	return		;funcret
  1357  00166A  FFFF               	dw	65535	; errata NOP
  1358  00166C                     __end_of_turn_off_everything:
  1359                           	opt callstack 0
  1360                           
  1361 ;; *************** function _start_engine *****************
  1362 ;; Defined at:
  1363 ;;		line 168 in file "main.c"
  1364 ;; Parameters:    Size  Location     Type
  1365 ;;		None
  1366 ;; Auto vars:     Size  Location     Type
  1367 ;;		None
  1368 ;; Return value:  Size  Location     Type
  1369 ;;                  1    wreg      void 
  1370 ;; Registers used:
  1371 ;;		wreg, status,2
  1372 ;; Tracked objects:
  1373 ;;		On entry : 0/0
  1374 ;;		On exit  : 0/0
  1375 ;;		Unchanged: 0/0
  1376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1377 ;;      Params:         0       0       0       0       0       0       0
  1378 ;;      Locals:         0       0       0       0       0       0       0
  1379 ;;      Temps:          0       0       0       0       0       0       0
  1380 ;;      Totals:         0       0       0       0       0       0       0
  1381 ;;Total ram usage:        0 bytes
  1382 ;; Hardware stack levels used:    1
  1383 ;; This function calls:
  1384 ;;		Nothing
  1385 ;; This function is called by:
  1386 ;;		_main
  1387 ;; This function uses a non-reentrant model
  1388 ;;
  1389                           
  1390                           	psect	text2
  1391  001658                     __ptext2:
  1392                           	opt callstack 0
  1393  001658                     _start_engine:
  1394                           	opt callstack 0
  1395  001658  FFFF               	dw	65535	; assembler added errata NOP
  1396                           
  1397                           ;main.c: 169: LATB = 2;
  1398                           
  1399                           ;incstack = 0
  1400  00165A  0E02               	movlw	2
  1401  00165C  6E8A               	movwf	3978,c	;volatile
  1402  00165E  0012               	return		;funcret
  1403  001660  FFFF               	dw	65535	; errata NOP
  1404  001662                     __end_of_start_engine:
  1405                           	opt callstack 0
  1406                           
  1407 ;; *************** function _sprintf *****************
  1408 ;; Defined at:
  1409 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;  sp              2   76[COMRAM] PTR unsigned char 
  1412 ;;		 -> main@message(20), 
  1413 ;;  f               2   78[COMRAM] PTR const unsigned char 
  1414 ;;		 -> STR_4(19), STR_3(19), 
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;  fval            4  108[COMRAM] PTR const unsigned char 
  1417 ;;  tmpval          4   98[COMRAM] struct .
  1418 ;;  val             4   94[COMRAM] unsigned long 
  1419 ;;  cp              3    0        PTR const unsigned char 
  1420 ;;  prec            2  112[COMRAM] int 
  1421 ;;  width           2  106[COMRAM] int 
  1422 ;;  flag            2  104[COMRAM] unsigned short 
  1423 ;;  eexp            2  102[COMRAM] int 
  1424 ;;  ap              2   92[COMRAM] PTR void [1]
  1425 ;;		 -> ?_sprintf(2), 
  1426 ;;  len             2    0        unsigned int 
  1427 ;;  c               1  114[COMRAM] unsigned char 
  1428 ;;  d               1    0        unsigned char 
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  2   76[COMRAM] int 
  1431 ;; Registers used:
  1432 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1438 ;;      Params:         8       0       0       0       0       0       0
  1439 ;;      Locals:        27       0       0       0       0       0       0
  1440 ;;      Temps:          4       0       0       0       0       0       0
  1441 ;;      Totals:        39       0       0       0       0       0       0
  1442 ;;Total ram usage:       39 bytes
  1443 ;; Hardware stack levels used:    1
  1444 ;; Hardware stack levels required when called:    2
  1445 ;; This function calls:
  1446 ;;		___awdiv
  1447 ;;		___fladd
  1448 ;;		___fleq
  1449 ;;		___flge
  1450 ;;		___flmul
  1451 ;;		___flneg
  1452 ;;		___flsub
  1453 ;;		___fltol
  1454 ;;		___lldiv
  1455 ;;		___llmod
  1456 ;;		___wmul
  1457 ;;		___xxtofl
  1458 ;;		__div_to_l_
  1459 ;;		__tdiv_to_l_
  1460 ;;		_fround
  1461 ;;		_isdigit
  1462 ;;		_scale
  1463 ;; This function is called by:
  1464 ;;		_main
  1465 ;; This function uses a non-reentrant model
  1466 ;;
  1467                           
  1468                           	psect	text3
  1469  00359C                     __ptext3:
  1470                           	opt callstack 0
  1471  00359C                     _sprintf:
  1472                           	opt callstack 0
  1473  00359C  FFFF               	dw	65535	; assembler added errata NOP
  1474                           
  1475                           ;doprnt.c: 502: va_list ap;;doprnt.c: 507: char c;;doprnt.c: 509: int width;;doprnt.c: 5
      +                          12: int prec;;doprnt.c: 520: unsigned short flag;;doprnt.c: 527: char d;;doprnt.c: 528: 
      +                          double fval;;doprnt.c: 529: int eexp;;doprnt.c: 535: union {;doprnt.c: 536: unsigned lon
      +                          g vd;;doprnt.c: 537: double integ;;doprnt.c: 538: } tmpval;;doprnt.c: 540: unsigned long
      +                           val;;doprnt.c: 541: unsigned len;;doprnt.c: 542: const char * cp;;doprnt.c: 545: *ap = 
      +                          __va_start();
  1476                           
  1477                           ;incstack = 0
  1478  00359E  0E51               	movlw	low (?_sprintf+4)
  1479  0035A0  6E5D               	movwf	sprintf@ap,c
  1480  0035A2  0E00               	movlw	high (?_sprintf+4)
  1481  0035A4  6E5E               	movwf	sprintf@ap+1,c
  1482                           
  1483                           ;doprnt.c: 548: while((c = *f++)) {
  1484  0035A6  EFE8  F01F         	goto	l3797
  1485  0035AA                     l3505:
  1486  0035AA  FFFF               	dw	65535	; assembler added errata NOP
  1487                           
  1488                           ;doprnt.c: 550: if(c != '%')
  1489  0035AC  0E25               	movlw	37
  1490  0035AE  1873               	xorwf	sprintf@c,w,c
  1491  0035B0  B4D8               	btfsc	status,2,c
  1492  0035B2  D00B               	goto	l3511
  1493                           
  1494                           ;doprnt.c: 552: {;doprnt.c: 553: ((*sp++ = (c)));
  1495  0035B4  C04D  FFD9         	movff	sprintf@sp,fsr2l
  1496  0035B8  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  1497  0035BC  C073  FFDF         	movff	sprintf@c,indf2
  1498  0035C0                     l3509:
  1499  0035C0  FFFF               	dw	65535	; assembler added errata NOP
  1500  0035C2  4A4D               	infsnz	sprintf@sp,f,c
  1501  0035C4  2A4E               	incf	sprintf@sp+1,f,c
  1502                           
  1503                           ;doprnt.c: 554: continue;
  1504  0035C6  EFE8  F01F         	goto	l3797
  1505  0035CA                     l3511:
  1506  0035CA  FFFF               	dw	65535	; assembler added errata NOP
  1507                           
  1508                           ;doprnt.c: 555: };doprnt.c: 558: width = 0;
  1509  0035CC  0E00               	movlw	0
  1510  0035CE  6E6C               	movwf	sprintf@width+1,c
  1511  0035D0  0E00               	movlw	0
  1512  0035D2  6E6B               	movwf	sprintf@width,c
  1513                           
  1514                           ;doprnt.c: 560: flag = 0;
  1515  0035D4  0E00               	movlw	0
  1516  0035D6  6E6A               	movwf	sprintf@flag+1,c
  1517  0035D8  0E00               	movlw	0
  1518  0035DA  6E69               	movwf	sprintf@flag,c
  1519  0035DC  D004               	goto	l3517
  1520  0035DE                     l3513:
  1521  0035DE  FFFF               	dw	65535	; assembler added errata NOP
  1522                           
  1523                           ;doprnt.c: 592: flag |= 0x04;
  1524  0035E0  8469               	bsf	sprintf@flag,2,c
  1525                           
  1526                           ;doprnt.c: 593: f++;
  1527  0035E2  4A4F               	infsnz	sprintf@f,f,c
  1528  0035E4  2A50               	incf	sprintf@f+1,f,c
  1529  0035E6                     l3517:
  1530  0035E6  FFFF               	dw	65535	; assembler added errata NOP
  1531  0035E8  C04F  FFF6         	movff	sprintf@f,tblptrl
  1532  0035EC  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1533  0035F0                     	if	0	;tblptru may be non-zero
  1534  0035F0                     	endif
  1535  0035F0                     	if	0	;tblptru may be non-zero
  1536  0035F0                     	endif
  1537  0035F0  0008               	tblrd		*
  1538  0035F2  FFFF               	dw	65535	; errata NOP
  1539  0035F4  50F5               	movf	tablat,w,c
  1540                           
  1541                           ; Switch size 1, requested type "simple"
  1542                           ; Number of cases is 1, Range of values is 48 to 48
  1543                           ; switch strategies available:
  1544                           ; Name         Instructions Cycles
  1545                           ; simple_byte            4     3 (average)
  1546                           ;	Chosen strategy is simple_byte
  1547  0035F6  0A30               	xorlw	48	; case 48
  1548  0035F8  B4D8               	btfsc	status,2,c
  1549  0035FA  D7F1               	goto	l3513
  1550                           
  1551                           ;doprnt.c: 609: if(isdigit((unsigned)*f)) {
  1552  0035FC  C04F  FFF6         	movff	sprintf@f,tblptrl
  1553  003600  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1554  003604                     	if	0	;tblptru may be non-zero
  1555  003604                     	endif
  1556  003604                     	if	0	;tblptru may be non-zero
  1557  003604                     	endif
  1558  003604  0008               	tblrd		*
  1559  003606  FFFF               	dw	65535	; errata NOP
  1560  003608  50F5               	movf	tablat,w,c
  1561  00360A  EC5D  F00B         	call	_isdigit
  1562  00360E  A0D8               	btfss	status,0,c
  1563  003610  D035               	goto	u3850
  1564                           
  1565                           ;doprnt.c: 610: width = 0;
  1566  003612  0E00               	movlw	0
  1567  003614  6E6C               	movwf	sprintf@width+1,c
  1568  003616  0E00               	movlw	0
  1569  003618  6E6B               	movwf	sprintf@width,c
  1570  00361A                     l3523:
  1571  00361A  FFFF               	dw	65535	; assembler added errata NOP
  1572                           
  1573                           ;doprnt.c: 612: width *= 10;
  1574  00361C  C06B  F001         	movff	sprintf@width,___wmul@multiplier
  1575  003620  C06C  F002         	movff	sprintf@width+1,___wmul@multiplier+1
  1576  003624  0E00               	movlw	0
  1577  003626  6E04               	movwf	___wmul@multiplicand+1,c
  1578  003628  0E0A               	movlw	10
  1579  00362A  6E03               	movwf	___wmul@multiplicand,c
  1580  00362C  EC6F  F00B         	call	___wmul	;wreg free
  1581  003630  C001  F06B         	movff	?___wmul,sprintf@width
  1582  003634  C002  F06C         	movff	?___wmul+1,sprintf@width+1
  1583                           
  1584                           ;doprnt.c: 613: width += *f++ - '0';
  1585  003638  0ED0               	movlw	208
  1586  00363A  6E55               	movwf	??_sprintf& (0+255),c
  1587  00363C  0EFF               	movlw	255
  1588  00363E  6E56               	movwf	(??_sprintf+1)& (0+255),c
  1589  003640  C04F  FFF6         	movff	sprintf@f,tblptrl
  1590  003644  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1591  003648                     	if	0	;tblptru may be non-zero
  1592  003648                     	endif
  1593  003648                     	if	0	;tblptru may be non-zero
  1594  003648                     	endif
  1595  003648  0008               	tblrd		*
  1596  00364A  FFFF               	dw	65535	; errata NOP
  1597  00364C  50F5               	movf	tablat,w,c
  1598  00364E  6E57               	movwf	(??_sprintf+2)& (0+255),c
  1599  003650  6A58               	clrf	(??_sprintf+3)& (0+255),c
  1600  003652  5055               	movf	??_sprintf,w,c
  1601  003654  2657               	addwf	??_sprintf+2,f,c
  1602  003656  5056               	movf	??_sprintf+1,w,c
  1603  003658  2258               	addwfc	??_sprintf+3,f,c
  1604  00365A  5057               	movf	??_sprintf+2,w,c
  1605  00365C  266B               	addwf	sprintf@width,f,c
  1606  00365E  5058               	movf	??_sprintf+3,w,c
  1607  003660  226C               	addwfc	sprintf@width+1,f,c
  1608  003662  4A4F               	infsnz	sprintf@f,f,c
  1609  003664  2A50               	incf	sprintf@f+1,f,c
  1610                           
  1611                           ;doprnt.c: 614: } while(isdigit((unsigned)*f));
  1612  003666  C04F  FFF6         	movff	sprintf@f,tblptrl
  1613  00366A  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1614  00366E                     	if	0	;tblptru may be non-zero
  1615  00366E                     	endif
  1616  00366E                     	if	0	;tblptru may be non-zero
  1617  00366E                     	endif
  1618  00366E  0008               	tblrd		*
  1619  003670  FFFF               	dw	65535	; errata NOP
  1620  003672  50F5               	movf	tablat,w,c
  1621  003674  EC5D  F00B         	call	_isdigit
  1622  003678  B0D8               	btfsc	status,0,c
  1623  00367A  D7CF               	goto	l3523
  1624  00367C                     u3850:
  1625  00367C  FFFF               	dw	65535	; assembler added errata NOP
  1626                           
  1627                           ;doprnt.c: 620: };doprnt.c: 623: if(*f == '.') {
  1628  00367E  C04F  FFF6         	movff	sprintf@f,tblptrl
  1629  003682  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1630  003686                     	if	0	;tblptru may be non-zero
  1631  003686                     	endif
  1632  003686                     	if	0	;tblptru may be non-zero
  1633  003686                     	endif
  1634  003686  0008               	tblrd		*
  1635  003688  FFFF               	dw	65535	; errata NOP
  1636  00368A  50F5               	movf	tablat,w,c
  1637  00368C  0A2E               	xorlw	46
  1638  00368E  A4D8               	btfss	status,2,c
  1639  003690  D032               	goto	l3543
  1640                           
  1641                           ;doprnt.c: 624: flag |= 0x4000;
  1642  003692  8C6A               	bsf	sprintf@flag+1,6,c
  1643                           
  1644                           ;doprnt.c: 625: f++;
  1645  003694  4A4F               	infsnz	sprintf@f,f,c
  1646  003696  2A50               	incf	sprintf@f+1,f,c
  1647                           
  1648                           ;doprnt.c: 639: {;doprnt.c: 640: prec = 0;
  1649  003698  0E00               	movlw	0
  1650  00369A  6E72               	movwf	sprintf@prec+1,c
  1651  00369C  0E00               	movlw	0
  1652  00369E  6E71               	movwf	sprintf@prec,c
  1653                           
  1654                           ;doprnt.c: 641: while(isdigit((unsigned)*f))
  1655  0036A0  D01D               	goto	l3541
  1656  0036A2                     l3537:
  1657  0036A2  FFFF               	dw	65535	; assembler added errata NOP
  1658                           
  1659                           ;doprnt.c: 642: prec = prec*10 + *f++ - '0';
  1660  0036A4  C071  F001         	movff	sprintf@prec,___wmul@multiplier
  1661  0036A8  C072  F002         	movff	sprintf@prec+1,___wmul@multiplier+1
  1662  0036AC  0E00               	movlw	0
  1663  0036AE  6E04               	movwf	___wmul@multiplicand+1,c
  1664  0036B0  0E0A               	movlw	10
  1665  0036B2  6E03               	movwf	___wmul@multiplicand,c
  1666  0036B4  EC6F  F00B         	call	___wmul	;wreg free
  1667  0036B8  C04F  FFF6         	movff	sprintf@f,tblptrl
  1668  0036BC  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1669  0036C0                     	if	0	;tblptru may be non-zero
  1670  0036C0                     	endif
  1671  0036C0                     	if	0	;tblptru may be non-zero
  1672  0036C0                     	endif
  1673  0036C0  0008               	tblrd		*
  1674  0036C2  FFFF               	dw	65535	; errata NOP
  1675  0036C4  50F5               	movf	tablat,w,c
  1676  0036C6  2601               	addwf	?___wmul,f,c
  1677  0036C8  0E00               	movlw	0
  1678  0036CA  2202               	addwfc	?___wmul+1,f,c
  1679  0036CC  0ED0               	movlw	208
  1680  0036CE  2401               	addwf	?___wmul,w,c
  1681  0036D0  6E71               	movwf	sprintf@prec,c
  1682  0036D2  0EFF               	movlw	255
  1683  0036D4  2002               	addwfc	?___wmul+1,w,c
  1684  0036D6  6E72               	movwf	sprintf@prec+1,c
  1685  0036D8  4A4F               	infsnz	sprintf@f,f,c
  1686  0036DA  2A50               	incf	sprintf@f+1,f,c
  1687  0036DC                     l3541:
  1688  0036DC  FFFF               	dw	65535	; assembler added errata NOP
  1689  0036DE  C04F  FFF6         	movff	sprintf@f,tblptrl
  1690  0036E2  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1691  0036E6                     	if	0	;tblptru may be non-zero
  1692  0036E6                     	endif
  1693  0036E6                     	if	0	;tblptru may be non-zero
  1694  0036E6                     	endif
  1695  0036E6  0008               	tblrd		*
  1696  0036E8  FFFF               	dw	65535	; errata NOP
  1697  0036EA  50F5               	movf	tablat,w,c
  1698  0036EC  EC5D  F00B         	call	_isdigit
  1699  0036F0  A0D8               	btfss	status,0,c
  1700  0036F2  D00B               	goto	l3551
  1701  0036F4  D7D6               	goto	l3537
  1702  0036F6                     l3543:
  1703  0036F6  FFFF               	dw	65535	; assembler added errata NOP
  1704                           
  1705                           ;doprnt.c: 645: prec = 0;
  1706  0036F8  0E00               	movlw	0
  1707  0036FA  6E72               	movwf	sprintf@prec+1,c
  1708  0036FC  0E00               	movlw	0
  1709  0036FE  6E71               	movwf	sprintf@prec,c
  1710                           
  1711                           ;doprnt.c: 647: flag |= 0x1000;
  1712  003700  886A               	bsf	sprintf@flag+1,4,c
  1713  003702  D003               	goto	l3551
  1714  003704                     l3547:
  1715  003704  FFFF               	dw	65535	; assembler added errata NOP
  1716                           
  1717                           ;doprnt.c: 682: flag |= 0x400;
  1718  003706  846A               	bsf	sprintf@flag+1,2,c
  1719                           
  1720                           ;doprnt.c: 683: break;
  1721  003708  D015               	goto	l3553
  1722  00370A                     l3551:
  1723  00370A  FFFF               	dw	65535	; assembler added errata NOP
  1724  00370C  C04F  FFF6         	movff	sprintf@f,tblptrl
  1725  003710  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1726  003714  4A4F               	infsnz	sprintf@f,f,c
  1727  003716  2A50               	incf	sprintf@f+1,f,c
  1728  003718                     	if	0	;tblptru may be non-zero
  1729  003718                     	endif
  1730  003718                     	if	0	;tblptru may be non-zero
  1731  003718                     	endif
  1732  003718  0008               	tblrd		*
  1733  00371A  FFFF               	dw	65535	; errata NOP
  1734  00371C  CFF5 F073          	movff	tablat,sprintf@c
  1735  003720  5073               	movf	sprintf@c,w,c
  1736                           
  1737                           ; Switch size 1, requested type "simple"
  1738                           ; Number of cases is 2, Range of values is 0 to 102
  1739                           ; switch strategies available:
  1740                           ; Name         Instructions Cycles
  1741                           ; simple_byte            7     4 (average)
  1742                           ;	Chosen strategy is simple_byte
  1743  003722  0A00               	xorlw	0	; case 0
  1744  003724  B4D8               	btfsc	status,2,c
  1745  003726  EFF7  F01F         	goto	u4320
  1746  00372A  0A66               	xorlw	102	; case 102
  1747  00372C  B4D8               	btfsc	status,2,c
  1748  00372E  D7EA               	goto	l3547
  1749  003730  EFE8  F01F         	goto	l3797
  1750  003734                     l3553:
  1751  003734  FFFF               	dw	65535	; assembler added errata NOP
  1752                           
  1753                           ;doprnt.c: 844: if(flag & (0x700)) {
  1754  003736  0E07               	movlw	7
  1755  003738  146A               	andwf	sprintf@flag+1,w,c
  1756  00373A  B4D8               	btfsc	status,2,c
  1757  00373C  D38B               	goto	l3733
  1758                           
  1759                           ;doprnt.c: 846: if(flag & 0x1000)
  1760  00373E  A86A               	btfss	sprintf@flag+1,4,c
  1761  003740  D004               	goto	l3559
  1762                           
  1763                           ;doprnt.c: 848: prec = 6;
  1764  003742  0E00               	movlw	0
  1765  003744  6E72               	movwf	sprintf@prec+1,c
  1766  003746  0E06               	movlw	6
  1767  003748  6E71               	movwf	sprintf@prec,c
  1768  00374A                     l3559:
  1769  00374A  FFFF               	dw	65535	; assembler added errata NOP
  1770                           
  1771                           ;doprnt.c: 849: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1772  00374C  C05D  FFD9         	movff	sprintf@ap,fsr2l
  1773  003750  C05E  FFDA         	movff	sprintf@ap+1,fsr2h
  1774  003754  CFDE F06D          	movff	postinc2,sprintf@fval
  1775  003758  CFDE F06E          	movff	postinc2,sprintf@fval+1
  1776  00375C  CFDE F06F          	movff	postinc2,sprintf@fval+2
  1777  003760  CFDE F070          	movff	postinc2,sprintf@fval+3
  1778  003764  0E04               	movlw	4
  1779  003766  265D               	addwf	sprintf@ap,f,c
  1780  003768  0E00               	movlw	0
  1781  00376A  225E               	addwfc	sprintf@ap+1,f,c
  1782                           
  1783                           ;doprnt.c: 850: if(fval < 0.0) {
  1784  00376C  AE70               	btfss	sprintf@fval+3,7,c
  1785  00376E  D014               	goto	l3569
  1786                           
  1787                           ;doprnt.c: 851: fval = -fval;
  1788  003770  C06D  F001         	movff	sprintf@fval,___flneg@f1
  1789  003774  C06E  F002         	movff	sprintf@fval+1,___flneg@f1+1
  1790  003778  C06F  F003         	movff	sprintf@fval+2,___flneg@f1+2
  1791  00377C  C070  F004         	movff	sprintf@fval+3,___flneg@f1+3
  1792  003780  EC84  F00B         	call	___flneg	;wreg free
  1793  003784  C001  F06D         	movff	?___flneg,sprintf@fval
  1794  003788  C002  F06E         	movff	?___flneg+1,sprintf@fval+1
  1795  00378C  C003  F06F         	movff	?___flneg+2,sprintf@fval+2
  1796  003790  C004  F070         	movff	?___flneg+3,sprintf@fval+3
  1797                           
  1798                           ;doprnt.c: 852: flag |= 0x03;
  1799  003794  0E03               	movlw	3
  1800  003796  1269               	iorwf	sprintf@flag,f,c
  1801  003798                     l3569:
  1802  003798  FFFF               	dw	65535	; assembler added errata NOP
  1803                           
  1804                           ;doprnt.c: 853: };doprnt.c: 854: eexp = 0;
  1805  00379A  0E00               	movlw	0
  1806  00379C  6E68               	movwf	sprintf@eexp+1,c
  1807  00379E  0E00               	movlw	0
  1808  0037A0  6E67               	movwf	sprintf@eexp,c
  1809                           
  1810                           ;doprnt.c: 855: if( fval!=0) {
  1811  0037A2  C06D  F001         	movff	sprintf@fval,___fleq@ff1
  1812  0037A6  C06E  F002         	movff	sprintf@fval+1,___fleq@ff1+1
  1813  0037AA  C06F  F003         	movff	sprintf@fval+2,___fleq@ff1+2
  1814  0037AE  C070  F004         	movff	sprintf@fval+3,___fleq@ff1+3
  1815  0037B2  0E00               	movlw	0
  1816  0037B4  6E05               	movwf	___fleq@ff2,c
  1817  0037B6  0E00               	movlw	0
  1818  0037B8  6E06               	movwf	___fleq@ff2+1,c
  1819  0037BA  0E00               	movlw	0
  1820  0037BC  6E07               	movwf	___fleq@ff2+2,c
  1821  0037BE  0E00               	movlw	0
  1822  0037C0  6E08               	movwf	___fleq@ff2+3,c
  1823  0037C2  ECBE  F00D         	call	___fleq	;wreg free
  1824  0037C6  B0D8               	btfsc	status,0,c
  1825  0037C8  D081               	goto	l3597
  1826                           
  1827                           ;doprnt.c: 856: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
  1828  0037CA  346F               	rlcf	sprintf@fval+2,w,c
  1829  0037CC  3470               	rlcf	sprintf@fval+3,w,c
  1830  0037CE  0F82               	addlw	130
  1831  0037D0  6E67               	movwf	sprintf@eexp,c
  1832  0037D2  6A68               	clrf	sprintf@eexp+1,c
  1833  0037D4  0EFF               	movlw	255
  1834  0037D6  2268               	addwfc	sprintf@eexp+1,f,c
  1835                           
  1836                           ;doprnt.c: 857: eexp--;
  1837  0037D8  0667               	decf	sprintf@eexp,f,c
  1838  0037DA  A0D8               	btfss	status,0,c
  1839  0037DC  0668               	decf	sprintf@eexp+1,f,c
  1840                           
  1841                           ;doprnt.c: 858: eexp *= 3;
  1842  0037DE  C067  F001         	movff	sprintf@eexp,___wmul@multiplier
  1843  0037E2  C068  F002         	movff	sprintf@eexp+1,___wmul@multiplier+1
  1844  0037E6  0E00               	movlw	0
  1845  0037E8  6E04               	movwf	___wmul@multiplicand+1,c
  1846  0037EA  0E03               	movlw	3
  1847  0037EC  6E03               	movwf	___wmul@multiplicand,c
  1848  0037EE  EC6F  F00B         	call	___wmul	;wreg free
  1849  0037F2  C001  F067         	movff	?___wmul,sprintf@eexp
  1850  0037F6  C002  F068         	movff	?___wmul+1,sprintf@eexp+1
  1851                           
  1852                           ;doprnt.c: 859: eexp /= 10;
  1853  0037FA  C067  F007         	movff	sprintf@eexp,___awdiv@dividend
  1854  0037FE  C068  F008         	movff	sprintf@eexp+1,___awdiv@dividend+1
  1855  003802  0E00               	movlw	0
  1856  003804  6E0A               	movwf	___awdiv@divisor+1,c
  1857  003806  0E0A               	movlw	10
  1858  003808  6E09               	movwf	___awdiv@divisor,c
  1859  00380A  EC09  F00E         	call	___awdiv	;wreg free
  1860  00380E  C007  F067         	movff	?___awdiv,sprintf@eexp
  1861  003812  C008  F068         	movff	?___awdiv+1,sprintf@eexp+1
  1862                           
  1863                           ;doprnt.c: 860: if(eexp < 0)
  1864  003816  AE68               	btfss	sprintf@eexp+1,7,c
  1865  003818  D003               	goto	l3585
  1866                           
  1867                           ;doprnt.c: 861: eexp--;
  1868  00381A  0667               	decf	sprintf@eexp,f,c
  1869  00381C  A0D8               	btfss	status,0,c
  1870  00381E  0668               	decf	sprintf@eexp+1,f,c
  1871  003820                     l3585:
  1872  003820  FFFF               	dw	65535	; assembler added errata NOP
  1873                           
  1874                           ;doprnt.c: 865: tmpval.integ = scale(-eexp);
  1875  003822  5067               	movf	sprintf@eexp,w,c
  1876  003824  0800               	sublw	0
  1877  003826  ECC6  F018         	call	_scale
  1878  00382A  C028  F063         	movff	?_scale,sprintf@tmpval
  1879  00382E  C029  F064         	movff	?_scale+1,sprintf@tmpval+1
  1880  003832  C02A  F065         	movff	?_scale+2,sprintf@tmpval+2
  1881  003836  C02B  F066         	movff	?_scale+3,sprintf@tmpval+3
  1882                           
  1883                           ;doprnt.c: 866: tmpval.integ *= fval;
  1884  00383A  C063  F00F         	movff	sprintf@tmpval,___flmul@b
  1885  00383E  C064  F010         	movff	sprintf@tmpval+1,___flmul@b+1
  1886  003842  C065  F011         	movff	sprintf@tmpval+2,___flmul@b+2
  1887  003846  C066  F012         	movff	sprintf@tmpval+3,___flmul@b+3
  1888  00384A  C06D  F013         	movff	sprintf@fval,___flmul@a
  1889  00384E  C06E  F014         	movff	sprintf@fval+1,___flmul@a+1
  1890  003852  C06F  F015         	movff	sprintf@fval+2,___flmul@a+2
  1891  003856  C070  F016         	movff	sprintf@fval+3,___flmul@a+3
  1892  00385A  EC05  F017         	call	___flmul	;wreg free
  1893  00385E  C00F  F063         	movff	?___flmul,sprintf@tmpval
  1894  003862  C010  F064         	movff	?___flmul+1,sprintf@tmpval+1
  1895  003866  C011  F065         	movff	?___flmul+2,sprintf@tmpval+2
  1896  00386A  C012  F066         	movff	?___flmul+3,sprintf@tmpval+3
  1897                           
  1898                           ;doprnt.c: 867: if(tmpval.integ < 1.0)
  1899  00386E  C063  F001         	movff	sprintf@tmpval,___flge@ff1
  1900  003872  C064  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  1901  003876  C065  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  1902  00387A  C066  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  1903  00387E  0E00               	movlw	0
  1904  003880  6E05               	movwf	___flge@ff2,c
  1905  003882  0E00               	movlw	0
  1906  003884  6E06               	movwf	___flge@ff2+1,c
  1907  003886  0E80               	movlw	128
  1908  003888  6E07               	movwf	___flge@ff2+2,c
  1909  00388A  0E3F               	movlw	63
  1910  00388C  6E08               	movwf	___flge@ff2+3,c
  1911  00388E  ECBF  F00E         	call	___flge	;wreg free
  1912  003892  B0D8               	btfsc	status,0,c
  1913  003894  D004               	goto	l3593
  1914                           
  1915                           ;doprnt.c: 868: eexp--;
  1916  003896  0667               	decf	sprintf@eexp,f,c
  1917  003898  A0D8               	btfss	status,0,c
  1918  00389A  0668               	decf	sprintf@eexp+1,f,c
  1919  00389C  D017               	goto	l3597
  1920  00389E                     l3593:
  1921  00389E  FFFF               	dw	65535	; assembler added errata NOP
  1922                           
  1923                           ;doprnt.c: 869: else if(tmpval.integ >= 10.0)
  1924  0038A0  C063  F001         	movff	sprintf@tmpval,___flge@ff1
  1925  0038A4  C064  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  1926  0038A8  C065  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  1927  0038AC  C066  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  1928  0038B0  0E00               	movlw	0
  1929  0038B2  6E05               	movwf	___flge@ff2,c
  1930  0038B4  0E00               	movlw	0
  1931  0038B6  6E06               	movwf	___flge@ff2+1,c
  1932  0038B8  0E20               	movlw	32
  1933  0038BA  6E07               	movwf	___flge@ff2+2,c
  1934  0038BC  0E41               	movlw	65
  1935  0038BE  6E08               	movwf	___flge@ff2+3,c
  1936  0038C0  ECBF  F00E         	call	___flge	;wreg free
  1937  0038C4  A0D8               	btfss	status,0,c
  1938  0038C6  D002               	goto	l3597
  1939                           
  1940                           ;doprnt.c: 870: eexp++;
  1941  0038C8  4A67               	infsnz	sprintf@eexp,f,c
  1942  0038CA  2A68               	incf	sprintf@eexp+1,f,c
  1943  0038CC                     l3597:
  1944  0038CC  FFFF               	dw	65535	; assembler added errata NOP
  1945                           
  1946                           ;doprnt.c: 871: };doprnt.c: 1131: if(prec <= 12)
  1947  0038CE  BE72               	btfsc	sprintf@prec+1,7,c
  1948  0038D0  D006               	goto	u3950
  1949  0038D2  5072               	movf	sprintf@prec+1,w,c
  1950  0038D4  E122               	bnz	l3601
  1951  0038D6  0E0D               	movlw	13
  1952  0038D8  5C71               	subwf	sprintf@prec,w,c
  1953  0038DA  B0D8               	btfsc	status,0,c
  1954  0038DC  D01E               	goto	l3601
  1955  0038DE                     u3950:
  1956  0038DE  FFFF               	dw	65535	; assembler added errata NOP
  1957                           
  1958                           ;doprnt.c: 1132: fval += fround((unsigned int)prec);
  1959  0038E0  C06D  F035         	movff	sprintf@fval,___fladd@b
  1960  0038E4  C06E  F036         	movff	sprintf@fval+1,___fladd@b+1
  1961  0038E8  C06F  F037         	movff	sprintf@fval+2,___fladd@b+2
  1962  0038EC  C070  F038         	movff	sprintf@fval+3,___fladd@b+3
  1963  0038F0  5071               	movf	sprintf@prec,w,c
  1964  0038F2  ECB1  F012         	call	_fround
  1965  0038F6  C028  F039         	movff	?_fround,___fladd@a
  1966  0038FA  C029  F03A         	movff	?_fround+1,___fladd@a+1
  1967  0038FE  C02A  F03B         	movff	?_fround+2,___fladd@a+2
  1968  003902  C02B  F03C         	movff	?_fround+3,___fladd@a+3
  1969  003906  EC63  F015         	call	___fladd	;wreg free
  1970  00390A  C035  F06D         	movff	?___fladd,sprintf@fval
  1971  00390E  C036  F06E         	movff	?___fladd+1,sprintf@fval+1
  1972  003912  C037  F06F         	movff	?___fladd+2,sprintf@fval+2
  1973  003916  C038  F070         	movff	?___fladd+3,sprintf@fval+3
  1974  00391A                     l3601:
  1975  00391A  FFFF               	dw	65535	; assembler added errata NOP
  1976                           
  1977                           ;doprnt.c: 1135: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  1978  00391C  BE68               	btfsc	sprintf@eexp+1,7,c
  1979  00391E  D006               	goto	u3960
  1980  003920  5068               	movf	sprintf@eexp+1,w,c
  1981  003922  E131               	bnz	l3609
  1982  003924  0E0A               	movlw	10
  1983  003926  5C67               	subwf	sprintf@eexp,w,c
  1984  003928  B0D8               	btfsc	status,0,c
  1985  00392A  D02C               	goto	u3990
  1986  00392C                     u3960:
  1987  00392C  FFFF               	dw	65535	; assembler added errata NOP
  1988  00392E  C06D  F001         	movff	sprintf@fval,___fleq@ff1
  1989  003932  C06E  F002         	movff	sprintf@fval+1,___fleq@ff1+1
  1990  003936  C06F  F003         	movff	sprintf@fval+2,___fleq@ff1+2
  1991  00393A  C070  F004         	movff	sprintf@fval+3,___fleq@ff1+3
  1992  00393E  0E00               	movlw	0
  1993  003940  6E05               	movwf	___fleq@ff2,c
  1994  003942  0E00               	movlw	0
  1995  003944  6E06               	movwf	___fleq@ff2+1,c
  1996  003946  0E00               	movlw	0
  1997  003948  6E07               	movwf	___fleq@ff2+2,c
  1998  00394A  0E00               	movlw	0
  1999  00394C  6E08               	movwf	___fleq@ff2+3,c
  2000  00394E  ECBE  F00D         	call	___fleq	;wreg free
  2001  003952  B0D8               	btfsc	status,0,c
  2002  003954  D062               	goto	l3623
  2003  003956  C06D  F031         	movff	sprintf@fval,___fltol@f1
  2004  00395A  C06E  F032         	movff	sprintf@fval+1,___fltol@f1+1
  2005  00395E  C06F  F033         	movff	sprintf@fval+2,___fltol@f1+2
  2006  003962  C070  F034         	movff	sprintf@fval+3,___fltol@f1+3
  2007  003966  EC55  F00E         	call	___fltol	;wreg free
  2008  00396A  5031               	movf	?___fltol,w,c
  2009  00396C  1032               	iorwf	?___fltol+1,w,c
  2010  00396E  1033               	iorwf	?___fltol+2,w,c
  2011  003970  1034               	iorwf	?___fltol+3,w,c
  2012  003972  B4D8               	btfsc	status,2,c
  2013  003974  BE68               	btfsc	sprintf@eexp+1,7,c
  2014  003976  D051               	goto	l3623
  2015  003978  5068               	movf	sprintf@eexp+1,w,c
  2016  00397A  E104               	bnz	u3990
  2017  00397C  0E02               	movlw	2
  2018  00397E  5C67               	subwf	sprintf@eexp,w,c
  2019  003980  A0D8               	btfss	status,0,c
  2020  003982  D04B               	goto	l3623
  2021  003984                     u3990:
  2022  003984  FFFF               	dw	65535	; assembler added errata NOP
  2023  003986                     l3609:
  2024                           
  2025                           ;doprnt.c: 1139: if(tmpval.integ < 4.294967296){
  2026  003986  C063  F001         	movff	sprintf@tmpval,___flge@ff1
  2027  00398A  C064  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  2028  00398E  C065  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  2029  003992  C066  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  2030  003996  0E5F               	movlw	95
  2031  003998  6E05               	movwf	___flge@ff2,c
  2032  00399A  0E70               	movlw	112
  2033  00399C  6E06               	movwf	___flge@ff2+1,c
  2034  00399E  0E89               	movlw	137
  2035  0039A0  6E07               	movwf	___flge@ff2+2,c
  2036  0039A2  0E40               	movlw	64
  2037  0039A4  6E08               	movwf	___flge@ff2+3,c
  2038  0039A6  ECBF  F00E         	call	___flge	;wreg free
  2039  0039AA  B0D8               	btfsc	status,0,c
  2040  0039AC  D002               	goto	l3613
  2041                           
  2042                           ;doprnt.c: 1140: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2043  0039AE  0EF7               	movlw	247
  2044  0039B0  D002               	goto	L4
  2045  0039B2                     l3613:
  2046  0039B2  FFFF               	dw	65535	; assembler added errata NOP
  2047                           
  2048                           ;doprnt.c: 1142: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2049  0039B4  0EF8               	movlw	248
  2050  0039B6                     L4:
  2051  0039B6  FFFF               	dw	65535	; assembler added errata NOP
  2052  0039B8  2667               	addwf	sprintf@eexp,f,c
  2053  0039BA  0EFF               	movlw	255
  2054  0039BC  2268               	addwfc	sprintf@eexp+1,f,c
  2055                           
  2056                           ;doprnt.c: 1145: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  2057  0039BE  5067               	movf	sprintf@eexp,w,c
  2058  0039C0  ECC6  F018         	call	_scale
  2059  0039C4  C028  F063         	movff	?_scale,sprintf@tmpval
  2060  0039C8  C029  F064         	movff	?_scale+1,sprintf@tmpval+1
  2061  0039CC  C02A  F065         	movff	?_scale+2,sprintf@tmpval+2
  2062  0039D0  C02B  F066         	movff	?_scale+3,sprintf@tmpval+3
  2063  0039D4  C06D  F001         	movff	sprintf@fval,__div_to_l_@f1
  2064  0039D8  C06E  F002         	movff	sprintf@fval+1,__div_to_l_@f1+1
  2065  0039DC  C06F  F003         	movff	sprintf@fval+2,__div_to_l_@f1+2
  2066  0039E0  C070  F004         	movff	sprintf@fval+3,__div_to_l_@f1+3
  2067  0039E4  C063  F005         	movff	sprintf@tmpval,__div_to_l_@f2
  2068  0039E8  C064  F006         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  2069  0039EC  C065  F007         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  2070  0039F0  C066  F008         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  2071  0039F4  ECA2  F00F         	call	__div_to_l_	;wreg free
  2072  0039F8  C001  F05F         	movff	?__div_to_l_,sprintf@val
  2073  0039FC  C002  F060         	movff	?__div_to_l_+1,sprintf@val+1
  2074  003A00  C003  F061         	movff	?__div_to_l_+2,sprintf@val+2
  2075  003A04  C004  F062         	movff	?__div_to_l_+3,sprintf@val+3
  2076                           
  2077                           ;doprnt.c: 1148: fval = 0.0;
  2078  003A08  0E00               	movlw	0
  2079  003A0A  6E6D               	movwf	sprintf@fval,c
  2080  003A0C  0E00               	movlw	0
  2081  003A0E  6E6E               	movwf	sprintf@fval+1,c
  2082  003A10  0E00               	movlw	0
  2083  003A12  6E6F               	movwf	sprintf@fval+2,c
  2084  003A14  0E00               	movlw	0
  2085  003A16  6E70               	movwf	sprintf@fval+3,c
  2086                           
  2087                           ;doprnt.c: 1149: } else {
  2088  003A18  D03C               	goto	l3627
  2089  003A1A                     l3623:
  2090  003A1A  FFFF               	dw	65535	; assembler added errata NOP
  2091                           
  2092                           ;doprnt.c: 1150: val = (unsigned long)fval;
  2093  003A1C  C06D  F031         	movff	sprintf@fval,___fltol@f1
  2094  003A20  C06E  F032         	movff	sprintf@fval+1,___fltol@f1+1
  2095  003A24  C06F  F033         	movff	sprintf@fval+2,___fltol@f1+2
  2096  003A28  C070  F034         	movff	sprintf@fval+3,___fltol@f1+3
  2097  003A2C  EC55  F00E         	call	___fltol	;wreg free
  2098  003A30  C031  F05F         	movff	?___fltol,sprintf@val
  2099  003A34  C032  F060         	movff	?___fltol+1,sprintf@val+1
  2100  003A38  C033  F061         	movff	?___fltol+2,sprintf@val+2
  2101  003A3C  C034  F062         	movff	?___fltol+3,sprintf@val+3
  2102                           
  2103                           ;doprnt.c: 1151: fval -= (double)val;
  2104  003A40  C06D  F045         	movff	sprintf@fval,___flsub@b
  2105  003A44  C06E  F046         	movff	sprintf@fval+1,___flsub@b+1
  2106  003A48  C06F  F047         	movff	sprintf@fval+2,___flsub@b+2
  2107  003A4C  C070  F048         	movff	sprintf@fval+3,___flsub@b+3
  2108  003A50  C05F  F001         	movff	sprintf@val,___xxtofl@val
  2109  003A54  C060  F002         	movff	sprintf@val+1,___xxtofl@val+1
  2110  003A58  C061  F003         	movff	sprintf@val+2,___xxtofl@val+2
  2111  003A5C  C062  F004         	movff	sprintf@val+3,___xxtofl@val+3
  2112  003A60  0E00               	movlw	0
  2113  003A62  ECB3  F010         	call	___xxtofl
  2114  003A66  C001  F049         	movff	?___xxtofl,___flsub@a
  2115  003A6A  C002  F04A         	movff	?___xxtofl+1,___flsub@a+1
  2116  003A6E  C003  F04B         	movff	?___xxtofl+2,___flsub@a+2
  2117  003A72  C004  F04C         	movff	?___xxtofl+3,___flsub@a+3
  2118  003A76  ECBD  F00B         	call	___flsub	;wreg free
  2119  003A7A  C045  F06D         	movff	?___flsub,sprintf@fval
  2120  003A7E  C046  F06E         	movff	?___flsub+1,sprintf@fval+1
  2121  003A82  C047  F06F         	movff	?___flsub+2,sprintf@fval+2
  2122  003A86  C048  F070         	movff	?___flsub+3,sprintf@fval+3
  2123                           
  2124                           ;doprnt.c: 1152: eexp = 0;
  2125  003A8A  0E00               	movlw	0
  2126  003A8C  6E68               	movwf	sprintf@eexp+1,c
  2127  003A8E  0E00               	movlw	0
  2128  003A90  6E67               	movwf	sprintf@eexp,c
  2129  003A92                     l3627:
  2130  003A92  FFFF               	dw	65535	; assembler added errata NOP
  2131                           
  2132                           ;doprnt.c: 1153: };doprnt.c: 1155: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  2133  003A94  0E01               	movlw	1
  2134  003A96  6E73               	movwf	sprintf@c,c
  2135  003A98                     l3633:
  2136  003A98  FFFF               	dw	65535	; assembler added errata NOP
  2137                           
  2138                           ;doprnt.c: 1156: if(val < dpowers[c])
  2139  003A9A  5073               	movf	sprintf@c,w,c
  2140  003A9C  0D04               	mullw	4
  2141  003A9E  0E31               	movlw	low _dpowers
  2142  003AA0  24F3               	addwf	prodl,w,c
  2143  003AA2  6EF6               	movwf	tblptrl,c
  2144  003AA4  0E7F               	movlw	high _dpowers
  2145  003AA6  20F4               	addwfc	prodh,w,c
  2146  003AA8  6EF7               	movwf	tblptrh,c
  2147  003AAA                     	if	0	;There are less than 3 active tblptr bytes
  2148  003AAA                     	endif
  2149  003AAA  0009               	tblrd		*+
  2150  003AAC  FFFF               	dw	65535	; errata NOP
  2151  003AAE  50F5               	movf	tablat,w,c
  2152  003AB0  5C5F               	subwf	sprintf@val,w,c
  2153  003AB2  0009               	tblrd		*+
  2154  003AB4  FFFF               	dw	65535	; errata NOP
  2155  003AB6  50F5               	movf	tablat,w,c
  2156  003AB8  5860               	subwfb	sprintf@val+1,w,c
  2157  003ABA  0009               	tblrd		*+
  2158  003ABC  FFFF               	dw	65535	; errata NOP
  2159  003ABE  50F5               	movf	tablat,w,c
  2160  003AC0  5861               	subwfb	sprintf@val+2,w,c
  2161  003AC2  0009               	tblrd		*+
  2162  003AC4  FFFF               	dw	65535	; errata NOP
  2163  003AC6  50F5               	movf	tablat,w,c
  2164  003AC8  5862               	subwfb	sprintf@val+3,w,c
  2165  003ACA  A0D8               	btfss	status,0,c
  2166  003ACC  D005               	goto	u4020
  2167  003ACE  2A73               	incf	sprintf@c,f,c
  2168  003AD0  0E0A               	movlw	10
  2169  003AD2  1873               	xorwf	sprintf@c,w,c
  2170  003AD4  A4D8               	btfss	status,2,c
  2171  003AD6  D7E0               	goto	l3633
  2172  003AD8                     u4020:
  2173  003AD8  FFFF               	dw	65535	; assembler added errata NOP
  2174                           
  2175                           ;doprnt.c: 1161: width -= prec + c + eexp;
  2176  003ADA  5073               	movf	sprintf@c,w,c
  2177  003ADC  2471               	addwf	sprintf@prec,w,c
  2178  003ADE  6E55               	movwf	??_sprintf& (0+255),c
  2179  003AE0  0E00               	movlw	0
  2180  003AE2  2072               	addwfc	sprintf@prec+1,w,c
  2181  003AE4  6E56               	movwf	(??_sprintf+1)& (0+255),c
  2182  003AE6  5067               	movf	sprintf@eexp,w,c
  2183  003AE8  2655               	addwf	??_sprintf,f,c
  2184  003AEA  5068               	movf	sprintf@eexp+1,w,c
  2185  003AEC  2256               	addwfc	??_sprintf+1,f,c
  2186  003AEE  5055               	movf	??_sprintf,w,c
  2187  003AF0  5E6B               	subwf	sprintf@width,f,c
  2188  003AF2  5056               	movf	??_sprintf+1,w,c
  2189  003AF4  5A6C               	subwfb	sprintf@width+1,f,c
  2190                           
  2191                           ;doprnt.c: 1162: if(;doprnt.c: 1166: prec)
  2192  003AF6  5071               	movf	sprintf@prec,w,c
  2193  003AF8  1072               	iorwf	sprintf@prec+1,w,c
  2194  003AFA  B4D8               	btfsc	status,2,c
  2195  003AFC  D003               	goto	l3645
  2196                           
  2197                           ;doprnt.c: 1167: width--;
  2198  003AFE  066B               	decf	sprintf@width,f,c
  2199  003B00  A0D8               	btfss	status,0,c
  2200  003B02  066C               	decf	sprintf@width+1,f,c
  2201  003B04                     l3645:
  2202  003B04  FFFF               	dw	65535	; assembler added errata NOP
  2203                           
  2204                           ;doprnt.c: 1168: if(flag & 0x03)
  2205  003B06  0E03               	movlw	3
  2206  003B08  1469               	andwf	sprintf@flag,w,c
  2207  003B0A  6E55               	movwf	??_sprintf& (0+255),c
  2208  003B0C  0E00               	movlw	0
  2209  003B0E  146A               	andwf	sprintf@flag+1,w,c
  2210  003B10  6E56               	movwf	(??_sprintf+1)& (0+255),c
  2211  003B12  5055               	movf	??_sprintf,w,c
  2212  003B14  1056               	iorwf	??_sprintf+1,w,c
  2213  003B16  B4D8               	btfsc	status,2,c
  2214  003B18  D003               	goto	l3649
  2215                           
  2216                           ;doprnt.c: 1169: width--;
  2217  003B1A  066B               	decf	sprintf@width,f,c
  2218  003B1C  A0D8               	btfss	status,0,c
  2219  003B1E  066C               	decf	sprintf@width+1,f,c
  2220  003B20                     l3649:
  2221  003B20  FFFF               	dw	65535	; assembler added errata NOP
  2222                           
  2223                           ;doprnt.c: 1172: if(flag & 0x04) {
  2224  003B22  A469               	btfss	sprintf@flag,2,c
  2225  003B24  D034               	goto	l3671
  2226                           
  2227                           ;doprnt.c: 1176: if(flag & 0x03)
  2228  003B26  0E03               	movlw	3
  2229  003B28  1469               	andwf	sprintf@flag,w,c
  2230  003B2A  6E55               	movwf	??_sprintf& (0+255),c
  2231  003B2C  0E00               	movlw	0
  2232  003B2E  146A               	andwf	sprintf@flag+1,w,c
  2233  003B30  6E56               	movwf	(??_sprintf+1)& (0+255),c
  2234  003B32  5055               	movf	??_sprintf,w,c
  2235  003B34  1056               	iorwf	??_sprintf+1,w,c
  2236  003B36  B4D8               	btfsc	status,2,c
  2237  003B38  D015               	goto	l3663
  2238                           
  2239                           ;doprnt.c: 1178: ((*sp++ = ('-')));
  2240  003B3A  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2241  003B3E  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2242  003B42  0E2D               	movlw	45
  2243  003B44  6EDF               	movwf	indf2,c
  2244  003B46  4A4D               	infsnz	sprintf@sp,f,c
  2245  003B48  2A4E               	incf	sprintf@sp+1,f,c
  2246  003B4A  D00C               	goto	l3663
  2247  003B4C                     l3657:
  2248  003B4C  FFFF               	dw	65535	; assembler added errata NOP
  2249                           
  2250                           ;doprnt.c: 1188: ((*sp++ = ('0')));
  2251  003B4E  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2252  003B52  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2253  003B56  0E30               	movlw	48
  2254  003B58  6EDF               	movwf	indf2,c
  2255  003B5A  4A4D               	infsnz	sprintf@sp,f,c
  2256  003B5C  2A4E               	incf	sprintf@sp+1,f,c
  2257                           
  2258                           ;doprnt.c: 1189: width--;
  2259  003B5E  066B               	decf	sprintf@width,f,c
  2260  003B60  A0D8               	btfss	status,0,c
  2261  003B62  066C               	decf	sprintf@width+1,f,c
  2262  003B64                     l3663:
  2263  003B64  FFFF               	dw	65535	; assembler added errata NOP
  2264  003B66  BE6C               	btfsc	sprintf@width+1,7,c
  2265  003B68  D07B               	goto	l3687
  2266  003B6A  506C               	movf	sprintf@width+1,w,c
  2267  003B6C  E1EF               	bnz	l3657
  2268  003B6E  046B               	decf	sprintf@width,w,c
  2269  003B70  A0D8               	btfss	status,0,c
  2270  003B72  D076               	goto	l3687
  2271  003B74  D7EB               	goto	l3657
  2272  003B76                     l3665:
  2273  003B76  FFFF               	dw	65535	; assembler added errata NOP
  2274                           
  2275                           ;doprnt.c: 1200: ((*sp++ = (' ')));
  2276  003B78  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2277  003B7C  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2278  003B80  0E20               	movlw	32
  2279  003B82  6EDF               	movwf	indf2,c
  2280  003B84  4A4D               	infsnz	sprintf@sp,f,c
  2281  003B86  2A4E               	incf	sprintf@sp+1,f,c
  2282                           
  2283                           ;doprnt.c: 1201: width--;
  2284  003B88  066B               	decf	sprintf@width,f,c
  2285  003B8A  A0D8               	btfss	status,0,c
  2286  003B8C  066C               	decf	sprintf@width+1,f,c
  2287  003B8E                     l3671:
  2288  003B8E  FFFF               	dw	65535	; assembler added errata NOP
  2289  003B90  BE6C               	btfsc	sprintf@width+1,7,c
  2290  003B92  D005               	goto	u4080
  2291  003B94  506C               	movf	sprintf@width+1,w,c
  2292  003B96  E1EF               	bnz	l3665
  2293  003B98  046B               	decf	sprintf@width,w,c
  2294  003B9A  B0D8               	btfsc	status,0,c
  2295  003B9C  D7EC               	goto	l3665
  2296  003B9E                     u4080:
  2297  003B9E  FFFF               	dw	65535	; assembler added errata NOP
  2298                           
  2299                           ;doprnt.c: 1202: };doprnt.c: 1207: if(flag & 0x03)
  2300  003BA0  0E03               	movlw	3
  2301  003BA2  1469               	andwf	sprintf@flag,w,c
  2302  003BA4  6E55               	movwf	??_sprintf& (0+255),c
  2303  003BA6  0E00               	movlw	0
  2304  003BA8  146A               	andwf	sprintf@flag+1,w,c
  2305  003BAA  6E56               	movwf	(??_sprintf+1)& (0+255),c
  2306  003BAC  5055               	movf	??_sprintf,w,c
  2307  003BAE  1056               	iorwf	??_sprintf+1,w,c
  2308  003BB0  B4D8               	btfsc	status,2,c
  2309  003BB2  D056               	goto	l3687
  2310                           
  2311                           ;doprnt.c: 1209: ((*sp++ = ('-')));
  2312  003BB4  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2313  003BB8  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2314  003BBC  0E2D               	movlw	45
  2315  003BBE  FFFF               	dw	65535	; assembler added errata NOP
  2316  003BC0  6EDF               	movwf	indf2,c
  2317  003BC2  4A4D               	infsnz	sprintf@sp,f,c
  2318  003BC4  2A4E               	incf	sprintf@sp+1,f,c
  2319  003BC6  D04C               	goto	l3687
  2320  003BC8                     l3679:
  2321  003BC8  FFFF               	dw	65535	; assembler added errata NOP
  2322                           
  2323                           ;doprnt.c: 1219: {;doprnt.c: 1220: tmpval.vd = val/dpowers[c];
  2324  003BCA  C05F  F001         	movff	sprintf@val,___lldiv@dividend
  2325  003BCE  C060  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  2326  003BD2  C061  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  2327  003BD6  C062  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  2328  003BDA  5073               	movf	sprintf@c,w,c
  2329  003BDC  0D04               	mullw	4
  2330  003BDE  0E31               	movlw	low _dpowers
  2331  003BE0  24F3               	addwf	prodl,w,c
  2332  003BE2  6EF6               	movwf	tblptrl,c
  2333  003BE4  0E7F               	movlw	high _dpowers
  2334  003BE6  20F4               	addwfc	prodh,w,c
  2335  003BE8  6EF7               	movwf	tblptrh,c
  2336  003BEA                     	if	0	;There are less than 3 active tblptr bytes
  2337  003BEA                     	endif
  2338  003BEA  0009               	tblrd		*+
  2339  003BEC  FFFF               	dw	65535	; errata NOP
  2340  003BEE  CFF5 F005          	movff	tablat,___lldiv@divisor
  2341  003BF2  0009               	tblrd		*+
  2342  003BF4  FFFF               	dw	65535	; errata NOP
  2343  003BF6  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2344  003BFA  0009               	tblrd		*+
  2345  003BFC  FFFF               	dw	65535	; errata NOP
  2346  003BFE  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2347  003C02  000A               	tblrd		*-
  2348  003C04  FFFF               	dw	65535	; errata NOP
  2349  003C06  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2350  003C0A  EC76  F00D         	call	___lldiv	;wreg free
  2351  003C0E  C001  F063         	movff	?___lldiv,sprintf@tmpval
  2352  003C12  C002  F064         	movff	?___lldiv+1,sprintf@tmpval+1
  2353  003C16  C003  F065         	movff	?___lldiv+2,sprintf@tmpval+2
  2354  003C1A  C004  F066         	movff	?___lldiv+3,sprintf@tmpval+3
  2355                           
  2356                           ;doprnt.c: 1221: tmpval.vd %= 10;
  2357  003C1E  C063  F001         	movff	sprintf@tmpval,___llmod@dividend
  2358  003C22  C064  F002         	movff	sprintf@tmpval+1,___llmod@dividend+1
  2359  003C26  C065  F003         	movff	sprintf@tmpval+2,___llmod@dividend+2
  2360  003C2A  C066  F004         	movff	sprintf@tmpval+3,___llmod@dividend+3
  2361  003C2E  0E0A               	movlw	10
  2362  003C30  6E05               	movwf	___llmod@divisor,c
  2363  003C32  0E00               	movlw	0
  2364  003C34  6E06               	movwf	___llmod@divisor+1,c
  2365  003C36  0E00               	movlw	0
  2366  003C38  6E07               	movwf	___llmod@divisor+2,c
  2367  003C3A  0E00               	movlw	0
  2368  003C3C  6E08               	movwf	___llmod@divisor+3,c
  2369  003C3E  ECFA  F00C         	call	___llmod	;wreg free
  2370  003C42  C001  F063         	movff	?___llmod,sprintf@tmpval
  2371  003C46  C002  F064         	movff	?___llmod+1,sprintf@tmpval+1
  2372  003C4A  C003  F065         	movff	?___llmod+2,sprintf@tmpval+2
  2373  003C4E  C004  F066         	movff	?___llmod+3,sprintf@tmpval+3
  2374                           
  2375                           ;doprnt.c: 1222: ((*sp++ = ('0' + tmpval.vd)));
  2376  003C52  5063               	movf	sprintf@tmpval,w,c
  2377  003C54  0F30               	addlw	48
  2378  003C56  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2379  003C5A  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2380  003C5E  D7AF               	goto	L5
  2381  003C60                     l3687:
  2382  003C60  FFFF               	dw	65535	; assembler added errata NOP
  2383  003C62  0673               	decf	sprintf@c,f,c
  2384  003C64  2873               	incf	sprintf@c,w,c
  2385  003C66  B4D8               	btfsc	status,2,c
  2386  003C68  D00D               	goto	l3695
  2387  003C6A  D7AE               	goto	l3679
  2388  003C6C                     l3689:
  2389  003C6C  FFFF               	dw	65535	; assembler added errata NOP
  2390                           
  2391                           ;doprnt.c: 1227: ((*sp++ = ('0')));
  2392  003C6E  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2393  003C72  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2394  003C76  0E30               	movlw	48
  2395  003C78  6EDF               	movwf	indf2,c
  2396  003C7A  4A4D               	infsnz	sprintf@sp,f,c
  2397  003C7C  2A4E               	incf	sprintf@sp+1,f,c
  2398                           
  2399                           ;doprnt.c: 1228: eexp--;
  2400  003C7E  0667               	decf	sprintf@eexp,f,c
  2401  003C80  A0D8               	btfss	status,0,c
  2402  003C82  0668               	decf	sprintf@eexp+1,f,c
  2403  003C84                     l3695:
  2404  003C84  FFFF               	dw	65535	; assembler added errata NOP
  2405  003C86  BE68               	btfsc	sprintf@eexp+1,7,c
  2406  003C88  D005               	goto	u4110
  2407  003C8A  5068               	movf	sprintf@eexp+1,w,c
  2408  003C8C  E1EF               	bnz	l3689
  2409  003C8E  0467               	decf	sprintf@eexp,w,c
  2410  003C90  B0D8               	btfsc	status,0,c
  2411  003C92  D7EC               	goto	l3689
  2412  003C94                     u4110:
  2413  003C94  FFFF               	dw	65535	; assembler added errata NOP
  2414                           
  2415                           ;doprnt.c: 1229: };doprnt.c: 1230: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
  2416  003C96  BE72               	btfsc	sprintf@prec+1,7,c
  2417  003C98  D009               	goto	l228
  2418  003C9A  5072               	movf	sprintf@prec+1,w,c
  2419  003C9C  E104               	bnz	u4120
  2420  003C9E  0E09               	movlw	9
  2421  003CA0  5C71               	subwf	sprintf@prec,w,c
  2422  003CA2  A0D8               	btfss	status,0,c
  2423  003CA4  D003               	goto	l228
  2424  003CA6                     u4120:
  2425                           
  2426                           ;doprnt.c: 1231: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2427  003CA6  0E08               	movlw	8
  2428  003CA8  6E73               	movwf	sprintf@c,c
  2429  003CAA  D003               	goto	l3701
  2430  003CAC                     l228:
  2431  003CAC  FFFF               	dw	65535	; assembler added errata NOP
  2432                           
  2433                           ;doprnt.c: 1232: else;doprnt.c: 1233: c = (char)prec;
  2434  003CAE  C071  F073         	movff	sprintf@prec,sprintf@c
  2435  003CB2                     l3701:
  2436  003CB2  FFFF               	dw	65535	; assembler added errata NOP
  2437                           
  2438                           ;doprnt.c: 1234: prec -= (int)c;
  2439  003CB4  5073               	movf	sprintf@c,w,c
  2440  003CB6  5E71               	subwf	sprintf@prec,f,c
  2441  003CB8  0E00               	movlw	0
  2442  003CBA  5A72               	subwfb	sprintf@prec+1,f,c
  2443                           
  2444                           ;doprnt.c: 1238: if(c)
  2445  003CBC  5073               	movf	sprintf@c,w,c
  2446  003CBE  B4D8               	btfsc	status,2,c
  2447  003CC0  D008               	goto	l3709
  2448                           
  2449                           ;doprnt.c: 1240: ((*sp++ = ('.')));
  2450  003CC2  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2451  003CC6  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2452  003CCA  0E2E               	movlw	46
  2453  003CCC  6EDF               	movwf	indf2,c
  2454  003CCE  4A4D               	infsnz	sprintf@sp,f,c
  2455  003CD0  2A4E               	incf	sprintf@sp+1,f,c
  2456  003CD2                     l3709:
  2457  003CD2  FFFF               	dw	65535	; assembler added errata NOP
  2458                           
  2459                           ;doprnt.c: 1246: val = (unsigned long)(fval * scale((signed char)c));
  2460  003CD4  5073               	movf	sprintf@c,w,c
  2461  003CD6  ECC6  F018         	call	_scale
  2462  003CDA  C028  F059         	movff	?_scale,_sprintf$839
  2463  003CDE  C029  F05A         	movff	?_scale+1,_sprintf$839+1
  2464  003CE2  C02A  F05B         	movff	?_scale+2,_sprintf$839+2
  2465  003CE6  C02B  F05C         	movff	?_scale+3,_sprintf$839+3
  2466                           
  2467                           ;doprnt.c: 1246: val = (unsigned long)(fval * scale((signed char)c));
  2468  003CEA  C06D  F013         	movff	sprintf@fval,___flmul@a
  2469  003CEE  C06E  F014         	movff	sprintf@fval+1,___flmul@a+1
  2470  003CF2  C06F  F015         	movff	sprintf@fval+2,___flmul@a+2
  2471  003CF6  C070  F016         	movff	sprintf@fval+3,___flmul@a+3
  2472  003CFA  C059  F00F         	movff	_sprintf$839,___flmul@b
  2473  003CFE  C05A  F010         	movff	_sprintf$839+1,___flmul@b+1
  2474  003D02  C05B  F011         	movff	_sprintf$839+2,___flmul@b+2
  2475  003D06  C05C  F012         	movff	_sprintf$839+3,___flmul@b+3
  2476  003D0A  EC05  F017         	call	___flmul	;wreg free
  2477  003D0E  C00F  F031         	movff	?___flmul,___fltol@f1
  2478  003D12  C010  F032         	movff	?___flmul+1,___fltol@f1+1
  2479  003D16  C011  F033         	movff	?___flmul+2,___fltol@f1+2
  2480  003D1A  C012  F034         	movff	?___flmul+3,___fltol@f1+3
  2481  003D1E  EC55  F00E         	call	___fltol	;wreg free
  2482  003D22  C031  F05F         	movff	?___fltol,sprintf@val
  2483  003D26  C032  F060         	movff	?___fltol+1,sprintf@val+1
  2484  003D2A  C033  F061         	movff	?___fltol+2,sprintf@val+2
  2485  003D2E  C034  F062         	movff	?___fltol+3,sprintf@val+3
  2486                           
  2487                           ;doprnt.c: 1247: while(c--) {
  2488  003D32  D078               	goto	l3723
  2489  003D34                     l3713:
  2490  003D34  FFFF               	dw	65535	; assembler added errata NOP
  2491                           
  2492                           ;doprnt.c: 1248: tmpval.vd = val/dpowers[c];
  2493  003D36  C05F  F001         	movff	sprintf@val,___lldiv@dividend
  2494  003D3A  C060  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  2495  003D3E  C061  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  2496  003D42  C062  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  2497  003D46  5073               	movf	sprintf@c,w,c
  2498  003D48  0D04               	mullw	4
  2499  003D4A  0E31               	movlw	low _dpowers
  2500  003D4C  24F3               	addwf	prodl,w,c
  2501  003D4E  6EF6               	movwf	tblptrl,c
  2502  003D50  0E7F               	movlw	high _dpowers
  2503  003D52  20F4               	addwfc	prodh,w,c
  2504  003D54  6EF7               	movwf	tblptrh,c
  2505  003D56                     	if	0	;There are less than 3 active tblptr bytes
  2506  003D56                     	endif
  2507  003D56  0009               	tblrd		*+
  2508  003D58  FFFF               	dw	65535	; errata NOP
  2509  003D5A  CFF5 F005          	movff	tablat,___lldiv@divisor
  2510  003D5E  0009               	tblrd		*+
  2511  003D60  FFFF               	dw	65535	; errata NOP
  2512  003D62  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2513  003D66  0009               	tblrd		*+
  2514  003D68  FFFF               	dw	65535	; errata NOP
  2515  003D6A  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2516  003D6E  000A               	tblrd		*-
  2517  003D70  FFFF               	dw	65535	; errata NOP
  2518  003D72  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2519  003D76  EC76  F00D         	call	___lldiv	;wreg free
  2520  003D7A  C001  F063         	movff	?___lldiv,sprintf@tmpval
  2521  003D7E  C002  F064         	movff	?___lldiv+1,sprintf@tmpval+1
  2522  003D82  C003  F065         	movff	?___lldiv+2,sprintf@tmpval+2
  2523  003D86  C004  F066         	movff	?___lldiv+3,sprintf@tmpval+3
  2524                           
  2525                           ;doprnt.c: 1249: tmpval.vd %= 10;
  2526  003D8A  C063  F001         	movff	sprintf@tmpval,___llmod@dividend
  2527  003D8E  C064  F002         	movff	sprintf@tmpval+1,___llmod@dividend+1
  2528  003D92  C065  F003         	movff	sprintf@tmpval+2,___llmod@dividend+2
  2529  003D96  C066  F004         	movff	sprintf@tmpval+3,___llmod@dividend+3
  2530  003D9A  0E0A               	movlw	10
  2531  003D9C  6E05               	movwf	___llmod@divisor,c
  2532  003D9E  0E00               	movlw	0
  2533  003DA0  6E06               	movwf	___llmod@divisor+1,c
  2534  003DA2  0E00               	movlw	0
  2535  003DA4  6E07               	movwf	___llmod@divisor+2,c
  2536  003DA6  0E00               	movlw	0
  2537  003DA8  6E08               	movwf	___llmod@divisor+3,c
  2538  003DAA  ECFA  F00C         	call	___llmod	;wreg free
  2539  003DAE  C001  F063         	movff	?___llmod,sprintf@tmpval
  2540  003DB2  C002  F064         	movff	?___llmod+1,sprintf@tmpval+1
  2541  003DB6  C003  F065         	movff	?___llmod+2,sprintf@tmpval+2
  2542  003DBA  C004  F066         	movff	?___llmod+3,sprintf@tmpval+3
  2543                           
  2544                           ;doprnt.c: 1250: ((*sp++ = ('0' + tmpval.vd)));
  2545  003DBE  5063               	movf	sprintf@tmpval,w,c
  2546  003DC0  0F30               	addlw	48
  2547  003DC2  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2548  003DC6  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2549  003DCA  6EDF               	movwf	indf2,c
  2550  003DCC  4A4D               	infsnz	sprintf@sp,f,c
  2551  003DCE  2A4E               	incf	sprintf@sp+1,f,c
  2552                           
  2553                           ;doprnt.c: 1251: val %= dpowers[c];
  2554  003DD0  C05F  F001         	movff	sprintf@val,___llmod@dividend
  2555  003DD4  C060  F002         	movff	sprintf@val+1,___llmod@dividend+1
  2556  003DD8  C061  F003         	movff	sprintf@val+2,___llmod@dividend+2
  2557  003DDC  C062  F004         	movff	sprintf@val+3,___llmod@dividend+3
  2558  003DE0  5073               	movf	sprintf@c,w,c
  2559  003DE2  0D04               	mullw	4
  2560  003DE4  0E31               	movlw	low _dpowers
  2561  003DE6  24F3               	addwf	prodl,w,c
  2562  003DE8  6EF6               	movwf	tblptrl,c
  2563  003DEA  0E7F               	movlw	high _dpowers
  2564  003DEC  20F4               	addwfc	prodh,w,c
  2565  003DEE  6EF7               	movwf	tblptrh,c
  2566  003DF0                     	if	0	;There are less than 3 active tblptr bytes
  2567  003DF0                     	endif
  2568  003DF0  0009               	tblrd		*+
  2569  003DF2  FFFF               	dw	65535	; errata NOP
  2570  003DF4  CFF5 F005          	movff	tablat,___llmod@divisor
  2571  003DF8  0009               	tblrd		*+
  2572  003DFA  FFFF               	dw	65535	; errata NOP
  2573  003DFC  CFF5 F006          	movff	tablat,___llmod@divisor+1
  2574  003E00  0009               	tblrd		*+
  2575  003E02  FFFF               	dw	65535	; errata NOP
  2576  003E04  CFF5 F007          	movff	tablat,___llmod@divisor+2
  2577  003E08  000A               	tblrd		*-
  2578  003E0A  FFFF               	dw	65535	; errata NOP
  2579  003E0C  CFF5 F008          	movff	tablat,___llmod@divisor+3
  2580  003E10  ECFA  F00C         	call	___llmod	;wreg free
  2581  003E14  C001  F05F         	movff	?___llmod,sprintf@val
  2582  003E18  C002  F060         	movff	?___llmod+1,sprintf@val+1
  2583  003E1C  C003  F061         	movff	?___llmod+2,sprintf@val+2
  2584  003E20  C004  F062         	movff	?___llmod+3,sprintf@val+3
  2585  003E24                     l3723:
  2586  003E24  FFFF               	dw	65535	; assembler added errata NOP
  2587  003E26  0673               	decf	sprintf@c,f,c
  2588  003E28  2873               	incf	sprintf@c,w,c
  2589  003E2A  B4D8               	btfsc	status,2,c
  2590  003E2C  D00D               	goto	l3731
  2591  003E2E  D782               	goto	l3713
  2592  003E30                     l3725:
  2593  003E30  FFFF               	dw	65535	; assembler added errata NOP
  2594                           
  2595                           ;doprnt.c: 1255: ((*sp++ = ('0')));
  2596  003E32  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2597  003E36  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2598  003E3A  0E30               	movlw	48
  2599  003E3C  6EDF               	movwf	indf2,c
  2600  003E3E  4A4D               	infsnz	sprintf@sp,f,c
  2601  003E40  2A4E               	incf	sprintf@sp+1,f,c
  2602                           
  2603                           ;doprnt.c: 1256: prec--;
  2604  003E42  0671               	decf	sprintf@prec,f,c
  2605  003E44  A0D8               	btfss	status,0,c
  2606  003E46  0672               	decf	sprintf@prec+1,f,c
  2607  003E48                     l3731:
  2608  003E48  FFFF               	dw	65535	; assembler added errata NOP
  2609  003E4A  5071               	movf	sprintf@prec,w,c
  2610  003E4C  1072               	iorwf	sprintf@prec+1,w,c
  2611  003E4E  B4D8               	btfsc	status,2,c
  2612  003E50  D0BF               	goto	l3797
  2613  003E52  D7EE               	goto	l3725
  2614  003E54                     l3733:
  2615  003E54  FFFF               	dw	65535	; assembler added errata NOP
  2616                           
  2617                           ;doprnt.c: 1265: };doprnt.c: 1309: if(prec == 0 && val == 0)
  2618  003E56  5071               	movf	sprintf@prec,w,c
  2619  003E58  1072               	iorwf	sprintf@prec+1,w,c
  2620  003E5A  A4D8               	btfss	status,2,c
  2621  003E5C  D008               	goto	l3739
  2622  003E5E  505F               	movf	sprintf@val,w,c
  2623  003E60  1060               	iorwf	sprintf@val+1,w,c
  2624  003E62  1061               	iorwf	sprintf@val+2,w,c
  2625  003E64  1062               	iorwf	sprintf@val+3,w,c
  2626  003E66  A4D8               	btfss	status,2,c
  2627  003E68  D002               	goto	l3739
  2628                           
  2629                           ;doprnt.c: 1310: prec++;
  2630  003E6A  4A71               	infsnz	sprintf@prec,f,c
  2631  003E6C  2A72               	incf	sprintf@prec+1,f,c
  2632  003E6E                     l3739:
  2633  003E6E  FFFF               	dw	65535	; assembler added errata NOP
  2634                           
  2635                           ;doprnt.c: 1358: if(c < prec)
  2636  003E70  5073               	movf	sprintf@c,w,c
  2637  003E72  6E55               	movwf	??_sprintf& (0+255),c
  2638  003E74  6A56               	clrf	(??_sprintf+1)& (0+255),c
  2639  003E76  5071               	movf	sprintf@prec,w,c
  2640  003E78  5C55               	subwf	??_sprintf,w,c
  2641  003E7A  5056               	movf	??_sprintf+1,w,c
  2642  003E7C  0A80               	xorlw	128
  2643  003E7E  6E57               	movwf	(??_sprintf+2)& (0+255),c
  2644  003E80  5072               	movf	sprintf@prec+1,w,c
  2645  003E82  0A80               	xorlw	128
  2646  003E84  5857               	subwfb	(??_sprintf+2)& (0+255),w,c
  2647  003E86  B0D8               	btfsc	status,0,c
  2648  003E88  D003               	goto	l3743
  2649                           
  2650                           ;doprnt.c: 1359: c = prec;
  2651  003E8A  C071  F073         	movff	sprintf@prec,sprintf@c
  2652  003E8E  D011               	goto	l3747
  2653  003E90                     l3743:
  2654  003E90  FFFF               	dw	65535	; assembler added errata NOP
  2655                           
  2656                           ;doprnt.c: 1360: else if(prec < c)
  2657  003E92  5073               	movf	sprintf@c,w,c
  2658  003E94  6E55               	movwf	??_sprintf& (0+255),c
  2659  003E96  6A56               	clrf	(??_sprintf+1)& (0+255),c
  2660  003E98  5055               	movf	??_sprintf,w,c
  2661  003E9A  5C71               	subwf	sprintf@prec,w,c
  2662  003E9C  5072               	movf	sprintf@prec+1,w,c
  2663  003E9E  0A80               	xorlw	128
  2664  003EA0  6E57               	movwf	(??_sprintf+2)& (0+255),c
  2665  003EA2  5056               	movf	??_sprintf+1,w,c
  2666  003EA4  0A80               	xorlw	128
  2667  003EA6  5857               	subwfb	(??_sprintf+2)& (0+255),w,c
  2668  003EA8  B0D8               	btfsc	status,0,c
  2669  003EAA  D003               	goto	l3747
  2670                           
  2671                           ;doprnt.c: 1361: prec = c;
  2672  003EAC  C073  F071         	movff	sprintf@c,sprintf@prec
  2673  003EB0  6A72               	clrf	sprintf@prec+1,c
  2674  003EB2                     l3747:
  2675  003EB2  FFFF               	dw	65535	; assembler added errata NOP
  2676                           
  2677                           ;doprnt.c: 1364: if(width && flag & 0x03)
  2678  003EB4  506B               	movf	sprintf@width,w,c
  2679  003EB6  106C               	iorwf	sprintf@width+1,w,c
  2680  003EB8  B4D8               	btfsc	status,2,c
  2681  003EBA  D00D               	goto	l3753
  2682  003EBC  0E03               	movlw	3
  2683  003EBE  1469               	andwf	sprintf@flag,w,c
  2684  003EC0  6E55               	movwf	??_sprintf& (0+255),c
  2685  003EC2  0E00               	movlw	0
  2686  003EC4  146A               	andwf	sprintf@flag+1,w,c
  2687  003EC6  6E56               	movwf	(??_sprintf+1)& (0+255),c
  2688  003EC8  5055               	movf	??_sprintf,w,c
  2689  003ECA  1056               	iorwf	??_sprintf+1,w,c
  2690  003ECC  B4D8               	btfsc	status,2,c
  2691  003ECE  D003               	goto	l3753
  2692                           
  2693                           ;doprnt.c: 1365: width--;
  2694  003ED0  066B               	decf	sprintf@width,f,c
  2695  003ED2  A0D8               	btfss	status,0,c
  2696  003ED4  066C               	decf	sprintf@width+1,f,c
  2697  003ED6                     l3753:
  2698  003ED6  FFFF               	dw	65535	; assembler added errata NOP
  2699                           
  2700                           ;doprnt.c: 1367: if(flag & 0x4000) {
  2701  003ED8  AC6A               	btfss	sprintf@flag+1,6,c
  2702  003EDA  D014               	goto	l3761
  2703                           
  2704                           ;doprnt.c: 1368: if(width > prec)
  2705  003EDC  506B               	movf	sprintf@width,w,c
  2706  003EDE  5C71               	subwf	sprintf@prec,w,c
  2707  003EE0  5072               	movf	sprintf@prec+1,w,c
  2708  003EE2  0A80               	xorlw	128
  2709  003EE4  6E55               	movwf	??_sprintf& (0+255),c
  2710  003EE6  506C               	movf	sprintf@width+1,w,c
  2711  003EE8  0A80               	xorlw	128
  2712  003EEA  5855               	subwfb	??_sprintf& (0+255),w,c
  2713  003EEC  B0D8               	btfsc	status,0,c
  2714  003EEE  D005               	goto	l3759
  2715                           
  2716                           ;doprnt.c: 1369: width -= prec;
  2717  003EF0  5071               	movf	sprintf@prec,w,c
  2718  003EF2  5E6B               	subwf	sprintf@width,f,c
  2719  003EF4  5072               	movf	sprintf@prec+1,w,c
  2720  003EF6  5A6C               	subwfb	sprintf@width+1,f,c
  2721  003EF8  D005               	goto	l3761
  2722  003EFA                     l3759:
  2723  003EFA  FFFF               	dw	65535	; assembler added errata NOP
  2724                           
  2725                           ;doprnt.c: 1370: else;doprnt.c: 1371: width = 0;
  2726  003EFC  0E00               	movlw	0
  2727  003EFE  6E6C               	movwf	sprintf@width+1,c
  2728  003F00  0E00               	movlw	0
  2729  003F02  6E6B               	movwf	sprintf@width,c
  2730  003F04                     l3761:
  2731  003F04  FFFF               	dw	65535	; assembler added errata NOP
  2732                           
  2733                           ;doprnt.c: 1372: };doprnt.c: 1400: if(width > c)
  2734  003F06  5073               	movf	sprintf@c,w,c
  2735  003F08  6E55               	movwf	??_sprintf& (0+255),c
  2736  003F0A  6A56               	clrf	(??_sprintf+1)& (0+255),c
  2737  003F0C  506B               	movf	sprintf@width,w,c
  2738  003F0E  5C55               	subwf	??_sprintf,w,c
  2739  003F10  5056               	movf	??_sprintf+1,w,c
  2740  003F12  0A80               	xorlw	128
  2741  003F14  6E57               	movwf	(??_sprintf+2)& (0+255),c
  2742  003F16  506C               	movf	sprintf@width+1,w,c
  2743  003F18  0A80               	xorlw	128
  2744  003F1A  5857               	subwfb	(??_sprintf+2)& (0+255),w,c
  2745  003F1C  B0D8               	btfsc	status,0,c
  2746  003F1E  D005               	goto	l3765
  2747                           
  2748                           ;doprnt.c: 1401: width -= c;
  2749  003F20  5073               	movf	sprintf@c,w,c
  2750  003F22  5E6B               	subwf	sprintf@width,f,c
  2751  003F24  0E00               	movlw	0
  2752  003F26  5A6C               	subwfb	sprintf@width+1,f,c
  2753  003F28  D005               	goto	l3767
  2754  003F2A                     l3765:
  2755  003F2A  FFFF               	dw	65535	; assembler added errata NOP
  2756                           
  2757                           ;doprnt.c: 1402: else;doprnt.c: 1403: width = 0;
  2758  003F2C  0E00               	movlw	0
  2759  003F2E  6E6C               	movwf	sprintf@width+1,c
  2760  003F30  0E00               	movlw	0
  2761  003F32  6E6B               	movwf	sprintf@width,c
  2762  003F34                     l3767:
  2763  003F34  FFFF               	dw	65535	; assembler added errata NOP
  2764                           
  2765                           ;doprnt.c: 1406: if(flag & 0x04) {
  2766  003F36  A469               	btfss	sprintf@flag,2,c
  2767  003F38  D023               	goto	l3783
  2768                           
  2769                           ;doprnt.c: 1411: if(flag & 0x03)
  2770  003F3A  0E03               	movlw	3
  2771  003F3C  1469               	andwf	sprintf@flag,w,c
  2772  003F3E  6E55               	movwf	??_sprintf& (0+255),c
  2773  003F40  0E00               	movlw	0
  2774  003F42  146A               	andwf	sprintf@flag+1,w,c
  2775  003F44  6E56               	movwf	(??_sprintf+1)& (0+255),c
  2776  003F46  5055               	movf	??_sprintf,w,c
  2777  003F48  1056               	iorwf	??_sprintf+1,w,c
  2778  003F4A  B4D8               	btfsc	status,2,c
  2779  003F4C  D008               	goto	l3775
  2780                           
  2781                           ;doprnt.c: 1412: ((*sp++ = ('-')));
  2782  003F4E  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2783  003F52  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2784  003F56  0E2D               	movlw	45
  2785  003F58  6EDF               	movwf	indf2,c
  2786  003F5A  4A4D               	infsnz	sprintf@sp,f,c
  2787  003F5C  2A4E               	incf	sprintf@sp+1,f,c
  2788  003F5E                     l3775:
  2789  003F5E  FFFF               	dw	65535	; assembler added errata NOP
  2790                           
  2791                           ;doprnt.c: 1434: if(width)
  2792  003F60  506B               	movf	sprintf@width,w,c
  2793  003F62  106C               	iorwf	sprintf@width+1,w,c
  2794  003F64  B4D8               	btfsc	status,2,c
  2795  003F66  D034               	goto	l3797
  2796                           
  2797                           ;doprnt.c: 1436: ((*sp++ = ('0')));
  2798  003F68  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2799  003F6C  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2800  003F70  0E30               	movlw	48
  2801  003F72  6EDF               	movwf	indf2,c
  2802  003F74  4A4D               	infsnz	sprintf@sp,f,c
  2803  003F76  2A4E               	incf	sprintf@sp+1,f,c
  2804                           
  2805                           ;doprnt.c: 1437: while(--width);
  2806  003F78  066B               	decf	sprintf@width,f,c
  2807  003F7A  A0D8               	btfss	status,0,c
  2808  003F7C  066C               	decf	sprintf@width+1,f,c
  2809  003F7E  D7EF               	goto	l3775
  2810  003F80                     l3783:
  2811  003F80  FFFF               	dw	65535	; assembler added errata NOP
  2812                           
  2813                           ;doprnt.c: 1441: {;doprnt.c: 1443: if(width;doprnt.c: 1447: )
  2814  003F82  506B               	movf	sprintf@width,w,c
  2815  003F84  106C               	iorwf	sprintf@width+1,w,c
  2816  003F86  B4D8               	btfsc	status,2,c
  2817  003F88  D010               	goto	u4300
  2818  003F8A                     u4290:
  2819  003F8A  FFFF               	dw	65535	; assembler added errata NOP
  2820                           
  2821                           ;doprnt.c: 1449: ((*sp++ = (' ')));
  2822  003F8C  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2823  003F90  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2824  003F94  0E20               	movlw	32
  2825  003F96  6EDF               	movwf	indf2,c
  2826  003F98  4A4D               	infsnz	sprintf@sp,f,c
  2827  003F9A  2A4E               	incf	sprintf@sp+1,f,c
  2828                           
  2829                           ;doprnt.c: 1450: while(--width);
  2830  003F9C  066B               	decf	sprintf@width,f,c
  2831  003F9E  A0D8               	btfss	status,0,c
  2832  003FA0  066C               	decf	sprintf@width+1,f,c
  2833  003FA2  506B               	movf	sprintf@width,w,c
  2834  003FA4  106C               	iorwf	sprintf@width+1,w,c
  2835  003FA6  A4D8               	btfss	status,2,c
  2836  003FA8  D7F0               	goto	u4290
  2837  003FAA                     u4300:
  2838  003FAA  FFFF               	dw	65535	; assembler added errata NOP
  2839                           
  2840                           ;doprnt.c: 1457: if(flag & 0x03)
  2841  003FAC  0E03               	movlw	3
  2842  003FAE  1469               	andwf	sprintf@flag,w,c
  2843  003FB0  6E55               	movwf	??_sprintf& (0+255),c
  2844  003FB2  0E00               	movlw	0
  2845  003FB4  146A               	andwf	sprintf@flag+1,w,c
  2846  003FB6  6E56               	movwf	(??_sprintf+1)& (0+255),c
  2847  003FB8  5055               	movf	??_sprintf,w,c
  2848  003FBA  1056               	iorwf	??_sprintf+1,w,c
  2849  003FBC  B4D8               	btfsc	status,2,c
  2850  003FBE  D008               	goto	l3797
  2851                           
  2852                           ;doprnt.c: 1458: ((*sp++ = ('-')));
  2853  003FC0  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2854  003FC4  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2855  003FC8  0E2D               	movlw	45
  2856  003FCA  6EDF               	movwf	indf2,c
  2857  003FCC  EFE0  F01A         	goto	l3509
  2858  003FD0                     l3797:
  2859  003FD0  FFFF               	dw	65535	; assembler added errata NOP
  2860  003FD2  C04F  FFF6         	movff	sprintf@f,tblptrl
  2861  003FD6  C050  FFF7         	movff	sprintf@f+1,tblptrh
  2862  003FDA  4A4F               	infsnz	sprintf@f,f,c
  2863  003FDC  2A50               	incf	sprintf@f+1,f,c
  2864  003FDE                     	if	0	;tblptru may be non-zero
  2865  003FDE                     	endif
  2866  003FDE                     	if	0	;tblptru may be non-zero
  2867  003FDE                     	endif
  2868  003FDE  0008               	tblrd		*
  2869  003FE0  FFFF               	dw	65535	; errata NOP
  2870  003FE2  CFF5 F073          	movff	tablat,sprintf@c
  2871  003FE6  5073               	movf	sprintf@c,w,c
  2872  003FE8  A4D8               	btfss	status,2,c
  2873  003FEA  EFD5  F01A         	goto	l3505
  2874  003FEE                     u4320:
  2875  003FEE  FFFF               	dw	65535	; assembler added errata NOP
  2876                           
  2877                           ;doprnt.c: 1557: *sp = 0;
  2878  003FF0  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2879  003FF4  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2880  003FF8  0E00               	movlw	0
  2881  003FFA  6EDF               	movwf	indf2,c
  2882  003FFC  0012               	return		;funcret
  2883  003FFE  FFFF               	dw	65535	; errata NOP
  2884  004000                     __end_of_sprintf:
  2885                           	opt callstack 0
  2886                           
  2887 ;; *************** function _scale *****************
  2888 ;; Defined at:
  2889 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  2890 ;; Parameters:    Size  Location     Type
  2891 ;;  scl             1    wreg     char 
  2892 ;; Auto vars:     Size  Location     Type
  2893 ;;  scl             1   47[COMRAM] char 
  2894 ;; Return value:  Size  Location     Type
  2895 ;;                  4   39[COMRAM] char 
  2896 ;; Registers used:
  2897 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2898 ;; Tracked objects:
  2899 ;;		On entry : 0/0
  2900 ;;		On exit  : 0/0
  2901 ;;		Unchanged: 0/0
  2902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2903 ;;      Params:         4       0       0       0       0       0       0
  2904 ;;      Locals:         5       0       0       0       0       0       0
  2905 ;;      Temps:          0       0       0       0       0       0       0
  2906 ;;      Totals:         9       0       0       0       0       0       0
  2907 ;;Total ram usage:        9 bytes
  2908 ;; Hardware stack levels used:    1
  2909 ;; Hardware stack levels required when called:    1
  2910 ;; This function calls:
  2911 ;;		___awdiv
  2912 ;;		___awmod
  2913 ;;		___flmul
  2914 ;; This function is called by:
  2915 ;;		_sprintf
  2916 ;; This function uses a non-reentrant model
  2917 ;;
  2918                           
  2919                           	psect	text4
  2920  00318C                     __ptext4:
  2921                           	opt callstack 0
  2922  00318C                     _scale:
  2923                           	opt callstack 0
  2924  00318C  FFFF               	dw	65535	; assembler added errata NOP
  2925                           
  2926                           ;incstack = 0
  2927                           ;scale@scl stored from wreg
  2928  00318E  6E30               	movwf	scale@scl,c
  2929                           
  2930                           ;doprnt.c: 436: if(scl < 0) {
  2931  003190  AE30               	btfss	scale@scl,7,c
  2932  003192  D0FB               	goto	l3009
  2933                           
  2934                           ;doprnt.c: 437: scl = -scl;
  2935  003194  6C30               	negf	scale@scl,c
  2936                           
  2937                           ;doprnt.c: 438: if(scl>=110)
  2938  003196  5030               	movf	scale@scl,w,c
  2939  003198  0A80               	xorlw	128
  2940  00319A  0F12               	addlw	-238
  2941  00319C  A0D8               	btfss	status,0,c
  2942  00319E  D08C               	goto	l2999
  2943                           
  2944                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2945  0031A0  0E00               	movlw	0
  2946  0031A2  6E0A               	movwf	___awdiv@divisor+1,c
  2947  0031A4  0E0A               	movlw	10
  2948  0031A6  6E09               	movwf	___awdiv@divisor,c
  2949  0031A8  0E00               	movlw	0
  2950  0031AA  6E04               	movwf	___awmod@divisor+1,c
  2951  0031AC  0E64               	movlw	100
  2952  0031AE  6E03               	movwf	___awmod@divisor,c
  2953  0031B0  5030               	movf	scale@scl,w,c
  2954  0031B2  6E01               	movwf	___awmod@dividend,c
  2955  0031B4  6A02               	clrf	___awmod@dividend+1,c
  2956  0031B6  BE01               	btfsc	___awmod@dividend,7,c
  2957  0031B8  0602               	decf	___awmod@dividend+1,f,c
  2958  0031BA  EC34  F00D         	call	___awmod	;wreg free
  2959  0031BE  C001  F007         	movff	?___awmod,___awdiv@dividend
  2960  0031C2  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2961  0031C6  EC09  F00E         	call	___awdiv	;wreg free
  2962  0031CA  0E09               	movlw	9
  2963  0031CC  2607               	addwf	?___awdiv,f,c
  2964  0031CE  5007               	movf	?___awdiv,w,c
  2965  0031D0  0D04               	mullw	4
  2966  0031D2  0EFD               	movlw	low __npowers_
  2967  0031D4  24F3               	addwf	prodl,w,c
  2968  0031D6  6EF6               	movwf	tblptrl,c
  2969  0031D8  0E7E               	movlw	high __npowers_
  2970  0031DA  20F4               	addwfc	prodh,w,c
  2971  0031DC  6EF7               	movwf	tblptrh,c
  2972  0031DE                     	if	0	;There are less than 3 active tblptr bytes
  2973  0031DE                     	endif
  2974  0031DE  0009               	tblrd		*+
  2975  0031E0  FFFF               	dw	65535	; errata NOP
  2976  0031E2  CFF5 F013          	movff	tablat,___flmul@a
  2977  0031E6  0009               	tblrd		*+
  2978  0031E8  FFFF               	dw	65535	; errata NOP
  2979  0031EA  CFF5 F014          	movff	tablat,___flmul@a+1
  2980  0031EE  0009               	tblrd		*+
  2981  0031F0  FFFF               	dw	65535	; errata NOP
  2982  0031F2  CFF5 F015          	movff	tablat,___flmul@a+2
  2983  0031F6  000A               	tblrd		*-
  2984  0031F8  FFFF               	dw	65535	; errata NOP
  2985  0031FA  CFF5 F016          	movff	tablat,___flmul@a+3
  2986  0031FE  0E00               	movlw	0
  2987  003200  6E0A               	movwf	___awdiv@divisor+1,c
  2988  003202  0E64               	movlw	100
  2989  003204  6E09               	movwf	___awdiv@divisor,c
  2990  003206  5030               	movf	scale@scl,w,c
  2991  003208  6E07               	movwf	___awdiv@dividend,c
  2992  00320A  6A08               	clrf	___awdiv@dividend+1,c
  2993  00320C  BE07               	btfsc	___awdiv@dividend,7,c
  2994  00320E  0608               	decf	___awdiv@dividend+1,f,c
  2995  003210  EC09  F00E         	call	___awdiv	;wreg free
  2996  003214  0E12               	movlw	18
  2997  003216  2607               	addwf	?___awdiv,f,c
  2998  003218  5007               	movf	?___awdiv,w,c
  2999  00321A  0D04               	mullw	4
  3000  00321C  0EFD               	movlw	low __npowers_
  3001  00321E  24F3               	addwf	prodl,w,c
  3002  003220  6EF6               	movwf	tblptrl,c
  3003  003222  0E7E               	movlw	high __npowers_
  3004  003224  20F4               	addwfc	prodh,w,c
  3005  003226  6EF7               	movwf	tblptrh,c
  3006  003228                     	if	0	;There are less than 3 active tblptr bytes
  3007  003228                     	endif
  3008  003228  0009               	tblrd		*+
  3009  00322A  FFFF               	dw	65535	; errata NOP
  3010  00322C  CFF5 F00F          	movff	tablat,___flmul@b
  3011  003230  0009               	tblrd		*+
  3012  003232  FFFF               	dw	65535	; errata NOP
  3013  003234  CFF5 F010          	movff	tablat,___flmul@b+1
  3014  003238  0009               	tblrd		*+
  3015  00323A  FFFF               	dw	65535	; errata NOP
  3016  00323C  CFF5 F011          	movff	tablat,___flmul@b+2
  3017  003240  000A               	tblrd		*-
  3018  003242  FFFF               	dw	65535	; errata NOP
  3019  003244  CFF5 F012          	movff	tablat,___flmul@b+3
  3020  003248  EC05  F017         	call	___flmul	;wreg free
  3021  00324C  C00F  F02C         	movff	?___flmul,_scale$838
  3022  003250  C010  F02D         	movff	?___flmul+1,_scale$838+1
  3023  003254  C011  F02E         	movff	?___flmul+2,_scale$838+2
  3024  003258  C012  F02F         	movff	?___flmul+3,_scale$838+3
  3025                           
  3026                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3027  00325C  C02C  F00F         	movff	_scale$838,___flmul@b
  3028  003260  C02D  F010         	movff	_scale$838+1,___flmul@b+1
  3029  003264  C02E  F011         	movff	_scale$838+2,___flmul@b+2
  3030  003268  C02F  F012         	movff	_scale$838+3,___flmul@b+3
  3031  00326C  0E00               	movlw	0
  3032  00326E  6E04               	movwf	___awmod@divisor+1,c
  3033  003270  0E0A               	movlw	10
  3034  003272  6E03               	movwf	___awmod@divisor,c
  3035  003274  5030               	movf	scale@scl,w,c
  3036  003276  6E01               	movwf	___awmod@dividend,c
  3037  003278  6A02               	clrf	___awmod@dividend+1,c
  3038  00327A  BE01               	btfsc	___awmod@dividend,7,c
  3039  00327C  0602               	decf	___awmod@dividend+1,f,c
  3040  00327E  EC34  F00D         	call	___awmod	;wreg free
  3041  003282  5001               	movf	?___awmod,w,c
  3042  003284  0D04               	mullw	4
  3043  003286  0EFD               	movlw	low __npowers_
  3044  003288  24F3               	addwf	prodl,w,c
  3045  00328A  6EF6               	movwf	tblptrl,c
  3046  00328C  0E7E               	movlw	high __npowers_
  3047  00328E  20F4               	addwfc	prodh,w,c
  3048  003290  6EF7               	movwf	tblptrh,c
  3049  003292                     	if	0	;There are less than 3 active tblptr bytes
  3050  003292                     	endif
  3051  003292  0009               	tblrd		*+
  3052  003294  FFFF               	dw	65535	; errata NOP
  3053  003296  CFF5 F013          	movff	tablat,___flmul@a
  3054  00329A  0009               	tblrd		*+
  3055  00329C  FFFF               	dw	65535	; errata NOP
  3056  00329E  CFF5 F014          	movff	tablat,___flmul@a+1
  3057  0032A2  0009               	tblrd		*+
  3058  0032A4  FFFF               	dw	65535	; errata NOP
  3059  0032A6  CFF5 F015          	movff	tablat,___flmul@a+2
  3060  0032AA  000A               	tblrd		*-
  3061  0032AC  FFFF               	dw	65535	; errata NOP
  3062  0032AE  CFF5 F016          	movff	tablat,___flmul@a+3
  3063  0032B2  EC05  F017         	call	___flmul	;wreg free
  3064  0032B6  D14B               	goto	L9
  3065  0032B8                     l2999:
  3066  0032B8  FFFF               	dw	65535	; assembler added errata NOP
  3067                           
  3068                           ;doprnt.c: 440: else if(scl > 10)
  3069  0032BA  5030               	movf	scale@scl,w,c
  3070  0032BC  0A80               	xorlw	128
  3071  0032BE  0F75               	addlw	-139
  3072  0032C0  A0D8               	btfss	status,0,c
  3073  0032C2  D04B               	goto	l3005
  3074                           
  3075                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  3076  0032C4  0E00               	movlw	0
  3077  0032C6  6E0A               	movwf	___awdiv@divisor+1,c
  3078  0032C8  0E0A               	movlw	10
  3079  0032CA  6E09               	movwf	___awdiv@divisor,c
  3080  0032CC  5030               	movf	scale@scl,w,c
  3081  0032CE  6E07               	movwf	___awdiv@dividend,c
  3082  0032D0  6A08               	clrf	___awdiv@dividend+1,c
  3083  0032D2  BE07               	btfsc	___awdiv@dividend,7,c
  3084  0032D4  0608               	decf	___awdiv@dividend+1,f,c
  3085  0032D6  EC09  F00E         	call	___awdiv	;wreg free
  3086  0032DA  0E09               	movlw	9
  3087  0032DC  2607               	addwf	?___awdiv,f,c
  3088  0032DE  5007               	movf	?___awdiv,w,c
  3089  0032E0  0D04               	mullw	4
  3090  0032E2  0EFD               	movlw	low __npowers_
  3091  0032E4  24F3               	addwf	prodl,w,c
  3092  0032E6  6EF6               	movwf	tblptrl,c
  3093  0032E8  0E7E               	movlw	high __npowers_
  3094  0032EA  20F4               	addwfc	prodh,w,c
  3095  0032EC  6EF7               	movwf	tblptrh,c
  3096  0032EE                     	if	0	;There are less than 3 active tblptr bytes
  3097  0032EE                     	endif
  3098  0032EE  0009               	tblrd		*+
  3099  0032F0  FFFF               	dw	65535	; errata NOP
  3100  0032F2  CFF5 F00F          	movff	tablat,___flmul@b
  3101  0032F6  0009               	tblrd		*+
  3102  0032F8  FFFF               	dw	65535	; errata NOP
  3103  0032FA  CFF5 F010          	movff	tablat,___flmul@b+1
  3104  0032FE  0009               	tblrd		*+
  3105  003300  FFFF               	dw	65535	; errata NOP
  3106  003302  CFF5 F011          	movff	tablat,___flmul@b+2
  3107  003306  000A               	tblrd		*-
  3108  003308  FFFF               	dw	65535	; errata NOP
  3109  00330A  CFF5 F012          	movff	tablat,___flmul@b+3
  3110  00330E  0E00               	movlw	0
  3111  003310  6E04               	movwf	___awmod@divisor+1,c
  3112  003312  0E0A               	movlw	10
  3113  003314  6E03               	movwf	___awmod@divisor,c
  3114  003316  5030               	movf	scale@scl,w,c
  3115  003318  6E01               	movwf	___awmod@dividend,c
  3116  00331A  6A02               	clrf	___awmod@dividend+1,c
  3117  00331C  BE01               	btfsc	___awmod@dividend,7,c
  3118  00331E  0602               	decf	___awmod@dividend+1,f,c
  3119  003320  EC34  F00D         	call	___awmod	;wreg free
  3120  003324  5001               	movf	?___awmod,w,c
  3121  003326  0D04               	mullw	4
  3122  003328  0EFD               	movlw	low __npowers_
  3123  00332A  24F3               	addwf	prodl,w,c
  3124  00332C  6EF6               	movwf	tblptrl,c
  3125  00332E  0E7E               	movlw	high __npowers_
  3126  003330  20F4               	addwfc	prodh,w,c
  3127  003332  6EF7               	movwf	tblptrh,c
  3128  003334                     	if	0	;There are less than 3 active tblptr bytes
  3129  003334                     	endif
  3130  003334  0009               	tblrd		*+
  3131  003336  FFFF               	dw	65535	; errata NOP
  3132  003338  CFF5 F013          	movff	tablat,___flmul@a
  3133  00333C  0009               	tblrd		*+
  3134  00333E  FFFF               	dw	65535	; errata NOP
  3135  003340  CFF5 F014          	movff	tablat,___flmul@a+1
  3136  003344  0009               	tblrd		*+
  3137  003346  FFFF               	dw	65535	; errata NOP
  3138  003348  CFF5 F015          	movff	tablat,___flmul@a+2
  3139  00334C  000A               	tblrd		*-
  3140  00334E  FFFF               	dw	65535	; errata NOP
  3141  003350  CFF5 F016          	movff	tablat,___flmul@a+3
  3142  003354  EC05  F017         	call	___flmul	;wreg free
  3143  003358  D0FA               	goto	L9
  3144  00335A                     l3005:
  3145  00335A  FFFF               	dw	65535	; assembler added errata NOP
  3146                           
  3147                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  3148  00335C  5030               	movf	scale@scl,w,c
  3149  00335E  0D04               	mullw	4
  3150  003360  0EFD               	movlw	low __npowers_
  3151  003362  24F3               	addwf	prodl,w,c
  3152  003364  6EF6               	movwf	tblptrl,c
  3153  003366  0E7E               	movlw	high __npowers_
  3154  003368  20F4               	addwfc	prodh,w,c
  3155  00336A  6EF7               	movwf	tblptrh,c
  3156  00336C                     	if	0	;There are less than 3 active tblptr bytes
  3157  00336C                     	endif
  3158  00336C  0009               	tblrd		*+
  3159  00336E  FFFF               	dw	65535	; errata NOP
  3160  003370  CFF5 F028          	movff	tablat,?_scale
  3161  003374  0009               	tblrd		*+
  3162  003376  FFFF               	dw	65535	; errata NOP
  3163  003378  CFF5 F029          	movff	tablat,?_scale+1
  3164  00337C  0009               	tblrd		*+
  3165  00337E  FFFF               	dw	65535	; errata NOP
  3166  003380  CFF5 F02A          	movff	tablat,?_scale+2
  3167  003384  000A               	tblrd		*-
  3168  003386  FFFF               	dw	65535	; errata NOP
  3169  003388  D103               	goto	L8
  3170  00338A                     l3009:
  3171  00338A  FFFF               	dw	65535	; assembler added errata NOP
  3172                           
  3173                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  3174  00338C  5030               	movf	scale@scl,w,c
  3175  00338E  0A80               	xorlw	128
  3176  003390  0F12               	addlw	-238
  3177  003392  A0D8               	btfss	status,0,c
  3178  003394  D08C               	goto	l3017
  3179                           
  3180                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  3181  003396  0E00               	movlw	0
  3182  003398  6E0A               	movwf	___awdiv@divisor+1,c
  3183  00339A  0E0A               	movlw	10
  3184  00339C  6E09               	movwf	___awdiv@divisor,c
  3185  00339E  0E00               	movlw	0
  3186  0033A0  6E04               	movwf	___awmod@divisor+1,c
  3187  0033A2  0E64               	movlw	100
  3188  0033A4  6E03               	movwf	___awmod@divisor,c
  3189  0033A6  5030               	movf	scale@scl,w,c
  3190  0033A8  6E01               	movwf	___awmod@dividend,c
  3191  0033AA  6A02               	clrf	___awmod@dividend+1,c
  3192  0033AC  BE01               	btfsc	___awmod@dividend,7,c
  3193  0033AE  0602               	decf	___awmod@dividend+1,f,c
  3194  0033B0  EC34  F00D         	call	___awmod	;wreg free
  3195  0033B4  C001  F007         	movff	?___awmod,___awdiv@dividend
  3196  0033B8  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  3197  0033BC  EC09  F00E         	call	___awdiv	;wreg free
  3198  0033C0  0E09               	movlw	9
  3199  0033C2  2607               	addwf	?___awdiv,f,c
  3200  0033C4  5007               	movf	?___awdiv,w,c
  3201  0033C6  0D04               	mullw	4
  3202  0033C8  0EC9               	movlw	low __powers_
  3203  0033CA  24F3               	addwf	prodl,w,c
  3204  0033CC  6EF6               	movwf	tblptrl,c
  3205  0033CE  0E7E               	movlw	high __powers_
  3206  0033D0  20F4               	addwfc	prodh,w,c
  3207  0033D2  6EF7               	movwf	tblptrh,c
  3208  0033D4                     	if	0	;There are less than 3 active tblptr bytes
  3209  0033D4                     	endif
  3210  0033D4  0009               	tblrd		*+
  3211  0033D6  FFFF               	dw	65535	; errata NOP
  3212  0033D8  CFF5 F013          	movff	tablat,___flmul@a
  3213  0033DC  0009               	tblrd		*+
  3214  0033DE  FFFF               	dw	65535	; errata NOP
  3215  0033E0  CFF5 F014          	movff	tablat,___flmul@a+1
  3216  0033E4  0009               	tblrd		*+
  3217  0033E6  FFFF               	dw	65535	; errata NOP
  3218  0033E8  CFF5 F015          	movff	tablat,___flmul@a+2
  3219  0033EC  000A               	tblrd		*-
  3220  0033EE  FFFF               	dw	65535	; errata NOP
  3221  0033F0  CFF5 F016          	movff	tablat,___flmul@a+3
  3222  0033F4  0E00               	movlw	0
  3223  0033F6  6E0A               	movwf	___awdiv@divisor+1,c
  3224  0033F8  0E64               	movlw	100
  3225  0033FA  6E09               	movwf	___awdiv@divisor,c
  3226  0033FC  5030               	movf	scale@scl,w,c
  3227  0033FE  6E07               	movwf	___awdiv@dividend,c
  3228  003400  6A08               	clrf	___awdiv@dividend+1,c
  3229  003402  BE07               	btfsc	___awdiv@dividend,7,c
  3230  003404  0608               	decf	___awdiv@dividend+1,f,c
  3231  003406  EC09  F00E         	call	___awdiv	;wreg free
  3232  00340A  0E12               	movlw	18
  3233  00340C  2607               	addwf	?___awdiv,f,c
  3234  00340E  5007               	movf	?___awdiv,w,c
  3235  003410  0D04               	mullw	4
  3236  003412  0EC9               	movlw	low __powers_
  3237  003414  24F3               	addwf	prodl,w,c
  3238  003416  6EF6               	movwf	tblptrl,c
  3239  003418  0E7E               	movlw	high __powers_
  3240  00341A  20F4               	addwfc	prodh,w,c
  3241  00341C  6EF7               	movwf	tblptrh,c
  3242  00341E                     	if	0	;There are less than 3 active tblptr bytes
  3243  00341E                     	endif
  3244  00341E  0009               	tblrd		*+
  3245  003420  FFFF               	dw	65535	; errata NOP
  3246  003422  CFF5 F00F          	movff	tablat,___flmul@b
  3247  003426  0009               	tblrd		*+
  3248  003428  FFFF               	dw	65535	; errata NOP
  3249  00342A  CFF5 F010          	movff	tablat,___flmul@b+1
  3250  00342E  0009               	tblrd		*+
  3251  003430  FFFF               	dw	65535	; errata NOP
  3252  003432  CFF5 F011          	movff	tablat,___flmul@b+2
  3253  003436  000A               	tblrd		*-
  3254  003438  FFFF               	dw	65535	; errata NOP
  3255  00343A  CFF5 F012          	movff	tablat,___flmul@b+3
  3256  00343E  EC05  F017         	call	___flmul	;wreg free
  3257  003442  C00F  F02C         	movff	?___flmul,_scale$838
  3258  003446  C010  F02D         	movff	?___flmul+1,_scale$838+1
  3259  00344A  C011  F02E         	movff	?___flmul+2,_scale$838+2
  3260  00344E  C012  F02F         	movff	?___flmul+3,_scale$838+3
  3261                           
  3262                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  3263  003452  C02C  F00F         	movff	_scale$838,___flmul@b
  3264  003456  C02D  F010         	movff	_scale$838+1,___flmul@b+1
  3265  00345A  C02E  F011         	movff	_scale$838+2,___flmul@b+2
  3266  00345E  C02F  F012         	movff	_scale$838+3,___flmul@b+3
  3267  003462  0E00               	movlw	0
  3268  003464  6E04               	movwf	___awmod@divisor+1,c
  3269  003466  0E0A               	movlw	10
  3270  003468  6E03               	movwf	___awmod@divisor,c
  3271  00346A  5030               	movf	scale@scl,w,c
  3272  00346C  6E01               	movwf	___awmod@dividend,c
  3273  00346E  6A02               	clrf	___awmod@dividend+1,c
  3274  003470  BE01               	btfsc	___awmod@dividend,7,c
  3275  003472  0602               	decf	___awmod@dividend+1,f,c
  3276  003474  EC34  F00D         	call	___awmod	;wreg free
  3277  003478  5001               	movf	?___awmod,w,c
  3278  00347A  0D04               	mullw	4
  3279  00347C  0EC9               	movlw	low __powers_
  3280  00347E  24F3               	addwf	prodl,w,c
  3281  003480  6EF6               	movwf	tblptrl,c
  3282  003482  0E7E               	movlw	high __powers_
  3283  003484  20F4               	addwfc	prodh,w,c
  3284  003486  6EF7               	movwf	tblptrh,c
  3285  003488                     	if	0	;There are less than 3 active tblptr bytes
  3286  003488                     	endif
  3287  003488  0009               	tblrd		*+
  3288  00348A  FFFF               	dw	65535	; errata NOP
  3289  00348C  CFF5 F013          	movff	tablat,___flmul@a
  3290  003490  0009               	tblrd		*+
  3291  003492  FFFF               	dw	65535	; errata NOP
  3292  003494  CFF5 F014          	movff	tablat,___flmul@a+1
  3293  003498  0009               	tblrd		*+
  3294  00349A  FFFF               	dw	65535	; errata NOP
  3295  00349C  CFF5 F015          	movff	tablat,___flmul@a+2
  3296  0034A0  000A               	tblrd		*-
  3297  0034A2  FFFF               	dw	65535	; errata NOP
  3298  0034A4  CFF5 F016          	movff	tablat,___flmul@a+3
  3299  0034A8  EC05  F017         	call	___flmul	;wreg free
  3300  0034AC  D050               	goto	L9
  3301  0034AE                     l3017:
  3302  0034AE  FFFF               	dw	65535	; assembler added errata NOP
  3303                           
  3304                           ;doprnt.c: 446: else if(scl > 10)
  3305  0034B0  5030               	movf	scale@scl,w,c
  3306  0034B2  0A80               	xorlw	128
  3307  0034B4  0F75               	addlw	-139
  3308  0034B6  A0D8               	btfss	status,0,c
  3309  0034B8  D054               	goto	l3023
  3310                           
  3311                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  3312  0034BA  0E00               	movlw	0
  3313  0034BC  6E0A               	movwf	___awdiv@divisor+1,c
  3314  0034BE  0E0A               	movlw	10
  3315  0034C0  6E09               	movwf	___awdiv@divisor,c
  3316  0034C2  5030               	movf	scale@scl,w,c
  3317  0034C4  6E07               	movwf	___awdiv@dividend,c
  3318  0034C6  6A08               	clrf	___awdiv@dividend+1,c
  3319  0034C8  BE07               	btfsc	___awdiv@dividend,7,c
  3320  0034CA  0608               	decf	___awdiv@dividend+1,f,c
  3321  0034CC  EC09  F00E         	call	___awdiv	;wreg free
  3322  0034D0  0E09               	movlw	9
  3323  0034D2  2607               	addwf	?___awdiv,f,c
  3324  0034D4  5007               	movf	?___awdiv,w,c
  3325  0034D6  0D04               	mullw	4
  3326  0034D8  0EC9               	movlw	low __powers_
  3327  0034DA  24F3               	addwf	prodl,w,c
  3328  0034DC  6EF6               	movwf	tblptrl,c
  3329  0034DE  0E7E               	movlw	high __powers_
  3330  0034E0  20F4               	addwfc	prodh,w,c
  3331  0034E2  6EF7               	movwf	tblptrh,c
  3332  0034E4                     	if	0	;There are less than 3 active tblptr bytes
  3333  0034E4                     	endif
  3334  0034E4  0009               	tblrd		*+
  3335  0034E6  FFFF               	dw	65535	; errata NOP
  3336  0034E8  CFF5 F00F          	movff	tablat,___flmul@b
  3337  0034EC  0009               	tblrd		*+
  3338  0034EE  FFFF               	dw	65535	; errata NOP
  3339  0034F0  CFF5 F010          	movff	tablat,___flmul@b+1
  3340  0034F4  0009               	tblrd		*+
  3341  0034F6  FFFF               	dw	65535	; errata NOP
  3342  0034F8  CFF5 F011          	movff	tablat,___flmul@b+2
  3343  0034FC  000A               	tblrd		*-
  3344  0034FE  FFFF               	dw	65535	; errata NOP
  3345  003500  CFF5 F012          	movff	tablat,___flmul@b+3
  3346  003504  0E00               	movlw	0
  3347  003506  6E04               	movwf	___awmod@divisor+1,c
  3348  003508  0E0A               	movlw	10
  3349  00350A  6E03               	movwf	___awmod@divisor,c
  3350  00350C  5030               	movf	scale@scl,w,c
  3351  00350E  6E01               	movwf	___awmod@dividend,c
  3352  003510  6A02               	clrf	___awmod@dividend+1,c
  3353  003512  BE01               	btfsc	___awmod@dividend,7,c
  3354  003514  0602               	decf	___awmod@dividend+1,f,c
  3355  003516  EC34  F00D         	call	___awmod	;wreg free
  3356  00351A  5001               	movf	?___awmod,w,c
  3357  00351C  0D04               	mullw	4
  3358  00351E  0EC9               	movlw	low __powers_
  3359  003520  24F3               	addwf	prodl,w,c
  3360  003522  6EF6               	movwf	tblptrl,c
  3361  003524  0E7E               	movlw	high __powers_
  3362  003526  20F4               	addwfc	prodh,w,c
  3363  003528  6EF7               	movwf	tblptrh,c
  3364  00352A                     	if	0	;There are less than 3 active tblptr bytes
  3365  00352A                     	endif
  3366  00352A  0009               	tblrd		*+
  3367  00352C  FFFF               	dw	65535	; errata NOP
  3368  00352E  CFF5 F013          	movff	tablat,___flmul@a
  3369  003532  0009               	tblrd		*+
  3370  003534  FFFF               	dw	65535	; errata NOP
  3371  003536  CFF5 F014          	movff	tablat,___flmul@a+1
  3372  00353A  0009               	tblrd		*+
  3373  00353C  FFFF               	dw	65535	; errata NOP
  3374  00353E  CFF5 F015          	movff	tablat,___flmul@a+2
  3375  003542  000A               	tblrd		*-
  3376  003544  FFFF               	dw	65535	; errata NOP
  3377  003546  CFF5 F016          	movff	tablat,___flmul@a+3
  3378  00354A  EC05  F017         	call	___flmul	;wreg free
  3379  00354E                     L9:
  3380  00354E  FFFF               	dw	65535	; assembler added errata NOP
  3381  003550  C00F  F028         	movff	?___flmul,?_scale
  3382  003554  C010  F029         	movff	?___flmul+1,?_scale+1
  3383  003558  C011  F02A         	movff	?___flmul+2,?_scale+2
  3384  00355C  C012  F02B         	movff	?___flmul+3,?_scale+3
  3385  003560  D01A               	goto	l157
  3386  003562                     l3023:
  3387  003562  FFFF               	dw	65535	; assembler added errata NOP
  3388                           
  3389                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  3390  003564  5030               	movf	scale@scl,w,c
  3391  003566  0D04               	mullw	4
  3392  003568  0EC9               	movlw	low __powers_
  3393  00356A  24F3               	addwf	prodl,w,c
  3394  00356C  6EF6               	movwf	tblptrl,c
  3395  00356E  0E7E               	movlw	high __powers_
  3396  003570  20F4               	addwfc	prodh,w,c
  3397  003572  6EF7               	movwf	tblptrh,c
  3398  003574                     	if	0	;There are less than 3 active tblptr bytes
  3399  003574                     	endif
  3400  003574  0009               	tblrd		*+
  3401  003576  FFFF               	dw	65535	; errata NOP
  3402  003578  CFF5 F028          	movff	tablat,?_scale
  3403  00357C  0009               	tblrd		*+
  3404  00357E  FFFF               	dw	65535	; errata NOP
  3405  003580  CFF5 F029          	movff	tablat,?_scale+1
  3406  003584  0009               	tblrd		*+
  3407  003586  FFFF               	dw	65535	; errata NOP
  3408  003588  CFF5 F02A          	movff	tablat,?_scale+2
  3409  00358C  000A               	tblrd		*-
  3410  00358E  FFFF               	dw	65535	; errata NOP
  3411  003590                     L8:
  3412  003590  FFFF               	dw	65535	; assembler added errata NOP
  3413  003592  CFF5 F02B          	movff	tablat,?_scale+3
  3414  003596                     l157:
  3415  003596  FFFF               	dw	65535	; assembler added errata NOP
  3416  003598  0012               	return		;funcret
  3417  00359A  FFFF               	dw	65535	; errata NOP
  3418  00359C                     __end_of_scale:
  3419                           	opt callstack 0
  3420                           
  3421 ;; *************** function ___awmod *****************
  3422 ;; Defined at:
  3423 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  3424 ;; Parameters:    Size  Location     Type
  3425 ;;  dividend        2    0[COMRAM] int 
  3426 ;;  divisor         2    2[COMRAM] int 
  3427 ;; Auto vars:     Size  Location     Type
  3428 ;;  sign            1    5[COMRAM] unsigned char 
  3429 ;;  counter         1    4[COMRAM] unsigned char 
  3430 ;; Return value:  Size  Location     Type
  3431 ;;                  2    0[COMRAM] int 
  3432 ;; Registers used:
  3433 ;;		wreg, status,2, status,0
  3434 ;; Tracked objects:
  3435 ;;		On entry : 0/0
  3436 ;;		On exit  : 0/0
  3437 ;;		Unchanged: 0/0
  3438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3439 ;;      Params:         4       0       0       0       0       0       0
  3440 ;;      Locals:         2       0       0       0       0       0       0
  3441 ;;      Temps:          0       0       0       0       0       0       0
  3442 ;;      Totals:         6       0       0       0       0       0       0
  3443 ;;Total ram usage:        6 bytes
  3444 ;; Hardware stack levels used:    1
  3445 ;; This function calls:
  3446 ;;		Nothing
  3447 ;; This function is called by:
  3448 ;;		_scale
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452                           	psect	text5
  3453  001A68                     __ptext5:
  3454                           	opt callstack 0
  3455  001A68                     ___awmod:
  3456                           	opt callstack 0
  3457  001A68  FFFF               	dw	65535	; assembler added errata NOP
  3458                           
  3459                           ;incstack = 0
  3460  001A6A  0E00               	movlw	0
  3461  001A6C  6E06               	movwf	___awmod@sign,c
  3462  001A6E  AE02               	btfss	___awmod@dividend+1,7,c
  3463  001A70  D006               	goto	l2875
  3464  001A72  6C01               	negf	___awmod@dividend,c
  3465  001A74  1E02               	comf	___awmod@dividend+1,f,c
  3466  001A76  B0D8               	btfsc	status,0,c
  3467  001A78  2A02               	incf	___awmod@dividend+1,f,c
  3468  001A7A  0E01               	movlw	1
  3469  001A7C  6E06               	movwf	___awmod@sign,c
  3470  001A7E                     l2875:
  3471  001A7E  FFFF               	dw	65535	; assembler added errata NOP
  3472  001A80  AE04               	btfss	___awmod@divisor+1,7,c
  3473  001A82  D004               	goto	l2879
  3474  001A84  6C03               	negf	___awmod@divisor,c
  3475  001A86  1E04               	comf	___awmod@divisor+1,f,c
  3476  001A88  B0D8               	btfsc	status,0,c
  3477  001A8A  2A04               	incf	___awmod@divisor+1,f,c
  3478  001A8C                     l2879:
  3479  001A8C  FFFF               	dw	65535	; assembler added errata NOP
  3480  001A8E  5003               	movf	___awmod@divisor,w,c
  3481  001A90  1004               	iorwf	___awmod@divisor+1,w,c
  3482  001A92  B4D8               	btfsc	status,2,c
  3483  001A94  D01C               	goto	l2895
  3484  001A96  0E01               	movlw	1
  3485  001A98  6E05               	movwf	___awmod@counter,c
  3486  001A9A  D005               	goto	l2885
  3487  001A9C                     l2883:
  3488  001A9C  FFFF               	dw	65535	; assembler added errata NOP
  3489  001A9E  90D8               	bcf	status,0,c
  3490  001AA0  3603               	rlcf	___awmod@divisor,f,c
  3491  001AA2  3604               	rlcf	___awmod@divisor+1,f,c
  3492  001AA4  2A05               	incf	___awmod@counter,f,c
  3493  001AA6                     l2885:
  3494  001AA6  FFFF               	dw	65535	; assembler added errata NOP
  3495  001AA8  AE04               	btfss	___awmod@divisor+1,7,c
  3496  001AAA  D7F8               	goto	l2883
  3497  001AAC                     u2900:
  3498  001AAC  FFFF               	dw	65535	; assembler added errata NOP
  3499  001AAE  5003               	movf	___awmod@divisor,w,c
  3500  001AB0  5C01               	subwf	___awmod@dividend,w,c
  3501  001AB2  5004               	movf	___awmod@divisor+1,w,c
  3502  001AB4  5802               	subwfb	___awmod@dividend+1,w,c
  3503  001AB6  A0D8               	btfss	status,0,c
  3504  001AB8  D004               	goto	l2891
  3505  001ABA  5003               	movf	___awmod@divisor,w,c
  3506  001ABC  5E01               	subwf	___awmod@dividend,f,c
  3507  001ABE  5004               	movf	___awmod@divisor+1,w,c
  3508  001AC0  5A02               	subwfb	___awmod@dividend+1,f,c
  3509  001AC2                     l2891:
  3510  001AC2  FFFF               	dw	65535	; assembler added errata NOP
  3511  001AC4  90D8               	bcf	status,0,c
  3512  001AC6  3204               	rrcf	___awmod@divisor+1,f,c
  3513  001AC8  3203               	rrcf	___awmod@divisor,f,c
  3514  001ACA  2E05               	decfsz	___awmod@counter,f,c
  3515  001ACC  D7EF               	goto	u2900
  3516  001ACE                     l2895:
  3517  001ACE  FFFF               	dw	65535	; assembler added errata NOP
  3518  001AD0  5006               	movf	___awmod@sign,w,c
  3519  001AD2  B4D8               	btfsc	status,2,c
  3520  001AD4  D004               	goto	l2899
  3521  001AD6  6C01               	negf	___awmod@dividend,c
  3522  001AD8  1E02               	comf	___awmod@dividend+1,f,c
  3523  001ADA  B0D8               	btfsc	status,0,c
  3524  001ADC  2A02               	incf	___awmod@dividend+1,f,c
  3525  001ADE                     l2899:
  3526  001ADE  FFFF               	dw	65535	; assembler added errata NOP
  3527  001AE0  C001  F001         	movff	___awmod@dividend,?___awmod
  3528  001AE4  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3529  001AE8  0012               	return		;funcret
  3530  001AEA  FFFF               	dw	65535	; errata NOP
  3531  001AEC                     __end_of___awmod:
  3532                           	opt callstack 0
  3533                           
  3534 ;; *************** function ___awdiv *****************
  3535 ;; Defined at:
  3536 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;  dividend        2    6[COMRAM] int 
  3539 ;;  divisor         2    8[COMRAM] int 
  3540 ;; Auto vars:     Size  Location     Type
  3541 ;;  quotient        2   12[COMRAM] int 
  3542 ;;  sign            1   11[COMRAM] unsigned char 
  3543 ;;  counter         1   10[COMRAM] unsigned char 
  3544 ;; Return value:  Size  Location     Type
  3545 ;;                  2    6[COMRAM] int 
  3546 ;; Registers used:
  3547 ;;		wreg, status,2, status,0
  3548 ;; Tracked objects:
  3549 ;;		On entry : 0/0
  3550 ;;		On exit  : 0/0
  3551 ;;		Unchanged: 0/0
  3552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3553 ;;      Params:         4       0       0       0       0       0       0
  3554 ;;      Locals:         4       0       0       0       0       0       0
  3555 ;;      Temps:          0       0       0       0       0       0       0
  3556 ;;      Totals:         8       0       0       0       0       0       0
  3557 ;;Total ram usage:        8 bytes
  3558 ;; Hardware stack levels used:    1
  3559 ;; This function calls:
  3560 ;;		Nothing
  3561 ;; This function is called by:
  3562 ;;		_scale
  3563 ;;		_sprintf
  3564 ;; This function uses a non-reentrant model
  3565 ;;
  3566                           
  3567                           	psect	text6
  3568  001C12                     __ptext6:
  3569                           	opt callstack 0
  3570  001C12                     ___awdiv:
  3571                           	opt callstack 0
  3572  001C12  FFFF               	dw	65535	; assembler added errata NOP
  3573                           
  3574                           ;incstack = 0
  3575  001C14  0E00               	movlw	0
  3576  001C16  6E0C               	movwf	___awdiv@sign,c
  3577  001C18  AE0A               	btfss	___awdiv@divisor+1,7,c
  3578  001C1A  D006               	goto	l2831
  3579  001C1C  6C09               	negf	___awdiv@divisor,c
  3580  001C1E  1E0A               	comf	___awdiv@divisor+1,f,c
  3581  001C20  B0D8               	btfsc	status,0,c
  3582  001C22  2A0A               	incf	___awdiv@divisor+1,f,c
  3583  001C24  0E01               	movlw	1
  3584  001C26  6E0C               	movwf	___awdiv@sign,c
  3585  001C28                     l2831:
  3586  001C28  FFFF               	dw	65535	; assembler added errata NOP
  3587  001C2A  AE08               	btfss	___awdiv@dividend+1,7,c
  3588  001C2C  D006               	goto	l2837
  3589  001C2E  6C07               	negf	___awdiv@dividend,c
  3590  001C30  1E08               	comf	___awdiv@dividend+1,f,c
  3591  001C32  B0D8               	btfsc	status,0,c
  3592  001C34  2A08               	incf	___awdiv@dividend+1,f,c
  3593  001C36  0E01               	movlw	1
  3594  001C38  1A0C               	xorwf	___awdiv@sign,f,c
  3595  001C3A                     l2837:
  3596  001C3A  FFFF               	dw	65535	; assembler added errata NOP
  3597  001C3C  0E00               	movlw	0
  3598  001C3E  6E0E               	movwf	___awdiv@quotient+1,c
  3599  001C40  0E00               	movlw	0
  3600  001C42  6E0D               	movwf	___awdiv@quotient,c
  3601  001C44  5009               	movf	___awdiv@divisor,w,c
  3602  001C46  100A               	iorwf	___awdiv@divisor+1,w,c
  3603  001C48  B4D8               	btfsc	status,2,c
  3604  001C4A  D020               	goto	l2859
  3605  001C4C  0E01               	movlw	1
  3606  001C4E  6E0B               	movwf	___awdiv@counter,c
  3607  001C50  D005               	goto	l2845
  3608  001C52                     l2843:
  3609  001C52  FFFF               	dw	65535	; assembler added errata NOP
  3610  001C54  90D8               	bcf	status,0,c
  3611  001C56  3609               	rlcf	___awdiv@divisor,f,c
  3612  001C58  360A               	rlcf	___awdiv@divisor+1,f,c
  3613  001C5A  2A0B               	incf	___awdiv@counter,f,c
  3614  001C5C                     l2845:
  3615  001C5C  FFFF               	dw	65535	; assembler added errata NOP
  3616  001C5E  AE0A               	btfss	___awdiv@divisor+1,7,c
  3617  001C60  D7F8               	goto	l2843
  3618  001C62                     u2840:
  3619  001C62  FFFF               	dw	65535	; assembler added errata NOP
  3620  001C64  90D8               	bcf	status,0,c
  3621  001C66  360D               	rlcf	___awdiv@quotient,f,c
  3622  001C68  360E               	rlcf	___awdiv@quotient+1,f,c
  3623  001C6A  5009               	movf	___awdiv@divisor,w,c
  3624  001C6C  5C07               	subwf	___awdiv@dividend,w,c
  3625  001C6E  500A               	movf	___awdiv@divisor+1,w,c
  3626  001C70  5808               	subwfb	___awdiv@dividend+1,w,c
  3627  001C72  A0D8               	btfss	status,0,c
  3628  001C74  D005               	goto	l2855
  3629  001C76  5009               	movf	___awdiv@divisor,w,c
  3630  001C78  5E07               	subwf	___awdiv@dividend,f,c
  3631  001C7A  500A               	movf	___awdiv@divisor+1,w,c
  3632  001C7C  5A08               	subwfb	___awdiv@dividend+1,f,c
  3633  001C7E  800D               	bsf	___awdiv@quotient,0,c
  3634  001C80                     l2855:
  3635  001C80  FFFF               	dw	65535	; assembler added errata NOP
  3636  001C82  90D8               	bcf	status,0,c
  3637  001C84  320A               	rrcf	___awdiv@divisor+1,f,c
  3638  001C86  3209               	rrcf	___awdiv@divisor,f,c
  3639  001C88  2E0B               	decfsz	___awdiv@counter,f,c
  3640  001C8A  D7EB               	goto	u2840
  3641  001C8C                     l2859:
  3642  001C8C  FFFF               	dw	65535	; assembler added errata NOP
  3643  001C8E  500C               	movf	___awdiv@sign,w,c
  3644  001C90  B4D8               	btfsc	status,2,c
  3645  001C92  D004               	goto	l2863
  3646  001C94  6C0D               	negf	___awdiv@quotient,c
  3647  001C96  1E0E               	comf	___awdiv@quotient+1,f,c
  3648  001C98  B0D8               	btfsc	status,0,c
  3649  001C9A  2A0E               	incf	___awdiv@quotient+1,f,c
  3650  001C9C                     l2863:
  3651  001C9C  FFFF               	dw	65535	; assembler added errata NOP
  3652  001C9E  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  3653  001CA2  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  3654  001CA6  0012               	return		;funcret
  3655  001CA8  FFFF               	dw	65535	; errata NOP
  3656  001CAA                     __end_of___awdiv:
  3657                           	opt callstack 0
  3658                           
  3659 ;; *************** function _isdigit *****************
  3660 ;; Defined at:
  3661 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
  3662 ;; Parameters:    Size  Location     Type
  3663 ;;  c               1    wreg     unsigned char 
  3664 ;; Auto vars:     Size  Location     Type
  3665 ;;  c               1    2[COMRAM] unsigned char 
  3666 ;; Return value:  Size  Location     Type
  3667 ;;		None               void
  3668 ;; Registers used:
  3669 ;;		wreg, status,2, status,0
  3670 ;; Tracked objects:
  3671 ;;		On entry : 0/0
  3672 ;;		On exit  : 0/0
  3673 ;;		Unchanged: 0/0
  3674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3675 ;;      Params:         0       0       0       0       0       0       0
  3676 ;;      Locals:         2       0       0       0       0       0       0
  3677 ;;      Temps:          1       0       0       0       0       0       0
  3678 ;;      Totals:         3       0       0       0       0       0       0
  3679 ;;Total ram usage:        3 bytes
  3680 ;; Hardware stack levels used:    1
  3681 ;; This function calls:
  3682 ;;		Nothing
  3683 ;; This function is called by:
  3684 ;;		_sprintf
  3685 ;; This function uses a non-reentrant model
  3686 ;;
  3687                           
  3688                           	psect	text7
  3689  0016BA                     __ptext7:
  3690                           	opt callstack 0
  3691  0016BA                     _isdigit:
  3692                           	opt callstack 0
  3693  0016BA  FFFF               	dw	65535	; assembler added errata NOP
  3694                           
  3695                           ;incstack = 0
  3696                           ;isdigit@c stored from wreg
  3697  0016BC  6E03               	movwf	isdigit@c,c
  3698  0016BE  0E00               	movlw	0
  3699  0016C0  6E02               	movwf	_isdigit$655,c
  3700  0016C2  0E3A               	movlw	58
  3701  0016C4  6003               	cpfslt	isdigit@c,c
  3702  0016C6  D005               	goto	l3035
  3703  0016C8  0E2F               	movlw	47
  3704  0016CA  6403               	cpfsgt	isdigit@c,c
  3705  0016CC  D002               	goto	l3035
  3706  0016CE  0E01               	movlw	1
  3707  0016D0  6E02               	movwf	_isdigit$655,c
  3708  0016D2                     l3035:
  3709  0016D2  FFFF               	dw	65535	; assembler added errata NOP
  3710  0016D4  C002  F001         	movff	_isdigit$655,??_isdigit
  3711  0016D8  3001               	rrcf	??_isdigit,w,c
  3712  0016DA  0012               	return		;funcret
  3713  0016DC  FFFF               	dw	65535	; errata NOP
  3714  0016DE                     __end_of_isdigit:
  3715                           	opt callstack 0
  3716                           
  3717 ;; *************** function _fround *****************
  3718 ;; Defined at:
  3719 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  3720 ;; Parameters:    Size  Location     Type
  3721 ;;  prec            1    wreg     unsigned char 
  3722 ;; Auto vars:     Size  Location     Type
  3723 ;;  prec            1   51[COMRAM] unsigned char 
  3724 ;; Return value:  Size  Location     Type
  3725 ;;                  4   39[COMRAM] unsigned char 
  3726 ;; Registers used:
  3727 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3728 ;; Tracked objects:
  3729 ;;		On entry : 0/0
  3730 ;;		On exit  : 0/0
  3731 ;;		Unchanged: 0/0
  3732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3733 ;;      Params:         4       0       0       0       0       0       0
  3734 ;;      Locals:         9       0       0       0       0       0       0
  3735 ;;      Temps:          0       0       0       0       0       0       0
  3736 ;;      Totals:        13       0       0       0       0       0       0
  3737 ;;Total ram usage:       13 bytes
  3738 ;; Hardware stack levels used:    1
  3739 ;; Hardware stack levels required when called:    1
  3740 ;; This function calls:
  3741 ;;		___flmul
  3742 ;;		___lwdiv
  3743 ;;		___lwmod
  3744 ;; This function is called by:
  3745 ;;		_sprintf
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           
  3749                           	psect	text8
  3750  002562                     __ptext8:
  3751                           	opt callstack 0
  3752  002562                     _fround:
  3753                           	opt callstack 0
  3754  002562  FFFF               	dw	65535	; assembler added errata NOP
  3755                           
  3756                           ;incstack = 0
  3757                           ;fround@prec stored from wreg
  3758  002564  6E34               	movwf	fround@prec,c
  3759                           
  3760                           ;doprnt.c: 421: if(prec>=110)
  3761  002566  0E6D               	movlw	109
  3762  002568  6434               	cpfsgt	fround@prec,c
  3763  00256A  D0B0               	goto	l2979
  3764                           
  3765                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  3766  00256C  0E00               	movlw	0
  3767  00256E  6E13               	movwf	___flmul@a,c
  3768  002570  0E00               	movlw	0
  3769  002572  6E14               	movwf	___flmul@a+1,c
  3770  002574  0E00               	movlw	0
  3771  002576  6E15               	movwf	___flmul@a+2,c
  3772  002578  0E3F               	movlw	63
  3773  00257A  6E16               	movwf	___flmul@a+3,c
  3774  00257C  0E00               	movlw	0
  3775  00257E  6E09               	movwf	___lwdiv@divisor+1,c
  3776  002580  0E64               	movlw	100
  3777  002582  6E08               	movwf	___lwdiv@divisor,c
  3778  002584  C034  F006         	movff	fround@prec,___lwdiv@dividend
  3779  002588  6A07               	clrf	___lwdiv@dividend+1,c
  3780  00258A  EC5C  F00C         	call	___lwdiv	;wreg free
  3781  00258E  90D8               	bcf	status,0,c
  3782  002590  3606               	rlcf	?___lwdiv,f,c
  3783  002592  3607               	rlcf	?___lwdiv+1,f,c
  3784  002594  90D8               	bcf	status,0,c
  3785  002596  3606               	rlcf	?___lwdiv,f,c
  3786  002598  3607               	rlcf	?___lwdiv+1,f,c
  3787  00259A  0E48               	movlw	72
  3788  00259C  2606               	addwf	?___lwdiv,f,c
  3789  00259E  0E00               	movlw	0
  3790  0025A0  2207               	addwfc	?___lwdiv+1,f,c
  3791  0025A2  0EFD               	movlw	low __npowers_
  3792  0025A4  2406               	addwf	?___lwdiv,w,c
  3793  0025A6  6EF6               	movwf	tblptrl,c
  3794  0025A8  0E7E               	movlw	high __npowers_
  3795  0025AA  2007               	addwfc	?___lwdiv+1,w,c
  3796  0025AC  6EF7               	movwf	tblptrh,c
  3797  0025AE                     	if	0	;There are less than 3 active tblptr bytes
  3798  0025AE                     	endif
  3799  0025AE  0009               	tblrd		*+
  3800  0025B0  FFFF               	dw	65535	; errata NOP
  3801  0025B2  CFF5 F00F          	movff	tablat,___flmul@b
  3802  0025B6  0009               	tblrd		*+
  3803  0025B8  FFFF               	dw	65535	; errata NOP
  3804  0025BA  CFF5 F010          	movff	tablat,___flmul@b+1
  3805  0025BE  0009               	tblrd		*+
  3806  0025C0  FFFF               	dw	65535	; errata NOP
  3807  0025C2  CFF5 F011          	movff	tablat,___flmul@b+2
  3808  0025C6  000A               	tblrd		*-
  3809  0025C8  FFFF               	dw	65535	; errata NOP
  3810  0025CA  CFF5 F012          	movff	tablat,___flmul@b+3
  3811  0025CE  EC05  F017         	call	___flmul	;wreg free
  3812  0025D2  C00F  F030         	movff	?___flmul,_fround$836
  3813  0025D6  C010  F031         	movff	?___flmul+1,_fround$836+1
  3814  0025DA  C011  F032         	movff	?___flmul+2,_fround$836+2
  3815  0025DE  C012  F033         	movff	?___flmul+3,_fround$836+3
  3816                           
  3817                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  3818  0025E2  0E00               	movlw	0
  3819  0025E4  6E09               	movwf	___lwdiv@divisor+1,c
  3820  0025E6  0E0A               	movlw	10
  3821  0025E8  6E08               	movwf	___lwdiv@divisor,c
  3822  0025EA  0E00               	movlw	0
  3823  0025EC  6E04               	movwf	___lwmod@divisor+1,c
  3824  0025EE  0E64               	movlw	100
  3825  0025F0  6E03               	movwf	___lwmod@divisor,c
  3826  0025F2  C034  F001         	movff	fround@prec,___lwmod@dividend
  3827  0025F6  6A02               	clrf	___lwmod@dividend+1,c
  3828  0025F8  EC08  F00C         	call	___lwmod	;wreg free
  3829  0025FC  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  3830  002600  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  3831  002604  EC5C  F00C         	call	___lwdiv	;wreg free
  3832  002608  90D8               	bcf	status,0,c
  3833  00260A  3606               	rlcf	?___lwdiv,f,c
  3834  00260C  3607               	rlcf	?___lwdiv+1,f,c
  3835  00260E  90D8               	bcf	status,0,c
  3836  002610  3606               	rlcf	?___lwdiv,f,c
  3837  002612  3607               	rlcf	?___lwdiv+1,f,c
  3838  002614  0E24               	movlw	36
  3839  002616  2606               	addwf	?___lwdiv,f,c
  3840  002618  0E00               	movlw	0
  3841  00261A  2207               	addwfc	?___lwdiv+1,f,c
  3842  00261C  0EFD               	movlw	low __npowers_
  3843  00261E  2406               	addwf	?___lwdiv,w,c
  3844  002620  6EF6               	movwf	tblptrl,c
  3845  002622  0E7E               	movlw	high __npowers_
  3846  002624  2007               	addwfc	?___lwdiv+1,w,c
  3847  002626  6EF7               	movwf	tblptrh,c
  3848  002628                     	if	0	;There are less than 3 active tblptr bytes
  3849  002628                     	endif
  3850  002628  0009               	tblrd		*+
  3851  00262A  FFFF               	dw	65535	; errata NOP
  3852  00262C  CFF5 F013          	movff	tablat,___flmul@a
  3853  002630  0009               	tblrd		*+
  3854  002632  FFFF               	dw	65535	; errata NOP
  3855  002634  CFF5 F014          	movff	tablat,___flmul@a+1
  3856  002638  0009               	tblrd		*+
  3857  00263A  FFFF               	dw	65535	; errata NOP
  3858  00263C  CFF5 F015          	movff	tablat,___flmul@a+2
  3859  002640  000A               	tblrd		*-
  3860  002642  FFFF               	dw	65535	; errata NOP
  3861  002644  CFF5 F016          	movff	tablat,___flmul@a+3
  3862  002648  C030  F00F         	movff	_fround$836,___flmul@b
  3863  00264C  C031  F010         	movff	_fround$836+1,___flmul@b+1
  3864  002650  C032  F011         	movff	_fround$836+2,___flmul@b+2
  3865  002654  C033  F012         	movff	_fround$836+3,___flmul@b+3
  3866  002658  EC05  F017         	call	___flmul	;wreg free
  3867  00265C  C00F  F02C         	movff	?___flmul,_fround$837
  3868  002660  C010  F02D         	movff	?___flmul+1,_fround$837+1
  3869  002664  C011  F02E         	movff	?___flmul+2,_fround$837+2
  3870  002668  C012  F02F         	movff	?___flmul+3,_fround$837+3
  3871                           
  3872                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  3873  00266C  C02C  F00F         	movff	_fround$837,___flmul@b
  3874  002670  C02D  F010         	movff	_fround$837+1,___flmul@b+1
  3875  002674  C02E  F011         	movff	_fround$837+2,___flmul@b+2
  3876  002678  C02F  F012         	movff	_fround$837+3,___flmul@b+3
  3877  00267C  0E00               	movlw	0
  3878  00267E  6E04               	movwf	___lwmod@divisor+1,c
  3879  002680  0E0A               	movlw	10
  3880  002682  6E03               	movwf	___lwmod@divisor,c
  3881  002684  C034  F001         	movff	fround@prec,___lwmod@dividend
  3882  002688  6A02               	clrf	___lwmod@dividend+1,c
  3883  00268A  EC08  F00C         	call	___lwmod	;wreg free
  3884  00268E  90D8               	bcf	status,0,c
  3885  002690  3601               	rlcf	?___lwmod,f,c
  3886  002692  3602               	rlcf	?___lwmod+1,f,c
  3887  002694  90D8               	bcf	status,0,c
  3888  002696  3601               	rlcf	?___lwmod,f,c
  3889  002698  3602               	rlcf	?___lwmod+1,f,c
  3890  00269A  0EFD               	movlw	low __npowers_
  3891  00269C  2401               	addwf	?___lwmod,w,c
  3892  00269E  6EF6               	movwf	tblptrl,c
  3893  0026A0  0E7E               	movlw	high __npowers_
  3894  0026A2  2002               	addwfc	?___lwmod+1,w,c
  3895  0026A4  6EF7               	movwf	tblptrh,c
  3896  0026A6                     	if	0	;There are less than 3 active tblptr bytes
  3897  0026A6                     	endif
  3898  0026A6  0009               	tblrd		*+
  3899  0026A8  FFFF               	dw	65535	; errata NOP
  3900  0026AA  CFF5 F013          	movff	tablat,___flmul@a
  3901  0026AE  0009               	tblrd		*+
  3902  0026B0  FFFF               	dw	65535	; errata NOP
  3903  0026B2  CFF5 F014          	movff	tablat,___flmul@a+1
  3904  0026B6  0009               	tblrd		*+
  3905  0026B8  FFFF               	dw	65535	; errata NOP
  3906  0026BA  CFF5 F015          	movff	tablat,___flmul@a+2
  3907  0026BE  000A               	tblrd		*-
  3908  0026C0  FFFF               	dw	65535	; errata NOP
  3909  0026C2  CFF5 F016          	movff	tablat,___flmul@a+3
  3910  0026C6  EC05  F017         	call	___flmul	;wreg free
  3911  0026CA  D092               	goto	L10
  3912  0026CC                     l2979:
  3913  0026CC  FFFF               	dw	65535	; assembler added errata NOP
  3914                           
  3915                           ;doprnt.c: 423: else if(prec > 10)
  3916  0026CE  0E0A               	movlw	10
  3917  0026D0  6434               	cpfsgt	fround@prec,c
  3918  0026D2  D06B               	goto	l2985
  3919                           
  3920                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3921  0026D4  0E00               	movlw	0
  3922  0026D6  6E13               	movwf	___flmul@a,c
  3923  0026D8  0E00               	movlw	0
  3924  0026DA  6E14               	movwf	___flmul@a+1,c
  3925  0026DC  0E00               	movlw	0
  3926  0026DE  6E15               	movwf	___flmul@a+2,c
  3927  0026E0  0E3F               	movlw	63
  3928  0026E2  6E16               	movwf	___flmul@a+3,c
  3929  0026E4  0E00               	movlw	0
  3930  0026E6  6E09               	movwf	___lwdiv@divisor+1,c
  3931  0026E8  0E0A               	movlw	10
  3932  0026EA  6E08               	movwf	___lwdiv@divisor,c
  3933  0026EC  C034  F006         	movff	fround@prec,___lwdiv@dividend
  3934  0026F0  6A07               	clrf	___lwdiv@dividend+1,c
  3935  0026F2  EC5C  F00C         	call	___lwdiv	;wreg free
  3936  0026F6  90D8               	bcf	status,0,c
  3937  0026F8  3606               	rlcf	?___lwdiv,f,c
  3938  0026FA  3607               	rlcf	?___lwdiv+1,f,c
  3939  0026FC  90D8               	bcf	status,0,c
  3940  0026FE  3606               	rlcf	?___lwdiv,f,c
  3941  002700  3607               	rlcf	?___lwdiv+1,f,c
  3942  002702  0E24               	movlw	36
  3943  002704  2606               	addwf	?___lwdiv,f,c
  3944  002706  0E00               	movlw	0
  3945  002708  2207               	addwfc	?___lwdiv+1,f,c
  3946  00270A  0EFD               	movlw	low __npowers_
  3947  00270C  2406               	addwf	?___lwdiv,w,c
  3948  00270E  6EF6               	movwf	tblptrl,c
  3949  002710  0E7E               	movlw	high __npowers_
  3950  002712  2007               	addwfc	?___lwdiv+1,w,c
  3951  002714  6EF7               	movwf	tblptrh,c
  3952  002716                     	if	0	;There are less than 3 active tblptr bytes
  3953  002716                     	endif
  3954  002716  0009               	tblrd		*+
  3955  002718  FFFF               	dw	65535	; errata NOP
  3956  00271A  CFF5 F00F          	movff	tablat,___flmul@b
  3957  00271E  0009               	tblrd		*+
  3958  002720  FFFF               	dw	65535	; errata NOP
  3959  002722  CFF5 F010          	movff	tablat,___flmul@b+1
  3960  002726  0009               	tblrd		*+
  3961  002728  FFFF               	dw	65535	; errata NOP
  3962  00272A  CFF5 F011          	movff	tablat,___flmul@b+2
  3963  00272E  000A               	tblrd		*-
  3964  002730  FFFF               	dw	65535	; errata NOP
  3965  002732  CFF5 F012          	movff	tablat,___flmul@b+3
  3966  002736  EC05  F017         	call	___flmul	;wreg free
  3967  00273A  C00F  F030         	movff	?___flmul,_fround$836
  3968  00273E  C010  F031         	movff	?___flmul+1,_fround$836+1
  3969  002742  C011  F032         	movff	?___flmul+2,_fround$836+2
  3970  002746  C012  F033         	movff	?___flmul+3,_fround$836+3
  3971                           
  3972                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3973  00274A  C030  F00F         	movff	_fround$836,___flmul@b
  3974  00274E  C031  F010         	movff	_fround$836+1,___flmul@b+1
  3975  002752  C032  F011         	movff	_fround$836+2,___flmul@b+2
  3976  002756  C033  F012         	movff	_fround$836+3,___flmul@b+3
  3977  00275A  0E00               	movlw	0
  3978  00275C  6E04               	movwf	___lwmod@divisor+1,c
  3979  00275E  0E0A               	movlw	10
  3980  002760  6E03               	movwf	___lwmod@divisor,c
  3981  002762  C034  F001         	movff	fround@prec,___lwmod@dividend
  3982  002766  6A02               	clrf	___lwmod@dividend+1,c
  3983  002768  EC08  F00C         	call	___lwmod	;wreg free
  3984  00276C  90D8               	bcf	status,0,c
  3985  00276E  3601               	rlcf	?___lwmod,f,c
  3986  002770  3602               	rlcf	?___lwmod+1,f,c
  3987  002772  90D8               	bcf	status,0,c
  3988  002774  3601               	rlcf	?___lwmod,f,c
  3989  002776  3602               	rlcf	?___lwmod+1,f,c
  3990  002778  0EFD               	movlw	low __npowers_
  3991  00277A  2401               	addwf	?___lwmod,w,c
  3992  00277C  6EF6               	movwf	tblptrl,c
  3993  00277E  0E7E               	movlw	high __npowers_
  3994  002780  2002               	addwfc	?___lwmod+1,w,c
  3995  002782  6EF7               	movwf	tblptrh,c
  3996  002784                     	if	0	;There are less than 3 active tblptr bytes
  3997  002784                     	endif
  3998  002784  0009               	tblrd		*+
  3999  002786  FFFF               	dw	65535	; errata NOP
  4000  002788  CFF5 F013          	movff	tablat,___flmul@a
  4001  00278C  0009               	tblrd		*+
  4002  00278E  FFFF               	dw	65535	; errata NOP
  4003  002790  CFF5 F014          	movff	tablat,___flmul@a+1
  4004  002794  0009               	tblrd		*+
  4005  002796  FFFF               	dw	65535	; errata NOP
  4006  002798  CFF5 F015          	movff	tablat,___flmul@a+2
  4007  00279C  000A               	tblrd		*-
  4008  00279E  FFFF               	dw	65535	; errata NOP
  4009  0027A0  CFF5 F016          	movff	tablat,___flmul@a+3
  4010  0027A4  EC05  F017         	call	___flmul	;wreg free
  4011  0027A8  D023               	goto	L10
  4012  0027AA                     l2985:
  4013  0027AA  FFFF               	dw	65535	; assembler added errata NOP
  4014                           
  4015                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  4016  0027AC  5034               	movf	fround@prec,w,c
  4017  0027AE  0D04               	mullw	4
  4018  0027B0  0EFD               	movlw	low __npowers_
  4019  0027B2  24F3               	addwf	prodl,w,c
  4020  0027B4  6EF6               	movwf	tblptrl,c
  4021  0027B6  0E7E               	movlw	high __npowers_
  4022  0027B8  20F4               	addwfc	prodh,w,c
  4023  0027BA  6EF7               	movwf	tblptrh,c
  4024  0027BC                     	if	0	;There are less than 3 active tblptr bytes
  4025  0027BC                     	endif
  4026  0027BC  0009               	tblrd		*+
  4027  0027BE  FFFF               	dw	65535	; errata NOP
  4028  0027C0  CFF5 F00F          	movff	tablat,___flmul@b
  4029  0027C4  0009               	tblrd		*+
  4030  0027C6  FFFF               	dw	65535	; errata NOP
  4031  0027C8  CFF5 F010          	movff	tablat,___flmul@b+1
  4032  0027CC  0009               	tblrd		*+
  4033  0027CE  FFFF               	dw	65535	; errata NOP
  4034  0027D0  CFF5 F011          	movff	tablat,___flmul@b+2
  4035  0027D4  000A               	tblrd		*-
  4036  0027D6  FFFF               	dw	65535	; errata NOP
  4037  0027D8  CFF5 F012          	movff	tablat,___flmul@b+3
  4038  0027DC  0E00               	movlw	0
  4039  0027DE  6E13               	movwf	___flmul@a,c
  4040  0027E0  0E00               	movlw	0
  4041  0027E2  6E14               	movwf	___flmul@a+1,c
  4042  0027E4  0E00               	movlw	0
  4043  0027E6  6E15               	movwf	___flmul@a+2,c
  4044  0027E8  0E3F               	movlw	63
  4045  0027EA  6E16               	movwf	___flmul@a+3,c
  4046  0027EC  EC05  F017         	call	___flmul	;wreg free
  4047  0027F0                     L10:
  4048  0027F0  FFFF               	dw	65535	; assembler added errata NOP
  4049  0027F2  C00F  F028         	movff	?___flmul,?_fround
  4050  0027F6  C010  F029         	movff	?___flmul+1,?_fround+1
  4051  0027FA  C011  F02A         	movff	?___flmul+2,?_fround+2
  4052  0027FE  C012  F02B         	movff	?___flmul+3,?_fround+3
  4053  002802  0012               	return		;funcret
  4054  002804  FFFF               	dw	65535	; errata NOP
  4055  002806                     __end_of_fround:
  4056                           	opt callstack 0
  4057                           
  4058 ;; *************** function ___lwmod *****************
  4059 ;; Defined at:
  4060 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  4061 ;; Parameters:    Size  Location     Type
  4062 ;;  dividend        2    0[COMRAM] unsigned int 
  4063 ;;  divisor         2    2[COMRAM] unsigned int 
  4064 ;; Auto vars:     Size  Location     Type
  4065 ;;  counter         1    4[COMRAM] unsigned char 
  4066 ;; Return value:  Size  Location     Type
  4067 ;;                  2    0[COMRAM] unsigned int 
  4068 ;; Registers used:
  4069 ;;		wreg, status,2, status,0
  4070 ;; Tracked objects:
  4071 ;;		On entry : 0/0
  4072 ;;		On exit  : 0/0
  4073 ;;		Unchanged: 0/0
  4074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4075 ;;      Params:         4       0       0       0       0       0       0
  4076 ;;      Locals:         1       0       0       0       0       0       0
  4077 ;;      Temps:          0       0       0       0       0       0       0
  4078 ;;      Totals:         5       0       0       0       0       0       0
  4079 ;;Total ram usage:        5 bytes
  4080 ;; Hardware stack levels used:    1
  4081 ;; This function calls:
  4082 ;;		Nothing
  4083 ;; This function is called by:
  4084 ;;		_fround
  4085 ;; This function uses a non-reentrant model
  4086 ;;
  4087                           
  4088                           	psect	text9
  4089  001810                     __ptext9:
  4090                           	opt callstack 0
  4091  001810                     ___lwmod:
  4092                           	opt callstack 0
  4093  001810  FFFF               	dw	65535	; assembler added errata NOP
  4094                           
  4095                           ;incstack = 0
  4096  001812  5003               	movf	___lwmod@divisor,w,c
  4097  001814  1004               	iorwf	___lwmod@divisor+1,w,c
  4098  001816  B4D8               	btfsc	status,2,c
  4099  001818  D01C               	goto	l784
  4100  00181A  0E01               	movlw	1
  4101  00181C  6E05               	movwf	___lwmod@counter,c
  4102  00181E  D005               	goto	l2931
  4103  001820                     l2929:
  4104  001820  FFFF               	dw	65535	; assembler added errata NOP
  4105  001822  90D8               	bcf	status,0,c
  4106  001824  3603               	rlcf	___lwmod@divisor,f,c
  4107  001826  3604               	rlcf	___lwmod@divisor+1,f,c
  4108  001828  2A05               	incf	___lwmod@counter,f,c
  4109  00182A                     l2931:
  4110  00182A  FFFF               	dw	65535	; assembler added errata NOP
  4111  00182C  AE04               	btfss	___lwmod@divisor+1,7,c
  4112  00182E  D7F8               	goto	l2929
  4113  001830                     u2970:
  4114  001830  FFFF               	dw	65535	; assembler added errata NOP
  4115  001832  5003               	movf	___lwmod@divisor,w,c
  4116  001834  5C01               	subwf	___lwmod@dividend,w,c
  4117  001836  5004               	movf	___lwmod@divisor+1,w,c
  4118  001838  5802               	subwfb	___lwmod@dividend+1,w,c
  4119  00183A  A0D8               	btfss	status,0,c
  4120  00183C  D004               	goto	l2937
  4121  00183E  5003               	movf	___lwmod@divisor,w,c
  4122  001840  5E01               	subwf	___lwmod@dividend,f,c
  4123  001842  5004               	movf	___lwmod@divisor+1,w,c
  4124  001844  5A02               	subwfb	___lwmod@dividend+1,f,c
  4125  001846                     l2937:
  4126  001846  FFFF               	dw	65535	; assembler added errata NOP
  4127  001848  90D8               	bcf	status,0,c
  4128  00184A  3204               	rrcf	___lwmod@divisor+1,f,c
  4129  00184C  3203               	rrcf	___lwmod@divisor,f,c
  4130  00184E  2E05               	decfsz	___lwmod@counter,f,c
  4131  001850  D7EF               	goto	u2970
  4132  001852                     l784:
  4133  001852  FFFF               	dw	65535	; assembler added errata NOP
  4134  001854  C001  F001         	movff	___lwmod@dividend,?___lwmod
  4135  001858  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  4136  00185C  0012               	return		;funcret
  4137  00185E  FFFF               	dw	65535	; errata NOP
  4138  001860                     __end_of___lwmod:
  4139                           	opt callstack 0
  4140                           
  4141 ;; *************** function ___lwdiv *****************
  4142 ;; Defined at:
  4143 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  4144 ;; Parameters:    Size  Location     Type
  4145 ;;  dividend        2    5[COMRAM] unsigned int 
  4146 ;;  divisor         2    7[COMRAM] unsigned int 
  4147 ;; Auto vars:     Size  Location     Type
  4148 ;;  quotient        2    9[COMRAM] unsigned int 
  4149 ;;  counter         1   11[COMRAM] unsigned char 
  4150 ;; Return value:  Size  Location     Type
  4151 ;;                  2    5[COMRAM] unsigned int 
  4152 ;; Registers used:
  4153 ;;		wreg, status,2, status,0
  4154 ;; Tracked objects:
  4155 ;;		On entry : 0/0
  4156 ;;		On exit  : 0/0
  4157 ;;		Unchanged: 0/0
  4158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4159 ;;      Params:         4       0       0       0       0       0       0
  4160 ;;      Locals:         3       0       0       0       0       0       0
  4161 ;;      Temps:          0       0       0       0       0       0       0
  4162 ;;      Totals:         7       0       0       0       0       0       0
  4163 ;;Total ram usage:        7 bytes
  4164 ;; Hardware stack levels used:    1
  4165 ;; This function calls:
  4166 ;;		Nothing
  4167 ;; This function is called by:
  4168 ;;		_fround
  4169 ;; This function uses a non-reentrant model
  4170 ;;
  4171                           
  4172                           	psect	text10
  4173  0018B8                     __ptext10:
  4174                           	opt callstack 0
  4175  0018B8                     ___lwdiv:
  4176                           	opt callstack 0
  4177  0018B8  FFFF               	dw	65535	; assembler added errata NOP
  4178                           
  4179                           ;incstack = 0
  4180  0018BA  0E00               	movlw	0
  4181  0018BC  6E0B               	movwf	___lwdiv@quotient+1,c
  4182  0018BE  0E00               	movlw	0
  4183  0018C0  6E0A               	movwf	___lwdiv@quotient,c
  4184  0018C2  5008               	movf	___lwdiv@divisor,w,c
  4185  0018C4  1009               	iorwf	___lwdiv@divisor+1,w,c
  4186  0018C6  B4D8               	btfsc	status,2,c
  4187  0018C8  D020               	goto	l774
  4188  0018CA  0E01               	movlw	1
  4189  0018CC  6E0C               	movwf	___lwdiv@counter,c
  4190  0018CE  D005               	goto	l2911
  4191  0018D0                     l2909:
  4192  0018D0  FFFF               	dw	65535	; assembler added errata NOP
  4193  0018D2  90D8               	bcf	status,0,c
  4194  0018D4  3608               	rlcf	___lwdiv@divisor,f,c
  4195  0018D6  3609               	rlcf	___lwdiv@divisor+1,f,c
  4196  0018D8  2A0C               	incf	___lwdiv@counter,f,c
  4197  0018DA                     l2911:
  4198  0018DA  FFFF               	dw	65535	; assembler added errata NOP
  4199  0018DC  AE09               	btfss	___lwdiv@divisor+1,7,c
  4200  0018DE  D7F8               	goto	l2909
  4201  0018E0                     u2940:
  4202  0018E0  FFFF               	dw	65535	; assembler added errata NOP
  4203  0018E2  90D8               	bcf	status,0,c
  4204  0018E4  360A               	rlcf	___lwdiv@quotient,f,c
  4205  0018E6  360B               	rlcf	___lwdiv@quotient+1,f,c
  4206  0018E8  5008               	movf	___lwdiv@divisor,w,c
  4207  0018EA  5C06               	subwf	___lwdiv@dividend,w,c
  4208  0018EC  5009               	movf	___lwdiv@divisor+1,w,c
  4209  0018EE  5807               	subwfb	___lwdiv@dividend+1,w,c
  4210  0018F0  A0D8               	btfss	status,0,c
  4211  0018F2  D005               	goto	l2921
  4212  0018F4  5008               	movf	___lwdiv@divisor,w,c
  4213  0018F6  5E06               	subwf	___lwdiv@dividend,f,c
  4214  0018F8  5009               	movf	___lwdiv@divisor+1,w,c
  4215  0018FA  5A07               	subwfb	___lwdiv@dividend+1,f,c
  4216  0018FC  800A               	bsf	___lwdiv@quotient,0,c
  4217  0018FE                     l2921:
  4218  0018FE  FFFF               	dw	65535	; assembler added errata NOP
  4219  001900  90D8               	bcf	status,0,c
  4220  001902  3209               	rrcf	___lwdiv@divisor+1,f,c
  4221  001904  3208               	rrcf	___lwdiv@divisor,f,c
  4222  001906  2E0C               	decfsz	___lwdiv@counter,f,c
  4223  001908  D7EB               	goto	u2940
  4224  00190A                     l774:
  4225  00190A  FFFF               	dw	65535	; assembler added errata NOP
  4226  00190C  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  4227  001910  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4228  001914  0012               	return		;funcret
  4229  001916  FFFF               	dw	65535	; errata NOP
  4230  001918                     __end_of___lwdiv:
  4231                           	opt callstack 0
  4232                           
  4233 ;; *************** function __tdiv_to_l_ *****************
  4234 ;; Defined at:
  4235 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftdivl.c"
  4236 ;; Parameters:    Size  Location     Type
  4237 ;;  f1              4    0[COMRAM] float 
  4238 ;;  f2              4    4[COMRAM] float 
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;  quot            4   11[COMRAM] unsigned long 
  4241 ;;  exp1            1   16[COMRAM] unsigned char 
  4242 ;;  cntr            1   15[COMRAM] unsigned char 
  4243 ;; Return value:  Size  Location     Type
  4244 ;;                  4    0[COMRAM] unsigned long 
  4245 ;; Registers used:
  4246 ;;		wreg, status,2, status,0
  4247 ;; Tracked objects:
  4248 ;;		On entry : 0/0
  4249 ;;		On exit  : 0/0
  4250 ;;		Unchanged: 0/0
  4251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4252 ;;      Params:         8       0       0       0       0       0       0
  4253 ;;      Locals:         6       0       0       0       0       0       0
  4254 ;;      Temps:          3       0       0       0       0       0       0
  4255 ;;      Totals:        17       0       0       0       0       0       0
  4256 ;;Total ram usage:       17 bytes
  4257 ;; Hardware stack levels used:    1
  4258 ;; This function calls:
  4259 ;;		Nothing
  4260 ;; This function is called by:
  4261 ;;		_sprintf
  4262 ;; This function uses a non-reentrant model
  4263 ;;
  4264                           
  4265                           	psect	text11
  4266  002050                     __ptext11:
  4267                           	opt callstack 0
  4268  002050                     __tdiv_to_l_:
  4269                           	opt callstack 0
  4270  002050  FFFF               	dw	65535	; assembler added errata NOP
  4271                           
  4272                           ;incstack = 0
  4273  002052  C003  F009         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  4274  002056  6A0A               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  4275  002058  6A0B               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  4276  00205A  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  4277  00205C  3609               	rlcf	??__tdiv_to_l_& (0+255),f,c
  4278  00205E  E301               	bnc	u3101
  4279  002060  800A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  4280  002062                     u3101:
  4281  002062  5009               	movf	??__tdiv_to_l_,w,c
  4282  002064  6E11               	movwf	__tdiv_to_l_@exp1,c
  4283  002066  5011               	movf	__tdiv_to_l_@exp1,w,c
  4284  002068  A4D8               	btfss	status,2,c
  4285  00206A  D00A               	goto	l3045
  4286  00206C                     u3110:
  4287  00206C  FFFF               	dw	65535	; assembler added errata NOP
  4288  00206E  0E00               	movlw	0
  4289  002070  6E01               	movwf	?__tdiv_to_l_,c
  4290  002072  0E00               	movlw	0
  4291  002074  6E02               	movwf	?__tdiv_to_l_+1,c
  4292  002076  0E00               	movlw	0
  4293  002078  6E03               	movwf	?__tdiv_to_l_+2,c
  4294  00207A  0E00               	movlw	0
  4295  00207C  6E04               	movwf	?__tdiv_to_l_+3,c
  4296  00207E  D070               	goto	l624
  4297  002080                     l3045:
  4298  002080  FFFF               	dw	65535	; assembler added errata NOP
  4299  002082  C007  F009         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  4300  002086  6A0A               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  4301  002088  6A0B               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  4302  00208A  3406               	rlcf	__tdiv_to_l_@f2+1,w,c
  4303  00208C  3609               	rlcf	??__tdiv_to_l_& (0+255),f,c
  4304  00208E  E301               	bnc	u3121
  4305  002090  800A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  4306  002092                     u3121:
  4307  002092  5009               	movf	??__tdiv_to_l_,w,c
  4308  002094  6E10               	movwf	__tdiv_to_l_@cntr,c
  4309  002096  5010               	movf	__tdiv_to_l_@cntr,w,c
  4310  002098  B4D8               	btfsc	status,2,c
  4311  00209A  D7E8               	goto	u3110
  4312  00209C  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  4313  00209E  0EFF               	movlw	255
  4314  0020A0  1601               	andwf	__tdiv_to_l_@f1,f,c
  4315  0020A2  0EFF               	movlw	255
  4316  0020A4  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  4317  0020A6  0E00               	movlw	0
  4318  0020A8  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  4319  0020AA  8E06               	bsf	__tdiv_to_l_@f2+1,7,c
  4320  0020AC  0EFF               	movlw	255
  4321  0020AE  1605               	andwf	__tdiv_to_l_@f2,f,c
  4322  0020B0  0EFF               	movlw	255
  4323  0020B2  1606               	andwf	__tdiv_to_l_@f2+1,f,c
  4324  0020B4  0E00               	movlw	0
  4325  0020B6  1607               	andwf	__tdiv_to_l_@f2+2,f,c
  4326  0020B8  0E00               	movlw	0
  4327  0020BA  6E0C               	movwf	__tdiv_to_l_@quot,c
  4328  0020BC  0E00               	movlw	0
  4329  0020BE  6E0D               	movwf	__tdiv_to_l_@quot+1,c
  4330  0020C0  0E00               	movlw	0
  4331  0020C2  6E0E               	movwf	__tdiv_to_l_@quot+2,c
  4332  0020C4  0E00               	movlw	0
  4333  0020C6  6E0F               	movwf	__tdiv_to_l_@quot+3,c
  4334  0020C8  0E7F               	movlw	127
  4335  0020CA  5E11               	subwf	__tdiv_to_l_@exp1,f,c
  4336  0020CC  5010               	movf	__tdiv_to_l_@cntr,w,c
  4337  0020CE  0F98               	addlw	152
  4338  0020D0  5E11               	subwf	__tdiv_to_l_@exp1,f,c
  4339  0020D2  0E18               	movlw	24
  4340  0020D4  6E10               	movwf	__tdiv_to_l_@cntr,c
  4341  0020D6                     l626:
  4342  0020D6  FFFF               	dw	65535	; assembler added errata NOP
  4343  0020D8  90D8               	bcf	status,0,c
  4344  0020DA  360C               	rlcf	__tdiv_to_l_@quot,f,c
  4345  0020DC  360D               	rlcf	__tdiv_to_l_@quot+1,f,c
  4346  0020DE  360E               	rlcf	__tdiv_to_l_@quot+2,f,c
  4347  0020E0  360F               	rlcf	__tdiv_to_l_@quot+3,f,c
  4348  0020E2  5005               	movf	__tdiv_to_l_@f2,w,c
  4349  0020E4  5C01               	subwf	__tdiv_to_l_@f1,w,c
  4350  0020E6  5006               	movf	__tdiv_to_l_@f2+1,w,c
  4351  0020E8  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  4352  0020EA  5007               	movf	__tdiv_to_l_@f2+2,w,c
  4353  0020EC  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  4354  0020EE  A0D8               	btfss	status,0,c
  4355  0020F0  D007               	goto	l627
  4356  0020F2  5005               	movf	__tdiv_to_l_@f2,w,c
  4357  0020F4  5E01               	subwf	__tdiv_to_l_@f1,f,c
  4358  0020F6  5006               	movf	__tdiv_to_l_@f2+1,w,c
  4359  0020F8  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  4360  0020FA  5007               	movf	__tdiv_to_l_@f2+2,w,c
  4361  0020FC  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  4362  0020FE  800C               	bsf	__tdiv_to_l_@quot,0,c
  4363  002100                     l627:
  4364  002100  FFFF               	dw	65535	; assembler added errata NOP
  4365  002102  90D8               	bcf	status,0,c
  4366  002104  3601               	rlcf	__tdiv_to_l_@f1,f,c
  4367  002106  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  4368  002108  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  4369  00210A  2E10               	decfsz	__tdiv_to_l_@cntr,f,c
  4370  00210C  D7E4               	goto	l626
  4371  00210E  AE11               	btfss	__tdiv_to_l_@exp1,7,c
  4372  002110  D00E               	goto	l3085
  4373  002112  5011               	movf	__tdiv_to_l_@exp1,w,c
  4374  002114  0A80               	xorlw	128
  4375  002116  0F97               	addlw	151
  4376  002118  A0D8               	btfss	status,0,c
  4377  00211A  D7A8               	goto	u3110
  4378  00211C                     l3081:
  4379  00211C  FFFF               	dw	65535	; assembler added errata NOP
  4380  00211E  90D8               	bcf	status,0,c
  4381  002120  320F               	rrcf	__tdiv_to_l_@quot+3,f,c
  4382  002122  320E               	rrcf	__tdiv_to_l_@quot+2,f,c
  4383  002124  320D               	rrcf	__tdiv_to_l_@quot+1,f,c
  4384  002126  320C               	rrcf	__tdiv_to_l_@quot,f,c
  4385  002128  3E11               	incfsz	__tdiv_to_l_@exp1,f,c
  4386  00212A  D7F8               	goto	l3081
  4387  00212C  D010               	goto	u3180
  4388  00212E                     l3085:
  4389  00212E  FFFF               	dw	65535	; assembler added errata NOP
  4390  002130  0E17               	movlw	23
  4391  002132  6411               	cpfsgt	__tdiv_to_l_@exp1,c
  4392  002134  D008               	goto	l3093
  4393  002136  D79A               	goto	u3110
  4394  002138                     l3091:
  4395  002138  FFFF               	dw	65535	; assembler added errata NOP
  4396  00213A  90D8               	bcf	status,0,c
  4397  00213C  360C               	rlcf	__tdiv_to_l_@quot,f,c
  4398  00213E  360D               	rlcf	__tdiv_to_l_@quot+1,f,c
  4399  002140  360E               	rlcf	__tdiv_to_l_@quot+2,f,c
  4400  002142  360F               	rlcf	__tdiv_to_l_@quot+3,f,c
  4401  002144  0611               	decf	__tdiv_to_l_@exp1,f,c
  4402  002146                     l3093:
  4403  002146  FFFF               	dw	65535	; assembler added errata NOP
  4404  002148  5011               	movf	__tdiv_to_l_@exp1,w,c
  4405  00214A  A4D8               	btfss	status,2,c
  4406  00214C  D7F5               	goto	l3091
  4407  00214E                     u3180:
  4408  00214E  FFFF               	dw	65535	; assembler added errata NOP
  4409  002150  C00C  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  4410  002154  C00D  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  4411  002158  C00E  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  4412  00215C  C00F  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  4413  002160                     l624:
  4414  002160  FFFF               	dw	65535	; assembler added errata NOP
  4415  002162  0012               	return		;funcret
  4416  002164  FFFF               	dw	65535	; errata NOP
  4417  002166                     __end_of__tdiv_to_l_:
  4418                           	opt callstack 0
  4419                           
  4420 ;; *************** function __div_to_l_ *****************
  4421 ;; Defined at:
  4422 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fldivl.c"
  4423 ;; Parameters:    Size  Location     Type
  4424 ;;  f1              4    0[COMRAM] unsigned long 
  4425 ;;  f2              4    4[COMRAM] unsigned long 
  4426 ;; Auto vars:     Size  Location     Type
  4427 ;;  quot            4    8[COMRAM] unsigned long 
  4428 ;;  exp1            1   13[COMRAM] unsigned char 
  4429 ;;  cntr            1   12[COMRAM] unsigned char 
  4430 ;; Return value:  Size  Location     Type
  4431 ;;                  4    0[COMRAM] unsigned long 
  4432 ;; Registers used:
  4433 ;;		wreg, status,2, status,0
  4434 ;; Tracked objects:
  4435 ;;		On entry : 0/0
  4436 ;;		On exit  : 0/0
  4437 ;;		Unchanged: 0/0
  4438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4439 ;;      Params:         8       0       0       0       0       0       0
  4440 ;;      Locals:         6       0       0       0       0       0       0
  4441 ;;      Temps:          0       0       0       0       0       0       0
  4442 ;;      Totals:        14       0       0       0       0       0       0
  4443 ;;Total ram usage:       14 bytes
  4444 ;; Hardware stack levels used:    1
  4445 ;; This function calls:
  4446 ;;		Nothing
  4447 ;; This function is called by:
  4448 ;;		_sprintf
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452                           	psect	text12
  4453  001F44                     __ptext12:
  4454                           	opt callstack 0
  4455  001F44                     __div_to_l_:
  4456                           	opt callstack 0
  4457  001F44  FFFF               	dw	65535	; assembler added errata NOP
  4458                           
  4459                           ;incstack = 0
  4460  001F46  3403               	rlcf	__div_to_l_@f1+2,w,c
  4461  001F48  3404               	rlcf	__div_to_l_@f1+3,w,c
  4462  001F4A  6E0E               	movwf	__div_to_l_@exp1,c
  4463  001F4C  500E               	movf	__div_to_l_@exp1,w,c
  4464  001F4E  A4D8               	btfss	status,2,c
  4465  001F50  D00A               	goto	l3101
  4466  001F52                     u3190:
  4467  001F52  FFFF               	dw	65535	; assembler added errata NOP
  4468  001F54  0E00               	movlw	0
  4469  001F56  6E01               	movwf	?__div_to_l_,c
  4470  001F58  0E00               	movlw	0
  4471  001F5A  6E02               	movwf	?__div_to_l_+1,c
  4472  001F5C  0E00               	movlw	0
  4473  001F5E  6E03               	movwf	?__div_to_l_+2,c
  4474  001F60  0E00               	movlw	0
  4475  001F62  6E04               	movwf	?__div_to_l_+3,c
  4476  001F64  D072               	goto	l515
  4477  001F66                     l3101:
  4478  001F66  FFFF               	dw	65535	; assembler added errata NOP
  4479  001F68  3407               	rlcf	__div_to_l_@f2+2,w,c
  4480  001F6A  3408               	rlcf	__div_to_l_@f2+3,w,c
  4481  001F6C  6E0D               	movwf	__div_to_l_@cntr,c
  4482  001F6E  500D               	movf	__div_to_l_@cntr,w,c
  4483  001F70  B4D8               	btfsc	status,2,c
  4484  001F72  D7EF               	goto	u3190
  4485  001F74  8E03               	bsf	__div_to_l_@f1+2,7,c
  4486  001F76  0EFF               	movlw	255
  4487  001F78  1601               	andwf	__div_to_l_@f1,f,c
  4488  001F7A  0EFF               	movlw	255
  4489  001F7C  1602               	andwf	__div_to_l_@f1+1,f,c
  4490  001F7E  0EFF               	movlw	255
  4491  001F80  1603               	andwf	__div_to_l_@f1+2,f,c
  4492  001F82  0E00               	movlw	0
  4493  001F84  1604               	andwf	__div_to_l_@f1+3,f,c
  4494  001F86  8E07               	bsf	__div_to_l_@f2+2,7,c
  4495  001F88  0EFF               	movlw	255
  4496  001F8A  1605               	andwf	__div_to_l_@f2,f,c
  4497  001F8C  0EFF               	movlw	255
  4498  001F8E  1606               	andwf	__div_to_l_@f2+1,f,c
  4499  001F90  0EFF               	movlw	255
  4500  001F92  1607               	andwf	__div_to_l_@f2+2,f,c
  4501  001F94  0E00               	movlw	0
  4502  001F96  1608               	andwf	__div_to_l_@f2+3,f,c
  4503  001F98  0E00               	movlw	0
  4504  001F9A  6E09               	movwf	__div_to_l_@quot,c
  4505  001F9C  0E00               	movlw	0
  4506  001F9E  6E0A               	movwf	__div_to_l_@quot+1,c
  4507  001FA0  0E00               	movlw	0
  4508  001FA2  6E0B               	movwf	__div_to_l_@quot+2,c
  4509  001FA4  0E00               	movlw	0
  4510  001FA6  6E0C               	movwf	__div_to_l_@quot+3,c
  4511  001FA8  0E7F               	movlw	127
  4512  001FAA  5E0E               	subwf	__div_to_l_@exp1,f,c
  4513  001FAC  500D               	movf	__div_to_l_@cntr,w,c
  4514  001FAE  0FA0               	addlw	160
  4515  001FB0  5E0E               	subwf	__div_to_l_@exp1,f,c
  4516  001FB2  0E20               	movlw	32
  4517  001FB4  6E0D               	movwf	__div_to_l_@cntr,c
  4518  001FB6                     l3121:
  4519  001FB6  FFFF               	dw	65535	; assembler added errata NOP
  4520  001FB8  90D8               	bcf	status,0,c
  4521  001FBA  3609               	rlcf	__div_to_l_@quot,f,c
  4522  001FBC  360A               	rlcf	__div_to_l_@quot+1,f,c
  4523  001FBE  360B               	rlcf	__div_to_l_@quot+2,f,c
  4524  001FC0  360C               	rlcf	__div_to_l_@quot+3,f,c
  4525  001FC2  5005               	movf	__div_to_l_@f2,w,c
  4526  001FC4  5C01               	subwf	__div_to_l_@f1,w,c
  4527  001FC6  5006               	movf	__div_to_l_@f2+1,w,c
  4528  001FC8  5802               	subwfb	__div_to_l_@f1+1,w,c
  4529  001FCA  5007               	movf	__div_to_l_@f2+2,w,c
  4530  001FCC  5803               	subwfb	__div_to_l_@f1+2,w,c
  4531  001FCE  5008               	movf	__div_to_l_@f2+3,w,c
  4532  001FD0  5804               	subwfb	__div_to_l_@f1+3,w,c
  4533  001FD2  A0D8               	btfss	status,0,c
  4534  001FD4  D009               	goto	l3129
  4535  001FD6  5005               	movf	__div_to_l_@f2,w,c
  4536  001FD8  5E01               	subwf	__div_to_l_@f1,f,c
  4537  001FDA  5006               	movf	__div_to_l_@f2+1,w,c
  4538  001FDC  5A02               	subwfb	__div_to_l_@f1+1,f,c
  4539  001FDE  5007               	movf	__div_to_l_@f2+2,w,c
  4540  001FE0  5A03               	subwfb	__div_to_l_@f1+2,f,c
  4541  001FE2  5008               	movf	__div_to_l_@f2+3,w,c
  4542  001FE4  5A04               	subwfb	__div_to_l_@f1+3,f,c
  4543  001FE6  8009               	bsf	__div_to_l_@quot,0,c
  4544  001FE8                     l3129:
  4545  001FE8  FFFF               	dw	65535	; assembler added errata NOP
  4546  001FEA  90D8               	bcf	status,0,c
  4547  001FEC  3601               	rlcf	__div_to_l_@f1,f,c
  4548  001FEE  3602               	rlcf	__div_to_l_@f1+1,f,c
  4549  001FF0  3603               	rlcf	__div_to_l_@f1+2,f,c
  4550  001FF2  3604               	rlcf	__div_to_l_@f1+3,f,c
  4551  001FF4  2E0D               	decfsz	__div_to_l_@cntr,f,c
  4552  001FF6  D7DF               	goto	l3121
  4553  001FF8  AE0E               	btfss	__div_to_l_@exp1,7,c
  4554  001FFA  D00E               	goto	l3145
  4555  001FFC  500E               	movf	__div_to_l_@exp1,w,c
  4556  001FFE  0A80               	xorlw	128
  4557  002000  0F9F               	addlw	159
  4558  002002  A0D8               	btfss	status,0,c
  4559  002004  D7A6               	goto	u3190
  4560  002006                     l3141:
  4561  002006  FFFF               	dw	65535	; assembler added errata NOP
  4562  002008  90D8               	bcf	status,0,c
  4563  00200A  320C               	rrcf	__div_to_l_@quot+3,f,c
  4564  00200C  320B               	rrcf	__div_to_l_@quot+2,f,c
  4565  00200E  320A               	rrcf	__div_to_l_@quot+1,f,c
  4566  002010  3209               	rrcf	__div_to_l_@quot,f,c
  4567  002012  3E0E               	incfsz	__div_to_l_@exp1,f,c
  4568  002014  D7F8               	goto	l3141
  4569  002016  D010               	goto	u3250
  4570  002018                     l3145:
  4571  002018  FFFF               	dw	65535	; assembler added errata NOP
  4572  00201A  0E1F               	movlw	31
  4573  00201C  640E               	cpfsgt	__div_to_l_@exp1,c
  4574  00201E  D008               	goto	l3153
  4575  002020  D798               	goto	u3190
  4576  002022                     l3151:
  4577  002022  FFFF               	dw	65535	; assembler added errata NOP
  4578  002024  90D8               	bcf	status,0,c
  4579  002026  3609               	rlcf	__div_to_l_@quot,f,c
  4580  002028  360A               	rlcf	__div_to_l_@quot+1,f,c
  4581  00202A  360B               	rlcf	__div_to_l_@quot+2,f,c
  4582  00202C  360C               	rlcf	__div_to_l_@quot+3,f,c
  4583  00202E  060E               	decf	__div_to_l_@exp1,f,c
  4584  002030                     l3153:
  4585  002030  FFFF               	dw	65535	; assembler added errata NOP
  4586  002032  500E               	movf	__div_to_l_@exp1,w,c
  4587  002034  A4D8               	btfss	status,2,c
  4588  002036  D7F5               	goto	l3151
  4589  002038                     u3250:
  4590  002038  FFFF               	dw	65535	; assembler added errata NOP
  4591  00203A  C009  F001         	movff	__div_to_l_@quot,?__div_to_l_
  4592  00203E  C00A  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  4593  002042  C00B  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  4594  002046  C00C  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  4595  00204A                     l515:
  4596  00204A  FFFF               	dw	65535	; assembler added errata NOP
  4597  00204C  0012               	return		;funcret
  4598  00204E  FFFF               	dw	65535	; errata NOP
  4599  002050                     __end_of__div_to_l_:
  4600                           	opt callstack 0
  4601                           
  4602 ;; *************** function ___wmul *****************
  4603 ;; Defined at:
  4604 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  4605 ;; Parameters:    Size  Location     Type
  4606 ;;  multiplier      2    0[COMRAM] unsigned int 
  4607 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4608 ;; Auto vars:     Size  Location     Type
  4609 ;;  product         2    4[COMRAM] unsigned int 
  4610 ;; Return value:  Size  Location     Type
  4611 ;;                  2    0[COMRAM] unsigned int 
  4612 ;; Registers used:
  4613 ;;		wreg, status,2, status,0, prodl, prodh
  4614 ;; Tracked objects:
  4615 ;;		On entry : 0/0
  4616 ;;		On exit  : 0/0
  4617 ;;		Unchanged: 0/0
  4618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4619 ;;      Params:         4       0       0       0       0       0       0
  4620 ;;      Locals:         2       0       0       0       0       0       0
  4621 ;;      Temps:          0       0       0       0       0       0       0
  4622 ;;      Totals:         6       0       0       0       0       0       0
  4623 ;;Total ram usage:        6 bytes
  4624 ;; Hardware stack levels used:    1
  4625 ;; This function calls:
  4626 ;;		Nothing
  4627 ;; This function is called by:
  4628 ;;		_sprintf
  4629 ;; This function uses a non-reentrant model
  4630 ;;
  4631                           
  4632                           	psect	text13
  4633  0016DE                     __ptext13:
  4634                           	opt callstack 0
  4635  0016DE                     ___wmul:
  4636                           	opt callstack 0
  4637  0016DE  FFFF               	dw	65535	; assembler added errata NOP
  4638                           
  4639                           ;incstack = 0
  4640  0016E0  5001               	movf	___wmul@multiplier,w,c
  4641  0016E2  0203               	mulwf	___wmul@multiplicand,c
  4642  0016E4  CFF3 F005          	movff	prodl,___wmul@product
  4643  0016E8  CFF4 F006          	movff	prodh,___wmul@product+1
  4644  0016EC  5001               	movf	___wmul@multiplier,w,c
  4645  0016EE  0204               	mulwf	___wmul@multiplicand+1,c
  4646  0016F0  50F3               	movf	prodl,w,c
  4647  0016F2  2606               	addwf	___wmul@product+1,f,c
  4648  0016F4  5002               	movf	___wmul@multiplier+1,w,c
  4649  0016F6  0203               	mulwf	___wmul@multiplicand,c
  4650  0016F8  50F3               	movf	prodl,w,c
  4651  0016FA  2606               	addwf	___wmul@product+1,f,c
  4652  0016FC  C005  F001         	movff	___wmul@product,?___wmul
  4653  001700  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4654  001704  0012               	return		;funcret
  4655  001706  FFFF               	dw	65535	; errata NOP
  4656  001708                     __end_of___wmul:
  4657                           	opt callstack 0
  4658                           
  4659 ;; *************** function ___llmod *****************
  4660 ;; Defined at:
  4661 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
  4662 ;; Parameters:    Size  Location     Type
  4663 ;;  dividend        4    0[COMRAM] unsigned long 
  4664 ;;  divisor         4    4[COMRAM] unsigned long 
  4665 ;; Auto vars:     Size  Location     Type
  4666 ;;  counter         1    8[COMRAM] unsigned char 
  4667 ;; Return value:  Size  Location     Type
  4668 ;;                  4    0[COMRAM] unsigned long 
  4669 ;; Registers used:
  4670 ;;		wreg, status,2, status,0
  4671 ;; Tracked objects:
  4672 ;;		On entry : 0/0
  4673 ;;		On exit  : 0/0
  4674 ;;		Unchanged: 0/0
  4675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4676 ;;      Params:         8       0       0       0       0       0       0
  4677 ;;      Locals:         1       0       0       0       0       0       0
  4678 ;;      Temps:          0       0       0       0       0       0       0
  4679 ;;      Totals:         9       0       0       0       0       0       0
  4680 ;;Total ram usage:        9 bytes
  4681 ;; Hardware stack levels used:    1
  4682 ;; This function calls:
  4683 ;;		Nothing
  4684 ;; This function is called by:
  4685 ;;		_sprintf
  4686 ;; This function uses a non-reentrant model
  4687 ;;
  4688                           
  4689                           	psect	text14
  4690  0019F4                     __ptext14:
  4691                           	opt callstack 0
  4692  0019F4                     ___llmod:
  4693                           	opt callstack 0
  4694  0019F4  FFFF               	dw	65535	; assembler added errata NOP
  4695                           
  4696                           ;incstack = 0
  4697  0019F6  5005               	movf	___llmod@divisor,w,c
  4698  0019F8  1006               	iorwf	___llmod@divisor+1,w,c
  4699  0019FA  1007               	iorwf	___llmod@divisor+2,w,c
  4700  0019FC  1008               	iorwf	___llmod@divisor+3,w,c
  4701  0019FE  B4D8               	btfsc	status,2,c
  4702  001A00  D028               	goto	l703
  4703  001A02  0E01               	movlw	1
  4704  001A04  6E09               	movwf	___llmod@counter,c
  4705  001A06  D007               	goto	l3423
  4706  001A08                     l3421:
  4707  001A08  FFFF               	dw	65535	; assembler added errata NOP
  4708  001A0A  90D8               	bcf	status,0,c
  4709  001A0C  3605               	rlcf	___llmod@divisor,f,c
  4710  001A0E  3606               	rlcf	___llmod@divisor+1,f,c
  4711  001A10  3607               	rlcf	___llmod@divisor+2,f,c
  4712  001A12  3608               	rlcf	___llmod@divisor+3,f,c
  4713  001A14  2A09               	incf	___llmod@counter,f,c
  4714  001A16                     l3423:
  4715  001A16  FFFF               	dw	65535	; assembler added errata NOP
  4716  001A18  AE08               	btfss	___llmod@divisor+3,7,c
  4717  001A1A  D7F6               	goto	l3421
  4718  001A1C                     u3690:
  4719  001A1C  FFFF               	dw	65535	; assembler added errata NOP
  4720  001A1E  5005               	movf	___llmod@divisor,w,c
  4721  001A20  5C01               	subwf	___llmod@dividend,w,c
  4722  001A22  5006               	movf	___llmod@divisor+1,w,c
  4723  001A24  5802               	subwfb	___llmod@dividend+1,w,c
  4724  001A26  5007               	movf	___llmod@divisor+2,w,c
  4725  001A28  5803               	subwfb	___llmod@dividend+2,w,c
  4726  001A2A  5008               	movf	___llmod@divisor+3,w,c
  4727  001A2C  5804               	subwfb	___llmod@dividend+3,w,c
  4728  001A2E  A0D8               	btfss	status,0,c
  4729  001A30  D008               	goto	l3429
  4730  001A32  5005               	movf	___llmod@divisor,w,c
  4731  001A34  5E01               	subwf	___llmod@dividend,f,c
  4732  001A36  5006               	movf	___llmod@divisor+1,w,c
  4733  001A38  5A02               	subwfb	___llmod@dividend+1,f,c
  4734  001A3A  5007               	movf	___llmod@divisor+2,w,c
  4735  001A3C  5A03               	subwfb	___llmod@dividend+2,f,c
  4736  001A3E  5008               	movf	___llmod@divisor+3,w,c
  4737  001A40  5A04               	subwfb	___llmod@dividend+3,f,c
  4738  001A42                     l3429:
  4739  001A42  FFFF               	dw	65535	; assembler added errata NOP
  4740  001A44  90D8               	bcf	status,0,c
  4741  001A46  3208               	rrcf	___llmod@divisor+3,f,c
  4742  001A48  3207               	rrcf	___llmod@divisor+2,f,c
  4743  001A4A  3206               	rrcf	___llmod@divisor+1,f,c
  4744  001A4C  3205               	rrcf	___llmod@divisor,f,c
  4745  001A4E  2E09               	decfsz	___llmod@counter,f,c
  4746  001A50  D7E5               	goto	u3690
  4747  001A52                     l703:
  4748  001A52  FFFF               	dw	65535	; assembler added errata NOP
  4749  001A54  C001  F001         	movff	___llmod@dividend,?___llmod
  4750  001A58  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  4751  001A5C  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  4752  001A60  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  4753  001A64  0012               	return		;funcret
  4754  001A66  FFFF               	dw	65535	; errata NOP
  4755  001A68                     __end_of___llmod:
  4756                           	opt callstack 0
  4757                           
  4758 ;; *************** function ___lldiv *****************
  4759 ;; Defined at:
  4760 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  4761 ;; Parameters:    Size  Location     Type
  4762 ;;  dividend        4    0[COMRAM] unsigned long 
  4763 ;;  divisor         4    4[COMRAM] unsigned long 
  4764 ;; Auto vars:     Size  Location     Type
  4765 ;;  quotient        4    8[COMRAM] unsigned long 
  4766 ;;  counter         1   12[COMRAM] unsigned char 
  4767 ;; Return value:  Size  Location     Type
  4768 ;;                  4    0[COMRAM] unsigned long 
  4769 ;; Registers used:
  4770 ;;		wreg, status,2, status,0
  4771 ;; Tracked objects:
  4772 ;;		On entry : 0/0
  4773 ;;		On exit  : 0/0
  4774 ;;		Unchanged: 0/0
  4775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4776 ;;      Params:         8       0       0       0       0       0       0
  4777 ;;      Locals:         5       0       0       0       0       0       0
  4778 ;;      Temps:          0       0       0       0       0       0       0
  4779 ;;      Totals:        13       0       0       0       0       0       0
  4780 ;;Total ram usage:       13 bytes
  4781 ;; Hardware stack levels used:    1
  4782 ;; This function calls:
  4783 ;;		Nothing
  4784 ;; This function is called by:
  4785 ;;		_sprintf
  4786 ;; This function uses a non-reentrant model
  4787 ;;
  4788                           
  4789                           	psect	text15
  4790  001AEC                     __ptext15:
  4791                           	opt callstack 0
  4792  001AEC                     ___lldiv:
  4793                           	opt callstack 0
  4794  001AEC  FFFF               	dw	65535	; assembler added errata NOP
  4795                           
  4796                           ;incstack = 0
  4797  001AEE  0E00               	movlw	0
  4798  001AF0  6E09               	movwf	___lldiv@quotient,c
  4799  001AF2  0E00               	movlw	0
  4800  001AF4  6E0A               	movwf	___lldiv@quotient+1,c
  4801  001AF6  0E00               	movlw	0
  4802  001AF8  6E0B               	movwf	___lldiv@quotient+2,c
  4803  001AFA  0E00               	movlw	0
  4804  001AFC  6E0C               	movwf	___lldiv@quotient+3,c
  4805  001AFE  5005               	movf	___lldiv@divisor,w,c
  4806  001B00  1006               	iorwf	___lldiv@divisor+1,w,c
  4807  001B02  1007               	iorwf	___lldiv@divisor+2,w,c
  4808  001B04  1008               	iorwf	___lldiv@divisor+3,w,c
  4809  001B06  B4D8               	btfsc	status,2,c
  4810  001B08  D02E               	goto	l288
  4811  001B0A  0E01               	movlw	1
  4812  001B0C  6E0D               	movwf	___lldiv@counter,c
  4813  001B0E  D007               	goto	l3169
  4814  001B10                     l3167:
  4815  001B10  FFFF               	dw	65535	; assembler added errata NOP
  4816  001B12  90D8               	bcf	status,0,c
  4817  001B14  3605               	rlcf	___lldiv@divisor,f,c
  4818  001B16  3606               	rlcf	___lldiv@divisor+1,f,c
  4819  001B18  3607               	rlcf	___lldiv@divisor+2,f,c
  4820  001B1A  3608               	rlcf	___lldiv@divisor+3,f,c
  4821  001B1C  2A0D               	incf	___lldiv@counter,f,c
  4822  001B1E                     l3169:
  4823  001B1E  FFFF               	dw	65535	; assembler added errata NOP
  4824  001B20  AE08               	btfss	___lldiv@divisor+3,7,c
  4825  001B22  D7F6               	goto	l3167
  4826  001B24                     u3270:
  4827  001B24  FFFF               	dw	65535	; assembler added errata NOP
  4828  001B26  90D8               	bcf	status,0,c
  4829  001B28  3609               	rlcf	___lldiv@quotient,f,c
  4830  001B2A  360A               	rlcf	___lldiv@quotient+1,f,c
  4831  001B2C  360B               	rlcf	___lldiv@quotient+2,f,c
  4832  001B2E  360C               	rlcf	___lldiv@quotient+3,f,c
  4833  001B30  5005               	movf	___lldiv@divisor,w,c
  4834  001B32  5C01               	subwf	___lldiv@dividend,w,c
  4835  001B34  5006               	movf	___lldiv@divisor+1,w,c
  4836  001B36  5802               	subwfb	___lldiv@dividend+1,w,c
  4837  001B38  5007               	movf	___lldiv@divisor+2,w,c
  4838  001B3A  5803               	subwfb	___lldiv@dividend+2,w,c
  4839  001B3C  5008               	movf	___lldiv@divisor+3,w,c
  4840  001B3E  5804               	subwfb	___lldiv@dividend+3,w,c
  4841  001B40  A0D8               	btfss	status,0,c
  4842  001B42  D009               	goto	l3179
  4843  001B44  5005               	movf	___lldiv@divisor,w,c
  4844  001B46  5E01               	subwf	___lldiv@dividend,f,c
  4845  001B48  5006               	movf	___lldiv@divisor+1,w,c
  4846  001B4A  5A02               	subwfb	___lldiv@dividend+1,f,c
  4847  001B4C  5007               	movf	___lldiv@divisor+2,w,c
  4848  001B4E  5A03               	subwfb	___lldiv@dividend+2,f,c
  4849  001B50  5008               	movf	___lldiv@divisor+3,w,c
  4850  001B52  5A04               	subwfb	___lldiv@dividend+3,f,c
  4851  001B54  8009               	bsf	___lldiv@quotient,0,c
  4852  001B56                     l3179:
  4853  001B56  FFFF               	dw	65535	; assembler added errata NOP
  4854  001B58  90D8               	bcf	status,0,c
  4855  001B5A  3208               	rrcf	___lldiv@divisor+3,f,c
  4856  001B5C  3207               	rrcf	___lldiv@divisor+2,f,c
  4857  001B5E  3206               	rrcf	___lldiv@divisor+1,f,c
  4858  001B60  3205               	rrcf	___lldiv@divisor,f,c
  4859  001B62  2E0D               	decfsz	___lldiv@counter,f,c
  4860  001B64  D7DF               	goto	u3270
  4861  001B66                     l288:
  4862  001B66  FFFF               	dw	65535	; assembler added errata NOP
  4863  001B68  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4864  001B6C  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4865  001B70  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4866  001B74  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4867  001B78  0012               	return		;funcret
  4868  001B7A  FFFF               	dw	65535	; errata NOP
  4869  001B7C                     __end_of___lldiv:
  4870                           	opt callstack 0
  4871                           
  4872 ;; *************** function ___fltol *****************
  4873 ;; Defined at:
  4874 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  4875 ;; Parameters:    Size  Location     Type
  4876 ;;  f1              4   48[COMRAM] unsigned long 
  4877 ;; Auto vars:     Size  Location     Type
  4878 ;;  exp1            1   57[COMRAM] unsigned char 
  4879 ;;  sign1           1   56[COMRAM] unsigned char 
  4880 ;; Return value:  Size  Location     Type
  4881 ;;                  4   48[COMRAM] long 
  4882 ;; Registers used:
  4883 ;;		wreg, status,2, status,0
  4884 ;; Tracked objects:
  4885 ;;		On entry : 0/0
  4886 ;;		On exit  : 0/0
  4887 ;;		Unchanged: 0/0
  4888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4889 ;;      Params:         4       0       0       0       0       0       0
  4890 ;;      Locals:         2       0       0       0       0       0       0
  4891 ;;      Temps:          4       0       0       0       0       0       0
  4892 ;;      Totals:        10       0       0       0       0       0       0
  4893 ;;Total ram usage:       10 bytes
  4894 ;; Hardware stack levels used:    1
  4895 ;; This function calls:
  4896 ;;		Nothing
  4897 ;; This function is called by:
  4898 ;;		_sprintf
  4899 ;; This function uses a non-reentrant model
  4900 ;;
  4901                           
  4902                           	psect	text16
  4903  001CAA                     __ptext16:
  4904                           	opt callstack 0
  4905  001CAA                     ___fltol:
  4906                           	opt callstack 0
  4907  001CAA  FFFF               	dw	65535	; assembler added errata NOP
  4908                           
  4909                           ;incstack = 0
  4910  001CAC  3433               	rlcf	___fltol@f1+2,w,c
  4911  001CAE  3434               	rlcf	___fltol@f1+3,w,c
  4912  001CB0  6E3A               	movwf	___fltol@exp1,c
  4913  001CB2  503A               	movf	___fltol@exp1,w,c
  4914  001CB4  A4D8               	btfss	status,2,c
  4915  001CB6  D00A               	goto	l3379
  4916  001CB8                     u3610:
  4917  001CB8  FFFF               	dw	65535	; assembler added errata NOP
  4918  001CBA  0E00               	movlw	0
  4919  001CBC  6E31               	movwf	?___fltol,c
  4920  001CBE  0E00               	movlw	0
  4921  001CC0  6E32               	movwf	?___fltol+1,c
  4922  001CC2  0E00               	movlw	0
  4923  001CC4  6E33               	movwf	?___fltol+2,c
  4924  001CC6  0E00               	movlw	0
  4925  001CC8  6E34               	movwf	?___fltol+3,c
  4926  001CCA  D056               	goto	l567
  4927  001CCC                     l3379:
  4928  001CCC  FFFF               	dw	65535	; assembler added errata NOP
  4929  001CCE  C031  F035         	movff	___fltol@f1,??___fltol
  4930  001CD2  C032  F036         	movff	___fltol@f1+1,??___fltol+1
  4931  001CD6  C033  F037         	movff	___fltol@f1+2,??___fltol+2
  4932  001CDA  C034  F038         	movff	___fltol@f1+3,??___fltol+3
  4933  001CDE  0E20               	movlw	32
  4934  001CE0  D006               	goto	u3620
  4935  001CE2                     u3625:
  4936  001CE2  FFFF               	dw	65535	; assembler added errata NOP
  4937  001CE4  90D8               	bcf	status,0,c
  4938  001CE6  3238               	rrcf	??___fltol+3,f,c
  4939  001CE8  3237               	rrcf	??___fltol+2,f,c
  4940  001CEA  3236               	rrcf	??___fltol+1,f,c
  4941  001CEC  3235               	rrcf	??___fltol,f,c
  4942  001CEE                     u3620:
  4943  001CEE  FFFF               	dw	65535	; assembler added errata NOP
  4944  001CF0  2EE8               	decfsz	wreg,f,c
  4945  001CF2  D7F7               	goto	u3625
  4946  001CF4  5035               	movf	??___fltol,w,c
  4947  001CF6  6E39               	movwf	___fltol@sign1,c
  4948  001CF8  8E33               	bsf	___fltol@f1+2,7,c
  4949  001CFA  0EFF               	movlw	255
  4950  001CFC  1631               	andwf	___fltol@f1,f,c
  4951  001CFE  0EFF               	movlw	255
  4952  001D00  1632               	andwf	___fltol@f1+1,f,c
  4953  001D02  0EFF               	movlw	255
  4954  001D04  1633               	andwf	___fltol@f1+2,f,c
  4955  001D06  0E00               	movlw	0
  4956  001D08  1634               	andwf	___fltol@f1+3,f,c
  4957  001D0A  0E96               	movlw	150
  4958  001D0C  5E3A               	subwf	___fltol@exp1,f,c
  4959  001D0E  AE3A               	btfss	___fltol@exp1,7,c
  4960  001D10  D00E               	goto	l3399
  4961  001D12  503A               	movf	___fltol@exp1,w,c
  4962  001D14  0A80               	xorlw	128
  4963  001D16  0F97               	addlw	151
  4964  001D18  A0D8               	btfss	status,0,c
  4965  001D1A  D7CE               	goto	u3610
  4966  001D1C                     l3395:
  4967  001D1C  FFFF               	dw	65535	; assembler added errata NOP
  4968  001D1E  90D8               	bcf	status,0,c
  4969  001D20  3234               	rrcf	___fltol@f1+3,f,c
  4970  001D22  3233               	rrcf	___fltol@f1+2,f,c
  4971  001D24  3232               	rrcf	___fltol@f1+1,f,c
  4972  001D26  3231               	rrcf	___fltol@f1,f,c
  4973  001D28  3E3A               	incfsz	___fltol@exp1,f,c
  4974  001D2A  D7F8               	goto	l3395
  4975  001D2C  D010               	goto	u3660
  4976  001D2E                     l3399:
  4977  001D2E  FFFF               	dw	65535	; assembler added errata NOP
  4978  001D30  0E1F               	movlw	31
  4979  001D32  643A               	cpfsgt	___fltol@exp1,c
  4980  001D34  D008               	goto	l3407
  4981  001D36  D7C0               	goto	u3610
  4982  001D38                     l3405:
  4983  001D38  FFFF               	dw	65535	; assembler added errata NOP
  4984  001D3A  90D8               	bcf	status,0,c
  4985  001D3C  3631               	rlcf	___fltol@f1,f,c
  4986  001D3E  3632               	rlcf	___fltol@f1+1,f,c
  4987  001D40  3633               	rlcf	___fltol@f1+2,f,c
  4988  001D42  3634               	rlcf	___fltol@f1+3,f,c
  4989  001D44  063A               	decf	___fltol@exp1,f,c
  4990  001D46                     l3407:
  4991  001D46  FFFF               	dw	65535	; assembler added errata NOP
  4992  001D48  503A               	movf	___fltol@exp1,w,c
  4993  001D4A  A4D8               	btfss	status,2,c
  4994  001D4C  D7F5               	goto	l3405
  4995  001D4E                     u3660:
  4996  001D4E  FFFF               	dw	65535	; assembler added errata NOP
  4997  001D50  5039               	movf	___fltol@sign1,w,c
  4998  001D52  B4D8               	btfsc	status,2,c
  4999  001D54  D008               	goto	l3413
  5000  001D56  1E34               	comf	___fltol@f1+3,f,c
  5001  001D58  1E33               	comf	___fltol@f1+2,f,c
  5002  001D5A  1E32               	comf	___fltol@f1+1,f,c
  5003  001D5C  6C31               	negf	___fltol@f1,c
  5004  001D5E  0E00               	movlw	0
  5005  001D60  2232               	addwfc	___fltol@f1+1,f,c
  5006  001D62  2233               	addwfc	___fltol@f1+2,f,c
  5007  001D64  2234               	addwfc	___fltol@f1+3,f,c
  5008  001D66                     l3413:
  5009  001D66  FFFF               	dw	65535	; assembler added errata NOP
  5010  001D68  C031  F031         	movff	___fltol@f1,?___fltol
  5011  001D6C  C032  F032         	movff	___fltol@f1+1,?___fltol+1
  5012  001D70  C033  F033         	movff	___fltol@f1+2,?___fltol+2
  5013  001D74  C034  F034         	movff	___fltol@f1+3,?___fltol+3
  5014  001D78                     l567:
  5015  001D78  FFFF               	dw	65535	; assembler added errata NOP
  5016  001D7A  0012               	return		;funcret
  5017  001D7C  FFFF               	dw	65535	; errata NOP
  5018  001D7E                     __end_of___fltol:
  5019                           	opt callstack 0
  5020                           
  5021 ;; *************** function ___flsub *****************
  5022 ;; Defined at:
  5023 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  5024 ;; Parameters:    Size  Location     Type
  5025 ;;  b               4   68[COMRAM] long 
  5026 ;;  a               4   72[COMRAM] long 
  5027 ;; Auto vars:     Size  Location     Type
  5028 ;;		None
  5029 ;; Return value:  Size  Location     Type
  5030 ;;                  4   68[COMRAM] long 
  5031 ;; Registers used:
  5032 ;;		wreg, status,2, status,0, cstack
  5033 ;; Tracked objects:
  5034 ;;		On entry : 0/0
  5035 ;;		On exit  : 0/0
  5036 ;;		Unchanged: 0/0
  5037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5038 ;;      Params:         8       0       0       0       0       0       0
  5039 ;;      Locals:         0       0       0       0       0       0       0
  5040 ;;      Temps:          0       0       0       0       0       0       0
  5041 ;;      Totals:         8       0       0       0       0       0       0
  5042 ;;Total ram usage:        8 bytes
  5043 ;; Hardware stack levels used:    1
  5044 ;; Hardware stack levels required when called:    1
  5045 ;; This function calls:
  5046 ;;		___fladd
  5047 ;; This function is called by:
  5048 ;;		_sprintf
  5049 ;; This function uses a non-reentrant model
  5050 ;;
  5051                           
  5052                           	psect	text17
  5053  00177A                     __ptext17:
  5054                           	opt callstack 0
  5055  00177A                     ___flsub:
  5056                           	opt callstack 0
  5057  00177A  FFFF               	dw	65535	; assembler added errata NOP
  5058                           
  5059                           ;incstack = 0
  5060  00177C  0E00               	movlw	0
  5061  00177E  1A49               	xorwf	___flsub@a,f,c
  5062  001780  0E00               	movlw	0
  5063  001782  1A4A               	xorwf	___flsub@a+1,f,c
  5064  001784  0E00               	movlw	0
  5065  001786  1A4B               	xorwf	___flsub@a+2,f,c
  5066  001788  0E80               	movlw	128
  5067  00178A  1A4C               	xorwf	___flsub@a+3,f,c
  5068  00178C  C045  F035         	movff	___flsub@b,___fladd@b
  5069  001790  C046  F036         	movff	___flsub@b+1,___fladd@b+1
  5070  001794  C047  F037         	movff	___flsub@b+2,___fladd@b+2
  5071  001798  C048  F038         	movff	___flsub@b+3,___fladd@b+3
  5072  00179C  C049  F039         	movff	___flsub@a,___fladd@a
  5073  0017A0  C04A  F03A         	movff	___flsub@a+1,___fladd@a+1
  5074  0017A4  C04B  F03B         	movff	___flsub@a+2,___fladd@a+2
  5075  0017A8  C04C  F03C         	movff	___flsub@a+3,___fladd@a+3
  5076  0017AC  EC63  F015         	call	___fladd	;wreg free
  5077  0017B0  C035  F045         	movff	?___fladd,?___flsub
  5078  0017B4  C036  F046         	movff	?___fladd+1,?___flsub+1
  5079  0017B8  C037  F047         	movff	?___fladd+2,?___flsub+2
  5080  0017BC  C038  F048         	movff	?___fladd+3,?___flsub+3
  5081  0017C0  0012               	return		;funcret
  5082  0017C2  FFFF               	dw	65535	; errata NOP
  5083  0017C4                     __end_of___flsub:
  5084                           	opt callstack 0
  5085                           
  5086 ;; *************** function ___flneg *****************
  5087 ;; Defined at:
  5088 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flneg.c"
  5089 ;; Parameters:    Size  Location     Type
  5090 ;;  f1              4    0[COMRAM] long 
  5091 ;; Auto vars:     Size  Location     Type
  5092 ;;		None
  5093 ;; Return value:  Size  Location     Type
  5094 ;;                  4    0[COMRAM] long 
  5095 ;; Registers used:
  5096 ;;		wreg, status,2, status,0
  5097 ;; Tracked objects:
  5098 ;;		On entry : 0/0
  5099 ;;		On exit  : 0/0
  5100 ;;		Unchanged: 0/0
  5101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5102 ;;      Params:         4       0       0       0       0       0       0
  5103 ;;      Locals:         0       0       0       0       0       0       0
  5104 ;;      Temps:          0       0       0       0       0       0       0
  5105 ;;      Totals:         4       0       0       0       0       0       0
  5106 ;;Total ram usage:        4 bytes
  5107 ;; Hardware stack levels used:    1
  5108 ;; This function calls:
  5109 ;;		Nothing
  5110 ;; This function is called by:
  5111 ;;		_sprintf
  5112 ;; This function uses a non-reentrant model
  5113 ;;
  5114                           
  5115                           	psect	text18
  5116  001708                     __ptext18:
  5117                           	opt callstack 0
  5118  001708                     ___flneg:
  5119                           	opt callstack 0
  5120  001708  FFFF               	dw	65535	; assembler added errata NOP
  5121                           
  5122                           ;incstack = 0
  5123  00170A  5001               	movf	___flneg@f1,w,c
  5124  00170C  1002               	iorwf	___flneg@f1+1,w,c
  5125  00170E  1003               	iorwf	___flneg@f1+2,w,c
  5126  001710  1004               	iorwf	___flneg@f1+3,w,c
  5127  001712  B4D8               	btfsc	status,2,c
  5128  001714  D008               	goto	l3369
  5129  001716  0E00               	movlw	0
  5130  001718  1A01               	xorwf	___flneg@f1,f,c
  5131  00171A  0E00               	movlw	0
  5132  00171C  1A02               	xorwf	___flneg@f1+1,f,c
  5133  00171E  0E00               	movlw	0
  5134  001720  1A03               	xorwf	___flneg@f1+2,f,c
  5135  001722  0E80               	movlw	128
  5136  001724  1A04               	xorwf	___flneg@f1+3,f,c
  5137  001726                     l3369:
  5138  001726  FFFF               	dw	65535	; assembler added errata NOP
  5139  001728  C001  F001         	movff	___flneg@f1,?___flneg
  5140  00172C  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5141  001730  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5142  001734  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5143  001738  0012               	return		;funcret
  5144  00173A  FFFF               	dw	65535	; errata NOP
  5145  00173C                     __end_of___flneg:
  5146                           	opt callstack 0
  5147                           
  5148 ;; *************** function ___flge *****************
  5149 ;; Defined at:
  5150 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
  5151 ;; Parameters:    Size  Location     Type
  5152 ;;  ff1             4    0[COMRAM] long 
  5153 ;;  ff2             4    4[COMRAM] long 
  5154 ;; Auto vars:     Size  Location     Type
  5155 ;;		None
  5156 ;; Return value:  Size  Location     Type
  5157 ;;		None               void
  5158 ;; Registers used:
  5159 ;;		wreg, status,2, status,0
  5160 ;; Tracked objects:
  5161 ;;		On entry : 0/0
  5162 ;;		On exit  : 0/0
  5163 ;;		Unchanged: 0/0
  5164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5165 ;;      Params:         8       0       0       0       0       0       0
  5166 ;;      Locals:         0       0       0       0       0       0       0
  5167 ;;      Temps:          4       0       0       0       0       0       0
  5168 ;;      Totals:        12       0       0       0       0       0       0
  5169 ;;Total ram usage:       12 bytes
  5170 ;; Hardware stack levels used:    1
  5171 ;; This function calls:
  5172 ;;		Nothing
  5173 ;; This function is called by:
  5174 ;;		_main
  5175 ;;		_sprintf
  5176 ;; This function uses a non-reentrant model
  5177 ;;
  5178                           
  5179                           	psect	text19
  5180  001D7E                     __ptext19:
  5181                           	opt callstack 0
  5182  001D7E                     ___flge:
  5183                           	opt callstack 0
  5184  001D7E  FFFF               	dw	65535	; assembler added errata NOP
  5185                           
  5186                           ;incstack = 0
  5187  001D80  0E00               	movlw	0
  5188  001D82  1401               	andwf	___flge@ff1,w,c
  5189  001D84  6E09               	movwf	??___flge& (0+255),c
  5190  001D86  0E00               	movlw	0
  5191  001D88  1402               	andwf	___flge@ff1+1,w,c
  5192  001D8A  6E0A               	movwf	(??___flge+1)& (0+255),c
  5193  001D8C  0E80               	movlw	128
  5194  001D8E  1403               	andwf	___flge@ff1+2,w,c
  5195  001D90  6E0B               	movwf	(??___flge+2)& (0+255),c
  5196  001D92  0E7F               	movlw	127
  5197  001D94  1404               	andwf	___flge@ff1+3,w,c
  5198  001D96  6E0C               	movwf	(??___flge+3)& (0+255),c
  5199  001D98  5009               	movf	??___flge,w,c
  5200  001D9A  100A               	iorwf	??___flge+1,w,c
  5201  001D9C  100B               	iorwf	??___flge+2,w,c
  5202  001D9E  100C               	iorwf	??___flge+3,w,c
  5203  001DA0  A4D8               	btfss	status,2,c
  5204  001DA2  D008               	goto	l3347
  5205  001DA4  0E00               	movlw	0
  5206  001DA6  6E01               	movwf	___flge@ff1,c
  5207  001DA8  0E00               	movlw	0
  5208  001DAA  6E02               	movwf	___flge@ff1+1,c
  5209  001DAC  0E00               	movlw	0
  5210  001DAE  6E03               	movwf	___flge@ff1+2,c
  5211  001DB0  0E00               	movlw	0
  5212  001DB2  6E04               	movwf	___flge@ff1+3,c
  5213  001DB4                     l3347:
  5214  001DB4  FFFF               	dw	65535	; assembler added errata NOP
  5215  001DB6  0E00               	movlw	0
  5216  001DB8  1405               	andwf	___flge@ff2,w,c
  5217  001DBA  6E09               	movwf	??___flge& (0+255),c
  5218  001DBC  0E00               	movlw	0
  5219  001DBE  1406               	andwf	___flge@ff2+1,w,c
  5220  001DC0  6E0A               	movwf	(??___flge+1)& (0+255),c
  5221  001DC2  0E80               	movlw	128
  5222  001DC4  1407               	andwf	___flge@ff2+2,w,c
  5223  001DC6  6E0B               	movwf	(??___flge+2)& (0+255),c
  5224  001DC8  0E7F               	movlw	127
  5225  001DCA  1408               	andwf	___flge@ff2+3,w,c
  5226  001DCC  6E0C               	movwf	(??___flge+3)& (0+255),c
  5227  001DCE  5009               	movf	??___flge,w,c
  5228  001DD0  100A               	iorwf	??___flge+1,w,c
  5229  001DD2  100B               	iorwf	??___flge+2,w,c
  5230  001DD4  100C               	iorwf	??___flge+3,w,c
  5231  001DD6  A4D8               	btfss	status,2,c
  5232  001DD8  D008               	goto	l3351
  5233  001DDA  0E00               	movlw	0
  5234  001DDC  6E05               	movwf	___flge@ff2,c
  5235  001DDE  0E00               	movlw	0
  5236  001DE0  6E06               	movwf	___flge@ff2+1,c
  5237  001DE2  0E00               	movlw	0
  5238  001DE4  6E07               	movwf	___flge@ff2+2,c
  5239  001DE6  0E00               	movlw	0
  5240  001DE8  6E08               	movwf	___flge@ff2+3,c
  5241  001DEA                     l3351:
  5242  001DEA  FFFF               	dw	65535	; assembler added errata NOP
  5243  001DEC  AE04               	btfss	___flge@ff1+3,7,c
  5244  001DEE  D009               	goto	l3355
  5245  001DF0  6C01               	negf	___flge@ff1,c
  5246  001DF2  1E02               	comf	___flge@ff1+1,f,c
  5247  001DF4  B0D8               	btfsc	status,0,c
  5248  001DF6  2A02               	incf	___flge@ff1+1,f,c
  5249  001DF8  1E03               	comf	___flge@ff1+2,f,c
  5250  001DFA  B0D8               	btfsc	status,0,c
  5251  001DFC  2A03               	incf	___flge@ff1+2,f,c
  5252  001DFE  0E80               	movlw	128
  5253  001E00  5604               	subfwb	___flge@ff1+3,f,c
  5254  001E02                     l3355:
  5255  001E02  FFFF               	dw	65535	; assembler added errata NOP
  5256  001E04  AE08               	btfss	___flge@ff2+3,7,c
  5257  001E06  D009               	goto	l539
  5258  001E08  6C05               	negf	___flge@ff2,c
  5259  001E0A  1E06               	comf	___flge@ff2+1,f,c
  5260  001E0C  B0D8               	btfsc	status,0,c
  5261  001E0E  2A06               	incf	___flge@ff2+1,f,c
  5262  001E10  1E07               	comf	___flge@ff2+2,f,c
  5263  001E12  B0D8               	btfsc	status,0,c
  5264  001E14  2A07               	incf	___flge@ff2+2,f,c
  5265  001E16  0E80               	movlw	128
  5266  001E18  5608               	subfwb	___flge@ff2+3,f,c
  5267  001E1A                     l539:
  5268  001E1A  FFFF               	dw	65535	; assembler added errata NOP
  5269  001E1C  0E00               	movlw	0
  5270  001E1E  1A01               	xorwf	___flge@ff1,f,c
  5271  001E20  0E00               	movlw	0
  5272  001E22  1A02               	xorwf	___flge@ff1+1,f,c
  5273  001E24  0E00               	movlw	0
  5274  001E26  1A03               	xorwf	___flge@ff1+2,f,c
  5275  001E28  0E80               	movlw	128
  5276  001E2A  1A04               	xorwf	___flge@ff1+3,f,c
  5277  001E2C  0E00               	movlw	0
  5278  001E2E  1A05               	xorwf	___flge@ff2,f,c
  5279  001E30  0E00               	movlw	0
  5280  001E32  1A06               	xorwf	___flge@ff2+1,f,c
  5281  001E34  0E00               	movlw	0
  5282  001E36  1A07               	xorwf	___flge@ff2+2,f,c
  5283  001E38  0E80               	movlw	128
  5284  001E3A  1A08               	xorwf	___flge@ff2+3,f,c
  5285  001E3C  5005               	movf	___flge@ff2,w,c
  5286  001E3E  5C01               	subwf	___flge@ff1,w,c
  5287  001E40  5006               	movf	___flge@ff2+1,w,c
  5288  001E42  5802               	subwfb	___flge@ff1+1,w,c
  5289  001E44  5007               	movf	___flge@ff2+2,w,c
  5290  001E46  5803               	subwfb	___flge@ff1+2,w,c
  5291  001E48  5008               	movf	___flge@ff2+3,w,c
  5292  001E4A  5804               	subwfb	___flge@ff1+3,w,c
  5293  001E4C  B0D8               	btfsc	status,0,c
  5294  001E4E  D002               	goto	l3361
  5295  001E50  90D8               	bcf	status,0,c
  5296  001E52  D002               	goto	l540
  5297  001E54                     l3361:
  5298  001E54  FFFF               	dw	65535	; assembler added errata NOP
  5299  001E56  80D8               	bsf	status,0,c
  5300  001E58                     l540:
  5301  001E58  FFFF               	dw	65535	; assembler added errata NOP
  5302  001E5A  0012               	return		;funcret
  5303  001E5C  FFFF               	dw	65535	; errata NOP
  5304  001E5E                     __end_of___flge:
  5305                           	opt callstack 0
  5306                           
  5307 ;; *************** function ___fleq *****************
  5308 ;; Defined at:
  5309 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fleq.c"
  5310 ;; Parameters:    Size  Location     Type
  5311 ;;  ff1             4    0[COMRAM] long 
  5312 ;;  ff2             4    4[COMRAM] long 
  5313 ;; Auto vars:     Size  Location     Type
  5314 ;;		None
  5315 ;; Return value:  Size  Location     Type
  5316 ;;		None               void
  5317 ;; Registers used:
  5318 ;;		wreg, status,2, status,0
  5319 ;; Tracked objects:
  5320 ;;		On entry : 0/0
  5321 ;;		On exit  : 0/0
  5322 ;;		Unchanged: 0/0
  5323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5324 ;;      Params:         8       0       0       0       0       0       0
  5325 ;;      Locals:         0       0       0       0       0       0       0
  5326 ;;      Temps:          4       0       0       0       0       0       0
  5327 ;;      Totals:        12       0       0       0       0       0       0
  5328 ;;Total ram usage:       12 bytes
  5329 ;; Hardware stack levels used:    1
  5330 ;; This function calls:
  5331 ;;		Nothing
  5332 ;; This function is called by:
  5333 ;;		_sprintf
  5334 ;; This function uses a non-reentrant model
  5335 ;;
  5336                           
  5337                           	psect	text20
  5338  001B7C                     __ptext20:
  5339                           	opt callstack 0
  5340  001B7C                     ___fleq:
  5341                           	opt callstack 0
  5342  001B7C  FFFF               	dw	65535	; assembler added errata NOP
  5343                           
  5344                           ;incstack = 0
  5345  001B7E  0E00               	movlw	0
  5346  001B80  1401               	andwf	___fleq@ff1,w,c
  5347  001B82  6E09               	movwf	??___fleq& (0+255),c
  5348  001B84  0E00               	movlw	0
  5349  001B86  1402               	andwf	___fleq@ff1+1,w,c
  5350  001B88  6E0A               	movwf	(??___fleq+1)& (0+255),c
  5351  001B8A  0E80               	movlw	128
  5352  001B8C  1403               	andwf	___fleq@ff1+2,w,c
  5353  001B8E  6E0B               	movwf	(??___fleq+2)& (0+255),c
  5354  001B90  0E7F               	movlw	127
  5355  001B92  1404               	andwf	___fleq@ff1+3,w,c
  5356  001B94  6E0C               	movwf	(??___fleq+3)& (0+255),c
  5357  001B96  5009               	movf	??___fleq,w,c
  5358  001B98  100A               	iorwf	??___fleq+1,w,c
  5359  001B9A  100B               	iorwf	??___fleq+2,w,c
  5360  001B9C  100C               	iorwf	??___fleq+3,w,c
  5361  001B9E  A4D8               	btfss	status,2,c
  5362  001BA0  D008               	goto	l3331
  5363  001BA2  0E00               	movlw	0
  5364  001BA4  6E01               	movwf	___fleq@ff1,c
  5365  001BA6  0E00               	movlw	0
  5366  001BA8  6E02               	movwf	___fleq@ff1+1,c
  5367  001BAA  0E00               	movlw	0
  5368  001BAC  6E03               	movwf	___fleq@ff1+2,c
  5369  001BAE  0E00               	movlw	0
  5370  001BB0  6E04               	movwf	___fleq@ff1+3,c
  5371  001BB2                     l3331:
  5372  001BB2  FFFF               	dw	65535	; assembler added errata NOP
  5373  001BB4  0E00               	movlw	0
  5374  001BB6  1405               	andwf	___fleq@ff2,w,c
  5375  001BB8  6E09               	movwf	??___fleq& (0+255),c
  5376  001BBA  0E00               	movlw	0
  5377  001BBC  1406               	andwf	___fleq@ff2+1,w,c
  5378  001BBE  6E0A               	movwf	(??___fleq+1)& (0+255),c
  5379  001BC0  0E80               	movlw	128
  5380  001BC2  1407               	andwf	___fleq@ff2+2,w,c
  5381  001BC4  6E0B               	movwf	(??___fleq+2)& (0+255),c
  5382  001BC6  0E7F               	movlw	127
  5383  001BC8  1408               	andwf	___fleq@ff2+3,w,c
  5384  001BCA  6E0C               	movwf	(??___fleq+3)& (0+255),c
  5385  001BCC  5009               	movf	??___fleq,w,c
  5386  001BCE  100A               	iorwf	??___fleq+1,w,c
  5387  001BD0  100B               	iorwf	??___fleq+2,w,c
  5388  001BD2  100C               	iorwf	??___fleq+3,w,c
  5389  001BD4  A4D8               	btfss	status,2,c
  5390  001BD6  D008               	goto	l3335
  5391  001BD8  0E00               	movlw	0
  5392  001BDA  6E05               	movwf	___fleq@ff2,c
  5393  001BDC  0E00               	movlw	0
  5394  001BDE  6E06               	movwf	___fleq@ff2+1,c
  5395  001BE0  0E00               	movlw	0
  5396  001BE2  6E07               	movwf	___fleq@ff2+2,c
  5397  001BE4  0E00               	movlw	0
  5398  001BE6  6E08               	movwf	___fleq@ff2+3,c
  5399  001BE8                     l3335:
  5400  001BE8  FFFF               	dw	65535	; assembler added errata NOP
  5401  001BEA  5005               	movf	___fleq@ff2,w,c
  5402  001BEC  1801               	xorwf	___fleq@ff1,w,c
  5403  001BEE  E10A               	bnz	u3540
  5404  001BF0  5006               	movf	___fleq@ff2+1,w,c
  5405  001BF2  1802               	xorwf	___fleq@ff1+1,w,c
  5406  001BF4  E107               	bnz	u3540
  5407  001BF6  5007               	movf	___fleq@ff2+2,w,c
  5408  001BF8  1803               	xorwf	___fleq@ff1+2,w,c
  5409  001BFA  E104               	bnz	u3540
  5410  001BFC  5008               	movf	___fleq@ff2+3,w,c
  5411  001BFE  1804               	xorwf	___fleq@ff1+3,w,c
  5412  001C00  B4D8               	btfsc	status,2,c
  5413  001C02  D002               	goto	l3339
  5414  001C04                     u3540:
  5415  001C04  90D8               	bcf	status,0,c
  5416  001C06  D002               	goto	l533
  5417  001C08                     l3339:
  5418  001C08  FFFF               	dw	65535	; assembler added errata NOP
  5419  001C0A  80D8               	bsf	status,0,c
  5420  001C0C                     l533:
  5421  001C0C  FFFF               	dw	65535	; assembler added errata NOP
  5422  001C0E  0012               	return		;funcret
  5423  001C10  FFFF               	dw	65535	; errata NOP
  5424  001C12                     __end_of___fleq:
  5425                           	opt callstack 0
  5426                           
  5427 ;; *************** function _print_message_onLCD *****************
  5428 ;; Defined at:
  5429 ;;		line 142 in file "main.c"
  5430 ;; Parameters:    Size  Location     Type
  5431 ;;  LCD_line        1    wreg     unsigned char 
  5432 ;;  message         2    4[COMRAM] PTR unsigned char 
  5433 ;;		 -> STR_10(17), STR_9(16), STR_8(17), STR_7(17), 
  5434 ;;		 -> STR_6(17), STR_5(15), main@message(20), STR_2(14), 
  5435 ;;		 -> STR_1(14), 
  5436 ;; Auto vars:     Size  Location     Type
  5437 ;;  LCD_line        1    8[COMRAM] unsigned char 
  5438 ;;  i               1    9[COMRAM] unsigned char 
  5439 ;; Return value:  Size  Location     Type
  5440 ;;                  1    wreg      void 
  5441 ;; Registers used:
  5442 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5443 ;; Tracked objects:
  5444 ;;		On entry : 0/0
  5445 ;;		On exit  : 0/0
  5446 ;;		Unchanged: 0/0
  5447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5448 ;;      Params:         2       0       0       0       0       0       0
  5449 ;;      Locals:         2       0       0       0       0       0       0
  5450 ;;      Temps:          2       0       0       0       0       0       0
  5451 ;;      Totals:         6       0       0       0       0       0       0
  5452 ;;Total ram usage:        6 bytes
  5453 ;; Hardware stack levels used:    1
  5454 ;; Hardware stack levels required when called:    1
  5455 ;; This function calls:
  5456 ;;		_R_D
  5457 ;;		_R_I
  5458 ;;		_strlen
  5459 ;; This function is called by:
  5460 ;;		_main
  5461 ;; This function uses a non-reentrant model
  5462 ;;
  5463                           
  5464                           	psect	text21
  5465  001918                     __ptext21:
  5466                           	opt callstack 0
  5467  001918                     _print_message_onLCD:
  5468                           	opt callstack 0
  5469  001918  FFFF               	dw	65535	; assembler added errata NOP
  5470                           
  5471                           ;incstack = 0
  5472                           ;print_message_onLCD@LCD_line stored from wreg
  5473  00191A  6E09               	movwf	print_message_onLCD@LCD_line,c
  5474                           
  5475                           ;main.c: 143: R_I(LCD_line);
  5476  00191C  5009               	movf	print_message_onLCD@LCD_line,w,c
  5477  00191E  EC41  F00B         	call	_R_I
  5478                           
  5479                           ;main.c: 144: for (char i = 0; i < strlen(message); i++) {
  5480  001922  0E00               	movlw	0
  5481  001924  6E0A               	movwf	print_message_onLCD@i,c
  5482  001926  D01B               	goto	l3497
  5483  001928                     l3493:
  5484  001928  FFFF               	dw	65535	; assembler added errata NOP
  5485                           
  5486                           ;main.c: 145: R_D(message[i]);
  5487  00192A  500A               	movf	print_message_onLCD@i,w,c
  5488  00192C  2405               	addwf	print_message_onLCD@message,w,c
  5489  00192E  6E07               	movwf	??_print_message_onLCD& (0+255),c
  5490  001930  0E00               	movlw	0
  5491  001932  2006               	addwfc	print_message_onLCD@message+1,w,c
  5492  001934  6E08               	movwf	(??_print_message_onLCD+1)& (0+255),c
  5493  001936  C007  FFF6         	movff	??_print_message_onLCD,tblptrl
  5494  00193A  C008  FFF7         	movff	??_print_message_onLCD+1,tblptrh
  5495  00193E  6AF8               	clrf	tblptru,c
  5496  001940  0E05               	movlw	(high __ramtop+-1)
  5497  001942  64F7               	cpfsgt	tblptrh,c
  5498  001944  D004               	bra	u3817
  5499  001946  0008               	tblrd		*
  5500  001948  FFFF               	dw	65535	; errata NOP
  5501  00194A  50F5               	movf	tablat,w,c
  5502  00194C  D005               	bra	u3810
  5503  00194E                     u3817:
  5504  00194E  CFF6 FFE9          	movff	tblptrl,fsr0l
  5505  001952  CFF7 FFEA          	movff	tblptrh,fsr0h
  5506  001956  50EF               	movf	indf0,w,c
  5507  001958                     u3810:
  5508  001958  EC4F  F00B         	call	_R_D
  5509  00195C  2A0A               	incf	print_message_onLCD@i,f,c
  5510  00195E                     l3497:
  5511  00195E  FFFF               	dw	65535	; assembler added errata NOP
  5512  001960  C005  F001         	movff	print_message_onLCD@message,strlen@s
  5513  001964  C006  F002         	movff	print_message_onLCD@message+1,strlen@s+1
  5514  001968  ECE2  F00B         	call	_strlen	;wreg free
  5515  00196C  500A               	movf	print_message_onLCD@i,w,c
  5516  00196E  6E07               	movwf	??_print_message_onLCD& (0+255),c
  5517  001970  6A08               	clrf	(??_print_message_onLCD+1)& (0+255),c
  5518  001972  5001               	movf	?_strlen,w,c
  5519  001974  5C07               	subwf	??_print_message_onLCD,w,c
  5520  001976  5002               	movf	?_strlen+1,w,c
  5521  001978  5808               	subwfb	??_print_message_onLCD+1,w,c
  5522  00197A  B0D8               	btfsc	status,0,c
  5523  00197C  0012               	return		;funcret
  5524  00197E  FFFF               	dw	65535	; assembler added errata NOP
  5525  001980  D7D3               	goto	l3493
  5526  001982  FFFF               	dw	65535	; errata NOP
  5527  001984                     __end_of_print_message_onLCD:
  5528                           	opt callstack 0
  5529                           
  5530 ;; *************** function _strlen *****************
  5531 ;; Defined at:
  5532 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strlen.c"
  5533 ;; Parameters:    Size  Location     Type
  5534 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5535 ;;		 -> STR_10(17), STR_9(16), STR_8(17), STR_7(17), 
  5536 ;;		 -> STR_6(17), STR_5(15), main@message(20), STR_2(14), 
  5537 ;;		 -> STR_1(14), 
  5538 ;; Auto vars:     Size  Location     Type
  5539 ;;  cp              2    2[COMRAM] PTR const unsigned char 
  5540 ;;		 -> STR_10(17), STR_9(16), STR_8(17), STR_7(17), 
  5541 ;;		 -> STR_6(17), STR_5(15), main@message(20), STR_2(14), 
  5542 ;;		 -> STR_1(14), 
  5543 ;; Return value:  Size  Location     Type
  5544 ;;                  2    0[COMRAM] unsigned int 
  5545 ;; Registers used:
  5546 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  5547 ;; Tracked objects:
  5548 ;;		On entry : 0/0
  5549 ;;		On exit  : 0/0
  5550 ;;		Unchanged: 0/0
  5551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5552 ;;      Params:         2       0       0       0       0       0       0
  5553 ;;      Locals:         2       0       0       0       0       0       0
  5554 ;;      Temps:          0       0       0       0       0       0       0
  5555 ;;      Totals:         4       0       0       0       0       0       0
  5556 ;;Total ram usage:        4 bytes
  5557 ;; Hardware stack levels used:    1
  5558 ;; This function calls:
  5559 ;;		Nothing
  5560 ;; This function is called by:
  5561 ;;		_print_message_onLCD
  5562 ;; This function uses a non-reentrant model
  5563 ;;
  5564                           
  5565                           	psect	text22
  5566  0017C4                     __ptext22:
  5567                           	opt callstack 0
  5568  0017C4                     _strlen:
  5569                           	opt callstack 0
  5570  0017C4  FFFF               	dw	65535	; assembler added errata NOP
  5571                           
  5572                           ;incstack = 0
  5573  0017C6  C001  F003         	movff	strlen@s,strlen@cp
  5574  0017CA  C002  F004         	movff	strlen@s+1,strlen@cp+1
  5575  0017CE  D003               	goto	l2965
  5576  0017D0                     l2963:
  5577  0017D0  FFFF               	dw	65535	; assembler added errata NOP
  5578  0017D2  4A03               	infsnz	strlen@cp,f,c
  5579  0017D4  2A04               	incf	strlen@cp+1,f,c
  5580  0017D6                     l2965:
  5581  0017D6  FFFF               	dw	65535	; assembler added errata NOP
  5582  0017D8  C003  FFF6         	movff	strlen@cp,tblptrl
  5583  0017DC  C004  FFF7         	movff	strlen@cp+1,tblptrh
  5584  0017E0  6AF8               	clrf	tblptru,c
  5585  0017E2  0E05               	movlw	(high __ramtop+-1)
  5586  0017E4  64F7               	cpfsgt	tblptrh,c
  5587  0017E6  D004               	bra	u2997
  5588  0017E8  0008               	tblrd		*
  5589  0017EA  FFFF               	dw	65535	; errata NOP
  5590  0017EC  50F5               	movf	tablat,w,c
  5591  0017EE  D005               	bra	u2990
  5592  0017F0                     u2997:
  5593  0017F0  CFF6 FFE9          	movff	tblptrl,fsr0l
  5594  0017F4  CFF7 FFEA          	movff	tblptrh,fsr0h
  5595  0017F8  50EF               	movf	indf0,w,c
  5596  0017FA                     u2990:
  5597  0017FA  0900               	iorlw	0
  5598  0017FC  A4D8               	btfss	status,2,c
  5599  0017FE  D7E8               	goto	l2963
  5600  001800  5001               	movf	strlen@s,w,c
  5601  001802  5C03               	subwf	strlen@cp,w,c
  5602  001804  6E01               	movwf	?_strlen,c
  5603  001806  5002               	movf	strlen@s+1,w,c
  5604  001808  5804               	subwfb	strlen@cp+1,w,c
  5605  00180A  6E02               	movwf	?_strlen+1,c
  5606  00180C  0012               	return		;funcret
  5607  00180E  FFFF               	dw	65535	; errata NOP
  5608  001810                     __end_of_strlen:
  5609                           	opt callstack 0
  5610                           
  5611 ;; *************** function _R_D *****************
  5612 ;; Defined at:
  5613 ;;		line 133 in file "main.c"
  5614 ;; Parameters:    Size  Location     Type
  5615 ;;  dato            1    wreg     unsigned char 
  5616 ;; Auto vars:     Size  Location     Type
  5617 ;;  dato            1    0[COMRAM] unsigned char 
  5618 ;; Return value:  Size  Location     Type
  5619 ;;                  1    wreg      void 
  5620 ;; Registers used:
  5621 ;;		wreg, status,2, cstack
  5622 ;; Tracked objects:
  5623 ;;		On entry : 0/0
  5624 ;;		On exit  : 0/0
  5625 ;;		Unchanged: 0/0
  5626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5627 ;;      Params:         0       0       0       0       0       0       0
  5628 ;;      Locals:         1       0       0       0       0       0       0
  5629 ;;      Temps:          0       0       0       0       0       0       0
  5630 ;;      Totals:         1       0       0       0       0       0       0
  5631 ;;Total ram usage:        1 bytes
  5632 ;; Hardware stack levels used:    1
  5633 ;; This function calls:
  5634 ;;		Nothing
  5635 ;; This function is called by:
  5636 ;;		_print_message_onLCD
  5637 ;; This function uses a non-reentrant model
  5638 ;;
  5639                           
  5640                           	psect	text23
  5641  00169E                     __ptext23:
  5642                           	opt callstack 0
  5643  00169E                     _R_D:
  5644                           	opt callstack 0
  5645  00169E  FFFF               	dw	65535	; assembler added errata NOP
  5646                           
  5647                           ;incstack = 0
  5648                           ;R_D@dato stored from wreg
  5649  0016A0  6E01               	movwf	R_D@dato,c
  5650                           
  5651                           ;main.c: 134: LC3 = 0;
  5652  0016A2  968B               	bcf	3979,3,c	;volatile
  5653                           
  5654                           ;main.c: 135: LC4 = 1;
  5655  0016A4  888B               	bsf	3979,4,c	;volatile
  5656                           
  5657                           ;main.c: 136: LATD = dato;
  5658  0016A6  C001  FF8C         	movff	R_D@dato,3980	;volatile
  5659                           
  5660                           ;main.c: 137: LC3 = 1;
  5661  0016AA  868B               	bsf	3979,3,c	;volatile
  5662                           
  5663                           ;main.c: 138: _delay((unsigned long)((100)*(4000000/4000000.0)));
  5664  0016AC  0E19               	movlw	25
  5665  0016AE                     u4497:
  5666  0016AE  FFFF               	dw	65535	; errata NOP
  5667  0016B0  2EE8               	decfsz	wreg,f,c
  5668  0016B2  D7FD               	bra	u4497
  5669                           
  5670                           ;main.c: 139: LC3 = 0;
  5671  0016B4  968B               	bcf	3979,3,c	;volatile
  5672  0016B6  0012               	return		;funcret
  5673  0016B8  FFFF               	dw	65535	; errata NOP
  5674  0016BA                     __end_of_R_D:
  5675                           	opt callstack 0
  5676                           
  5677 ;; *************** function _light_the_bulb_and_start_engine *****************
  5678 ;; Defined at:
  5679 ;;		line 172 in file "main.c"
  5680 ;; Parameters:    Size  Location     Type
  5681 ;;		None
  5682 ;; Auto vars:     Size  Location     Type
  5683 ;;		None
  5684 ;; Return value:  Size  Location     Type
  5685 ;;                  1    wreg      void 
  5686 ;; Registers used:
  5687 ;;		wreg, status,2
  5688 ;; Tracked objects:
  5689 ;;		On entry : 0/0
  5690 ;;		On exit  : 0/0
  5691 ;;		Unchanged: 0/0
  5692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5693 ;;      Params:         0       0       0       0       0       0       0
  5694 ;;      Locals:         0       0       0       0       0       0       0
  5695 ;;      Temps:          0       0       0       0       0       0       0
  5696 ;;      Totals:         0       0       0       0       0       0       0
  5697 ;;Total ram usage:        0 bytes
  5698 ;; Hardware stack levels used:    1
  5699 ;; This function calls:
  5700 ;;		Nothing
  5701 ;; This function is called by:
  5702 ;;		_main
  5703 ;; This function uses a non-reentrant model
  5704 ;;
  5705                           
  5706                           	psect	text24
  5707  00164E                     __ptext24:
  5708                           	opt callstack 0
  5709  00164E                     _light_the_bulb_and_start_engine:
  5710                           	opt callstack 0
  5711  00164E  FFFF               	dw	65535	; assembler added errata NOP
  5712                           
  5713                           ;main.c: 173: LATB = 3;
  5714                           
  5715                           ;incstack = 0
  5716  001650  0E03               	movlw	3
  5717  001652  6E8A               	movwf	3978,c	;volatile
  5718  001654  0012               	return		;funcret
  5719  001656  FFFF               	dw	65535	; errata NOP
  5720  001658                     __end_of_light_the_bulb_and_start_engine:
  5721                           	opt callstack 0
  5722                           
  5723 ;; *************** function _light_the_bulb *****************
  5724 ;; Defined at:
  5725 ;;		line 164 in file "main.c"
  5726 ;; Parameters:    Size  Location     Type
  5727 ;;		None
  5728 ;; Auto vars:     Size  Location     Type
  5729 ;;		None
  5730 ;; Return value:  Size  Location     Type
  5731 ;;                  1    wreg      void 
  5732 ;; Registers used:
  5733 ;;		wreg, status,2
  5734 ;; Tracked objects:
  5735 ;;		On entry : 0/0
  5736 ;;		On exit  : 0/0
  5737 ;;		Unchanged: 0/0
  5738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5739 ;;      Params:         0       0       0       0       0       0       0
  5740 ;;      Locals:         0       0       0       0       0       0       0
  5741 ;;      Temps:          0       0       0       0       0       0       0
  5742 ;;      Totals:         0       0       0       0       0       0       0
  5743 ;;Total ram usage:        0 bytes
  5744 ;; Hardware stack levels used:    1
  5745 ;; This function calls:
  5746 ;;		Nothing
  5747 ;; This function is called by:
  5748 ;;		_main
  5749 ;; This function uses a non-reentrant model
  5750 ;;
  5751                           
  5752                           	psect	text25
  5753  001644                     __ptext25:
  5754                           	opt callstack 0
  5755  001644                     _light_the_bulb:
  5756                           	opt callstack 0
  5757  001644  FFFF               	dw	65535	; assembler added errata NOP
  5758                           
  5759                           ;main.c: 165: LATB = 1;
  5760                           
  5761                           ;incstack = 0
  5762  001646  0E01               	movlw	1
  5763  001648  6E8A               	movwf	3978,c	;volatile
  5764  00164A  0012               	return		;funcret
  5765  00164C  FFFF               	dw	65535	; errata NOP
  5766  00164E                     __end_of_light_the_bulb:
  5767                           	opt callstack 0
  5768                           
  5769 ;; *************** function _initial_config *****************
  5770 ;; Defined at:
  5771 ;;		line 89 in file "main.c"
  5772 ;; Parameters:    Size  Location     Type
  5773 ;;		None
  5774 ;; Auto vars:     Size  Location     Type
  5775 ;;		None
  5776 ;; Return value:  Size  Location     Type
  5777 ;;                  1    wreg      void 
  5778 ;; Registers used:
  5779 ;;		wreg, status,2
  5780 ;; Tracked objects:
  5781 ;;		On entry : 0/0
  5782 ;;		On exit  : 0/0
  5783 ;;		Unchanged: 0/0
  5784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5785 ;;      Params:         0       0       0       0       0       0       0
  5786 ;;      Locals:         0       0       0       0       0       0       0
  5787 ;;      Temps:          0       0       0       0       0       0       0
  5788 ;;      Totals:         0       0       0       0       0       0       0
  5789 ;;Total ram usage:        0 bytes
  5790 ;; Hardware stack levels used:    1
  5791 ;; This function calls:
  5792 ;;		Nothing
  5793 ;; This function is called by:
  5794 ;;		_main
  5795 ;; This function uses a non-reentrant model
  5796 ;;
  5797                           
  5798                           	psect	text26
  5799  00173C                     __ptext26:
  5800                           	opt callstack 0
  5801  00173C                     _initial_config:
  5802                           	opt callstack 0
  5803  00173C  FFFF               	dw	65535	; assembler added errata NOP
  5804                           
  5805                           ;main.c: 90: TRISA = 0X03;
  5806                           
  5807                           ;incstack = 0
  5808  00173E  0E03               	movlw	3
  5809  001740  6E92               	movwf	3986,c	;volatile
  5810                           
  5811                           ;main.c: 92: TRISB = 0X00;
  5812  001742  0E00               	movlw	0
  5813  001744  6E93               	movwf	3987,c	;volatile
  5814                           
  5815                           ;main.c: 93: TRISC = 0X00;
  5816  001746  0E00               	movlw	0
  5817  001748  6E94               	movwf	3988,c	;volatile
  5818                           
  5819                           ;main.c: 94: TRISD = 0X00;
  5820  00174A  0E00               	movlw	0
  5821  00174C  6E95               	movwf	3989,c	;volatile
  5822                           
  5823                           ;main.c: 98: ADCON0 = 0B01000001;
  5824  00174E  0E41               	movlw	65
  5825  001750  6EC2               	movwf	4034,c	;volatile
  5826                           
  5827                           ;main.c: 99: ADCON1 = 0B10000100;
  5828  001752  0E84               	movlw	132
  5829  001754  6EC1               	movwf	4033,c	;volatile
  5830                           
  5831                           ;main.c: 102: LATA = 0;
  5832  001756  0E00               	movlw	0
  5833  001758  6E89               	movwf	3977,c	;volatile
  5834                           
  5835                           ;main.c: 103: LATB = 0;
  5836  00175A  0E00               	movlw	0
  5837  00175C  6E8A               	movwf	3978,c	;volatile
  5838                           
  5839                           ;main.c: 104: LATC = 0;
  5840  00175E  0E00               	movlw	0
  5841  001760  6E8B               	movwf	3979,c	;volatile
  5842                           
  5843                           ;main.c: 105: LATD = 0;
  5844  001762  0E00               	movlw	0
  5845  001764  6E8C               	movwf	3980,c	;volatile
  5846                           
  5847                           ;main.c: 106: PORTA = 0;
  5848  001766  0E00               	movlw	0
  5849  001768  6E80               	movwf	3968,c	;volatile
  5850                           
  5851                           ;main.c: 107: PORTB = 0;
  5852  00176A  0E00               	movlw	0
  5853  00176C  6E81               	movwf	3969,c	;volatile
  5854                           
  5855                           ;main.c: 108: PORTC = 0;
  5856  00176E  0E00               	movlw	0
  5857  001770  6E82               	movwf	3970,c	;volatile
  5858                           
  5859                           ;main.c: 109: PORTD = 0;
  5860  001772  0E00               	movlw	0
  5861  001774  6E83               	movwf	3971,c	;volatile
  5862  001776  0012               	return		;funcret
  5863  001778  FFFF               	dw	65535	; errata NOP
  5864  00177A                     __end_of_initial_config:
  5865                           	opt callstack 0
  5866                           
  5867 ;; *************** function _init_LCD *****************
  5868 ;; Defined at:
  5869 ;;		line 112 in file "main.c"
  5870 ;; Parameters:    Size  Location     Type
  5871 ;;		None
  5872 ;; Auto vars:     Size  Location     Type
  5873 ;;		None
  5874 ;; Return value:  Size  Location     Type
  5875 ;;                  1    wreg      void 
  5876 ;; Registers used:
  5877 ;;		wreg, status,2, cstack
  5878 ;; Tracked objects:
  5879 ;;		On entry : 0/0
  5880 ;;		On exit  : 0/0
  5881 ;;		Unchanged: 0/0
  5882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5883 ;;      Params:         0       0       0       0       0       0       0
  5884 ;;      Locals:         0       0       0       0       0       0       0
  5885 ;;      Temps:          1       0       0       0       0       0       0
  5886 ;;      Totals:         1       0       0       0       0       0       0
  5887 ;;Total ram usage:        1 bytes
  5888 ;; Hardware stack levels used:    1
  5889 ;; Hardware stack levels required when called:    1
  5890 ;; This function calls:
  5891 ;;		_R_I
  5892 ;; This function is called by:
  5893 ;;		_main
  5894 ;; This function uses a non-reentrant model
  5895 ;;
  5896                           
  5897                           	psect	text27
  5898  001860                     __ptext27:
  5899                           	opt callstack 0
  5900  001860                     _init_LCD:
  5901                           	opt callstack 0
  5902  001860  FFFF               	dw	65535	; assembler added errata NOP
  5903                           
  5904                           ;main.c: 113: _delay((unsigned long)((20)*(4000000/4000.0)));
  5905                           
  5906                           ;incstack = 0
  5907  001862  0E14               	movlw	20
  5908  001864  6E02               	movwf	??_init_LCD& (0+255),c
  5909  001866  0E7D               	movlw	125
  5910  001868                     u4507:
  5911  001868  FFFF               	dw	65535	; errata NOP
  5912  00186A  2EE8               	decfsz	wreg,f,c
  5913  00186C  D7FD               	bra	u4507
  5914  00186E  2E02               	decfsz	??_init_LCD& (0+255),f,c
  5915  001870  D7FB               	bra	u4507
  5916  001872  D000               	nop2	
  5917                           
  5918                           ;main.c: 115: R_I(0X30);
  5919  001874  0E30               	movlw	48
  5920  001876  EC41  F00B         	call	_R_I
  5921                           
  5922                           ;main.c: 116: _delay((unsigned long)((5)*(4000000/4000.0)));
  5923  00187A  0E05               	movlw	5
  5924  00187C  6E02               	movwf	??_init_LCD& (0+255),c
  5925  00187E  0EDF               	movlw	223
  5926  001880                     u4517:
  5927  001880  FFFF               	dw	65535	; errata NOP
  5928  001882  2EE8               	decfsz	wreg,f,c
  5929  001884  D7FD               	bra	u4517
  5930  001886  2E02               	decfsz	??_init_LCD& (0+255),f,c
  5931  001888  D7FB               	bra	u4517
  5932                           
  5933                           ;main.c: 117: R_I(0X30);
  5934  00188A  0E30               	movlw	48
  5935  00188C  EC41  F00B         	call	_R_I
  5936                           
  5937                           ;main.c: 118: R_I(0X3C);
  5938  001890  0E3C               	movlw	60
  5939  001892  EC41  F00B         	call	_R_I
  5940                           
  5941                           ;main.c: 119: R_I(0X0C);
  5942  001896  0E0C               	movlw	12
  5943  001898  EC41  F00B         	call	_R_I
  5944                           
  5945                           ;main.c: 120: R_I(0X01);
  5946  00189C  0E01               	movlw	1
  5947  00189E  EC41  F00B         	call	_R_I
  5948                           
  5949                           ;main.c: 121: _delay((unsigned long)((20)*(4000000/4000.0)));
  5950  0018A2  0E14               	movlw	20
  5951  0018A4  6E02               	movwf	??_init_LCD& (0+255),c
  5952  0018A6  0E7D               	movlw	125
  5953  0018A8                     u4527:
  5954  0018A8  FFFF               	dw	65535	; errata NOP
  5955  0018AA  2EE8               	decfsz	wreg,f,c
  5956  0018AC  D7FD               	bra	u4527
  5957  0018AE  2E02               	decfsz	??_init_LCD& (0+255),f,c
  5958  0018B0  D7FB               	bra	u4527
  5959  0018B2  D000               	nop2	
  5960  0018B4  0012               	return		;funcret
  5961  0018B6  FFFF               	dw	65535	; errata NOP
  5962  0018B8                     __end_of_init_LCD:
  5963                           	opt callstack 0
  5964                           
  5965 ;; *************** function _R_I *****************
  5966 ;; Defined at:
  5967 ;;		line 124 in file "main.c"
  5968 ;; Parameters:    Size  Location     Type
  5969 ;;  dato            1    wreg     unsigned char 
  5970 ;; Auto vars:     Size  Location     Type
  5971 ;;  dato            1    0[COMRAM] unsigned char 
  5972 ;; Return value:  Size  Location     Type
  5973 ;;                  1    wreg      void 
  5974 ;; Registers used:
  5975 ;;		wreg, status,2, cstack
  5976 ;; Tracked objects:
  5977 ;;		On entry : 0/0
  5978 ;;		On exit  : 0/0
  5979 ;;		Unchanged: 0/0
  5980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5981 ;;      Params:         0       0       0       0       0       0       0
  5982 ;;      Locals:         1       0       0       0       0       0       0
  5983 ;;      Temps:          0       0       0       0       0       0       0
  5984 ;;      Totals:         1       0       0       0       0       0       0
  5985 ;;Total ram usage:        1 bytes
  5986 ;; Hardware stack levels used:    1
  5987 ;; This function calls:
  5988 ;;		Nothing
  5989 ;; This function is called by:
  5990 ;;		_main
  5991 ;;		_init_LCD
  5992 ;;		_print_message_onLCD
  5993 ;; This function uses a non-reentrant model
  5994 ;;
  5995                           
  5996                           	psect	text28
  5997  001682                     __ptext28:
  5998                           	opt callstack 0
  5999  001682                     _R_I:
  6000                           	opt callstack 0
  6001  001682  FFFF               	dw	65535	; assembler added errata NOP
  6002                           
  6003                           ;incstack = 0
  6004                           ;R_I@dato stored from wreg
  6005  001684  6E01               	movwf	R_I@dato,c
  6006                           
  6007                           ;main.c: 125: LC3 = 0;
  6008  001686  968B               	bcf	3979,3,c	;volatile
  6009                           
  6010                           ;main.c: 126: LC4 = 0;
  6011  001688  988B               	bcf	3979,4,c	;volatile
  6012                           
  6013                           ;main.c: 127: LATD = dato;
  6014  00168A  C001  FF8C         	movff	R_I@dato,3980	;volatile
  6015                           
  6016                           ;main.c: 128: LC3 = 1;
  6017  00168E  868B               	bsf	3979,3,c	;volatile
  6018                           
  6019                           ;main.c: 129: _delay((unsigned long)((100)*(4000000/4000000.0)));
  6020  001690  0E19               	movlw	25
  6021  001692                     u4537:
  6022  001692  FFFF               	dw	65535	; errata NOP
  6023  001694  2EE8               	decfsz	wreg,f,c
  6024  001696  D7FD               	bra	u4537
  6025                           
  6026                           ;main.c: 130: LC3 = 0;
  6027  001698  968B               	bcf	3979,3,c	;volatile
  6028  00169A  0012               	return		;funcret
  6029  00169C  FFFF               	dw	65535	; errata NOP
  6030  00169E                     __end_of_R_I:
  6031                           	opt callstack 0
  6032                           
  6033 ;; *************** function _get_voltage *****************
  6034 ;; Defined at:
  6035 ;;		line 149 in file "main.c"
  6036 ;; Parameters:    Size  Location     Type
  6037 ;;  ac_in           2   64[COMRAM] unsigned int 
  6038 ;; Auto vars:     Size  Location     Type
  6039 ;;		None
  6040 ;; Return value:  Size  Location     Type
  6041 ;;                  4   64[COMRAM] float 
  6042 ;; Registers used:
  6043 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6044 ;; Tracked objects:
  6045 ;;		On entry : 0/0
  6046 ;;		On exit  : 0/0
  6047 ;;		Unchanged: 0/0
  6048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6049 ;;      Params:         4       0       0       0       0       0       0
  6050 ;;      Locals:         0       0       0       0       0       0       0
  6051 ;;      Temps:          0       0       0       0       0       0       0
  6052 ;;      Totals:         4       0       0       0       0       0       0
  6053 ;;Total ram usage:        4 bytes
  6054 ;; Hardware stack levels used:    1
  6055 ;; Hardware stack levels required when called:    1
  6056 ;; This function calls:
  6057 ;;		___fldiv
  6058 ;;		___flmul
  6059 ;;		___xxtofl
  6060 ;; This function is called by:
  6061 ;;		_main
  6062 ;; This function uses a non-reentrant model
  6063 ;;
  6064                           
  6065                           	psect	text29
  6066  001984                     __ptext29:
  6067                           	opt callstack 0
  6068  001984                     _get_voltage:
  6069                           	opt callstack 0
  6070  001984  FFFF               	dw	65535	; assembler added errata NOP
  6071                           
  6072                           ;main.c: 150: return (ac_in * 5.0 / 1023);
  6073                           
  6074                           ;incstack = 0
  6075  001986  0E00               	movlw	0
  6076  001988  6E13               	movwf	___flmul@a,c
  6077  00198A  0E00               	movlw	0
  6078  00198C  6E14               	movwf	___flmul@a+1,c
  6079  00198E  0EA0               	movlw	160
  6080  001990  6E15               	movwf	___flmul@a+2,c
  6081  001992  0E40               	movlw	64
  6082  001994  6E16               	movwf	___flmul@a+3,c
  6083  001996  C041  F001         	movff	get_voltage@ac_in,___xxtofl@val
  6084  00199A  C042  F002         	movff	get_voltage@ac_in+1,___xxtofl@val+1
  6085  00199E  6A03               	clrf	___xxtofl@val+2,c
  6086  0019A0  6A04               	clrf	___xxtofl@val+3,c
  6087  0019A2  0E00               	movlw	0
  6088  0019A4  ECB3  F010         	call	___xxtofl
  6089  0019A8  C001  F00F         	movff	?___xxtofl,___flmul@b
  6090  0019AC  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  6091  0019B0  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  6092  0019B4  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  6093  0019B8  EC05  F017         	call	___flmul	;wreg free
  6094  0019BC  C00F  F028         	movff	?___flmul,___fldiv@b
  6095  0019C0  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  6096  0019C4  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  6097  0019C8  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  6098  0019CC  0E00               	movlw	0
  6099  0019CE  6E2C               	movwf	___fldiv@a,c
  6100  0019D0  0EC0               	movlw	192
  6101  0019D2  6E2D               	movwf	___fldiv@a+1,c
  6102  0019D4  0E7F               	movlw	127
  6103  0019D6  6E2E               	movwf	___fldiv@a+2,c
  6104  0019D8  0E44               	movlw	68
  6105  0019DA  6E2F               	movwf	___fldiv@a+3,c
  6106  0019DC  EC03  F014         	call	___fldiv	;wreg free
  6107  0019E0  C028  F041         	movff	?___fldiv,?_get_voltage
  6108  0019E4  C029  F042         	movff	?___fldiv+1,?_get_voltage+1
  6109  0019E8  C02A  F043         	movff	?___fldiv+2,?_get_voltage+2
  6110  0019EC  C02B  F044         	movff	?___fldiv+3,?_get_voltage+3
  6111  0019F0  0012               	return		;funcret
  6112  0019F2  FFFF               	dw	65535	; errata NOP
  6113  0019F4                     __end_of_get_voltage:
  6114                           	opt callstack 0
  6115                           
  6116 ;; *************** function _get_temp *****************
  6117 ;; Defined at:
  6118 ;;		line 152 in file "main.c"
  6119 ;; Parameters:    Size  Location     Type
  6120 ;;  ac_in           2   68[COMRAM] unsigned int 
  6121 ;; Auto vars:     Size  Location     Type
  6122 ;;  r               4   72[COMRAM] float 
  6123 ;; Return value:  Size  Location     Type
  6124 ;;                  4   68[COMRAM] float 
  6125 ;; Registers used:
  6126 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6127 ;; Tracked objects:
  6128 ;;		On entry : 0/0
  6129 ;;		On exit  : 0/0
  6130 ;;		Unchanged: 0/0
  6131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6132 ;;      Params:         4       0       0       0       0       0       0
  6133 ;;      Locals:         4       0       0       0       0       0       0
  6134 ;;      Temps:          0       0       0       0       0       0       0
  6135 ;;      Totals:         8       0       0       0       0       0       0
  6136 ;;Total ram usage:        8 bytes
  6137 ;; Hardware stack levels used:    1
  6138 ;; Hardware stack levels required when called:    1
  6139 ;; This function calls:
  6140 ;;		___fladd
  6141 ;;		___fldiv
  6142 ;;		___flmul
  6143 ;;		___xxtofl
  6144 ;; This function is called by:
  6145 ;;		_main
  6146 ;; This function uses a non-reentrant model
  6147 ;;
  6148                           
  6149                           	psect	text30
  6150  001E5E                     __ptext30:
  6151                           	opt callstack 0
  6152  001E5E                     _get_temp:
  6153                           	opt callstack 0
  6154  001E5E  FFFF               	dw	65535	; assembler added errata NOP
  6155                           
  6156                           ;main.c: 153: float r = ac_in * 500.0 / 1023;
  6157                           
  6158                           ;incstack = 0
  6159  001E60  0E00               	movlw	0
  6160  001E62  6E13               	movwf	___flmul@a,c
  6161  001E64  0E00               	movlw	0
  6162  001E66  6E14               	movwf	___flmul@a+1,c
  6163  001E68  0EFA               	movlw	250
  6164  001E6A  6E15               	movwf	___flmul@a+2,c
  6165  001E6C  0E43               	movlw	67
  6166  001E6E  6E16               	movwf	___flmul@a+3,c
  6167  001E70  C045  F001         	movff	get_temp@ac_in,___xxtofl@val
  6168  001E74  C046  F002         	movff	get_temp@ac_in+1,___xxtofl@val+1
  6169  001E78  6A03               	clrf	___xxtofl@val+2,c
  6170  001E7A  6A04               	clrf	___xxtofl@val+3,c
  6171  001E7C  0E00               	movlw	0
  6172  001E7E  ECB3  F010         	call	___xxtofl
  6173  001E82  C001  F00F         	movff	?___xxtofl,___flmul@b
  6174  001E86  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  6175  001E8A  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  6176  001E8E  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  6177  001E92  EC05  F017         	call	___flmul	;wreg free
  6178  001E96  C00F  F028         	movff	?___flmul,___fldiv@b
  6179  001E9A  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  6180  001E9E  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  6181  001EA2  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  6182  001EA6  0E00               	movlw	0
  6183  001EA8  6E2C               	movwf	___fldiv@a,c
  6184  001EAA  0EC0               	movlw	192
  6185  001EAC  6E2D               	movwf	___fldiv@a+1,c
  6186  001EAE  0E7F               	movlw	127
  6187  001EB0  6E2E               	movwf	___fldiv@a+2,c
  6188  001EB2  0E44               	movlw	68
  6189  001EB4  6E2F               	movwf	___fldiv@a+3,c
  6190  001EB6  EC03  F014         	call	___fldiv	;wreg free
  6191  001EBA  C028  F049         	movff	?___fldiv,get_temp@r
  6192  001EBE  C029  F04A         	movff	?___fldiv+1,get_temp@r+1
  6193  001EC2  C02A  F04B         	movff	?___fldiv+2,get_temp@r+2
  6194  001EC6  C02B  F04C         	movff	?___fldiv+3,get_temp@r+3
  6195                           
  6196                           ;main.c: 154: if (ac_in <= 10) {
  6197  001ECA  5046               	movf	get_temp@ac_in+1,w,c
  6198  001ECC  E11E               	bnz	l117
  6199  001ECE  0E0B               	movlw	11
  6200  001ED0  5C45               	subwf	get_temp@ac_in,w,c
  6201  001ED2  B0D8               	btfsc	status,0,c
  6202  001ED4  D01A               	goto	l117
  6203                           
  6204                           ;main.c: 155: r += 0.3;
  6205  001ED6  C049  F035         	movff	get_temp@r,___fladd@b
  6206  001EDA  C04A  F036         	movff	get_temp@r+1,___fladd@b+1
  6207  001EDE  C04B  F037         	movff	get_temp@r+2,___fladd@b+2
  6208  001EE2  C04C  F038         	movff	get_temp@r+3,___fladd@b+3
  6209  001EE6  0E9A               	movlw	154
  6210  001EE8  6E39               	movwf	___fladd@a,c
  6211  001EEA  0E99               	movlw	153
  6212  001EEC  6E3A               	movwf	___fladd@a+1,c
  6213  001EEE  0E99               	movlw	153
  6214  001EF0  6E3B               	movwf	___fladd@a+2,c
  6215  001EF2  0E3E               	movlw	62
  6216  001EF4  6E3C               	movwf	___fladd@a+3,c
  6217  001EF6  EC63  F015         	call	___fladd	;wreg free
  6218  001EFA  C035  F049         	movff	?___fladd,get_temp@r
  6219  001EFE  C036  F04A         	movff	?___fladd+1,get_temp@r+1
  6220  001F02  C037  F04B         	movff	?___fladd+2,get_temp@r+2
  6221  001F06  C038  F04C         	movff	?___fladd+3,get_temp@r+3
  6222  001F0A                     l117:
  6223  001F0A  FFFF               	dw	65535	; assembler added errata NOP
  6224                           
  6225                           ;main.c: 156: };main.c: 157: return (r - 0.0099999);
  6226  001F0C  C049  F035         	movff	get_temp@r,___fladd@b
  6227  001F10  C04A  F036         	movff	get_temp@r+1,___fladd@b+1
  6228  001F14  C04B  F037         	movff	get_temp@r+2,___fladd@b+2
  6229  001F18  C04C  F038         	movff	get_temp@r+3,___fladd@b+3
  6230  001F1C  0E9F               	movlw	159
  6231  001F1E  6E39               	movwf	___fladd@a,c
  6232  001F20  0ED6               	movlw	214
  6233  001F22  6E3A               	movwf	___fladd@a+1,c
  6234  001F24  0E23               	movlw	35
  6235  001F26  6E3B               	movwf	___fladd@a+2,c
  6236  001F28  0EBC               	movlw	188
  6237  001F2A  6E3C               	movwf	___fladd@a+3,c
  6238  001F2C  EC63  F015         	call	___fladd	;wreg free
  6239  001F30  C035  F045         	movff	?___fladd,?_get_temp
  6240  001F34  C036  F046         	movff	?___fladd+1,?_get_temp+1
  6241  001F38  C037  F047         	movff	?___fladd+2,?_get_temp+2
  6242  001F3C  C038  F048         	movff	?___fladd+3,?_get_temp+3
  6243  001F40  0012               	return		;funcret
  6244  001F42  FFFF               	dw	65535	; errata NOP
  6245  001F44                     __end_of_get_temp:
  6246                           	opt callstack 0
  6247                           
  6248 ;; *************** function ___xxtofl *****************
  6249 ;; Defined at:
  6250 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  6251 ;; Parameters:    Size  Location     Type
  6252 ;;  sign            1    wreg     unsigned char 
  6253 ;;  val             4    0[COMRAM] long 
  6254 ;; Auto vars:     Size  Location     Type
  6255 ;;  sign            1    8[COMRAM] unsigned char 
  6256 ;;  arg             4   10[COMRAM] unsigned long 
  6257 ;;  exp             1    9[COMRAM] unsigned char 
  6258 ;; Return value:  Size  Location     Type
  6259 ;;                  4    0[COMRAM] unsigned char 
  6260 ;; Registers used:
  6261 ;;		wreg, status,2, status,0
  6262 ;; Tracked objects:
  6263 ;;		On entry : 0/0
  6264 ;;		On exit  : 0/0
  6265 ;;		Unchanged: 0/0
  6266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6267 ;;      Params:         4       0       0       0       0       0       0
  6268 ;;      Locals:         6       0       0       0       0       0       0
  6269 ;;      Temps:          4       0       0       0       0       0       0
  6270 ;;      Totals:        14       0       0       0       0       0       0
  6271 ;;Total ram usage:       14 bytes
  6272 ;; Hardware stack levels used:    1
  6273 ;; This function calls:
  6274 ;;		Nothing
  6275 ;; This function is called by:
  6276 ;;		_get_voltage
  6277 ;;		_get_temp
  6278 ;;		_sprintf
  6279 ;; This function uses a non-reentrant model
  6280 ;;
  6281                           
  6282                           	psect	text31
  6283  002166                     __ptext31:
  6284                           	opt callstack 0
  6285  002166                     ___xxtofl:
  6286                           	opt callstack 0
  6287  002166  FFFF               	dw	65535	; assembler added errata NOP
  6288                           
  6289                           ;incstack = 0
  6290                           ;___xxtofl@sign stored from wreg
  6291  002168  6E09               	movwf	___xxtofl@sign,c
  6292  00216A  5009               	movf	___xxtofl@sign,w,c
  6293  00216C  A4D8               	btfss	status,2,c
  6294  00216E  AE04               	btfss	___xxtofl@val+3,7,c
  6295  002170  D01A               	goto	l938
  6296  002172  C001  F005         	movff	___xxtofl@val,??___xxtofl
  6297  002176  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  6298  00217A  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  6299  00217E  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  6300  002182  1E05               	comf	??___xxtofl,f,c
  6301  002184  1E06               	comf	??___xxtofl+1,f,c
  6302  002186  1E07               	comf	??___xxtofl+2,f,c
  6303  002188  1E08               	comf	??___xxtofl+3,f,c
  6304  00218A  2A05               	incf	??___xxtofl,f,c
  6305  00218C  0E00               	movlw	0
  6306  00218E  2206               	addwfc	??___xxtofl+1,f,c
  6307  002190  2207               	addwfc	??___xxtofl+2,f,c
  6308  002192  2208               	addwfc	??___xxtofl+3,f,c
  6309  002194  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  6310  002198  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  6311  00219C  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  6312  0021A0  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  6313  0021A4  D009               	goto	l3439
  6314  0021A6                     l938:
  6315  0021A6  FFFF               	dw	65535	; assembler added errata NOP
  6316  0021A8  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  6317  0021AC  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6318  0021B0  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6319  0021B4  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6320  0021B8                     l3439:
  6321  0021B8  FFFF               	dw	65535	; assembler added errata NOP
  6322  0021BA  5001               	movf	___xxtofl@val,w,c
  6323  0021BC  1002               	iorwf	___xxtofl@val+1,w,c
  6324  0021BE  1003               	iorwf	___xxtofl@val+2,w,c
  6325  0021C0  1004               	iorwf	___xxtofl@val+3,w,c
  6326  0021C2  A4D8               	btfss	status,2,c
  6327  0021C4  D009               	goto	l3445
  6328  0021C6  0E00               	movlw	0
  6329  0021C8  6E01               	movwf	?___xxtofl,c
  6330  0021CA  0E00               	movlw	0
  6331  0021CC  6E02               	movwf	?___xxtofl+1,c
  6332  0021CE  0E00               	movlw	0
  6333  0021D0  6E03               	movwf	?___xxtofl+2,c
  6334  0021D2  0E00               	movlw	0
  6335  0021D4  6E04               	movwf	?___xxtofl+3,c
  6336  0021D6  D072               	goto	l941
  6337  0021D8                     l3445:
  6338  0021D8  FFFF               	dw	65535	; assembler added errata NOP
  6339  0021DA  0E96               	movlw	150
  6340  0021DC  6E0A               	movwf	___xxtofl@exp,c
  6341  0021DE  D007               	goto	l3449
  6342  0021E0                     l3447:
  6343  0021E0  FFFF               	dw	65535	; assembler added errata NOP
  6344  0021E2  2A0A               	incf	___xxtofl@exp,f,c
  6345  0021E4  90D8               	bcf	status,0,c
  6346  0021E6  320E               	rrcf	___xxtofl@arg+3,f,c
  6347  0021E8  320D               	rrcf	___xxtofl@arg+2,f,c
  6348  0021EA  320C               	rrcf	___xxtofl@arg+1,f,c
  6349  0021EC  320B               	rrcf	___xxtofl@arg,f,c
  6350  0021EE                     l3449:
  6351  0021EE  FFFF               	dw	65535	; assembler added errata NOP
  6352  0021F0  0E00               	movlw	0
  6353  0021F2  140B               	andwf	___xxtofl@arg,w,c
  6354  0021F4  6E05               	movwf	??___xxtofl& (0+255),c
  6355  0021F6  0E00               	movlw	0
  6356  0021F8  140C               	andwf	___xxtofl@arg+1,w,c
  6357  0021FA  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  6358  0021FC  0E00               	movlw	0
  6359  0021FE  140D               	andwf	___xxtofl@arg+2,w,c
  6360  002200  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  6361  002202  0EFE               	movlw	254
  6362  002204  140E               	andwf	___xxtofl@arg+3,w,c
  6363  002206  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  6364  002208  5005               	movf	??___xxtofl,w,c
  6365  00220A  1006               	iorwf	??___xxtofl+1,w,c
  6366  00220C  1007               	iorwf	??___xxtofl+2,w,c
  6367  00220E  1008               	iorwf	??___xxtofl+3,w,c
  6368  002210  B4D8               	btfsc	status,2,c
  6369  002212  D00E               	goto	l945
  6370  002214  D7E5               	goto	l3447
  6371  002216                     l3451:
  6372  002216  FFFF               	dw	65535	; assembler added errata NOP
  6373  002218  2A0A               	incf	___xxtofl@exp,f,c
  6374  00221A  0E01               	movlw	1
  6375  00221C  260B               	addwf	___xxtofl@arg,f,c
  6376  00221E  0E00               	movlw	0
  6377  002220  220C               	addwfc	___xxtofl@arg+1,f,c
  6378  002222  220D               	addwfc	___xxtofl@arg+2,f,c
  6379  002224  220E               	addwfc	___xxtofl@arg+3,f,c
  6380  002226  90D8               	bcf	status,0,c
  6381  002228  320E               	rrcf	___xxtofl@arg+3,f,c
  6382  00222A  320D               	rrcf	___xxtofl@arg+2,f,c
  6383  00222C  320C               	rrcf	___xxtofl@arg+1,f,c
  6384  00222E  320B               	rrcf	___xxtofl@arg,f,c
  6385  002230                     l945:
  6386  002230  FFFF               	dw	65535	; assembler added errata NOP
  6387  002232  0E00               	movlw	0
  6388  002234  140B               	andwf	___xxtofl@arg,w,c
  6389  002236  6E05               	movwf	??___xxtofl& (0+255),c
  6390  002238  0E00               	movlw	0
  6391  00223A  140C               	andwf	___xxtofl@arg+1,w,c
  6392  00223C  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  6393  00223E  0E00               	movlw	0
  6394  002240  140D               	andwf	___xxtofl@arg+2,w,c
  6395  002242  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  6396  002244  0EFF               	movlw	255
  6397  002246  140E               	andwf	___xxtofl@arg+3,w,c
  6398  002248  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  6399  00224A  5005               	movf	??___xxtofl,w,c
  6400  00224C  1006               	iorwf	??___xxtofl+1,w,c
  6401  00224E  1007               	iorwf	??___xxtofl+2,w,c
  6402  002250  1008               	iorwf	??___xxtofl+3,w,c
  6403  002252  B4D8               	btfsc	status,2,c
  6404  002254  D008               	goto	l3459
  6405  002256  D7DF               	goto	l3451
  6406  002258                     l3457:
  6407  002258  FFFF               	dw	65535	; assembler added errata NOP
  6408  00225A  060A               	decf	___xxtofl@exp,f,c
  6409  00225C  90D8               	bcf	status,0,c
  6410  00225E  360B               	rlcf	___xxtofl@arg,f,c
  6411  002260  360C               	rlcf	___xxtofl@arg+1,f,c
  6412  002262  360D               	rlcf	___xxtofl@arg+2,f,c
  6413  002264  360E               	rlcf	___xxtofl@arg+3,f,c
  6414  002266                     l3459:
  6415  002266  FFFF               	dw	65535	; assembler added errata NOP
  6416  002268  BE0D               	btfsc	___xxtofl@arg+2,7,c
  6417  00226A  D003               	goto	u3770
  6418  00226C  0E02               	movlw	2
  6419  00226E  600A               	cpfslt	___xxtofl@exp,c
  6420  002270  D7F3               	goto	l3457
  6421  002272                     u3770:
  6422  002272  FFFF               	dw	65535	; assembler added errata NOP
  6423  002274  A00A               	btfss	___xxtofl@exp,0,c
  6424  002276  9E0D               	bcf	___xxtofl@arg+2,7,c
  6425  002278  90D8               	bcf	status,0,c
  6426  00227A  320A               	rrcf	___xxtofl@exp,f,c
  6427  00227C  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  6428  002280  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  6429  002282  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  6430  002284  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  6431  002286  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  6432  00228A  6A07               	clrf	??___xxtofl+2,c
  6433  00228C  6A06               	clrf	??___xxtofl+1,c
  6434  00228E  6A05               	clrf	??___xxtofl,c
  6435  002290  5005               	movf	??___xxtofl,w,c
  6436  002292  120B               	iorwf	___xxtofl@arg,f,c
  6437  002294  5006               	movf	??___xxtofl+1,w,c
  6438  002296  120C               	iorwf	___xxtofl@arg+1,f,c
  6439  002298  5007               	movf	??___xxtofl+2,w,c
  6440  00229A  120D               	iorwf	___xxtofl@arg+2,f,c
  6441  00229C  5008               	movf	??___xxtofl+3,w,c
  6442  00229E  120E               	iorwf	___xxtofl@arg+3,f,c
  6443  0022A0  5009               	movf	___xxtofl@sign,w,c
  6444  0022A2  A4D8               	btfss	status,2,c
  6445  0022A4  AE04               	btfss	___xxtofl@val+3,7,c
  6446  0022A6  D001               	goto	l3475
  6447  0022A8  8E0E               	bsf	___xxtofl@arg+3,7,c
  6448  0022AA                     l3475:
  6449  0022AA  FFFF               	dw	65535	; assembler added errata NOP
  6450  0022AC  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  6451  0022B0  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  6452  0022B4  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  6453  0022B8  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  6454  0022BC                     l941:
  6455  0022BC  FFFF               	dw	65535	; assembler added errata NOP
  6456  0022BE  0012               	return		;funcret
  6457  0022C0  FFFF               	dw	65535	; errata NOP
  6458  0022C2                     __end_of___xxtofl:
  6459                           	opt callstack 0
  6460                           
  6461 ;; *************** function ___flmul *****************
  6462 ;; Defined at:
  6463 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  6464 ;; Parameters:    Size  Location     Type
  6465 ;;  b               4   14[COMRAM] unsigned char 
  6466 ;;  a               4   18[COMRAM] unsigned char 
  6467 ;; Auto vars:     Size  Location     Type
  6468 ;;  prod            4   33[COMRAM] struct .
  6469 ;;  grs             4   27[COMRAM] unsigned long 
  6470 ;;  temp            2   37[COMRAM] struct .
  6471 ;;  bexp            1   32[COMRAM] unsigned char 
  6472 ;;  aexp            1   31[COMRAM] unsigned char 
  6473 ;;  sign            1   26[COMRAM] unsigned char 
  6474 ;; Return value:  Size  Location     Type
  6475 ;;                  4   14[COMRAM] unsigned char 
  6476 ;; Registers used:
  6477 ;;		wreg, status,2, status,0, prodl, prodh
  6478 ;; Tracked objects:
  6479 ;;		On entry : 0/0
  6480 ;;		On exit  : 0/0
  6481 ;;		Unchanged: 0/0
  6482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6483 ;;      Params:         8       0       0       0       0       0       0
  6484 ;;      Locals:        13       0       0       0       0       0       0
  6485 ;;      Temps:          4       0       0       0       0       0       0
  6486 ;;      Totals:        25       0       0       0       0       0       0
  6487 ;;Total ram usage:       25 bytes
  6488 ;; Hardware stack levels used:    1
  6489 ;; This function calls:
  6490 ;;		Nothing
  6491 ;; This function is called by:
  6492 ;;		_get_voltage
  6493 ;;		_get_temp
  6494 ;;		_fround
  6495 ;;		_scale
  6496 ;;		_sprintf
  6497 ;; This function uses a non-reentrant model
  6498 ;;
  6499                           
  6500                           	psect	text32
  6501  002E0A                     __ptext32:
  6502                           	opt callstack 0
  6503  002E0A                     ___flmul:
  6504                           	opt callstack 0
  6505  002E0A  FFFF               	dw	65535	; assembler added errata NOP
  6506                           
  6507                           ;incstack = 0
  6508  002E0C  5012               	movf	___flmul@b+3,w,c
  6509  002E0E  0B80               	andlw	128
  6510  002E10  6E1B               	movwf	___flmul@sign,c
  6511  002E12  5012               	movf	___flmul@b+3,w,c
  6512  002E14  2412               	addwf	___flmul@b+3,w,c
  6513  002E16  6E21               	movwf	___flmul@bexp,c
  6514  002E18  BE11               	btfsc	___flmul@b+2,7,c
  6515  002E1A  8021               	bsf	___flmul@bexp,0,c
  6516  002E1C  5021               	movf	___flmul@bexp,w,c
  6517  002E1E  B4D8               	btfsc	status,2,c
  6518  002E20  D00E               	goto	l2707
  6519  002E22  2821               	incf	___flmul@bexp,w,c
  6520  002E24  A4D8               	btfss	status,2,c
  6521  002E26  D008               	goto	l2705
  6522  002E28  0E00               	movlw	0
  6523  002E2A  6E0F               	movwf	___flmul@b,c
  6524  002E2C  0E00               	movlw	0
  6525  002E2E  6E10               	movwf	___flmul@b+1,c
  6526  002E30  0E00               	movlw	0
  6527  002E32  6E11               	movwf	___flmul@b+2,c
  6528  002E34  0E00               	movlw	0
  6529  002E36  6E12               	movwf	___flmul@b+3,c
  6530  002E38                     l2705:
  6531  002E38  FFFF               	dw	65535	; assembler added errata NOP
  6532  002E3A  8E11               	bsf	___flmul@b+2,7,c
  6533  002E3C  D009               	goto	l2709
  6534  002E3E                     l2707:
  6535  002E3E  FFFF               	dw	65535	; assembler added errata NOP
  6536  002E40  0E00               	movlw	0
  6537  002E42  6E0F               	movwf	___flmul@b,c
  6538  002E44  0E00               	movlw	0
  6539  002E46  6E10               	movwf	___flmul@b+1,c
  6540  002E48  0E00               	movlw	0
  6541  002E4A  6E11               	movwf	___flmul@b+2,c
  6542  002E4C  0E00               	movlw	0
  6543  002E4E  6E12               	movwf	___flmul@b+3,c
  6544  002E50                     l2709:
  6545  002E50  FFFF               	dw	65535	; assembler added errata NOP
  6546  002E52  5016               	movf	___flmul@a+3,w,c
  6547  002E54  0B80               	andlw	128
  6548  002E56  1A1B               	xorwf	___flmul@sign,f,c
  6549  002E58  5016               	movf	___flmul@a+3,w,c
  6550  002E5A  2416               	addwf	___flmul@a+3,w,c
  6551  002E5C  6E20               	movwf	___flmul@aexp,c
  6552  002E5E  BE15               	btfsc	___flmul@a+2,7,c
  6553  002E60  8020               	bsf	___flmul@aexp,0,c
  6554  002E62  5020               	movf	___flmul@aexp,w,c
  6555  002E64  B4D8               	btfsc	status,2,c
  6556  002E66  D00E               	goto	l2725
  6557  002E68  2820               	incf	___flmul@aexp,w,c
  6558  002E6A  A4D8               	btfss	status,2,c
  6559  002E6C  D008               	goto	l2723
  6560  002E6E  0E00               	movlw	0
  6561  002E70  6E13               	movwf	___flmul@a,c
  6562  002E72  0E00               	movlw	0
  6563  002E74  6E14               	movwf	___flmul@a+1,c
  6564  002E76  0E00               	movlw	0
  6565  002E78  6E15               	movwf	___flmul@a+2,c
  6566  002E7A  0E00               	movlw	0
  6567  002E7C  6E16               	movwf	___flmul@a+3,c
  6568  002E7E                     l2723:
  6569  002E7E  FFFF               	dw	65535	; assembler added errata NOP
  6570  002E80  8E15               	bsf	___flmul@a+2,7,c
  6571  002E82  D009               	goto	l897
  6572  002E84                     l2725:
  6573  002E84  FFFF               	dw	65535	; assembler added errata NOP
  6574  002E86  0E00               	movlw	0
  6575  002E88  6E13               	movwf	___flmul@a,c
  6576  002E8A  0E00               	movlw	0
  6577  002E8C  6E14               	movwf	___flmul@a+1,c
  6578  002E8E  0E00               	movlw	0
  6579  002E90  6E15               	movwf	___flmul@a+2,c
  6580  002E92  0E00               	movlw	0
  6581  002E94  6E16               	movwf	___flmul@a+3,c
  6582  002E96                     l897:
  6583  002E96  FFFF               	dw	65535	; assembler added errata NOP
  6584  002E98  5020               	movf	___flmul@aexp,w,c
  6585  002E9A  B4D8               	btfsc	status,2,c
  6586  002E9C  D003               	goto	u2690
  6587  002E9E  5021               	movf	___flmul@bexp,w,c
  6588  002EA0  A4D8               	btfss	status,2,c
  6589  002EA2  D00A               	goto	l2733
  6590  002EA4                     u2690:
  6591  002EA4  FFFF               	dw	65535	; assembler added errata NOP
  6592  002EA6  0E00               	movlw	0
  6593  002EA8  6E0F               	movwf	?___flmul,c
  6594  002EAA  0E00               	movlw	0
  6595  002EAC  6E10               	movwf	?___flmul+1,c
  6596  002EAE  0E00               	movlw	0
  6597  002EB0  6E11               	movwf	?___flmul+2,c
  6598  002EB2  0E00               	movlw	0
  6599  002EB4  6E12               	movwf	?___flmul+3,c
  6600  002EB6  D167               	goto	l901
  6601  002EB8                     l2733:
  6602  002EB8  FFFF               	dw	65535	; assembler added errata NOP
  6603  002EBA  5015               	movf	___flmul@a+2,w,c
  6604  002EBC  020F               	mulwf	___flmul@b,c
  6605  002EBE  CFF3 F026          	movff	prodl,___flmul@temp
  6606  002EC2  CFF4 F027          	movff	prodh,___flmul@temp+1
  6607  002EC6  5026               	movf	___flmul@temp,w,c
  6608  002EC8  6E1C               	movwf	___flmul@grs,c
  6609  002ECA  6A1D               	clrf	___flmul@grs+1,c
  6610  002ECC  6A1E               	clrf	___flmul@grs+2,c
  6611  002ECE  6A1F               	clrf	___flmul@grs+3,c
  6612  002ED0  5027               	movf	___flmul@temp+1,w,c
  6613  002ED2  6E22               	movwf	___flmul@prod,c
  6614  002ED4  6A23               	clrf	___flmul@prod+1,c
  6615  002ED6  6A24               	clrf	___flmul@prod+2,c
  6616  002ED8  6A25               	clrf	___flmul@prod+3,c
  6617  002EDA  5014               	movf	___flmul@a+1,w,c
  6618  002EDC  0210               	mulwf	___flmul@b+1,c
  6619  002EDE  CFF3 F026          	movff	prodl,___flmul@temp
  6620  002EE2  CFF4 F027          	movff	prodh,___flmul@temp+1
  6621  002EE6  5026               	movf	___flmul@temp,w,c
  6622  002EE8  261C               	addwf	___flmul@grs,f,c
  6623  002EEA  0E00               	movlw	0
  6624  002EEC  221D               	addwfc	___flmul@grs+1,f,c
  6625  002EEE  221E               	addwfc	___flmul@grs+2,f,c
  6626  002EF0  221F               	addwfc	___flmul@grs+3,f,c
  6627  002EF2  5027               	movf	___flmul@temp+1,w,c
  6628  002EF4  2622               	addwf	___flmul@prod,f,c
  6629  002EF6  0E00               	movlw	0
  6630  002EF8  2223               	addwfc	___flmul@prod+1,f,c
  6631  002EFA  2224               	addwfc	___flmul@prod+2,f,c
  6632  002EFC  2225               	addwfc	___flmul@prod+3,f,c
  6633  002EFE  5013               	movf	___flmul@a,w,c
  6634  002F00  0211               	mulwf	___flmul@b+2,c
  6635  002F02  CFF3 F026          	movff	prodl,___flmul@temp
  6636  002F06  CFF4 F027          	movff	prodh,___flmul@temp+1
  6637  002F0A  5026               	movf	___flmul@temp,w,c
  6638  002F0C  261C               	addwf	___flmul@grs,f,c
  6639  002F0E  0E00               	movlw	0
  6640  002F10  221D               	addwfc	___flmul@grs+1,f,c
  6641  002F12  221E               	addwfc	___flmul@grs+2,f,c
  6642  002F14  221F               	addwfc	___flmul@grs+3,f,c
  6643  002F16  5027               	movf	___flmul@temp+1,w,c
  6644  002F18  2622               	addwf	___flmul@prod,f,c
  6645  002F1A  0E00               	movlw	0
  6646  002F1C  2223               	addwfc	___flmul@prod+1,f,c
  6647  002F1E  2224               	addwfc	___flmul@prod+2,f,c
  6648  002F20  2225               	addwfc	___flmul@prod+3,f,c
  6649  002F22  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6650  002F26  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6651  002F2A  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6652  002F2E  6A1C               	clrf	___flmul@grs,c
  6653  002F30  5013               	movf	___flmul@a,w,c
  6654  002F32  0210               	mulwf	___flmul@b+1,c
  6655  002F34  CFF3 F026          	movff	prodl,___flmul@temp
  6656  002F38  CFF4 F027          	movff	prodh,___flmul@temp+1
  6657  002F3C  5026               	movf	___flmul@temp,w,c
  6658  002F3E  261C               	addwf	___flmul@grs,f,c
  6659  002F40  5027               	movf	___flmul@temp+1,w,c
  6660  002F42  221D               	addwfc	___flmul@grs+1,f,c
  6661  002F44  0E00               	movlw	0
  6662  002F46  221E               	addwfc	___flmul@grs+2,f,c
  6663  002F48  0E00               	movlw	0
  6664  002F4A  221F               	addwfc	___flmul@grs+3,f,c
  6665  002F4C  5014               	movf	___flmul@a+1,w,c
  6666  002F4E  020F               	mulwf	___flmul@b,c
  6667  002F50  CFF3 F026          	movff	prodl,___flmul@temp
  6668  002F54  CFF4 F027          	movff	prodh,___flmul@temp+1
  6669  002F58  5026               	movf	___flmul@temp,w,c
  6670  002F5A  261C               	addwf	___flmul@grs,f,c
  6671  002F5C  5027               	movf	___flmul@temp+1,w,c
  6672  002F5E  221D               	addwfc	___flmul@grs+1,f,c
  6673  002F60  0E00               	movlw	0
  6674  002F62  221E               	addwfc	___flmul@grs+2,f,c
  6675  002F64  0E00               	movlw	0
  6676  002F66  221F               	addwfc	___flmul@grs+3,f,c
  6677  002F68  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6678  002F6C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6679  002F70  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6680  002F74  6A1C               	clrf	___flmul@grs,c
  6681  002F76  5013               	movf	___flmul@a,w,c
  6682  002F78  020F               	mulwf	___flmul@b,c
  6683  002F7A  CFF3 F026          	movff	prodl,___flmul@temp
  6684  002F7E  CFF4 F027          	movff	prodh,___flmul@temp+1
  6685  002F82  5026               	movf	___flmul@temp,w,c
  6686  002F84  261C               	addwf	___flmul@grs,f,c
  6687  002F86  5027               	movf	___flmul@temp+1,w,c
  6688  002F88  221D               	addwfc	___flmul@grs+1,f,c
  6689  002F8A  0E00               	movlw	0
  6690  002F8C  221E               	addwfc	___flmul@grs+2,f,c
  6691  002F8E  0E00               	movlw	0
  6692  002F90  221F               	addwfc	___flmul@grs+3,f,c
  6693  002F92  5015               	movf	___flmul@a+2,w,c
  6694  002F94  0210               	mulwf	___flmul@b+1,c
  6695  002F96  CFF3 F026          	movff	prodl,___flmul@temp
  6696  002F9A  CFF4 F027          	movff	prodh,___flmul@temp+1
  6697  002F9E  5026               	movf	___flmul@temp,w,c
  6698  002FA0  2622               	addwf	___flmul@prod,f,c
  6699  002FA2  5027               	movf	___flmul@temp+1,w,c
  6700  002FA4  2223               	addwfc	___flmul@prod+1,f,c
  6701  002FA6  0E00               	movlw	0
  6702  002FA8  2224               	addwfc	___flmul@prod+2,f,c
  6703  002FAA  0E00               	movlw	0
  6704  002FAC  2225               	addwfc	___flmul@prod+3,f,c
  6705  002FAE  5014               	movf	___flmul@a+1,w,c
  6706  002FB0  0211               	mulwf	___flmul@b+2,c
  6707  002FB2  CFF3 F026          	movff	prodl,___flmul@temp
  6708  002FB6  CFF4 F027          	movff	prodh,___flmul@temp+1
  6709  002FBA  5026               	movf	___flmul@temp,w,c
  6710  002FBC  2622               	addwf	___flmul@prod,f,c
  6711  002FBE  5027               	movf	___flmul@temp+1,w,c
  6712  002FC0  2223               	addwfc	___flmul@prod+1,f,c
  6713  002FC2  0E00               	movlw	0
  6714  002FC4  2224               	addwfc	___flmul@prod+2,f,c
  6715  002FC6  0E00               	movlw	0
  6716  002FC8  2225               	addwfc	___flmul@prod+3,f,c
  6717  002FCA  5015               	movf	___flmul@a+2,w,c
  6718  002FCC  0211               	mulwf	___flmul@b+2,c
  6719  002FCE  CFF3 F026          	movff	prodl,___flmul@temp
  6720  002FD2  CFF4 F027          	movff	prodh,___flmul@temp+1
  6721  002FD6  5026               	movf	___flmul@temp,w,c
  6722  002FD8  6E17               	movwf	??___flmul& (0+255),c
  6723  002FDA  5027               	movf	___flmul@temp+1,w,c
  6724  002FDC  6E18               	movwf	(??___flmul+1)& (0+255),c
  6725  002FDE  6A19               	clrf	(??___flmul+2)& (0+255),c
  6726  002FE0  6A1A               	clrf	(??___flmul+3)& (0+255),c
  6727  002FE2  C019  F01A         	movff	??___flmul+2,??___flmul+3
  6728  002FE6  C018  F019         	movff	??___flmul+1,??___flmul+2
  6729  002FEA  C017  F018         	movff	??___flmul,??___flmul+1
  6730  002FEE  6A17               	clrf	??___flmul,c
  6731  002FF0  5017               	movf	??___flmul,w,c
  6732  002FF2  2622               	addwf	___flmul@prod,f,c
  6733  002FF4  5018               	movf	??___flmul+1,w,c
  6734  002FF6  2223               	addwfc	___flmul@prod+1,f,c
  6735  002FF8  5019               	movf	??___flmul+2,w,c
  6736  002FFA  2224               	addwfc	___flmul@prod+2,f,c
  6737  002FFC  501A               	movf	??___flmul+3,w,c
  6738  002FFE  2225               	addwfc	___flmul@prod+3,f,c
  6739  003000  C01C  F017         	movff	___flmul@grs,??___flmul
  6740  003004  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  6741  003008  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  6742  00300C  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  6743  003010  0E19               	movlw	25
  6744  003012  D006               	goto	u2700
  6745  003014                     u2705:
  6746  003014  FFFF               	dw	65535	; assembler added errata NOP
  6747  003016  90D8               	bcf	status,0,c
  6748  003018  321A               	rrcf	??___flmul+3,f,c
  6749  00301A  3219               	rrcf	??___flmul+2,f,c
  6750  00301C  3218               	rrcf	??___flmul+1,f,c
  6751  00301E  3217               	rrcf	??___flmul,f,c
  6752  003020                     u2700:
  6753  003020  FFFF               	dw	65535	; assembler added errata NOP
  6754  003022  2EE8               	decfsz	wreg,f,c
  6755  003024  D7F7               	goto	u2705
  6756  003026  5017               	movf	??___flmul,w,c
  6757  003028  2622               	addwf	___flmul@prod,f,c
  6758  00302A  5018               	movf	??___flmul+1,w,c
  6759  00302C  2223               	addwfc	___flmul@prod+1,f,c
  6760  00302E  5019               	movf	??___flmul+2,w,c
  6761  003030  2224               	addwfc	___flmul@prod+2,f,c
  6762  003032  501A               	movf	??___flmul+3,w,c
  6763  003034  2225               	addwfc	___flmul@prod+3,f,c
  6764  003036  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6765  00303A  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6766  00303E  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6767  003042  6A1C               	clrf	___flmul@grs,c
  6768  003044  5020               	movf	___flmul@aexp,w,c
  6769  003046  C021  F017         	movff	___flmul@bexp,??___flmul
  6770  00304A  6A18               	clrf	(??___flmul+1)& (0+255),c
  6771  00304C  2617               	addwf	??___flmul,f,c
  6772  00304E  0E00               	movlw	0
  6773  003050  2218               	addwfc	??___flmul+1,f,c
  6774  003052  0E82               	movlw	130
  6775  003054  2417               	addwf	??___flmul,w,c
  6776  003056  6E26               	movwf	___flmul@temp,c
  6777  003058  0EFF               	movlw	255
  6778  00305A  2018               	addwfc	??___flmul+1,w,c
  6779  00305C  6E27               	movwf	___flmul@temp+1,c
  6780  00305E  D010               	goto	l2781
  6781  003060                     l2775:
  6782  003060  FFFF               	dw	65535	; assembler added errata NOP
  6783  003062  90D8               	bcf	status,0,c
  6784  003064  3622               	rlcf	___flmul@prod,f,c
  6785  003066  3623               	rlcf	___flmul@prod+1,f,c
  6786  003068  3624               	rlcf	___flmul@prod+2,f,c
  6787  00306A  3625               	rlcf	___flmul@prod+3,f,c
  6788  00306C  BE1F               	btfsc	___flmul@grs+3,7,c
  6789  00306E  8022               	bsf	___flmul@prod,0,c
  6790  003070  90D8               	bcf	status,0,c
  6791  003072  361C               	rlcf	___flmul@grs,f,c
  6792  003074  361D               	rlcf	___flmul@grs+1,f,c
  6793  003076  361E               	rlcf	___flmul@grs+2,f,c
  6794  003078  361F               	rlcf	___flmul@grs+3,f,c
  6795  00307A  0626               	decf	___flmul@temp,f,c
  6796  00307C  A0D8               	btfss	status,0,c
  6797  00307E  0627               	decf	___flmul@temp+1,f,c
  6798  003080                     l2781:
  6799  003080  FFFF               	dw	65535	; assembler added errata NOP
  6800  003082  AE24               	btfss	___flmul@prod+2,7,c
  6801  003084  D7ED               	goto	l2775
  6802  003086  0E00               	movlw	0
  6803  003088  6E20               	movwf	___flmul@aexp,c
  6804  00308A  AE1F               	btfss	___flmul@grs+3,7,c
  6805  00308C  D019               	goto	l906
  6806  00308E  0EFF               	movlw	255
  6807  003090  141C               	andwf	___flmul@grs,w,c
  6808  003092  6E17               	movwf	??___flmul& (0+255),c
  6809  003094  0EFF               	movlw	255
  6810  003096  141D               	andwf	___flmul@grs+1,w,c
  6811  003098  6E18               	movwf	(??___flmul+1)& (0+255),c
  6812  00309A  0EFF               	movlw	255
  6813  00309C  141E               	andwf	___flmul@grs+2,w,c
  6814  00309E  6E19               	movwf	(??___flmul+2)& (0+255),c
  6815  0030A0  0E7F               	movlw	127
  6816  0030A2  141F               	andwf	___flmul@grs+3,w,c
  6817  0030A4  6E1A               	movwf	(??___flmul+3)& (0+255),c
  6818  0030A6  5017               	movf	??___flmul,w,c
  6819  0030A8  1018               	iorwf	??___flmul+1,w,c
  6820  0030AA  1019               	iorwf	??___flmul+2,w,c
  6821  0030AC  101A               	iorwf	??___flmul+3,w,c
  6822  0030AE  B4D8               	btfsc	status,2,c
  6823  0030B0  D004               	goto	l907
  6824  0030B2                     u2740:
  6825  0030B2  FFFF               	dw	65535	; assembler added errata NOP
  6826  0030B4  0E01               	movlw	1
  6827  0030B6  6E20               	movwf	___flmul@aexp,c
  6828  0030B8  D003               	goto	l906
  6829  0030BA                     l907:
  6830  0030BA  FFFF               	dw	65535	; assembler added errata NOP
  6831  0030BC  B022               	btfsc	___flmul@prod,0,c
  6832  0030BE  D7F9               	goto	u2740
  6833  0030C0                     l906:
  6834  0030C0  FFFF               	dw	65535	; assembler added errata NOP
  6835  0030C2  5020               	movf	___flmul@aexp,w,c
  6836  0030C4  B4D8               	btfsc	status,2,c
  6837  0030C6  D01F               	goto	l2801
  6838  0030C8  0E01               	movlw	1
  6839  0030CA  2622               	addwf	___flmul@prod,f,c
  6840  0030CC  0E00               	movlw	0
  6841  0030CE  2223               	addwfc	___flmul@prod+1,f,c
  6842  0030D0  2224               	addwfc	___flmul@prod+2,f,c
  6843  0030D2  2225               	addwfc	___flmul@prod+3,f,c
  6844  0030D4  A025               	btfss	___flmul@prod+3,0,c
  6845  0030D6  D017               	goto	l2801
  6846  0030D8  C022  F017         	movff	___flmul@prod,??___flmul
  6847  0030DC  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  6848  0030E0  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  6849  0030E4  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  6850  0030E8  341A               	rlcf	??___flmul+3,w,c
  6851  0030EA  321A               	rrcf	??___flmul+3,f,c
  6852  0030EC  3219               	rrcf	??___flmul+2,f,c
  6853  0030EE  3218               	rrcf	??___flmul+1,f,c
  6854  0030F0  3217               	rrcf	??___flmul,f,c
  6855  0030F2  C017  F022         	movff	??___flmul,___flmul@prod
  6856  0030F6  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  6857  0030FA  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  6858  0030FE  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  6859  003102  4A26               	infsnz	___flmul@temp,f,c
  6860  003104  2A27               	incf	___flmul@temp+1,f,c
  6861  003106                     l2801:
  6862  003106  FFFF               	dw	65535	; assembler added errata NOP
  6863  003108  BE27               	btfsc	___flmul@temp+1,7,c
  6864  00310A  D00D               	goto	l2805
  6865  00310C  5027               	movf	___flmul@temp+1,w,c
  6866  00310E  E103               	bnz	u2780
  6867  003110  2826               	incf	___flmul@temp,w,c
  6868  003112  A0D8               	btfss	status,0,c
  6869  003114  D008               	goto	l2805
  6870  003116                     u2780:
  6871  003116  0E00               	movlw	0
  6872  003118  6E22               	movwf	___flmul@prod,c
  6873  00311A  0E00               	movlw	0
  6874  00311C  6E23               	movwf	___flmul@prod+1,c
  6875  00311E  0E80               	movlw	128
  6876  003120  6E24               	movwf	___flmul@prod+2,c
  6877  003122  0E7F               	movlw	127
  6878  003124  D023               	goto	L11
  6879  003126                     l2805:
  6880  003126  FFFF               	dw	65535	; assembler added errata NOP
  6881  003128  BE27               	btfsc	___flmul@temp+1,7,c
  6882  00312A  D005               	goto	u2790
  6883  00312C  5027               	movf	___flmul@temp+1,w,c
  6884  00312E  E10F               	bnz	l914
  6885  003130  0426               	decf	___flmul@temp,w,c
  6886  003132  B0D8               	btfsc	status,0,c
  6887  003134  D00C               	goto	l914
  6888  003136                     u2790:
  6889  003136  FFFF               	dw	65535	; assembler added errata NOP
  6890  003138  0E00               	movlw	0
  6891  00313A  6E22               	movwf	___flmul@prod,c
  6892  00313C  0E00               	movlw	0
  6893  00313E  6E23               	movwf	___flmul@prod+1,c
  6894  003140  0E00               	movlw	0
  6895  003142  6E24               	movwf	___flmul@prod+2,c
  6896  003144  0E00               	movlw	0
  6897  003146  6E25               	movwf	___flmul@prod+3,c
  6898  003148  0E00               	movlw	0
  6899  00314A  6E1B               	movwf	___flmul@sign,c
  6900  00314C  D011               	goto	l2817
  6901  00314E                     l914:
  6902  00314E  FFFF               	dw	65535	; assembler added errata NOP
  6903  003150  C026  F021         	movff	___flmul@temp,___flmul@bexp
  6904  003154  0EFF               	movlw	255
  6905  003156  1622               	andwf	___flmul@prod,f,c
  6906  003158  0EFF               	movlw	255
  6907  00315A  1623               	andwf	___flmul@prod+1,f,c
  6908  00315C  0E7F               	movlw	127
  6909  00315E  1624               	andwf	___flmul@prod+2,f,c
  6910  003160  0E00               	movlw	0
  6911  003162  1625               	andwf	___flmul@prod+3,f,c
  6912  003164  B021               	btfsc	___flmul@bexp,0,c
  6913  003166  8E24               	bsf	___flmul@prod+2,7,c
  6914  003168  90D8               	bcf	status,0,c
  6915  00316A  3021               	rrcf	___flmul@bexp,w,c
  6916  00316C                     L11:
  6917  00316C  FFFF               	dw	65535	; assembler added errata NOP
  6918  00316E  6E25               	movwf	___flmul@prod+3,c
  6919  003170                     l2817:
  6920  003170  FFFF               	dw	65535	; assembler added errata NOP
  6921  003172  501B               	movf	___flmul@sign,w,c
  6922  003174  1225               	iorwf	___flmul@prod+3,f,c
  6923  003176  C022  F00F         	movff	___flmul@prod,?___flmul
  6924  00317A  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  6925  00317E  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  6926  003182  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  6927  003186                     l901:
  6928  003186  FFFF               	dw	65535	; assembler added errata NOP
  6929  003188  0012               	return		;funcret
  6930  00318A  FFFF               	dw	65535	; errata NOP
  6931  00318C                     __end_of___flmul:
  6932                           	opt callstack 0
  6933                           
  6934 ;; *************** function ___fldiv *****************
  6935 ;; Defined at:
  6936 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
  6937 ;; Parameters:    Size  Location     Type
  6938 ;;  b               4   39[COMRAM] unsigned char 
  6939 ;;  a               4   43[COMRAM] unsigned char 
  6940 ;; Auto vars:     Size  Location     Type
  6941 ;;  grs             4   58[COMRAM] unsigned long 
  6942 ;;  rem             4   51[COMRAM] unsigned long 
  6943 ;;  new_exp         2   56[COMRAM] int 
  6944 ;;  aexp            1   63[COMRAM] unsigned char 
  6945 ;;  bexp            1   62[COMRAM] unsigned char 
  6946 ;;  sign            1   55[COMRAM] unsigned char 
  6947 ;; Return value:  Size  Location     Type
  6948 ;;                  4   39[COMRAM] unsigned char 
  6949 ;; Registers used:
  6950 ;;		wreg, status,2, status,0
  6951 ;; Tracked objects:
  6952 ;;		On entry : 0/0
  6953 ;;		On exit  : 0/0
  6954 ;;		Unchanged: 0/0
  6955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6956 ;;      Params:         8       0       0       0       0       0       0
  6957 ;;      Locals:        13       0       0       0       0       0       0
  6958 ;;      Temps:          4       0       0       0       0       0       0
  6959 ;;      Totals:        25       0       0       0       0       0       0
  6960 ;;Total ram usage:       25 bytes
  6961 ;; Hardware stack levels used:    1
  6962 ;; This function calls:
  6963 ;;		Nothing
  6964 ;; This function is called by:
  6965 ;;		_get_voltage
  6966 ;;		_get_temp
  6967 ;; This function uses a non-reentrant model
  6968 ;;
  6969                           
  6970                           	psect	text33
  6971  002806                     __ptext33:
  6972                           	opt callstack 0
  6973  002806                     ___fldiv:
  6974                           	opt callstack 0
  6975  002806  FFFF               	dw	65535	; assembler added errata NOP
  6976                           
  6977                           ;incstack = 0
  6978  002808  502B               	movf	___fldiv@b+3,w,c
  6979  00280A  0B80               	andlw	128
  6980  00280C  6E38               	movwf	___fldiv@sign,c
  6981  00280E  502B               	movf	___fldiv@b+3,w,c
  6982  002810  242B               	addwf	___fldiv@b+3,w,c
  6983  002812  6E3F               	movwf	___fldiv@bexp,c
  6984  002814  BE2A               	btfsc	___fldiv@b+2,7,c
  6985  002816  803F               	bsf	___fldiv@bexp,0,c
  6986  002818  503F               	movf	___fldiv@bexp,w,c
  6987  00281A  B4D8               	btfsc	status,2,c
  6988  00281C  D00E               	goto	l3199
  6989  00281E  283F               	incf	___fldiv@bexp,w,c
  6990  002820  A4D8               	btfss	status,2,c
  6991  002822  D008               	goto	l3195
  6992  002824  0E00               	movlw	0
  6993  002826  6E28               	movwf	___fldiv@b,c
  6994  002828  0E00               	movlw	0
  6995  00282A  6E29               	movwf	___fldiv@b+1,c
  6996  00282C  0E00               	movlw	0
  6997  00282E  6E2A               	movwf	___fldiv@b+2,c
  6998  002830  0E00               	movlw	0
  6999  002832  6E2B               	movwf	___fldiv@b+3,c
  7000  002834                     l3195:
  7001  002834  FFFF               	dw	65535	; assembler added errata NOP
  7002  002836  8E2A               	bsf	___fldiv@b+2,7,c
  7003  002838  D007               	goto	L12
  7004  00283A                     l3199:
  7005  00283A  FFFF               	dw	65535	; assembler added errata NOP
  7006  00283C  0E00               	movlw	0
  7007  00283E  6E28               	movwf	___fldiv@b,c
  7008  002840  0E00               	movlw	0
  7009  002842  6E29               	movwf	___fldiv@b+1,c
  7010  002844  0E00               	movlw	0
  7011  002846  6E2A               	movwf	___fldiv@b+2,c
  7012  002848                     L12:
  7013  002848  FFFF               	dw	65535	; assembler added errata NOP
  7014  00284A  0E00               	movlw	0
  7015  00284C  6E2B               	movwf	___fldiv@b+3,c
  7016  00284E  502F               	movf	___fldiv@a+3,w,c
  7017  002850  0B80               	andlw	128
  7018  002852  1A38               	xorwf	___fldiv@sign,f,c
  7019  002854  502F               	movf	___fldiv@a+3,w,c
  7020  002856  242F               	addwf	___fldiv@a+3,w,c
  7021  002858  6E40               	movwf	___fldiv@aexp,c
  7022  00285A  BE2E               	btfsc	___fldiv@a+2,7,c
  7023  00285C  8040               	bsf	___fldiv@aexp,0,c
  7024  00285E  5040               	movf	___fldiv@aexp,w,c
  7025  002860  B4D8               	btfsc	status,2,c
  7026  002862  D00E               	goto	l3219
  7027  002864  2840               	incf	___fldiv@aexp,w,c
  7028  002866  A4D8               	btfss	status,2,c
  7029  002868  D008               	goto	l3215
  7030  00286A  0E00               	movlw	0
  7031  00286C  6E2C               	movwf	___fldiv@a,c
  7032  00286E  0E00               	movlw	0
  7033  002870  6E2D               	movwf	___fldiv@a+1,c
  7034  002872  0E00               	movlw	0
  7035  002874  6E2E               	movwf	___fldiv@a+2,c
  7036  002876  0E00               	movlw	0
  7037  002878  6E2F               	movwf	___fldiv@a+3,c
  7038  00287A                     l3215:
  7039  00287A  FFFF               	dw	65535	; assembler added errata NOP
  7040  00287C  8E2E               	bsf	___fldiv@a+2,7,c
  7041  00287E  D007               	goto	L13
  7042  002880                     l3219:
  7043  002880  FFFF               	dw	65535	; assembler added errata NOP
  7044  002882  0E00               	movlw	0
  7045  002884  6E2C               	movwf	___fldiv@a,c
  7046  002886  0E00               	movlw	0
  7047  002888  6E2D               	movwf	___fldiv@a+1,c
  7048  00288A  0E00               	movlw	0
  7049  00288C  6E2E               	movwf	___fldiv@a+2,c
  7050  00288E                     L13:
  7051  00288E  FFFF               	dw	65535	; assembler added errata NOP
  7052  002890  0E00               	movlw	0
  7053  002892  6E2F               	movwf	___fldiv@a+3,c
  7054  002894  502C               	movf	___fldiv@a,w,c
  7055  002896  102D               	iorwf	___fldiv@a+1,w,c
  7056  002898  102E               	iorwf	___fldiv@a+2,w,c
  7057  00289A  102F               	iorwf	___fldiv@a+3,w,c
  7058  00289C  A4D8               	btfss	status,2,c
  7059  00289E  D018               	goto	l3233
  7060  0028A0  0E00               	movlw	0
  7061  0028A2  6E28               	movwf	___fldiv@b,c
  7062  0028A4  0E00               	movlw	0
  7063  0028A6  6E29               	movwf	___fldiv@b+1,c
  7064  0028A8  0E00               	movlw	0
  7065  0028AA  6E2A               	movwf	___fldiv@b+2,c
  7066  0028AC  0E00               	movlw	0
  7067  0028AE  6E2B               	movwf	___fldiv@b+3,c
  7068  0028B0  0E80               	movlw	128
  7069  0028B2  122A               	iorwf	___fldiv@b+2,f,c
  7070  0028B4  0E7F               	movlw	127
  7071  0028B6  122B               	iorwf	___fldiv@b+3,f,c
  7072  0028B8                     l3227:
  7073  0028B8  FFFF               	dw	65535	; assembler added errata NOP
  7074  0028BA  5038               	movf	___fldiv@sign,w,c
  7075  0028BC  122B               	iorwf	___fldiv@b+3,f,c
  7076  0028BE  C028  F028         	movff	___fldiv@b,?___fldiv
  7077  0028C2  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  7078  0028C6  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  7079  0028CA  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  7080  0028CE  D0F8               	goto	l865
  7081  0028D0                     l3233:
  7082  0028D0  FFFF               	dw	65535	; assembler added errata NOP
  7083  0028D2  503F               	movf	___fldiv@bexp,w,c
  7084  0028D4  A4D8               	btfss	status,2,c
  7085  0028D6  D009               	goto	l3241
  7086  0028D8  0E00               	movlw	0
  7087  0028DA  6E28               	movwf	?___fldiv,c
  7088  0028DC  0E00               	movlw	0
  7089  0028DE  6E29               	movwf	?___fldiv+1,c
  7090  0028E0  0E00               	movlw	0
  7091  0028E2  6E2A               	movwf	?___fldiv+2,c
  7092  0028E4  0E00               	movlw	0
  7093  0028E6  6E2B               	movwf	?___fldiv+3,c
  7094  0028E8  D0EB               	goto	l865
  7095  0028EA                     l3241:
  7096  0028EA  FFFF               	dw	65535	; assembler added errata NOP
  7097  0028EC  5040               	movf	___fldiv@aexp,w,c
  7098  0028EE  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  7099  0028F2  6A31               	clrf	(??___fldiv+1)& (0+255),c
  7100  0028F4  5E30               	subwf	??___fldiv,f,c
  7101  0028F6  0E00               	movlw	0
  7102  0028F8  5A31               	subwfb	??___fldiv+1,f,c
  7103  0028FA  0E7F               	movlw	127
  7104  0028FC  2430               	addwf	??___fldiv,w,c
  7105  0028FE  6E39               	movwf	___fldiv@new_exp,c
  7106  002900  0E00               	movlw	0
  7107  002902  2031               	addwfc	??___fldiv+1,w,c
  7108  002904  6E3A               	movwf	___fldiv@new_exp+1,c
  7109  002906  C028  F034         	movff	___fldiv@b,___fldiv@rem
  7110  00290A  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  7111  00290E  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  7112  002912  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  7113  002916  0E00               	movlw	0
  7114  002918  6E28               	movwf	___fldiv@b,c
  7115  00291A  0E00               	movlw	0
  7116  00291C  6E29               	movwf	___fldiv@b+1,c
  7117  00291E  0E00               	movlw	0
  7118  002920  6E2A               	movwf	___fldiv@b+2,c
  7119  002922  0E00               	movlw	0
  7120  002924  6E2B               	movwf	___fldiv@b+3,c
  7121  002926  0E00               	movlw	0
  7122  002928  6E3B               	movwf	___fldiv@grs,c
  7123  00292A  0E00               	movlw	0
  7124  00292C  6E3C               	movwf	___fldiv@grs+1,c
  7125  00292E  0E00               	movlw	0
  7126  002930  6E3D               	movwf	___fldiv@grs+2,c
  7127  002932  0E00               	movlw	0
  7128  002934  6E3E               	movwf	___fldiv@grs+3,c
  7129  002936  0E00               	movlw	0
  7130  002938  6E40               	movwf	___fldiv@aexp,c
  7131  00293A  D02B               	goto	l867
  7132  00293C                     l3251:
  7133  00293C  FFFF               	dw	65535	; assembler added errata NOP
  7134  00293E  5040               	movf	___fldiv@aexp,w,c
  7135  002940  B4D8               	btfsc	status,2,c
  7136  002942  D011               	goto	l3259
  7137  002944  90D8               	bcf	status,0,c
  7138  002946  3634               	rlcf	___fldiv@rem,f,c
  7139  002948  3635               	rlcf	___fldiv@rem+1,f,c
  7140  00294A  3636               	rlcf	___fldiv@rem+2,f,c
  7141  00294C  3637               	rlcf	___fldiv@rem+3,f,c
  7142  00294E  90D8               	bcf	status,0,c
  7143  002950  3628               	rlcf	___fldiv@b,f,c
  7144  002952  3629               	rlcf	___fldiv@b+1,f,c
  7145  002954  362A               	rlcf	___fldiv@b+2,f,c
  7146  002956  362B               	rlcf	___fldiv@b+3,f,c
  7147  002958  BE3E               	btfsc	___fldiv@grs+3,7,c
  7148  00295A  8028               	bsf	___fldiv@b,0,c
  7149  00295C  90D8               	bcf	status,0,c
  7150  00295E  363B               	rlcf	___fldiv@grs,f,c
  7151  002960  363C               	rlcf	___fldiv@grs+1,f,c
  7152  002962  363D               	rlcf	___fldiv@grs+2,f,c
  7153  002964  363E               	rlcf	___fldiv@grs+3,f,c
  7154  002966                     l3259:
  7155  002966  FFFF               	dw	65535	; assembler added errata NOP
  7156  002968  502C               	movf	___fldiv@a,w,c
  7157  00296A  5C34               	subwf	___fldiv@rem,w,c
  7158  00296C  502D               	movf	___fldiv@a+1,w,c
  7159  00296E  5835               	subwfb	___fldiv@rem+1,w,c
  7160  002970  502E               	movf	___fldiv@a+2,w,c
  7161  002972  5836               	subwfb	___fldiv@rem+2,w,c
  7162  002974  502F               	movf	___fldiv@a+3,w,c
  7163  002976  5837               	subwfb	___fldiv@rem+3,w,c
  7164  002978  A0D8               	btfss	status,0,c
  7165  00297A  D009               	goto	l3265
  7166  00297C  8C3E               	bsf	___fldiv@grs+3,6,c
  7167  00297E  502C               	movf	___fldiv@a,w,c
  7168  002980  5E34               	subwf	___fldiv@rem,f,c
  7169  002982  502D               	movf	___fldiv@a+1,w,c
  7170  002984  5A35               	subwfb	___fldiv@rem+1,f,c
  7171  002986  502E               	movf	___fldiv@a+2,w,c
  7172  002988  5A36               	subwfb	___fldiv@rem+2,f,c
  7173  00298A  502F               	movf	___fldiv@a+3,w,c
  7174  00298C  5A37               	subwfb	___fldiv@rem+3,f,c
  7175  00298E                     l3265:
  7176  00298E  FFFF               	dw	65535	; assembler added errata NOP
  7177  002990  2A40               	incf	___fldiv@aexp,f,c
  7178  002992                     l867:
  7179  002992  FFFF               	dw	65535	; assembler added errata NOP
  7180  002994  0E19               	movlw	25
  7181  002996  6440               	cpfsgt	___fldiv@aexp,c
  7182  002998  D7D1               	goto	l3251
  7183  00299A  5034               	movf	___fldiv@rem,w,c
  7184  00299C  1035               	iorwf	___fldiv@rem+1,w,c
  7185  00299E  1036               	iorwf	___fldiv@rem+2,w,c
  7186  0029A0  1037               	iorwf	___fldiv@rem+3,w,c
  7187  0029A2  B4D8               	btfsc	status,2,c
  7188  0029A4  D012               	goto	l3277
  7189  0029A6  803B               	bsf	___fldiv@grs,0,c
  7190  0029A8  D010               	goto	l3277
  7191  0029AA                     l3271:
  7192  0029AA  FFFF               	dw	65535	; assembler added errata NOP
  7193  0029AC  90D8               	bcf	status,0,c
  7194  0029AE  3628               	rlcf	___fldiv@b,f,c
  7195  0029B0  3629               	rlcf	___fldiv@b+1,f,c
  7196  0029B2  362A               	rlcf	___fldiv@b+2,f,c
  7197  0029B4  362B               	rlcf	___fldiv@b+3,f,c
  7198  0029B6  BE3E               	btfsc	___fldiv@grs+3,7,c
  7199  0029B8  8028               	bsf	___fldiv@b,0,c
  7200  0029BA  90D8               	bcf	status,0,c
  7201  0029BC  363B               	rlcf	___fldiv@grs,f,c
  7202  0029BE  363C               	rlcf	___fldiv@grs+1,f,c
  7203  0029C0  363D               	rlcf	___fldiv@grs+2,f,c
  7204  0029C2  363E               	rlcf	___fldiv@grs+3,f,c
  7205  0029C4  0639               	decf	___fldiv@new_exp,f,c
  7206  0029C6  A0D8               	btfss	status,0,c
  7207  0029C8  063A               	decf	___fldiv@new_exp+1,f,c
  7208  0029CA                     l3277:
  7209  0029CA  FFFF               	dw	65535	; assembler added errata NOP
  7210  0029CC  AE2A               	btfss	___fldiv@b+2,7,c
  7211  0029CE  D7ED               	goto	l3271
  7212  0029D0  0E00               	movlw	0
  7213  0029D2  6E40               	movwf	___fldiv@aexp,c
  7214  0029D4  AE3E               	btfss	___fldiv@grs+3,7,c
  7215  0029D6  D019               	goto	l878
  7216  0029D8  0EFF               	movlw	255
  7217  0029DA  143B               	andwf	___fldiv@grs,w,c
  7218  0029DC  6E30               	movwf	??___fldiv& (0+255),c
  7219  0029DE  0EFF               	movlw	255
  7220  0029E0  143C               	andwf	___fldiv@grs+1,w,c
  7221  0029E2  6E31               	movwf	(??___fldiv+1)& (0+255),c
  7222  0029E4  0EFF               	movlw	255
  7223  0029E6  143D               	andwf	___fldiv@grs+2,w,c
  7224  0029E8  6E32               	movwf	(??___fldiv+2)& (0+255),c
  7225  0029EA  0E7F               	movlw	127
  7226  0029EC  143E               	andwf	___fldiv@grs+3,w,c
  7227  0029EE  6E33               	movwf	(??___fldiv+3)& (0+255),c
  7228  0029F0  5030               	movf	??___fldiv,w,c
  7229  0029F2  1031               	iorwf	??___fldiv+1,w,c
  7230  0029F4  1032               	iorwf	??___fldiv+2,w,c
  7231  0029F6  1033               	iorwf	??___fldiv+3,w,c
  7232  0029F8  B4D8               	btfsc	status,2,c
  7233  0029FA  D004               	goto	l879
  7234  0029FC                     u3450:
  7235  0029FC  FFFF               	dw	65535	; assembler added errata NOP
  7236  0029FE  0E01               	movlw	1
  7237  002A00  6E40               	movwf	___fldiv@aexp,c
  7238  002A02  D003               	goto	l878
  7239  002A04                     l879:
  7240  002A04  FFFF               	dw	65535	; assembler added errata NOP
  7241  002A06  B028               	btfsc	___fldiv@b,0,c
  7242  002A08  D7F9               	goto	u3450
  7243  002A0A                     l878:
  7244  002A0A  FFFF               	dw	65535	; assembler added errata NOP
  7245  002A0C  5040               	movf	___fldiv@aexp,w,c
  7246  002A0E  B4D8               	btfsc	status,2,c
  7247  002A10  D01F               	goto	l3297
  7248  002A12  0E01               	movlw	1
  7249  002A14  2628               	addwf	___fldiv@b,f,c
  7250  002A16  0E00               	movlw	0
  7251  002A18  2229               	addwfc	___fldiv@b+1,f,c
  7252  002A1A  222A               	addwfc	___fldiv@b+2,f,c
  7253  002A1C  222B               	addwfc	___fldiv@b+3,f,c
  7254  002A1E  A02B               	btfss	___fldiv@b+3,0,c
  7255  002A20  D017               	goto	l3297
  7256  002A22  C028  F030         	movff	___fldiv@b,??___fldiv
  7257  002A26  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  7258  002A2A  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  7259  002A2E  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  7260  002A32  3433               	rlcf	??___fldiv+3,w,c
  7261  002A34  3233               	rrcf	??___fldiv+3,f,c
  7262  002A36  3232               	rrcf	??___fldiv+2,f,c
  7263  002A38  3231               	rrcf	??___fldiv+1,f,c
  7264  002A3A  3230               	rrcf	??___fldiv,f,c
  7265  002A3C  C030  F028         	movff	??___fldiv,___fldiv@b
  7266  002A40  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  7267  002A44  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  7268  002A48  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  7269  002A4C  4A39               	infsnz	___fldiv@new_exp,f,c
  7270  002A4E  2A3A               	incf	___fldiv@new_exp+1,f,c
  7271  002A50                     l3297:
  7272  002A50  FFFF               	dw	65535	; assembler added errata NOP
  7273  002A52  BE3A               	btfsc	___fldiv@new_exp+1,7,c
  7274  002A54  D010               	goto	l3301
  7275  002A56  503A               	movf	___fldiv@new_exp+1,w,c
  7276  002A58  E103               	bnz	u3490
  7277  002A5A  2839               	incf	___fldiv@new_exp,w,c
  7278  002A5C  A0D8               	btfss	status,0,c
  7279  002A5E  D00B               	goto	l3301
  7280  002A60                     u3490:
  7281  002A60  0E00               	movlw	0
  7282  002A62  6E3A               	movwf	___fldiv@new_exp+1,c
  7283  002A64  6839               	setf	___fldiv@new_exp,c
  7284  002A66  0E00               	movlw	0
  7285  002A68  6E28               	movwf	___fldiv@b,c
  7286  002A6A  0E00               	movlw	0
  7287  002A6C  6E29               	movwf	___fldiv@b+1,c
  7288  002A6E  0E00               	movlw	0
  7289  002A70  6E2A               	movwf	___fldiv@b+2,c
  7290  002A72  0E00               	movlw	0
  7291  002A74  6E2B               	movwf	___fldiv@b+3,c
  7292  002A76                     l3301:
  7293  002A76  FFFF               	dw	65535	; assembler added errata NOP
  7294  002A78  BE3A               	btfsc	___fldiv@new_exp+1,7,c
  7295  002A7A  D005               	goto	u3500
  7296  002A7C  503A               	movf	___fldiv@new_exp+1,w,c
  7297  002A7E  E112               	bnz	l3305
  7298  002A80  0439               	decf	___fldiv@new_exp,w,c
  7299  002A82  B0D8               	btfsc	status,0,c
  7300  002A84  D00F               	goto	l3305
  7301  002A86                     u3500:
  7302  002A86  FFFF               	dw	65535	; assembler added errata NOP
  7303  002A88  0E00               	movlw	0
  7304  002A8A  6E3A               	movwf	___fldiv@new_exp+1,c
  7305  002A8C  0E00               	movlw	0
  7306  002A8E  6E39               	movwf	___fldiv@new_exp,c
  7307  002A90  0E00               	movlw	0
  7308  002A92  6E28               	movwf	___fldiv@b,c
  7309  002A94  0E00               	movlw	0
  7310  002A96  6E29               	movwf	___fldiv@b+1,c
  7311  002A98  0E00               	movlw	0
  7312  002A9A  6E2A               	movwf	___fldiv@b+2,c
  7313  002A9C  0E00               	movlw	0
  7314  002A9E  6E2B               	movwf	___fldiv@b+3,c
  7315  002AA0  0E00               	movlw	0
  7316  002AA2  6E38               	movwf	___fldiv@sign,c
  7317  002AA4                     l3305:
  7318  002AA4  FFFF               	dw	65535	; assembler added errata NOP
  7319  002AA6  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  7320  002AAA  A03F               	btfss	___fldiv@bexp,0,c
  7321  002AAC  D002               	goto	l3311
  7322  002AAE  8E2A               	bsf	___fldiv@b+2,7,c
  7323  002AB0  D002               	goto	l3313
  7324  002AB2                     l3311:
  7325  002AB2  FFFF               	dw	65535	; assembler added errata NOP
  7326  002AB4  9E2A               	bcf	___fldiv@b+2,7,c
  7327  002AB6                     l3313:
  7328  002AB6  FFFF               	dw	65535	; assembler added errata NOP
  7329  002AB8  90D8               	bcf	status,0,c
  7330  002ABA  303F               	rrcf	___fldiv@bexp,w,c
  7331  002ABC  6E2B               	movwf	___fldiv@b+3,c
  7332  002ABE  D6FC               	goto	l3227
  7333  002AC0                     l865:
  7334  002AC0  FFFF               	dw	65535	; assembler added errata NOP
  7335  002AC2  0012               	return		;funcret
  7336  002AC4  FFFF               	dw	65535	; errata NOP
  7337  002AC6                     __end_of___fldiv:
  7338                           	opt callstack 0
  7339                           
  7340 ;; *************** function ___fladd *****************
  7341 ;; Defined at:
  7342 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  7343 ;; Parameters:    Size  Location     Type
  7344 ;;  b               4   52[COMRAM] unsigned char 
  7345 ;;  a               4   56[COMRAM] unsigned char 
  7346 ;; Auto vars:     Size  Location     Type
  7347 ;;  grs             1   67[COMRAM] unsigned char 
  7348 ;;  bexp            1   66[COMRAM] unsigned char 
  7349 ;;  aexp            1   65[COMRAM] unsigned char 
  7350 ;;  signs           1   64[COMRAM] unsigned char 
  7351 ;; Return value:  Size  Location     Type
  7352 ;;                  4   52[COMRAM] unsigned char 
  7353 ;; Registers used:
  7354 ;;		wreg, status,2, status,0
  7355 ;; Tracked objects:
  7356 ;;		On entry : 0/0
  7357 ;;		On exit  : 0/0
  7358 ;;		Unchanged: 0/0
  7359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7360 ;;      Params:         8       0       0       0       0       0       0
  7361 ;;      Locals:         4       0       0       0       0       0       0
  7362 ;;      Temps:          4       0       0       0       0       0       0
  7363 ;;      Totals:        16       0       0       0       0       0       0
  7364 ;;Total ram usage:       16 bytes
  7365 ;; Hardware stack levels used:    1
  7366 ;; This function calls:
  7367 ;;		Nothing
  7368 ;; This function is called by:
  7369 ;;		_get_temp
  7370 ;;		_sprintf
  7371 ;;		___flsub
  7372 ;; This function uses a non-reentrant model
  7373 ;;
  7374                           
  7375                           	psect	text34
  7376  002AC6                     __ptext34:
  7377                           	opt callstack 0
  7378  002AC6                     ___fladd:
  7379                           	opt callstack 0
  7380  002AC6  FFFF               	dw	65535	; assembler added errata NOP
  7381                           
  7382                           ;incstack = 0
  7383  002AC8  5038               	movf	___fladd@b+3,w,c
  7384  002ACA  0B80               	andlw	128
  7385  002ACC  6E41               	movwf	___fladd@signs,c
  7386  002ACE  5038               	movf	___fladd@b+3,w,c
  7387  002AD0  2438               	addwf	___fladd@b+3,w,c
  7388  002AD2  6E43               	movwf	___fladd@bexp,c
  7389  002AD4  BE37               	btfsc	___fladd@b+2,7,c
  7390  002AD6  8043               	bsf	___fladd@bexp,0,c
  7391  002AD8  5043               	movf	___fladd@bexp,w,c
  7392  002ADA  B4D8               	btfsc	status,2,c
  7393  002ADC  D00E               	goto	l2507
  7394  002ADE  2843               	incf	___fladd@bexp,w,c
  7395  002AE0  A4D8               	btfss	status,2,c
  7396  002AE2  D008               	goto	l2503
  7397  002AE4  0E00               	movlw	0
  7398  002AE6  6E35               	movwf	___fladd@b,c
  7399  002AE8  0E00               	movlw	0
  7400  002AEA  6E36               	movwf	___fladd@b+1,c
  7401  002AEC  0E00               	movlw	0
  7402  002AEE  6E37               	movwf	___fladd@b+2,c
  7403  002AF0  0E00               	movlw	0
  7404  002AF2  6E38               	movwf	___fladd@b+3,c
  7405  002AF4                     l2503:
  7406  002AF4  FFFF               	dw	65535	; assembler added errata NOP
  7407  002AF6  8E37               	bsf	___fladd@b+2,7,c
  7408  002AF8  D007               	goto	L14
  7409  002AFA                     l2507:
  7410  002AFA  FFFF               	dw	65535	; assembler added errata NOP
  7411  002AFC  0E00               	movlw	0
  7412  002AFE  6E35               	movwf	___fladd@b,c
  7413  002B00  0E00               	movlw	0
  7414  002B02  6E36               	movwf	___fladd@b+1,c
  7415  002B04  0E00               	movlw	0
  7416  002B06  6E37               	movwf	___fladd@b+2,c
  7417  002B08                     L14:
  7418  002B08  FFFF               	dw	65535	; assembler added errata NOP
  7419  002B0A  0E00               	movlw	0
  7420  002B0C  6E38               	movwf	___fladd@b+3,c
  7421  002B0E  503C               	movf	___fladd@a+3,w,c
  7422  002B10  0B80               	andlw	128
  7423  002B12  6E42               	movwf	___fladd@aexp,c
  7424  002B14  5041               	movf	___fladd@signs,w,c
  7425  002B16  1842               	xorwf	___fladd@aexp,w,c
  7426  002B18  A4D8               	btfss	status,2,c
  7427  002B1A  8C41               	bsf	___fladd@signs,6,c
  7428  002B1C  503C               	movf	___fladd@a+3,w,c
  7429  002B1E  243C               	addwf	___fladd@a+3,w,c
  7430  002B20  6E42               	movwf	___fladd@aexp,c
  7431  002B22  BE3B               	btfsc	___fladd@a+2,7,c
  7432  002B24  8042               	bsf	___fladd@aexp,0,c
  7433  002B26  5042               	movf	___fladd@aexp,w,c
  7434  002B28  B4D8               	btfsc	status,2,c
  7435  002B2A  D00E               	goto	l2531
  7436  002B2C  2842               	incf	___fladd@aexp,w,c
  7437  002B2E  A4D8               	btfss	status,2,c
  7438  002B30  D008               	goto	l2527
  7439  002B32  0E00               	movlw	0
  7440  002B34  6E39               	movwf	___fladd@a,c
  7441  002B36  0E00               	movlw	0
  7442  002B38  6E3A               	movwf	___fladd@a+1,c
  7443  002B3A  0E00               	movlw	0
  7444  002B3C  6E3B               	movwf	___fladd@a+2,c
  7445  002B3E  0E00               	movlw	0
  7446  002B40  6E3C               	movwf	___fladd@a+3,c
  7447  002B42                     l2527:
  7448  002B42  FFFF               	dw	65535	; assembler added errata NOP
  7449  002B44  8E3B               	bsf	___fladd@a+2,7,c
  7450  002B46  D007               	goto	L15
  7451  002B48                     l2531:
  7452  002B48  FFFF               	dw	65535	; assembler added errata NOP
  7453  002B4A  0E00               	movlw	0
  7454  002B4C  6E39               	movwf	___fladd@a,c
  7455  002B4E  0E00               	movlw	0
  7456  002B50  6E3A               	movwf	___fladd@a+1,c
  7457  002B52  0E00               	movlw	0
  7458  002B54  6E3B               	movwf	___fladd@a+2,c
  7459  002B56                     L15:
  7460  002B56  FFFF               	dw	65535	; assembler added errata NOP
  7461  002B58  0E00               	movlw	0
  7462  002B5A  6E3C               	movwf	___fladd@a+3,c
  7463  002B5C  5043               	movf	___fladd@bexp,w,c
  7464  002B5E  5C42               	subwf	___fladd@aexp,w,c
  7465  002B60  B0D8               	btfsc	status,0,c
  7466  002B62  D023               	goto	l2569
  7467  002B64  AC41               	btfss	___fladd@signs,6,c
  7468  002B66  D002               	goto	l2539
  7469  002B68  0E80               	movlw	128
  7470  002B6A  1A41               	xorwf	___fladd@signs,f,c
  7471  002B6C                     l2539:
  7472  002B6C  FFFF               	dw	65535	; assembler added errata NOP
  7473  002B6E  C043  F044         	movff	___fladd@bexp,___fladd@grs
  7474  002B72  C042  F043         	movff	___fladd@aexp,___fladd@bexp
  7475  002B76  C044  F042         	movff	___fladd@grs,___fladd@aexp
  7476  002B7A  C035  F044         	movff	___fladd@b,___fladd@grs
  7477  002B7E  C039  F035         	movff	___fladd@a,___fladd@b
  7478  002B82  C044  F039         	movff	___fladd@grs,___fladd@a
  7479  002B86  C036  F044         	movff	___fladd@b+1,___fladd@grs
  7480  002B8A  C03A  F036         	movff	___fladd@a+1,___fladd@b+1
  7481  002B8E  C044  F03A         	movff	___fladd@grs,___fladd@a+1
  7482  002B92  C037  F044         	movff	___fladd@b+2,___fladd@grs
  7483  002B96  C03B  F037         	movff	___fladd@a+2,___fladd@b+2
  7484  002B9A  C044  F03B         	movff	___fladd@grs,___fladd@a+2
  7485  002B9E  C038  F044         	movff	___fladd@b+3,___fladd@grs
  7486  002BA2  C03C  F038         	movff	___fladd@a+3,___fladd@b+3
  7487  002BA6  C044  F03C         	movff	___fladd@grs,___fladd@a+3
  7488  002BAA                     l2569:
  7489  002BAA  FFFF               	dw	65535	; assembler added errata NOP
  7490  002BAC  0E00               	movlw	0
  7491  002BAE  6E44               	movwf	___fladd@grs,c
  7492  002BB0  5043               	movf	___fladd@bexp,w,c
  7493  002BB2  C042  F03D         	movff	___fladd@aexp,??___fladd
  7494  002BB6  6A3E               	clrf	(??___fladd+1)& (0+255),c
  7495  002BB8  5E3D               	subwf	??___fladd,f,c
  7496  002BBA  0E00               	movlw	0
  7497  002BBC  5A3E               	subwfb	??___fladd+1,f,c
  7498  002BBE  BE3E               	btfsc	??___fladd+1,7,c
  7499  002BC0  D031               	goto	l812
  7500  002BC2  503E               	movf	??___fladd+1,w,c
  7501  002BC4  E104               	bnz	u2320
  7502  002BC6  0E1A               	movlw	26
  7503  002BC8  5C3D               	subwf	??___fladd,w,c
  7504  002BCA  A0D8               	btfss	status,0,c
  7505  002BCC  D02B               	goto	l812
  7506  002BCE                     u2320:
  7507  002BCE  5035               	movf	___fladd@b,w,c
  7508  002BD0  1036               	iorwf	___fladd@b+1,w,c
  7509  002BD2  1037               	iorwf	___fladd@b+2,w,c
  7510  002BD4  1038               	iorwf	___fladd@b+3,w,c
  7511  002BD6  B4D8               	btfsc	status,2,c
  7512  002BD8  D002               	goto	u2330
  7513  002BDA  0E01               	movlw	1
  7514  002BDC  D002               	goto	u2340
  7515  002BDE                     u2330:
  7516  002BDE  FFFF               	dw	65535	; assembler added errata NOP
  7517  002BE0  0E00               	movlw	0
  7518  002BE2                     u2340:
  7519  002BE2  FFFF               	dw	65535	; assembler added errata NOP
  7520  002BE4  6E44               	movwf	___fladd@grs,c
  7521  002BE6  0E00               	movlw	0
  7522  002BE8  6E35               	movwf	___fladd@b,c
  7523  002BEA  0E00               	movlw	0
  7524  002BEC  6E36               	movwf	___fladd@b+1,c
  7525  002BEE  0E00               	movlw	0
  7526  002BF0  6E37               	movwf	___fladd@b+2,c
  7527  002BF2  0E00               	movlw	0
  7528  002BF4  6E38               	movwf	___fladd@b+3,c
  7529  002BF6  C042  F043         	movff	___fladd@aexp,___fladd@bexp
  7530  002BFA  D019               	goto	u2370
  7531  002BFC                     l813:
  7532  002BFC  FFFF               	dw	65535	; assembler added errata NOP
  7533  002BFE  A044               	btfss	___fladd@grs,0,c
  7534  002C00  D005               	goto	l2581
  7535  002C02  90D8               	bcf	status,0,c
  7536  002C04  3044               	rrcf	___fladd@grs,w,c
  7537  002C06  0901               	iorlw	1
  7538  002C08  6E44               	movwf	___fladd@grs,c
  7539  002C0A  D003               	goto	l2583
  7540  002C0C                     l2581:
  7541  002C0C  FFFF               	dw	65535	; assembler added errata NOP
  7542  002C0E  90D8               	bcf	status,0,c
  7543  002C10  3244               	rrcf	___fladd@grs,f,c
  7544  002C12                     l2583:
  7545  002C12  FFFF               	dw	65535	; assembler added errata NOP
  7546  002C14  B035               	btfsc	___fladd@b,0,c
  7547  002C16  8E44               	bsf	___fladd@grs,7,c
  7548  002C18  3438               	rlcf	___fladd@b+3,w,c
  7549  002C1A  3238               	rrcf	___fladd@b+3,f,c
  7550  002C1C  3237               	rrcf	___fladd@b+2,f,c
  7551  002C1E  3236               	rrcf	___fladd@b+1,f,c
  7552  002C20  3235               	rrcf	___fladd@b,f,c
  7553  002C22  2A43               	incf	___fladd@bexp,f,c
  7554  002C24                     l812:
  7555  002C24  FFFF               	dw	65535	; assembler added errata NOP
  7556  002C26  5042               	movf	___fladd@aexp,w,c
  7557  002C28  5C43               	subwf	___fladd@bexp,w,c
  7558  002C2A  A0D8               	btfss	status,0,c
  7559  002C2C  D7E7               	goto	l813
  7560  002C2E                     u2370:
  7561  002C2E  FFFF               	dw	65535	; assembler added errata NOP
  7562  002C30  BC41               	btfsc	___fladd@signs,6,c
  7563  002C32  D021               	goto	l2615
  7564  002C34  5043               	movf	___fladd@bexp,w,c
  7565  002C36  B4D8               	btfsc	status,2,c
  7566  002C38  D065               	goto	u2460
  7567  002C3A  5039               	movf	___fladd@a,w,c
  7568  002C3C  2635               	addwf	___fladd@b,f,c
  7569  002C3E  503A               	movf	___fladd@a+1,w,c
  7570  002C40  2236               	addwfc	___fladd@b+1,f,c
  7571  002C42  503B               	movf	___fladd@a+2,w,c
  7572  002C44  2237               	addwfc	___fladd@b+2,f,c
  7573  002C46  503C               	movf	___fladd@a+3,w,c
  7574  002C48  2238               	addwfc	___fladd@b+3,f,c
  7575  002C4A  A038               	btfss	___fladd@b+3,0,c
  7576  002C4C  D07B               	goto	u2500
  7577  002C4E  A044               	btfss	___fladd@grs,0,c
  7578  002C50  D005               	goto	l2605
  7579  002C52  90D8               	bcf	status,0,c
  7580  002C54  3044               	rrcf	___fladd@grs,w,c
  7581  002C56  0901               	iorlw	1
  7582  002C58  6E44               	movwf	___fladd@grs,c
  7583  002C5A  D003               	goto	l2607
  7584  002C5C                     l2605:
  7585  002C5C  FFFF               	dw	65535	; assembler added errata NOP
  7586  002C5E  90D8               	bcf	status,0,c
  7587  002C60  3244               	rrcf	___fladd@grs,f,c
  7588  002C62                     l2607:
  7589  002C62  FFFF               	dw	65535	; assembler added errata NOP
  7590  002C64  B035               	btfsc	___fladd@b,0,c
  7591  002C66  8E44               	bsf	___fladd@grs,7,c
  7592  002C68  3438               	rlcf	___fladd@b+3,w,c
  7593  002C6A  3238               	rrcf	___fladd@b+3,f,c
  7594  002C6C  3237               	rrcf	___fladd@b+2,f,c
  7595  002C6E  3236               	rrcf	___fladd@b+1,f,c
  7596  002C70  3235               	rrcf	___fladd@b,f,c
  7597  002C72  2A43               	incf	___fladd@bexp,f,c
  7598  002C74  D067               	goto	u2500
  7599  002C76                     l2615:
  7600  002C76  FFFF               	dw	65535	; assembler added errata NOP
  7601  002C78  5039               	movf	___fladd@a,w,c
  7602  002C7A  5C35               	subwf	___fladd@b,w,c
  7603  002C7C  503A               	movf	___fladd@a+1,w,c
  7604  002C7E  5836               	subwfb	___fladd@b+1,w,c
  7605  002C80  503B               	movf	___fladd@a+2,w,c
  7606  002C82  5837               	subwfb	___fladd@b+2,w,c
  7607  002C84  5038               	movf	___fladd@b+3,w,c
  7608  002C86  0A80               	xorlw	128
  7609  002C88  6E3D               	movwf	??___fladd& (0+255),c
  7610  002C8A  503C               	movf	___fladd@a+3,w,c
  7611  002C8C  0A80               	xorlw	128
  7612  002C8E  583D               	subwfb	??___fladd& (0+255),w,c
  7613  002C90  B0D8               	btfsc	status,0,c
  7614  002C92  D025               	goto	l2625
  7615  002C94  5035               	movf	___fladd@b,w,c
  7616  002C96  5C39               	subwf	___fladd@a,w,c
  7617  002C98  6E3D               	movwf	??___fladd& (0+255),c
  7618  002C9A  5036               	movf	___fladd@b+1,w,c
  7619  002C9C  583A               	subwfb	___fladd@a+1,w,c
  7620  002C9E  6E3E               	movwf	(??___fladd+1)& (0+255),c
  7621  002CA0  5037               	movf	___fladd@b+2,w,c
  7622  002CA2  583B               	subwfb	___fladd@a+2,w,c
  7623  002CA4  6E3F               	movwf	(??___fladd+2)& (0+255),c
  7624  002CA6  5038               	movf	___fladd@b+3,w,c
  7625  002CA8  583C               	subwfb	___fladd@a+3,w,c
  7626  002CAA  6E40               	movwf	(??___fladd+3)& (0+255),c
  7627  002CAC  0EFF               	movlw	255
  7628  002CAE  243D               	addwf	??___fladd,w,c
  7629  002CB0  6E35               	movwf	___fladd@b,c
  7630  002CB2  0EFF               	movlw	255
  7631  002CB4  203E               	addwfc	??___fladd+1,w,c
  7632  002CB6  6E36               	movwf	___fladd@b+1,c
  7633  002CB8  0EFF               	movlw	255
  7634  002CBA  203F               	addwfc	??___fladd+2,w,c
  7635  002CBC  6E37               	movwf	___fladd@b+2,c
  7636  002CBE  0EFF               	movlw	255
  7637  002CC0  2040               	addwfc	??___fladd+3,w,c
  7638  002CC2  6E38               	movwf	___fladd@b+3,c
  7639  002CC4  0E80               	movlw	128
  7640  002CC6  1A41               	xorwf	___fladd@signs,f,c
  7641  002CC8  6C44               	negf	___fladd@grs,c
  7642  002CCA  5044               	movf	___fladd@grs,w,c
  7643  002CCC  A4D8               	btfss	status,2,c
  7644  002CCE  D010               	goto	l828
  7645  002CD0  0E01               	movlw	1
  7646  002CD2  2635               	addwf	___fladd@b,f,c
  7647  002CD4  0E00               	movlw	0
  7648  002CD6  2236               	addwfc	___fladd@b+1,f,c
  7649  002CD8  2237               	addwfc	___fladd@b+2,f,c
  7650  002CDA  2238               	addwfc	___fladd@b+3,f,c
  7651  002CDC  D009               	goto	l828
  7652  002CDE                     l2625:
  7653  002CDE  FFFF               	dw	65535	; assembler added errata NOP
  7654  002CE0  5039               	movf	___fladd@a,w,c
  7655  002CE2  5E35               	subwf	___fladd@b,f,c
  7656  002CE4  503A               	movf	___fladd@a+1,w,c
  7657  002CE6  5A36               	subwfb	___fladd@b+1,f,c
  7658  002CE8  503B               	movf	___fladd@a+2,w,c
  7659  002CEA  5A37               	subwfb	___fladd@b+2,f,c
  7660  002CEC  503C               	movf	___fladd@a+3,w,c
  7661  002CEE  5A38               	subwfb	___fladd@b+3,f,c
  7662  002CF0                     l828:
  7663  002CF0  FFFF               	dw	65535	; assembler added errata NOP
  7664  002CF2  5035               	movf	___fladd@b,w,c
  7665  002CF4  1036               	iorwf	___fladd@b+1,w,c
  7666  002CF6  1037               	iorwf	___fladd@b+2,w,c
  7667  002CF8  1038               	iorwf	___fladd@b+3,w,c
  7668  002CFA  A4D8               	btfss	status,2,c
  7669  002CFC  D020               	goto	l2649
  7670  002CFE  5044               	movf	___fladd@grs,w,c
  7671  002D00  A4D8               	btfss	status,2,c
  7672  002D02  D01D               	goto	l2649
  7673  002D04                     u2460:
  7674  002D04  FFFF               	dw	65535	; assembler added errata NOP
  7675  002D06  0E00               	movlw	0
  7676  002D08  6E35               	movwf	?___fladd,c
  7677  002D0A  0E00               	movlw	0
  7678  002D0C  6E36               	movwf	?___fladd+1,c
  7679  002D0E  0E00               	movlw	0
  7680  002D10  6E37               	movwf	?___fladd+2,c
  7681  002D12  0E00               	movlw	0
  7682  002D14  6E38               	movwf	?___fladd+3,c
  7683  002D16  D076               	goto	l820
  7684  002D18                     l2633:
  7685  002D18  FFFF               	dw	65535	; assembler added errata NOP
  7686  002D1A  90D8               	bcf	status,0,c
  7687  002D1C  3635               	rlcf	___fladd@b,f,c
  7688  002D1E  3636               	rlcf	___fladd@b+1,f,c
  7689  002D20  3637               	rlcf	___fladd@b+2,f,c
  7690  002D22  3638               	rlcf	___fladd@b+3,f,c
  7691  002D24  BE44               	btfsc	___fladd@grs,7,c
  7692  002D26  8035               	bsf	___fladd@b,0,c
  7693  002D28  A044               	btfss	___fladd@grs,0,c
  7694  002D2A  D002               	goto	l2643
  7695  002D2C  80D8               	bsf	status,0,c
  7696  002D2E  D002               	goto	L16
  7697  002D30                     l2643:
  7698  002D30  FFFF               	dw	65535	; assembler added errata NOP
  7699  002D32  90D8               	bcf	status,0,c
  7700  002D34                     L16:
  7701  002D34  FFFF               	dw	65535	; assembler added errata NOP
  7702  002D36  3644               	rlcf	___fladd@grs,f,c
  7703  002D38  5043               	movf	___fladd@bexp,w,c
  7704  002D3A  A4D8               	btfss	status,2,c
  7705  002D3C  0643               	decf	___fladd@bexp,f,c
  7706  002D3E                     l2649:
  7707  002D3E  FFFF               	dw	65535	; assembler added errata NOP
  7708  002D40  AE37               	btfss	___fladd@b+2,7,c
  7709  002D42  D7EA               	goto	l2633
  7710  002D44                     u2500:
  7711  002D44  FFFF               	dw	65535	; assembler added errata NOP
  7712  002D46  0E00               	movlw	0
  7713  002D48  6E42               	movwf	___fladd@aexp,c
  7714  002D4A  AE44               	btfss	___fladd@grs,7,c
  7715  002D4C  D00D               	goto	l837
  7716  002D4E  C044  F03D         	movff	___fladd@grs,??___fladd
  7717  002D52  0E7F               	movlw	127
  7718  002D54  163D               	andwf	??___fladd,f,c
  7719  002D56  B4D8               	btfsc	status,2,c
  7720  002D58  D004               	goto	l838
  7721  002D5A                     u2520:
  7722  002D5A  FFFF               	dw	65535	; assembler added errata NOP
  7723  002D5C  0E01               	movlw	1
  7724  002D5E  6E42               	movwf	___fladd@aexp,c
  7725  002D60  D003               	goto	l837
  7726  002D62                     l838:
  7727  002D62  FFFF               	dw	65535	; assembler added errata NOP
  7728  002D64  B035               	btfsc	___fladd@b,0,c
  7729  002D66  D7F9               	goto	u2520
  7730  002D68                     l837:
  7731  002D68  FFFF               	dw	65535	; assembler added errata NOP
  7732  002D6A  5042               	movf	___fladd@aexp,w,c
  7733  002D6C  B4D8               	btfsc	status,2,c
  7734  002D6E  D020               	goto	l2669
  7735  002D70  0E01               	movlw	1
  7736  002D72  2635               	addwf	___fladd@b,f,c
  7737  002D74  0E00               	movlw	0
  7738  002D76  2236               	addwfc	___fladd@b+1,f,c
  7739  002D78  2237               	addwfc	___fladd@b+2,f,c
  7740  002D7A  2238               	addwfc	___fladd@b+3,f,c
  7741  002D7C  A038               	btfss	___fladd@b+3,0,c
  7742  002D7E  D018               	goto	l2669
  7743  002D80  C035  F03D         	movff	___fladd@b,??___fladd
  7744  002D84  C036  F03E         	movff	___fladd@b+1,??___fladd+1
  7745  002D88  C037  F03F         	movff	___fladd@b+2,??___fladd+2
  7746  002D8C  C038  F040         	movff	___fladd@b+3,??___fladd+3
  7747  002D90  3440               	rlcf	??___fladd+3,w,c
  7748  002D92  3240               	rrcf	??___fladd+3,f,c
  7749  002D94  323F               	rrcf	??___fladd+2,f,c
  7750  002D96  323E               	rrcf	??___fladd+1,f,c
  7751  002D98  323D               	rrcf	??___fladd,f,c
  7752  002D9A  C03D  F035         	movff	??___fladd,___fladd@b
  7753  002D9E  C03E  F036         	movff	??___fladd+1,___fladd@b+1
  7754  002DA2  C03F  F037         	movff	??___fladd+2,___fladd@b+2
  7755  002DA6  C040  F038         	movff	??___fladd+3,___fladd@b+3
  7756  002DAA  2843               	incf	___fladd@bexp,w,c
  7757  002DAC  A4D8               	btfss	status,2,c
  7758  002DAE  2A43               	incf	___fladd@bexp,f,c
  7759  002DB0                     l2669:
  7760  002DB0  FFFF               	dw	65535	; assembler added errata NOP
  7761  002DB2  2843               	incf	___fladd@bexp,w,c
  7762  002DB4  B4D8               	btfsc	status,2,c
  7763  002DB6  D003               	goto	u2580
  7764  002DB8  5043               	movf	___fladd@bexp,w,c
  7765  002DBA  A4D8               	btfss	status,2,c
  7766  002DBC  D00E               	goto	l2677
  7767  002DBE                     u2580:
  7768  002DBE  FFFF               	dw	65535	; assembler added errata NOP
  7769  002DC0  0E00               	movlw	0
  7770  002DC2  6E35               	movwf	___fladd@b,c
  7771  002DC4  0E00               	movlw	0
  7772  002DC6  6E36               	movwf	___fladd@b+1,c
  7773  002DC8  0E00               	movlw	0
  7774  002DCA  6E37               	movwf	___fladd@b+2,c
  7775  002DCC  0E00               	movlw	0
  7776  002DCE  6E38               	movwf	___fladd@b+3,c
  7777  002DD0  5043               	movf	___fladd@bexp,w,c
  7778  002DD2  A4D8               	btfss	status,2,c
  7779  002DD4  D002               	goto	l2677
  7780  002DD6  0E00               	movlw	0
  7781  002DD8  6E41               	movwf	___fladd@signs,c
  7782  002DDA                     l2677:
  7783  002DDA  FFFF               	dw	65535	; assembler added errata NOP
  7784  002DDC  A043               	btfss	___fladd@bexp,0,c
  7785  002DDE  D002               	goto	l2681
  7786  002DE0  8E37               	bsf	___fladd@b+2,7,c
  7787  002DE2  D002               	goto	l2683
  7788  002DE4                     l2681:
  7789  002DE4  FFFF               	dw	65535	; assembler added errata NOP
  7790  002DE6  9E37               	bcf	___fladd@b+2,7,c
  7791  002DE8                     l2683:
  7792  002DE8  FFFF               	dw	65535	; assembler added errata NOP
  7793  002DEA  90D8               	bcf	status,0,c
  7794  002DEC  3043               	rrcf	___fladd@bexp,w,c
  7795  002DEE  6E38               	movwf	___fladd@b+3,c
  7796  002DF0  BE41               	btfsc	___fladd@signs,7,c
  7797  002DF2  8E38               	bsf	___fladd@b+3,7,c
  7798  002DF4  C035  F035         	movff	___fladd@b,?___fladd
  7799  002DF8  C036  F036         	movff	___fladd@b+1,?___fladd+1
  7800  002DFC  C037  F037         	movff	___fladd@b+2,?___fladd+2
  7801  002E00  C038  F038         	movff	___fladd@b+3,?___fladd+3
  7802  002E04                     l820:
  7803  002E04  FFFF               	dw	65535	; assembler added errata NOP
  7804  002E06  0012               	return		;funcret
  7805  002E08  FFFF               	dw	65535	; errata NOP
  7806  002E0A                     __end_of___fladd:
  7807                           	opt callstack 0
  7808                           
  7809                           	psect	rparam
  7810  0000                     tosu	equ	0xFFF
  7811                           tosh	equ	0xFFE
  7812                           tosl	equ	0xFFD
  7813                           stkptr	equ	0xFFC
  7814                           pclatu	equ	0xFFB
  7815                           pclath	equ	0xFFA
  7816                           pcl	equ	0xFF9
  7817                           tblptru	equ	0xFF8
  7818                           tblptrh	equ	0xFF7
  7819                           tblptrl	equ	0xFF6
  7820                           tablat	equ	0xFF5
  7821                           prodh	equ	0xFF4
  7822                           prodl	equ	0xFF3
  7823                           indf0	equ	0xFEF
  7824                           postinc0	equ	0xFEE
  7825                           postdec0	equ	0xFED
  7826                           preinc0	equ	0xFEC
  7827                           plusw0	equ	0xFEB
  7828                           fsr0h	equ	0xFEA
  7829                           fsr0l	equ	0xFE9
  7830                           wreg	equ	0xFE8
  7831                           indf1	equ	0xFE7
  7832                           postinc1	equ	0xFE6
  7833                           postdec1	equ	0xFE5
  7834                           preinc1	equ	0xFE4
  7835                           plusw1	equ	0xFE3
  7836                           fsr1h	equ	0xFE2
  7837                           fsr1l	equ	0xFE1
  7838                           bsr	equ	0xFE0
  7839                           indf2	equ	0xFDF
  7840                           postinc2	equ	0xFDE
  7841                           postdec2	equ	0xFDD
  7842                           preinc2	equ	0xFDC
  7843                           plusw2	equ	0xFDB
  7844                           fsr2h	equ	0xFDA
  7845                           fsr2l	equ	0xFD9
  7846                           status	equ	0xFD8


Data Sizes:
    Strings     165
    Constant    144
    Data        0
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    117     117
    BANK0           128     36      56
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_10(CODE[17]), STR_9(CODE[16]), STR_8(CODE[17]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[15]), main@message(BANK0[20]), STR_2(CODE[14]), 
		 -> STR_1(CODE[14]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_10(CODE[17]), STR_9(CODE[16]), STR_8(CODE[17]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[15]), main@message(BANK0[20]), STR_2(CODE[14]), 
		 -> STR_1(CODE[14]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_4(CODE[19]), STR_3(CODE[19]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> main@message(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    print_message_onLCD@message	PTR unsigned char  size(2) Largest target is 20
		 -> STR_10(CODE[17]), STR_9(CODE[16]), STR_8(CODE[17]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[15]), main@message(BANK0[20]), STR_2(CODE[14]), 
		 -> STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___lwmod
    ___fltol->_scale
    ___flsub->___fladd
    _print_message_onLCD->_strlen
    _init_LCD->_R_I
    _get_voltage->___fldiv
    _get_temp->___fladd
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___fladd->_fround

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                38    38      0   50334
                                            115 COMRAM     2     2      0
                                              0 BANK0     36    36      0
                                _R_I
                             ___flge
                           _get_temp
                        _get_voltage
                           _init_LCD
                     _initial_config
                     _light_the_bulb
    _light_the_bulb_and_start_engine
                _print_message_onLCD
                            _sprintf
                       _start_engine
                _turn_off_everything
 ---------------------------------------------------------------------------------
 (1) _turn_off_everything                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_engine                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             45    37      8   32367
                                             76 COMRAM    39    31      8
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     5      4    7039
                                             39 COMRAM     9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1208
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1364
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13     9      4    5502
                                             39 COMRAM    13     9      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     615
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              0 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          14     6      8     455
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     615
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     466
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             48 COMRAM    10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3041
                                             68 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1246
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _print_message_onLCD                                  6     4      2    1006
                                              4 COMRAM     6     4      2
                                _R_D
                                _R_I
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _R_D                                                  1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _light_the_bulb_and_start_engine                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _light_the_bulb                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initial_config                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_LCD                                             1     1      0      22
                                              1 COMRAM     1     1      0
                                _R_I
 ---------------------------------------------------------------------------------
 (2) _R_I                                                  1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _get_voltage                                          4     0      4    6223
                                             64 COMRAM     4     0      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _get_temp                                             8     4      4    9009
                                             68 COMRAM     8     4      4
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    4024
                                             14 COMRAM    25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1551
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2718
                                             52 COMRAM    16     8      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _R_I
   ___flge
   _get_temp
     ___fladd
       _fround (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fldiv
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _get_voltage
     ___fldiv
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _init_LCD
     _R_I
   _initial_config
   _light_the_bulb
   _light_the_bulb_and_start_engine
   _print_message_onLCD
     _R_D
     _R_I
     _strlen
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
   _start_engine
   _turn_off_everything

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     24      38       5       43.8%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     75      75       1       92.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AD      15        0.0%
DATA                 0      0      AD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Apr 06 23:34:00 2020

                                                     ___fldiv@aexp 0040  
                                                     ___fldiv@bexp 003F  
                                                     ___fldiv@sign 0038  
                                                               l74 2336  
                                                     ___awdiv@sign 000C  
                                                     ?_get_voltage 0041  
                                              ___wmul@multiplicand 0003  
                                                      __CFG_OSC$XT 000000  
                                                              l117 1F0A  
                                                              l228 3CAC  
                                                              l157 3596  
                                                              l515 204A  
                                                              l540 1E58  
                                                              l533 1C0C  
                                                              l703 1A52  
                                                              l288 1B66  
                                                              l624 2160  
                                                              l626 20D6  
                                                              l539 1E1A  
                                                              l627 2100  
                                                              l820 2E04  
                                                              l812 2C24  
                                                              l813 2BFC  
                                                              l901 3186  
                                                              l567 1D78  
                                                              l914 314E  
                                                              l906 30C0  
                                                              l907 30BA  
                                                              l828 2CF0  
                                                              l837 2D68  
                                                              l941 22BC  
                                                              l838 2D62  
                                                              l774 190A  
                                                              l784 1852  
                                                              l865 2AC0  
                                                              l945 2230  
                                                              _LC3 007C5B  
                                                              l938 21A6  
                                                              _LC4 007C5C  
                                                              l867 2992  
                                                              l878 2A0A  
                                                              l879 2A04  
                                                              l897 2E96  
                                                              _R_D 169E  
                                                              _R_I 1682  
                                                     __CFG_BOR$OFF 000000  
                                                     ___awmod@sign 0006  
                                                              wreg 000FE8  
                                                 ??_initial_config 0001  
                                                     ___flmul@aexp 0020  
                                                     ___flmul@bexp 0021  
                                                      _sprintf$839 0059  
                                                     ___flmul@sign 001B  
                                                     ___flmul@temp 0026  
                                                     ___flmul@prod 0022  
                                                     __CFG_LVP$OFF 000000  
                                                             ?_R_D 0001  
                                                             ?_R_I 0001  
                                                     ___fltol@exp1 003A  
                                                     __CFG_WDT$OFF 000000  
                                                             l3101 1F66  
                                                             l3005 335A  
                                                             l3023 3562  
                                                             l3121 1FB6  
                                                             l3017 34AE  
                                                             l3009 338A  
                                                             l3035 16D2  
                                                             l3301 2A76  
                                                             l3141 2006  
                                                             l3045 2080  
                                                             l2503 2AF4  
                                                             l3311 2AB2  
                                                             l3215 287A  
                                                             l3151 2022  
                                                             l3313 2AB6  
                                                             l3305 2AA4  
                                                             l3241 28EA  
                                                             l3233 28D0  
                                                             l3153 2030  
                                                             l3145 2018  
                                                             l3129 1FE8  
                                                             l3081 211C  
                                                             l2531 2B48  
                                                             l2507 2AFA  
                                                             l3251 293C  
                                                             l3227 28B8  
                                                             l3219 2880  
                                                             l3331 1BB2  
                                                             l3091 2138  
                                                             l2605 2C5C  
                                                             l3413 1D66  
                                                             l3405 1D38  
                                                             l3421 1A08  
                                                             l3093 2146  
                                                             l3085 212E  
                                                             l2607 2C62  
                                                             l2615 2C76  
                                                             l2527 2B42  
                                                             l3271 29AA  
                                                             l3335 1BE8  
                                                             l3351 1DEA  
                                                             l3407 1D46  
                                                             l3167 1B10  
                                                             l3423 1A16  
                                                             l3511 35CA  
                                                             l2633 2D18  
                                                             l2625 2CDE  
                                                             l3265 298E  
                                                             l2801 3106  
                                                             l2705 2E38  
                                                             l3361 1E54  
                                                             l3169 1B1E  
                                                             l3601 391A  
                                                             l3513 35DE  
                                                             l3505 35AA  
                                                             l2643 2D30  
                                                             l2539 2B6C  
                                                             l3259 2966  
                                                             l3195 2834  
                                                             l2723 2E7E  
                                                             l2707 2E3E  
                                                             l3451 2216  
                                                             l3339 1C08  
                                                             l3355 1E02  
                                                             l3347 1DB4  
                                                             l3179 1B56  
                                                             l3523 361A  
                                                             l2581 2C0C  
                                                             l3277 29CA  
                                                             l2805 3126  
                                                             l2733 2EB8  
                                                             l2725 2E84  
                                                             l2709 2E50  
                                                             l3445 21D8  
                                                             l3429 1A42  
                                                             l3701 3CB2  
                                                             l3613 39B2  
                                                             l3541 36DC  
                                                             l3517 35E6  
                                                             l3509 35C0  
                                                             l2583 2C12  
                                                             l3199 283A  
                                                             l3447 21E0  
                                                             l3439 21B8  
                                                             l2911 18DA  
                                                             l2831 1C28  
                                                             l3623 3A1A  
                                                             l3551 370A  
                                                             l3543 36F6  
                                                             l2681 2DE4  
                                                             l2649 2D3E  
                                                             l2569 2BAA  
                                                             l3297 2A50  
                                                             l2817 3170  
                                                             l3457 2258  
                                                             l3449 21EE  
                                                             l3369 1726  
                                                             l2921 18FE  
                                                             l3713 3D34  
                                                             l3633 3A98  
                                                             l3609 3986  
                                                             l3553 3734  
                                                             l3537 36A2  
                                                             l2683 2DE8  
                                                             l3475 22AA  
                                                             l3459 2266  
                                                             l3395 1D1C  
                                                             l3379 1CCC  
                                                             l2931 182A  
                                                             l2843 1C52  
                                                             l3731 3E48  
                                                             l3723 3E24  
                                                             l3627 3A92  
                                                             l3547 3704  
                                                             l2677 2DDA  
                                                             l2669 2DB0  
                                                             l2781 3080  
                                                             l3493 1928  
                                                             l2909 18D0  
                                                             l2845 1C5C  
                                                             l2837 1C3A  
                                                             l3725 3E30  
                                                             l3709 3CD2  
                                                             l3645 3B04  
                                                             l3733 3E54  
                                                             l2775 3060  
                                                             l3399 1D2E  
                                                             l2863 1C9C  
                                                             l2855 1C80  
                                                             l3743 3E90  
                                                             l3663 3B64  
                                                             l3671 3B8E  
                                                             l3559 374A  
                                                             l3497 195E  
                                                             l2937 1846  
                                                             l2929 1820  
                                                             l3761 3F04  
                                                             l3753 3ED6  
                                                             l3665 3B76  
                                                             l3657 3B4C  
                                                             l3649 3B20  
                                                             l3593 389E  
                                                             l3585 3820  
                                                             l3569 3798  
                                                             l2963 17D0  
                                                             l2859 1C8C  
                                                             l2891 1AC2  
                                                             l2883 1A9C  
                                                             l2875 1A7E  
                                                             l3747 3EB2  
                                                             l3739 3E6E  
                                                             l3835 231C  
                                                             l2965 17D6  
                                                             l2885 1AA6  
                                                             l3765 3F2A  
                                                             l3597 38CC  
                                                             l2895 1ACE  
                                                             l2879 1A8C  
                                                             l3775 3F5E  
                                                             l3783 3F80  
                                                             l3767 3F34  
                                                             l3759 3EFA  
                                                             l3695 3C84  
                                                             l3679 3BC8  
                                                             l3687 3C60  
                                                             l3855 23BA  
                                                             l2985 27AA  
                                                             l3689 3C6C  
                                                             l3873 24BC  
                                                             l3865 2448  
                                                             l2979 26CC  
                                                             l2899 1ADE  
                                                             l3883 251A  
                                                             l3891 253C  
                                                             l3859 23FC  
                                                             l3797 3FD0  
                                                             l2999 32B8  
                                                             l3879 2508  
                                                             STR_1 7FF0  
                                                             STR_2 7FE2  
                                                             STR_3 7F6C  
                                                             STR_4 7F59  
                                                             STR_5 7FD3  
                                                             STR_6 7FA1  
                                                             STR_7 7F90  
                                                             STR_8 7FB2  
                                                             STR_9 7FC3  
                                                             u3101 2062  
                                                             _LATA 000F89  
                                                             u3110 206C  
                                                             _LATB 000F8A  
                                                             _LATC 000F8B  
                                                             u2320 2BCE  
                                                             _LATD 000F8C  
                                                             u3121 2092  
                                                             u2330 2BDE  
                                                             u2500 2D44  
                                                             u2340 2BE2  
                                                             u4020 3AD8  
                                                             u4110 3C94  
                                                             u2520 2D5A  
                                                             u4120 3CA6  
                                                             u2370 2C2E  
                                                             u3250 2038  
                                                             u2460 2D04  
                                                             u3500 2A86  
                                                             u2700 3020  
                                                             u3180 214E  
                                                             u4300 3FAA  
                                                             u3270 1B24  
                                                             u3190 1F52  
                                                             u4320 3FEE  
                                                             u4080 3B9E  
                                                             u2705 3014  
                                                             u3450 29FC  
                                                             u3610 1CB8  
                                                             u2580 2DBE  
                                                             u2740 30B2  
                                                             u3540 1C04  
                                                             u3620 1CEE  
                                                             u2900 1AAC  
                                                             u4430 255C  
                                                             u2840 1C62  
                                                             u3625 1CE2  
                                                             u4361 236A  
                                                             u3490 2A60  
                                                             u2690 2EA4  
                                                             u3810 1958  
                                                             u4290 3F8A  
                                                             u4507 1868  
                                                             u2780 3116  
                                                             u3660 1D4E  
                                                             u2940 18E0  
                                                             u4517 1880  
                                                             u2790 3136  
                                                             u4527 18A8  
                                                             u4537 1692  
                                                             u3817 194E  
                                                             u4457 22F2  
                                                             u3770 2272  
                                                             u3690 1A1C  
                                                             u2970 1830  
                                                             u3850 367C  
                                                             u4467 232E  
                                                             u4477 235A  
                                                             u2990 17FA  
                                                             u3950 38DE  
                                                             u4487 2544  
                                                             u3960 392C  
                                                             u4497 16AE  
                                                             u2997 17F0  
                                                             u3990 3984  
                                                     __CFG_PWRT$ON 000000  
                                                     _start_engine 1658  
                                                      main@message 0080  
                                                             _main 22C2  
                                                             fsr0h 000FEA  
                                                             indf0 000FEF  
                                                             fsr2h 000FDA  
                                                             fsr0l 000FE9  
                                                             indf2 000FDF  
                                                             fsr2l 000FD9  
                                                             prodh 000FF4  
                                                             prodl 000FF3  
                                                             start 0002  
                                                  ___fldiv@new_exp 0039  
                                                     ___param_bank 000000  
                                                            ??_R_D 0001  
                                                            ??_R_I 0001  
                                                    ___fltol@sign1 0039  
                                                  __end_of___fladd 2E0A  
                                                            ?_main 0001  
                                                  __end_of___fldiv 2AC6  
                                                  __end_of___awdiv 1CAA  
                                                  __end_of___flneg 173C  
                                                            STR_10 7F7F  
                                                  __end_of___awmod 1AEC  
                                                  __end_of___flmul 318C  
                                                  __end_of___flsub 17C4  
                                                  __end_of___fltol 1D7E  
                                                  __end_of___lldiv 1B7C  
                                                  ___awdiv@divisor 0009  
                                                  __end_of___llmod 1A68  
                                                  __end_of___lwdiv 1918  
                                                  __end_of___lwmod 1860  
                                                  ___awdiv@counter 000B  
                                                            _PORTA 000F80  
                                                            _PORTB 000F81  
                                                            _PORTC 000F82  
                                                            _PORTD 000F83  
                                                            _TRISA 000F92  
                                                            _TRISB 000F93  
                                                            _TRISC 000F94  
                                                            _TRISD 000F95  
                                                  __end_of_dpowers 7F59  
                                                            _scale 318C  
                                                  __end_of_isdigit 16DE  
                                                            tablat 000FF5  
                                                            status 000FD8  
                                                  __end_of_sprintf 4000  
                                                  __initialization 166C  
                                                     __end_of_main 2562  
                                             print_message_onLCD@i 000A  
                                                           ??_main 0074  
                                                    __activetblptr 000002  
                                             __size_of__tdiv_to_l_ 0116  
                                                    get_temp@ac_in 0045  
                                                           _ADCON0 000FC2  
                                                           _ADCON1 000FC1  
                                                 ___llmod@dividend 0001  
                                                           ?_scale 0028  
                                                           _ADRESH 000FC4  
                                                           _ADRESL 000FC3  
                                                 ___awdiv@dividend 0007  
                                              _turn_off_everything 1662  
                                                 __end_of___xxtofl 22C2  
                                      print_message_onLCD@LCD_line 0009  
                                                 __end_of__powers_ 7EFD  
                                                 __end_of_get_temp 1F44  
                                                           ___flge 1D7E  
                                                           ___fleq 1B7C  
                                                        ??___fladd 003D  
                                                           ___wmul 16DE  
                                                        ??___fldiv 0030  
                                                        ??___awdiv 000B  
                                                        ??___flneg 0005  
                                             ?_turn_off_everything 0001  
                                                        ??___awmod 0005  
                                                        ??___flmul 0017  
                                                        ??___flsub 004D  
                                                        ??___fltol 0035  
                                                        ??___lldiv 0009  
                                                        ??___llmod 0009  
                                                        ??___lwdiv 000A  
                                                 __end_of_init_LCD 18B8  
                                                        ??___lwmod 0005  
                                                           _fround 2562  
                                                           clear_0 1672  
                                                 ___awdiv@quotient 000D  
                                                  ___awmod@divisor 0003  
                                                  ___awmod@counter 0005  
                                                           main@in 0099  
                                                           _strlen 17C4  
                                             __size_of_get_voltage 0070  
                                                        ??_isdigit 0001  
                                                     __mediumconst 7EC8  
                                                           tblptrh 000FF7  
                                                           tblptrl 000FF6  
                                                           tblptru 000FF8  
                                                        ??_sprintf 0055  
                                                       ___flge@ff1 0001  
                                                       ___flge@ff2 0005  
                                                     ___xxtofl@arg 000B  
                                                     ___xxtofl@exp 000A  
                                                     ___xxtofl@val 0001  
                                                       ___fleq@ff1 0001  
                                                       ___fleq@ff2 0005  
                                                       __accesstop 0080  
                                          __end_of__initialization 1678  
                                                       ___flneg@f1 0001  
                                                    ___rparam_used 000001  
                                                       ___fltol@f1 0031  
                                                   __pcstackCOMRAM 0001  
                                            ??_turn_off_everything 0001  
                                                    __end_of_scale 359C  
                                                       __div_to_l_ 1F44  
                                                  __div_to_l_@exp1 000E  
                                                  __div_to_l_@cntr 000D  
                                      __end_of_print_message_onLCD 1984  
                                                          ??_scale 002C  
                                                  __div_to_l_@quot 0009  
                                                     sprintf@width 006B  
                                                       __pbssBANK0 00A4  
                                                    __div_to_l_@f1 0001  
                                                    __div_to_l_@f2 0005  
                                                          ?___flge 0001  
                                                          ?___fleq 0001  
                                                          ?___wmul 0001  
                                                          ?_fround 0028  
                                                          R_D@dato 0001  
                                                          ?_strlen 0001  
                                                          R_I@dato 0001  
                                          __size_of_light_the_bulb 000A  
                                                        ?___xxtofl 0001  
                                                          _GO_DONE 007E12  
                                                        ?_get_temp 0045  
                                                        ?_init_LCD 0001  
                                                __end_of__npowers_ 7F31  
                                                          __Hparam 0000  
                                                          __Lparam 0000  
                                                  __size_of___flge 00E0  
                                                  __size_of___fleq 0096  
                                                          ___fladd 2AC6  
                                                          ___fldiv 2806  
                                                          ___awdiv 1C12  
                                                          ___flneg 1708  
                                                          ___awmod 1A68  
                                                          ___flmul 2E0A  
                                                          ___flsub 177A  
                                                          ___fltol 1CAA  
                                                          ___lldiv 1AEC  
                                                  __size_of___wmul 002A  
                                                          ___llmod 19F4  
                                                          ___lwdiv 18B8  
                                                       _fround$836 0030  
                                                       _fround$837 002C  
                                                          ___lwmod 1810  
                                                          __pcinit 166C  
                                                  __size_of_fround 02A4  
                                                          __ramtop 0600  
                                                          __ptext0 22C2  
                                                          __ptext1 1662  
                                                          __ptext2 1658  
                                                          __ptext3 359C  
                                                          __ptext4 318C  
                                                          __ptext5 1A68  
                                                          __ptext6 1C12  
                                                          __ptext7 16BA  
                                                          __ptext8 2562  
                                                          __ptext9 1810  
                                                  __size_of_strlen 004C  
                                                      ?__div_to_l_ 0001  
                                                     __size_of_R_D 001C  
                                                     __size_of_R_I 001C  
                                                          _dpowers 7F31  
                                                          _isdigit 16BA  
                                                       ??___xxtofl 0005  
                                                 ___awmod@dividend 0001  
                                                          _sprintf 359C  
                                                       ??_get_temp 0049  
                                             end_of_initialization 1678  
                                                       ??_init_LCD 0002  
                                                    __Lmediumconst 7EC8  
                                          __size_of_initial_config 003E  
                                                  ___lldiv@divisor 0005  
                                                  ___lldiv@counter 000D  
                                                          postinc0 000FEE  
                                                          postinc2 000FDE  
                                                   __tdiv_to_l_@f1 0001  
                                                   __tdiv_to_l_@f2 0005  
                                                          strlen@s 0001  
                                                    ??__tdiv_to_l_ 0009  
                                                      ___fladd@grs 0044  
                                                    ___xxtofl@sign 0009  
                                                      ___fldiv@grs 003B  
                                                      ___fldiv@rem 0034  
                                                      ___flmul@grs 001C  
                                              __size_of__div_to_l_ 010C  
                                                   __end_of___flge 1E5E  
                                                   __end_of___fleq 1C12  
                                                    ??_get_voltage 0045  
                                                   __end_of___wmul 1708  
                                                   __end_of_fround 2806  
                                                   _light_the_bulb 1644  
                                                   __end_of_strlen 1810  
                                              start_initialization 166C  
                                                      __end_of_R_D 16BA  
                                                      __end_of_R_I 169E  
                                              __end_of__tdiv_to_l_ 2166  
                                                    ?_start_engine 0001  
                                                  ___llmod@divisor 0005  
                                      __end_of_turn_off_everything 166C  
                                                  ___llmod@counter 0009  
                                                         ??___flge 0009  
                                                         ??___fleq 0009  
                                                         ??___wmul 0005  
                                                         ??_fround 002C  
                                           __end_of_light_the_bulb 164E  
                                                    sprintf@tmpval 0063  
                                                         ??_strlen 0003  
                                                        ___fladd@a 0039  
                                                        ___fladd@b 0035  
                                                       fround@prec 0034  
                                                        ___fldiv@a 002C  
                                                        ___fldiv@b 0028  
                                                        ___flmul@a 0013  
                                                        ___flmul@b 000F  
                                              __end_of_get_voltage 19F4  
                                                        ___flsub@a 0049  
                                                        ___flsub@b 0045  
                                                    __pcstackBANK0 0080  
                                                __size_of___xxtofl 015C  
                                                   ??_start_engine 0001  
                                                __size_of_get_temp 00E6  
                                                      sprintf@flag 0069  
                                                      sprintf@eexp 0067  
                                                      sprintf@fval 006D  
                                                   _initial_config 173C  
                                                      sprintf@prec 0071  
                                                __size_of_init_LCD 0058  
                                     __size_of_print_message_onLCD 006C  
                                       print_message_onLCD@message 0005  
                                                 ___lwdiv@dividend 0006  
                                                    __pmediumconst 7EC8  
                                                         ?___fladd 0035  
                                                         ?___fldiv 0028  
                                                         ?___awdiv 0007  
                                                         ?___flneg 0001  
                                                         ?___awmod 0001  
                                                         ?___flmul 000F  
                                                         ?___flsub 0045  
                                                         ?___fltol 0031  
                                                         ?___lldiv 0001  
                                                         ?___llmod 0001  
                                                        __npowers_ 7EFD  
                                                         ?___lwdiv 0006  
                                                         ?___lwmod 0001  
                                                  ?_light_the_bulb 0001  
                                                      __tdiv_to_l_ 2050  
                                                     ??__div_to_l_ 0009  
                                                         ?_isdigit 0001  
                                                        _scale$838 002C  
                                                 ___lwdiv@quotient 000A  
                                                         ?_sprintf 004D  
                                                   __size_of_scale 0410  
                                           __end_of_initial_config 177A  
                                                   ___wmul@product 0005  
                                               __end_of__div_to_l_ 2050  
                                                        main@F2155 00A4  
                                                      _get_voltage 1984  
                                                ___wmul@multiplier 0001  
                                                        main@canal 00A3  
                                                        get_temp@r 0049  
                                                  ?_initial_config 0001  
                                                         __Hrparam 0000  
                                                         __Lrparam 0000  
                                                 __size_of___fladd 0344  
                                                 __size_of___fldiv 02C0  
                                                 __size_of___awdiv 0098  
                                                 __size_of___flneg 0034  
                                                 __size_of___awmod 0084  
                                                 __size_of___flmul 0382  
                                                 __size_of___flsub 004A  
                                                 __size_of___fltol 00D4  
                                                 __size_of___lldiv 0090  
                                             __end_of_start_engine 1662  
                                                 __size_of___llmod 0074  
                                                 __size_of___lwdiv 0060  
                                                 __size_of___lwmod 0050  
                                                      _isdigit$655 0002  
                                                       sprintf@val 005F  
                                                         ___xxtofl 2166  
                                                 __size_of_isdigit 0024  
                                                         _main$115 0094  
                                                         _main$128 0096  
                                                  ___lwdiv@divisor 0008  
                                                  ___lwdiv@counter 000C  
                                                         __ptext10 18B8  
                                                         __ptext11 2050  
                                                         __ptext20 1B7C  
                                                         __ptext12 1F44  
                                                         __ptext21 1918  
                                                         __ptext13 16DE  
                                                         __ptext30 1E5E  
                                                         __ptext22 17C4  
                                                         __ptext14 19F4  
                                                         __ptext31 2166  
                                                         __ptext23 169E  
                                                         __ptext15 1AEC  
                                                         __ptext32 2E0A  
                                                         __ptext24 164E  
                                                         __ptext16 1CAA  
                                                         __ptext33 2806  
                                                         __ptext25 1644  
                                                         __ptext17 177A  
                                                         __ptext34 2AC6  
                                                         __ptext26 173C  
                                                         __ptext18 1708  
                                                         __ptext27 1860  
                                                         __ptext19 1D7E  
                                                         __ptext28 1682  
                                                         __ptext29 1984  
                                                         __powers_ 7EC9  
                                                         _get_temp 1E5E  
                                                 __size_of_sprintf 0A64  
                                                         _init_LCD 1860  
                                                    __size_of_main 02A0  
                                                         main@line 0098  
                                                         main@temp 009F  
                                                         main@volt 009B  
                                              _print_message_onLCD 1918  
                                                         isdigit@c 0003  
                                                         scale@scl 0030  
                                                        sprintf@ap 005D  
                                                 __tdiv_to_l_@exp1 0011  
                                                        sprintf@sp 004D  
                                                 __tdiv_to_l_@cntr 0010  
                                                 __tdiv_to_l_@quot 000C  
                                                 ___lwmod@dividend 0001  
                                                 ___lldiv@dividend 0001  
                                             ?_print_message_onLCD 0005  
                                                 ??_light_the_bulb 0001  
                                     __size_of_turn_off_everything 000A  
                                                     ?__tdiv_to_l_ 0001  
                                                         sprintf@c 0073  
                                                         sprintf@f 004F  
                                                 get_voltage@ac_in 0041  
                                                 ___lldiv@quotient 0009  
                                                  ___lwmod@divisor 0003  
                                                         strlen@cp 0003  
                                                  ___lwmod@counter 0005  
                                                    ___fladd@signs 0041  
                                                     ___fladd@aexp 0042  
                                                     ___fladd@bexp 0043  
                                            ??_print_message_onLCD 0007  
                                            __size_of_start_engine 000A  
                          __end_of_light_the_bulb_and_start_engine 1658  
                         __size_of_light_the_bulb_and_start_engine 000A  
                                ??_light_the_bulb_and_start_engine 0001  
                                 ?_light_the_bulb_and_start_engine 0001  
                                  _light_the_bulb_and_start_engine 164E  
