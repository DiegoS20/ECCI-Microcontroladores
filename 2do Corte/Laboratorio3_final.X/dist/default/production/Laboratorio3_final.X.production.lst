

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Apr 11 15:10:56 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    54  0000                     
    55                           ; Version 2.05
    56                           ; Generated 20/12/2018 GMT
    57                           ; 
    58                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F452 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     
    90                           	psect	idataBANK0
    91  002C92                     __pidataBANK0:
    92                           	opt callstack 0
    93                           
    94                           ;initializer for _first_execution
    95  002C92  01                 	db	1
    96                           
    97                           	psect	mediumconst
    98  007E00                     __pmediumconst:
    99                           	opt callstack 0
   100  007E00  00                 	db	0
   101  007E01                     __powers_:
   102                           	opt callstack 0
   103  007E01  0000               	dw	0
   104  007E03  3F80               	dw	16256
   105  007E05  0000               	dw	0
   106  007E07  4120               	dw	16672
   107  007E09  0000               	dw	0
   108  007E0B  42C8               	dw	17096
   109  007E0D  0000               	dw	0
   110  007E0F  447A               	dw	17530
   111  007E11  4000               	dw	16384
   112  007E13  461C               	dw	17948
   113  007E15  5000               	dw	20480
   114  007E17  47C3               	dw	18371
   115  007E19  2400               	dw	9216
   116  007E1B  4974               	dw	18804
   117  007E1D  9680               	dw	38528
   118  007E1F  4B18               	dw	19224
   119  007E21  BC20               	dw	48160
   120  007E23  4CBE               	dw	19646
   121  007E25  6B28               	dw	27432
   122  007E27  4E6E               	dw	20078
   123  007E29  02F9               	dw	761
   124  007E2B  5015               	dw	20501
   125  007E2D  78EC               	dw	30956
   126  007E2F  60AD               	dw	24749
   127  007E31  F2CA               	dw	62154
   128  007E33  7149               	dw	29001
   129  007E35                     __end_of__powers_:
   130                           	opt callstack 0
   131  007E35                     __npowers_:
   132                           	opt callstack 0
   133  007E35  0000               	dw	0
   134  007E37  3F80               	dw	16256
   135  007E39  CCCD               	dw	52429
   136  007E3B  3DCC               	dw	15820
   137  007E3D  D70A               	dw	55050
   138  007E3F  3C23               	dw	15395
   139  007E41  126F               	dw	4719
   140  007E43  3A83               	dw	14979
   141  007E45  B717               	dw	46871
   142  007E47  38D1               	dw	14545
   143  007E49  C5AC               	dw	50604
   144  007E4B  3727               	dw	14119
   145  007E4D  37BD               	dw	14269
   146  007E4F  3586               	dw	13702
   147  007E51  BF95               	dw	49045
   148  007E53  33D6               	dw	13270
   149  007E55  CC77               	dw	52343
   150  007E57  322B               	dw	12843
   151  007E59  705F               	dw	28767
   152  007E5B  3089               	dw	12425
   153  007E5D  E6FF               	dw	59135
   154  007E5F  2EDB               	dw	11995
   155  007E61  E508               	dw	58632
   156  007E63  1E3C               	dw	7740
   157  007E65  4260               	dw	16992
   158  007E67  0DA2               	dw	3490
   159  007E69                     __end_of__npowers_:
   160                           	opt callstack 0
   161  007E69                     _dpowers:
   162                           	opt callstack 0
   163  007E69  0001               	dw	1
   164  007E6B  0000               	dw	0
   165  007E6D  000A               	dw	10
   166  007E6F  0000               	dw	0
   167  007E71  0064               	dw	100
   168  007E73  0000               	dw	0
   169  007E75  03E8               	dw	1000
   170  007E77  0000               	dw	0
   171  007E79  2710               	dw	10000
   172  007E7B  0000               	dw	0
   173  007E7D  86A0               	dw	34464
   174  007E7F  0001               	dw	1
   175  007E81  4240               	dw	16960
   176  007E83  000F               	dw	15
   177  007E85  9680               	dw	38528
   178  007E87  0098               	dw	152
   179  007E89  E100               	dw	57600
   180  007E8B  05F5               	dw	1525
   181  007E8D  CA00               	dw	51712
   182  007E8F  3B9A               	dw	15258
   183  007E91                     __end_of_dpowers:
   184                           	opt callstack 0
   185  0000                     _TXREG	set	4013
   186  0000                     _TXSTAbits	set	4012
   187  0000                     _RCREG	set	4014
   188  0000                     _PIR1bits	set	3998
   189  0000                     _RCSTA	set	4011
   190  0000                     _TXSTA	set	4012
   191  0000                     _IPR1	set	3999
   192  0000                     _PIR1	set	3998
   193  0000                     _PIE1	set	3997
   194  0000                     _SPBRG	set	4015
   195  0000                     _RCONbits	set	4048
   196  0000                     _INTCON	set	4082
   197  0000                     _PORTD	set	3971
   198  0000                     _PORTC	set	3970
   199  0000                     _PORTB	set	3969
   200  0000                     _PORTA	set	3968
   201  0000                     _LATD	set	3980
   202  0000                     _LATC	set	3979
   203  0000                     _LATB	set	3978
   204  0000                     _LATA	set	3977
   205  0000                     _ADCON1	set	4033
   206  0000                     _TRISD	set	3989
   207  0000                     _TRISC	set	3988
   208  0000                     _TRISB	set	3987
   209  0000                     _TRISA	set	3986
   210  0000                     _ADRESL	set	4035
   211  0000                     _ADRESH	set	4036
   212  0000                     _ADCON0	set	4034
   213  0000                     _LC4	set	31836
   214  0000                     _LC3	set	31835
   215  0000                     _GO_DONE	set	32274
   216  007E91                     STR_10:
   217  007E91  50                 	db	80	;'P'
   218  007E92  45                 	db	69	;'E'
   219  007E93  4C                 	db	76	;'L'
   220  007E94  49                 	db	73	;'I'
   221  007E95  47                 	db	71	;'G'
   222  007E96  52                 	db	82	;'R'
   223  007E97  4F                 	db	79	;'O'
   224  007E98  3A                 	db	58	;':'
   225  007E99  20                 	db	32
   226  007E9A  52                 	db	82	;'R'
   227  007E9B  49                 	db	73	;'I'
   228  007E9C  45                 	db	69	;'E'
   229  007E9D  53                 	db	83	;'S'
   230  007E9E  47                 	db	71	;'G'
   231  007E9F  4F                 	db	79	;'O'
   232  007EA0  20                 	db	32
   233  007EA1  44                 	db	68	;'D'
   234  007EA2  45                 	db	69	;'E'
   235  007EA3  20                 	db	32
   236  007EA4  44                 	db	68	;'D'
   237  007EA5  45                 	db	69	;'E'
   238  007EA6  53                 	db	83	;'S'
   239  007EA7  54                 	db	84	;'T'
   240  007EA8  52                 	db	82	;'R'
   241  007EA9  55                 	db	85	;'U'
   242  007EAA  43                 	db	67	;'C'
   243  007EAB  43                 	db	67	;'C'
   244  007EAC  49                 	db	73	;'I'
   245  007EAD  4F                 	db	79	;'O'
   246  007EAE  4E                 	db	78	;'N'
   247  007EAF  0D                 	db	13
   248  007EB0  0A                 	db	10
   249  007EB1  00                 	db	0
   250  007EB2                     STR_19:
   251  007EB2  74                 	db	116	;'t'
   252  007EB3  20                 	db	32
   253  007EB4  2D                 	db	45
   254  007EB5  20                 	db	32
   255  007EB6  43                 	db	67	;'C'
   256  007EB7  6F                 	db	111	;'o'
   257  007EB8  6E                 	db	110	;'n'
   258  007EB9  6F                 	db	111	;'o'
   259  007EBA  63                 	db	99	;'c'
   260  007EBB  65                 	db	101	;'e'
   261  007EBC  72                 	db	114	;'r'
   262  007EBD  20                 	db	32
   263  007EBE  74                 	db	116	;'t'
   264  007EBF  65                 	db	101	;'e'
   265  007EC0  6D                 	db	109	;'m'
   266  007EC1  70                 	db	112	;'p'
   267  007EC2  65                 	db	101	;'e'
   268  007EC3  72                 	db	114	;'r'
   269  007EC4  61                 	db	97	;'a'
   270  007EC5  74                 	db	116	;'t'
   271  007EC6  75                 	db	117	;'u'
   272  007EC7  72                 	db	114	;'r'
   273  007EC8  61                 	db	97	;'a'
   274  007EC9  0D                 	db	13
   275  007ECA  0A                 	db	10
   276  007ECB  00                 	db	0
   277  007ECC                     STR_7:
   278  007ECC  50                 	db	80	;'P'
   279  007ECD  45                 	db	69	;'E'
   280  007ECE  4C                 	db	76	;'L'
   281  007ECF  49                 	db	73	;'I'
   282  007ED0  47                 	db	71	;'G'
   283  007ED1  52                 	db	82	;'R'
   284  007ED2  4F                 	db	79	;'O'
   285  007ED3  3A                 	db	58	;':'
   286  007ED4  20                 	db	32
   287  007ED5  41                 	db	65	;'A'
   288  007ED6  4C                 	db	76	;'L'
   289  007ED7  54                 	db	84	;'T'
   290  007ED8  4F                 	db	79	;'O'
   291  007ED9  20                 	db	32
   292  007EDA  56                 	db	86	;'V'
   293  007EDB  4F                 	db	79	;'O'
   294  007EDC  4C                 	db	76	;'L'
   295  007EDD  54                 	db	84	;'T'
   296  007EDE  41                 	db	65	;'A'
   297  007EDF  4A                 	db	74	;'J'
   298  007EE0  45                 	db	69	;'E'
   299  007EE1  0D                 	db	13
   300  007EE2  0A                 	db	10
   301  007EE3  00                 	db	0
   302  007EE4                     STR_13:
   303  007EE4  50                 	db	80	;'P'
   304  007EE5  45                 	db	69	;'E'
   305  007EE6  4C                 	db	76	;'L'
   306  007EE7  49                 	db	73	;'I'
   307  007EE8  47                 	db	71	;'G'
   308  007EE9  52                 	db	82	;'R'
   309  007EEA  4F                 	db	79	;'O'
   310  007EEB  3A                 	db	58	;':'
   311  007EEC  20                 	db	32
   312  007EED  4C                 	db	76	;'L'
   313  007EEE  4C                 	db	76	;'L'
   314  007EEF  45                 	db	69	;'E'
   315  007EF0  47                 	db	71	;'G'
   316  007EF1  4F                 	db	79	;'O'
   317  007EF2  20                 	db	32
   318  007EF3  45                 	db	69	;'E'
   319  007EF4  4C                 	db	76	;'L'
   320  007EF5  20                 	db	32
   321  007EF6  46                 	db	70	;'F'
   322  007EF7  49                 	db	73	;'I'
   323  007EF8  4E                 	db	78	;'N'
   324  007EF9  0D                 	db	13
   325  007EFA  0A                 	db	10
   326  007EFB  00                 	db	0
   327  007EFC                     STR_20:
   328  007EFC  76                 	db	118	;'v'
   329  007EFD  20                 	db	32
   330  007EFE  2D                 	db	45
   331  007EFF  20                 	db	32
   332  007F00  43                 	db	67	;'C'
   333  007F01  6F                 	db	111	;'o'
   334  007F02  6E                 	db	110	;'n'
   335  007F03  6F                 	db	111	;'o'
   336  007F04  63                 	db	99	;'c'
   337  007F05  65                 	db	101	;'e'
   338  007F06  72                 	db	114	;'r'
   339  007F07  20                 	db	32
   340  007F08  76                 	db	118	;'v'
   341  007F09  6F                 	db	111	;'o'
   342  007F0A  6C                 	db	108	;'l'
   343  007F0B  74                 	db	116	;'t'
   344  007F0C  61                 	db	97	;'a'
   345  007F0D  6A                 	db	106	;'j'
   346  007F0E  65                 	db	101	;'e'
   347  007F0F  0D                 	db	13
   348  007F10  0A                 	db	10
   349  007F11  00                 	db	0
   350  007F12                     STR_15:
   351  007F12  54                 	db	84	;'T'
   352  007F13  65                 	db	101	;'e'
   353  007F14  6D                 	db	109	;'m'
   354  007F15  70                 	db	112	;'p'
   355  007F16  65                 	db	101	;'e'
   356  007F17  72                 	db	114	;'r'
   357  007F18  61                 	db	97	;'a'
   358  007F19  74                 	db	116	;'t'
   359  007F1A  75                 	db	117	;'u'
   360  007F1B  72                 	db	114	;'r'
   361  007F1C  61                 	db	97	;'a'
   362  007F1D  3A                 	db	58	;':'
   363  007F1E  20                 	db	32
   364  007F1F  25                 	db	37
   365  007F20  2E                 	db	46
   366  007F21  30                 	db	48	;'0'
   367  007F22  66                 	db	102	;'f'
   368  007F23  43                 	db	67	;'C'
   369  007F24  0D                 	db	13
   370  007F25  0A                 	db	10
   371  007F26  00                 	db	0
   372  007F27                     STR_4:
   373  007F27  54                 	db	84	;'T'
   374  007F28  65                 	db	101	;'e'
   375  007F29  6D                 	db	109	;'m'
   376  007F2A  70                 	db	112	;'p'
   377  007F2B  3A                 	db	58	;':'
   378  007F2C  20                 	db	32
   379  007F2D  25                 	db	37
   380  007F2E  2E                 	db	46
   381  007F2F  30                 	db	48	;'0'
   382  007F30  66                 	db	102	;'f'
   383  007F31  43                 	db	67	;'C'
   384  007F32  20                 	db	32
   385  007F33  20                 	db	32
   386  007F34  20                 	db	32
   387  007F35  20                 	db	32
   388  007F36  20                 	db	32
   389  007F37  20                 	db	32
   390  007F38  20                 	db	32
   391  007F39  00                 	db	0
   392  007F3A                     STR_3:
   393  007F3A  56                 	db	86	;'V'
   394  007F3B  6F                 	db	111	;'o'
   395  007F3C  6C                 	db	108	;'l'
   396  007F3D  74                 	db	116	;'t'
   397  007F3E  61                 	db	97	;'a'
   398  007F3F  6A                 	db	106	;'j'
   399  007F40  65                 	db	101	;'e'
   400  007F41  3A                 	db	58	;':'
   401  007F42  20                 	db	32
   402  007F43  25                 	db	37
   403  007F44  30                 	db	48	;'0'
   404  007F45  2E                 	db	46
   405  007F46  32                 	db	50	;'2'
   406  007F47  66                 	db	102	;'f'
   407  007F48  56                 	db	86	;'V'
   408  007F49  20                 	db	32
   409  007F4A  20                 	db	32
   410  007F4B  20                 	db	32
   411  007F4C  00                 	db	0
   412  007F4D                     STR_17:
   413  007F4D  4F                 	db	79	;'O'
   414  007F4E  70                 	db	112	;'p'
   415  007F4F  63                 	db	99	;'c'
   416  007F50  69                 	db	105	;'i'
   417  007F51  6F                 	db	111	;'o'
   418  007F52  6E                 	db	110	;'n'
   419  007F53  20                 	db	32
   420  007F54  69                 	db	105	;'i'
   421  007F55  6E                 	db	110	;'n'
   422  007F56  76                 	db	118	;'v'
   423  007F57  61                 	db	97	;'a'
   424  007F58  6C                 	db	108	;'l'
   425  007F59  69                 	db	105	;'i'
   426  007F5A  64                 	db	100	;'d'
   427  007F5B  61                 	db	97	;'a'
   428  007F5C  0D                 	db	13
   429  007F5D  0A                 	db	10
   430  007F5E  00                 	db	0
   431  007F5F                     STR_14:
   432  007F5F  56                 	db	86	;'V'
   433  007F60  6F                 	db	111	;'o'
   434  007F61  6C                 	db	108	;'l'
   435  007F62  74                 	db	116	;'t'
   436  007F63  61                 	db	97	;'a'
   437  007F64  6A                 	db	106	;'j'
   438  007F65  65                 	db	101	;'e'
   439  007F66  3A                 	db	58	;':'
   440  007F67  20                 	db	32
   441  007F68  25                 	db	37
   442  007F69  2E                 	db	46
   443  007F6A  32                 	db	50	;'2'
   444  007F6B  66                 	db	102	;'f'
   445  007F6C  56                 	db	86	;'V'
   446  007F6D  0D                 	db	13
   447  007F6E  0A                 	db	10
   448  007F6F  00                 	db	0
   449  007F70                     STR_12:
   450  007F70  20                 	db	32
   451  007F71  20                 	db	32
   452  007F72  20                 	db	32
   453  007F73  20                 	db	32
   454  007F74  20                 	db	32
   455  007F75  45                 	db	69	;'E'
   456  007F76  4C                 	db	76	;'L'
   457  007F77  20                 	db	32
   458  007F78  46                 	db	70	;'F'
   459  007F79  49                 	db	73	;'I'
   460  007F7A  4E                 	db	78	;'N'
   461  007F7B  20                 	db	32
   462  007F7C  20                 	db	32
   463  007F7D  20                 	db	32
   464  007F7E  20                 	db	32
   465  007F7F  20                 	db	32
   466  007F80  00                 	db	0
   467  007F81                     STR_8:
   468  007F81  20                 	db	32
   469  007F82  20                 	db	32
   470  007F83  20                 	db	32
   471  007F84  20                 	db	32
   472  007F85  20                 	db	32
   473  007F86  52                 	db	82	;'R'
   474  007F87  49                 	db	73	;'I'
   475  007F88  45                 	db	69	;'E'
   476  007F89  53                 	db	83	;'S'
   477  007F8A  47                 	db	71	;'G'
   478  007F8B  4F                 	db	79	;'O'
   479  007F8C  20                 	db	32
   480  007F8D  20                 	db	32
   481  007F8E  20                 	db	32
   482  007F8F  20                 	db	32
   483  007F90  20                 	db	32
   484  007F91  00                 	db	0
   485  007F92                     STR_6:
   486  007F92  20                 	db	32
   487  007F93  20                 	db	32
   488  007F94  41                 	db	65	;'A'
   489  007F95  4C                 	db	76	;'L'
   490  007F96  54                 	db	84	;'T'
   491  007F97  4F                 	db	79	;'O'
   492  007F98  20                 	db	32
   493  007F99  56                 	db	86	;'V'
   494  007F9A  4F                 	db	79	;'O'
   495  007F9B  4C                 	db	76	;'L'
   496  007F9C  54                 	db	84	;'T'
   497  007F9D  41                 	db	65	;'A'
   498  007F9E  4A                 	db	74	;'J'
   499  007F9F  45                 	db	69	;'E'
   500  007FA0  20                 	db	32
   501  007FA1  20                 	db	32
   502  007FA2  00                 	db	0
   503  007FA3                     STR_9:
   504  007FA3  20                 	db	32
   505  007FA4  44                 	db	68	;'D'
   506  007FA5  45                 	db	69	;'E'
   507  007FA6  20                 	db	32
   508  007FA7  44                 	db	68	;'D'
   509  007FA8  45                 	db	69	;'E'
   510  007FA9  53                 	db	83	;'S'
   511  007FAA  54                 	db	84	;'T'
   512  007FAB  52                 	db	82	;'R'
   513  007FAC  55                 	db	85	;'U'
   514  007FAD  43                 	db	67	;'C'
   515  007FAE  43                 	db	67	;'C'
   516  007FAF  49                 	db	73	;'I'
   517  007FB0  4F                 	db	79	;'O'
   518  007FB1  4E                 	db	78	;'N'
   519  007FB2  20                 	db	32
   520  007FB3  00                 	db	0
   521  007FB4                     STR_11:
   522  007FB4  20                 	db	32
   523  007FB5  20                 	db	32
   524  007FB6  20                 	db	32
   525  007FB7  20                 	db	32
   526  007FB8  20                 	db	32
   527  007FB9  4C                 	db	76	;'L'
   528  007FBA  4C                 	db	76	;'L'
   529  007FBB  45                 	db	69	;'E'
   530  007FBC  47                 	db	71	;'G'
   531  007FBD  4F                 	db	79	;'O'
   532  007FBE  20                 	db	32
   533  007FBF  20                 	db	32
   534  007FC0  20                 	db	32
   535  007FC1  20                 	db	32
   536  007FC2  20                 	db	32
   537  007FC3  00                 	db	0
   538  007FC4                     STR_5:
   539  007FC4  20                 	db	32
   540  007FC5  20                 	db	32
   541  007FC6  20                 	db	32
   542  007FC7  20                 	db	32
   543  007FC8  50                 	db	80	;'P'
   544  007FC9  45                 	db	69	;'E'
   545  007FCA  4C                 	db	76	;'L'
   546  007FCB  49                 	db	73	;'I'
   547  007FCC  47                 	db	71	;'G'
   548  007FCD  52                 	db	82	;'R'
   549  007FCE  4F                 	db	79	;'O'
   550  007FCF  20                 	db	32
   551  007FD0  20                 	db	32
   552  007FD1  20                 	db	32
   553  007FD2  00                 	db	0
   554  007FD3                     STR_2:
   555  007FD3  44                 	db	68	;'D'
   556  007FD4  69                 	db	105	;'i'
   557  007FD5  65                 	db	101	;'e'
   558  007FD6  67                 	db	103	;'g'
   559  007FD7  6F                 	db	111	;'o'
   560  007FD8  20                 	db	32
   561  007FD9  2D                 	db	45
   562  007FDA  20                 	db	32
   563  007FDB  38                 	db	56	;'8'
   564  007FDC  34                 	db	52	;'4'
   565  007FDD  30                 	db	48	;'0'
   566  007FDE  31                 	db	49	;'1'
   567  007FDF  30                 	db	48	;'0'
   568  007FE0  00                 	db	0
   569  007FE1                     STR_1:
   570  007FE1  43                 	db	67	;'C'
   571  007FE2  4F                 	db	79	;'O'
   572  007FE3  4E                 	db	78	;'N'
   573  007FE4  56                 	db	86	;'V'
   574  007FE5  45                 	db	69	;'E'
   575  007FE6  52                 	db	82	;'R'
   576  007FE7  53                 	db	83	;'S'
   577  007FE8  4F                 	db	79	;'O'
   578  007FE9  52                 	db	82	;'R'
   579  007FEA  20                 	db	32
   580  007FEB  41                 	db	65	;'A'
   581  007FEC  44                 	db	68	;'D'
   582  007FED  43                 	db	67	;'C'
   583  007FEE  00                 	db	0
   584  007FEF                     STR_18:
   585  007FEF  50                 	db	80	;'P'
   586  007FF0  72                 	db	114	;'r'
   587  007FF1  65                 	db	101	;'e'
   588  007FF2  73                 	db	115	;'s'
   589  007FF3  69                 	db	105	;'i'
   590  007FF4  6F                 	db	111	;'o'
   591  007FF5  6E                 	db	110	;'n'
   592  007FF6  61                 	db	97	;'a'
   593  007FF7  3A                 	db	58	;':'
   594  007FF8  0D                 	db	13
   595  007FF9  0A                 	db	10
   596  007FFA  00                 	db	0
   597  007FFB                     STR_16:
   598  007FFB  0A                 	db	10
   599  007FFC  0A                 	db	10
   600  007FFD  00                 	db	0
   601  0000                     
   602                           ; #config settings
   603  007FFE  00                 	db	0	; dummy byte at the end
   604  0000                     
   605                           	psect	cinit
   606  002B52                     __pcinit:
   607                           	opt callstack 0
   608  002B52                     start_initialization:
   609                           	opt callstack 0
   610  002B52                     __initialization:
   611                           	opt callstack 0
   612                           
   613                           ; Initialize objects allocated to BANK0 (1 bytes)
   614                           ; load TBLPTR registers with __pidataBANK0
   615  002B52  0E92               	movlw	low __pidataBANK0
   616  002B54  6EF6               	movwf	tblptrl,c
   617  002B56  0E2C               	movlw	high __pidataBANK0
   618  002B58  6EF7               	movwf	tblptrh,c
   619  002B5A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   620  002B5C  6EF8               	movwf	tblptru,c
   621  002B5E  0009               	tblrd		*+	;fetch initializer
   622  002B60  CFF5 F0F1          	movff	tablat,__pdataBANK0
   623                           
   624                           ; Clear objects allocated to BANK1 (50 bytes)
   625  002B64  EE01  F000         	lfsr	0,__pbssBANK1
   626  002B68  0E32               	movlw	50
   627  002B6A                     clear_0:
   628  002B6A  6AEE               	clrf	postinc0,c
   629  002B6C  06E8               	decf	wreg,f,c
   630  002B6E  E1FD               	bnz	clear_0
   631                           
   632                           ; Clear objects allocated to BANK0 (32 bytes)
   633  002B70  EE00  F0D1         	lfsr	0,__pbssBANK0
   634  002B74  0E20               	movlw	32
   635  002B76                     clear_1:
   636  002B76  6AEE               	clrf	postinc0,c
   637  002B78  06E8               	decf	wreg,f,c
   638  002B7A  E1FD               	bnz	clear_1
   639  002B7C                     end_of_initialization:
   640                           	opt callstack 0
   641  002B7C                     __end_of__initialization:
   642                           	opt callstack 0
   643  002B7C  9076               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   644  002B7E  9276               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   645  002B80  0E00               	movlw	low (__Lmediumconst shr (0+16))
   646  002B82  6EF8               	movwf	tblptru,c
   647  002B84  0100               	movlb	0
   648  002B86  EF43  F005         	goto	_main	;jump to C main() function
   649                           
   650                           	psect	bssBANK0
   651  0000D1                     __pbssBANK0:
   652                           	opt callstack 0
   653  0000D1                     	ds	20
   654  0000E5                     _temp:
   655                           	opt callstack 0
   656  0000E5                     	ds	4
   657  0000E9                     _volt:
   658                           	opt callstack 0
   659  0000E9                     	ds	4
   660  0000ED                     _w_alert_sent:
   661                           	opt callstack 0
   662  0000ED                     	ds	1
   663  0000EE                     _alert_sent:
   664                           	opt callstack 0
   665  0000EE                     	ds	1
   666  0000EF                     _send_alert:
   667                           	opt callstack 0
   668  0000EF                     	ds	1
   669  0000F0                     _data_received:
   670                           	opt callstack 0
   671  0000F0                     	ds	1
   672                           
   673                           	psect	dataBANK0
   674  0000F1                     __pdataBANK0:
   675                           	opt callstack 0
   676  0000F1                     _first_execution:
   677                           	opt callstack 0
   678  0000F1                     	ds	1
   679                           
   680                           	psect	bssBANK1
   681  000100                     __pbssBANK1:
   682                           	opt callstack 0
   683  000100                     _message_alert:
   684                           	opt callstack 0
   685  000100                     	ds	50
   686                           
   687                           	psect	cstackBANK0
   688  000080                     __pcstackBANK0:
   689                           	opt callstack 0
   690  000080                     main@_volt:
   691                           	opt callstack 0
   692                           
   693                           ; 25 bytes @ 0x0
   694  000080                     	ds	25
   695  000099                     main@_temp:
   696                           	opt callstack 0
   697                           
   698                           ; 25 bytes @ 0x19
   699  000099                     	ds	25
   700  0000B2                     main@message:
   701                           	opt callstack 0
   702                           
   703                           ; 20 bytes @ 0x32
   704  0000B2                     	ds	20
   705  0000C6                     _main$308:
   706                           	opt callstack 0
   707                           
   708                           ; 2 bytes @ 0x46
   709  0000C6                     	ds	2
   710  0000C8                     _main$327:
   711                           	opt callstack 0
   712                           
   713                           ; 2 bytes @ 0x48
   714  0000C8                     	ds	2
   715  0000CA                     main@line:
   716                           	opt callstack 0
   717                           
   718                           ; 1 bytes @ 0x4A
   719  0000CA                     	ds	1
   720  0000CB                     _main$316:
   721                           	opt callstack 0
   722                           
   723                           ; 1 bytes @ 0x4B
   724  0000CB                     	ds	1
   725  0000CC                     _main$320:
   726                           	opt callstack 0
   727                           
   728                           ; 1 bytes @ 0x4C
   729  0000CC                     	ds	1
   730  0000CD                     _main$324:
   731                           	opt callstack 0
   732                           
   733                           ; 1 bytes @ 0x4D
   734  0000CD                     	ds	1
   735  0000CE                     main@in:
   736                           	opt callstack 0
   737                           
   738                           ; 2 bytes @ 0x4E
   739  0000CE                     	ds	2
   740  0000D0                     main@canal:
   741                           	opt callstack 0
   742                           
   743                           ; 1 bytes @ 0x50
   744  0000D0                     	ds	1
   745                           
   746                           	psect	cstackCOMRAM
   747  000001                     __pcstackCOMRAM:
   748                           	opt callstack 0
   749  000001                     ??_isdigit:
   750  000001                     ?_strlen:
   751                           	opt callstack 0
   752  000001                     ?___wmul:
   753                           	opt callstack 0
   754  000001                     ?___awmod:
   755                           	opt callstack 0
   756  000001                     ?___lwmod:
   757                           	opt callstack 0
   758  000001                     ?__tdiv_to_l_:
   759                           	opt callstack 0
   760  000001                     ?__div_to_l_:
   761                           	opt callstack 0
   762  000001                     ?___lldiv:
   763                           	opt callstack 0
   764  000001                     ?___flneg:
   765                           	opt callstack 0
   766  000001                     ?___llmod:
   767                           	opt callstack 0
   768  000001                     ?___xxtofl:
   769                           	opt callstack 0
   770  000001                     R_I@dato:
   771                           	opt callstack 0
   772  000001                     R_D@dato:
   773                           	opt callstack 0
   774  000001                     ___wmul@multiplier:
   775                           	opt callstack 0
   776  000001                     ___awmod@dividend:
   777                           	opt callstack 0
   778  000001                     ___lwmod@dividend:
   779                           	opt callstack 0
   780  000001                     strlen@s:
   781                           	opt callstack 0
   782  000001                     ___lldiv@dividend:
   783                           	opt callstack 0
   784  000001                     __div_to_l_@f1:
   785                           	opt callstack 0
   786  000001                     ___fleq@ff1:
   787                           	opt callstack 0
   788  000001                     ___flge@ff1:
   789                           	opt callstack 0
   790  000001                     ___flneg@f1:
   791                           	opt callstack 0
   792  000001                     __tdiv_to_l_@f1:
   793                           	opt callstack 0
   794  000001                     ___llmod@dividend:
   795                           	opt callstack 0
   796  000001                     ___xxtofl@val:
   797                           	opt callstack 0
   798                           
   799                           ; 4 bytes @ 0x0
   800  000001                     	ds	1
   801  000002                     ??_init_LCD:
   802  000002                     _isdigit$897:
   803                           	opt callstack 0
   804                           
   805                           ; 1 bytes @ 0x1
   806  000002                     	ds	1
   807  000003                     isdigit@c:
   808                           	opt callstack 0
   809  000003                     ___wmul@multiplicand:
   810                           	opt callstack 0
   811  000003                     ___awmod@divisor:
   812                           	opt callstack 0
   813  000003                     ___lwmod@divisor:
   814                           	opt callstack 0
   815  000003                     strlen@cp:
   816                           	opt callstack 0
   817                           
   818                           ; 2 bytes @ 0x2
   819  000003                     	ds	2
   820  000005                     ??___xxtofl:
   821  000005                     ___awmod@counter:
   822                           	opt callstack 0
   823  000005                     ___lwmod@counter:
   824                           	opt callstack 0
   825  000005                     print_message_onLCD@message:
   826                           	opt callstack 0
   827  000005                     transmit@response:
   828                           	opt callstack 0
   829  000005                     ___wmul@product:
   830                           	opt callstack 0
   831  000005                     ___lldiv@divisor:
   832                           	opt callstack 0
   833  000005                     __div_to_l_@f2:
   834                           	opt callstack 0
   835  000005                     ___fleq@ff2:
   836                           	opt callstack 0
   837  000005                     ___flge@ff2:
   838                           	opt callstack 0
   839  000005                     __tdiv_to_l_@f2:
   840                           	opt callstack 0
   841  000005                     ___llmod@divisor:
   842                           	opt callstack 0
   843                           
   844                           ; 4 bytes @ 0x4
   845  000005                     	ds	1
   846  000006                     ?___lwdiv:
   847                           	opt callstack 0
   848  000006                     ___awmod@sign:
   849                           	opt callstack 0
   850  000006                     ___lwdiv@dividend:
   851                           	opt callstack 0
   852                           
   853                           ; 2 bytes @ 0x5
   854  000006                     	ds	1
   855  000007                     ??_transmit:
   856  000007                     ?___awdiv:
   857                           	opt callstack 0
   858  000007                     print_message_onLCD@place:
   859                           	opt callstack 0
   860  000007                     ___awdiv@dividend:
   861                           	opt callstack 0
   862                           
   863                           ; 2 bytes @ 0x6
   864  000007                     	ds	1
   865  000008                     ??_print_message_onLCD:
   866  000008                     ___lwdiv@divisor:
   867                           	opt callstack 0
   868                           
   869                           ; 2 bytes @ 0x7
   870  000008                     	ds	1
   871  000009                     ??__tdiv_to_l_:
   872  000009                     ??___fleq:
   873  000009                     ??___flge:
   874  000009                     transmit@i:
   875                           	opt callstack 0
   876  000009                     ___llmod@counter:
   877                           	opt callstack 0
   878  000009                     ___xxtofl@sign:
   879                           	opt callstack 0
   880  000009                     ___awdiv@divisor:
   881                           	opt callstack 0
   882  000009                     ___lldiv@quotient:
   883                           	opt callstack 0
   884  000009                     __div_to_l_@quot:
   885                           	opt callstack 0
   886                           
   887                           ; 4 bytes @ 0x8
   888  000009                     	ds	1
   889  00000A                     print_message_onLCD@i:
   890                           	opt callstack 0
   891  00000A                     ___xxtofl@exp:
   892                           	opt callstack 0
   893  00000A                     ___lwdiv@quotient:
   894                           	opt callstack 0
   895                           
   896                           ; 2 bytes @ 0x9
   897  00000A                     	ds	1
   898  00000B                     ___awdiv@counter:
   899                           	opt callstack 0
   900  00000B                     ___xxtofl@arg:
   901                           	opt callstack 0
   902                           
   903                           ; 4 bytes @ 0xA
   904  00000B                     	ds	1
   905  00000C                     ___awdiv@sign:
   906                           	opt callstack 0
   907  00000C                     ___lwdiv@counter:
   908                           	opt callstack 0
   909  00000C                     __tdiv_to_l_@quot:
   910                           	opt callstack 0
   911                           
   912                           ; 4 bytes @ 0xB
   913  00000C                     	ds	1
   914  00000D                     ___lldiv@counter:
   915                           	opt callstack 0
   916  00000D                     __div_to_l_@cntr:
   917                           	opt callstack 0
   918  00000D                     ___awdiv@quotient:
   919                           	opt callstack 0
   920                           
   921                           ; 2 bytes @ 0xC
   922  00000D                     	ds	1
   923  00000E                     __div_to_l_@exp1:
   924                           	opt callstack 0
   925                           
   926                           ; 1 bytes @ 0xD
   927  00000E                     	ds	1
   928  00000F                     ?___flmul:
   929                           	opt callstack 0
   930  00000F                     ___flmul@b:
   931                           	opt callstack 0
   932                           
   933                           ; 4 bytes @ 0xE
   934  00000F                     	ds	1
   935  000010                     __tdiv_to_l_@cntr:
   936                           	opt callstack 0
   937                           
   938                           ; 1 bytes @ 0xF
   939  000010                     	ds	1
   940  000011                     __tdiv_to_l_@exp1:
   941                           	opt callstack 0
   942                           
   943                           ; 1 bytes @ 0x10
   944  000011                     	ds	2
   945  000013                     ___flmul@a:
   946                           	opt callstack 0
   947                           
   948                           ; 4 bytes @ 0x12
   949  000013                     	ds	4
   950  000017                     ??___flmul:
   951                           
   952                           ; 1 bytes @ 0x16
   953  000017                     	ds	4
   954  00001B                     ___flmul@sign:
   955                           	opt callstack 0
   956                           
   957                           ; 1 bytes @ 0x1A
   958  00001B                     	ds	1
   959  00001C                     ___flmul@grs:
   960                           	opt callstack 0
   961                           
   962                           ; 4 bytes @ 0x1B
   963  00001C                     	ds	4
   964  000020                     ___flmul@aexp:
   965                           	opt callstack 0
   966                           
   967                           ; 1 bytes @ 0x1F
   968  000020                     	ds	1
   969  000021                     ___flmul@bexp:
   970                           	opt callstack 0
   971                           
   972                           ; 1 bytes @ 0x20
   973  000021                     	ds	1
   974  000022                     ___flmul@prod:
   975                           	opt callstack 0
   976                           
   977                           ; 4 bytes @ 0x21
   978  000022                     	ds	4
   979  000026                     ___flmul@temp:
   980                           	opt callstack 0
   981                           
   982                           ; 2 bytes @ 0x25
   983  000026                     	ds	2
   984  000028                     ?___fldiv:
   985                           	opt callstack 0
   986  000028                     ?_fround:
   987                           	opt callstack 0
   988  000028                     ?_scale:
   989                           	opt callstack 0
   990  000028                     ___fldiv@b:
   991                           	opt callstack 0
   992                           
   993                           ; 4 bytes @ 0x27
   994  000028                     	ds	4
   995  00002C                     ___fldiv@a:
   996                           	opt callstack 0
   997  00002C                     _fround$1082:
   998                           	opt callstack 0
   999  00002C                     _scale$1083:
  1000                           	opt callstack 0
  1001                           
  1002                           ; 4 bytes @ 0x2B
  1003  00002C                     	ds	4
  1004  000030                     ??___fldiv:
  1005  000030                     scale@scl:
  1006                           	opt callstack 0
  1007  000030                     _fround$1081:
  1008                           	opt callstack 0
  1009                           
  1010                           ; 4 bytes @ 0x2F
  1011  000030                     	ds	1
  1012  000031                     ?___fltol:
  1013                           	opt callstack 0
  1014  000031                     ___fltol@f1:
  1015                           	opt callstack 0
  1016                           
  1017                           ; 4 bytes @ 0x30
  1018  000031                     	ds	3
  1019  000034                     fround@prec:
  1020                           	opt callstack 0
  1021  000034                     ___fldiv@rem:
  1022                           	opt callstack 0
  1023                           
  1024                           ; 4 bytes @ 0x33
  1025  000034                     	ds	1
  1026  000035                     ??___fltol:
  1027  000035                     ?___fladd:
  1028                           	opt callstack 0
  1029  000035                     ___fladd@b:
  1030                           	opt callstack 0
  1031                           
  1032                           ; 4 bytes @ 0x34
  1033  000035                     	ds	3
  1034  000038                     ___fldiv@sign:
  1035                           	opt callstack 0
  1036                           
  1037                           ; 1 bytes @ 0x37
  1038  000038                     	ds	1
  1039  000039                     ___fltol@sign1:
  1040                           	opt callstack 0
  1041  000039                     ___fldiv@new_exp:
  1042                           	opt callstack 0
  1043  000039                     ___fladd@a:
  1044                           	opt callstack 0
  1045                           
  1046                           ; 4 bytes @ 0x38
  1047  000039                     	ds	1
  1048  00003A                     ___fltol@exp1:
  1049                           	opt callstack 0
  1050                           
  1051                           ; 1 bytes @ 0x39
  1052  00003A                     	ds	1
  1053  00003B                     ___fldiv@grs:
  1054                           	opt callstack 0
  1055                           
  1056                           ; 4 bytes @ 0x3A
  1057  00003B                     	ds	2
  1058  00003D                     ??___fladd:
  1059                           
  1060                           ; 1 bytes @ 0x3C
  1061  00003D                     	ds	2
  1062  00003F                     ___fldiv@bexp:
  1063                           	opt callstack 0
  1064                           
  1065                           ; 1 bytes @ 0x3E
  1066  00003F                     	ds	1
  1067  000040                     ___fldiv@aexp:
  1068                           	opt callstack 0
  1069                           
  1070                           ; 1 bytes @ 0x3F
  1071  000040                     	ds	1
  1072  000041                     ?_get_voltage:
  1073                           	opt callstack 0
  1074  000041                     ___fladd@signs:
  1075                           	opt callstack 0
  1076  000041                     get_voltage@ac_in:
  1077                           	opt callstack 0
  1078                           
  1079                           ; 2 bytes @ 0x40
  1080  000041                     	ds	1
  1081  000042                     ___fladd@aexp:
  1082                           	opt callstack 0
  1083                           
  1084                           ; 1 bytes @ 0x41
  1085  000042                     	ds	1
  1086  000043                     ___fladd@bexp:
  1087                           	opt callstack 0
  1088                           
  1089                           ; 1 bytes @ 0x42
  1090  000043                     	ds	1
  1091  000044                     ___fladd@grs:
  1092                           	opt callstack 0
  1093                           
  1094                           ; 1 bytes @ 0x43
  1095  000044                     	ds	1
  1096  000045                     ?_get_temp:
  1097                           	opt callstack 0
  1098  000045                     ?___flsub:
  1099                           	opt callstack 0
  1100  000045                     get_temp@ac_in:
  1101                           	opt callstack 0
  1102  000045                     ___flsub@b:
  1103                           	opt callstack 0
  1104                           
  1105                           ; 4 bytes @ 0x44
  1106  000045                     	ds	4
  1107  000049                     get_temp@r:
  1108                           	opt callstack 0
  1109  000049                     ___flsub@a:
  1110                           	opt callstack 0
  1111                           
  1112                           ; 4 bytes @ 0x48
  1113  000049                     	ds	4
  1114  00004D                     ?_sprintf:
  1115                           	opt callstack 0
  1116  00004D                     sprintf@sp:
  1117                           	opt callstack 0
  1118                           
  1119                           ; 2 bytes @ 0x4C
  1120  00004D                     	ds	2
  1121  00004F                     sprintf@f:
  1122                           	opt callstack 0
  1123                           
  1124                           ; 2 bytes @ 0x4E
  1125  00004F                     	ds	6
  1126  000055                     ??_sprintf:
  1127                           
  1128                           ; 1 bytes @ 0x54
  1129  000055                     	ds	4
  1130  000059                     _sprintf$1084:
  1131                           	opt callstack 0
  1132                           
  1133                           ; 4 bytes @ 0x58
  1134  000059                     	ds	4
  1135  00005D                     sprintf@ap:
  1136                           	opt callstack 0
  1137                           
  1138                           ; 2 bytes @ 0x5C
  1139  00005D                     	ds	2
  1140  00005F                     sprintf@val:
  1141                           	opt callstack 0
  1142                           
  1143                           ; 4 bytes @ 0x5E
  1144  00005F                     	ds	4
  1145  000063                     sprintf@tmpval:
  1146                           	opt callstack 0
  1147                           
  1148                           ; 4 bytes @ 0x62
  1149  000063                     	ds	4
  1150  000067                     sprintf@eexp:
  1151                           	opt callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x66
  1154  000067                     	ds	2
  1155  000069                     sprintf@flag:
  1156                           	opt callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x68
  1159  000069                     	ds	2
  1160  00006B                     sprintf@width:
  1161                           	opt callstack 0
  1162                           
  1163                           ; 2 bytes @ 0x6A
  1164  00006B                     	ds	2
  1165  00006D                     sprintf@fval:
  1166                           	opt callstack 0
  1167                           
  1168                           ; 4 bytes @ 0x6C
  1169  00006D                     	ds	4
  1170  000071                     sprintf@prec:
  1171                           	opt callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x70
  1174  000071                     	ds	2
  1175  000073                     sprintf@c:
  1176                           	opt callstack 0
  1177                           
  1178                           ; 1 bytes @ 0x72
  1179  000073                     	ds	1
  1180  000074                     ??_main:
  1181                           
  1182                           ; 1 bytes @ 0x73
  1183  000074                     	ds	2
  1184                           
  1185 ;;
  1186 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1187 ;;
  1188 ;; *************** function _main *****************
  1189 ;; Defined at:
  1190 ;;		line 46 in file "main.c"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;		None
  1193 ;; Auto vars:     Size  Location     Type
  1194 ;;  _temp          25   25[BANK0 ] unsigned char [25]
  1195 ;;  _volt          25    0[BANK0 ] unsigned char [25]
  1196 ;;  line            1   74[BANK0 ] unsigned char 
  1197 ;;  message        20   50[BANK0 ] unsigned char [20]
  1198 ;;  in              2   78[BANK0 ] unsigned int 
  1199 ;;  canal           1   80[BANK0 ] unsigned char 
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  1    wreg      void 
  1202 ;; Registers used:
  1203 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1209 ;;      Params:         0       0       0       0       0       0       0
  1210 ;;      Locals:         0      81       0       0       0       0       0
  1211 ;;      Temps:          2       0       0       0       0       0       0
  1212 ;;      Totals:         2      81       0       0       0       0       0
  1213 ;;Total ram usage:       83 bytes
  1214 ;; Hardware stack levels required when called:    4
  1215 ;; This function calls:
  1216 ;;		_R_I
  1217 ;;		___flge
  1218 ;;		_get_temp
  1219 ;;		_get_voltage
  1220 ;;		_init_LCD
  1221 ;;		_initial_config
  1222 ;;		_light_the_bulb
  1223 ;;		_light_the_bulb_and_start_engine
  1224 ;;		_print_message_onLCD
  1225 ;;		_serial_transmi_init_config
  1226 ;;		_sprintf
  1227 ;;		_start_engine
  1228 ;;		_transmit
  1229 ;;		_turn_off_everything
  1230 ;; This function is called by:
  1231 ;;		Startup code after reset
  1232 ;; This function uses a non-reentrant model
  1233 ;;
  1234                           
  1235                           	psect	text0
  1236  000A86                     __ptext0:
  1237                           	opt callstack 0
  1238  000A86                     _main:
  1239                           	opt callstack 0
  1240  000A86  FFFF               	dw	65535	; assembler added errata NOP
  1241                           
  1242                           ;main.c: 47: initial_config();
  1243                           
  1244                           ;incstack = 0
  1245  000A88  EC8A  F015         	call	_initial_config	;wreg free
  1246                           
  1247                           ;main.c: 48: serial_transmi_init_config();
  1248  000A8C  EC06  F016         	call	_serial_transmi_init_config	;wreg free
  1249                           
  1250                           ;main.c: 49: init_LCD();
  1251  000A90  ECEB  F014         	call	_init_LCD	;wreg free
  1252                           
  1253                           ;main.c: 50: print_message_onLCD("CONVERSOR ADC", 128);
  1254  000A94  0EE1               	movlw	low STR_1
  1255  000A96  6E05               	movwf	print_message_onLCD@message,c
  1256  000A98  0E7F               	movlw	high STR_1
  1257  000A9A  6E06               	movwf	print_message_onLCD@message+1,c
  1258  000A9C  0E80               	movlw	128
  1259  000A9E  6E07               	movwf	print_message_onLCD@place,c
  1260  000AA0  EC17  F014         	call	_print_message_onLCD	;wreg free
  1261                           
  1262                           ;main.c: 51: print_message_onLCD("Diego - 84010", 192);
  1263  000AA4  0ED3               	movlw	low STR_2
  1264  000AA6  6E05               	movwf	print_message_onLCD@message,c
  1265  000AA8  0E7F               	movlw	high STR_2
  1266  000AAA  6E06               	movwf	print_message_onLCD@message+1,c
  1267  000AAC  0EC0               	movlw	192
  1268  000AAE  6E07               	movwf	print_message_onLCD@place,c
  1269  000AB0  EC17  F014         	call	_print_message_onLCD	;wreg free
  1270                           
  1271                           ;main.c: 52: _delay((unsigned long)((3000)*(4000000/4000.0)));
  1272  000AB4  0E0C               	movlw	12
  1273  000AB6  6E75               	movwf	(??_main+1)& (0+255),c
  1274  000AB8  0E6C               	movlw	108
  1275  000ABA  6E74               	movwf	??_main& (0+255),c
  1276  000ABC  0EF3               	movlw	243
  1277  000ABE                     u4797:
  1278  000ABE  FFFF               	dw	65535	; errata NOP
  1279  000AC0  2EE8               	decfsz	wreg,f,c
  1280  000AC2  D7FD               	bra	u4797
  1281  000AC4  2E74               	decfsz	??_main& (0+255),f,c
  1282  000AC6  D7FB               	bra	u4797
  1283  000AC8  2E75               	decfsz	(??_main+1)& (0+255),f,c
  1284  000ACA  D7F9               	bra	u4797
  1285                           
  1286                           ;main.c: 54: R_I(0X01);
  1287  000ACC  0E01               	movlw	1
  1288  000ACE  EC26  F016         	call	_R_I
  1289                           
  1290                           ;main.c: 56: char canal = 0;
  1291  000AD2  0E00               	movlw	0
  1292  000AD4  0100               	movlb	0	; () banked
  1293  000AD6  FFFF               	dw	65535	; assembler added errata NOP
  1294  000AD8  6FD0               	movwf	main@canal& (0+255),b
  1295                           
  1296                           ; BSR set to: 0
  1297                           ;main.c: 58: ADCON0 = canal ? 0B01001001 : 0B01000001;
  1298  000ADA  51D0               	movf	main@canal& (0+255),w,b
  1299  000ADC  A4D8               	btfss	status,2,c
  1300  000ADE  D004               	goto	l4020
  1301                           
  1302                           ; BSR set to: 0
  1303  000AE0  0E00               	movlw	0
  1304  000AE2  6FC7               	movwf	(_main$308+1)& (0+255),b
  1305  000AE4  0E41               	movlw	65
  1306  000AE6  D004               	goto	L1
  1307  000AE8                     l4020:
  1308  000AE8  FFFF               	dw	65535	; assembler added errata NOP
  1309                           
  1310                           ; BSR set to: 0
  1311  000AEA  0E00               	movlw	0
  1312  000AEC  6FC7               	movwf	(_main$308+1)& (0+255),b
  1313  000AEE  0E49               	movlw	73
  1314  000AF0                     L1:
  1315  000AF0  FFFF               	dw	65535	; assembler added errata NOP
  1316  000AF2  6FC6               	movwf	_main$308& (0+255),b
  1317                           
  1318                           ; BSR set to: 0
  1319  000AF4  C0C6  FFC2         	movff	_main$308,4034	;volatile
  1320                           
  1321                           ; BSR set to: 0
  1322                           ;main.c: 59: _delay((unsigned long)((20)*(4000000/4000000.0)));
  1323  000AF8  0E05               	movlw	5
  1324  000AFA                     u4807:
  1325  000AFA  FFFF               	dw	65535	; errata NOP
  1326  000AFC  2EE8               	decfsz	wreg,f,c
  1327  000AFE  D7FD               	bra	u4807
  1328                           
  1329                           ;main.c: 60: GO_DONE = 1;
  1330  000B00  84C2               	bsf	4034,2,c	;volatile
  1331  000B02                     l118:
  1332  000B02  FFFF               	dw	65535	; assembler added errata NOP
  1333  000B04  B4C2               	btfsc	4034,2,c	;volatile
  1334  000B06  D7FD               	goto	l118
  1335                           
  1336                           ;main.c: 64: unsigned int in = (ADRESH<<8) | ADRESL;
  1337  000B08  50C3               	movf	4035,w,c	;volatile
  1338  000B0A  CFC4 F074          	movff	4036,??_main	;volatile
  1339  000B0E  6A75               	clrf	(??_main+1)& (0+255),c
  1340  000B10  C074  F075         	movff	??_main,??_main+1
  1341  000B14  6A74               	clrf	??_main,c
  1342  000B16  1074               	iorwf	??_main,w,c
  1343  000B18  0100               	movlb	0	; () banked
  1344  000B1A  6FCE               	movwf	main@in& (0+255),b
  1345  000B1C  5075               	movf	??_main+1,w,c
  1346  000B1E  6FCF               	movwf	(main@in+1)& (0+255),b
  1347                           
  1348                           ; BSR set to: 0
  1349                           ;main.c: 65: _delay((unsigned long)((50)*(4000000/4000.0)));
  1350  000B20  0E31               	movlw	49
  1351  000B22  6E74               	movwf	??_main& (0+255),c
  1352  000B24  0EBB               	movlw	187
  1353  000B26                     u4817:
  1354  000B26  FFFF               	dw	65535	; errata NOP
  1355  000B28  2EE8               	decfsz	wreg,f,c
  1356  000B2A  D7FD               	bra	u4817
  1357  000B2C  2E74               	decfsz	??_main& (0+255),f,c
  1358  000B2E  D7FB               	bra	u4817
  1359                           
  1360                           ;main.c: 66: char message[20] = "";
  1361  000B30  EE20  F0B2         	lfsr	2,main@message
  1362  000B34  0E13               	movlw	19
  1363  000B36                     u4571:
  1364  000B36  6ADE               	clrf	postinc2,c
  1365  000B38  06E8               	decf	wreg,f,c
  1366  000B3A  E2FD               	bc	u4571
  1367                           
  1368                           ;main.c: 67: if (!canal) {
  1369  000B3C  0100               	movlb	0	; () banked
  1370  000B3E  51D0               	movf	main@canal& (0+255),w,b
  1371  000B40  A4D8               	btfss	status,2,c
  1372  000B42  D021               	goto	l4040
  1373                           
  1374                           ; BSR set to: 0
  1375                           ;main.c: 68: volt = get_voltage(in);
  1376  000B44  C0CE  F041         	movff	main@in,get_voltage@ac_in
  1377  000B48  C0CF  F042         	movff	main@in+1,get_voltage@ac_in+1
  1378  000B4C  EC50  F014         	call	_get_voltage	;wreg free
  1379  000B50  C041  F0E9         	movff	?_get_voltage,_volt
  1380  000B54  C042  F0EA         	movff	?_get_voltage+1,_volt+1
  1381  000B58  C043  F0EB         	movff	?_get_voltage+2,_volt+2
  1382  000B5C  C044  F0EC         	movff	?_get_voltage+3,_volt+3
  1383                           
  1384                           ;main.c: 69: sprintf(message, "Voltaje: %0.2fV   ", volt);
  1385  000B60  0EB2               	movlw	low main@message
  1386  000B62  6E4D               	movwf	sprintf@sp,c
  1387  000B64  0E00               	movlw	high main@message
  1388  000B66  6E4E               	movwf	sprintf@sp+1,c
  1389  000B68  0E3A               	movlw	low STR_3
  1390  000B6A  6E4F               	movwf	sprintf@f,c
  1391  000B6C  0E7F               	movlw	high STR_3
  1392  000B6E  6E50               	movwf	sprintf@f+1,c
  1393  000B70  C0E9  F051         	movff	_volt,?_sprintf+4
  1394  000B74  C0EA  F052         	movff	_volt+1,?_sprintf+5
  1395  000B78  C0EB  F053         	movff	_volt+2,?_sprintf+6
  1396  000B7C  C0EC  F054         	movff	_volt+3,?_sprintf+7
  1397  000B80  EC11  F000         	call	_sprintf	;wreg free
  1398                           
  1399                           ;main.c: 70: } else {
  1400  000B84  D021               	goto	l4044
  1401  000B86                     l4040:
  1402  000B86  FFFF               	dw	65535	; assembler added errata NOP
  1403                           
  1404                           ; BSR set to: 0
  1405                           ;main.c: 71: temp = get_temp(in);
  1406  000B88  C0CE  F045         	movff	main@in,get_temp@ac_in
  1407  000B8C  C0CF  F046         	movff	main@in+1,get_temp@ac_in+1
  1408  000B90  EC6F  F011         	call	_get_temp	;wreg free
  1409  000B94  C045  F0E5         	movff	?_get_temp,_temp
  1410  000B98  C046  F0E6         	movff	?_get_temp+1,_temp+1
  1411  000B9C  C047  F0E7         	movff	?_get_temp+2,_temp+2
  1412  000BA0  C048  F0E8         	movff	?_get_temp+3,_temp+3
  1413                           
  1414                           ;main.c: 72: sprintf(message, "Temp: %.0fC       ", temp);
  1415  000BA4  0EB2               	movlw	low main@message
  1416  000BA6  6E4D               	movwf	sprintf@sp,c
  1417  000BA8  0E00               	movlw	high main@message
  1418  000BAA  6E4E               	movwf	sprintf@sp+1,c
  1419  000BAC  0E27               	movlw	low STR_4
  1420  000BAE  6E4F               	movwf	sprintf@f,c
  1421  000BB0  0E7F               	movlw	high STR_4
  1422  000BB2  6E50               	movwf	sprintf@f+1,c
  1423  000BB4  C0E5  F051         	movff	_temp,?_sprintf+4
  1424  000BB8  C0E6  F052         	movff	_temp+1,?_sprintf+5
  1425  000BBC  C0E7  F053         	movff	_temp+2,?_sprintf+6
  1426  000BC0  C0E8  F054         	movff	_temp+3,?_sprintf+7
  1427  000BC4  EC11  F000         	call	_sprintf	;wreg free
  1428  000BC8                     l4044:
  1429  000BC8  FFFF               	dw	65535	; assembler added errata NOP
  1430                           
  1431                           ;main.c: 73: };main.c: 75: if (volt > 3.8) {
  1432  000BCA  0E33               	movlw	51
  1433  000BCC  6E01               	movwf	___flge@ff1,c
  1434  000BCE  0E33               	movlw	51
  1435  000BD0  6E02               	movwf	___flge@ff1+1,c
  1436  000BD2  0E73               	movlw	115
  1437  000BD4  6E03               	movwf	___flge@ff1+2,c
  1438  000BD6  0E40               	movlw	64
  1439  000BD8  6E04               	movwf	___flge@ff1+3,c
  1440  000BDA  C0E9  F005         	movff	_volt,___flge@ff2
  1441  000BDE  C0EA  F006         	movff	_volt+1,___flge@ff2+1
  1442  000BE2  C0EB  F007         	movff	_volt+2,___flge@ff2+2
  1443  000BE6  C0EC  F008         	movff	_volt+3,___flge@ff2+3
  1444  000BEA  ECE2  F011         	call	___flge	;wreg free
  1445  000BEE  B0D8               	btfsc	status,0,c
  1446  000BF0  D02E               	goto	l4062
  1447                           
  1448                           ;main.c: 76: print_message_onLCD("    PELIGRO   ", 128);
  1449  000BF2  0EC4               	movlw	low STR_5
  1450  000BF4  6E05               	movwf	print_message_onLCD@message,c
  1451  000BF6  0E7F               	movlw	high STR_5
  1452  000BF8  6E06               	movwf	print_message_onLCD@message+1,c
  1453  000BFA  0E80               	movlw	128
  1454  000BFC  6E07               	movwf	print_message_onLCD@place,c
  1455  000BFE  EC17  F014         	call	_print_message_onLCD	;wreg free
  1456                           
  1457                           ;main.c: 77: print_message_onLCD("  ALTO VOLTAJE  ", 192);
  1458  000C02  0E92               	movlw	low STR_6
  1459  000C04  6E05               	movwf	print_message_onLCD@message,c
  1460  000C06  0E7F               	movlw	high STR_6
  1461  000C08  6E06               	movwf	print_message_onLCD@message+1,c
  1462  000C0A  0EC0               	movlw	192
  1463  000C0C  6E07               	movwf	print_message_onLCD@place,c
  1464  000C0E  EC17  F014         	call	_print_message_onLCD	;wreg free
  1465                           
  1466                           ;main.c: 78: light_the_bulb();
  1467  000C12  EC43  F016         	call	_light_the_bulb	;wreg free
  1468                           
  1469                           ;main.c: 80: send_alert = alert_sent && w_alert_sent == '1' ? 0 : 1;
  1470  000C16  0E01               	movlw	1
  1471  000C18  0100               	movlb	0	; () banked
  1472  000C1A  6FCB               	movwf	_main$316& (0+255),b
  1473                           
  1474                           ; BSR set to: 0
  1475  000C1C  51EE               	movf	_alert_sent& (0+255),w,b
  1476  000C1E  B4D8               	btfsc	status,2,c
  1477  000C20  D006               	goto	l4058
  1478                           
  1479                           ; BSR set to: 0
  1480  000C22  0E31               	movlw	49
  1481  000C24  19ED               	xorwf	_w_alert_sent& (0+255),w,b
  1482  000C26  A4D8               	btfss	status,2,c
  1483  000C28  D002               	goto	l4058
  1484                           
  1485                           ; BSR set to: 0
  1486  000C2A  0E00               	movlw	0
  1487  000C2C  6FCB               	movwf	_main$316& (0+255),b
  1488  000C2E                     l4058:
  1489  000C2E  FFFF               	dw	65535	; assembler added errata NOP
  1490                           
  1491                           ; BSR set to: 0
  1492  000C30  C0CB  F0EF         	movff	_main$316,_send_alert
  1493                           
  1494                           ;main.c: 81: w_alert_sent = '1';
  1495  000C34  0E31               	movlw	49
  1496  000C36  6FED               	movwf	_w_alert_sent& (0+255),b
  1497                           
  1498                           ; BSR set to: 0
  1499                           ;main.c: 82: sprintf(message_alert, "PELIGRO: ALTO VOLTAJE\r\n");
  1500  000C38  0E00               	movlw	low _message_alert
  1501  000C3A  6E4D               	movwf	sprintf@sp,c
  1502  000C3C  0E01               	movlw	high _message_alert
  1503  000C3E  6E4E               	movwf	sprintf@sp+1,c
  1504  000C40  0ECC               	movlw	low STR_7
  1505  000C42  6E4F               	movwf	sprintf@f,c
  1506  000C44  0E7E               	movlw	high STR_7
  1507  000C46  6E50               	movwf	sprintf@f+1,c
  1508  000C48  EC11  F000         	call	_sprintf	;wreg free
  1509                           
  1510                           ;main.c: 83: } else if (volt <= 0.29 && temp >= 61) {
  1511  000C4C  D0BC               	goto	l4118
  1512  000C4E                     l4062:
  1513  000C4E  FFFF               	dw	65535	; assembler added errata NOP
  1514  000C50  0EE1               	movlw	225
  1515  000C52  6E01               	movwf	___flge@ff1,c
  1516  000C54  0E7A               	movlw	122
  1517  000C56  6E02               	movwf	___flge@ff1+1,c
  1518  000C58  0E94               	movlw	148
  1519  000C5A  6E03               	movwf	___flge@ff1+2,c
  1520  000C5C  0E3E               	movlw	62
  1521  000C5E  6E04               	movwf	___flge@ff1+3,c
  1522  000C60  C0E9  F005         	movff	_volt,___flge@ff2
  1523  000C64  C0EA  F006         	movff	_volt+1,___flge@ff2+1
  1524  000C68  C0EB  F007         	movff	_volt+2,___flge@ff2+2
  1525  000C6C  C0EC  F008         	movff	_volt+3,___flge@ff2+3
  1526  000C70  ECE2  F011         	call	___flge	;wreg free
  1527  000C74  A0D8               	btfss	status,0,c
  1528  000C76  D042               	goto	l4082
  1529  000C78  C0E5  F001         	movff	_temp,___flge@ff1
  1530  000C7C  C0E6  F002         	movff	_temp+1,___flge@ff1+1
  1531  000C80  C0E7  F003         	movff	_temp+2,___flge@ff1+2
  1532  000C84  C0E8  F004         	movff	_temp+3,___flge@ff1+3
  1533  000C88  0E00               	movlw	0
  1534  000C8A  6E05               	movwf	___flge@ff2,c
  1535  000C8C  0E00               	movlw	0
  1536  000C8E  6E06               	movwf	___flge@ff2+1,c
  1537  000C90  0E74               	movlw	116
  1538  000C92  6E07               	movwf	___flge@ff2+2,c
  1539  000C94  0E42               	movlw	66
  1540  000C96  6E08               	movwf	___flge@ff2+3,c
  1541  000C98  ECE2  F011         	call	___flge	;wreg free
  1542  000C9C  A0D8               	btfss	status,0,c
  1543  000C9E  D02E               	goto	l4082
  1544                           
  1545                           ;main.c: 84: print_message_onLCD("     RIESGO     ", 128);
  1546  000CA0  0E81               	movlw	low STR_8
  1547  000CA2  6E05               	movwf	print_message_onLCD@message,c
  1548  000CA4  0E7F               	movlw	high STR_8
  1549  000CA6  6E06               	movwf	print_message_onLCD@message+1,c
  1550  000CA8  0E80               	movlw	128
  1551  000CAA  6E07               	movwf	print_message_onLCD@place,c
  1552  000CAC  EC17  F014         	call	_print_message_onLCD	;wreg free
  1553                           
  1554                           ;main.c: 85: print_message_onLCD(" DE DESTRUCCION ", 192);
  1555  000CB0  0EA3               	movlw	low STR_9
  1556  000CB2  6E05               	movwf	print_message_onLCD@message,c
  1557  000CB4  0E7F               	movlw	high STR_9
  1558  000CB6  6E06               	movwf	print_message_onLCD@message+1,c
  1559  000CB8  0EC0               	movlw	192
  1560  000CBA  6E07               	movwf	print_message_onLCD@place,c
  1561  000CBC  EC17  F014         	call	_print_message_onLCD	;wreg free
  1562                           
  1563                           ;main.c: 86: start_engine();
  1564  000CC0  EC39  F016         	call	_start_engine	;wreg free
  1565                           
  1566                           ;main.c: 88: send_alert = alert_sent && w_alert_sent == '2'? 0 : 1;
  1567  000CC4  0E01               	movlw	1
  1568  000CC6  0100               	movlb	0	; () banked
  1569  000CC8  6FCC               	movwf	_main$320& (0+255),b
  1570                           
  1571                           ; BSR set to: 0
  1572  000CCA  51EE               	movf	_alert_sent& (0+255),w,b
  1573  000CCC  B4D8               	btfsc	status,2,c
  1574  000CCE  D006               	goto	l4078
  1575                           
  1576                           ; BSR set to: 0
  1577  000CD0  0E32               	movlw	50
  1578  000CD2  19ED               	xorwf	_w_alert_sent& (0+255),w,b
  1579  000CD4  A4D8               	btfss	status,2,c
  1580  000CD6  D002               	goto	l4078
  1581                           
  1582                           ; BSR set to: 0
  1583  000CD8  0E00               	movlw	0
  1584  000CDA  6FCC               	movwf	_main$320& (0+255),b
  1585  000CDC                     l4078:
  1586  000CDC  FFFF               	dw	65535	; assembler added errata NOP
  1587                           
  1588                           ; BSR set to: 0
  1589  000CDE  C0CC  F0EF         	movff	_main$320,_send_alert
  1590                           
  1591                           ;main.c: 89: w_alert_sent = '2';
  1592  000CE2  0E32               	movlw	50
  1593  000CE4  6FED               	movwf	_w_alert_sent& (0+255),b
  1594                           
  1595                           ; BSR set to: 0
  1596                           ;main.c: 90: sprintf(message_alert, "PELIGRO: RIESGO DE DESTRUCCION\r\n");
  1597  000CE6  0E00               	movlw	low _message_alert
  1598  000CE8  6E4D               	movwf	sprintf@sp,c
  1599  000CEA  0E01               	movlw	high _message_alert
  1600  000CEC  6E4E               	movwf	sprintf@sp+1,c
  1601  000CEE  0E91               	movlw	low STR_10
  1602  000CF0  6E4F               	movwf	sprintf@f,c
  1603  000CF2  0E7E               	movlw	high STR_10
  1604  000CF4  6E50               	movwf	sprintf@f+1,c
  1605  000CF6  EC11  F000         	call	_sprintf	;wreg free
  1606                           
  1607                           ;main.c: 91: } else if (temp < 5) {
  1608  000CFA  D065               	goto	l4118
  1609  000CFC                     l4082:
  1610  000CFC  FFFF               	dw	65535	; assembler added errata NOP
  1611  000CFE  C0E5  F001         	movff	_temp,___flge@ff1
  1612  000D02  C0E6  F002         	movff	_temp+1,___flge@ff1+1
  1613  000D06  C0E7  F003         	movff	_temp+2,___flge@ff1+2
  1614  000D0A  C0E8  F004         	movff	_temp+3,___flge@ff1+3
  1615  000D0E  0E00               	movlw	0
  1616  000D10  6E05               	movwf	___flge@ff2,c
  1617  000D12  0E00               	movlw	0
  1618  000D14  6E06               	movwf	___flge@ff2+1,c
  1619  000D16  0EA0               	movlw	160
  1620  000D18  6E07               	movwf	___flge@ff2+2,c
  1621  000D1A  0E40               	movlw	64
  1622  000D1C  6E08               	movwf	___flge@ff2+3,c
  1623  000D1E  ECE2  F011         	call	___flge	;wreg free
  1624  000D22  B0D8               	btfsc	status,0,c
  1625  000D24  D02E               	goto	l4100
  1626                           
  1627                           ;main.c: 92: print_message_onLCD("     LLEGO     ", 128);
  1628  000D26  0EB4               	movlw	low STR_11
  1629  000D28  6E05               	movwf	print_message_onLCD@message,c
  1630  000D2A  0E7F               	movlw	high STR_11
  1631  000D2C  6E06               	movwf	print_message_onLCD@message+1,c
  1632  000D2E  0E80               	movlw	128
  1633  000D30  6E07               	movwf	print_message_onLCD@place,c
  1634  000D32  EC17  F014         	call	_print_message_onLCD	;wreg free
  1635                           
  1636                           ;main.c: 93: print_message_onLCD("     EL FIN     ", 192);
  1637  000D36  0E70               	movlw	low STR_12
  1638  000D38  6E05               	movwf	print_message_onLCD@message,c
  1639  000D3A  0E7F               	movlw	high STR_12
  1640  000D3C  6E06               	movwf	print_message_onLCD@message+1,c
  1641  000D3E  0EC0               	movlw	192
  1642  000D40  6E07               	movwf	print_message_onLCD@place,c
  1643  000D42  EC17  F014         	call	_print_message_onLCD	;wreg free
  1644                           
  1645                           ;main.c: 94: light_the_bulb_and_start_engine();
  1646  000D46  EC3E  F016         	call	_light_the_bulb_and_start_engine	;wreg free
  1647                           
  1648                           ;main.c: 96: send_alert = (alert_sent && w_alert_sent == '3') ? 0 : 1;
  1649  000D4A  0E01               	movlw	1
  1650  000D4C  0100               	movlb	0	; () banked
  1651  000D4E  6FCD               	movwf	_main$324& (0+255),b
  1652                           
  1653                           ; BSR set to: 0
  1654  000D50  51EE               	movf	_alert_sent& (0+255),w,b
  1655  000D52  B4D8               	btfsc	status,2,c
  1656  000D54  D006               	goto	l4096
  1657                           
  1658                           ; BSR set to: 0
  1659  000D56  0E33               	movlw	51
  1660  000D58  19ED               	xorwf	_w_alert_sent& (0+255),w,b
  1661  000D5A  A4D8               	btfss	status,2,c
  1662  000D5C  D002               	goto	l4096
  1663                           
  1664                           ; BSR set to: 0
  1665  000D5E  0E00               	movlw	0
  1666  000D60  6FCD               	movwf	_main$324& (0+255),b
  1667  000D62                     l4096:
  1668  000D62  FFFF               	dw	65535	; assembler added errata NOP
  1669                           
  1670                           ; BSR set to: 0
  1671  000D64  C0CD  F0EF         	movff	_main$324,_send_alert
  1672                           
  1673                           ;main.c: 97: w_alert_sent = '3';
  1674  000D68  0E33               	movlw	51
  1675  000D6A  6FED               	movwf	_w_alert_sent& (0+255),b
  1676                           
  1677                           ; BSR set to: 0
  1678                           ;main.c: 98: sprintf(message_alert, "PELIGRO: LLEGO EL FIN\r\n");
  1679  000D6C  0E00               	movlw	low _message_alert
  1680  000D6E  6E4D               	movwf	sprintf@sp,c
  1681  000D70  0E01               	movlw	high _message_alert
  1682  000D72  6E4E               	movwf	sprintf@sp+1,c
  1683  000D74  0EE4               	movlw	low STR_13
  1684  000D76  6E4F               	movwf	sprintf@f,c
  1685  000D78  0E7E               	movlw	high STR_13
  1686  000D7A  6E50               	movwf	sprintf@f+1,c
  1687  000D7C  EC11  F000         	call	_sprintf	;wreg free
  1688                           
  1689                           ;main.c: 99: } else {
  1690  000D80  D022               	goto	l4118
  1691  000D82                     l4100:
  1692  000D82  FFFF               	dw	65535	; assembler added errata NOP
  1693                           
  1694                           ;main.c: 100: char line = !canal ? 128 : 192;
  1695  000D84  0100               	movlb	0	; () banked
  1696  000D86  51D0               	movf	main@canal& (0+255),w,b
  1697  000D88  B4D8               	btfsc	status,2,c
  1698  000D8A  D004               	goto	l4104
  1699                           
  1700                           ; BSR set to: 0
  1701  000D8C  0E00               	movlw	0
  1702  000D8E  6FC9               	movwf	(_main$327+1)& (0+255),b
  1703  000D90  0EC0               	movlw	192
  1704  000D92  D004               	goto	L2
  1705  000D94                     l4104:
  1706  000D94  FFFF               	dw	65535	; assembler added errata NOP
  1707                           
  1708                           ; BSR set to: 0
  1709  000D96  0E00               	movlw	0
  1710  000D98  6FC9               	movwf	(_main$327+1)& (0+255),b
  1711  000D9A  0E80               	movlw	128
  1712  000D9C                     L2:
  1713  000D9C  FFFF               	dw	65535	; assembler added errata NOP
  1714  000D9E  6FC8               	movwf	_main$327& (0+255),b
  1715                           
  1716                           ; BSR set to: 0
  1717  000DA0  C0C8  F0CA         	movff	_main$327,main@line
  1718                           
  1719                           ; BSR set to: 0
  1720                           ;main.c: 101: print_message_onLCD(message, line);
  1721  000DA4  0EB2               	movlw	low main@message
  1722  000DA6  6E05               	movwf	print_message_onLCD@message,c
  1723  000DA8  0E00               	movlw	high main@message
  1724  000DAA  6E06               	movwf	print_message_onLCD@message+1,c
  1725  000DAC  C0CA  F007         	movff	main@line,print_message_onLCD@place
  1726  000DB0  EC17  F014         	call	_print_message_onLCD	;wreg free
  1727                           
  1728                           ;main.c: 102: turn_off_everything();
  1729  000DB4  EC34  F016         	call	_turn_off_everything	;wreg free
  1730                           
  1731                           ;main.c: 104: send_alert = 0;
  1732  000DB8  0E00               	movlw	0
  1733  000DBA  0100               	movlb	0	; () banked
  1734  000DBC  6FEF               	movwf	_send_alert& (0+255),b
  1735                           
  1736                           ; BSR set to: 0
  1737                           ;main.c: 105: alert_sent = 0;
  1738  000DBE  0E00               	movlw	0
  1739  000DC0  6FEE               	movwf	_alert_sent& (0+255),b
  1740                           
  1741                           ; BSR set to: 0
  1742                           ;main.c: 106: w_alert_sent = '0';
  1743  000DC2  0E30               	movlw	48
  1744  000DC4  6FED               	movwf	_w_alert_sent& (0+255),b
  1745  000DC6                     l4118:
  1746  000DC6  FFFF               	dw	65535	; assembler added errata NOP
  1747                           
  1748                           ;main.c: 107: };main.c: 109: if (!first_execution) {
  1749  000DC8  0100               	movlb	0	; () banked
  1750  000DCA  51F1               	movf	_first_execution& (0+255),w,b
  1751  000DCC  A4D8               	btfss	status,2,c
  1752  000DCE  D07C               	goto	l4146
  1753                           
  1754                           ; BSR set to: 0
  1755                           ;main.c: 110: char _volt[25];;main.c: 111: char _temp[25];;main.c: 112: sprintf(_volt, "
      +                          Voltaje: %.2fV\r\n", volt);
  1756  000DD0  0E80               	movlw	low main@_volt
  1757  000DD2  6E4D               	movwf	sprintf@sp,c
  1758  000DD4  0E00               	movlw	high main@_volt
  1759  000DD6  6E4E               	movwf	sprintf@sp+1,c
  1760  000DD8  0E5F               	movlw	low STR_14
  1761  000DDA  6E4F               	movwf	sprintf@f,c
  1762  000DDC  0E7F               	movlw	high STR_14
  1763  000DDE  6E50               	movwf	sprintf@f+1,c
  1764  000DE0  C0E9  F051         	movff	_volt,?_sprintf+4
  1765  000DE4  C0EA  F052         	movff	_volt+1,?_sprintf+5
  1766  000DE8  C0EB  F053         	movff	_volt+2,?_sprintf+6
  1767  000DEC  C0EC  F054         	movff	_volt+3,?_sprintf+7
  1768  000DF0  EC11  F000         	call	_sprintf	;wreg free
  1769                           
  1770                           ;main.c: 113: sprintf(_temp, "Temperatura: %.0fC\r\n", temp);
  1771  000DF4  0E99               	movlw	low main@_temp
  1772  000DF6  6E4D               	movwf	sprintf@sp,c
  1773  000DF8  0E00               	movlw	high main@_temp
  1774  000DFA  6E4E               	movwf	sprintf@sp+1,c
  1775  000DFC  0E12               	movlw	low STR_15
  1776  000DFE  6E4F               	movwf	sprintf@f,c
  1777  000E00  0E7F               	movlw	high STR_15
  1778  000E02  6E50               	movwf	sprintf@f+1,c
  1779  000E04  C0E5  F051         	movff	_temp,?_sprintf+4
  1780  000E08  C0E6  F052         	movff	_temp+1,?_sprintf+5
  1781  000E0C  C0E7  F053         	movff	_temp+2,?_sprintf+6
  1782  000E10  C0E8  F054         	movff	_temp+3,?_sprintf+7
  1783  000E14  EC11  F000         	call	_sprintf	;wreg free
  1784                           
  1785                           ;main.c: 115: if (send_alert) {
  1786  000E18  0100               	movlb	0	; () banked
  1787  000E1A  51EF               	movf	_send_alert& (0+255),w,b
  1788  000E1C  B4D8               	btfsc	status,2,c
  1789  000E1E  D01B               	goto	l4128
  1790                           
  1791                           ; BSR set to: 0
  1792                           ;main.c: 116: transmit(message_alert);
  1793  000E20  0E00               	movlw	low _message_alert
  1794  000E22  6E05               	movwf	transmit@response,c
  1795  000E24  0E01               	movlw	high _message_alert
  1796  000E26  6E06               	movwf	transmit@response+1,c
  1797  000E28  EC88  F014         	call	_transmit	;wreg free
  1798                           
  1799                           ;main.c: 117: transmit(_temp);
  1800  000E2C  0E99               	movlw	low main@_temp
  1801  000E2E  6E05               	movwf	transmit@response,c
  1802  000E30  0E00               	movlw	high main@_temp
  1803  000E32  6E06               	movwf	transmit@response+1,c
  1804  000E34  EC88  F014         	call	_transmit	;wreg free
  1805                           
  1806                           ;main.c: 118: transmit(_volt);
  1807  000E38  0E80               	movlw	low main@_volt
  1808  000E3A  6E05               	movwf	transmit@response,c
  1809  000E3C  0E00               	movlw	high main@_volt
  1810  000E3E  6E06               	movwf	transmit@response+1,c
  1811  000E40  EC88  F014         	call	_transmit	;wreg free
  1812                           
  1813                           ;main.c: 120: transmit("\n\n");
  1814  000E44  0EFB               	movlw	low STR_16
  1815  000E46  6E05               	movwf	transmit@response,c
  1816  000E48  0E7F               	movlw	high STR_16
  1817  000E4A  6E06               	movwf	transmit@response+1,c
  1818  000E4C  EC88  F014         	call	_transmit	;wreg free
  1819                           
  1820                           ;main.c: 121: alert_sent = 1;
  1821  000E50  0E01               	movlw	1
  1822  000E52  0100               	movlb	0	; () banked
  1823  000E54  6FEE               	movwf	_alert_sent& (0+255),b
  1824  000E56                     l4128:
  1825  000E56  FFFF               	dw	65535	; assembler added errata NOP
  1826                           
  1827                           ; BSR set to: 0
  1828                           ;main.c: 122: };main.c: 124: if (data_received) {
  1829  000E58  51F0               	movf	_data_received& (0+255),w,b
  1830  000E5A  B4D8               	btfsc	status,2,c
  1831  000E5C  D051               	goto	l4150
  1832                           
  1833                           ; BSR set to: 0
  1834                           ;main.c: 125: if (data_received == 't') {
  1835  000E5E  0E74               	movlw	116
  1836  000E60  19F0               	xorwf	_data_received& (0+255),w,b
  1837  000E62  A4D8               	btfss	status,2,c
  1838  000E64  D007               	goto	l4134
  1839                           
  1840                           ; BSR set to: 0
  1841                           ;main.c: 126: transmit(_temp);
  1842  000E66  0E99               	movlw	low main@_temp
  1843  000E68  6E05               	movwf	transmit@response,c
  1844  000E6A  0E00               	movlw	high main@_temp
  1845  000E6C  6E06               	movwf	transmit@response+1,c
  1846  000E6E  EC88  F014         	call	_transmit	;wreg free
  1847                           
  1848                           ;main.c: 127: } else if (data_received == 'v') {
  1849  000E72  D025               	goto	l4144
  1850  000E74                     l4134:
  1851  000E74  FFFF               	dw	65535	; assembler added errata NOP
  1852                           
  1853                           ; BSR set to: 0
  1854  000E76  0E76               	movlw	118
  1855  000E78  19F0               	xorwf	_data_received& (0+255),w,b
  1856  000E7A  A4D8               	btfss	status,2,c
  1857  000E7C  D007               	goto	l4138
  1858                           
  1859                           ; BSR set to: 0
  1860                           ;main.c: 128: transmit(_volt);
  1861  000E7E  0E80               	movlw	low main@_volt
  1862  000E80  6E05               	movwf	transmit@response,c
  1863  000E82  0E00               	movlw	high main@_volt
  1864  000E84  6E06               	movwf	transmit@response+1,c
  1865  000E86  EC88  F014         	call	_transmit	;wreg free
  1866                           
  1867                           ;main.c: 129: } else if (data_received == 'x') {
  1868  000E8A  D019               	goto	l4144
  1869  000E8C                     l4138:
  1870  000E8C  FFFF               	dw	65535	; assembler added errata NOP
  1871                           
  1872                           ; BSR set to: 0
  1873  000E8E  0E78               	movlw	120
  1874  000E90  19F0               	xorwf	_data_received& (0+255),w,b
  1875  000E92  A4D8               	btfss	status,2,c
  1876  000E94  D00D               	goto	l4142
  1877                           
  1878                           ; BSR set to: 0
  1879                           ;main.c: 130: transmit(_temp);
  1880  000E96  0E99               	movlw	low main@_temp
  1881  000E98  6E05               	movwf	transmit@response,c
  1882  000E9A  0E00               	movlw	high main@_temp
  1883  000E9C  6E06               	movwf	transmit@response+1,c
  1884  000E9E  EC88  F014         	call	_transmit	;wreg free
  1885                           
  1886                           ;main.c: 131: transmit(_volt);
  1887  000EA2  0E80               	movlw	low main@_volt
  1888  000EA4  6E05               	movwf	transmit@response,c
  1889  000EA6  0E00               	movlw	high main@_volt
  1890  000EA8  6E06               	movwf	transmit@response+1,c
  1891  000EAA  EC88  F014         	call	_transmit	;wreg free
  1892                           
  1893                           ;main.c: 132: } else {
  1894  000EAE  D007               	goto	l4144
  1895  000EB0                     l4142:
  1896  000EB0  FFFF               	dw	65535	; assembler added errata NOP
  1897                           
  1898                           ; BSR set to: 0
  1899                           ;main.c: 133: transmit("Opcion invalida\r\n");
  1900  000EB2  0E4D               	movlw	low STR_17
  1901  000EB4  6E05               	movwf	transmit@response,c
  1902  000EB6  0E7F               	movlw	high STR_17
  1903  000EB8  6E06               	movwf	transmit@response+1,c
  1904  000EBA  EC88  F014         	call	_transmit	;wreg free
  1905  000EBE                     l4144:
  1906  000EBE  FFFF               	dw	65535	; assembler added errata NOP
  1907                           
  1908                           ;main.c: 134: };main.c: 135: data_received = 0;
  1909  000EC0  0E00               	movlw	0
  1910  000EC2  0100               	movlb	0	; () banked
  1911  000EC4  6FF0               	movwf	_data_received& (0+255),b
  1912  000EC6  D01C               	goto	l4150
  1913  000EC8                     l4146:
  1914  000EC8  FFFF               	dw	65535	; assembler added errata NOP
  1915                           
  1916                           ; BSR set to: 0
  1917                           ;main.c: 138: transmit("Presiona:\r\n");
  1918  000ECA  0EEF               	movlw	low STR_18
  1919  000ECC  6E05               	movwf	transmit@response,c
  1920  000ECE  0E7F               	movlw	high STR_18
  1921  000ED0  6E06               	movwf	transmit@response+1,c
  1922  000ED2  EC88  F014         	call	_transmit	;wreg free
  1923                           
  1924                           ;main.c: 139: transmit("t - Conocer temperatura\r\n");
  1925  000ED6  0EB2               	movlw	low STR_19
  1926  000ED8  6E05               	movwf	transmit@response,c
  1927  000EDA  0E7E               	movlw	high STR_19
  1928  000EDC  6E06               	movwf	transmit@response+1,c
  1929  000EDE  EC88  F014         	call	_transmit	;wreg free
  1930                           
  1931                           ;main.c: 140: transmit("v - Conocer voltaje\r\n");
  1932  000EE2  0EFC               	movlw	low STR_20
  1933  000EE4  6E05               	movwf	transmit@response,c
  1934  000EE6  0E7E               	movlw	high STR_20
  1935  000EE8  6E06               	movwf	transmit@response+1,c
  1936  000EEA  EC88  F014         	call	_transmit	;wreg free
  1937                           
  1938                           ;main.c: 141: transmit("\n");
  1939  000EEE  0EFC               	movlw	low (STR_16+1)
  1940  000EF0  6E05               	movwf	transmit@response,c
  1941  000EF2  0E7F               	movlw	high (STR_16+1)
  1942  000EF4  6E06               	movwf	transmit@response+1,c
  1943  000EF6  EC88  F014         	call	_transmit	;wreg free
  1944                           
  1945                           ;main.c: 142: first_execution = 0;
  1946  000EFA  0E00               	movlw	0
  1947  000EFC  0100               	movlb	0	; () banked
  1948  000EFE  6FF1               	movwf	_first_execution& (0+255),b
  1949  000F00                     l4150:
  1950  000F00  FFFF               	dw	65535	; assembler added errata NOP
  1951                           
  1952                           ; BSR set to: 0
  1953                           ;main.c: 143: };main.c: 145: _delay((unsigned long)((10)*(4000000/4000.0)));
  1954  000F02  0E0A               	movlw	10
  1955  000F04  6E74               	movwf	??_main& (0+255),c
  1956  000F06  0EBE               	movlw	190
  1957  000F08                     u4827:
  1958  000F08  FFFF               	dw	65535	; errata NOP
  1959  000F0A  2EE8               	decfsz	wreg,f,c
  1960  000F0C  D7FD               	bra	u4827
  1961  000F0E  2E74               	decfsz	??_main& (0+255),f,c
  1962  000F10  D7FB               	bra	u4827
  1963  000F12  D000               	nop2	
  1964                           
  1965                           ;main.c: 146: canal = canal ? 0 : 1;
  1966  000F14  0100               	movlb	0	; () banked
  1967  000F16  51D0               	movf	main@canal& (0+255),w,b
  1968  000F18  A4D8               	btfss	status,2,c
  1969  000F1A  D002               	goto	u4760
  1970  000F1C  0E01               	movlw	1
  1971  000F1E  D5DB               	goto	L3
  1972  000F20                     u4760:
  1973  000F20  FFFF               	dw	65535	; assembler added errata NOP
  1974  000F22  0E00               	movlw	0
  1975  000F24  D5D8               	goto	L3
  1976  000F26                     __end_of_main:
  1977                           	opt callstack 0
  1978                           
  1979 ;; *************** function _turn_off_everything *****************
  1980 ;; Defined at:
  1981 ;;		line 259 in file "main.c"
  1982 ;; Parameters:    Size  Location     Type
  1983 ;;		None
  1984 ;; Auto vars:     Size  Location     Type
  1985 ;;		None
  1986 ;; Return value:  Size  Location     Type
  1987 ;;                  1    wreg      void 
  1988 ;; Registers used:
  1989 ;;		wreg, status,2
  1990 ;; Tracked objects:
  1991 ;;		On entry : 0/0
  1992 ;;		On exit  : 0/0
  1993 ;;		Unchanged: 0/0
  1994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1995 ;;      Params:         0       0       0       0       0       0       0
  1996 ;;      Locals:         0       0       0       0       0       0       0
  1997 ;;      Temps:          0       0       0       0       0       0       0
  1998 ;;      Totals:         0       0       0       0       0       0       0
  1999 ;;Total ram usage:        0 bytes
  2000 ;; Hardware stack levels used:    1
  2001 ;; Hardware stack levels required when called:    1
  2002 ;; This function calls:
  2003 ;;		Nothing
  2004 ;; This function is called by:
  2005 ;;		_main
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009                           	psect	text1
  2010  002C68                     __ptext1:
  2011                           	opt callstack 0
  2012  002C68                     _turn_off_everything:
  2013                           	opt callstack 0
  2014  002C68  FFFF               	dw	65535	; assembler added errata NOP
  2015                           
  2016                           ;main.c: 260: LATB = 0;
  2017                           
  2018                           ; BSR set to: 0
  2019                           ;incstack = 0
  2020  002C6A  0E00               	movlw	0
  2021  002C6C  6E8A               	movwf	3978,c	;volatile
  2022  002C6E  0012               	return		;funcret
  2023  002C70  FFFF               	dw	65535	; errata NOP
  2024  002C72                     __end_of_turn_off_everything:
  2025                           	opt callstack 0
  2026                           
  2027 ;; *************** function _transmit *****************
  2028 ;; Defined at:
  2029 ;;		line 285 in file "main.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;  response        2    4[COMRAM] PTR unsigned char 
  2032 ;;		 -> STR_21(2), STR_20(22), STR_19(26), STR_18(12), 
  2033 ;;		 -> STR_17(18), STR_16(3), main@_temp(25), main@_volt(25), 
  2034 ;;		 -> message_alert(50), 
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;  i               1    8[COMRAM] unsigned char 
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  1    wreg      void 
  2039 ;; Registers used:
  2040 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2046 ;;      Params:         2       0       0       0       0       0       0
  2047 ;;      Locals:         1       0       0       0       0       0       0
  2048 ;;      Temps:          2       0       0       0       0       0       0
  2049 ;;      Totals:         5       0       0       0       0       0       0
  2050 ;;Total ram usage:        5 bytes
  2051 ;; Hardware stack levels used:    1
  2052 ;; Hardware stack levels required when called:    2
  2053 ;; This function calls:
  2054 ;;		_strlen
  2055 ;; This function is called by:
  2056 ;;		_main
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           	psect	text2
  2061  002910                     __ptext2:
  2062                           	opt callstack 0
  2063  002910                     _transmit:
  2064                           	opt callstack 0
  2065  002910  FFFF               	dw	65535	; assembler added errata NOP
  2066                           
  2067                           ;main.c: 286: for (char i = 0; i < strlen(response); i++) {
  2068                           
  2069                           ;incstack = 0
  2070  002912  0E00               	movlw	0
  2071  002914  6E09               	movwf	transmit@i,c
  2072  002916  D01C               	goto	l4002
  2073  002918                     l205:
  2074  002918  FFFF               	dw	65535	; assembler added errata NOP
  2075  00291A  A2AC               	btfss	4012,1,c	;volatile
  2076  00291C  D7FD               	goto	l205
  2077                           
  2078                           ;main.c: 291: TXREG = response[i];
  2079  00291E  5009               	movf	transmit@i,w,c
  2080  002920  2405               	addwf	transmit@response,w,c
  2081  002922  6E07               	movwf	??_transmit& (0+255),c
  2082  002924  0E00               	movlw	0
  2083  002926  2006               	addwfc	transmit@response+1,w,c
  2084  002928  6E08               	movwf	(??_transmit+1)& (0+255),c
  2085  00292A  C007  FFF6         	movff	??_transmit,tblptrl
  2086  00292E  C008  FFF7         	movff	??_transmit+1,tblptrh
  2087  002932  6AF8               	clrf	tblptru,c
  2088  002934  0E05               	movlw	(high __ramtop+-1)
  2089  002936  64F7               	cpfsgt	tblptrh,c
  2090  002938  D004               	bra	u4537
  2091  00293A  0008               	tblrd		*
  2092  00293C  FFFF               	dw	65535	; errata NOP
  2093  00293E  50F5               	movf	tablat,w,c
  2094  002940  D005               	bra	u4530
  2095  002942                     u4537:
  2096  002942  CFF6 FFE9          	movff	tblptrl,fsr0l
  2097  002946  CFF7 FFEA          	movff	tblptrh,fsr0h
  2098  00294A  50EF               	movf	indf0,w,c
  2099  00294C                     u4530:
  2100  00294C  6EAD               	movwf	4013,c	;volatile
  2101  00294E  2A09               	incf	transmit@i,f,c
  2102  002950                     l4002:
  2103  002950  FFFF               	dw	65535	; assembler added errata NOP
  2104  002952  C005  F001         	movff	transmit@response,strlen@s
  2105  002956  C006  F002         	movff	transmit@response+1,strlen@s+1
  2106  00295A  EC3F  F015         	call	_strlen	;wreg free
  2107  00295E  5009               	movf	transmit@i,w,c
  2108  002960  6E07               	movwf	??_transmit& (0+255),c
  2109  002962  6A08               	clrf	(??_transmit+1)& (0+255),c
  2110  002964  5001               	movf	?_strlen,w,c
  2111  002966  5C07               	subwf	??_transmit,w,c
  2112  002968  5002               	movf	?_strlen+1,w,c
  2113  00296A  5808               	subwfb	??_transmit+1,w,c
  2114  00296C  B0D8               	btfsc	status,0,c
  2115  00296E  0012               	return		;funcret
  2116  002970  FFFF               	dw	65535	; assembler added errata NOP
  2117  002972  D7D2               	goto	l205
  2118  002974  FFFF               	dw	65535	; errata NOP
  2119  002976                     __end_of_transmit:
  2120                           	opt callstack 0
  2121                           
  2122 ;; *************** function _start_engine *****************
  2123 ;; Defined at:
  2124 ;;		line 267 in file "main.c"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;		None
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;		None
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  1    wreg      void 
  2131 ;; Registers used:
  2132 ;;		wreg, status,2
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2138 ;;      Params:         0       0       0       0       0       0       0
  2139 ;;      Locals:         0       0       0       0       0       0       0
  2140 ;;      Temps:          0       0       0       0       0       0       0
  2141 ;;      Totals:         0       0       0       0       0       0       0
  2142 ;;Total ram usage:        0 bytes
  2143 ;; Hardware stack levels used:    1
  2144 ;; Hardware stack levels required when called:    1
  2145 ;; This function calls:
  2146 ;;		Nothing
  2147 ;; This function is called by:
  2148 ;;		_main
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           	psect	text3
  2153  002C72                     __ptext3:
  2154                           	opt callstack 0
  2155  002C72                     _start_engine:
  2156                           	opt callstack 0
  2157  002C72  FFFF               	dw	65535	; assembler added errata NOP
  2158                           
  2159                           ;main.c: 268: LATB = 2;
  2160                           
  2161                           ;incstack = 0
  2162  002C74  0E02               	movlw	2
  2163  002C76  6E8A               	movwf	3978,c	;volatile
  2164  002C78  0012               	return		;funcret
  2165  002C7A  FFFF               	dw	65535	; errata NOP
  2166  002C7C                     __end_of_start_engine:
  2167                           	opt callstack 0
  2168                           
  2169 ;; *************** function _sprintf *****************
  2170 ;; Defined at:
  2171 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  2172 ;; Parameters:    Size  Location     Type
  2173 ;;  sp              2   76[COMRAM] PTR unsigned char 
  2174 ;;		 -> main@_temp(25), main@_volt(25), message_alert(50), main@message(20), 
  2175 ;;  f               2   78[COMRAM] PTR const unsigned char 
  2176 ;;		 -> STR_15(21), STR_14(17), STR_13(24), STR_10(33), 
  2177 ;;		 -> STR_7(24), STR_4(19), STR_3(19), 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  fval            4  108[COMRAM] PTR const unsigned char 
  2180 ;;  tmpval          4   98[COMRAM] struct .
  2181 ;;  val             4   94[COMRAM] unsigned long 
  2182 ;;  cp              3    0        PTR const unsigned char 
  2183 ;;  prec            2  112[COMRAM] int 
  2184 ;;  width           2  106[COMRAM] int 
  2185 ;;  flag            2  104[COMRAM] unsigned short 
  2186 ;;  eexp            2  102[COMRAM] int 
  2187 ;;  ap              2   92[COMRAM] PTR void [1]
  2188 ;;		 -> ?_sprintf(2), 
  2189 ;;  len             2    0        unsigned int 
  2190 ;;  c               1  114[COMRAM] unsigned char 
  2191 ;;  d               1    0        unsigned char 
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  2   76[COMRAM] int 
  2194 ;; Registers used:
  2195 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2201 ;;      Params:         8       0       0       0       0       0       0
  2202 ;;      Locals:        27       0       0       0       0       0       0
  2203 ;;      Temps:          4       0       0       0       0       0       0
  2204 ;;      Totals:        39       0       0       0       0       0       0
  2205 ;;Total ram usage:       39 bytes
  2206 ;; Hardware stack levels used:    1
  2207 ;; Hardware stack levels required when called:    3
  2208 ;; This function calls:
  2209 ;;		___awdiv
  2210 ;;		___fladd
  2211 ;;		___fleq
  2212 ;;		___flge
  2213 ;;		___flmul
  2214 ;;		___flneg
  2215 ;;		___flsub
  2216 ;;		___fltol
  2217 ;;		___lldiv
  2218 ;;		___llmod
  2219 ;;		___wmul
  2220 ;;		___xxtofl
  2221 ;;		__div_to_l_
  2222 ;;		__tdiv_to_l_
  2223 ;;		_fround
  2224 ;;		_isdigit
  2225 ;;		_scale
  2226 ;; This function is called by:
  2227 ;;		_main
  2228 ;; This function uses a non-reentrant model
  2229 ;;
  2230                           
  2231                           	psect	text4
  2232  000022                     __ptext4:
  2233                           	opt callstack 0
  2234  000022                     _sprintf:
  2235                           	opt callstack 0
  2236  000022  FFFF               	dw	65535	; assembler added errata NOP
  2237                           
  2238                           ;doprnt.c: 502: va_list ap;;doprnt.c: 507: char c;;doprnt.c: 509: int width;;doprnt.c: 5
      +                          12: int prec;;doprnt.c: 520: unsigned short flag;;doprnt.c: 527: char d;;doprnt.c: 528: 
      +                          double fval;;doprnt.c: 529: int eexp;;doprnt.c: 535: union {;doprnt.c: 536: unsigned lon
      +                          g vd;;doprnt.c: 537: double integ;;doprnt.c: 538: } tmpval;;doprnt.c: 540: unsigned long
      +                           val;;doprnt.c: 541: unsigned len;;doprnt.c: 542: const char * cp;;doprnt.c: 545: *ap = 
      +                          __va_start();
  2239                           
  2240                           ;incstack = 0
  2241  000024  0E51               	movlw	low (?_sprintf+4)
  2242  000026  6E5D               	movwf	sprintf@ap,c
  2243  000028  0E00               	movlw	high (?_sprintf+4)
  2244  00002A  6E5E               	movwf	sprintf@ap+1,c
  2245                           
  2246                           ;doprnt.c: 548: while((c = *f++)) {
  2247  00002C  EF2B  F005         	goto	l3974
  2248  000030                     l3682:
  2249  000030  FFFF               	dw	65535	; assembler added errata NOP
  2250                           
  2251                           ;doprnt.c: 550: if(c != '%')
  2252  000032  0E25               	movlw	37
  2253  000034  1873               	xorwf	sprintf@c,w,c
  2254  000036  B4D8               	btfsc	status,2,c
  2255  000038  D00B               	goto	l3688
  2256                           
  2257                           ;doprnt.c: 552: {;doprnt.c: 553: ((*sp++ = (c)));
  2258  00003A  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2259  00003E  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2260  000042  C073  FFDF         	movff	sprintf@c,indf2
  2261  000046                     l3686:
  2262  000046  FFFF               	dw	65535	; assembler added errata NOP
  2263  000048  4A4D               	infsnz	sprintf@sp,f,c
  2264  00004A  2A4E               	incf	sprintf@sp+1,f,c
  2265                           
  2266                           ;doprnt.c: 554: continue;
  2267  00004C  EF2B  F005         	goto	l3974
  2268  000050                     l3688:
  2269  000050  FFFF               	dw	65535	; assembler added errata NOP
  2270                           
  2271                           ;doprnt.c: 555: };doprnt.c: 558: width = 0;
  2272  000052  0E00               	movlw	0
  2273  000054  6E6C               	movwf	sprintf@width+1,c
  2274  000056  0E00               	movlw	0
  2275  000058  6E6B               	movwf	sprintf@width,c
  2276                           
  2277                           ;doprnt.c: 560: flag = 0;
  2278  00005A  0E00               	movlw	0
  2279  00005C  6E6A               	movwf	sprintf@flag+1,c
  2280  00005E  0E00               	movlw	0
  2281  000060  6E69               	movwf	sprintf@flag,c
  2282  000062  D004               	goto	l3694
  2283  000064                     l3690:
  2284  000064  FFFF               	dw	65535	; assembler added errata NOP
  2285                           
  2286                           ;doprnt.c: 592: flag |= 0x04;
  2287  000066  8469               	bsf	sprintf@flag,2,c
  2288                           
  2289                           ;doprnt.c: 593: f++;
  2290  000068  4A4F               	infsnz	sprintf@f,f,c
  2291  00006A  2A50               	incf	sprintf@f+1,f,c
  2292  00006C                     l3694:
  2293  00006C  FFFF               	dw	65535	; assembler added errata NOP
  2294  00006E  C04F  FFF6         	movff	sprintf@f,tblptrl
  2295  000072  C050  FFF7         	movff	sprintf@f+1,tblptrh
  2296  000076                     	if	0	;tblptru may be non-zero
  2297  000076                     	endif
  2298  000076                     	if	0	;tblptru may be non-zero
  2299  000076                     	endif
  2300  000076  0008               	tblrd		*
  2301  000078  FFFF               	dw	65535	; errata NOP
  2302  00007A  50F5               	movf	tablat,w,c
  2303                           
  2304                           ; Switch size 1, requested type "simple"
  2305                           ; Number of cases is 1, Range of values is 48 to 48
  2306                           ; switch strategies available:
  2307                           ; Name         Instructions Cycles
  2308                           ; simple_byte            4     3 (average)
  2309                           ;	Chosen strategy is simple_byte
  2310  00007C  0A30               	xorlw	48	; case 48
  2311  00007E  B4D8               	btfsc	status,2,c
  2312  000080  D7F1               	goto	l3690
  2313                           
  2314                           ;doprnt.c: 609: if(isdigit((unsigned)*f)) {
  2315  000082  C04F  FFF6         	movff	sprintf@f,tblptrl
  2316  000086  C050  FFF7         	movff	sprintf@f+1,tblptrh
  2317  00008A                     	if	0	;tblptru may be non-zero
  2318  00008A                     	endif
  2319  00008A                     	if	0	;tblptru may be non-zero
  2320  00008A                     	endif
  2321  00008A  0008               	tblrd		*
  2322  00008C  FFFF               	dw	65535	; errata NOP
  2323  00008E  50F5               	movf	tablat,w,c
  2324  000090  ECF4  F015         	call	_isdigit
  2325  000094  A0D8               	btfss	status,0,c
  2326  000096  D035               	goto	u4030
  2327                           
  2328                           ;doprnt.c: 610: width = 0;
  2329  000098  0E00               	movlw	0
  2330  00009A  6E6C               	movwf	sprintf@width+1,c
  2331  00009C  0E00               	movlw	0
  2332  00009E  6E6B               	movwf	sprintf@width,c
  2333  0000A0                     l3700:
  2334  0000A0  FFFF               	dw	65535	; assembler added errata NOP
  2335                           
  2336                           ;doprnt.c: 612: width *= 10;
  2337  0000A2  C06B  F001         	movff	sprintf@width,___wmul@multiplier
  2338  0000A6  C06C  F002         	movff	sprintf@width+1,___wmul@multiplier+1
  2339  0000AA  0E00               	movlw	0
  2340  0000AC  6E04               	movwf	___wmul@multiplicand+1,c
  2341  0000AE  0E0A               	movlw	10
  2342  0000B0  6E03               	movwf	___wmul@multiplicand,c
  2343  0000B2  ECDF  F015         	call	___wmul	;wreg free
  2344  0000B6  C001  F06B         	movff	?___wmul,sprintf@width
  2345  0000BA  C002  F06C         	movff	?___wmul+1,sprintf@width+1
  2346                           
  2347                           ;doprnt.c: 613: width += *f++ - '0';
  2348  0000BE  0ED0               	movlw	208
  2349  0000C0  6E55               	movwf	??_sprintf& (0+255),c
  2350  0000C2  0EFF               	movlw	255
  2351  0000C4  6E56               	movwf	(??_sprintf+1)& (0+255),c
  2352  0000C6  C04F  FFF6         	movff	sprintf@f,tblptrl
  2353  0000CA  C050  FFF7         	movff	sprintf@f+1,tblptrh
  2354  0000CE                     	if	0	;tblptru may be non-zero
  2355  0000CE                     	endif
  2356  0000CE                     	if	0	;tblptru may be non-zero
  2357  0000CE                     	endif
  2358  0000CE  0008               	tblrd		*
  2359  0000D0  FFFF               	dw	65535	; errata NOP
  2360  0000D2  50F5               	movf	tablat,w,c
  2361  0000D4  6E57               	movwf	(??_sprintf+2)& (0+255),c
  2362  0000D6  6A58               	clrf	(??_sprintf+3)& (0+255),c
  2363  0000D8  5055               	movf	??_sprintf,w,c
  2364  0000DA  2657               	addwf	??_sprintf+2,f,c
  2365  0000DC  5056               	movf	??_sprintf+1,w,c
  2366  0000DE  2258               	addwfc	??_sprintf+3,f,c
  2367  0000E0  5057               	movf	??_sprintf+2,w,c
  2368  0000E2  266B               	addwf	sprintf@width,f,c
  2369  0000E4  5058               	movf	??_sprintf+3,w,c
  2370  0000E6  226C               	addwfc	sprintf@width+1,f,c
  2371  0000E8  4A4F               	infsnz	sprintf@f,f,c
  2372  0000EA  2A50               	incf	sprintf@f+1,f,c
  2373                           
  2374                           ;doprnt.c: 614: } while(isdigit((unsigned)*f));
  2375  0000EC  C04F  FFF6         	movff	sprintf@f,tblptrl
  2376  0000F0  C050  FFF7         	movff	sprintf@f+1,tblptrh
  2377  0000F4                     	if	0	;tblptru may be non-zero
  2378  0000F4                     	endif
  2379  0000F4                     	if	0	;tblptru may be non-zero
  2380  0000F4                     	endif
  2381  0000F4  0008               	tblrd		*
  2382  0000F6  FFFF               	dw	65535	; errata NOP
  2383  0000F8  50F5               	movf	tablat,w,c
  2384  0000FA  ECF4  F015         	call	_isdigit
  2385  0000FE  B0D8               	btfsc	status,0,c
  2386  000100  D7CF               	goto	l3700
  2387  000102                     u4030:
  2388  000102  FFFF               	dw	65535	; assembler added errata NOP
  2389                           
  2390                           ;doprnt.c: 620: };doprnt.c: 623: if(*f == '.') {
  2391  000104  C04F  FFF6         	movff	sprintf@f,tblptrl
  2392  000108  C050  FFF7         	movff	sprintf@f+1,tblptrh
  2393  00010C                     	if	0	;tblptru may be non-zero
  2394  00010C                     	endif
  2395  00010C                     	if	0	;tblptru may be non-zero
  2396  00010C                     	endif
  2397  00010C  0008               	tblrd		*
  2398  00010E  FFFF               	dw	65535	; errata NOP
  2399  000110  50F5               	movf	tablat,w,c
  2400  000112  0A2E               	xorlw	46
  2401  000114  A4D8               	btfss	status,2,c
  2402  000116  D032               	goto	l3720
  2403                           
  2404                           ;doprnt.c: 624: flag |= 0x4000;
  2405  000118  8C6A               	bsf	sprintf@flag+1,6,c
  2406                           
  2407                           ;doprnt.c: 625: f++;
  2408  00011A  4A4F               	infsnz	sprintf@f,f,c
  2409  00011C  2A50               	incf	sprintf@f+1,f,c
  2410                           
  2411                           ;doprnt.c: 639: {;doprnt.c: 640: prec = 0;
  2412  00011E  0E00               	movlw	0
  2413  000120  6E72               	movwf	sprintf@prec+1,c
  2414  000122  0E00               	movlw	0
  2415  000124  6E71               	movwf	sprintf@prec,c
  2416                           
  2417                           ;doprnt.c: 641: while(isdigit((unsigned)*f))
  2418  000126  D01D               	goto	l3718
  2419  000128                     l3714:
  2420  000128  FFFF               	dw	65535	; assembler added errata NOP
  2421                           
  2422                           ;doprnt.c: 642: prec = prec*10 + *f++ - '0';
  2423  00012A  C071  F001         	movff	sprintf@prec,___wmul@multiplier
  2424  00012E  C072  F002         	movff	sprintf@prec+1,___wmul@multiplier+1
  2425  000132  0E00               	movlw	0
  2426  000134  6E04               	movwf	___wmul@multiplicand+1,c
  2427  000136  0E0A               	movlw	10
  2428  000138  6E03               	movwf	___wmul@multiplicand,c
  2429  00013A  ECDF  F015         	call	___wmul	;wreg free
  2430  00013E  C04F  FFF6         	movff	sprintf@f,tblptrl
  2431  000142  C050  FFF7         	movff	sprintf@f+1,tblptrh
  2432  000146                     	if	0	;tblptru may be non-zero
  2433  000146                     	endif
  2434  000146                     	if	0	;tblptru may be non-zero
  2435  000146                     	endif
  2436  000146  0008               	tblrd		*
  2437  000148  FFFF               	dw	65535	; errata NOP
  2438  00014A  50F5               	movf	tablat,w,c
  2439  00014C  2601               	addwf	?___wmul,f,c
  2440  00014E  0E00               	movlw	0
  2441  000150  2202               	addwfc	?___wmul+1,f,c
  2442  000152  0ED0               	movlw	208
  2443  000154  2401               	addwf	?___wmul,w,c
  2444  000156  6E71               	movwf	sprintf@prec,c
  2445  000158  0EFF               	movlw	255
  2446  00015A  2002               	addwfc	?___wmul+1,w,c
  2447  00015C  6E72               	movwf	sprintf@prec+1,c
  2448  00015E  4A4F               	infsnz	sprintf@f,f,c
  2449  000160  2A50               	incf	sprintf@f+1,f,c
  2450  000162                     l3718:
  2451  000162  FFFF               	dw	65535	; assembler added errata NOP
  2452  000164  C04F  FFF6         	movff	sprintf@f,tblptrl
  2453  000168  C050  FFF7         	movff	sprintf@f+1,tblptrh
  2454  00016C                     	if	0	;tblptru may be non-zero
  2455  00016C                     	endif
  2456  00016C                     	if	0	;tblptru may be non-zero
  2457  00016C                     	endif
  2458  00016C  0008               	tblrd		*
  2459  00016E  FFFF               	dw	65535	; errata NOP
  2460  000170  50F5               	movf	tablat,w,c
  2461  000172  ECF4  F015         	call	_isdigit
  2462  000176  A0D8               	btfss	status,0,c
  2463  000178  D00B               	goto	l3728
  2464  00017A  D7D6               	goto	l3714
  2465  00017C                     l3720:
  2466  00017C  FFFF               	dw	65535	; assembler added errata NOP
  2467                           
  2468                           ;doprnt.c: 645: prec = 0;
  2469  00017E  0E00               	movlw	0
  2470  000180  6E72               	movwf	sprintf@prec+1,c
  2471  000182  0E00               	movlw	0
  2472  000184  6E71               	movwf	sprintf@prec,c
  2473                           
  2474                           ;doprnt.c: 647: flag |= 0x1000;
  2475  000186  886A               	bsf	sprintf@flag+1,4,c
  2476  000188  D003               	goto	l3728
  2477  00018A                     l3724:
  2478  00018A  FFFF               	dw	65535	; assembler added errata NOP
  2479                           
  2480                           ;doprnt.c: 682: flag |= 0x400;
  2481  00018C  846A               	bsf	sprintf@flag+1,2,c
  2482                           
  2483                           ;doprnt.c: 683: break;
  2484  00018E  D015               	goto	l3730
  2485  000190                     l3728:
  2486  000190  FFFF               	dw	65535	; assembler added errata NOP
  2487  000192  C04F  FFF6         	movff	sprintf@f,tblptrl
  2488  000196  C050  FFF7         	movff	sprintf@f+1,tblptrh
  2489  00019A  4A4F               	infsnz	sprintf@f,f,c
  2490  00019C  2A50               	incf	sprintf@f+1,f,c
  2491  00019E                     	if	0	;tblptru may be non-zero
  2492  00019E                     	endif
  2493  00019E                     	if	0	;tblptru may be non-zero
  2494  00019E                     	endif
  2495  00019E  0008               	tblrd		*
  2496  0001A0  FFFF               	dw	65535	; errata NOP
  2497  0001A2  CFF5 F073          	movff	tablat,sprintf@c
  2498  0001A6  5073               	movf	sprintf@c,w,c
  2499                           
  2500                           ; Switch size 1, requested type "simple"
  2501                           ; Number of cases is 2, Range of values is 0 to 102
  2502                           ; switch strategies available:
  2503                           ; Name         Instructions Cycles
  2504                           ; simple_byte            7     4 (average)
  2505                           ;	Chosen strategy is simple_byte
  2506  0001A8  0A00               	xorlw	0	; case 0
  2507  0001AA  B4D8               	btfsc	status,2,c
  2508  0001AC  EF3A  F005         	goto	u4500
  2509  0001B0  0A66               	xorlw	102	; case 102
  2510  0001B2  B4D8               	btfsc	status,2,c
  2511  0001B4  D7EA               	goto	l3724
  2512  0001B6  EF2B  F005         	goto	l3974
  2513  0001BA                     l3730:
  2514  0001BA  FFFF               	dw	65535	; assembler added errata NOP
  2515                           
  2516                           ;doprnt.c: 844: if(flag & (0x700)) {
  2517  0001BC  0E07               	movlw	7
  2518  0001BE  146A               	andwf	sprintf@flag+1,w,c
  2519  0001C0  B4D8               	btfsc	status,2,c
  2520  0001C2  D38B               	goto	l3910
  2521                           
  2522                           ;doprnt.c: 846: if(flag & 0x1000)
  2523  0001C4  A86A               	btfss	sprintf@flag+1,4,c
  2524  0001C6  D004               	goto	l3736
  2525                           
  2526                           ;doprnt.c: 848: prec = 6;
  2527  0001C8  0E00               	movlw	0
  2528  0001CA  6E72               	movwf	sprintf@prec+1,c
  2529  0001CC  0E06               	movlw	6
  2530  0001CE  6E71               	movwf	sprintf@prec,c
  2531  0001D0                     l3736:
  2532  0001D0  FFFF               	dw	65535	; assembler added errata NOP
  2533                           
  2534                           ;doprnt.c: 849: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2535  0001D2  C05D  FFD9         	movff	sprintf@ap,fsr2l
  2536  0001D6  C05E  FFDA         	movff	sprintf@ap+1,fsr2h
  2537  0001DA  CFDE F06D          	movff	postinc2,sprintf@fval
  2538  0001DE  CFDE F06E          	movff	postinc2,sprintf@fval+1
  2539  0001E2  CFDE F06F          	movff	postinc2,sprintf@fval+2
  2540  0001E6  CFDE F070          	movff	postinc2,sprintf@fval+3
  2541  0001EA  0E04               	movlw	4
  2542  0001EC  265D               	addwf	sprintf@ap,f,c
  2543  0001EE  0E00               	movlw	0
  2544  0001F0  225E               	addwfc	sprintf@ap+1,f,c
  2545                           
  2546                           ;doprnt.c: 850: if(fval < 0.0) {
  2547  0001F2  AE70               	btfss	sprintf@fval+3,7,c
  2548  0001F4  D014               	goto	l3746
  2549                           
  2550                           ;doprnt.c: 851: fval = -fval;
  2551  0001F6  C06D  F001         	movff	sprintf@fval,___flneg@f1
  2552  0001FA  C06E  F002         	movff	sprintf@fval+1,___flneg@f1+1
  2553  0001FE  C06F  F003         	movff	sprintf@fval+2,___flneg@f1+2
  2554  000202  C070  F004         	movff	sprintf@fval+3,___flneg@f1+3
  2555  000206  ECC5  F015         	call	___flneg	;wreg free
  2556  00020A  C001  F06D         	movff	?___flneg,sprintf@fval
  2557  00020E  C002  F06E         	movff	?___flneg+1,sprintf@fval+1
  2558  000212  C003  F06F         	movff	?___flneg+2,sprintf@fval+2
  2559  000216  C004  F070         	movff	?___flneg+3,sprintf@fval+3
  2560                           
  2561                           ;doprnt.c: 852: flag |= 0x03;
  2562  00021A  0E03               	movlw	3
  2563  00021C  1269               	iorwf	sprintf@flag,f,c
  2564  00021E                     l3746:
  2565  00021E  FFFF               	dw	65535	; assembler added errata NOP
  2566                           
  2567                           ;doprnt.c: 853: };doprnt.c: 854: eexp = 0;
  2568  000220  0E00               	movlw	0
  2569  000222  6E68               	movwf	sprintf@eexp+1,c
  2570  000224  0E00               	movlw	0
  2571  000226  6E67               	movwf	sprintf@eexp,c
  2572                           
  2573                           ;doprnt.c: 855: if( fval!=0) {
  2574  000228  C06D  F001         	movff	sprintf@fval,___fleq@ff1
  2575  00022C  C06E  F002         	movff	sprintf@fval+1,___fleq@ff1+1
  2576  000230  C06F  F003         	movff	sprintf@fval+2,___fleq@ff1+2
  2577  000234  C070  F004         	movff	sprintf@fval+3,___fleq@ff1+3
  2578  000238  0E00               	movlw	0
  2579  00023A  6E05               	movwf	___fleq@ff2,c
  2580  00023C  0E00               	movlw	0
  2581  00023E  6E06               	movwf	___fleq@ff2+1,c
  2582  000240  0E00               	movlw	0
  2583  000242  6E07               	movwf	___fleq@ff2+2,c
  2584  000244  0E00               	movlw	0
  2585  000246  6E08               	movwf	___fleq@ff2+3,c
  2586  000248  EC08  F013         	call	___fleq	;wreg free
  2587  00024C  B0D8               	btfsc	status,0,c
  2588  00024E  D081               	goto	l3774
  2589                           
  2590                           ;doprnt.c: 856: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
  2591  000250  346F               	rlcf	sprintf@fval+2,w,c
  2592  000252  3470               	rlcf	sprintf@fval+3,w,c
  2593  000254  0F82               	addlw	130
  2594  000256  6E67               	movwf	sprintf@eexp,c
  2595  000258  6A68               	clrf	sprintf@eexp+1,c
  2596  00025A  0EFF               	movlw	255
  2597  00025C  2268               	addwfc	sprintf@eexp+1,f,c
  2598                           
  2599                           ;doprnt.c: 857: eexp--;
  2600  00025E  0667               	decf	sprintf@eexp,f,c
  2601  000260  A0D8               	btfss	status,0,c
  2602  000262  0668               	decf	sprintf@eexp+1,f,c
  2603                           
  2604                           ;doprnt.c: 858: eexp *= 3;
  2605  000264  C067  F001         	movff	sprintf@eexp,___wmul@multiplier
  2606  000268  C068  F002         	movff	sprintf@eexp+1,___wmul@multiplier+1
  2607  00026C  0E00               	movlw	0
  2608  00026E  6E04               	movwf	___wmul@multiplicand+1,c
  2609  000270  0E03               	movlw	3
  2610  000272  6E03               	movwf	___wmul@multiplicand,c
  2611  000274  ECDF  F015         	call	___wmul	;wreg free
  2612  000278  C001  F067         	movff	?___wmul,sprintf@eexp
  2613  00027C  C002  F068         	movff	?___wmul+1,sprintf@eexp+1
  2614                           
  2615                           ;doprnt.c: 859: eexp /= 10;
  2616  000280  C067  F007         	movff	sprintf@eexp,___awdiv@dividend
  2617  000284  C068  F008         	movff	sprintf@eexp+1,___awdiv@dividend+1
  2618  000288  0E00               	movlw	0
  2619  00028A  6E0A               	movwf	___awdiv@divisor+1,c
  2620  00028C  0E0A               	movlw	10
  2621  00028E  6E09               	movwf	___awdiv@divisor,c
  2622  000290  ECBC  F012         	call	___awdiv	;wreg free
  2623  000294  C007  F067         	movff	?___awdiv,sprintf@eexp
  2624  000298  C008  F068         	movff	?___awdiv+1,sprintf@eexp+1
  2625                           
  2626                           ;doprnt.c: 860: if(eexp < 0)
  2627  00029C  AE68               	btfss	sprintf@eexp+1,7,c
  2628  00029E  D003               	goto	l3762
  2629                           
  2630                           ;doprnt.c: 861: eexp--;
  2631  0002A0  0667               	decf	sprintf@eexp,f,c
  2632  0002A2  A0D8               	btfss	status,0,c
  2633  0002A4  0668               	decf	sprintf@eexp+1,f,c
  2634  0002A6                     l3762:
  2635  0002A6  FFFF               	dw	65535	; assembler added errata NOP
  2636                           
  2637                           ;doprnt.c: 865: tmpval.integ = scale(-eexp);
  2638  0002A8  5067               	movf	sprintf@eexp,w,c
  2639  0002AA  0800               	sublw	0
  2640  0002AC  EC93  F007         	call	_scale
  2641  0002B0  C028  F063         	movff	?_scale,sprintf@tmpval
  2642  0002B4  C029  F064         	movff	?_scale+1,sprintf@tmpval+1
  2643  0002B8  C02A  F065         	movff	?_scale+2,sprintf@tmpval+2
  2644  0002BC  C02B  F066         	movff	?_scale+3,sprintf@tmpval+3
  2645                           
  2646                           ;doprnt.c: 866: tmpval.integ *= fval;
  2647  0002C0  C063  F00F         	movff	sprintf@tmpval,___flmul@b
  2648  0002C4  C064  F010         	movff	sprintf@tmpval+1,___flmul@b+1
  2649  0002C8  C065  F011         	movff	sprintf@tmpval+2,___flmul@b+2
  2650  0002CC  C066  F012         	movff	sprintf@tmpval+3,___flmul@b+3
  2651  0002D0  C06D  F013         	movff	sprintf@fval,___flmul@a
  2652  0002D4  C06E  F014         	movff	sprintf@fval+1,___flmul@a+1
  2653  0002D8  C06F  F015         	movff	sprintf@fval+2,___flmul@a+2
  2654  0002DC  C070  F016         	movff	sprintf@fval+3,___flmul@a+3
  2655  0002E0  EC9B  F009         	call	___flmul	;wreg free
  2656  0002E4  C00F  F063         	movff	?___flmul,sprintf@tmpval
  2657  0002E8  C010  F064         	movff	?___flmul+1,sprintf@tmpval+1
  2658  0002EC  C011  F065         	movff	?___flmul+2,sprintf@tmpval+2
  2659  0002F0  C012  F066         	movff	?___flmul+3,sprintf@tmpval+3
  2660                           
  2661                           ;doprnt.c: 867: if(tmpval.integ < 1.0)
  2662  0002F4  C063  F001         	movff	sprintf@tmpval,___flge@ff1
  2663  0002F8  C064  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  2664  0002FC  C065  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  2665  000300  C066  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  2666  000304  0E00               	movlw	0
  2667  000306  6E05               	movwf	___flge@ff2,c
  2668  000308  0E00               	movlw	0
  2669  00030A  6E06               	movwf	___flge@ff2+1,c
  2670  00030C  0E80               	movlw	128
  2671  00030E  6E07               	movwf	___flge@ff2+2,c
  2672  000310  0E3F               	movlw	63
  2673  000312  6E08               	movwf	___flge@ff2+3,c
  2674  000314  ECE2  F011         	call	___flge	;wreg free
  2675  000318  B0D8               	btfsc	status,0,c
  2676  00031A  D004               	goto	l3770
  2677                           
  2678                           ;doprnt.c: 868: eexp--;
  2679  00031C  0667               	decf	sprintf@eexp,f,c
  2680  00031E  A0D8               	btfss	status,0,c
  2681  000320  0668               	decf	sprintf@eexp+1,f,c
  2682  000322  D017               	goto	l3774
  2683  000324                     l3770:
  2684  000324  FFFF               	dw	65535	; assembler added errata NOP
  2685                           
  2686                           ;doprnt.c: 869: else if(tmpval.integ >= 10.0)
  2687  000326  C063  F001         	movff	sprintf@tmpval,___flge@ff1
  2688  00032A  C064  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  2689  00032E  C065  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  2690  000332  C066  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  2691  000336  0E00               	movlw	0
  2692  000338  6E05               	movwf	___flge@ff2,c
  2693  00033A  0E00               	movlw	0
  2694  00033C  6E06               	movwf	___flge@ff2+1,c
  2695  00033E  0E20               	movlw	32
  2696  000340  6E07               	movwf	___flge@ff2+2,c
  2697  000342  0E41               	movlw	65
  2698  000344  6E08               	movwf	___flge@ff2+3,c
  2699  000346  ECE2  F011         	call	___flge	;wreg free
  2700  00034A  A0D8               	btfss	status,0,c
  2701  00034C  D002               	goto	l3774
  2702                           
  2703                           ;doprnt.c: 870: eexp++;
  2704  00034E  4A67               	infsnz	sprintf@eexp,f,c
  2705  000350  2A68               	incf	sprintf@eexp+1,f,c
  2706  000352                     l3774:
  2707  000352  FFFF               	dw	65535	; assembler added errata NOP
  2708                           
  2709                           ;doprnt.c: 871: };doprnt.c: 1131: if(prec <= 12)
  2710  000354  BE72               	btfsc	sprintf@prec+1,7,c
  2711  000356  D006               	goto	u4130
  2712  000358  5072               	movf	sprintf@prec+1,w,c
  2713  00035A  E122               	bnz	l3778
  2714  00035C  0E0D               	movlw	13
  2715  00035E  5C71               	subwf	sprintf@prec,w,c
  2716  000360  B0D8               	btfsc	status,0,c
  2717  000362  D01E               	goto	l3778
  2718  000364                     u4130:
  2719  000364  FFFF               	dw	65535	; assembler added errata NOP
  2720                           
  2721                           ;doprnt.c: 1132: fval += fround((unsigned int)prec);
  2722  000366  C06D  F035         	movff	sprintf@fval,___fladd@b
  2723  00036A  C06E  F036         	movff	sprintf@fval+1,___fladd@b+1
  2724  00036E  C06F  F037         	movff	sprintf@fval+2,___fladd@b+2
  2725  000372  C070  F038         	movff	sprintf@fval+3,___fladd@b+3
  2726  000376  5071               	movf	sprintf@prec,w,c
  2727  000378  EC5E  F00E         	call	_fround
  2728  00037C  C028  F039         	movff	?_fround,___fladd@a
  2729  000380  C029  F03A         	movff	?_fround+1,___fladd@a+1
  2730  000384  C02A  F03B         	movff	?_fround+2,___fladd@a+2
  2731  000388  C02B  F03C         	movff	?_fround+3,___fladd@a+3
  2732  00038C  EC5C  F00B         	call	___fladd	;wreg free
  2733  000390  C035  F06D         	movff	?___fladd,sprintf@fval
  2734  000394  C036  F06E         	movff	?___fladd+1,sprintf@fval+1
  2735  000398  C037  F06F         	movff	?___fladd+2,sprintf@fval+2
  2736  00039C  C038  F070         	movff	?___fladd+3,sprintf@fval+3
  2737  0003A0                     l3778:
  2738  0003A0  FFFF               	dw	65535	; assembler added errata NOP
  2739                           
  2740                           ;doprnt.c: 1135: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2741  0003A2  BE68               	btfsc	sprintf@eexp+1,7,c
  2742  0003A4  D006               	goto	u4140
  2743  0003A6  5068               	movf	sprintf@eexp+1,w,c
  2744  0003A8  E131               	bnz	l3786
  2745  0003AA  0E0A               	movlw	10
  2746  0003AC  5C67               	subwf	sprintf@eexp,w,c
  2747  0003AE  B0D8               	btfsc	status,0,c
  2748  0003B0  D02C               	goto	u4170
  2749  0003B2                     u4140:
  2750  0003B2  FFFF               	dw	65535	; assembler added errata NOP
  2751  0003B4  C06D  F001         	movff	sprintf@fval,___fleq@ff1
  2752  0003B8  C06E  F002         	movff	sprintf@fval+1,___fleq@ff1+1
  2753  0003BC  C06F  F003         	movff	sprintf@fval+2,___fleq@ff1+2
  2754  0003C0  C070  F004         	movff	sprintf@fval+3,___fleq@ff1+3
  2755  0003C4  0E00               	movlw	0
  2756  0003C6  6E05               	movwf	___fleq@ff2,c
  2757  0003C8  0E00               	movlw	0
  2758  0003CA  6E06               	movwf	___fleq@ff2+1,c
  2759  0003CC  0E00               	movlw	0
  2760  0003CE  6E07               	movwf	___fleq@ff2+2,c
  2761  0003D0  0E00               	movlw	0
  2762  0003D2  6E08               	movwf	___fleq@ff2+3,c
  2763  0003D4  EC08  F013         	call	___fleq	;wreg free
  2764  0003D8  B0D8               	btfsc	status,0,c
  2765  0003DA  D062               	goto	l3800
  2766  0003DC  C06D  F031         	movff	sprintf@fval,___fltol@f1
  2767  0003E0  C06E  F032         	movff	sprintf@fval+1,___fltol@f1+1
  2768  0003E4  C06F  F033         	movff	sprintf@fval+2,___fltol@f1+2
  2769  0003E8  C070  F034         	movff	sprintf@fval+3,___fltol@f1+3
  2770  0003EC  EC52  F012         	call	___fltol	;wreg free
  2771  0003F0  5031               	movf	?___fltol,w,c
  2772  0003F2  1032               	iorwf	?___fltol+1,w,c
  2773  0003F4  1033               	iorwf	?___fltol+2,w,c
  2774  0003F6  1034               	iorwf	?___fltol+3,w,c
  2775  0003F8  B4D8               	btfsc	status,2,c
  2776  0003FA  BE68               	btfsc	sprintf@eexp+1,7,c
  2777  0003FC  D051               	goto	l3800
  2778  0003FE  5068               	movf	sprintf@eexp+1,w,c
  2779  000400  E104               	bnz	u4170
  2780  000402  0E02               	movlw	2
  2781  000404  5C67               	subwf	sprintf@eexp,w,c
  2782  000406  A0D8               	btfss	status,0,c
  2783  000408  D04B               	goto	l3800
  2784  00040A                     u4170:
  2785  00040A  FFFF               	dw	65535	; assembler added errata NOP
  2786  00040C                     l3786:
  2787                           
  2788                           ;doprnt.c: 1139: if(tmpval.integ < 4.294967296){
  2789  00040C  C063  F001         	movff	sprintf@tmpval,___flge@ff1
  2790  000410  C064  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  2791  000414  C065  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  2792  000418  C066  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  2793  00041C  0E5F               	movlw	95
  2794  00041E  6E05               	movwf	___flge@ff2,c
  2795  000420  0E70               	movlw	112
  2796  000422  6E06               	movwf	___flge@ff2+1,c
  2797  000424  0E89               	movlw	137
  2798  000426  6E07               	movwf	___flge@ff2+2,c
  2799  000428  0E40               	movlw	64
  2800  00042A  6E08               	movwf	___flge@ff2+3,c
  2801  00042C  ECE2  F011         	call	___flge	;wreg free
  2802  000430  B0D8               	btfsc	status,0,c
  2803  000432  D002               	goto	l3790
  2804                           
  2805                           ;doprnt.c: 1140: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2806  000434  0EF7               	movlw	247
  2807  000436  D002               	goto	L4
  2808  000438                     l3790:
  2809  000438  FFFF               	dw	65535	; assembler added errata NOP
  2810                           
  2811                           ;doprnt.c: 1142: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2812  00043A  0EF8               	movlw	248
  2813  00043C                     L4:
  2814  00043C  FFFF               	dw	65535	; assembler added errata NOP
  2815  00043E  2667               	addwf	sprintf@eexp,f,c
  2816  000440  0EFF               	movlw	255
  2817  000442  2268               	addwfc	sprintf@eexp+1,f,c
  2818                           
  2819                           ;doprnt.c: 1145: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  2820  000444  5067               	movf	sprintf@eexp,w,c
  2821  000446  EC93  F007         	call	_scale
  2822  00044A  C028  F063         	movff	?_scale,sprintf@tmpval
  2823  00044E  C029  F064         	movff	?_scale+1,sprintf@tmpval+1
  2824  000452  C02A  F065         	movff	?_scale+2,sprintf@tmpval+2
  2825  000456  C02B  F066         	movff	?_scale+3,sprintf@tmpval+3
  2826  00045A  C06D  F001         	movff	sprintf@fval,__div_to_l_@f1
  2827  00045E  C06E  F002         	movff	sprintf@fval+1,__div_to_l_@f1+1
  2828  000462  C06F  F003         	movff	sprintf@fval+2,__div_to_l_@f1+2
  2829  000466  C070  F004         	movff	sprintf@fval+3,__div_to_l_@f1+3
  2830  00046A  C063  F005         	movff	sprintf@tmpval,__div_to_l_@f2
  2831  00046E  C064  F006         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  2832  000472  C065  F007         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  2833  000476  C066  F008         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  2834  00047A  ECE9  F010         	call	__div_to_l_	;wreg free
  2835  00047E  C001  F05F         	movff	?__div_to_l_,sprintf@val
  2836  000482  C002  F060         	movff	?__div_to_l_+1,sprintf@val+1
  2837  000486  C003  F061         	movff	?__div_to_l_+2,sprintf@val+2
  2838  00048A  C004  F062         	movff	?__div_to_l_+3,sprintf@val+3
  2839                           
  2840                           ;doprnt.c: 1148: fval = 0.0;
  2841  00048E  0E00               	movlw	0
  2842  000490  6E6D               	movwf	sprintf@fval,c
  2843  000492  0E00               	movlw	0
  2844  000494  6E6E               	movwf	sprintf@fval+1,c
  2845  000496  0E00               	movlw	0
  2846  000498  6E6F               	movwf	sprintf@fval+2,c
  2847  00049A  0E00               	movlw	0
  2848  00049C  6E70               	movwf	sprintf@fval+3,c
  2849                           
  2850                           ;doprnt.c: 1149: } else {
  2851  00049E  D03C               	goto	l3804
  2852  0004A0                     l3800:
  2853  0004A0  FFFF               	dw	65535	; assembler added errata NOP
  2854                           
  2855                           ;doprnt.c: 1150: val = (unsigned long)fval;
  2856  0004A2  C06D  F031         	movff	sprintf@fval,___fltol@f1
  2857  0004A6  C06E  F032         	movff	sprintf@fval+1,___fltol@f1+1
  2858  0004AA  C06F  F033         	movff	sprintf@fval+2,___fltol@f1+2
  2859  0004AE  C070  F034         	movff	sprintf@fval+3,___fltol@f1+3
  2860  0004B2  EC52  F012         	call	___fltol	;wreg free
  2861  0004B6  C031  F05F         	movff	?___fltol,sprintf@val
  2862  0004BA  C032  F060         	movff	?___fltol+1,sprintf@val+1
  2863  0004BE  C033  F061         	movff	?___fltol+2,sprintf@val+2
  2864  0004C2  C034  F062         	movff	?___fltol+3,sprintf@val+3
  2865                           
  2866                           ;doprnt.c: 1151: fval -= (double)val;
  2867  0004C6  C06D  F045         	movff	sprintf@fval,___flsub@b
  2868  0004CA  C06E  F046         	movff	sprintf@fval+1,___flsub@b+1
  2869  0004CE  C06F  F047         	movff	sprintf@fval+2,___flsub@b+2
  2870  0004D2  C070  F048         	movff	sprintf@fval+3,___flsub@b+3
  2871  0004D6  C05F  F001         	movff	sprintf@val,___xxtofl@val
  2872  0004DA  C060  F002         	movff	sprintf@val+1,___xxtofl@val+1
  2873  0004DE  C061  F003         	movff	sprintf@val+2,___xxtofl@val+2
  2874  0004E2  C062  F004         	movff	sprintf@val+3,___xxtofl@val+3
  2875  0004E6  0E00               	movlw	0
  2876  0004E8  ECB0  F00F         	call	___xxtofl
  2877  0004EC  C001  F049         	movff	?___xxtofl,___flsub@a
  2878  0004F0  C002  F04A         	movff	?___xxtofl+1,___flsub@a+1
  2879  0004F4  C003  F04B         	movff	?___xxtofl+2,___flsub@a+2
  2880  0004F8  C004  F04C         	movff	?___xxtofl+3,___flsub@a+3
  2881  0004FC  EC65  F015         	call	___flsub	;wreg free
  2882  000500  C045  F06D         	movff	?___flsub,sprintf@fval
  2883  000504  C046  F06E         	movff	?___flsub+1,sprintf@fval+1
  2884  000508  C047  F06F         	movff	?___flsub+2,sprintf@fval+2
  2885  00050C  C048  F070         	movff	?___flsub+3,sprintf@fval+3
  2886                           
  2887                           ;doprnt.c: 1152: eexp = 0;
  2888  000510  0E00               	movlw	0
  2889  000512  6E68               	movwf	sprintf@eexp+1,c
  2890  000514  0E00               	movlw	0
  2891  000516  6E67               	movwf	sprintf@eexp,c
  2892  000518                     l3804:
  2893  000518  FFFF               	dw	65535	; assembler added errata NOP
  2894                           
  2895                           ;doprnt.c: 1153: };doprnt.c: 1155: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  2896  00051A  0E01               	movlw	1
  2897  00051C  6E73               	movwf	sprintf@c,c
  2898  00051E                     l3810:
  2899  00051E  FFFF               	dw	65535	; assembler added errata NOP
  2900                           
  2901                           ;doprnt.c: 1156: if(val < dpowers[c])
  2902  000520  5073               	movf	sprintf@c,w,c
  2903  000522  0D04               	mullw	4
  2904  000524  0E69               	movlw	low _dpowers
  2905  000526  24F3               	addwf	prodl,w,c
  2906  000528  6EF6               	movwf	tblptrl,c
  2907  00052A  0E7E               	movlw	high _dpowers
  2908  00052C  20F4               	addwfc	prodh,w,c
  2909  00052E  6EF7               	movwf	tblptrh,c
  2910  000530                     	if	0	;There are less than 3 active tblptr bytes
  2911  000530                     	endif
  2912  000530  0009               	tblrd		*+
  2913  000532  FFFF               	dw	65535	; errata NOP
  2914  000534  50F5               	movf	tablat,w,c
  2915  000536  5C5F               	subwf	sprintf@val,w,c
  2916  000538  0009               	tblrd		*+
  2917  00053A  FFFF               	dw	65535	; errata NOP
  2918  00053C  50F5               	movf	tablat,w,c
  2919  00053E  5860               	subwfb	sprintf@val+1,w,c
  2920  000540  0009               	tblrd		*+
  2921  000542  FFFF               	dw	65535	; errata NOP
  2922  000544  50F5               	movf	tablat,w,c
  2923  000546  5861               	subwfb	sprintf@val+2,w,c
  2924  000548  0009               	tblrd		*+
  2925  00054A  FFFF               	dw	65535	; errata NOP
  2926  00054C  50F5               	movf	tablat,w,c
  2927  00054E  5862               	subwfb	sprintf@val+3,w,c
  2928  000550  A0D8               	btfss	status,0,c
  2929  000552  D005               	goto	u4200
  2930  000554  2A73               	incf	sprintf@c,f,c
  2931  000556  0E0A               	movlw	10
  2932  000558  1873               	xorwf	sprintf@c,w,c
  2933  00055A  A4D8               	btfss	status,2,c
  2934  00055C  D7E0               	goto	l3810
  2935  00055E                     u4200:
  2936  00055E  FFFF               	dw	65535	; assembler added errata NOP
  2937                           
  2938                           ;doprnt.c: 1161: width -= prec + c + eexp;
  2939  000560  5073               	movf	sprintf@c,w,c
  2940  000562  2471               	addwf	sprintf@prec,w,c
  2941  000564  6E55               	movwf	??_sprintf& (0+255),c
  2942  000566  0E00               	movlw	0
  2943  000568  2072               	addwfc	sprintf@prec+1,w,c
  2944  00056A  6E56               	movwf	(??_sprintf+1)& (0+255),c
  2945  00056C  5067               	movf	sprintf@eexp,w,c
  2946  00056E  2655               	addwf	??_sprintf,f,c
  2947  000570  5068               	movf	sprintf@eexp+1,w,c
  2948  000572  2256               	addwfc	??_sprintf+1,f,c
  2949  000574  5055               	movf	??_sprintf,w,c
  2950  000576  5E6B               	subwf	sprintf@width,f,c
  2951  000578  5056               	movf	??_sprintf+1,w,c
  2952  00057A  5A6C               	subwfb	sprintf@width+1,f,c
  2953                           
  2954                           ;doprnt.c: 1162: if(;doprnt.c: 1166: prec)
  2955  00057C  5071               	movf	sprintf@prec,w,c
  2956  00057E  1072               	iorwf	sprintf@prec+1,w,c
  2957  000580  B4D8               	btfsc	status,2,c
  2958  000582  D003               	goto	l3822
  2959                           
  2960                           ;doprnt.c: 1167: width--;
  2961  000584  066B               	decf	sprintf@width,f,c
  2962  000586  A0D8               	btfss	status,0,c
  2963  000588  066C               	decf	sprintf@width+1,f,c
  2964  00058A                     l3822:
  2965  00058A  FFFF               	dw	65535	; assembler added errata NOP
  2966                           
  2967                           ;doprnt.c: 1168: if(flag & 0x03)
  2968  00058C  0E03               	movlw	3
  2969  00058E  1469               	andwf	sprintf@flag,w,c
  2970  000590  6E55               	movwf	??_sprintf& (0+255),c
  2971  000592  0E00               	movlw	0
  2972  000594  146A               	andwf	sprintf@flag+1,w,c
  2973  000596  6E56               	movwf	(??_sprintf+1)& (0+255),c
  2974  000598  5055               	movf	??_sprintf,w,c
  2975  00059A  1056               	iorwf	??_sprintf+1,w,c
  2976  00059C  B4D8               	btfsc	status,2,c
  2977  00059E  D003               	goto	l3826
  2978                           
  2979                           ;doprnt.c: 1169: width--;
  2980  0005A0  066B               	decf	sprintf@width,f,c
  2981  0005A2  A0D8               	btfss	status,0,c
  2982  0005A4  066C               	decf	sprintf@width+1,f,c
  2983  0005A6                     l3826:
  2984  0005A6  FFFF               	dw	65535	; assembler added errata NOP
  2985                           
  2986                           ;doprnt.c: 1172: if(flag & 0x04) {
  2987  0005A8  A469               	btfss	sprintf@flag,2,c
  2988  0005AA  D034               	goto	l3848
  2989                           
  2990                           ;doprnt.c: 1176: if(flag & 0x03)
  2991  0005AC  0E03               	movlw	3
  2992  0005AE  1469               	andwf	sprintf@flag,w,c
  2993  0005B0  6E55               	movwf	??_sprintf& (0+255),c
  2994  0005B2  0E00               	movlw	0
  2995  0005B4  146A               	andwf	sprintf@flag+1,w,c
  2996  0005B6  6E56               	movwf	(??_sprintf+1)& (0+255),c
  2997  0005B8  5055               	movf	??_sprintf,w,c
  2998  0005BA  1056               	iorwf	??_sprintf+1,w,c
  2999  0005BC  B4D8               	btfsc	status,2,c
  3000  0005BE  D015               	goto	l3840
  3001                           
  3002                           ;doprnt.c: 1178: ((*sp++ = ('-')));
  3003  0005C0  C04D  FFD9         	movff	sprintf@sp,fsr2l
  3004  0005C4  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  3005  0005C8  0E2D               	movlw	45
  3006  0005CA  6EDF               	movwf	indf2,c
  3007  0005CC  4A4D               	infsnz	sprintf@sp,f,c
  3008  0005CE  2A4E               	incf	sprintf@sp+1,f,c
  3009  0005D0  D00C               	goto	l3840
  3010  0005D2                     l3834:
  3011  0005D2  FFFF               	dw	65535	; assembler added errata NOP
  3012                           
  3013                           ;doprnt.c: 1188: ((*sp++ = ('0')));
  3014  0005D4  C04D  FFD9         	movff	sprintf@sp,fsr2l
  3015  0005D8  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  3016  0005DC  0E30               	movlw	48
  3017  0005DE  6EDF               	movwf	indf2,c
  3018  0005E0  4A4D               	infsnz	sprintf@sp,f,c
  3019  0005E2  2A4E               	incf	sprintf@sp+1,f,c
  3020                           
  3021                           ;doprnt.c: 1189: width--;
  3022  0005E4  066B               	decf	sprintf@width,f,c
  3023  0005E6  A0D8               	btfss	status,0,c
  3024  0005E8  066C               	decf	sprintf@width+1,f,c
  3025  0005EA                     l3840:
  3026  0005EA  FFFF               	dw	65535	; assembler added errata NOP
  3027  0005EC  BE6C               	btfsc	sprintf@width+1,7,c
  3028  0005EE  D07B               	goto	l3864
  3029  0005F0  506C               	movf	sprintf@width+1,w,c
  3030  0005F2  E1EF               	bnz	l3834
  3031  0005F4  046B               	decf	sprintf@width,w,c
  3032  0005F6  A0D8               	btfss	status,0,c
  3033  0005F8  D076               	goto	l3864
  3034  0005FA  D7EB               	goto	l3834
  3035  0005FC                     l3842:
  3036  0005FC  FFFF               	dw	65535	; assembler added errata NOP
  3037                           
  3038                           ;doprnt.c: 1200: ((*sp++ = (' ')));
  3039  0005FE  C04D  FFD9         	movff	sprintf@sp,fsr2l
  3040  000602  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  3041  000606  0E20               	movlw	32
  3042  000608  6EDF               	movwf	indf2,c
  3043  00060A  4A4D               	infsnz	sprintf@sp,f,c
  3044  00060C  2A4E               	incf	sprintf@sp+1,f,c
  3045                           
  3046                           ;doprnt.c: 1201: width--;
  3047  00060E  066B               	decf	sprintf@width,f,c
  3048  000610  A0D8               	btfss	status,0,c
  3049  000612  066C               	decf	sprintf@width+1,f,c
  3050  000614                     l3848:
  3051  000614  FFFF               	dw	65535	; assembler added errata NOP
  3052  000616  BE6C               	btfsc	sprintf@width+1,7,c
  3053  000618  D005               	goto	u4260
  3054  00061A  506C               	movf	sprintf@width+1,w,c
  3055  00061C  E1EF               	bnz	l3842
  3056  00061E  046B               	decf	sprintf@width,w,c
  3057  000620  B0D8               	btfsc	status,0,c
  3058  000622  D7EC               	goto	l3842
  3059  000624                     u4260:
  3060  000624  FFFF               	dw	65535	; assembler added errata NOP
  3061                           
  3062                           ;doprnt.c: 1202: };doprnt.c: 1207: if(flag & 0x03)
  3063  000626  0E03               	movlw	3
  3064  000628  1469               	andwf	sprintf@flag,w,c
  3065  00062A  6E55               	movwf	??_sprintf& (0+255),c
  3066  00062C  0E00               	movlw	0
  3067  00062E  146A               	andwf	sprintf@flag+1,w,c
  3068  000630  6E56               	movwf	(??_sprintf+1)& (0+255),c
  3069  000632  5055               	movf	??_sprintf,w,c
  3070  000634  1056               	iorwf	??_sprintf+1,w,c
  3071  000636  B4D8               	btfsc	status,2,c
  3072  000638  D056               	goto	l3864
  3073                           
  3074                           ;doprnt.c: 1209: ((*sp++ = ('-')));
  3075  00063A  C04D  FFD9         	movff	sprintf@sp,fsr2l
  3076  00063E  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  3077  000642  0E2D               	movlw	45
  3078  000644  FFFF               	dw	65535	; assembler added errata NOP
  3079  000646  6EDF               	movwf	indf2,c
  3080  000648  4A4D               	infsnz	sprintf@sp,f,c
  3081  00064A  2A4E               	incf	sprintf@sp+1,f,c
  3082  00064C  D04C               	goto	l3864
  3083  00064E                     l3856:
  3084  00064E  FFFF               	dw	65535	; assembler added errata NOP
  3085                           
  3086                           ;doprnt.c: 1219: {;doprnt.c: 1220: tmpval.vd = val/dpowers[c];
  3087  000650  C05F  F001         	movff	sprintf@val,___lldiv@dividend
  3088  000654  C060  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  3089  000658  C061  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  3090  00065C  C062  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  3091  000660  5073               	movf	sprintf@c,w,c
  3092  000662  0D04               	mullw	4
  3093  000664  0E69               	movlw	low _dpowers
  3094  000666  24F3               	addwf	prodl,w,c
  3095  000668  6EF6               	movwf	tblptrl,c
  3096  00066A  0E7E               	movlw	high _dpowers
  3097  00066C  20F4               	addwfc	prodh,w,c
  3098  00066E  6EF7               	movwf	tblptrh,c
  3099  000670                     	if	0	;There are less than 3 active tblptr bytes
  3100  000670                     	endif
  3101  000670  0009               	tblrd		*+
  3102  000672  FFFF               	dw	65535	; errata NOP
  3103  000674  CFF5 F005          	movff	tablat,___lldiv@divisor
  3104  000678  0009               	tblrd		*+
  3105  00067A  FFFF               	dw	65535	; errata NOP
  3106  00067C  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  3107  000680  0009               	tblrd		*+
  3108  000682  FFFF               	dw	65535	; errata NOP
  3109  000684  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  3110  000688  000A               	tblrd		*-
  3111  00068A  FFFF               	dw	65535	; errata NOP
  3112  00068C  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  3113  000690  EC53  F013         	call	___lldiv	;wreg free
  3114  000694  C001  F063         	movff	?___lldiv,sprintf@tmpval
  3115  000698  C002  F064         	movff	?___lldiv+1,sprintf@tmpval+1
  3116  00069C  C003  F065         	movff	?___lldiv+2,sprintf@tmpval+2
  3117  0006A0  C004  F066         	movff	?___lldiv+3,sprintf@tmpval+3
  3118                           
  3119                           ;doprnt.c: 1221: tmpval.vd %= 10;
  3120  0006A4  C063  F001         	movff	sprintf@tmpval,___llmod@dividend
  3121  0006A8  C064  F002         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3122  0006AC  C065  F003         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3123  0006B0  C066  F004         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3124  0006B4  0E0A               	movlw	10
  3125  0006B6  6E05               	movwf	___llmod@divisor,c
  3126  0006B8  0E00               	movlw	0
  3127  0006BA  6E06               	movwf	___llmod@divisor+1,c
  3128  0006BC  0E00               	movlw	0
  3129  0006BE  6E07               	movwf	___llmod@divisor+2,c
  3130  0006C0  0E00               	movlw	0
  3131  0006C2  6E08               	movwf	___llmod@divisor+3,c
  3132  0006C4  ECDD  F013         	call	___llmod	;wreg free
  3133  0006C8  C001  F063         	movff	?___llmod,sprintf@tmpval
  3134  0006CC  C002  F064         	movff	?___llmod+1,sprintf@tmpval+1
  3135  0006D0  C003  F065         	movff	?___llmod+2,sprintf@tmpval+2
  3136  0006D4  C004  F066         	movff	?___llmod+3,sprintf@tmpval+3
  3137                           
  3138                           ;doprnt.c: 1222: ((*sp++ = ('0' + tmpval.vd)));
  3139  0006D8  5063               	movf	sprintf@tmpval,w,c
  3140  0006DA  0F30               	addlw	48
  3141  0006DC  C04D  FFD9         	movff	sprintf@sp,fsr2l
  3142  0006E0  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  3143  0006E4  D7AF               	goto	L5
  3144  0006E6                     l3864:
  3145  0006E6  FFFF               	dw	65535	; assembler added errata NOP
  3146  0006E8  0673               	decf	sprintf@c,f,c
  3147  0006EA  2873               	incf	sprintf@c,w,c
  3148  0006EC  B4D8               	btfsc	status,2,c
  3149  0006EE  D00D               	goto	l3872
  3150  0006F0  D7AE               	goto	l3856
  3151  0006F2                     l3866:
  3152  0006F2  FFFF               	dw	65535	; assembler added errata NOP
  3153                           
  3154                           ;doprnt.c: 1227: ((*sp++ = ('0')));
  3155  0006F4  C04D  FFD9         	movff	sprintf@sp,fsr2l
  3156  0006F8  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  3157  0006FC  0E30               	movlw	48
  3158  0006FE  6EDF               	movwf	indf2,c
  3159  000700  4A4D               	infsnz	sprintf@sp,f,c
  3160  000702  2A4E               	incf	sprintf@sp+1,f,c
  3161                           
  3162                           ;doprnt.c: 1228: eexp--;
  3163  000704  0667               	decf	sprintf@eexp,f,c
  3164  000706  A0D8               	btfss	status,0,c
  3165  000708  0668               	decf	sprintf@eexp+1,f,c
  3166  00070A                     l3872:
  3167  00070A  FFFF               	dw	65535	; assembler added errata NOP
  3168  00070C  BE68               	btfsc	sprintf@eexp+1,7,c
  3169  00070E  D005               	goto	u4290
  3170  000710  5068               	movf	sprintf@eexp+1,w,c
  3171  000712  E1EF               	bnz	l3866
  3172  000714  0467               	decf	sprintf@eexp,w,c
  3173  000716  B0D8               	btfsc	status,0,c
  3174  000718  D7EC               	goto	l3866
  3175  00071A                     u4290:
  3176  00071A  FFFF               	dw	65535	; assembler added errata NOP
  3177                           
  3178                           ;doprnt.c: 1229: };doprnt.c: 1230: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
  3179  00071C  BE72               	btfsc	sprintf@prec+1,7,c
  3180  00071E  D009               	goto	l307
  3181  000720  5072               	movf	sprintf@prec+1,w,c
  3182  000722  E104               	bnz	u4300
  3183  000724  0E09               	movlw	9
  3184  000726  5C71               	subwf	sprintf@prec,w,c
  3185  000728  A0D8               	btfss	status,0,c
  3186  00072A  D003               	goto	l307
  3187  00072C                     u4300:
  3188                           
  3189                           ;doprnt.c: 1231: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3190  00072C  0E08               	movlw	8
  3191  00072E  6E73               	movwf	sprintf@c,c
  3192  000730  D003               	goto	l3878
  3193  000732                     l307:
  3194  000732  FFFF               	dw	65535	; assembler added errata NOP
  3195                           
  3196                           ;doprnt.c: 1232: else;doprnt.c: 1233: c = (char)prec;
  3197  000734  C071  F073         	movff	sprintf@prec,sprintf@c
  3198  000738                     l3878:
  3199  000738  FFFF               	dw	65535	; assembler added errata NOP
  3200                           
  3201                           ;doprnt.c: 1234: prec -= (int)c;
  3202  00073A  5073               	movf	sprintf@c,w,c
  3203  00073C  5E71               	subwf	sprintf@prec,f,c
  3204  00073E  0E00               	movlw	0
  3205  000740  5A72               	subwfb	sprintf@prec+1,f,c
  3206                           
  3207                           ;doprnt.c: 1238: if(c)
  3208  000742  5073               	movf	sprintf@c,w,c
  3209  000744  B4D8               	btfsc	status,2,c
  3210  000746  D008               	goto	l3886
  3211                           
  3212                           ;doprnt.c: 1240: ((*sp++ = ('.')));
  3213  000748  C04D  FFD9         	movff	sprintf@sp,fsr2l
  3214  00074C  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  3215  000750  0E2E               	movlw	46
  3216  000752  6EDF               	movwf	indf2,c
  3217  000754  4A4D               	infsnz	sprintf@sp,f,c
  3218  000756  2A4E               	incf	sprintf@sp+1,f,c
  3219  000758                     l3886:
  3220  000758  FFFF               	dw	65535	; assembler added errata NOP
  3221                           
  3222                           ;doprnt.c: 1246: val = (unsigned long)(fval * scale((signed char)c));
  3223  00075A  5073               	movf	sprintf@c,w,c
  3224  00075C  EC93  F007         	call	_scale
  3225  000760  C028  F059         	movff	?_scale,_sprintf$1084
  3226  000764  C029  F05A         	movff	?_scale+1,_sprintf$1084+1
  3227  000768  C02A  F05B         	movff	?_scale+2,_sprintf$1084+2
  3228  00076C  C02B  F05C         	movff	?_scale+3,_sprintf$1084+3
  3229                           
  3230                           ;doprnt.c: 1246: val = (unsigned long)(fval * scale((signed char)c));
  3231  000770  C06D  F013         	movff	sprintf@fval,___flmul@a
  3232  000774  C06E  F014         	movff	sprintf@fval+1,___flmul@a+1
  3233  000778  C06F  F015         	movff	sprintf@fval+2,___flmul@a+2
  3234  00077C  C070  F016         	movff	sprintf@fval+3,___flmul@a+3
  3235  000780  C059  F00F         	movff	_sprintf$1084,___flmul@b
  3236  000784  C05A  F010         	movff	_sprintf$1084+1,___flmul@b+1
  3237  000788  C05B  F011         	movff	_sprintf$1084+2,___flmul@b+2
  3238  00078C  C05C  F012         	movff	_sprintf$1084+3,___flmul@b+3
  3239  000790  EC9B  F009         	call	___flmul	;wreg free
  3240  000794  C00F  F031         	movff	?___flmul,___fltol@f1
  3241  000798  C010  F032         	movff	?___flmul+1,___fltol@f1+1
  3242  00079C  C011  F033         	movff	?___flmul+2,___fltol@f1+2
  3243  0007A0  C012  F034         	movff	?___flmul+3,___fltol@f1+3
  3244  0007A4  EC52  F012         	call	___fltol	;wreg free
  3245  0007A8  C031  F05F         	movff	?___fltol,sprintf@val
  3246  0007AC  C032  F060         	movff	?___fltol+1,sprintf@val+1
  3247  0007B0  C033  F061         	movff	?___fltol+2,sprintf@val+2
  3248  0007B4  C034  F062         	movff	?___fltol+3,sprintf@val+3
  3249                           
  3250                           ;doprnt.c: 1247: while(c--) {
  3251  0007B8  D078               	goto	l3900
  3252  0007BA                     l3890:
  3253  0007BA  FFFF               	dw	65535	; assembler added errata NOP
  3254                           
  3255                           ;doprnt.c: 1248: tmpval.vd = val/dpowers[c];
  3256  0007BC  C05F  F001         	movff	sprintf@val,___lldiv@dividend
  3257  0007C0  C060  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  3258  0007C4  C061  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  3259  0007C8  C062  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  3260  0007CC  5073               	movf	sprintf@c,w,c
  3261  0007CE  0D04               	mullw	4
  3262  0007D0  0E69               	movlw	low _dpowers
  3263  0007D2  24F3               	addwf	prodl,w,c
  3264  0007D4  6EF6               	movwf	tblptrl,c
  3265  0007D6  0E7E               	movlw	high _dpowers
  3266  0007D8  20F4               	addwfc	prodh,w,c
  3267  0007DA  6EF7               	movwf	tblptrh,c
  3268  0007DC                     	if	0	;There are less than 3 active tblptr bytes
  3269  0007DC                     	endif
  3270  0007DC  0009               	tblrd		*+
  3271  0007DE  FFFF               	dw	65535	; errata NOP
  3272  0007E0  CFF5 F005          	movff	tablat,___lldiv@divisor
  3273  0007E4  0009               	tblrd		*+
  3274  0007E6  FFFF               	dw	65535	; errata NOP
  3275  0007E8  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  3276  0007EC  0009               	tblrd		*+
  3277  0007EE  FFFF               	dw	65535	; errata NOP
  3278  0007F0  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  3279  0007F4  000A               	tblrd		*-
  3280  0007F6  FFFF               	dw	65535	; errata NOP
  3281  0007F8  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  3282  0007FC  EC53  F013         	call	___lldiv	;wreg free
  3283  000800  C001  F063         	movff	?___lldiv,sprintf@tmpval
  3284  000804  C002  F064         	movff	?___lldiv+1,sprintf@tmpval+1
  3285  000808  C003  F065         	movff	?___lldiv+2,sprintf@tmpval+2
  3286  00080C  C004  F066         	movff	?___lldiv+3,sprintf@tmpval+3
  3287                           
  3288                           ;doprnt.c: 1249: tmpval.vd %= 10;
  3289  000810  C063  F001         	movff	sprintf@tmpval,___llmod@dividend
  3290  000814  C064  F002         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3291  000818  C065  F003         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3292  00081C  C066  F004         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3293  000820  0E0A               	movlw	10
  3294  000822  6E05               	movwf	___llmod@divisor,c
  3295  000824  0E00               	movlw	0
  3296  000826  6E06               	movwf	___llmod@divisor+1,c
  3297  000828  0E00               	movlw	0
  3298  00082A  6E07               	movwf	___llmod@divisor+2,c
  3299  00082C  0E00               	movlw	0
  3300  00082E  6E08               	movwf	___llmod@divisor+3,c
  3301  000830  ECDD  F013         	call	___llmod	;wreg free
  3302  000834  C001  F063         	movff	?___llmod,sprintf@tmpval
  3303  000838  C002  F064         	movff	?___llmod+1,sprintf@tmpval+1
  3304  00083C  C003  F065         	movff	?___llmod+2,sprintf@tmpval+2
  3305  000840  C004  F066         	movff	?___llmod+3,sprintf@tmpval+3
  3306                           
  3307                           ;doprnt.c: 1250: ((*sp++ = ('0' + tmpval.vd)));
  3308  000844  5063               	movf	sprintf@tmpval,w,c
  3309  000846  0F30               	addlw	48
  3310  000848  C04D  FFD9         	movff	sprintf@sp,fsr2l
  3311  00084C  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  3312  000850  6EDF               	movwf	indf2,c
  3313  000852  4A4D               	infsnz	sprintf@sp,f,c
  3314  000854  2A4E               	incf	sprintf@sp+1,f,c
  3315                           
  3316                           ;doprnt.c: 1251: val %= dpowers[c];
  3317  000856  C05F  F001         	movff	sprintf@val,___llmod@dividend
  3318  00085A  C060  F002         	movff	sprintf@val+1,___llmod@dividend+1
  3319  00085E  C061  F003         	movff	sprintf@val+2,___llmod@dividend+2
  3320  000862  C062  F004         	movff	sprintf@val+3,___llmod@dividend+3
  3321  000866  5073               	movf	sprintf@c,w,c
  3322  000868  0D04               	mullw	4
  3323  00086A  0E69               	movlw	low _dpowers
  3324  00086C  24F3               	addwf	prodl,w,c
  3325  00086E  6EF6               	movwf	tblptrl,c
  3326  000870  0E7E               	movlw	high _dpowers
  3327  000872  20F4               	addwfc	prodh,w,c
  3328  000874  6EF7               	movwf	tblptrh,c
  3329  000876                     	if	0	;There are less than 3 active tblptr bytes
  3330  000876                     	endif
  3331  000876  0009               	tblrd		*+
  3332  000878  FFFF               	dw	65535	; errata NOP
  3333  00087A  CFF5 F005          	movff	tablat,___llmod@divisor
  3334  00087E  0009               	tblrd		*+
  3335  000880  FFFF               	dw	65535	; errata NOP
  3336  000882  CFF5 F006          	movff	tablat,___llmod@divisor+1
  3337  000886  0009               	tblrd		*+
  3338  000888  FFFF               	dw	65535	; errata NOP
  3339  00088A  CFF5 F007          	movff	tablat,___llmod@divisor+2
  3340  00088E  000A               	tblrd		*-
  3341  000890  FFFF               	dw	65535	; errata NOP
  3342  000892  CFF5 F008          	movff	tablat,___llmod@divisor+3
  3343  000896  ECDD  F013         	call	___llmod	;wreg free
  3344  00089A  C001  F05F         	movff	?___llmod,sprintf@val
  3345  00089E  C002  F060         	movff	?___llmod+1,sprintf@val+1
  3346  0008A2  C003  F061         	movff	?___llmod+2,sprintf@val+2
  3347  0008A6  C004  F062         	movff	?___llmod+3,sprintf@val+3
  3348  0008AA                     l3900:
  3349  0008AA  FFFF               	dw	65535	; assembler added errata NOP
  3350  0008AC  0673               	decf	sprintf@c,f,c
  3351  0008AE  2873               	incf	sprintf@c,w,c
  3352  0008B0  B4D8               	btfsc	status,2,c
  3353  0008B2  D00D               	goto	l3908
  3354  0008B4  D782               	goto	l3890
  3355  0008B6                     l3902:
  3356  0008B6  FFFF               	dw	65535	; assembler added errata NOP
  3357                           
  3358                           ;doprnt.c: 1255: ((*sp++ = ('0')));
  3359  0008B8  C04D  FFD9         	movff	sprintf@sp,fsr2l
  3360  0008BC  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  3361  0008C0  0E30               	movlw	48
  3362  0008C2  6EDF               	movwf	indf2,c
  3363  0008C4  4A4D               	infsnz	sprintf@sp,f,c
  3364  0008C6  2A4E               	incf	sprintf@sp+1,f,c
  3365                           
  3366                           ;doprnt.c: 1256: prec--;
  3367  0008C8  0671               	decf	sprintf@prec,f,c
  3368  0008CA  A0D8               	btfss	status,0,c
  3369  0008CC  0672               	decf	sprintf@prec+1,f,c
  3370  0008CE                     l3908:
  3371  0008CE  FFFF               	dw	65535	; assembler added errata NOP
  3372  0008D0  5071               	movf	sprintf@prec,w,c
  3373  0008D2  1072               	iorwf	sprintf@prec+1,w,c
  3374  0008D4  B4D8               	btfsc	status,2,c
  3375  0008D6  D0BF               	goto	l3974
  3376  0008D8  D7EE               	goto	l3902
  3377  0008DA                     l3910:
  3378  0008DA  FFFF               	dw	65535	; assembler added errata NOP
  3379                           
  3380                           ;doprnt.c: 1265: };doprnt.c: 1309: if(prec == 0 && val == 0)
  3381  0008DC  5071               	movf	sprintf@prec,w,c
  3382  0008DE  1072               	iorwf	sprintf@prec+1,w,c
  3383  0008E0  A4D8               	btfss	status,2,c
  3384  0008E2  D008               	goto	l3916
  3385  0008E4  505F               	movf	sprintf@val,w,c
  3386  0008E6  1060               	iorwf	sprintf@val+1,w,c
  3387  0008E8  1061               	iorwf	sprintf@val+2,w,c
  3388  0008EA  1062               	iorwf	sprintf@val+3,w,c
  3389  0008EC  A4D8               	btfss	status,2,c
  3390  0008EE  D002               	goto	l3916
  3391                           
  3392                           ;doprnt.c: 1310: prec++;
  3393  0008F0  4A71               	infsnz	sprintf@prec,f,c
  3394  0008F2  2A72               	incf	sprintf@prec+1,f,c
  3395  0008F4                     l3916:
  3396  0008F4  FFFF               	dw	65535	; assembler added errata NOP
  3397                           
  3398                           ;doprnt.c: 1358: if(c < prec)
  3399  0008F6  5073               	movf	sprintf@c,w,c
  3400  0008F8  6E55               	movwf	??_sprintf& (0+255),c
  3401  0008FA  6A56               	clrf	(??_sprintf+1)& (0+255),c
  3402  0008FC  5071               	movf	sprintf@prec,w,c
  3403  0008FE  5C55               	subwf	??_sprintf,w,c
  3404  000900  5056               	movf	??_sprintf+1,w,c
  3405  000902  0A80               	xorlw	128
  3406  000904  6E57               	movwf	(??_sprintf+2)& (0+255),c
  3407  000906  5072               	movf	sprintf@prec+1,w,c
  3408  000908  0A80               	xorlw	128
  3409  00090A  5857               	subwfb	(??_sprintf+2)& (0+255),w,c
  3410  00090C  B0D8               	btfsc	status,0,c
  3411  00090E  D003               	goto	l3920
  3412                           
  3413                           ;doprnt.c: 1359: c = prec;
  3414  000910  C071  F073         	movff	sprintf@prec,sprintf@c
  3415  000914  D011               	goto	l3924
  3416  000916                     l3920:
  3417  000916  FFFF               	dw	65535	; assembler added errata NOP
  3418                           
  3419                           ;doprnt.c: 1360: else if(prec < c)
  3420  000918  5073               	movf	sprintf@c,w,c
  3421  00091A  6E55               	movwf	??_sprintf& (0+255),c
  3422  00091C  6A56               	clrf	(??_sprintf+1)& (0+255),c
  3423  00091E  5055               	movf	??_sprintf,w,c
  3424  000920  5C71               	subwf	sprintf@prec,w,c
  3425  000922  5072               	movf	sprintf@prec+1,w,c
  3426  000924  0A80               	xorlw	128
  3427  000926  6E57               	movwf	(??_sprintf+2)& (0+255),c
  3428  000928  5056               	movf	??_sprintf+1,w,c
  3429  00092A  0A80               	xorlw	128
  3430  00092C  5857               	subwfb	(??_sprintf+2)& (0+255),w,c
  3431  00092E  B0D8               	btfsc	status,0,c
  3432  000930  D003               	goto	l3924
  3433                           
  3434                           ;doprnt.c: 1361: prec = c;
  3435  000932  C073  F071         	movff	sprintf@c,sprintf@prec
  3436  000936  6A72               	clrf	sprintf@prec+1,c
  3437  000938                     l3924:
  3438  000938  FFFF               	dw	65535	; assembler added errata NOP
  3439                           
  3440                           ;doprnt.c: 1364: if(width && flag & 0x03)
  3441  00093A  506B               	movf	sprintf@width,w,c
  3442  00093C  106C               	iorwf	sprintf@width+1,w,c
  3443  00093E  B4D8               	btfsc	status,2,c
  3444  000940  D00D               	goto	l3930
  3445  000942  0E03               	movlw	3
  3446  000944  1469               	andwf	sprintf@flag,w,c
  3447  000946  6E55               	movwf	??_sprintf& (0+255),c
  3448  000948  0E00               	movlw	0
  3449  00094A  146A               	andwf	sprintf@flag+1,w,c
  3450  00094C  6E56               	movwf	(??_sprintf+1)& (0+255),c
  3451  00094E  5055               	movf	??_sprintf,w,c
  3452  000950  1056               	iorwf	??_sprintf+1,w,c
  3453  000952  B4D8               	btfsc	status,2,c
  3454  000954  D003               	goto	l3930
  3455                           
  3456                           ;doprnt.c: 1365: width--;
  3457  000956  066B               	decf	sprintf@width,f,c
  3458  000958  A0D8               	btfss	status,0,c
  3459  00095A  066C               	decf	sprintf@width+1,f,c
  3460  00095C                     l3930:
  3461  00095C  FFFF               	dw	65535	; assembler added errata NOP
  3462                           
  3463                           ;doprnt.c: 1367: if(flag & 0x4000) {
  3464  00095E  AC6A               	btfss	sprintf@flag+1,6,c
  3465  000960  D014               	goto	l3938
  3466                           
  3467                           ;doprnt.c: 1368: if(width > prec)
  3468  000962  506B               	movf	sprintf@width,w,c
  3469  000964  5C71               	subwf	sprintf@prec,w,c
  3470  000966  5072               	movf	sprintf@prec+1,w,c
  3471  000968  0A80               	xorlw	128
  3472  00096A  6E55               	movwf	??_sprintf& (0+255),c
  3473  00096C  506C               	movf	sprintf@width+1,w,c
  3474  00096E  0A80               	xorlw	128
  3475  000970  5855               	subwfb	??_sprintf& (0+255),w,c
  3476  000972  B0D8               	btfsc	status,0,c
  3477  000974  D005               	goto	l3936
  3478                           
  3479                           ;doprnt.c: 1369: width -= prec;
  3480  000976  5071               	movf	sprintf@prec,w,c
  3481  000978  5E6B               	subwf	sprintf@width,f,c
  3482  00097A  5072               	movf	sprintf@prec+1,w,c
  3483  00097C  5A6C               	subwfb	sprintf@width+1,f,c
  3484  00097E  D005               	goto	l3938
  3485  000980                     l3936:
  3486  000980  FFFF               	dw	65535	; assembler added errata NOP
  3487                           
  3488                           ;doprnt.c: 1370: else;doprnt.c: 1371: width = 0;
  3489  000982  0E00               	movlw	0
  3490  000984  6E6C               	movwf	sprintf@width+1,c
  3491  000986  0E00               	movlw	0
  3492  000988  6E6B               	movwf	sprintf@width,c
  3493  00098A                     l3938:
  3494  00098A  FFFF               	dw	65535	; assembler added errata NOP
  3495                           
  3496                           ;doprnt.c: 1372: };doprnt.c: 1400: if(width > c)
  3497  00098C  5073               	movf	sprintf@c,w,c
  3498  00098E  6E55               	movwf	??_sprintf& (0+255),c
  3499  000990  6A56               	clrf	(??_sprintf+1)& (0+255),c
  3500  000992  506B               	movf	sprintf@width,w,c
  3501  000994  5C55               	subwf	??_sprintf,w,c
  3502  000996  5056               	movf	??_sprintf+1,w,c
  3503  000998  0A80               	xorlw	128
  3504  00099A  6E57               	movwf	(??_sprintf+2)& (0+255),c
  3505  00099C  506C               	movf	sprintf@width+1,w,c
  3506  00099E  0A80               	xorlw	128
  3507  0009A0  5857               	subwfb	(??_sprintf+2)& (0+255),w,c
  3508  0009A2  B0D8               	btfsc	status,0,c
  3509  0009A4  D005               	goto	l3942
  3510                           
  3511                           ;doprnt.c: 1401: width -= c;
  3512  0009A6  5073               	movf	sprintf@c,w,c
  3513  0009A8  5E6B               	subwf	sprintf@width,f,c
  3514  0009AA  0E00               	movlw	0
  3515  0009AC  5A6C               	subwfb	sprintf@width+1,f,c
  3516  0009AE  D005               	goto	l3944
  3517  0009B0                     l3942:
  3518  0009B0  FFFF               	dw	65535	; assembler added errata NOP
  3519                           
  3520                           ;doprnt.c: 1402: else;doprnt.c: 1403: width = 0;
  3521  0009B2  0E00               	movlw	0
  3522  0009B4  6E6C               	movwf	sprintf@width+1,c
  3523  0009B6  0E00               	movlw	0
  3524  0009B8  6E6B               	movwf	sprintf@width,c
  3525  0009BA                     l3944:
  3526  0009BA  FFFF               	dw	65535	; assembler added errata NOP
  3527                           
  3528                           ;doprnt.c: 1406: if(flag & 0x04) {
  3529  0009BC  A469               	btfss	sprintf@flag,2,c
  3530  0009BE  D023               	goto	l3960
  3531                           
  3532                           ;doprnt.c: 1411: if(flag & 0x03)
  3533  0009C0  0E03               	movlw	3
  3534  0009C2  1469               	andwf	sprintf@flag,w,c
  3535  0009C4  6E55               	movwf	??_sprintf& (0+255),c
  3536  0009C6  0E00               	movlw	0
  3537  0009C8  146A               	andwf	sprintf@flag+1,w,c
  3538  0009CA  6E56               	movwf	(??_sprintf+1)& (0+255),c
  3539  0009CC  5055               	movf	??_sprintf,w,c
  3540  0009CE  1056               	iorwf	??_sprintf+1,w,c
  3541  0009D0  B4D8               	btfsc	status,2,c
  3542  0009D2  D008               	goto	l3952
  3543                           
  3544                           ;doprnt.c: 1412: ((*sp++ = ('-')));
  3545  0009D4  C04D  FFD9         	movff	sprintf@sp,fsr2l
  3546  0009D8  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  3547  0009DC  0E2D               	movlw	45
  3548  0009DE  6EDF               	movwf	indf2,c
  3549  0009E0  4A4D               	infsnz	sprintf@sp,f,c
  3550  0009E2  2A4E               	incf	sprintf@sp+1,f,c
  3551  0009E4                     l3952:
  3552  0009E4  FFFF               	dw	65535	; assembler added errata NOP
  3553                           
  3554                           ;doprnt.c: 1434: if(width)
  3555  0009E6  506B               	movf	sprintf@width,w,c
  3556  0009E8  106C               	iorwf	sprintf@width+1,w,c
  3557  0009EA  B4D8               	btfsc	status,2,c
  3558  0009EC  D034               	goto	l3974
  3559                           
  3560                           ;doprnt.c: 1436: ((*sp++ = ('0')));
  3561  0009EE  C04D  FFD9         	movff	sprintf@sp,fsr2l
  3562  0009F2  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  3563  0009F6  0E30               	movlw	48
  3564  0009F8  6EDF               	movwf	indf2,c
  3565  0009FA  4A4D               	infsnz	sprintf@sp,f,c
  3566  0009FC  2A4E               	incf	sprintf@sp+1,f,c
  3567                           
  3568                           ;doprnt.c: 1437: while(--width);
  3569  0009FE  066B               	decf	sprintf@width,f,c
  3570  000A00  A0D8               	btfss	status,0,c
  3571  000A02  066C               	decf	sprintf@width+1,f,c
  3572  000A04  D7EF               	goto	l3952
  3573  000A06                     l3960:
  3574  000A06  FFFF               	dw	65535	; assembler added errata NOP
  3575                           
  3576                           ;doprnt.c: 1441: {;doprnt.c: 1443: if(width;doprnt.c: 1447: )
  3577  000A08  506B               	movf	sprintf@width,w,c
  3578  000A0A  106C               	iorwf	sprintf@width+1,w,c
  3579  000A0C  B4D8               	btfsc	status,2,c
  3580  000A0E  D010               	goto	u4480
  3581  000A10                     u4470:
  3582  000A10  FFFF               	dw	65535	; assembler added errata NOP
  3583                           
  3584                           ;doprnt.c: 1449: ((*sp++ = (' ')));
  3585  000A12  C04D  FFD9         	movff	sprintf@sp,fsr2l
  3586  000A16  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  3587  000A1A  0E20               	movlw	32
  3588  000A1C  6EDF               	movwf	indf2,c
  3589  000A1E  4A4D               	infsnz	sprintf@sp,f,c
  3590  000A20  2A4E               	incf	sprintf@sp+1,f,c
  3591                           
  3592                           ;doprnt.c: 1450: while(--width);
  3593  000A22  066B               	decf	sprintf@width,f,c
  3594  000A24  A0D8               	btfss	status,0,c
  3595  000A26  066C               	decf	sprintf@width+1,f,c
  3596  000A28  506B               	movf	sprintf@width,w,c
  3597  000A2A  106C               	iorwf	sprintf@width+1,w,c
  3598  000A2C  A4D8               	btfss	status,2,c
  3599  000A2E  D7F0               	goto	u4470
  3600  000A30                     u4480:
  3601  000A30  FFFF               	dw	65535	; assembler added errata NOP
  3602                           
  3603                           ;doprnt.c: 1457: if(flag & 0x03)
  3604  000A32  0E03               	movlw	3
  3605  000A34  1469               	andwf	sprintf@flag,w,c
  3606  000A36  6E55               	movwf	??_sprintf& (0+255),c
  3607  000A38  0E00               	movlw	0
  3608  000A3A  146A               	andwf	sprintf@flag+1,w,c
  3609  000A3C  6E56               	movwf	(??_sprintf+1)& (0+255),c
  3610  000A3E  5055               	movf	??_sprintf,w,c
  3611  000A40  1056               	iorwf	??_sprintf+1,w,c
  3612  000A42  B4D8               	btfsc	status,2,c
  3613  000A44  D008               	goto	l3974
  3614                           
  3615                           ;doprnt.c: 1458: ((*sp++ = ('-')));
  3616  000A46  C04D  FFD9         	movff	sprintf@sp,fsr2l
  3617  000A4A  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  3618  000A4E  0E2D               	movlw	45
  3619  000A50  6EDF               	movwf	indf2,c
  3620  000A52  EF23  F000         	goto	l3686
  3621  000A56                     l3974:
  3622  000A56  FFFF               	dw	65535	; assembler added errata NOP
  3623  000A58  C04F  FFF6         	movff	sprintf@f,tblptrl
  3624  000A5C  C050  FFF7         	movff	sprintf@f+1,tblptrh
  3625  000A60  4A4F               	infsnz	sprintf@f,f,c
  3626  000A62  2A50               	incf	sprintf@f+1,f,c
  3627  000A64                     	if	0	;tblptru may be non-zero
  3628  000A64                     	endif
  3629  000A64                     	if	0	;tblptru may be non-zero
  3630  000A64                     	endif
  3631  000A64  0008               	tblrd		*
  3632  000A66  FFFF               	dw	65535	; errata NOP
  3633  000A68  CFF5 F073          	movff	tablat,sprintf@c
  3634  000A6C  5073               	movf	sprintf@c,w,c
  3635  000A6E  A4D8               	btfss	status,2,c
  3636  000A70  EF18  F000         	goto	l3682
  3637  000A74                     u4500:
  3638  000A74  FFFF               	dw	65535	; assembler added errata NOP
  3639                           
  3640                           ;doprnt.c: 1557: *sp = 0;
  3641  000A76  C04D  FFD9         	movff	sprintf@sp,fsr2l
  3642  000A7A  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  3643  000A7E  0E00               	movlw	0
  3644  000A80  6EDF               	movwf	indf2,c
  3645  000A82  0012               	return		;funcret
  3646  000A84  FFFF               	dw	65535	; errata NOP
  3647  000A86                     __end_of_sprintf:
  3648                           	opt callstack 0
  3649                           
  3650 ;; *************** function _scale *****************
  3651 ;; Defined at:
  3652 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  3653 ;; Parameters:    Size  Location     Type
  3654 ;;  scl             1    wreg     char 
  3655 ;; Auto vars:     Size  Location     Type
  3656 ;;  scl             1   47[COMRAM] char 
  3657 ;; Return value:  Size  Location     Type
  3658 ;;                  4   39[COMRAM] char 
  3659 ;; Registers used:
  3660 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3661 ;; Tracked objects:
  3662 ;;		On entry : 0/0
  3663 ;;		On exit  : 0/0
  3664 ;;		Unchanged: 0/0
  3665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3666 ;;      Params:         4       0       0       0       0       0       0
  3667 ;;      Locals:         5       0       0       0       0       0       0
  3668 ;;      Temps:          0       0       0       0       0       0       0
  3669 ;;      Totals:         9       0       0       0       0       0       0
  3670 ;;Total ram usage:        9 bytes
  3671 ;; Hardware stack levels used:    1
  3672 ;; Hardware stack levels required when called:    2
  3673 ;; This function calls:
  3674 ;;		___awdiv
  3675 ;;		___awmod
  3676 ;;		___flmul
  3677 ;; This function is called by:
  3678 ;;		_sprintf
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681                           
  3682                           	psect	text5
  3683  000F26                     __ptext5:
  3684                           	opt callstack 0
  3685  000F26                     _scale:
  3686                           	opt callstack 0
  3687  000F26  FFFF               	dw	65535	; assembler added errata NOP
  3688                           
  3689                           ;incstack = 0
  3690                           ;scale@scl stored from wreg
  3691  000F28  6E30               	movwf	scale@scl,c
  3692                           
  3693                           ;doprnt.c: 436: if(scl < 0) {
  3694  000F2A  AE30               	btfss	scale@scl,7,c
  3695  000F2C  D0FB               	goto	l3180
  3696                           
  3697                           ;doprnt.c: 437: scl = -scl;
  3698  000F2E  6C30               	negf	scale@scl,c
  3699                           
  3700                           ;doprnt.c: 438: if(scl>=110)
  3701  000F30  5030               	movf	scale@scl,w,c
  3702  000F32  0A80               	xorlw	128
  3703  000F34  0F12               	addlw	-238
  3704  000F36  A0D8               	btfss	status,0,c
  3705  000F38  D08C               	goto	l3170
  3706                           
  3707                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3708  000F3A  0E00               	movlw	0
  3709  000F3C  6E0A               	movwf	___awdiv@divisor+1,c
  3710  000F3E  0E0A               	movlw	10
  3711  000F40  6E09               	movwf	___awdiv@divisor,c
  3712  000F42  0E00               	movlw	0
  3713  000F44  6E04               	movwf	___awmod@divisor+1,c
  3714  000F46  0E64               	movlw	100
  3715  000F48  6E03               	movwf	___awmod@divisor,c
  3716  000F4A  5030               	movf	scale@scl,w,c
  3717  000F4C  6E01               	movwf	___awmod@dividend,c
  3718  000F4E  6A02               	clrf	___awmod@dividend+1,c
  3719  000F50  BE01               	btfsc	___awmod@dividend,7,c
  3720  000F52  0602               	decf	___awmod@dividend+1,f,c
  3721  000F54  EC9B  F013         	call	___awmod	;wreg free
  3722  000F58  C001  F007         	movff	?___awmod,___awdiv@dividend
  3723  000F5C  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  3724  000F60  ECBC  F012         	call	___awdiv	;wreg free
  3725  000F64  0E09               	movlw	9
  3726  000F66  2607               	addwf	?___awdiv,f,c
  3727  000F68  5007               	movf	?___awdiv,w,c
  3728  000F6A  0D04               	mullw	4
  3729  000F6C  0E35               	movlw	low __npowers_
  3730  000F6E  24F3               	addwf	prodl,w,c
  3731  000F70  6EF6               	movwf	tblptrl,c
  3732  000F72  0E7E               	movlw	high __npowers_
  3733  000F74  20F4               	addwfc	prodh,w,c
  3734  000F76  6EF7               	movwf	tblptrh,c
  3735  000F78                     	if	0	;There are less than 3 active tblptr bytes
  3736  000F78                     	endif
  3737  000F78  0009               	tblrd		*+
  3738  000F7A  FFFF               	dw	65535	; errata NOP
  3739  000F7C  CFF5 F013          	movff	tablat,___flmul@a
  3740  000F80  0009               	tblrd		*+
  3741  000F82  FFFF               	dw	65535	; errata NOP
  3742  000F84  CFF5 F014          	movff	tablat,___flmul@a+1
  3743  000F88  0009               	tblrd		*+
  3744  000F8A  FFFF               	dw	65535	; errata NOP
  3745  000F8C  CFF5 F015          	movff	tablat,___flmul@a+2
  3746  000F90  000A               	tblrd		*-
  3747  000F92  FFFF               	dw	65535	; errata NOP
  3748  000F94  CFF5 F016          	movff	tablat,___flmul@a+3
  3749  000F98  0E00               	movlw	0
  3750  000F9A  6E0A               	movwf	___awdiv@divisor+1,c
  3751  000F9C  0E64               	movlw	100
  3752  000F9E  6E09               	movwf	___awdiv@divisor,c
  3753  000FA0  5030               	movf	scale@scl,w,c
  3754  000FA2  6E07               	movwf	___awdiv@dividend,c
  3755  000FA4  6A08               	clrf	___awdiv@dividend+1,c
  3756  000FA6  BE07               	btfsc	___awdiv@dividend,7,c
  3757  000FA8  0608               	decf	___awdiv@dividend+1,f,c
  3758  000FAA  ECBC  F012         	call	___awdiv	;wreg free
  3759  000FAE  0E12               	movlw	18
  3760  000FB0  2607               	addwf	?___awdiv,f,c
  3761  000FB2  5007               	movf	?___awdiv,w,c
  3762  000FB4  0D04               	mullw	4
  3763  000FB6  0E35               	movlw	low __npowers_
  3764  000FB8  24F3               	addwf	prodl,w,c
  3765  000FBA  6EF6               	movwf	tblptrl,c
  3766  000FBC  0E7E               	movlw	high __npowers_
  3767  000FBE  20F4               	addwfc	prodh,w,c
  3768  000FC0  6EF7               	movwf	tblptrh,c
  3769  000FC2                     	if	0	;There are less than 3 active tblptr bytes
  3770  000FC2                     	endif
  3771  000FC2  0009               	tblrd		*+
  3772  000FC4  FFFF               	dw	65535	; errata NOP
  3773  000FC6  CFF5 F00F          	movff	tablat,___flmul@b
  3774  000FCA  0009               	tblrd		*+
  3775  000FCC  FFFF               	dw	65535	; errata NOP
  3776  000FCE  CFF5 F010          	movff	tablat,___flmul@b+1
  3777  000FD2  0009               	tblrd		*+
  3778  000FD4  FFFF               	dw	65535	; errata NOP
  3779  000FD6  CFF5 F011          	movff	tablat,___flmul@b+2
  3780  000FDA  000A               	tblrd		*-
  3781  000FDC  FFFF               	dw	65535	; errata NOP
  3782  000FDE  CFF5 F012          	movff	tablat,___flmul@b+3
  3783  000FE2  EC9B  F009         	call	___flmul	;wreg free
  3784  000FE6  C00F  F02C         	movff	?___flmul,_scale$1083
  3785  000FEA  C010  F02D         	movff	?___flmul+1,_scale$1083+1
  3786  000FEE  C011  F02E         	movff	?___flmul+2,_scale$1083+2
  3787  000FF2  C012  F02F         	movff	?___flmul+3,_scale$1083+3
  3788                           
  3789                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3790  000FF6  C02C  F00F         	movff	_scale$1083,___flmul@b
  3791  000FFA  C02D  F010         	movff	_scale$1083+1,___flmul@b+1
  3792  000FFE  C02E  F011         	movff	_scale$1083+2,___flmul@b+2
  3793  001002  C02F  F012         	movff	_scale$1083+3,___flmul@b+3
  3794  001006  0E00               	movlw	0
  3795  001008  6E04               	movwf	___awmod@divisor+1,c
  3796  00100A  0E0A               	movlw	10
  3797  00100C  6E03               	movwf	___awmod@divisor,c
  3798  00100E  5030               	movf	scale@scl,w,c
  3799  001010  6E01               	movwf	___awmod@dividend,c
  3800  001012  6A02               	clrf	___awmod@dividend+1,c
  3801  001014  BE01               	btfsc	___awmod@dividend,7,c
  3802  001016  0602               	decf	___awmod@dividend+1,f,c
  3803  001018  EC9B  F013         	call	___awmod	;wreg free
  3804  00101C  5001               	movf	?___awmod,w,c
  3805  00101E  0D04               	mullw	4
  3806  001020  0E35               	movlw	low __npowers_
  3807  001022  24F3               	addwf	prodl,w,c
  3808  001024  6EF6               	movwf	tblptrl,c
  3809  001026  0E7E               	movlw	high __npowers_
  3810  001028  20F4               	addwfc	prodh,w,c
  3811  00102A  6EF7               	movwf	tblptrh,c
  3812  00102C                     	if	0	;There are less than 3 active tblptr bytes
  3813  00102C                     	endif
  3814  00102C  0009               	tblrd		*+
  3815  00102E  FFFF               	dw	65535	; errata NOP
  3816  001030  CFF5 F013          	movff	tablat,___flmul@a
  3817  001034  0009               	tblrd		*+
  3818  001036  FFFF               	dw	65535	; errata NOP
  3819  001038  CFF5 F014          	movff	tablat,___flmul@a+1
  3820  00103C  0009               	tblrd		*+
  3821  00103E  FFFF               	dw	65535	; errata NOP
  3822  001040  CFF5 F015          	movff	tablat,___flmul@a+2
  3823  001044  000A               	tblrd		*-
  3824  001046  FFFF               	dw	65535	; errata NOP
  3825  001048  CFF5 F016          	movff	tablat,___flmul@a+3
  3826  00104C  EC9B  F009         	call	___flmul	;wreg free
  3827  001050  D14B               	goto	L9
  3828  001052                     l3170:
  3829  001052  FFFF               	dw	65535	; assembler added errata NOP
  3830                           
  3831                           ;doprnt.c: 440: else if(scl > 10)
  3832  001054  5030               	movf	scale@scl,w,c
  3833  001056  0A80               	xorlw	128
  3834  001058  0F75               	addlw	-139
  3835  00105A  A0D8               	btfss	status,0,c
  3836  00105C  D04B               	goto	l3176
  3837                           
  3838                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  3839  00105E  0E00               	movlw	0
  3840  001060  6E0A               	movwf	___awdiv@divisor+1,c
  3841  001062  0E0A               	movlw	10
  3842  001064  6E09               	movwf	___awdiv@divisor,c
  3843  001066  5030               	movf	scale@scl,w,c
  3844  001068  6E07               	movwf	___awdiv@dividend,c
  3845  00106A  6A08               	clrf	___awdiv@dividend+1,c
  3846  00106C  BE07               	btfsc	___awdiv@dividend,7,c
  3847  00106E  0608               	decf	___awdiv@dividend+1,f,c
  3848  001070  ECBC  F012         	call	___awdiv	;wreg free
  3849  001074  0E09               	movlw	9
  3850  001076  2607               	addwf	?___awdiv,f,c
  3851  001078  5007               	movf	?___awdiv,w,c
  3852  00107A  0D04               	mullw	4
  3853  00107C  0E35               	movlw	low __npowers_
  3854  00107E  24F3               	addwf	prodl,w,c
  3855  001080  6EF6               	movwf	tblptrl,c
  3856  001082  0E7E               	movlw	high __npowers_
  3857  001084  20F4               	addwfc	prodh,w,c
  3858  001086  6EF7               	movwf	tblptrh,c
  3859  001088                     	if	0	;There are less than 3 active tblptr bytes
  3860  001088                     	endif
  3861  001088  0009               	tblrd		*+
  3862  00108A  FFFF               	dw	65535	; errata NOP
  3863  00108C  CFF5 F00F          	movff	tablat,___flmul@b
  3864  001090  0009               	tblrd		*+
  3865  001092  FFFF               	dw	65535	; errata NOP
  3866  001094  CFF5 F010          	movff	tablat,___flmul@b+1
  3867  001098  0009               	tblrd		*+
  3868  00109A  FFFF               	dw	65535	; errata NOP
  3869  00109C  CFF5 F011          	movff	tablat,___flmul@b+2
  3870  0010A0  000A               	tblrd		*-
  3871  0010A2  FFFF               	dw	65535	; errata NOP
  3872  0010A4  CFF5 F012          	movff	tablat,___flmul@b+3
  3873  0010A8  0E00               	movlw	0
  3874  0010AA  6E04               	movwf	___awmod@divisor+1,c
  3875  0010AC  0E0A               	movlw	10
  3876  0010AE  6E03               	movwf	___awmod@divisor,c
  3877  0010B0  5030               	movf	scale@scl,w,c
  3878  0010B2  6E01               	movwf	___awmod@dividend,c
  3879  0010B4  6A02               	clrf	___awmod@dividend+1,c
  3880  0010B6  BE01               	btfsc	___awmod@dividend,7,c
  3881  0010B8  0602               	decf	___awmod@dividend+1,f,c
  3882  0010BA  EC9B  F013         	call	___awmod	;wreg free
  3883  0010BE  5001               	movf	?___awmod,w,c
  3884  0010C0  0D04               	mullw	4
  3885  0010C2  0E35               	movlw	low __npowers_
  3886  0010C4  24F3               	addwf	prodl,w,c
  3887  0010C6  6EF6               	movwf	tblptrl,c
  3888  0010C8  0E7E               	movlw	high __npowers_
  3889  0010CA  20F4               	addwfc	prodh,w,c
  3890  0010CC  6EF7               	movwf	tblptrh,c
  3891  0010CE                     	if	0	;There are less than 3 active tblptr bytes
  3892  0010CE                     	endif
  3893  0010CE  0009               	tblrd		*+
  3894  0010D0  FFFF               	dw	65535	; errata NOP
  3895  0010D2  CFF5 F013          	movff	tablat,___flmul@a
  3896  0010D6  0009               	tblrd		*+
  3897  0010D8  FFFF               	dw	65535	; errata NOP
  3898  0010DA  CFF5 F014          	movff	tablat,___flmul@a+1
  3899  0010DE  0009               	tblrd		*+
  3900  0010E0  FFFF               	dw	65535	; errata NOP
  3901  0010E2  CFF5 F015          	movff	tablat,___flmul@a+2
  3902  0010E6  000A               	tblrd		*-
  3903  0010E8  FFFF               	dw	65535	; errata NOP
  3904  0010EA  CFF5 F016          	movff	tablat,___flmul@a+3
  3905  0010EE  EC9B  F009         	call	___flmul	;wreg free
  3906  0010F2  D0FA               	goto	L9
  3907  0010F4                     l3176:
  3908  0010F4  FFFF               	dw	65535	; assembler added errata NOP
  3909                           
  3910                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  3911  0010F6  5030               	movf	scale@scl,w,c
  3912  0010F8  0D04               	mullw	4
  3913  0010FA  0E35               	movlw	low __npowers_
  3914  0010FC  24F3               	addwf	prodl,w,c
  3915  0010FE  6EF6               	movwf	tblptrl,c
  3916  001100  0E7E               	movlw	high __npowers_
  3917  001102  20F4               	addwfc	prodh,w,c
  3918  001104  6EF7               	movwf	tblptrh,c
  3919  001106                     	if	0	;There are less than 3 active tblptr bytes
  3920  001106                     	endif
  3921  001106  0009               	tblrd		*+
  3922  001108  FFFF               	dw	65535	; errata NOP
  3923  00110A  CFF5 F028          	movff	tablat,?_scale
  3924  00110E  0009               	tblrd		*+
  3925  001110  FFFF               	dw	65535	; errata NOP
  3926  001112  CFF5 F029          	movff	tablat,?_scale+1
  3927  001116  0009               	tblrd		*+
  3928  001118  FFFF               	dw	65535	; errata NOP
  3929  00111A  CFF5 F02A          	movff	tablat,?_scale+2
  3930  00111E  000A               	tblrd		*-
  3931  001120  FFFF               	dw	65535	; errata NOP
  3932  001122  D103               	goto	L8
  3933  001124                     l3180:
  3934  001124  FFFF               	dw	65535	; assembler added errata NOP
  3935                           
  3936                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  3937  001126  5030               	movf	scale@scl,w,c
  3938  001128  0A80               	xorlw	128
  3939  00112A  0F12               	addlw	-238
  3940  00112C  A0D8               	btfss	status,0,c
  3941  00112E  D08C               	goto	l3188
  3942                           
  3943                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  3944  001130  0E00               	movlw	0
  3945  001132  6E0A               	movwf	___awdiv@divisor+1,c
  3946  001134  0E0A               	movlw	10
  3947  001136  6E09               	movwf	___awdiv@divisor,c
  3948  001138  0E00               	movlw	0
  3949  00113A  6E04               	movwf	___awmod@divisor+1,c
  3950  00113C  0E64               	movlw	100
  3951  00113E  6E03               	movwf	___awmod@divisor,c
  3952  001140  5030               	movf	scale@scl,w,c
  3953  001142  6E01               	movwf	___awmod@dividend,c
  3954  001144  6A02               	clrf	___awmod@dividend+1,c
  3955  001146  BE01               	btfsc	___awmod@dividend,7,c
  3956  001148  0602               	decf	___awmod@dividend+1,f,c
  3957  00114A  EC9B  F013         	call	___awmod	;wreg free
  3958  00114E  C001  F007         	movff	?___awmod,___awdiv@dividend
  3959  001152  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  3960  001156  ECBC  F012         	call	___awdiv	;wreg free
  3961  00115A  0E09               	movlw	9
  3962  00115C  2607               	addwf	?___awdiv,f,c
  3963  00115E  5007               	movf	?___awdiv,w,c
  3964  001160  0D04               	mullw	4
  3965  001162  0E01               	movlw	low __powers_
  3966  001164  24F3               	addwf	prodl,w,c
  3967  001166  6EF6               	movwf	tblptrl,c
  3968  001168  0E7E               	movlw	high __powers_
  3969  00116A  20F4               	addwfc	prodh,w,c
  3970  00116C  6EF7               	movwf	tblptrh,c
  3971  00116E                     	if	0	;There are less than 3 active tblptr bytes
  3972  00116E                     	endif
  3973  00116E  0009               	tblrd		*+
  3974  001170  FFFF               	dw	65535	; errata NOP
  3975  001172  CFF5 F013          	movff	tablat,___flmul@a
  3976  001176  0009               	tblrd		*+
  3977  001178  FFFF               	dw	65535	; errata NOP
  3978  00117A  CFF5 F014          	movff	tablat,___flmul@a+1
  3979  00117E  0009               	tblrd		*+
  3980  001180  FFFF               	dw	65535	; errata NOP
  3981  001182  CFF5 F015          	movff	tablat,___flmul@a+2
  3982  001186  000A               	tblrd		*-
  3983  001188  FFFF               	dw	65535	; errata NOP
  3984  00118A  CFF5 F016          	movff	tablat,___flmul@a+3
  3985  00118E  0E00               	movlw	0
  3986  001190  6E0A               	movwf	___awdiv@divisor+1,c
  3987  001192  0E64               	movlw	100
  3988  001194  6E09               	movwf	___awdiv@divisor,c
  3989  001196  5030               	movf	scale@scl,w,c
  3990  001198  6E07               	movwf	___awdiv@dividend,c
  3991  00119A  6A08               	clrf	___awdiv@dividend+1,c
  3992  00119C  BE07               	btfsc	___awdiv@dividend,7,c
  3993  00119E  0608               	decf	___awdiv@dividend+1,f,c
  3994  0011A0  ECBC  F012         	call	___awdiv	;wreg free
  3995  0011A4  0E12               	movlw	18
  3996  0011A6  2607               	addwf	?___awdiv,f,c
  3997  0011A8  5007               	movf	?___awdiv,w,c
  3998  0011AA  0D04               	mullw	4
  3999  0011AC  0E01               	movlw	low __powers_
  4000  0011AE  24F3               	addwf	prodl,w,c
  4001  0011B0  6EF6               	movwf	tblptrl,c
  4002  0011B2  0E7E               	movlw	high __powers_
  4003  0011B4  20F4               	addwfc	prodh,w,c
  4004  0011B6  6EF7               	movwf	tblptrh,c
  4005  0011B8                     	if	0	;There are less than 3 active tblptr bytes
  4006  0011B8                     	endif
  4007  0011B8  0009               	tblrd		*+
  4008  0011BA  FFFF               	dw	65535	; errata NOP
  4009  0011BC  CFF5 F00F          	movff	tablat,___flmul@b
  4010  0011C0  0009               	tblrd		*+
  4011  0011C2  FFFF               	dw	65535	; errata NOP
  4012  0011C4  CFF5 F010          	movff	tablat,___flmul@b+1
  4013  0011C8  0009               	tblrd		*+
  4014  0011CA  FFFF               	dw	65535	; errata NOP
  4015  0011CC  CFF5 F011          	movff	tablat,___flmul@b+2
  4016  0011D0  000A               	tblrd		*-
  4017  0011D2  FFFF               	dw	65535	; errata NOP
  4018  0011D4  CFF5 F012          	movff	tablat,___flmul@b+3
  4019  0011D8  EC9B  F009         	call	___flmul	;wreg free
  4020  0011DC  C00F  F02C         	movff	?___flmul,_scale$1083
  4021  0011E0  C010  F02D         	movff	?___flmul+1,_scale$1083+1
  4022  0011E4  C011  F02E         	movff	?___flmul+2,_scale$1083+2
  4023  0011E8  C012  F02F         	movff	?___flmul+3,_scale$1083+3
  4024                           
  4025                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  4026  0011EC  C02C  F00F         	movff	_scale$1083,___flmul@b
  4027  0011F0  C02D  F010         	movff	_scale$1083+1,___flmul@b+1
  4028  0011F4  C02E  F011         	movff	_scale$1083+2,___flmul@b+2
  4029  0011F8  C02F  F012         	movff	_scale$1083+3,___flmul@b+3
  4030  0011FC  0E00               	movlw	0
  4031  0011FE  6E04               	movwf	___awmod@divisor+1,c
  4032  001200  0E0A               	movlw	10
  4033  001202  6E03               	movwf	___awmod@divisor,c
  4034  001204  5030               	movf	scale@scl,w,c
  4035  001206  6E01               	movwf	___awmod@dividend,c
  4036  001208  6A02               	clrf	___awmod@dividend+1,c
  4037  00120A  BE01               	btfsc	___awmod@dividend,7,c
  4038  00120C  0602               	decf	___awmod@dividend+1,f,c
  4039  00120E  EC9B  F013         	call	___awmod	;wreg free
  4040  001212  5001               	movf	?___awmod,w,c
  4041  001214  0D04               	mullw	4
  4042  001216  0E01               	movlw	low __powers_
  4043  001218  24F3               	addwf	prodl,w,c
  4044  00121A  6EF6               	movwf	tblptrl,c
  4045  00121C  0E7E               	movlw	high __powers_
  4046  00121E  20F4               	addwfc	prodh,w,c
  4047  001220  6EF7               	movwf	tblptrh,c
  4048  001222                     	if	0	;There are less than 3 active tblptr bytes
  4049  001222                     	endif
  4050  001222  0009               	tblrd		*+
  4051  001224  FFFF               	dw	65535	; errata NOP
  4052  001226  CFF5 F013          	movff	tablat,___flmul@a
  4053  00122A  0009               	tblrd		*+
  4054  00122C  FFFF               	dw	65535	; errata NOP
  4055  00122E  CFF5 F014          	movff	tablat,___flmul@a+1
  4056  001232  0009               	tblrd		*+
  4057  001234  FFFF               	dw	65535	; errata NOP
  4058  001236  CFF5 F015          	movff	tablat,___flmul@a+2
  4059  00123A  000A               	tblrd		*-
  4060  00123C  FFFF               	dw	65535	; errata NOP
  4061  00123E  CFF5 F016          	movff	tablat,___flmul@a+3
  4062  001242  EC9B  F009         	call	___flmul	;wreg free
  4063  001246  D050               	goto	L9
  4064  001248                     l3188:
  4065  001248  FFFF               	dw	65535	; assembler added errata NOP
  4066                           
  4067                           ;doprnt.c: 446: else if(scl > 10)
  4068  00124A  5030               	movf	scale@scl,w,c
  4069  00124C  0A80               	xorlw	128
  4070  00124E  0F75               	addlw	-139
  4071  001250  A0D8               	btfss	status,0,c
  4072  001252  D054               	goto	l3194
  4073                           
  4074                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  4075  001254  0E00               	movlw	0
  4076  001256  6E0A               	movwf	___awdiv@divisor+1,c
  4077  001258  0E0A               	movlw	10
  4078  00125A  6E09               	movwf	___awdiv@divisor,c
  4079  00125C  5030               	movf	scale@scl,w,c
  4080  00125E  6E07               	movwf	___awdiv@dividend,c
  4081  001260  6A08               	clrf	___awdiv@dividend+1,c
  4082  001262  BE07               	btfsc	___awdiv@dividend,7,c
  4083  001264  0608               	decf	___awdiv@dividend+1,f,c
  4084  001266  ECBC  F012         	call	___awdiv	;wreg free
  4085  00126A  0E09               	movlw	9
  4086  00126C  2607               	addwf	?___awdiv,f,c
  4087  00126E  5007               	movf	?___awdiv,w,c
  4088  001270  0D04               	mullw	4
  4089  001272  0E01               	movlw	low __powers_
  4090  001274  24F3               	addwf	prodl,w,c
  4091  001276  6EF6               	movwf	tblptrl,c
  4092  001278  0E7E               	movlw	high __powers_
  4093  00127A  20F4               	addwfc	prodh,w,c
  4094  00127C  6EF7               	movwf	tblptrh,c
  4095  00127E                     	if	0	;There are less than 3 active tblptr bytes
  4096  00127E                     	endif
  4097  00127E  0009               	tblrd		*+
  4098  001280  FFFF               	dw	65535	; errata NOP
  4099  001282  CFF5 F00F          	movff	tablat,___flmul@b
  4100  001286  0009               	tblrd		*+
  4101  001288  FFFF               	dw	65535	; errata NOP
  4102  00128A  CFF5 F010          	movff	tablat,___flmul@b+1
  4103  00128E  0009               	tblrd		*+
  4104  001290  FFFF               	dw	65535	; errata NOP
  4105  001292  CFF5 F011          	movff	tablat,___flmul@b+2
  4106  001296  000A               	tblrd		*-
  4107  001298  FFFF               	dw	65535	; errata NOP
  4108  00129A  CFF5 F012          	movff	tablat,___flmul@b+3
  4109  00129E  0E00               	movlw	0
  4110  0012A0  6E04               	movwf	___awmod@divisor+1,c
  4111  0012A2  0E0A               	movlw	10
  4112  0012A4  6E03               	movwf	___awmod@divisor,c
  4113  0012A6  5030               	movf	scale@scl,w,c
  4114  0012A8  6E01               	movwf	___awmod@dividend,c
  4115  0012AA  6A02               	clrf	___awmod@dividend+1,c
  4116  0012AC  BE01               	btfsc	___awmod@dividend,7,c
  4117  0012AE  0602               	decf	___awmod@dividend+1,f,c
  4118  0012B0  EC9B  F013         	call	___awmod	;wreg free
  4119  0012B4  5001               	movf	?___awmod,w,c
  4120  0012B6  0D04               	mullw	4
  4121  0012B8  0E01               	movlw	low __powers_
  4122  0012BA  24F3               	addwf	prodl,w,c
  4123  0012BC  6EF6               	movwf	tblptrl,c
  4124  0012BE  0E7E               	movlw	high __powers_
  4125  0012C0  20F4               	addwfc	prodh,w,c
  4126  0012C2  6EF7               	movwf	tblptrh,c
  4127  0012C4                     	if	0	;There are less than 3 active tblptr bytes
  4128  0012C4                     	endif
  4129  0012C4  0009               	tblrd		*+
  4130  0012C6  FFFF               	dw	65535	; errata NOP
  4131  0012C8  CFF5 F013          	movff	tablat,___flmul@a
  4132  0012CC  0009               	tblrd		*+
  4133  0012CE  FFFF               	dw	65535	; errata NOP
  4134  0012D0  CFF5 F014          	movff	tablat,___flmul@a+1
  4135  0012D4  0009               	tblrd		*+
  4136  0012D6  FFFF               	dw	65535	; errata NOP
  4137  0012D8  CFF5 F015          	movff	tablat,___flmul@a+2
  4138  0012DC  000A               	tblrd		*-
  4139  0012DE  FFFF               	dw	65535	; errata NOP
  4140  0012E0  CFF5 F016          	movff	tablat,___flmul@a+3
  4141  0012E4  EC9B  F009         	call	___flmul	;wreg free
  4142  0012E8                     L9:
  4143  0012E8  FFFF               	dw	65535	; assembler added errata NOP
  4144  0012EA  C00F  F028         	movff	?___flmul,?_scale
  4145  0012EE  C010  F029         	movff	?___flmul+1,?_scale+1
  4146  0012F2  C011  F02A         	movff	?___flmul+2,?_scale+2
  4147  0012F6  C012  F02B         	movff	?___flmul+3,?_scale+3
  4148  0012FA  D01A               	goto	l236
  4149  0012FC                     l3194:
  4150  0012FC  FFFF               	dw	65535	; assembler added errata NOP
  4151                           
  4152                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  4153  0012FE  5030               	movf	scale@scl,w,c
  4154  001300  0D04               	mullw	4
  4155  001302  0E01               	movlw	low __powers_
  4156  001304  24F3               	addwf	prodl,w,c
  4157  001306  6EF6               	movwf	tblptrl,c
  4158  001308  0E7E               	movlw	high __powers_
  4159  00130A  20F4               	addwfc	prodh,w,c
  4160  00130C  6EF7               	movwf	tblptrh,c
  4161  00130E                     	if	0	;There are less than 3 active tblptr bytes
  4162  00130E                     	endif
  4163  00130E  0009               	tblrd		*+
  4164  001310  FFFF               	dw	65535	; errata NOP
  4165  001312  CFF5 F028          	movff	tablat,?_scale
  4166  001316  0009               	tblrd		*+
  4167  001318  FFFF               	dw	65535	; errata NOP
  4168  00131A  CFF5 F029          	movff	tablat,?_scale+1
  4169  00131E  0009               	tblrd		*+
  4170  001320  FFFF               	dw	65535	; errata NOP
  4171  001322  CFF5 F02A          	movff	tablat,?_scale+2
  4172  001326  000A               	tblrd		*-
  4173  001328  FFFF               	dw	65535	; errata NOP
  4174  00132A                     L8:
  4175  00132A  FFFF               	dw	65535	; assembler added errata NOP
  4176  00132C  CFF5 F02B          	movff	tablat,?_scale+3
  4177  001330                     l236:
  4178  001330  FFFF               	dw	65535	; assembler added errata NOP
  4179  001332  0012               	return		;funcret
  4180  001334  FFFF               	dw	65535	; errata NOP
  4181  001336                     __end_of_scale:
  4182                           	opt callstack 0
  4183                           
  4184 ;; *************** function ___awmod *****************
  4185 ;; Defined at:
  4186 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;  dividend        2    0[COMRAM] int 
  4189 ;;  divisor         2    2[COMRAM] int 
  4190 ;; Auto vars:     Size  Location     Type
  4191 ;;  sign            1    5[COMRAM] unsigned char 
  4192 ;;  counter         1    4[COMRAM] unsigned char 
  4193 ;; Return value:  Size  Location     Type
  4194 ;;                  2    0[COMRAM] int 
  4195 ;; Registers used:
  4196 ;;		wreg, status,2, status,0
  4197 ;; Tracked objects:
  4198 ;;		On entry : 0/0
  4199 ;;		On exit  : 0/0
  4200 ;;		Unchanged: 0/0
  4201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4202 ;;      Params:         4       0       0       0       0       0       0
  4203 ;;      Locals:         2       0       0       0       0       0       0
  4204 ;;      Temps:          0       0       0       0       0       0       0
  4205 ;;      Totals:         6       0       0       0       0       0       0
  4206 ;;Total ram usage:        6 bytes
  4207 ;; Hardware stack levels used:    1
  4208 ;; Hardware stack levels required when called:    1
  4209 ;; This function calls:
  4210 ;;		Nothing
  4211 ;; This function is called by:
  4212 ;;		_scale
  4213 ;; This function uses a non-reentrant model
  4214 ;;
  4215                           
  4216                           	psect	text6
  4217  002736                     __ptext6:
  4218                           	opt callstack 0
  4219  002736                     ___awmod:
  4220                           	opt callstack 0
  4221  002736  FFFF               	dw	65535	; assembler added errata NOP
  4222                           
  4223                           ;incstack = 0
  4224  002738  0E00               	movlw	0
  4225  00273A  6E06               	movwf	___awmod@sign,c
  4226  00273C  AE02               	btfss	___awmod@dividend+1,7,c
  4227  00273E  D006               	goto	l3046
  4228  002740  6C01               	negf	___awmod@dividend,c
  4229  002742  1E02               	comf	___awmod@dividend+1,f,c
  4230  002744  B0D8               	btfsc	status,0,c
  4231  002746  2A02               	incf	___awmod@dividend+1,f,c
  4232  002748  0E01               	movlw	1
  4233  00274A  6E06               	movwf	___awmod@sign,c
  4234  00274C                     l3046:
  4235  00274C  FFFF               	dw	65535	; assembler added errata NOP
  4236  00274E  AE04               	btfss	___awmod@divisor+1,7,c
  4237  002750  D004               	goto	l3050
  4238  002752  6C03               	negf	___awmod@divisor,c
  4239  002754  1E04               	comf	___awmod@divisor+1,f,c
  4240  002756  B0D8               	btfsc	status,0,c
  4241  002758  2A04               	incf	___awmod@divisor+1,f,c
  4242  00275A                     l3050:
  4243  00275A  FFFF               	dw	65535	; assembler added errata NOP
  4244  00275C  5003               	movf	___awmod@divisor,w,c
  4245  00275E  1004               	iorwf	___awmod@divisor+1,w,c
  4246  002760  B4D8               	btfsc	status,2,c
  4247  002762  D01C               	goto	l3066
  4248  002764  0E01               	movlw	1
  4249  002766  6E05               	movwf	___awmod@counter,c
  4250  002768  D005               	goto	l3056
  4251  00276A                     l3054:
  4252  00276A  FFFF               	dw	65535	; assembler added errata NOP
  4253  00276C  90D8               	bcf	status,0,c
  4254  00276E  3603               	rlcf	___awmod@divisor,f,c
  4255  002770  3604               	rlcf	___awmod@divisor+1,f,c
  4256  002772  2A05               	incf	___awmod@counter,f,c
  4257  002774                     l3056:
  4258  002774  FFFF               	dw	65535	; assembler added errata NOP
  4259  002776  AE04               	btfss	___awmod@divisor+1,7,c
  4260  002778  D7F8               	goto	l3054
  4261  00277A                     u3070:
  4262  00277A  FFFF               	dw	65535	; assembler added errata NOP
  4263  00277C  5003               	movf	___awmod@divisor,w,c
  4264  00277E  5C01               	subwf	___awmod@dividend,w,c
  4265  002780  5004               	movf	___awmod@divisor+1,w,c
  4266  002782  5802               	subwfb	___awmod@dividend+1,w,c
  4267  002784  A0D8               	btfss	status,0,c
  4268  002786  D004               	goto	l3062
  4269  002788  5003               	movf	___awmod@divisor,w,c
  4270  00278A  5E01               	subwf	___awmod@dividend,f,c
  4271  00278C  5004               	movf	___awmod@divisor+1,w,c
  4272  00278E  5A02               	subwfb	___awmod@dividend+1,f,c
  4273  002790                     l3062:
  4274  002790  FFFF               	dw	65535	; assembler added errata NOP
  4275  002792  90D8               	bcf	status,0,c
  4276  002794  3204               	rrcf	___awmod@divisor+1,f,c
  4277  002796  3203               	rrcf	___awmod@divisor,f,c
  4278  002798  2E05               	decfsz	___awmod@counter,f,c
  4279  00279A  D7EF               	goto	u3070
  4280  00279C                     l3066:
  4281  00279C  FFFF               	dw	65535	; assembler added errata NOP
  4282  00279E  5006               	movf	___awmod@sign,w,c
  4283  0027A0  B4D8               	btfsc	status,2,c
  4284  0027A2  D004               	goto	l3070
  4285  0027A4  6C01               	negf	___awmod@dividend,c
  4286  0027A6  1E02               	comf	___awmod@dividend+1,f,c
  4287  0027A8  B0D8               	btfsc	status,0,c
  4288  0027AA  2A02               	incf	___awmod@dividend+1,f,c
  4289  0027AC                     l3070:
  4290  0027AC  FFFF               	dw	65535	; assembler added errata NOP
  4291  0027AE  C001  F001         	movff	___awmod@dividend,?___awmod
  4292  0027B2  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  4293  0027B6  0012               	return		;funcret
  4294  0027B8  FFFF               	dw	65535	; errata NOP
  4295  0027BA                     __end_of___awmod:
  4296                           	opt callstack 0
  4297                           
  4298 ;; *************** function ___awdiv *****************
  4299 ;; Defined at:
  4300 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  4301 ;; Parameters:    Size  Location     Type
  4302 ;;  dividend        2    6[COMRAM] int 
  4303 ;;  divisor         2    8[COMRAM] int 
  4304 ;; Auto vars:     Size  Location     Type
  4305 ;;  quotient        2   12[COMRAM] int 
  4306 ;;  sign            1   11[COMRAM] unsigned char 
  4307 ;;  counter         1   10[COMRAM] unsigned char 
  4308 ;; Return value:  Size  Location     Type
  4309 ;;                  2    6[COMRAM] int 
  4310 ;; Registers used:
  4311 ;;		wreg, status,2, status,0
  4312 ;; Tracked objects:
  4313 ;;		On entry : 0/0
  4314 ;;		On exit  : 0/0
  4315 ;;		Unchanged: 0/0
  4316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4317 ;;      Params:         4       0       0       0       0       0       0
  4318 ;;      Locals:         4       0       0       0       0       0       0
  4319 ;;      Temps:          0       0       0       0       0       0       0
  4320 ;;      Totals:         8       0       0       0       0       0       0
  4321 ;;Total ram usage:        8 bytes
  4322 ;; Hardware stack levels used:    1
  4323 ;; Hardware stack levels required when called:    1
  4324 ;; This function calls:
  4325 ;;		Nothing
  4326 ;; This function is called by:
  4327 ;;		_scale
  4328 ;;		_sprintf
  4329 ;; This function uses a non-reentrant model
  4330 ;;
  4331                           
  4332                           	psect	text7
  4333  002578                     __ptext7:
  4334                           	opt callstack 0
  4335  002578                     ___awdiv:
  4336                           	opt callstack 0
  4337  002578  FFFF               	dw	65535	; assembler added errata NOP
  4338                           
  4339                           ;incstack = 0
  4340  00257A  0E00               	movlw	0
  4341  00257C  6E0C               	movwf	___awdiv@sign,c
  4342  00257E  AE0A               	btfss	___awdiv@divisor+1,7,c
  4343  002580  D006               	goto	l3002
  4344  002582  6C09               	negf	___awdiv@divisor,c
  4345  002584  1E0A               	comf	___awdiv@divisor+1,f,c
  4346  002586  B0D8               	btfsc	status,0,c
  4347  002588  2A0A               	incf	___awdiv@divisor+1,f,c
  4348  00258A  0E01               	movlw	1
  4349  00258C  6E0C               	movwf	___awdiv@sign,c
  4350  00258E                     l3002:
  4351  00258E  FFFF               	dw	65535	; assembler added errata NOP
  4352  002590  AE08               	btfss	___awdiv@dividend+1,7,c
  4353  002592  D006               	goto	l3008
  4354  002594  6C07               	negf	___awdiv@dividend,c
  4355  002596  1E08               	comf	___awdiv@dividend+1,f,c
  4356  002598  B0D8               	btfsc	status,0,c
  4357  00259A  2A08               	incf	___awdiv@dividend+1,f,c
  4358  00259C  0E01               	movlw	1
  4359  00259E  1A0C               	xorwf	___awdiv@sign,f,c
  4360  0025A0                     l3008:
  4361  0025A0  FFFF               	dw	65535	; assembler added errata NOP
  4362  0025A2  0E00               	movlw	0
  4363  0025A4  6E0E               	movwf	___awdiv@quotient+1,c
  4364  0025A6  0E00               	movlw	0
  4365  0025A8  6E0D               	movwf	___awdiv@quotient,c
  4366  0025AA  5009               	movf	___awdiv@divisor,w,c
  4367  0025AC  100A               	iorwf	___awdiv@divisor+1,w,c
  4368  0025AE  B4D8               	btfsc	status,2,c
  4369  0025B0  D020               	goto	l3030
  4370  0025B2  0E01               	movlw	1
  4371  0025B4  6E0B               	movwf	___awdiv@counter,c
  4372  0025B6  D005               	goto	l3016
  4373  0025B8                     l3014:
  4374  0025B8  FFFF               	dw	65535	; assembler added errata NOP
  4375  0025BA  90D8               	bcf	status,0,c
  4376  0025BC  3609               	rlcf	___awdiv@divisor,f,c
  4377  0025BE  360A               	rlcf	___awdiv@divisor+1,f,c
  4378  0025C0  2A0B               	incf	___awdiv@counter,f,c
  4379  0025C2                     l3016:
  4380  0025C2  FFFF               	dw	65535	; assembler added errata NOP
  4381  0025C4  AE0A               	btfss	___awdiv@divisor+1,7,c
  4382  0025C6  D7F8               	goto	l3014
  4383  0025C8                     u3010:
  4384  0025C8  FFFF               	dw	65535	; assembler added errata NOP
  4385  0025CA  90D8               	bcf	status,0,c
  4386  0025CC  360D               	rlcf	___awdiv@quotient,f,c
  4387  0025CE  360E               	rlcf	___awdiv@quotient+1,f,c
  4388  0025D0  5009               	movf	___awdiv@divisor,w,c
  4389  0025D2  5C07               	subwf	___awdiv@dividend,w,c
  4390  0025D4  500A               	movf	___awdiv@divisor+1,w,c
  4391  0025D6  5808               	subwfb	___awdiv@dividend+1,w,c
  4392  0025D8  A0D8               	btfss	status,0,c
  4393  0025DA  D005               	goto	l3026
  4394  0025DC  5009               	movf	___awdiv@divisor,w,c
  4395  0025DE  5E07               	subwf	___awdiv@dividend,f,c
  4396  0025E0  500A               	movf	___awdiv@divisor+1,w,c
  4397  0025E2  5A08               	subwfb	___awdiv@dividend+1,f,c
  4398  0025E4  800D               	bsf	___awdiv@quotient,0,c
  4399  0025E6                     l3026:
  4400  0025E6  FFFF               	dw	65535	; assembler added errata NOP
  4401  0025E8  90D8               	bcf	status,0,c
  4402  0025EA  320A               	rrcf	___awdiv@divisor+1,f,c
  4403  0025EC  3209               	rrcf	___awdiv@divisor,f,c
  4404  0025EE  2E0B               	decfsz	___awdiv@counter,f,c
  4405  0025F0  D7EB               	goto	u3010
  4406  0025F2                     l3030:
  4407  0025F2  FFFF               	dw	65535	; assembler added errata NOP
  4408  0025F4  500C               	movf	___awdiv@sign,w,c
  4409  0025F6  B4D8               	btfsc	status,2,c
  4410  0025F8  D004               	goto	l3034
  4411  0025FA  6C0D               	negf	___awdiv@quotient,c
  4412  0025FC  1E0E               	comf	___awdiv@quotient+1,f,c
  4413  0025FE  B0D8               	btfsc	status,0,c
  4414  002600  2A0E               	incf	___awdiv@quotient+1,f,c
  4415  002602                     l3034:
  4416  002602  FFFF               	dw	65535	; assembler added errata NOP
  4417  002604  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  4418  002608  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  4419  00260C  0012               	return		;funcret
  4420  00260E  FFFF               	dw	65535	; errata NOP
  4421  002610                     __end_of___awdiv:
  4422                           	opt callstack 0
  4423                           
  4424 ;; *************** function _isdigit *****************
  4425 ;; Defined at:
  4426 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
  4427 ;; Parameters:    Size  Location     Type
  4428 ;;  c               1    wreg     unsigned char 
  4429 ;; Auto vars:     Size  Location     Type
  4430 ;;  c               1    2[COMRAM] unsigned char 
  4431 ;; Return value:  Size  Location     Type
  4432 ;;		None               void
  4433 ;; Registers used:
  4434 ;;		wreg, status,2, status,0
  4435 ;; Tracked objects:
  4436 ;;		On entry : 0/0
  4437 ;;		On exit  : 0/0
  4438 ;;		Unchanged: 0/0
  4439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4440 ;;      Params:         0       0       0       0       0       0       0
  4441 ;;      Locals:         2       0       0       0       0       0       0
  4442 ;;      Temps:          1       0       0       0       0       0       0
  4443 ;;      Totals:         3       0       0       0       0       0       0
  4444 ;;Total ram usage:        3 bytes
  4445 ;; Hardware stack levels used:    1
  4446 ;; Hardware stack levels required when called:    1
  4447 ;; This function calls:
  4448 ;;		Nothing
  4449 ;; This function is called by:
  4450 ;;		_sprintf
  4451 ;; This function uses a non-reentrant model
  4452 ;;
  4453                           
  4454                           	psect	text8
  4455  002BE8                     __ptext8:
  4456                           	opt callstack 0
  4457  002BE8                     _isdigit:
  4458                           	opt callstack 0
  4459  002BE8  FFFF               	dw	65535	; assembler added errata NOP
  4460                           
  4461                           ;incstack = 0
  4462                           ;isdigit@c stored from wreg
  4463  002BEA  6E03               	movwf	isdigit@c,c
  4464  002BEC  0E00               	movlw	0
  4465  002BEE  6E02               	movwf	_isdigit$897,c
  4466  002BF0  0E3A               	movlw	58
  4467  002BF2  6003               	cpfslt	isdigit@c,c
  4468  002BF4  D005               	goto	l3206
  4469  002BF6  0E2F               	movlw	47
  4470  002BF8  6403               	cpfsgt	isdigit@c,c
  4471  002BFA  D002               	goto	l3206
  4472  002BFC  0E01               	movlw	1
  4473  002BFE  6E02               	movwf	_isdigit$897,c
  4474  002C00                     l3206:
  4475  002C00  FFFF               	dw	65535	; assembler added errata NOP
  4476  002C02  C002  F001         	movff	_isdigit$897,??_isdigit
  4477  002C06  3001               	rrcf	??_isdigit,w,c
  4478  002C08  0012               	return		;funcret
  4479  002C0A  FFFF               	dw	65535	; errata NOP
  4480  002C0C                     __end_of_isdigit:
  4481                           	opt callstack 0
  4482                           
  4483 ;; *************** function _fround *****************
  4484 ;; Defined at:
  4485 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  4486 ;; Parameters:    Size  Location     Type
  4487 ;;  prec            1    wreg     unsigned char 
  4488 ;; Auto vars:     Size  Location     Type
  4489 ;;  prec            1   51[COMRAM] unsigned char 
  4490 ;; Return value:  Size  Location     Type
  4491 ;;                  4   39[COMRAM] unsigned char 
  4492 ;; Registers used:
  4493 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4494 ;; Tracked objects:
  4495 ;;		On entry : 0/0
  4496 ;;		On exit  : 0/0
  4497 ;;		Unchanged: 0/0
  4498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4499 ;;      Params:         4       0       0       0       0       0       0
  4500 ;;      Locals:         9       0       0       0       0       0       0
  4501 ;;      Temps:          0       0       0       0       0       0       0
  4502 ;;      Totals:        13       0       0       0       0       0       0
  4503 ;;Total ram usage:       13 bytes
  4504 ;; Hardware stack levels used:    1
  4505 ;; Hardware stack levels required when called:    2
  4506 ;; This function calls:
  4507 ;;		___flmul
  4508 ;;		___lwdiv
  4509 ;;		___lwmod
  4510 ;; This function is called by:
  4511 ;;		_sprintf
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           	psect	text9
  4516  001CBC                     __ptext9:
  4517                           	opt callstack 0
  4518  001CBC                     _fround:
  4519                           	opt callstack 0
  4520  001CBC  FFFF               	dw	65535	; assembler added errata NOP
  4521                           
  4522                           ;incstack = 0
  4523                           ;fround@prec stored from wreg
  4524  001CBE  6E34               	movwf	fround@prec,c
  4525                           
  4526                           ;doprnt.c: 421: if(prec>=110)
  4527  001CC0  0E6D               	movlw	109
  4528  001CC2  6434               	cpfsgt	fround@prec,c
  4529  001CC4  D0B0               	goto	l3150
  4530                           
  4531                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  4532  001CC6  0E00               	movlw	0
  4533  001CC8  6E13               	movwf	___flmul@a,c
  4534  001CCA  0E00               	movlw	0
  4535  001CCC  6E14               	movwf	___flmul@a+1,c
  4536  001CCE  0E00               	movlw	0
  4537  001CD0  6E15               	movwf	___flmul@a+2,c
  4538  001CD2  0E3F               	movlw	63
  4539  001CD4  6E16               	movwf	___flmul@a+3,c
  4540  001CD6  0E00               	movlw	0
  4541  001CD8  6E09               	movwf	___lwdiv@divisor+1,c
  4542  001CDA  0E64               	movlw	100
  4543  001CDC  6E08               	movwf	___lwdiv@divisor,c
  4544  001CDE  C034  F006         	movff	fround@prec,___lwdiv@dividend
  4545  001CE2  6A07               	clrf	___lwdiv@dividend+1,c
  4546  001CE4  ECBB  F014         	call	___lwdiv	;wreg free
  4547  001CE8  90D8               	bcf	status,0,c
  4548  001CEA  3606               	rlcf	?___lwdiv,f,c
  4549  001CEC  3607               	rlcf	?___lwdiv+1,f,c
  4550  001CEE  90D8               	bcf	status,0,c
  4551  001CF0  3606               	rlcf	?___lwdiv,f,c
  4552  001CF2  3607               	rlcf	?___lwdiv+1,f,c
  4553  001CF4  0E48               	movlw	72
  4554  001CF6  2606               	addwf	?___lwdiv,f,c
  4555  001CF8  0E00               	movlw	0
  4556  001CFA  2207               	addwfc	?___lwdiv+1,f,c
  4557  001CFC  0E35               	movlw	low __npowers_
  4558  001CFE  2406               	addwf	?___lwdiv,w,c
  4559  001D00  6EF6               	movwf	tblptrl,c
  4560  001D02  0E7E               	movlw	high __npowers_
  4561  001D04  2007               	addwfc	?___lwdiv+1,w,c
  4562  001D06  6EF7               	movwf	tblptrh,c
  4563  001D08                     	if	0	;There are less than 3 active tblptr bytes
  4564  001D08                     	endif
  4565  001D08  0009               	tblrd		*+
  4566  001D0A  FFFF               	dw	65535	; errata NOP
  4567  001D0C  CFF5 F00F          	movff	tablat,___flmul@b
  4568  001D10  0009               	tblrd		*+
  4569  001D12  FFFF               	dw	65535	; errata NOP
  4570  001D14  CFF5 F010          	movff	tablat,___flmul@b+1
  4571  001D18  0009               	tblrd		*+
  4572  001D1A  FFFF               	dw	65535	; errata NOP
  4573  001D1C  CFF5 F011          	movff	tablat,___flmul@b+2
  4574  001D20  000A               	tblrd		*-
  4575  001D22  FFFF               	dw	65535	; errata NOP
  4576  001D24  CFF5 F012          	movff	tablat,___flmul@b+3
  4577  001D28  EC9B  F009         	call	___flmul	;wreg free
  4578  001D2C  C00F  F030         	movff	?___flmul,_fround$1081
  4579  001D30  C010  F031         	movff	?___flmul+1,_fround$1081+1
  4580  001D34  C011  F032         	movff	?___flmul+2,_fround$1081+2
  4581  001D38  C012  F033         	movff	?___flmul+3,_fround$1081+3
  4582                           
  4583                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  4584  001D3C  0E00               	movlw	0
  4585  001D3E  6E09               	movwf	___lwdiv@divisor+1,c
  4586  001D40  0E0A               	movlw	10
  4587  001D42  6E08               	movwf	___lwdiv@divisor,c
  4588  001D44  0E00               	movlw	0
  4589  001D46  6E04               	movwf	___lwmod@divisor+1,c
  4590  001D48  0E64               	movlw	100
  4591  001D4A  6E03               	movwf	___lwmod@divisor,c
  4592  001D4C  C034  F001         	movff	fround@prec,___lwmod@dividend
  4593  001D50  6A02               	clrf	___lwmod@dividend+1,c
  4594  001D52  EC17  F015         	call	___lwmod	;wreg free
  4595  001D56  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  4596  001D5A  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  4597  001D5E  ECBB  F014         	call	___lwdiv	;wreg free
  4598  001D62  90D8               	bcf	status,0,c
  4599  001D64  3606               	rlcf	?___lwdiv,f,c
  4600  001D66  3607               	rlcf	?___lwdiv+1,f,c
  4601  001D68  90D8               	bcf	status,0,c
  4602  001D6A  3606               	rlcf	?___lwdiv,f,c
  4603  001D6C  3607               	rlcf	?___lwdiv+1,f,c
  4604  001D6E  0E24               	movlw	36
  4605  001D70  2606               	addwf	?___lwdiv,f,c
  4606  001D72  0E00               	movlw	0
  4607  001D74  2207               	addwfc	?___lwdiv+1,f,c
  4608  001D76  0E35               	movlw	low __npowers_
  4609  001D78  2406               	addwf	?___lwdiv,w,c
  4610  001D7A  6EF6               	movwf	tblptrl,c
  4611  001D7C  0E7E               	movlw	high __npowers_
  4612  001D7E  2007               	addwfc	?___lwdiv+1,w,c
  4613  001D80  6EF7               	movwf	tblptrh,c
  4614  001D82                     	if	0	;There are less than 3 active tblptr bytes
  4615  001D82                     	endif
  4616  001D82  0009               	tblrd		*+
  4617  001D84  FFFF               	dw	65535	; errata NOP
  4618  001D86  CFF5 F013          	movff	tablat,___flmul@a
  4619  001D8A  0009               	tblrd		*+
  4620  001D8C  FFFF               	dw	65535	; errata NOP
  4621  001D8E  CFF5 F014          	movff	tablat,___flmul@a+1
  4622  001D92  0009               	tblrd		*+
  4623  001D94  FFFF               	dw	65535	; errata NOP
  4624  001D96  CFF5 F015          	movff	tablat,___flmul@a+2
  4625  001D9A  000A               	tblrd		*-
  4626  001D9C  FFFF               	dw	65535	; errata NOP
  4627  001D9E  CFF5 F016          	movff	tablat,___flmul@a+3
  4628  001DA2  C030  F00F         	movff	_fround$1081,___flmul@b
  4629  001DA6  C031  F010         	movff	_fround$1081+1,___flmul@b+1
  4630  001DAA  C032  F011         	movff	_fround$1081+2,___flmul@b+2
  4631  001DAE  C033  F012         	movff	_fround$1081+3,___flmul@b+3
  4632  001DB2  EC9B  F009         	call	___flmul	;wreg free
  4633  001DB6  C00F  F02C         	movff	?___flmul,_fround$1082
  4634  001DBA  C010  F02D         	movff	?___flmul+1,_fround$1082+1
  4635  001DBE  C011  F02E         	movff	?___flmul+2,_fround$1082+2
  4636  001DC2  C012  F02F         	movff	?___flmul+3,_fround$1082+3
  4637                           
  4638                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  4639  001DC6  C02C  F00F         	movff	_fround$1082,___flmul@b
  4640  001DCA  C02D  F010         	movff	_fround$1082+1,___flmul@b+1
  4641  001DCE  C02E  F011         	movff	_fround$1082+2,___flmul@b+2
  4642  001DD2  C02F  F012         	movff	_fround$1082+3,___flmul@b+3
  4643  001DD6  0E00               	movlw	0
  4644  001DD8  6E04               	movwf	___lwmod@divisor+1,c
  4645  001DDA  0E0A               	movlw	10
  4646  001DDC  6E03               	movwf	___lwmod@divisor,c
  4647  001DDE  C034  F001         	movff	fround@prec,___lwmod@dividend
  4648  001DE2  6A02               	clrf	___lwmod@dividend+1,c
  4649  001DE4  EC17  F015         	call	___lwmod	;wreg free
  4650  001DE8  90D8               	bcf	status,0,c
  4651  001DEA  3601               	rlcf	?___lwmod,f,c
  4652  001DEC  3602               	rlcf	?___lwmod+1,f,c
  4653  001DEE  90D8               	bcf	status,0,c
  4654  001DF0  3601               	rlcf	?___lwmod,f,c
  4655  001DF2  3602               	rlcf	?___lwmod+1,f,c
  4656  001DF4  0E35               	movlw	low __npowers_
  4657  001DF6  2401               	addwf	?___lwmod,w,c
  4658  001DF8  6EF6               	movwf	tblptrl,c
  4659  001DFA  0E7E               	movlw	high __npowers_
  4660  001DFC  2002               	addwfc	?___lwmod+1,w,c
  4661  001DFE  6EF7               	movwf	tblptrh,c
  4662  001E00                     	if	0	;There are less than 3 active tblptr bytes
  4663  001E00                     	endif
  4664  001E00  0009               	tblrd		*+
  4665  001E02  FFFF               	dw	65535	; errata NOP
  4666  001E04  CFF5 F013          	movff	tablat,___flmul@a
  4667  001E08  0009               	tblrd		*+
  4668  001E0A  FFFF               	dw	65535	; errata NOP
  4669  001E0C  CFF5 F014          	movff	tablat,___flmul@a+1
  4670  001E10  0009               	tblrd		*+
  4671  001E12  FFFF               	dw	65535	; errata NOP
  4672  001E14  CFF5 F015          	movff	tablat,___flmul@a+2
  4673  001E18  000A               	tblrd		*-
  4674  001E1A  FFFF               	dw	65535	; errata NOP
  4675  001E1C  CFF5 F016          	movff	tablat,___flmul@a+3
  4676  001E20  EC9B  F009         	call	___flmul	;wreg free
  4677  001E24  D092               	goto	L10
  4678  001E26                     l3150:
  4679  001E26  FFFF               	dw	65535	; assembler added errata NOP
  4680                           
  4681                           ;doprnt.c: 423: else if(prec > 10)
  4682  001E28  0E0A               	movlw	10
  4683  001E2A  6434               	cpfsgt	fround@prec,c
  4684  001E2C  D06B               	goto	l3156
  4685                           
  4686                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4687  001E2E  0E00               	movlw	0
  4688  001E30  6E13               	movwf	___flmul@a,c
  4689  001E32  0E00               	movlw	0
  4690  001E34  6E14               	movwf	___flmul@a+1,c
  4691  001E36  0E00               	movlw	0
  4692  001E38  6E15               	movwf	___flmul@a+2,c
  4693  001E3A  0E3F               	movlw	63
  4694  001E3C  6E16               	movwf	___flmul@a+3,c
  4695  001E3E  0E00               	movlw	0
  4696  001E40  6E09               	movwf	___lwdiv@divisor+1,c
  4697  001E42  0E0A               	movlw	10
  4698  001E44  6E08               	movwf	___lwdiv@divisor,c
  4699  001E46  C034  F006         	movff	fround@prec,___lwdiv@dividend
  4700  001E4A  6A07               	clrf	___lwdiv@dividend+1,c
  4701  001E4C  ECBB  F014         	call	___lwdiv	;wreg free
  4702  001E50  90D8               	bcf	status,0,c
  4703  001E52  3606               	rlcf	?___lwdiv,f,c
  4704  001E54  3607               	rlcf	?___lwdiv+1,f,c
  4705  001E56  90D8               	bcf	status,0,c
  4706  001E58  3606               	rlcf	?___lwdiv,f,c
  4707  001E5A  3607               	rlcf	?___lwdiv+1,f,c
  4708  001E5C  0E24               	movlw	36
  4709  001E5E  2606               	addwf	?___lwdiv,f,c
  4710  001E60  0E00               	movlw	0
  4711  001E62  2207               	addwfc	?___lwdiv+1,f,c
  4712  001E64  0E35               	movlw	low __npowers_
  4713  001E66  2406               	addwf	?___lwdiv,w,c
  4714  001E68  6EF6               	movwf	tblptrl,c
  4715  001E6A  0E7E               	movlw	high __npowers_
  4716  001E6C  2007               	addwfc	?___lwdiv+1,w,c
  4717  001E6E  6EF7               	movwf	tblptrh,c
  4718  001E70                     	if	0	;There are less than 3 active tblptr bytes
  4719  001E70                     	endif
  4720  001E70  0009               	tblrd		*+
  4721  001E72  FFFF               	dw	65535	; errata NOP
  4722  001E74  CFF5 F00F          	movff	tablat,___flmul@b
  4723  001E78  0009               	tblrd		*+
  4724  001E7A  FFFF               	dw	65535	; errata NOP
  4725  001E7C  CFF5 F010          	movff	tablat,___flmul@b+1
  4726  001E80  0009               	tblrd		*+
  4727  001E82  FFFF               	dw	65535	; errata NOP
  4728  001E84  CFF5 F011          	movff	tablat,___flmul@b+2
  4729  001E88  000A               	tblrd		*-
  4730  001E8A  FFFF               	dw	65535	; errata NOP
  4731  001E8C  CFF5 F012          	movff	tablat,___flmul@b+3
  4732  001E90  EC9B  F009         	call	___flmul	;wreg free
  4733  001E94  C00F  F030         	movff	?___flmul,_fround$1081
  4734  001E98  C010  F031         	movff	?___flmul+1,_fround$1081+1
  4735  001E9C  C011  F032         	movff	?___flmul+2,_fround$1081+2
  4736  001EA0  C012  F033         	movff	?___flmul+3,_fround$1081+3
  4737                           
  4738                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4739  001EA4  C030  F00F         	movff	_fround$1081,___flmul@b
  4740  001EA8  C031  F010         	movff	_fround$1081+1,___flmul@b+1
  4741  001EAC  C032  F011         	movff	_fround$1081+2,___flmul@b+2
  4742  001EB0  C033  F012         	movff	_fround$1081+3,___flmul@b+3
  4743  001EB4  0E00               	movlw	0
  4744  001EB6  6E04               	movwf	___lwmod@divisor+1,c
  4745  001EB8  0E0A               	movlw	10
  4746  001EBA  6E03               	movwf	___lwmod@divisor,c
  4747  001EBC  C034  F001         	movff	fround@prec,___lwmod@dividend
  4748  001EC0  6A02               	clrf	___lwmod@dividend+1,c
  4749  001EC2  EC17  F015         	call	___lwmod	;wreg free
  4750  001EC6  90D8               	bcf	status,0,c
  4751  001EC8  3601               	rlcf	?___lwmod,f,c
  4752  001ECA  3602               	rlcf	?___lwmod+1,f,c
  4753  001ECC  90D8               	bcf	status,0,c
  4754  001ECE  3601               	rlcf	?___lwmod,f,c
  4755  001ED0  3602               	rlcf	?___lwmod+1,f,c
  4756  001ED2  0E35               	movlw	low __npowers_
  4757  001ED4  2401               	addwf	?___lwmod,w,c
  4758  001ED6  6EF6               	movwf	tblptrl,c
  4759  001ED8  0E7E               	movlw	high __npowers_
  4760  001EDA  2002               	addwfc	?___lwmod+1,w,c
  4761  001EDC  6EF7               	movwf	tblptrh,c
  4762  001EDE                     	if	0	;There are less than 3 active tblptr bytes
  4763  001EDE                     	endif
  4764  001EDE  0009               	tblrd		*+
  4765  001EE0  FFFF               	dw	65535	; errata NOP
  4766  001EE2  CFF5 F013          	movff	tablat,___flmul@a
  4767  001EE6  0009               	tblrd		*+
  4768  001EE8  FFFF               	dw	65535	; errata NOP
  4769  001EEA  CFF5 F014          	movff	tablat,___flmul@a+1
  4770  001EEE  0009               	tblrd		*+
  4771  001EF0  FFFF               	dw	65535	; errata NOP
  4772  001EF2  CFF5 F015          	movff	tablat,___flmul@a+2
  4773  001EF6  000A               	tblrd		*-
  4774  001EF8  FFFF               	dw	65535	; errata NOP
  4775  001EFA  CFF5 F016          	movff	tablat,___flmul@a+3
  4776  001EFE  EC9B  F009         	call	___flmul	;wreg free
  4777  001F02  D023               	goto	L10
  4778  001F04                     l3156:
  4779  001F04  FFFF               	dw	65535	; assembler added errata NOP
  4780                           
  4781                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  4782  001F06  5034               	movf	fround@prec,w,c
  4783  001F08  0D04               	mullw	4
  4784  001F0A  0E35               	movlw	low __npowers_
  4785  001F0C  24F3               	addwf	prodl,w,c
  4786  001F0E  6EF6               	movwf	tblptrl,c
  4787  001F10  0E7E               	movlw	high __npowers_
  4788  001F12  20F4               	addwfc	prodh,w,c
  4789  001F14  6EF7               	movwf	tblptrh,c
  4790  001F16                     	if	0	;There are less than 3 active tblptr bytes
  4791  001F16                     	endif
  4792  001F16  0009               	tblrd		*+
  4793  001F18  FFFF               	dw	65535	; errata NOP
  4794  001F1A  CFF5 F00F          	movff	tablat,___flmul@b
  4795  001F1E  0009               	tblrd		*+
  4796  001F20  FFFF               	dw	65535	; errata NOP
  4797  001F22  CFF5 F010          	movff	tablat,___flmul@b+1
  4798  001F26  0009               	tblrd		*+
  4799  001F28  FFFF               	dw	65535	; errata NOP
  4800  001F2A  CFF5 F011          	movff	tablat,___flmul@b+2
  4801  001F2E  000A               	tblrd		*-
  4802  001F30  FFFF               	dw	65535	; errata NOP
  4803  001F32  CFF5 F012          	movff	tablat,___flmul@b+3
  4804  001F36  0E00               	movlw	0
  4805  001F38  6E13               	movwf	___flmul@a,c
  4806  001F3A  0E00               	movlw	0
  4807  001F3C  6E14               	movwf	___flmul@a+1,c
  4808  001F3E  0E00               	movlw	0
  4809  001F40  6E15               	movwf	___flmul@a+2,c
  4810  001F42  0E3F               	movlw	63
  4811  001F44  6E16               	movwf	___flmul@a+3,c
  4812  001F46  EC9B  F009         	call	___flmul	;wreg free
  4813  001F4A                     L10:
  4814  001F4A  FFFF               	dw	65535	; assembler added errata NOP
  4815  001F4C  C00F  F028         	movff	?___flmul,?_fround
  4816  001F50  C010  F029         	movff	?___flmul+1,?_fround+1
  4817  001F54  C011  F02A         	movff	?___flmul+2,?_fround+2
  4818  001F58  C012  F02B         	movff	?___flmul+3,?_fround+3
  4819  001F5C  0012               	return		;funcret
  4820  001F5E  FFFF               	dw	65535	; errata NOP
  4821  001F60                     __end_of_fround:
  4822                           	opt callstack 0
  4823                           
  4824 ;; *************** function ___lwmod *****************
  4825 ;; Defined at:
  4826 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  4827 ;; Parameters:    Size  Location     Type
  4828 ;;  dividend        2    0[COMRAM] unsigned int 
  4829 ;;  divisor         2    2[COMRAM] unsigned int 
  4830 ;; Auto vars:     Size  Location     Type
  4831 ;;  counter         1    4[COMRAM] unsigned char 
  4832 ;; Return value:  Size  Location     Type
  4833 ;;                  2    0[COMRAM] unsigned int 
  4834 ;; Registers used:
  4835 ;;		wreg, status,2, status,0
  4836 ;; Tracked objects:
  4837 ;;		On entry : 0/0
  4838 ;;		On exit  : 0/0
  4839 ;;		Unchanged: 0/0
  4840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4841 ;;      Params:         4       0       0       0       0       0       0
  4842 ;;      Locals:         1       0       0       0       0       0       0
  4843 ;;      Temps:          0       0       0       0       0       0       0
  4844 ;;      Totals:         5       0       0       0       0       0       0
  4845 ;;Total ram usage:        5 bytes
  4846 ;; Hardware stack levels used:    1
  4847 ;; Hardware stack levels required when called:    1
  4848 ;; This function calls:
  4849 ;;		Nothing
  4850 ;; This function is called by:
  4851 ;;		_fround
  4852 ;; This function uses a non-reentrant model
  4853 ;;
  4854                           
  4855                           	psect	text10
  4856  002A2E                     __ptext10:
  4857                           	opt callstack 0
  4858  002A2E                     ___lwmod:
  4859                           	opt callstack 0
  4860  002A2E  FFFF               	dw	65535	; assembler added errata NOP
  4861                           
  4862                           ;incstack = 0
  4863  002A30  5003               	movf	___lwmod@divisor,w,c
  4864  002A32  1004               	iorwf	___lwmod@divisor+1,w,c
  4865  002A34  B4D8               	btfsc	status,2,c
  4866  002A36  D01C               	goto	l863
  4867  002A38  0E01               	movlw	1
  4868  002A3A  6E05               	movwf	___lwmod@counter,c
  4869  002A3C  D005               	goto	l3102
  4870  002A3E                     l3100:
  4871  002A3E  FFFF               	dw	65535	; assembler added errata NOP
  4872  002A40  90D8               	bcf	status,0,c
  4873  002A42  3603               	rlcf	___lwmod@divisor,f,c
  4874  002A44  3604               	rlcf	___lwmod@divisor+1,f,c
  4875  002A46  2A05               	incf	___lwmod@counter,f,c
  4876  002A48                     l3102:
  4877  002A48  FFFF               	dw	65535	; assembler added errata NOP
  4878  002A4A  AE04               	btfss	___lwmod@divisor+1,7,c
  4879  002A4C  D7F8               	goto	l3100
  4880  002A4E                     u3140:
  4881  002A4E  FFFF               	dw	65535	; assembler added errata NOP
  4882  002A50  5003               	movf	___lwmod@divisor,w,c
  4883  002A52  5C01               	subwf	___lwmod@dividend,w,c
  4884  002A54  5004               	movf	___lwmod@divisor+1,w,c
  4885  002A56  5802               	subwfb	___lwmod@dividend+1,w,c
  4886  002A58  A0D8               	btfss	status,0,c
  4887  002A5A  D004               	goto	l3108
  4888  002A5C  5003               	movf	___lwmod@divisor,w,c
  4889  002A5E  5E01               	subwf	___lwmod@dividend,f,c
  4890  002A60  5004               	movf	___lwmod@divisor+1,w,c
  4891  002A62  5A02               	subwfb	___lwmod@dividend+1,f,c
  4892  002A64                     l3108:
  4893  002A64  FFFF               	dw	65535	; assembler added errata NOP
  4894  002A66  90D8               	bcf	status,0,c
  4895  002A68  3204               	rrcf	___lwmod@divisor+1,f,c
  4896  002A6A  3203               	rrcf	___lwmod@divisor,f,c
  4897  002A6C  2E05               	decfsz	___lwmod@counter,f,c
  4898  002A6E  D7EF               	goto	u3140
  4899  002A70                     l863:
  4900  002A70  FFFF               	dw	65535	; assembler added errata NOP
  4901  002A72  C001  F001         	movff	___lwmod@dividend,?___lwmod
  4902  002A76  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  4903  002A7A  0012               	return		;funcret
  4904  002A7C  FFFF               	dw	65535	; errata NOP
  4905  002A7E                     __end_of___lwmod:
  4906                           	opt callstack 0
  4907                           
  4908 ;; *************** function ___lwdiv *****************
  4909 ;; Defined at:
  4910 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  4911 ;; Parameters:    Size  Location     Type
  4912 ;;  dividend        2    5[COMRAM] unsigned int 
  4913 ;;  divisor         2    7[COMRAM] unsigned int 
  4914 ;; Auto vars:     Size  Location     Type
  4915 ;;  quotient        2    9[COMRAM] unsigned int 
  4916 ;;  counter         1   11[COMRAM] unsigned char 
  4917 ;; Return value:  Size  Location     Type
  4918 ;;                  2    5[COMRAM] unsigned int 
  4919 ;; Registers used:
  4920 ;;		wreg, status,2, status,0
  4921 ;; Tracked objects:
  4922 ;;		On entry : 0/0
  4923 ;;		On exit  : 0/0
  4924 ;;		Unchanged: 0/0
  4925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4926 ;;      Params:         4       0       0       0       0       0       0
  4927 ;;      Locals:         3       0       0       0       0       0       0
  4928 ;;      Temps:          0       0       0       0       0       0       0
  4929 ;;      Totals:         7       0       0       0       0       0       0
  4930 ;;Total ram usage:        7 bytes
  4931 ;; Hardware stack levels used:    1
  4932 ;; Hardware stack levels required when called:    1
  4933 ;; This function calls:
  4934 ;;		Nothing
  4935 ;; This function is called by:
  4936 ;;		_fround
  4937 ;; This function uses a non-reentrant model
  4938 ;;
  4939                           
  4940                           	psect	text11
  4941  002976                     __ptext11:
  4942                           	opt callstack 0
  4943  002976                     ___lwdiv:
  4944                           	opt callstack 0
  4945  002976  FFFF               	dw	65535	; assembler added errata NOP
  4946                           
  4947                           ;incstack = 0
  4948  002978  0E00               	movlw	0
  4949  00297A  6E0B               	movwf	___lwdiv@quotient+1,c
  4950  00297C  0E00               	movlw	0
  4951  00297E  6E0A               	movwf	___lwdiv@quotient,c
  4952  002980  5008               	movf	___lwdiv@divisor,w,c
  4953  002982  1009               	iorwf	___lwdiv@divisor+1,w,c
  4954  002984  B4D8               	btfsc	status,2,c
  4955  002986  D020               	goto	l853
  4956  002988  0E01               	movlw	1
  4957  00298A  6E0C               	movwf	___lwdiv@counter,c
  4958  00298C  D005               	goto	l3082
  4959  00298E                     l3080:
  4960  00298E  FFFF               	dw	65535	; assembler added errata NOP
  4961  002990  90D8               	bcf	status,0,c
  4962  002992  3608               	rlcf	___lwdiv@divisor,f,c
  4963  002994  3609               	rlcf	___lwdiv@divisor+1,f,c
  4964  002996  2A0C               	incf	___lwdiv@counter,f,c
  4965  002998                     l3082:
  4966  002998  FFFF               	dw	65535	; assembler added errata NOP
  4967  00299A  AE09               	btfss	___lwdiv@divisor+1,7,c
  4968  00299C  D7F8               	goto	l3080
  4969  00299E                     u3110:
  4970  00299E  FFFF               	dw	65535	; assembler added errata NOP
  4971  0029A0  90D8               	bcf	status,0,c
  4972  0029A2  360A               	rlcf	___lwdiv@quotient,f,c
  4973  0029A4  360B               	rlcf	___lwdiv@quotient+1,f,c
  4974  0029A6  5008               	movf	___lwdiv@divisor,w,c
  4975  0029A8  5C06               	subwf	___lwdiv@dividend,w,c
  4976  0029AA  5009               	movf	___lwdiv@divisor+1,w,c
  4977  0029AC  5807               	subwfb	___lwdiv@dividend+1,w,c
  4978  0029AE  A0D8               	btfss	status,0,c
  4979  0029B0  D005               	goto	l3092
  4980  0029B2  5008               	movf	___lwdiv@divisor,w,c
  4981  0029B4  5E06               	subwf	___lwdiv@dividend,f,c
  4982  0029B6  5009               	movf	___lwdiv@divisor+1,w,c
  4983  0029B8  5A07               	subwfb	___lwdiv@dividend+1,f,c
  4984  0029BA  800A               	bsf	___lwdiv@quotient,0,c
  4985  0029BC                     l3092:
  4986  0029BC  FFFF               	dw	65535	; assembler added errata NOP
  4987  0029BE  90D8               	bcf	status,0,c
  4988  0029C0  3209               	rrcf	___lwdiv@divisor+1,f,c
  4989  0029C2  3208               	rrcf	___lwdiv@divisor,f,c
  4990  0029C4  2E0C               	decfsz	___lwdiv@counter,f,c
  4991  0029C6  D7EB               	goto	u3110
  4992  0029C8                     l853:
  4993  0029C8  FFFF               	dw	65535	; assembler added errata NOP
  4994  0029CA  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  4995  0029CE  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4996  0029D2  0012               	return		;funcret
  4997  0029D4  FFFF               	dw	65535	; errata NOP
  4998  0029D6                     __end_of___lwdiv:
  4999                           	opt callstack 0
  5000                           
  5001 ;; *************** function __tdiv_to_l_ *****************
  5002 ;; Defined at:
  5003 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftdivl.c"
  5004 ;; Parameters:    Size  Location     Type
  5005 ;;  f1              4    0[COMRAM] float 
  5006 ;;  f2              4    4[COMRAM] float 
  5007 ;; Auto vars:     Size  Location     Type
  5008 ;;  quot            4   11[COMRAM] unsigned long 
  5009 ;;  exp1            1   16[COMRAM] unsigned char 
  5010 ;;  cntr            1   15[COMRAM] unsigned char 
  5011 ;; Return value:  Size  Location     Type
  5012 ;;                  4    0[COMRAM] unsigned long 
  5013 ;; Registers used:
  5014 ;;		wreg, status,2, status,0
  5015 ;; Tracked objects:
  5016 ;;		On entry : 0/0
  5017 ;;		On exit  : 0/0
  5018 ;;		Unchanged: 0/0
  5019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5020 ;;      Params:         8       0       0       0       0       0       0
  5021 ;;      Locals:         6       0       0       0       0       0       0
  5022 ;;      Temps:          3       0       0       0       0       0       0
  5023 ;;      Totals:        17       0       0       0       0       0       0
  5024 ;;Total ram usage:       17 bytes
  5025 ;; Hardware stack levels used:    1
  5026 ;; Hardware stack levels required when called:    1
  5027 ;; This function calls:
  5028 ;;		Nothing
  5029 ;; This function is called by:
  5030 ;;		_sprintf
  5031 ;; This function uses a non-reentrant model
  5032 ;;
  5033                           
  5034                           	psect	text12
  5035  0020BC                     __ptext12:
  5036                           	opt callstack 0
  5037  0020BC                     __tdiv_to_l_:
  5038                           	opt callstack 0
  5039  0020BC  FFFF               	dw	65535	; assembler added errata NOP
  5040                           
  5041                           ;incstack = 0
  5042  0020BE  C003  F009         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  5043  0020C2  6A0A               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  5044  0020C4  6A0B               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  5045  0020C6  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  5046  0020C8  3609               	rlcf	??__tdiv_to_l_& (0+255),f,c
  5047  0020CA  E301               	bnc	u3271
  5048  0020CC  800A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  5049  0020CE                     u3271:
  5050  0020CE  5009               	movf	??__tdiv_to_l_,w,c
  5051  0020D0  6E11               	movwf	__tdiv_to_l_@exp1,c
  5052  0020D2  5011               	movf	__tdiv_to_l_@exp1,w,c
  5053  0020D4  A4D8               	btfss	status,2,c
  5054  0020D6  D00A               	goto	l3216
  5055  0020D8                     u3280:
  5056  0020D8  FFFF               	dw	65535	; assembler added errata NOP
  5057  0020DA  0E00               	movlw	0
  5058  0020DC  6E01               	movwf	?__tdiv_to_l_,c
  5059  0020DE  0E00               	movlw	0
  5060  0020E0  6E02               	movwf	?__tdiv_to_l_+1,c
  5061  0020E2  0E00               	movlw	0
  5062  0020E4  6E03               	movwf	?__tdiv_to_l_+2,c
  5063  0020E6  0E00               	movlw	0
  5064  0020E8  6E04               	movwf	?__tdiv_to_l_+3,c
  5065  0020EA  D070               	goto	l703
  5066  0020EC                     l3216:
  5067  0020EC  FFFF               	dw	65535	; assembler added errata NOP
  5068  0020EE  C007  F009         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  5069  0020F2  6A0A               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  5070  0020F4  6A0B               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  5071  0020F6  3406               	rlcf	__tdiv_to_l_@f2+1,w,c
  5072  0020F8  3609               	rlcf	??__tdiv_to_l_& (0+255),f,c
  5073  0020FA  E301               	bnc	u3291
  5074  0020FC  800A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  5075  0020FE                     u3291:
  5076  0020FE  5009               	movf	??__tdiv_to_l_,w,c
  5077  002100  6E10               	movwf	__tdiv_to_l_@cntr,c
  5078  002102  5010               	movf	__tdiv_to_l_@cntr,w,c
  5079  002104  B4D8               	btfsc	status,2,c
  5080  002106  D7E8               	goto	u3280
  5081  002108  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  5082  00210A  0EFF               	movlw	255
  5083  00210C  1601               	andwf	__tdiv_to_l_@f1,f,c
  5084  00210E  0EFF               	movlw	255
  5085  002110  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  5086  002112  0E00               	movlw	0
  5087  002114  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  5088  002116  8E06               	bsf	__tdiv_to_l_@f2+1,7,c
  5089  002118  0EFF               	movlw	255
  5090  00211A  1605               	andwf	__tdiv_to_l_@f2,f,c
  5091  00211C  0EFF               	movlw	255
  5092  00211E  1606               	andwf	__tdiv_to_l_@f2+1,f,c
  5093  002120  0E00               	movlw	0
  5094  002122  1607               	andwf	__tdiv_to_l_@f2+2,f,c
  5095  002124  0E00               	movlw	0
  5096  002126  6E0C               	movwf	__tdiv_to_l_@quot,c
  5097  002128  0E00               	movlw	0
  5098  00212A  6E0D               	movwf	__tdiv_to_l_@quot+1,c
  5099  00212C  0E00               	movlw	0
  5100  00212E  6E0E               	movwf	__tdiv_to_l_@quot+2,c
  5101  002130  0E00               	movlw	0
  5102  002132  6E0F               	movwf	__tdiv_to_l_@quot+3,c
  5103  002134  0E7F               	movlw	127
  5104  002136  5E11               	subwf	__tdiv_to_l_@exp1,f,c
  5105  002138  5010               	movf	__tdiv_to_l_@cntr,w,c
  5106  00213A  0F98               	addlw	152
  5107  00213C  5E11               	subwf	__tdiv_to_l_@exp1,f,c
  5108  00213E  0E18               	movlw	24
  5109  002140  6E10               	movwf	__tdiv_to_l_@cntr,c
  5110  002142                     l705:
  5111  002142  FFFF               	dw	65535	; assembler added errata NOP
  5112  002144  90D8               	bcf	status,0,c
  5113  002146  360C               	rlcf	__tdiv_to_l_@quot,f,c
  5114  002148  360D               	rlcf	__tdiv_to_l_@quot+1,f,c
  5115  00214A  360E               	rlcf	__tdiv_to_l_@quot+2,f,c
  5116  00214C  360F               	rlcf	__tdiv_to_l_@quot+3,f,c
  5117  00214E  5005               	movf	__tdiv_to_l_@f2,w,c
  5118  002150  5C01               	subwf	__tdiv_to_l_@f1,w,c
  5119  002152  5006               	movf	__tdiv_to_l_@f2+1,w,c
  5120  002154  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  5121  002156  5007               	movf	__tdiv_to_l_@f2+2,w,c
  5122  002158  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  5123  00215A  A0D8               	btfss	status,0,c
  5124  00215C  D007               	goto	l706
  5125  00215E  5005               	movf	__tdiv_to_l_@f2,w,c
  5126  002160  5E01               	subwf	__tdiv_to_l_@f1,f,c
  5127  002162  5006               	movf	__tdiv_to_l_@f2+1,w,c
  5128  002164  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  5129  002166  5007               	movf	__tdiv_to_l_@f2+2,w,c
  5130  002168  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  5131  00216A  800C               	bsf	__tdiv_to_l_@quot,0,c
  5132  00216C                     l706:
  5133  00216C  FFFF               	dw	65535	; assembler added errata NOP
  5134  00216E  90D8               	bcf	status,0,c
  5135  002170  3601               	rlcf	__tdiv_to_l_@f1,f,c
  5136  002172  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  5137  002174  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  5138  002176  2E10               	decfsz	__tdiv_to_l_@cntr,f,c
  5139  002178  D7E4               	goto	l705
  5140  00217A  AE11               	btfss	__tdiv_to_l_@exp1,7,c
  5141  00217C  D00E               	goto	l3256
  5142  00217E  5011               	movf	__tdiv_to_l_@exp1,w,c
  5143  002180  0A80               	xorlw	128
  5144  002182  0F97               	addlw	151
  5145  002184  A0D8               	btfss	status,0,c
  5146  002186  D7A8               	goto	u3280
  5147  002188                     l3252:
  5148  002188  FFFF               	dw	65535	; assembler added errata NOP
  5149  00218A  90D8               	bcf	status,0,c
  5150  00218C  320F               	rrcf	__tdiv_to_l_@quot+3,f,c
  5151  00218E  320E               	rrcf	__tdiv_to_l_@quot+2,f,c
  5152  002190  320D               	rrcf	__tdiv_to_l_@quot+1,f,c
  5153  002192  320C               	rrcf	__tdiv_to_l_@quot,f,c
  5154  002194  3E11               	incfsz	__tdiv_to_l_@exp1,f,c
  5155  002196  D7F8               	goto	l3252
  5156  002198  D010               	goto	u3350
  5157  00219A                     l3256:
  5158  00219A  FFFF               	dw	65535	; assembler added errata NOP
  5159  00219C  0E17               	movlw	23
  5160  00219E  6411               	cpfsgt	__tdiv_to_l_@exp1,c
  5161  0021A0  D008               	goto	l3264
  5162  0021A2  D79A               	goto	u3280
  5163  0021A4                     l3262:
  5164  0021A4  FFFF               	dw	65535	; assembler added errata NOP
  5165  0021A6  90D8               	bcf	status,0,c
  5166  0021A8  360C               	rlcf	__tdiv_to_l_@quot,f,c
  5167  0021AA  360D               	rlcf	__tdiv_to_l_@quot+1,f,c
  5168  0021AC  360E               	rlcf	__tdiv_to_l_@quot+2,f,c
  5169  0021AE  360F               	rlcf	__tdiv_to_l_@quot+3,f,c
  5170  0021B0  0611               	decf	__tdiv_to_l_@exp1,f,c
  5171  0021B2                     l3264:
  5172  0021B2  FFFF               	dw	65535	; assembler added errata NOP
  5173  0021B4  5011               	movf	__tdiv_to_l_@exp1,w,c
  5174  0021B6  A4D8               	btfss	status,2,c
  5175  0021B8  D7F5               	goto	l3262
  5176  0021BA                     u3350:
  5177  0021BA  FFFF               	dw	65535	; assembler added errata NOP
  5178  0021BC  C00C  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  5179  0021C0  C00D  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  5180  0021C4  C00E  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  5181  0021C8  C00F  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  5182  0021CC                     l703:
  5183  0021CC  FFFF               	dw	65535	; assembler added errata NOP
  5184  0021CE  0012               	return		;funcret
  5185  0021D0  FFFF               	dw	65535	; errata NOP
  5186  0021D2                     __end_of__tdiv_to_l_:
  5187                           	opt callstack 0
  5188                           
  5189 ;; *************** function __div_to_l_ *****************
  5190 ;; Defined at:
  5191 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fldivl.c"
  5192 ;; Parameters:    Size  Location     Type
  5193 ;;  f1              4    0[COMRAM] unsigned long 
  5194 ;;  f2              4    4[COMRAM] unsigned long 
  5195 ;; Auto vars:     Size  Location     Type
  5196 ;;  quot            4    8[COMRAM] unsigned long 
  5197 ;;  exp1            1   13[COMRAM] unsigned char 
  5198 ;;  cntr            1   12[COMRAM] unsigned char 
  5199 ;; Return value:  Size  Location     Type
  5200 ;;                  4    0[COMRAM] unsigned long 
  5201 ;; Registers used:
  5202 ;;		wreg, status,2, status,0
  5203 ;; Tracked objects:
  5204 ;;		On entry : 0/0
  5205 ;;		On exit  : 0/0
  5206 ;;		Unchanged: 0/0
  5207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5208 ;;      Params:         8       0       0       0       0       0       0
  5209 ;;      Locals:         6       0       0       0       0       0       0
  5210 ;;      Temps:          0       0       0       0       0       0       0
  5211 ;;      Totals:        14       0       0       0       0       0       0
  5212 ;;Total ram usage:       14 bytes
  5213 ;; Hardware stack levels used:    1
  5214 ;; Hardware stack levels required when called:    1
  5215 ;; This function calls:
  5216 ;;		Nothing
  5217 ;; This function is called by:
  5218 ;;		_sprintf
  5219 ;; This function uses a non-reentrant model
  5220 ;;
  5221                           
  5222                           	psect	text13
  5223  0021D2                     __ptext13:
  5224                           	opt callstack 0
  5225  0021D2                     __div_to_l_:
  5226                           	opt callstack 0
  5227  0021D2  FFFF               	dw	65535	; assembler added errata NOP
  5228                           
  5229                           ;incstack = 0
  5230  0021D4  3403               	rlcf	__div_to_l_@f1+2,w,c
  5231  0021D6  3404               	rlcf	__div_to_l_@f1+3,w,c
  5232  0021D8  6E0E               	movwf	__div_to_l_@exp1,c
  5233  0021DA  500E               	movf	__div_to_l_@exp1,w,c
  5234  0021DC  A4D8               	btfss	status,2,c
  5235  0021DE  D00A               	goto	l3272
  5236  0021E0                     u3360:
  5237  0021E0  FFFF               	dw	65535	; assembler added errata NOP
  5238  0021E2  0E00               	movlw	0
  5239  0021E4  6E01               	movwf	?__div_to_l_,c
  5240  0021E6  0E00               	movlw	0
  5241  0021E8  6E02               	movwf	?__div_to_l_+1,c
  5242  0021EA  0E00               	movlw	0
  5243  0021EC  6E03               	movwf	?__div_to_l_+2,c
  5244  0021EE  0E00               	movlw	0
  5245  0021F0  6E04               	movwf	?__div_to_l_+3,c
  5246  0021F2  D072               	goto	l594
  5247  0021F4                     l3272:
  5248  0021F4  FFFF               	dw	65535	; assembler added errata NOP
  5249  0021F6  3407               	rlcf	__div_to_l_@f2+2,w,c
  5250  0021F8  3408               	rlcf	__div_to_l_@f2+3,w,c
  5251  0021FA  6E0D               	movwf	__div_to_l_@cntr,c
  5252  0021FC  500D               	movf	__div_to_l_@cntr,w,c
  5253  0021FE  B4D8               	btfsc	status,2,c
  5254  002200  D7EF               	goto	u3360
  5255  002202  8E03               	bsf	__div_to_l_@f1+2,7,c
  5256  002204  0EFF               	movlw	255
  5257  002206  1601               	andwf	__div_to_l_@f1,f,c
  5258  002208  0EFF               	movlw	255
  5259  00220A  1602               	andwf	__div_to_l_@f1+1,f,c
  5260  00220C  0EFF               	movlw	255
  5261  00220E  1603               	andwf	__div_to_l_@f1+2,f,c
  5262  002210  0E00               	movlw	0
  5263  002212  1604               	andwf	__div_to_l_@f1+3,f,c
  5264  002214  8E07               	bsf	__div_to_l_@f2+2,7,c
  5265  002216  0EFF               	movlw	255
  5266  002218  1605               	andwf	__div_to_l_@f2,f,c
  5267  00221A  0EFF               	movlw	255
  5268  00221C  1606               	andwf	__div_to_l_@f2+1,f,c
  5269  00221E  0EFF               	movlw	255
  5270  002220  1607               	andwf	__div_to_l_@f2+2,f,c
  5271  002222  0E00               	movlw	0
  5272  002224  1608               	andwf	__div_to_l_@f2+3,f,c
  5273  002226  0E00               	movlw	0
  5274  002228  6E09               	movwf	__div_to_l_@quot,c
  5275  00222A  0E00               	movlw	0
  5276  00222C  6E0A               	movwf	__div_to_l_@quot+1,c
  5277  00222E  0E00               	movlw	0
  5278  002230  6E0B               	movwf	__div_to_l_@quot+2,c
  5279  002232  0E00               	movlw	0
  5280  002234  6E0C               	movwf	__div_to_l_@quot+3,c
  5281  002236  0E7F               	movlw	127
  5282  002238  5E0E               	subwf	__div_to_l_@exp1,f,c
  5283  00223A  500D               	movf	__div_to_l_@cntr,w,c
  5284  00223C  0FA0               	addlw	160
  5285  00223E  5E0E               	subwf	__div_to_l_@exp1,f,c
  5286  002240  0E20               	movlw	32
  5287  002242  6E0D               	movwf	__div_to_l_@cntr,c
  5288  002244                     l3292:
  5289  002244  FFFF               	dw	65535	; assembler added errata NOP
  5290  002246  90D8               	bcf	status,0,c
  5291  002248  3609               	rlcf	__div_to_l_@quot,f,c
  5292  00224A  360A               	rlcf	__div_to_l_@quot+1,f,c
  5293  00224C  360B               	rlcf	__div_to_l_@quot+2,f,c
  5294  00224E  360C               	rlcf	__div_to_l_@quot+3,f,c
  5295  002250  5005               	movf	__div_to_l_@f2,w,c
  5296  002252  5C01               	subwf	__div_to_l_@f1,w,c
  5297  002254  5006               	movf	__div_to_l_@f2+1,w,c
  5298  002256  5802               	subwfb	__div_to_l_@f1+1,w,c
  5299  002258  5007               	movf	__div_to_l_@f2+2,w,c
  5300  00225A  5803               	subwfb	__div_to_l_@f1+2,w,c
  5301  00225C  5008               	movf	__div_to_l_@f2+3,w,c
  5302  00225E  5804               	subwfb	__div_to_l_@f1+3,w,c
  5303  002260  A0D8               	btfss	status,0,c
  5304  002262  D009               	goto	l3300
  5305  002264  5005               	movf	__div_to_l_@f2,w,c
  5306  002266  5E01               	subwf	__div_to_l_@f1,f,c
  5307  002268  5006               	movf	__div_to_l_@f2+1,w,c
  5308  00226A  5A02               	subwfb	__div_to_l_@f1+1,f,c
  5309  00226C  5007               	movf	__div_to_l_@f2+2,w,c
  5310  00226E  5A03               	subwfb	__div_to_l_@f1+2,f,c
  5311  002270  5008               	movf	__div_to_l_@f2+3,w,c
  5312  002272  5A04               	subwfb	__div_to_l_@f1+3,f,c
  5313  002274  8009               	bsf	__div_to_l_@quot,0,c
  5314  002276                     l3300:
  5315  002276  FFFF               	dw	65535	; assembler added errata NOP
  5316  002278  90D8               	bcf	status,0,c
  5317  00227A  3601               	rlcf	__div_to_l_@f1,f,c
  5318  00227C  3602               	rlcf	__div_to_l_@f1+1,f,c
  5319  00227E  3603               	rlcf	__div_to_l_@f1+2,f,c
  5320  002280  3604               	rlcf	__div_to_l_@f1+3,f,c
  5321  002282  2E0D               	decfsz	__div_to_l_@cntr,f,c
  5322  002284  D7DF               	goto	l3292
  5323  002286  AE0E               	btfss	__div_to_l_@exp1,7,c
  5324  002288  D00E               	goto	l3316
  5325  00228A  500E               	movf	__div_to_l_@exp1,w,c
  5326  00228C  0A80               	xorlw	128
  5327  00228E  0F9F               	addlw	159
  5328  002290  A0D8               	btfss	status,0,c
  5329  002292  D7A6               	goto	u3360
  5330  002294                     l3312:
  5331  002294  FFFF               	dw	65535	; assembler added errata NOP
  5332  002296  90D8               	bcf	status,0,c
  5333  002298  320C               	rrcf	__div_to_l_@quot+3,f,c
  5334  00229A  320B               	rrcf	__div_to_l_@quot+2,f,c
  5335  00229C  320A               	rrcf	__div_to_l_@quot+1,f,c
  5336  00229E  3209               	rrcf	__div_to_l_@quot,f,c
  5337  0022A0  3E0E               	incfsz	__div_to_l_@exp1,f,c
  5338  0022A2  D7F8               	goto	l3312
  5339  0022A4  D010               	goto	u3420
  5340  0022A6                     l3316:
  5341  0022A6  FFFF               	dw	65535	; assembler added errata NOP
  5342  0022A8  0E1F               	movlw	31
  5343  0022AA  640E               	cpfsgt	__div_to_l_@exp1,c
  5344  0022AC  D008               	goto	l3324
  5345  0022AE  D798               	goto	u3360
  5346  0022B0                     l3322:
  5347  0022B0  FFFF               	dw	65535	; assembler added errata NOP
  5348  0022B2  90D8               	bcf	status,0,c
  5349  0022B4  3609               	rlcf	__div_to_l_@quot,f,c
  5350  0022B6  360A               	rlcf	__div_to_l_@quot+1,f,c
  5351  0022B8  360B               	rlcf	__div_to_l_@quot+2,f,c
  5352  0022BA  360C               	rlcf	__div_to_l_@quot+3,f,c
  5353  0022BC  060E               	decf	__div_to_l_@exp1,f,c
  5354  0022BE                     l3324:
  5355  0022BE  FFFF               	dw	65535	; assembler added errata NOP
  5356  0022C0  500E               	movf	__div_to_l_@exp1,w,c
  5357  0022C2  A4D8               	btfss	status,2,c
  5358  0022C4  D7F5               	goto	l3322
  5359  0022C6                     u3420:
  5360  0022C6  FFFF               	dw	65535	; assembler added errata NOP
  5361  0022C8  C009  F001         	movff	__div_to_l_@quot,?__div_to_l_
  5362  0022CC  C00A  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  5363  0022D0  C00B  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  5364  0022D4  C00C  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  5365  0022D8                     l594:
  5366  0022D8  FFFF               	dw	65535	; assembler added errata NOP
  5367  0022DA  0012               	return		;funcret
  5368  0022DC  FFFF               	dw	65535	; errata NOP
  5369  0022DE                     __end_of__div_to_l_:
  5370                           	opt callstack 0
  5371                           
  5372 ;; *************** function ___wmul *****************
  5373 ;; Defined at:
  5374 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  5375 ;; Parameters:    Size  Location     Type
  5376 ;;  multiplier      2    0[COMRAM] unsigned int 
  5377 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5378 ;; Auto vars:     Size  Location     Type
  5379 ;;  product         2    4[COMRAM] unsigned int 
  5380 ;; Return value:  Size  Location     Type
  5381 ;;                  2    0[COMRAM] unsigned int 
  5382 ;; Registers used:
  5383 ;;		wreg, status,2, status,0, prodl, prodh
  5384 ;; Tracked objects:
  5385 ;;		On entry : 0/0
  5386 ;;		On exit  : 0/0
  5387 ;;		Unchanged: 0/0
  5388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5389 ;;      Params:         4       0       0       0       0       0       0
  5390 ;;      Locals:         2       0       0       0       0       0       0
  5391 ;;      Temps:          0       0       0       0       0       0       0
  5392 ;;      Totals:         6       0       0       0       0       0       0
  5393 ;;Total ram usage:        6 bytes
  5394 ;; Hardware stack levels used:    1
  5395 ;; Hardware stack levels required when called:    1
  5396 ;; This function calls:
  5397 ;;		Nothing
  5398 ;; This function is called by:
  5399 ;;		_sprintf
  5400 ;; This function uses a non-reentrant model
  5401 ;;
  5402                           
  5403                           	psect	text14
  5404  002BBE                     __ptext14:
  5405                           	opt callstack 0
  5406  002BBE                     ___wmul:
  5407                           	opt callstack 0
  5408  002BBE  FFFF               	dw	65535	; assembler added errata NOP
  5409                           
  5410                           ;incstack = 0
  5411  002BC0  5001               	movf	___wmul@multiplier,w,c
  5412  002BC2  0203               	mulwf	___wmul@multiplicand,c
  5413  002BC4  CFF3 F005          	movff	prodl,___wmul@product
  5414  002BC8  CFF4 F006          	movff	prodh,___wmul@product+1
  5415  002BCC  5001               	movf	___wmul@multiplier,w,c
  5416  002BCE  0204               	mulwf	___wmul@multiplicand+1,c
  5417  002BD0  50F3               	movf	prodl,w,c
  5418  002BD2  2606               	addwf	___wmul@product+1,f,c
  5419  002BD4  5002               	movf	___wmul@multiplier+1,w,c
  5420  002BD6  0203               	mulwf	___wmul@multiplicand,c
  5421  002BD8  50F3               	movf	prodl,w,c
  5422  002BDA  2606               	addwf	___wmul@product+1,f,c
  5423  002BDC  C005  F001         	movff	___wmul@product,?___wmul
  5424  002BE0  C006  F002         	movff	___wmul@product+1,?___wmul+1
  5425  002BE4  0012               	return		;funcret
  5426  002BE6  FFFF               	dw	65535	; errata NOP
  5427  002BE8                     __end_of___wmul:
  5428                           	opt callstack 0
  5429                           
  5430 ;; *************** function ___llmod *****************
  5431 ;; Defined at:
  5432 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
  5433 ;; Parameters:    Size  Location     Type
  5434 ;;  dividend        4    0[COMRAM] unsigned long 
  5435 ;;  divisor         4    4[COMRAM] unsigned long 
  5436 ;; Auto vars:     Size  Location     Type
  5437 ;;  counter         1    8[COMRAM] unsigned char 
  5438 ;; Return value:  Size  Location     Type
  5439 ;;                  4    0[COMRAM] unsigned long 
  5440 ;; Registers used:
  5441 ;;		wreg, status,2, status,0
  5442 ;; Tracked objects:
  5443 ;;		On entry : 0/0
  5444 ;;		On exit  : 0/0
  5445 ;;		Unchanged: 0/0
  5446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5447 ;;      Params:         8       0       0       0       0       0       0
  5448 ;;      Locals:         1       0       0       0       0       0       0
  5449 ;;      Temps:          0       0       0       0       0       0       0
  5450 ;;      Totals:         9       0       0       0       0       0       0
  5451 ;;Total ram usage:        9 bytes
  5452 ;; Hardware stack levels used:    1
  5453 ;; Hardware stack levels required when called:    1
  5454 ;; This function calls:
  5455 ;;		Nothing
  5456 ;; This function is called by:
  5457 ;;		_sprintf
  5458 ;; This function uses a non-reentrant model
  5459 ;;
  5460                           
  5461                           	psect	text15
  5462  0027BA                     __ptext15:
  5463                           	opt callstack 0
  5464  0027BA                     ___llmod:
  5465                           	opt callstack 0
  5466  0027BA  FFFF               	dw	65535	; assembler added errata NOP
  5467                           
  5468                           ;incstack = 0
  5469  0027BC  5005               	movf	___llmod@divisor,w,c
  5470  0027BE  1006               	iorwf	___llmod@divisor+1,w,c
  5471  0027C0  1007               	iorwf	___llmod@divisor+2,w,c
  5472  0027C2  1008               	iorwf	___llmod@divisor+3,w,c
  5473  0027C4  B4D8               	btfsc	status,2,c
  5474  0027C6  D028               	goto	l782
  5475  0027C8  0E01               	movlw	1
  5476  0027CA  6E09               	movwf	___llmod@counter,c
  5477  0027CC  D007               	goto	l3594
  5478  0027CE                     l3592:
  5479  0027CE  FFFF               	dw	65535	; assembler added errata NOP
  5480  0027D0  90D8               	bcf	status,0,c
  5481  0027D2  3605               	rlcf	___llmod@divisor,f,c
  5482  0027D4  3606               	rlcf	___llmod@divisor+1,f,c
  5483  0027D6  3607               	rlcf	___llmod@divisor+2,f,c
  5484  0027D8  3608               	rlcf	___llmod@divisor+3,f,c
  5485  0027DA  2A09               	incf	___llmod@counter,f,c
  5486  0027DC                     l3594:
  5487  0027DC  FFFF               	dw	65535	; assembler added errata NOP
  5488  0027DE  AE08               	btfss	___llmod@divisor+3,7,c
  5489  0027E0  D7F6               	goto	l3592
  5490  0027E2                     u3860:
  5491  0027E2  FFFF               	dw	65535	; assembler added errata NOP
  5492  0027E4  5005               	movf	___llmod@divisor,w,c
  5493  0027E6  5C01               	subwf	___llmod@dividend,w,c
  5494  0027E8  5006               	movf	___llmod@divisor+1,w,c
  5495  0027EA  5802               	subwfb	___llmod@dividend+1,w,c
  5496  0027EC  5007               	movf	___llmod@divisor+2,w,c
  5497  0027EE  5803               	subwfb	___llmod@dividend+2,w,c
  5498  0027F0  5008               	movf	___llmod@divisor+3,w,c
  5499  0027F2  5804               	subwfb	___llmod@dividend+3,w,c
  5500  0027F4  A0D8               	btfss	status,0,c
  5501  0027F6  D008               	goto	l3600
  5502  0027F8  5005               	movf	___llmod@divisor,w,c
  5503  0027FA  5E01               	subwf	___llmod@dividend,f,c
  5504  0027FC  5006               	movf	___llmod@divisor+1,w,c
  5505  0027FE  5A02               	subwfb	___llmod@dividend+1,f,c
  5506  002800  5007               	movf	___llmod@divisor+2,w,c
  5507  002802  5A03               	subwfb	___llmod@dividend+2,f,c
  5508  002804  5008               	movf	___llmod@divisor+3,w,c
  5509  002806  5A04               	subwfb	___llmod@dividend+3,f,c
  5510  002808                     l3600:
  5511  002808  FFFF               	dw	65535	; assembler added errata NOP
  5512  00280A  90D8               	bcf	status,0,c
  5513  00280C  3208               	rrcf	___llmod@divisor+3,f,c
  5514  00280E  3207               	rrcf	___llmod@divisor+2,f,c
  5515  002810  3206               	rrcf	___llmod@divisor+1,f,c
  5516  002812  3205               	rrcf	___llmod@divisor,f,c
  5517  002814  2E09               	decfsz	___llmod@counter,f,c
  5518  002816  D7E5               	goto	u3860
  5519  002818                     l782:
  5520  002818  FFFF               	dw	65535	; assembler added errata NOP
  5521  00281A  C001  F001         	movff	___llmod@dividend,?___llmod
  5522  00281E  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  5523  002822  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  5524  002826  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  5525  00282A  0012               	return		;funcret
  5526  00282C  FFFF               	dw	65535	; errata NOP
  5527  00282E                     __end_of___llmod:
  5528                           	opt callstack 0
  5529                           
  5530 ;; *************** function ___lldiv *****************
  5531 ;; Defined at:
  5532 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  5533 ;; Parameters:    Size  Location     Type
  5534 ;;  dividend        4    0[COMRAM] unsigned long 
  5535 ;;  divisor         4    4[COMRAM] unsigned long 
  5536 ;; Auto vars:     Size  Location     Type
  5537 ;;  quotient        4    8[COMRAM] unsigned long 
  5538 ;;  counter         1   12[COMRAM] unsigned char 
  5539 ;; Return value:  Size  Location     Type
  5540 ;;                  4    0[COMRAM] unsigned long 
  5541 ;; Registers used:
  5542 ;;		wreg, status,2, status,0
  5543 ;; Tracked objects:
  5544 ;;		On entry : 0/0
  5545 ;;		On exit  : 0/0
  5546 ;;		Unchanged: 0/0
  5547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5548 ;;      Params:         8       0       0       0       0       0       0
  5549 ;;      Locals:         5       0       0       0       0       0       0
  5550 ;;      Temps:          0       0       0       0       0       0       0
  5551 ;;      Totals:        13       0       0       0       0       0       0
  5552 ;;Total ram usage:       13 bytes
  5553 ;; Hardware stack levels used:    1
  5554 ;; Hardware stack levels required when called:    1
  5555 ;; This function calls:
  5556 ;;		Nothing
  5557 ;; This function is called by:
  5558 ;;		_sprintf
  5559 ;; This function uses a non-reentrant model
  5560 ;;
  5561                           
  5562                           	psect	text16
  5563  0026A6                     __ptext16:
  5564                           	opt callstack 0
  5565  0026A6                     ___lldiv:
  5566                           	opt callstack 0
  5567  0026A6  FFFF               	dw	65535	; assembler added errata NOP
  5568                           
  5569                           ;incstack = 0
  5570  0026A8  0E00               	movlw	0
  5571  0026AA  6E09               	movwf	___lldiv@quotient,c
  5572  0026AC  0E00               	movlw	0
  5573  0026AE  6E0A               	movwf	___lldiv@quotient+1,c
  5574  0026B0  0E00               	movlw	0
  5575  0026B2  6E0B               	movwf	___lldiv@quotient+2,c
  5576  0026B4  0E00               	movlw	0
  5577  0026B6  6E0C               	movwf	___lldiv@quotient+3,c
  5578  0026B8  5005               	movf	___lldiv@divisor,w,c
  5579  0026BA  1006               	iorwf	___lldiv@divisor+1,w,c
  5580  0026BC  1007               	iorwf	___lldiv@divisor+2,w,c
  5581  0026BE  1008               	iorwf	___lldiv@divisor+3,w,c
  5582  0026C0  B4D8               	btfsc	status,2,c
  5583  0026C2  D02E               	goto	l367
  5584  0026C4  0E01               	movlw	1
  5585  0026C6  6E0D               	movwf	___lldiv@counter,c
  5586  0026C8  D007               	goto	l3340
  5587  0026CA                     l3338:
  5588  0026CA  FFFF               	dw	65535	; assembler added errata NOP
  5589  0026CC  90D8               	bcf	status,0,c
  5590  0026CE  3605               	rlcf	___lldiv@divisor,f,c
  5591  0026D0  3606               	rlcf	___lldiv@divisor+1,f,c
  5592  0026D2  3607               	rlcf	___lldiv@divisor+2,f,c
  5593  0026D4  3608               	rlcf	___lldiv@divisor+3,f,c
  5594  0026D6  2A0D               	incf	___lldiv@counter,f,c
  5595  0026D8                     l3340:
  5596  0026D8  FFFF               	dw	65535	; assembler added errata NOP
  5597  0026DA  AE08               	btfss	___lldiv@divisor+3,7,c
  5598  0026DC  D7F6               	goto	l3338
  5599  0026DE                     u3440:
  5600  0026DE  FFFF               	dw	65535	; assembler added errata NOP
  5601  0026E0  90D8               	bcf	status,0,c
  5602  0026E2  3609               	rlcf	___lldiv@quotient,f,c
  5603  0026E4  360A               	rlcf	___lldiv@quotient+1,f,c
  5604  0026E6  360B               	rlcf	___lldiv@quotient+2,f,c
  5605  0026E8  360C               	rlcf	___lldiv@quotient+3,f,c
  5606  0026EA  5005               	movf	___lldiv@divisor,w,c
  5607  0026EC  5C01               	subwf	___lldiv@dividend,w,c
  5608  0026EE  5006               	movf	___lldiv@divisor+1,w,c
  5609  0026F0  5802               	subwfb	___lldiv@dividend+1,w,c
  5610  0026F2  5007               	movf	___lldiv@divisor+2,w,c
  5611  0026F4  5803               	subwfb	___lldiv@dividend+2,w,c
  5612  0026F6  5008               	movf	___lldiv@divisor+3,w,c
  5613  0026F8  5804               	subwfb	___lldiv@dividend+3,w,c
  5614  0026FA  A0D8               	btfss	status,0,c
  5615  0026FC  D009               	goto	l3350
  5616  0026FE  5005               	movf	___lldiv@divisor,w,c
  5617  002700  5E01               	subwf	___lldiv@dividend,f,c
  5618  002702  5006               	movf	___lldiv@divisor+1,w,c
  5619  002704  5A02               	subwfb	___lldiv@dividend+1,f,c
  5620  002706  5007               	movf	___lldiv@divisor+2,w,c
  5621  002708  5A03               	subwfb	___lldiv@dividend+2,f,c
  5622  00270A  5008               	movf	___lldiv@divisor+3,w,c
  5623  00270C  5A04               	subwfb	___lldiv@dividend+3,f,c
  5624  00270E  8009               	bsf	___lldiv@quotient,0,c
  5625  002710                     l3350:
  5626  002710  FFFF               	dw	65535	; assembler added errata NOP
  5627  002712  90D8               	bcf	status,0,c
  5628  002714  3208               	rrcf	___lldiv@divisor+3,f,c
  5629  002716  3207               	rrcf	___lldiv@divisor+2,f,c
  5630  002718  3206               	rrcf	___lldiv@divisor+1,f,c
  5631  00271A  3205               	rrcf	___lldiv@divisor,f,c
  5632  00271C  2E0D               	decfsz	___lldiv@counter,f,c
  5633  00271E  D7DF               	goto	u3440
  5634  002720                     l367:
  5635  002720  FFFF               	dw	65535	; assembler added errata NOP
  5636  002722  C009  F001         	movff	___lldiv@quotient,?___lldiv
  5637  002726  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  5638  00272A  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  5639  00272E  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  5640  002732  0012               	return		;funcret
  5641  002734  FFFF               	dw	65535	; errata NOP
  5642  002736                     __end_of___lldiv:
  5643                           	opt callstack 0
  5644                           
  5645 ;; *************** function ___fltol *****************
  5646 ;; Defined at:
  5647 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  5648 ;; Parameters:    Size  Location     Type
  5649 ;;  f1              4   48[COMRAM] unsigned long 
  5650 ;; Auto vars:     Size  Location     Type
  5651 ;;  exp1            1   57[COMRAM] unsigned char 
  5652 ;;  sign1           1   56[COMRAM] unsigned char 
  5653 ;; Return value:  Size  Location     Type
  5654 ;;                  4   48[COMRAM] long 
  5655 ;; Registers used:
  5656 ;;		wreg, status,2, status,0
  5657 ;; Tracked objects:
  5658 ;;		On entry : 0/0
  5659 ;;		On exit  : 0/0
  5660 ;;		Unchanged: 0/0
  5661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5662 ;;      Params:         4       0       0       0       0       0       0
  5663 ;;      Locals:         2       0       0       0       0       0       0
  5664 ;;      Temps:          4       0       0       0       0       0       0
  5665 ;;      Totals:        10       0       0       0       0       0       0
  5666 ;;Total ram usage:       10 bytes
  5667 ;; Hardware stack levels used:    1
  5668 ;; Hardware stack levels required when called:    1
  5669 ;; This function calls:
  5670 ;;		Nothing
  5671 ;; This function is called by:
  5672 ;;		_sprintf
  5673 ;; This function uses a non-reentrant model
  5674 ;;
  5675                           
  5676                           	psect	text17
  5677  0024A4                     __ptext17:
  5678                           	opt callstack 0
  5679  0024A4                     ___fltol:
  5680                           	opt callstack 0
  5681  0024A4  FFFF               	dw	65535	; assembler added errata NOP
  5682                           
  5683                           ;incstack = 0
  5684  0024A6  3433               	rlcf	___fltol@f1+2,w,c
  5685  0024A8  3434               	rlcf	___fltol@f1+3,w,c
  5686  0024AA  6E3A               	movwf	___fltol@exp1,c
  5687  0024AC  503A               	movf	___fltol@exp1,w,c
  5688  0024AE  A4D8               	btfss	status,2,c
  5689  0024B0  D00A               	goto	l3550
  5690  0024B2                     u3780:
  5691  0024B2  FFFF               	dw	65535	; assembler added errata NOP
  5692  0024B4  0E00               	movlw	0
  5693  0024B6  6E31               	movwf	?___fltol,c
  5694  0024B8  0E00               	movlw	0
  5695  0024BA  6E32               	movwf	?___fltol+1,c
  5696  0024BC  0E00               	movlw	0
  5697  0024BE  6E33               	movwf	?___fltol+2,c
  5698  0024C0  0E00               	movlw	0
  5699  0024C2  6E34               	movwf	?___fltol+3,c
  5700  0024C4  D056               	goto	l646
  5701  0024C6                     l3550:
  5702  0024C6  FFFF               	dw	65535	; assembler added errata NOP
  5703  0024C8  C031  F035         	movff	___fltol@f1,??___fltol
  5704  0024CC  C032  F036         	movff	___fltol@f1+1,??___fltol+1
  5705  0024D0  C033  F037         	movff	___fltol@f1+2,??___fltol+2
  5706  0024D4  C034  F038         	movff	___fltol@f1+3,??___fltol+3
  5707  0024D8  0E20               	movlw	32
  5708  0024DA  D006               	goto	u3790
  5709  0024DC                     u3795:
  5710  0024DC  FFFF               	dw	65535	; assembler added errata NOP
  5711  0024DE  90D8               	bcf	status,0,c
  5712  0024E0  3238               	rrcf	??___fltol+3,f,c
  5713  0024E2  3237               	rrcf	??___fltol+2,f,c
  5714  0024E4  3236               	rrcf	??___fltol+1,f,c
  5715  0024E6  3235               	rrcf	??___fltol,f,c
  5716  0024E8                     u3790:
  5717  0024E8  FFFF               	dw	65535	; assembler added errata NOP
  5718  0024EA  2EE8               	decfsz	wreg,f,c
  5719  0024EC  D7F7               	goto	u3795
  5720  0024EE  5035               	movf	??___fltol,w,c
  5721  0024F0  6E39               	movwf	___fltol@sign1,c
  5722  0024F2  8E33               	bsf	___fltol@f1+2,7,c
  5723  0024F4  0EFF               	movlw	255
  5724  0024F6  1631               	andwf	___fltol@f1,f,c
  5725  0024F8  0EFF               	movlw	255
  5726  0024FA  1632               	andwf	___fltol@f1+1,f,c
  5727  0024FC  0EFF               	movlw	255
  5728  0024FE  1633               	andwf	___fltol@f1+2,f,c
  5729  002500  0E00               	movlw	0
  5730  002502  1634               	andwf	___fltol@f1+3,f,c
  5731  002504  0E96               	movlw	150
  5732  002506  5E3A               	subwf	___fltol@exp1,f,c
  5733  002508  AE3A               	btfss	___fltol@exp1,7,c
  5734  00250A  D00E               	goto	l3570
  5735  00250C  503A               	movf	___fltol@exp1,w,c
  5736  00250E  0A80               	xorlw	128
  5737  002510  0F97               	addlw	151
  5738  002512  A0D8               	btfss	status,0,c
  5739  002514  D7CE               	goto	u3780
  5740  002516                     l3566:
  5741  002516  FFFF               	dw	65535	; assembler added errata NOP
  5742  002518  90D8               	bcf	status,0,c
  5743  00251A  3234               	rrcf	___fltol@f1+3,f,c
  5744  00251C  3233               	rrcf	___fltol@f1+2,f,c
  5745  00251E  3232               	rrcf	___fltol@f1+1,f,c
  5746  002520  3231               	rrcf	___fltol@f1,f,c
  5747  002522  3E3A               	incfsz	___fltol@exp1,f,c
  5748  002524  D7F8               	goto	l3566
  5749  002526  D010               	goto	u3830
  5750  002528                     l3570:
  5751  002528  FFFF               	dw	65535	; assembler added errata NOP
  5752  00252A  0E1F               	movlw	31
  5753  00252C  643A               	cpfsgt	___fltol@exp1,c
  5754  00252E  D008               	goto	l3578
  5755  002530  D7C0               	goto	u3780
  5756  002532                     l3576:
  5757  002532  FFFF               	dw	65535	; assembler added errata NOP
  5758  002534  90D8               	bcf	status,0,c
  5759  002536  3631               	rlcf	___fltol@f1,f,c
  5760  002538  3632               	rlcf	___fltol@f1+1,f,c
  5761  00253A  3633               	rlcf	___fltol@f1+2,f,c
  5762  00253C  3634               	rlcf	___fltol@f1+3,f,c
  5763  00253E  063A               	decf	___fltol@exp1,f,c
  5764  002540                     l3578:
  5765  002540  FFFF               	dw	65535	; assembler added errata NOP
  5766  002542  503A               	movf	___fltol@exp1,w,c
  5767  002544  A4D8               	btfss	status,2,c
  5768  002546  D7F5               	goto	l3576
  5769  002548                     u3830:
  5770  002548  FFFF               	dw	65535	; assembler added errata NOP
  5771  00254A  5039               	movf	___fltol@sign1,w,c
  5772  00254C  B4D8               	btfsc	status,2,c
  5773  00254E  D008               	goto	l3584
  5774  002550  1E34               	comf	___fltol@f1+3,f,c
  5775  002552  1E33               	comf	___fltol@f1+2,f,c
  5776  002554  1E32               	comf	___fltol@f1+1,f,c
  5777  002556  6C31               	negf	___fltol@f1,c
  5778  002558  0E00               	movlw	0
  5779  00255A  2232               	addwfc	___fltol@f1+1,f,c
  5780  00255C  2233               	addwfc	___fltol@f1+2,f,c
  5781  00255E  2234               	addwfc	___fltol@f1+3,f,c
  5782  002560                     l3584:
  5783  002560  FFFF               	dw	65535	; assembler added errata NOP
  5784  002562  C031  F031         	movff	___fltol@f1,?___fltol
  5785  002566  C032  F032         	movff	___fltol@f1+1,?___fltol+1
  5786  00256A  C033  F033         	movff	___fltol@f1+2,?___fltol+2
  5787  00256E  C034  F034         	movff	___fltol@f1+3,?___fltol+3
  5788  002572                     l646:
  5789  002572  FFFF               	dw	65535	; assembler added errata NOP
  5790  002574  0012               	return		;funcret
  5791  002576  FFFF               	dw	65535	; errata NOP
  5792  002578                     __end_of___fltol:
  5793                           	opt callstack 0
  5794                           
  5795 ;; *************** function ___flsub *****************
  5796 ;; Defined at:
  5797 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  5798 ;; Parameters:    Size  Location     Type
  5799 ;;  b               4   68[COMRAM] long 
  5800 ;;  a               4   72[COMRAM] long 
  5801 ;; Auto vars:     Size  Location     Type
  5802 ;;		None
  5803 ;; Return value:  Size  Location     Type
  5804 ;;                  4   68[COMRAM] long 
  5805 ;; Registers used:
  5806 ;;		wreg, status,2, status,0, cstack
  5807 ;; Tracked objects:
  5808 ;;		On entry : 0/0
  5809 ;;		On exit  : 0/0
  5810 ;;		Unchanged: 0/0
  5811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5812 ;;      Params:         8       0       0       0       0       0       0
  5813 ;;      Locals:         0       0       0       0       0       0       0
  5814 ;;      Temps:          0       0       0       0       0       0       0
  5815 ;;      Totals:         8       0       0       0       0       0       0
  5816 ;;Total ram usage:        8 bytes
  5817 ;; Hardware stack levels used:    1
  5818 ;; Hardware stack levels required when called:    2
  5819 ;; This function calls:
  5820 ;;		___fladd
  5821 ;; This function is called by:
  5822 ;;		_sprintf
  5823 ;; This function uses a non-reentrant model
  5824 ;;
  5825                           
  5826                           	psect	text18
  5827  002ACA                     __ptext18:
  5828                           	opt callstack 0
  5829  002ACA                     ___flsub:
  5830                           	opt callstack 0
  5831  002ACA  FFFF               	dw	65535	; assembler added errata NOP
  5832                           
  5833                           ;incstack = 0
  5834  002ACC  0E00               	movlw	0
  5835  002ACE  1A49               	xorwf	___flsub@a,f,c
  5836  002AD0  0E00               	movlw	0
  5837  002AD2  1A4A               	xorwf	___flsub@a+1,f,c
  5838  002AD4  0E00               	movlw	0
  5839  002AD6  1A4B               	xorwf	___flsub@a+2,f,c
  5840  002AD8  0E80               	movlw	128
  5841  002ADA  1A4C               	xorwf	___flsub@a+3,f,c
  5842  002ADC  C045  F035         	movff	___flsub@b,___fladd@b
  5843  002AE0  C046  F036         	movff	___flsub@b+1,___fladd@b+1
  5844  002AE4  C047  F037         	movff	___flsub@b+2,___fladd@b+2
  5845  002AE8  C048  F038         	movff	___flsub@b+3,___fladd@b+3
  5846  002AEC  C049  F039         	movff	___flsub@a,___fladd@a
  5847  002AF0  C04A  F03A         	movff	___flsub@a+1,___fladd@a+1
  5848  002AF4  C04B  F03B         	movff	___flsub@a+2,___fladd@a+2
  5849  002AF8  C04C  F03C         	movff	___flsub@a+3,___fladd@a+3
  5850  002AFC  EC5C  F00B         	call	___fladd	;wreg free
  5851  002B00  C035  F045         	movff	?___fladd,?___flsub
  5852  002B04  C036  F046         	movff	?___fladd+1,?___flsub+1
  5853  002B08  C037  F047         	movff	?___fladd+2,?___flsub+2
  5854  002B0C  C038  F048         	movff	?___fladd+3,?___flsub+3
  5855  002B10  0012               	return		;funcret
  5856  002B12  FFFF               	dw	65535	; errata NOP
  5857  002B14                     __end_of___flsub:
  5858                           	opt callstack 0
  5859                           
  5860 ;; *************** function ___flneg *****************
  5861 ;; Defined at:
  5862 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flneg.c"
  5863 ;; Parameters:    Size  Location     Type
  5864 ;;  f1              4    0[COMRAM] long 
  5865 ;; Auto vars:     Size  Location     Type
  5866 ;;		None
  5867 ;; Return value:  Size  Location     Type
  5868 ;;                  4    0[COMRAM] long 
  5869 ;; Registers used:
  5870 ;;		wreg, status,2, status,0
  5871 ;; Tracked objects:
  5872 ;;		On entry : 0/0
  5873 ;;		On exit  : 0/0
  5874 ;;		Unchanged: 0/0
  5875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5876 ;;      Params:         4       0       0       0       0       0       0
  5877 ;;      Locals:         0       0       0       0       0       0       0
  5878 ;;      Temps:          0       0       0       0       0       0       0
  5879 ;;      Totals:         4       0       0       0       0       0       0
  5880 ;;Total ram usage:        4 bytes
  5881 ;; Hardware stack levels used:    1
  5882 ;; Hardware stack levels required when called:    1
  5883 ;; This function calls:
  5884 ;;		Nothing
  5885 ;; This function is called by:
  5886 ;;		_sprintf
  5887 ;; This function uses a non-reentrant model
  5888 ;;
  5889                           
  5890                           	psect	text19
  5891  002B8A                     __ptext19:
  5892                           	opt callstack 0
  5893  002B8A                     ___flneg:
  5894                           	opt callstack 0
  5895  002B8A  FFFF               	dw	65535	; assembler added errata NOP
  5896                           
  5897                           ;incstack = 0
  5898  002B8C  5001               	movf	___flneg@f1,w,c
  5899  002B8E  1002               	iorwf	___flneg@f1+1,w,c
  5900  002B90  1003               	iorwf	___flneg@f1+2,w,c
  5901  002B92  1004               	iorwf	___flneg@f1+3,w,c
  5902  002B94  B4D8               	btfsc	status,2,c
  5903  002B96  D008               	goto	l3540
  5904  002B98  0E00               	movlw	0
  5905  002B9A  1A01               	xorwf	___flneg@f1,f,c
  5906  002B9C  0E00               	movlw	0
  5907  002B9E  1A02               	xorwf	___flneg@f1+1,f,c
  5908  002BA0  0E00               	movlw	0
  5909  002BA2  1A03               	xorwf	___flneg@f1+2,f,c
  5910  002BA4  0E80               	movlw	128
  5911  002BA6  1A04               	xorwf	___flneg@f1+3,f,c
  5912  002BA8                     l3540:
  5913  002BA8  FFFF               	dw	65535	; assembler added errata NOP
  5914  002BAA  C001  F001         	movff	___flneg@f1,?___flneg
  5915  002BAE  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5916  002BB2  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5917  002BB6  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5918  002BBA  0012               	return		;funcret
  5919  002BBC  FFFF               	dw	65535	; errata NOP
  5920  002BBE                     __end_of___flneg:
  5921                           	opt callstack 0
  5922                           
  5923 ;; *************** function ___flge *****************
  5924 ;; Defined at:
  5925 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
  5926 ;; Parameters:    Size  Location     Type
  5927 ;;  ff1             4    0[COMRAM] long 
  5928 ;;  ff2             4    4[COMRAM] long 
  5929 ;; Auto vars:     Size  Location     Type
  5930 ;;		None
  5931 ;; Return value:  Size  Location     Type
  5932 ;;		None               void
  5933 ;; Registers used:
  5934 ;;		wreg, status,2, status,0
  5935 ;; Tracked objects:
  5936 ;;		On entry : 0/0
  5937 ;;		On exit  : 0/0
  5938 ;;		Unchanged: 0/0
  5939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5940 ;;      Params:         8       0       0       0       0       0       0
  5941 ;;      Locals:         0       0       0       0       0       0       0
  5942 ;;      Temps:          4       0       0       0       0       0       0
  5943 ;;      Totals:        12       0       0       0       0       0       0
  5944 ;;Total ram usage:       12 bytes
  5945 ;; Hardware stack levels used:    1
  5946 ;; Hardware stack levels required when called:    1
  5947 ;; This function calls:
  5948 ;;		Nothing
  5949 ;; This function is called by:
  5950 ;;		_main
  5951 ;;		_sprintf
  5952 ;; This function uses a non-reentrant model
  5953 ;;
  5954                           
  5955                           	psect	text20
  5956  0023C4                     __ptext20:
  5957                           	opt callstack 0
  5958  0023C4                     ___flge:
  5959                           	opt callstack 0
  5960  0023C4  FFFF               	dw	65535	; assembler added errata NOP
  5961                           
  5962                           ;incstack = 0
  5963  0023C6  0E00               	movlw	0
  5964  0023C8  1401               	andwf	___flge@ff1,w,c
  5965  0023CA  6E09               	movwf	??___flge& (0+255),c
  5966  0023CC  0E00               	movlw	0
  5967  0023CE  1402               	andwf	___flge@ff1+1,w,c
  5968  0023D0  6E0A               	movwf	(??___flge+1)& (0+255),c
  5969  0023D2  0E80               	movlw	128
  5970  0023D4  1403               	andwf	___flge@ff1+2,w,c
  5971  0023D6  6E0B               	movwf	(??___flge+2)& (0+255),c
  5972  0023D8  0E7F               	movlw	127
  5973  0023DA  1404               	andwf	___flge@ff1+3,w,c
  5974  0023DC  6E0C               	movwf	(??___flge+3)& (0+255),c
  5975  0023DE  5009               	movf	??___flge,w,c
  5976  0023E0  100A               	iorwf	??___flge+1,w,c
  5977  0023E2  100B               	iorwf	??___flge+2,w,c
  5978  0023E4  100C               	iorwf	??___flge+3,w,c
  5979  0023E6  A4D8               	btfss	status,2,c
  5980  0023E8  D008               	goto	l3518
  5981  0023EA  0E00               	movlw	0
  5982  0023EC  6E01               	movwf	___flge@ff1,c
  5983  0023EE  0E00               	movlw	0
  5984  0023F0  6E02               	movwf	___flge@ff1+1,c
  5985  0023F2  0E00               	movlw	0
  5986  0023F4  6E03               	movwf	___flge@ff1+2,c
  5987  0023F6  0E00               	movlw	0
  5988  0023F8  6E04               	movwf	___flge@ff1+3,c
  5989  0023FA                     l3518:
  5990  0023FA  FFFF               	dw	65535	; assembler added errata NOP
  5991  0023FC  0E00               	movlw	0
  5992  0023FE  1405               	andwf	___flge@ff2,w,c
  5993  002400  6E09               	movwf	??___flge& (0+255),c
  5994  002402  0E00               	movlw	0
  5995  002404  1406               	andwf	___flge@ff2+1,w,c
  5996  002406  6E0A               	movwf	(??___flge+1)& (0+255),c
  5997  002408  0E80               	movlw	128
  5998  00240A  1407               	andwf	___flge@ff2+2,w,c
  5999  00240C  6E0B               	movwf	(??___flge+2)& (0+255),c
  6000  00240E  0E7F               	movlw	127
  6001  002410  1408               	andwf	___flge@ff2+3,w,c
  6002  002412  6E0C               	movwf	(??___flge+3)& (0+255),c
  6003  002414  5009               	movf	??___flge,w,c
  6004  002416  100A               	iorwf	??___flge+1,w,c
  6005  002418  100B               	iorwf	??___flge+2,w,c
  6006  00241A  100C               	iorwf	??___flge+3,w,c
  6007  00241C  A4D8               	btfss	status,2,c
  6008  00241E  D008               	goto	l3522
  6009  002420  0E00               	movlw	0
  6010  002422  6E05               	movwf	___flge@ff2,c
  6011  002424  0E00               	movlw	0
  6012  002426  6E06               	movwf	___flge@ff2+1,c
  6013  002428  0E00               	movlw	0
  6014  00242A  6E07               	movwf	___flge@ff2+2,c
  6015  00242C  0E00               	movlw	0
  6016  00242E  6E08               	movwf	___flge@ff2+3,c
  6017  002430                     l3522:
  6018  002430  FFFF               	dw	65535	; assembler added errata NOP
  6019  002432  AE04               	btfss	___flge@ff1+3,7,c
  6020  002434  D009               	goto	l3526
  6021  002436  6C01               	negf	___flge@ff1,c
  6022  002438  1E02               	comf	___flge@ff1+1,f,c
  6023  00243A  B0D8               	btfsc	status,0,c
  6024  00243C  2A02               	incf	___flge@ff1+1,f,c
  6025  00243E  1E03               	comf	___flge@ff1+2,f,c
  6026  002440  B0D8               	btfsc	status,0,c
  6027  002442  2A03               	incf	___flge@ff1+2,f,c
  6028  002444  0E80               	movlw	128
  6029  002446  5604               	subfwb	___flge@ff1+3,f,c
  6030  002448                     l3526:
  6031  002448  FFFF               	dw	65535	; assembler added errata NOP
  6032  00244A  AE08               	btfss	___flge@ff2+3,7,c
  6033  00244C  D009               	goto	l618
  6034  00244E  6C05               	negf	___flge@ff2,c
  6035  002450  1E06               	comf	___flge@ff2+1,f,c
  6036  002452  B0D8               	btfsc	status,0,c
  6037  002454  2A06               	incf	___flge@ff2+1,f,c
  6038  002456  1E07               	comf	___flge@ff2+2,f,c
  6039  002458  B0D8               	btfsc	status,0,c
  6040  00245A  2A07               	incf	___flge@ff2+2,f,c
  6041  00245C  0E80               	movlw	128
  6042  00245E  5608               	subfwb	___flge@ff2+3,f,c
  6043  002460                     l618:
  6044  002460  FFFF               	dw	65535	; assembler added errata NOP
  6045  002462  0E00               	movlw	0
  6046  002464  1A01               	xorwf	___flge@ff1,f,c
  6047  002466  0E00               	movlw	0
  6048  002468  1A02               	xorwf	___flge@ff1+1,f,c
  6049  00246A  0E00               	movlw	0
  6050  00246C  1A03               	xorwf	___flge@ff1+2,f,c
  6051  00246E  0E80               	movlw	128
  6052  002470  1A04               	xorwf	___flge@ff1+3,f,c
  6053  002472  0E00               	movlw	0
  6054  002474  1A05               	xorwf	___flge@ff2,f,c
  6055  002476  0E00               	movlw	0
  6056  002478  1A06               	xorwf	___flge@ff2+1,f,c
  6057  00247A  0E00               	movlw	0
  6058  00247C  1A07               	xorwf	___flge@ff2+2,f,c
  6059  00247E  0E80               	movlw	128
  6060  002480  1A08               	xorwf	___flge@ff2+3,f,c
  6061  002482  5005               	movf	___flge@ff2,w,c
  6062  002484  5C01               	subwf	___flge@ff1,w,c
  6063  002486  5006               	movf	___flge@ff2+1,w,c
  6064  002488  5802               	subwfb	___flge@ff1+1,w,c
  6065  00248A  5007               	movf	___flge@ff2+2,w,c
  6066  00248C  5803               	subwfb	___flge@ff1+2,w,c
  6067  00248E  5008               	movf	___flge@ff2+3,w,c
  6068  002490  5804               	subwfb	___flge@ff1+3,w,c
  6069  002492  B0D8               	btfsc	status,0,c
  6070  002494  D002               	goto	l3532
  6071  002496  90D8               	bcf	status,0,c
  6072  002498  D002               	goto	l619
  6073  00249A                     l3532:
  6074  00249A  FFFF               	dw	65535	; assembler added errata NOP
  6075  00249C  80D8               	bsf	status,0,c
  6076  00249E                     l619:
  6077  00249E  FFFF               	dw	65535	; assembler added errata NOP
  6078  0024A0  0012               	return		;funcret
  6079  0024A2  FFFF               	dw	65535	; errata NOP
  6080  0024A4                     __end_of___flge:
  6081                           	opt callstack 0
  6082                           
  6083 ;; *************** function ___fleq *****************
  6084 ;; Defined at:
  6085 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fleq.c"
  6086 ;; Parameters:    Size  Location     Type
  6087 ;;  ff1             4    0[COMRAM] long 
  6088 ;;  ff2             4    4[COMRAM] long 
  6089 ;; Auto vars:     Size  Location     Type
  6090 ;;		None
  6091 ;; Return value:  Size  Location     Type
  6092 ;;		None               void
  6093 ;; Registers used:
  6094 ;;		wreg, status,2, status,0
  6095 ;; Tracked objects:
  6096 ;;		On entry : 0/0
  6097 ;;		On exit  : 0/0
  6098 ;;		Unchanged: 0/0
  6099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6100 ;;      Params:         8       0       0       0       0       0       0
  6101 ;;      Locals:         0       0       0       0       0       0       0
  6102 ;;      Temps:          4       0       0       0       0       0       0
  6103 ;;      Totals:        12       0       0       0       0       0       0
  6104 ;;Total ram usage:       12 bytes
  6105 ;; Hardware stack levels used:    1
  6106 ;; Hardware stack levels required when called:    1
  6107 ;; This function calls:
  6108 ;;		Nothing
  6109 ;; This function is called by:
  6110 ;;		_sprintf
  6111 ;; This function uses a non-reentrant model
  6112 ;;
  6113                           
  6114                           	psect	text21
  6115  002610                     __ptext21:
  6116                           	opt callstack 0
  6117  002610                     ___fleq:
  6118                           	opt callstack 0
  6119  002610  FFFF               	dw	65535	; assembler added errata NOP
  6120                           
  6121                           ;incstack = 0
  6122  002612  0E00               	movlw	0
  6123  002614  1401               	andwf	___fleq@ff1,w,c
  6124  002616  6E09               	movwf	??___fleq& (0+255),c
  6125  002618  0E00               	movlw	0
  6126  00261A  1402               	andwf	___fleq@ff1+1,w,c
  6127  00261C  6E0A               	movwf	(??___fleq+1)& (0+255),c
  6128  00261E  0E80               	movlw	128
  6129  002620  1403               	andwf	___fleq@ff1+2,w,c
  6130  002622  6E0B               	movwf	(??___fleq+2)& (0+255),c
  6131  002624  0E7F               	movlw	127
  6132  002626  1404               	andwf	___fleq@ff1+3,w,c
  6133  002628  6E0C               	movwf	(??___fleq+3)& (0+255),c
  6134  00262A  5009               	movf	??___fleq,w,c
  6135  00262C  100A               	iorwf	??___fleq+1,w,c
  6136  00262E  100B               	iorwf	??___fleq+2,w,c
  6137  002630  100C               	iorwf	??___fleq+3,w,c
  6138  002632  A4D8               	btfss	status,2,c
  6139  002634  D008               	goto	l3502
  6140  002636  0E00               	movlw	0
  6141  002638  6E01               	movwf	___fleq@ff1,c
  6142  00263A  0E00               	movlw	0
  6143  00263C  6E02               	movwf	___fleq@ff1+1,c
  6144  00263E  0E00               	movlw	0
  6145  002640  6E03               	movwf	___fleq@ff1+2,c
  6146  002642  0E00               	movlw	0
  6147  002644  6E04               	movwf	___fleq@ff1+3,c
  6148  002646                     l3502:
  6149  002646  FFFF               	dw	65535	; assembler added errata NOP
  6150  002648  0E00               	movlw	0
  6151  00264A  1405               	andwf	___fleq@ff2,w,c
  6152  00264C  6E09               	movwf	??___fleq& (0+255),c
  6153  00264E  0E00               	movlw	0
  6154  002650  1406               	andwf	___fleq@ff2+1,w,c
  6155  002652  6E0A               	movwf	(??___fleq+1)& (0+255),c
  6156  002654  0E80               	movlw	128
  6157  002656  1407               	andwf	___fleq@ff2+2,w,c
  6158  002658  6E0B               	movwf	(??___fleq+2)& (0+255),c
  6159  00265A  0E7F               	movlw	127
  6160  00265C  1408               	andwf	___fleq@ff2+3,w,c
  6161  00265E  6E0C               	movwf	(??___fleq+3)& (0+255),c
  6162  002660  5009               	movf	??___fleq,w,c
  6163  002662  100A               	iorwf	??___fleq+1,w,c
  6164  002664  100B               	iorwf	??___fleq+2,w,c
  6165  002666  100C               	iorwf	??___fleq+3,w,c
  6166  002668  A4D8               	btfss	status,2,c
  6167  00266A  D008               	goto	l3506
  6168  00266C  0E00               	movlw	0
  6169  00266E  6E05               	movwf	___fleq@ff2,c
  6170  002670  0E00               	movlw	0
  6171  002672  6E06               	movwf	___fleq@ff2+1,c
  6172  002674  0E00               	movlw	0
  6173  002676  6E07               	movwf	___fleq@ff2+2,c
  6174  002678  0E00               	movlw	0
  6175  00267A  6E08               	movwf	___fleq@ff2+3,c
  6176  00267C                     l3506:
  6177  00267C  FFFF               	dw	65535	; assembler added errata NOP
  6178  00267E  5005               	movf	___fleq@ff2,w,c
  6179  002680  1801               	xorwf	___fleq@ff1,w,c
  6180  002682  E10A               	bnz	u3710
  6181  002684  5006               	movf	___fleq@ff2+1,w,c
  6182  002686  1802               	xorwf	___fleq@ff1+1,w,c
  6183  002688  E107               	bnz	u3710
  6184  00268A  5007               	movf	___fleq@ff2+2,w,c
  6185  00268C  1803               	xorwf	___fleq@ff1+2,w,c
  6186  00268E  E104               	bnz	u3710
  6187  002690  5008               	movf	___fleq@ff2+3,w,c
  6188  002692  1804               	xorwf	___fleq@ff1+3,w,c
  6189  002694  B4D8               	btfsc	status,2,c
  6190  002696  D002               	goto	l3510
  6191  002698                     u3710:
  6192  002698  90D8               	bcf	status,0,c
  6193  00269A  D002               	goto	l612
  6194  00269C                     l3510:
  6195  00269C  FFFF               	dw	65535	; assembler added errata NOP
  6196  00269E  80D8               	bsf	status,0,c
  6197  0026A0                     l612:
  6198  0026A0  FFFF               	dw	65535	; assembler added errata NOP
  6199  0026A2  0012               	return		;funcret
  6200  0026A4  FFFF               	dw	65535	; errata NOP
  6201  0026A6                     __end_of___fleq:
  6202                           	opt callstack 0
  6203                           
  6204 ;; *************** function _serial_transmi_init_config *****************
  6205 ;; Defined at:
  6206 ;;		line 172 in file "main.c"
  6207 ;; Parameters:    Size  Location     Type
  6208 ;;		None
  6209 ;; Auto vars:     Size  Location     Type
  6210 ;;		None
  6211 ;; Return value:  Size  Location     Type
  6212 ;;                  1    wreg      void 
  6213 ;; Registers used:
  6214 ;;		wreg, status,2
  6215 ;; Tracked objects:
  6216 ;;		On entry : 0/0
  6217 ;;		On exit  : 0/0
  6218 ;;		Unchanged: 0/0
  6219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6220 ;;      Params:         0       0       0       0       0       0       0
  6221 ;;      Locals:         0       0       0       0       0       0       0
  6222 ;;      Temps:          0       0       0       0       0       0       0
  6223 ;;      Totals:         0       0       0       0       0       0       0
  6224 ;;Total ram usage:        0 bytes
  6225 ;; Hardware stack levels used:    1
  6226 ;; Hardware stack levels required when called:    1
  6227 ;; This function calls:
  6228 ;;		Nothing
  6229 ;; This function is called by:
  6230 ;;		_main
  6231 ;; This function uses a non-reentrant model
  6232 ;;
  6233                           
  6234                           	psect	text22
  6235  002C0C                     __ptext22:
  6236                           	opt callstack 0
  6237  002C0C                     _serial_transmi_init_config:
  6238                           	opt callstack 0
  6239  002C0C  FFFF               	dw	65535	; assembler added errata NOP
  6240                           
  6241                           ;main.c: 179: INTCON = 0B11000000;
  6242                           
  6243                           ;incstack = 0
  6244  002C0E  0EC0               	movlw	192
  6245  002C10  6EF2               	movwf	4082,c	;volatile
  6246                           
  6247                           ;main.c: 181: RCONbits.IPEN = 0;
  6248  002C12  9ED0               	bcf	4048,7,c	;volatile
  6249                           
  6250                           ;main.c: 182: SPBRG = 25;
  6251  002C14  0E19               	movlw	25
  6252  002C16  6EAF               	movwf	4015,c	;volatile
  6253                           
  6254                           ;main.c: 188: PIE1 = 0B00100000;
  6255  002C18  0E20               	movlw	32
  6256  002C1A  6E9D               	movwf	3997,c	;volatile
  6257                           
  6258                           ;main.c: 190: PIR1 = 0B00010000;
  6259  002C1C  0E10               	movlw	16
  6260  002C1E  6E9E               	movwf	3998,c	;volatile
  6261                           
  6262                           ;main.c: 191: IPR1 = 0B00100000;
  6263  002C20  0E20               	movlw	32
  6264  002C22  6E9F               	movwf	3999,c	;volatile
  6265                           
  6266                           ;main.c: 199: TXSTA = 0B00100110;
  6267  002C24  0E26               	movlw	38
  6268  002C26  6EAC               	movwf	4012,c	;volatile
  6269                           
  6270                           ;main.c: 206: RCSTA = 0B10010000;
  6271  002C28  0E90               	movlw	144
  6272  002C2A  6EAB               	movwf	4011,c	;volatile
  6273  002C2C  0012               	return		;funcret
  6274  002C2E  FFFF               	dw	65535	; errata NOP
  6275  002C30                     __end_of_serial_transmi_init_config:
  6276                           	opt callstack 0
  6277                           
  6278 ;; *************** function _print_message_onLCD *****************
  6279 ;; Defined at:
  6280 ;;		line 239 in file "main.c"
  6281 ;; Parameters:    Size  Location     Type
  6282 ;;  message         2    4[COMRAM] PTR unsigned char 
  6283 ;;		 -> STR_12(17), STR_11(16), STR_9(17), STR_8(17), 
  6284 ;;		 -> STR_6(17), STR_5(15), main@message(20), STR_2(14), 
  6285 ;;		 -> STR_1(14), 
  6286 ;;  place           1    6[COMRAM] unsigned char 
  6287 ;; Auto vars:     Size  Location     Type
  6288 ;;  i               1    9[COMRAM] unsigned char 
  6289 ;; Return value:  Size  Location     Type
  6290 ;;                  1    wreg      void 
  6291 ;; Registers used:
  6292 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6293 ;; Tracked objects:
  6294 ;;		On entry : 0/0
  6295 ;;		On exit  : 0/0
  6296 ;;		Unchanged: 0/0
  6297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6298 ;;      Params:         3       0       0       0       0       0       0
  6299 ;;      Locals:         1       0       0       0       0       0       0
  6300 ;;      Temps:          2       0       0       0       0       0       0
  6301 ;;      Totals:         6       0       0       0       0       0       0
  6302 ;;Total ram usage:        6 bytes
  6303 ;; Hardware stack levels used:    1
  6304 ;; Hardware stack levels required when called:    2
  6305 ;; This function calls:
  6306 ;;		_R_D
  6307 ;;		_R_I
  6308 ;;		_strlen
  6309 ;; This function is called by:
  6310 ;;		_main
  6311 ;; This function uses a non-reentrant model
  6312 ;;
  6313                           
  6314                           	psect	text23
  6315  00282E                     __ptext23:
  6316                           	opt callstack 0
  6317  00282E                     _print_message_onLCD:
  6318                           	opt callstack 0
  6319  00282E  FFFF               	dw	65535	; assembler added errata NOP
  6320                           
  6321                           ;main.c: 240: if (place > 0) {
  6322                           
  6323                           ;incstack = 0
  6324  002830  5007               	movf	print_message_onLCD@place,w,c
  6325  002832  B4D8               	btfsc	status,2,c
  6326  002834  D003               	goto	l3668
  6327                           
  6328                           ;main.c: 241: R_I(place);
  6329  002836  5007               	movf	print_message_onLCD@place,w,c
  6330  002838  EC26  F016         	call	_R_I
  6331  00283C                     l3668:
  6332  00283C  FFFF               	dw	65535	; assembler added errata NOP
  6333                           
  6334                           ;main.c: 242: };main.c: 243: for (char i = 0; i < strlen(message); i++) {
  6335  00283E  0E00               	movlw	0
  6336  002840  6E0A               	movwf	print_message_onLCD@i,c
  6337  002842  D01B               	goto	l3674
  6338  002844                     l3670:
  6339  002844  FFFF               	dw	65535	; assembler added errata NOP
  6340                           
  6341                           ;main.c: 244: R_D(message[i]);
  6342  002846  500A               	movf	print_message_onLCD@i,w,c
  6343  002848  2405               	addwf	print_message_onLCD@message,w,c
  6344  00284A  6E08               	movwf	??_print_message_onLCD& (0+255),c
  6345  00284C  0E00               	movlw	0
  6346  00284E  2006               	addwfc	print_message_onLCD@message+1,w,c
  6347  002850  6E09               	movwf	(??_print_message_onLCD+1)& (0+255),c
  6348  002852  C008  FFF6         	movff	??_print_message_onLCD,tblptrl
  6349  002856  C009  FFF7         	movff	??_print_message_onLCD+1,tblptrh
  6350  00285A  6AF8               	clrf	tblptru,c
  6351  00285C  0E05               	movlw	(high __ramtop+-1)
  6352  00285E  64F7               	cpfsgt	tblptrh,c
  6353  002860  D004               	bra	u3997
  6354  002862  0008               	tblrd		*
  6355  002864  FFFF               	dw	65535	; errata NOP
  6356  002866  50F5               	movf	tablat,w,c
  6357  002868  D005               	bra	u3990
  6358  00286A                     u3997:
  6359  00286A  CFF6 FFE9          	movff	tblptrl,fsr0l
  6360  00286E  CFF7 FFEA          	movff	tblptrh,fsr0h
  6361  002872  50EF               	movf	indf0,w,c
  6362  002874                     u3990:
  6363  002874  EC18  F016         	call	_R_D
  6364  002878  2A0A               	incf	print_message_onLCD@i,f,c
  6365  00287A                     l3674:
  6366  00287A  FFFF               	dw	65535	; assembler added errata NOP
  6367  00287C  C005  F001         	movff	print_message_onLCD@message,strlen@s
  6368  002880  C006  F002         	movff	print_message_onLCD@message+1,strlen@s+1
  6369  002884  EC3F  F015         	call	_strlen	;wreg free
  6370  002888  500A               	movf	print_message_onLCD@i,w,c
  6371  00288A  6E08               	movwf	??_print_message_onLCD& (0+255),c
  6372  00288C  6A09               	clrf	(??_print_message_onLCD+1)& (0+255),c
  6373  00288E  5001               	movf	?_strlen,w,c
  6374  002890  5C08               	subwf	??_print_message_onLCD,w,c
  6375  002892  5002               	movf	?_strlen+1,w,c
  6376  002894  5809               	subwfb	??_print_message_onLCD+1,w,c
  6377  002896  B0D8               	btfsc	status,0,c
  6378  002898  0012               	return		;funcret
  6379  00289A  FFFF               	dw	65535	; assembler added errata NOP
  6380  00289C  D7D3               	goto	l3670
  6381  00289E  FFFF               	dw	65535	; errata NOP
  6382  0028A0                     __end_of_print_message_onLCD:
  6383                           	opt callstack 0
  6384                           
  6385 ;; *************** function _strlen *****************
  6386 ;; Defined at:
  6387 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strlen.c"
  6388 ;; Parameters:    Size  Location     Type
  6389 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6390 ;;		 -> STR_21(2), STR_20(22), STR_19(26), STR_18(12), 
  6391 ;;		 -> STR_17(18), STR_16(3), main@_temp(25), main@_volt(25), 
  6392 ;;		 -> STR_12(17), STR_11(16), STR_9(17), STR_8(17), 
  6393 ;;		 -> message_alert(50), STR_6(17), STR_5(15), main@message(20), 
  6394 ;;		 -> STR_2(14), STR_1(14), 
  6395 ;; Auto vars:     Size  Location     Type
  6396 ;;  cp              2    2[COMRAM] PTR const unsigned char 
  6397 ;;		 -> STR_21(2), STR_20(22), STR_19(26), STR_18(12), 
  6398 ;;		 -> STR_17(18), STR_16(3), main@_temp(25), main@_volt(25), 
  6399 ;;		 -> STR_12(17), STR_11(16), STR_9(17), STR_8(17), 
  6400 ;;		 -> message_alert(50), STR_6(17), STR_5(15), main@message(20), 
  6401 ;;		 -> STR_2(14), STR_1(14), 
  6402 ;; Return value:  Size  Location     Type
  6403 ;;                  2    0[COMRAM] unsigned int 
  6404 ;; Registers used:
  6405 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  6406 ;; Tracked objects:
  6407 ;;		On entry : 0/0
  6408 ;;		On exit  : 0/0
  6409 ;;		Unchanged: 0/0
  6410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6411 ;;      Params:         2       0       0       0       0       0       0
  6412 ;;      Locals:         2       0       0       0       0       0       0
  6413 ;;      Temps:          0       0       0       0       0       0       0
  6414 ;;      Totals:         4       0       0       0       0       0       0
  6415 ;;Total ram usage:        4 bytes
  6416 ;; Hardware stack levels used:    1
  6417 ;; Hardware stack levels required when called:    1
  6418 ;; This function calls:
  6419 ;;		Nothing
  6420 ;; This function is called by:
  6421 ;;		_print_message_onLCD
  6422 ;;		_transmit
  6423 ;; This function uses a non-reentrant model
  6424 ;;
  6425                           
  6426                           	psect	text24
  6427  002A7E                     __ptext24:
  6428                           	opt callstack 0
  6429  002A7E                     _strlen:
  6430                           	opt callstack 0
  6431  002A7E  FFFF               	dw	65535	; assembler added errata NOP
  6432                           
  6433                           ;incstack = 0
  6434  002A80  C001  F003         	movff	strlen@s,strlen@cp
  6435  002A84  C002  F004         	movff	strlen@s+1,strlen@cp+1
  6436  002A88  D003               	goto	l3136
  6437  002A8A                     l3134:
  6438  002A8A  FFFF               	dw	65535	; assembler added errata NOP
  6439  002A8C  4A03               	infsnz	strlen@cp,f,c
  6440  002A8E  2A04               	incf	strlen@cp+1,f,c
  6441  002A90                     l3136:
  6442  002A90  FFFF               	dw	65535	; assembler added errata NOP
  6443  002A92  C003  FFF6         	movff	strlen@cp,tblptrl
  6444  002A96  C004  FFF7         	movff	strlen@cp+1,tblptrh
  6445  002A9A  6AF8               	clrf	tblptru,c
  6446  002A9C  0E05               	movlw	(high __ramtop+-1)
  6447  002A9E  64F7               	cpfsgt	tblptrh,c
  6448  002AA0  D004               	bra	u3167
  6449  002AA2  0008               	tblrd		*
  6450  002AA4  FFFF               	dw	65535	; errata NOP
  6451  002AA6  50F5               	movf	tablat,w,c
  6452  002AA8  D005               	bra	u3160
  6453  002AAA                     u3167:
  6454  002AAA  CFF6 FFE9          	movff	tblptrl,fsr0l
  6455  002AAE  CFF7 FFEA          	movff	tblptrh,fsr0h
  6456  002AB2  50EF               	movf	indf0,w,c
  6457  002AB4                     u3160:
  6458  002AB4  0900               	iorlw	0
  6459  002AB6  A4D8               	btfss	status,2,c
  6460  002AB8  D7E8               	goto	l3134
  6461  002ABA  5001               	movf	strlen@s,w,c
  6462  002ABC  5C03               	subwf	strlen@cp,w,c
  6463  002ABE  6E01               	movwf	?_strlen,c
  6464  002AC0  5002               	movf	strlen@s+1,w,c
  6465  002AC2  5804               	subwfb	strlen@cp+1,w,c
  6466  002AC4  6E02               	movwf	?_strlen+1,c
  6467  002AC6  0012               	return		;funcret
  6468  002AC8  FFFF               	dw	65535	; errata NOP
  6469  002ACA                     __end_of_strlen:
  6470                           	opt callstack 0
  6471                           
  6472 ;; *************** function _R_D *****************
  6473 ;; Defined at:
  6474 ;;		line 230 in file "main.c"
  6475 ;; Parameters:    Size  Location     Type
  6476 ;;  dato            1    wreg     unsigned char 
  6477 ;; Auto vars:     Size  Location     Type
  6478 ;;  dato            1    0[COMRAM] unsigned char 
  6479 ;; Return value:  Size  Location     Type
  6480 ;;                  1    wreg      void 
  6481 ;; Registers used:
  6482 ;;		wreg, status,2, cstack
  6483 ;; Tracked objects:
  6484 ;;		On entry : 0/0
  6485 ;;		On exit  : 0/0
  6486 ;;		Unchanged: 0/0
  6487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6488 ;;      Params:         0       0       0       0       0       0       0
  6489 ;;      Locals:         1       0       0       0       0       0       0
  6490 ;;      Temps:          0       0       0       0       0       0       0
  6491 ;;      Totals:         1       0       0       0       0       0       0
  6492 ;;Total ram usage:        1 bytes
  6493 ;; Hardware stack levels used:    1
  6494 ;; Hardware stack levels required when called:    1
  6495 ;; This function calls:
  6496 ;;		Nothing
  6497 ;; This function is called by:
  6498 ;;		_print_message_onLCD
  6499 ;; This function uses a non-reentrant model
  6500 ;;
  6501                           
  6502                           	psect	text25
  6503  002C30                     __ptext25:
  6504                           	opt callstack 0
  6505  002C30                     _R_D:
  6506                           	opt callstack 0
  6507  002C30  FFFF               	dw	65535	; assembler added errata NOP
  6508                           
  6509                           ;incstack = 0
  6510                           ;R_D@dato stored from wreg
  6511  002C32  6E01               	movwf	R_D@dato,c
  6512                           
  6513                           ;main.c: 231: LC3 = 0;
  6514  002C34  968B               	bcf	3979,3,c	;volatile
  6515                           
  6516                           ;main.c: 232: LC4 = 1;
  6517  002C36  888B               	bsf	3979,4,c	;volatile
  6518                           
  6519                           ;main.c: 233: LATD = dato;
  6520  002C38  C001  FF8C         	movff	R_D@dato,3980	;volatile
  6521                           
  6522                           ;main.c: 234: LC3 = 1;
  6523  002C3C  868B               	bsf	3979,3,c	;volatile
  6524                           
  6525                           ;main.c: 235: _delay((unsigned long)((100)*(4000000/4000000.0)));
  6526  002C3E  0E19               	movlw	25
  6527  002C40                     u4837:
  6528  002C40  FFFF               	dw	65535	; errata NOP
  6529  002C42  2EE8               	decfsz	wreg,f,c
  6530  002C44  D7FD               	bra	u4837
  6531                           
  6532                           ;main.c: 236: LC3 = 0;
  6533  002C46  968B               	bcf	3979,3,c	;volatile
  6534  002C48  0012               	return		;funcret
  6535  002C4A  FFFF               	dw	65535	; errata NOP
  6536  002C4C                     __end_of_R_D:
  6537                           	opt callstack 0
  6538                           
  6539 ;; *************** function _light_the_bulb_and_start_engine *****************
  6540 ;; Defined at:
  6541 ;;		line 271 in file "main.c"
  6542 ;; Parameters:    Size  Location     Type
  6543 ;;		None
  6544 ;; Auto vars:     Size  Location     Type
  6545 ;;		None
  6546 ;; Return value:  Size  Location     Type
  6547 ;;                  1    wreg      void 
  6548 ;; Registers used:
  6549 ;;		wreg, status,2
  6550 ;; Tracked objects:
  6551 ;;		On entry : 0/0
  6552 ;;		On exit  : 0/0
  6553 ;;		Unchanged: 0/0
  6554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6555 ;;      Params:         0       0       0       0       0       0       0
  6556 ;;      Locals:         0       0       0       0       0       0       0
  6557 ;;      Temps:          0       0       0       0       0       0       0
  6558 ;;      Totals:         0       0       0       0       0       0       0
  6559 ;;Total ram usage:        0 bytes
  6560 ;; Hardware stack levels used:    1
  6561 ;; Hardware stack levels required when called:    1
  6562 ;; This function calls:
  6563 ;;		Nothing
  6564 ;; This function is called by:
  6565 ;;		_main
  6566 ;; This function uses a non-reentrant model
  6567 ;;
  6568                           
  6569                           	psect	text26
  6570  002C7C                     __ptext26:
  6571                           	opt callstack 0
  6572  002C7C                     _light_the_bulb_and_start_engine:
  6573                           	opt callstack 0
  6574  002C7C  FFFF               	dw	65535	; assembler added errata NOP
  6575                           
  6576                           ;main.c: 272: LATB = 3;
  6577                           
  6578                           ;incstack = 0
  6579  002C7E  0E03               	movlw	3
  6580  002C80  6E8A               	movwf	3978,c	;volatile
  6581  002C82  0012               	return		;funcret
  6582  002C84  FFFF               	dw	65535	; errata NOP
  6583  002C86                     __end_of_light_the_bulb_and_start_engine:
  6584                           	opt callstack 0
  6585                           
  6586 ;; *************** function _light_the_bulb *****************
  6587 ;; Defined at:
  6588 ;;		line 263 in file "main.c"
  6589 ;; Parameters:    Size  Location     Type
  6590 ;;		None
  6591 ;; Auto vars:     Size  Location     Type
  6592 ;;		None
  6593 ;; Return value:  Size  Location     Type
  6594 ;;                  1    wreg      void 
  6595 ;; Registers used:
  6596 ;;		wreg, status,2
  6597 ;; Tracked objects:
  6598 ;;		On entry : 0/0
  6599 ;;		On exit  : 0/0
  6600 ;;		Unchanged: 0/0
  6601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6602 ;;      Params:         0       0       0       0       0       0       0
  6603 ;;      Locals:         0       0       0       0       0       0       0
  6604 ;;      Temps:          0       0       0       0       0       0       0
  6605 ;;      Totals:         0       0       0       0       0       0       0
  6606 ;;Total ram usage:        0 bytes
  6607 ;; Hardware stack levels used:    1
  6608 ;; Hardware stack levels required when called:    1
  6609 ;; This function calls:
  6610 ;;		Nothing
  6611 ;; This function is called by:
  6612 ;;		_main
  6613 ;; This function uses a non-reentrant model
  6614 ;;
  6615                           
  6616                           	psect	text27
  6617  002C86                     __ptext27:
  6618                           	opt callstack 0
  6619  002C86                     _light_the_bulb:
  6620                           	opt callstack 0
  6621  002C86  FFFF               	dw	65535	; assembler added errata NOP
  6622                           
  6623                           ;main.c: 264: LATB = 1;
  6624                           
  6625                           ;incstack = 0
  6626  002C88  0E01               	movlw	1
  6627  002C8A  6E8A               	movwf	3978,c	;volatile
  6628  002C8C  0012               	return		;funcret
  6629  002C8E  FFFF               	dw	65535	; errata NOP
  6630  002C90                     __end_of_light_the_bulb:
  6631                           	opt callstack 0
  6632                           
  6633 ;; *************** function _initial_config *****************
  6634 ;; Defined at:
  6635 ;;		line 151 in file "main.c"
  6636 ;; Parameters:    Size  Location     Type
  6637 ;;		None
  6638 ;; Auto vars:     Size  Location     Type
  6639 ;;		None
  6640 ;; Return value:  Size  Location     Type
  6641 ;;                  1    wreg      void 
  6642 ;; Registers used:
  6643 ;;		wreg, status,2
  6644 ;; Tracked objects:
  6645 ;;		On entry : 0/0
  6646 ;;		On exit  : 0/0
  6647 ;;		Unchanged: 0/0
  6648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6649 ;;      Params:         0       0       0       0       0       0       0
  6650 ;;      Locals:         0       0       0       0       0       0       0
  6651 ;;      Temps:          0       0       0       0       0       0       0
  6652 ;;      Totals:         0       0       0       0       0       0       0
  6653 ;;Total ram usage:        0 bytes
  6654 ;; Hardware stack levels used:    1
  6655 ;; Hardware stack levels required when called:    1
  6656 ;; This function calls:
  6657 ;;		Nothing
  6658 ;; This function is called by:
  6659 ;;		_main
  6660 ;; This function uses a non-reentrant model
  6661 ;;
  6662                           
  6663                           	psect	text28
  6664  002B14                     __ptext28:
  6665                           	opt callstack 0
  6666  002B14                     _initial_config:
  6667                           	opt callstack 0
  6668  002B14  FFFF               	dw	65535	; assembler added errata NOP
  6669                           
  6670                           ;main.c: 152: TRISA = 0X03;
  6671                           
  6672                           ;incstack = 0
  6673  002B16  0E03               	movlw	3
  6674  002B18  6E92               	movwf	3986,c	;volatile
  6675                           
  6676                           ;main.c: 153: TRISB = 0X00;
  6677  002B1A  0E00               	movlw	0
  6678  002B1C  6E93               	movwf	3987,c	;volatile
  6679                           
  6680                           ;main.c: 154: TRISC = 0B10000000;
  6681  002B1E  0E80               	movlw	128
  6682  002B20  6E94               	movwf	3988,c	;volatile
  6683                           
  6684                           ;main.c: 155: TRISD = 0X00;
  6685  002B22  0E00               	movlw	0
  6686  002B24  6E95               	movwf	3989,c	;volatile
  6687                           
  6688                           ;main.c: 158: ADCON0 = 0B01000001;
  6689  002B26  0E41               	movlw	65
  6690  002B28  6EC2               	movwf	4034,c	;volatile
  6691                           
  6692                           ;main.c: 159: ADCON1 = 0B10000100;
  6693  002B2A  0E84               	movlw	132
  6694  002B2C  6EC1               	movwf	4033,c	;volatile
  6695                           
  6696                           ;main.c: 162: LATA = 0;
  6697  002B2E  0E00               	movlw	0
  6698  002B30  6E89               	movwf	3977,c	;volatile
  6699                           
  6700                           ;main.c: 163: LATB = 0;
  6701  002B32  0E00               	movlw	0
  6702  002B34  6E8A               	movwf	3978,c	;volatile
  6703                           
  6704                           ;main.c: 164: LATC = 0;
  6705  002B36  0E00               	movlw	0
  6706  002B38  6E8B               	movwf	3979,c	;volatile
  6707                           
  6708                           ;main.c: 165: LATD = 0;
  6709  002B3A  0E00               	movlw	0
  6710  002B3C  6E8C               	movwf	3980,c	;volatile
  6711                           
  6712                           ;main.c: 166: PORTA = 0;
  6713  002B3E  0E00               	movlw	0
  6714  002B40  6E80               	movwf	3968,c	;volatile
  6715                           
  6716                           ;main.c: 167: PORTB = 0;
  6717  002B42  0E00               	movlw	0
  6718  002B44  6E81               	movwf	3969,c	;volatile
  6719                           
  6720                           ;main.c: 168: PORTC = 0;
  6721  002B46  0E00               	movlw	0
  6722  002B48  6E82               	movwf	3970,c	;volatile
  6723                           
  6724                           ;main.c: 169: PORTD = 0;
  6725  002B4A  0E00               	movlw	0
  6726  002B4C  6E83               	movwf	3971,c	;volatile
  6727  002B4E  0012               	return		;funcret
  6728  002B50  FFFF               	dw	65535	; errata NOP
  6729  002B52                     __end_of_initial_config:
  6730                           	opt callstack 0
  6731                           
  6732 ;; *************** function _init_LCD *****************
  6733 ;; Defined at:
  6734 ;;		line 209 in file "main.c"
  6735 ;; Parameters:    Size  Location     Type
  6736 ;;		None
  6737 ;; Auto vars:     Size  Location     Type
  6738 ;;		None
  6739 ;; Return value:  Size  Location     Type
  6740 ;;                  1    wreg      void 
  6741 ;; Registers used:
  6742 ;;		wreg, status,2, cstack
  6743 ;; Tracked objects:
  6744 ;;		On entry : 0/0
  6745 ;;		On exit  : 0/0
  6746 ;;		Unchanged: 0/0
  6747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6748 ;;      Params:         0       0       0       0       0       0       0
  6749 ;;      Locals:         0       0       0       0       0       0       0
  6750 ;;      Temps:          1       0       0       0       0       0       0
  6751 ;;      Totals:         1       0       0       0       0       0       0
  6752 ;;Total ram usage:        1 bytes
  6753 ;; Hardware stack levels used:    1
  6754 ;; Hardware stack levels required when called:    2
  6755 ;; This function calls:
  6756 ;;		_R_I
  6757 ;; This function is called by:
  6758 ;;		_main
  6759 ;; This function uses a non-reentrant model
  6760 ;;
  6761                           
  6762                           	psect	text29
  6763  0029D6                     __ptext29:
  6764                           	opt callstack 0
  6765  0029D6                     _init_LCD:
  6766                           	opt callstack 0
  6767  0029D6  FFFF               	dw	65535	; assembler added errata NOP
  6768                           
  6769                           ;main.c: 210: _delay((unsigned long)((20)*(4000000/4000.0)));
  6770                           
  6771                           ;incstack = 0
  6772  0029D8  0E14               	movlw	20
  6773  0029DA  6E02               	movwf	??_init_LCD& (0+255),c
  6774  0029DC  0E7D               	movlw	125
  6775  0029DE                     u4847:
  6776  0029DE  FFFF               	dw	65535	; errata NOP
  6777  0029E0  2EE8               	decfsz	wreg,f,c
  6778  0029E2  D7FD               	bra	u4847
  6779  0029E4  2E02               	decfsz	??_init_LCD& (0+255),f,c
  6780  0029E6  D7FB               	bra	u4847
  6781  0029E8  D000               	nop2	
  6782                           
  6783                           ;main.c: 212: R_I(0X30);
  6784  0029EA  0E30               	movlw	48
  6785  0029EC  EC26  F016         	call	_R_I
  6786                           
  6787                           ;main.c: 213: _delay((unsigned long)((5)*(4000000/4000.0)));
  6788  0029F0  0E05               	movlw	5
  6789  0029F2  6E02               	movwf	??_init_LCD& (0+255),c
  6790  0029F4  0EDF               	movlw	223
  6791  0029F6                     u4857:
  6792  0029F6  FFFF               	dw	65535	; errata NOP
  6793  0029F8  2EE8               	decfsz	wreg,f,c
  6794  0029FA  D7FD               	bra	u4857
  6795  0029FC  2E02               	decfsz	??_init_LCD& (0+255),f,c
  6796  0029FE  D7FB               	bra	u4857
  6797                           
  6798                           ;main.c: 214: R_I(0X30);
  6799  002A00  0E30               	movlw	48
  6800  002A02  EC26  F016         	call	_R_I
  6801                           
  6802                           ;main.c: 215: R_I(0X3C);
  6803  002A06  0E3C               	movlw	60
  6804  002A08  EC26  F016         	call	_R_I
  6805                           
  6806                           ;main.c: 216: R_I(0X0C);
  6807  002A0C  0E0C               	movlw	12
  6808  002A0E  EC26  F016         	call	_R_I
  6809                           
  6810                           ;main.c: 217: R_I(0X01);
  6811  002A12  0E01               	movlw	1
  6812  002A14  EC26  F016         	call	_R_I
  6813                           
  6814                           ;main.c: 218: _delay((unsigned long)((20)*(4000000/4000.0)));
  6815  002A18  0E14               	movlw	20
  6816  002A1A  6E02               	movwf	??_init_LCD& (0+255),c
  6817  002A1C  0E7D               	movlw	125
  6818  002A1E                     u4867:
  6819  002A1E  FFFF               	dw	65535	; errata NOP
  6820  002A20  2EE8               	decfsz	wreg,f,c
  6821  002A22  D7FD               	bra	u4867
  6822  002A24  2E02               	decfsz	??_init_LCD& (0+255),f,c
  6823  002A26  D7FB               	bra	u4867
  6824  002A28  D000               	nop2	
  6825  002A2A  0012               	return		;funcret
  6826  002A2C  FFFF               	dw	65535	; errata NOP
  6827  002A2E                     __end_of_init_LCD:
  6828                           	opt callstack 0
  6829                           
  6830 ;; *************** function _R_I *****************
  6831 ;; Defined at:
  6832 ;;		line 221 in file "main.c"
  6833 ;; Parameters:    Size  Location     Type
  6834 ;;  dato            1    wreg     unsigned char 
  6835 ;; Auto vars:     Size  Location     Type
  6836 ;;  dato            1    0[COMRAM] unsigned char 
  6837 ;; Return value:  Size  Location     Type
  6838 ;;                  1    wreg      void 
  6839 ;; Registers used:
  6840 ;;		wreg, status,2, cstack
  6841 ;; Tracked objects:
  6842 ;;		On entry : 0/0
  6843 ;;		On exit  : 0/0
  6844 ;;		Unchanged: 0/0
  6845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6846 ;;      Params:         0       0       0       0       0       0       0
  6847 ;;      Locals:         1       0       0       0       0       0       0
  6848 ;;      Temps:          0       0       0       0       0       0       0
  6849 ;;      Totals:         1       0       0       0       0       0       0
  6850 ;;Total ram usage:        1 bytes
  6851 ;; Hardware stack levels used:    1
  6852 ;; Hardware stack levels required when called:    1
  6853 ;; This function calls:
  6854 ;;		Nothing
  6855 ;; This function is called by:
  6856 ;;		_main
  6857 ;;		_init_LCD
  6858 ;;		_print_message_onLCD
  6859 ;; This function uses a non-reentrant model
  6860 ;;
  6861                           
  6862                           	psect	text30
  6863  002C4C                     __ptext30:
  6864                           	opt callstack 0
  6865  002C4C                     _R_I:
  6866                           	opt callstack 0
  6867  002C4C  FFFF               	dw	65535	; assembler added errata NOP
  6868                           
  6869                           ;incstack = 0
  6870                           ;R_I@dato stored from wreg
  6871  002C4E  6E01               	movwf	R_I@dato,c
  6872                           
  6873                           ;main.c: 222: LC3 = 0;
  6874  002C50  968B               	bcf	3979,3,c	;volatile
  6875                           
  6876                           ;main.c: 223: LC4 = 0;
  6877  002C52  988B               	bcf	3979,4,c	;volatile
  6878                           
  6879                           ;main.c: 224: LATD = dato;
  6880  002C54  C001  FF8C         	movff	R_I@dato,3980	;volatile
  6881                           
  6882                           ;main.c: 225: LC3 = 1;
  6883  002C58  868B               	bsf	3979,3,c	;volatile
  6884                           
  6885                           ;main.c: 226: _delay((unsigned long)((100)*(4000000/4000000.0)));
  6886  002C5A  0E19               	movlw	25
  6887  002C5C                     u4877:
  6888  002C5C  FFFF               	dw	65535	; errata NOP
  6889  002C5E  2EE8               	decfsz	wreg,f,c
  6890  002C60  D7FD               	bra	u4877
  6891                           
  6892                           ;main.c: 227: LC3 = 0;
  6893  002C62  968B               	bcf	3979,3,c	;volatile
  6894  002C64  0012               	return		;funcret
  6895  002C66  FFFF               	dw	65535	; errata NOP
  6896  002C68                     __end_of_R_I:
  6897                           	opt callstack 0
  6898                           
  6899 ;; *************** function _get_voltage *****************
  6900 ;; Defined at:
  6901 ;;		line 248 in file "main.c"
  6902 ;; Parameters:    Size  Location     Type
  6903 ;;  ac_in           2   64[COMRAM] unsigned int 
  6904 ;; Auto vars:     Size  Location     Type
  6905 ;;		None
  6906 ;; Return value:  Size  Location     Type
  6907 ;;                  4   64[COMRAM] float 
  6908 ;; Registers used:
  6909 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6910 ;; Tracked objects:
  6911 ;;		On entry : 0/0
  6912 ;;		On exit  : 0/0
  6913 ;;		Unchanged: 0/0
  6914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6915 ;;      Params:         4       0       0       0       0       0       0
  6916 ;;      Locals:         0       0       0       0       0       0       0
  6917 ;;      Temps:          0       0       0       0       0       0       0
  6918 ;;      Totals:         4       0       0       0       0       0       0
  6919 ;;Total ram usage:        4 bytes
  6920 ;; Hardware stack levels used:    1
  6921 ;; Hardware stack levels required when called:    2
  6922 ;; This function calls:
  6923 ;;		___fldiv
  6924 ;;		___flmul
  6925 ;;		___xxtofl
  6926 ;; This function is called by:
  6927 ;;		_main
  6928 ;; This function uses a non-reentrant model
  6929 ;;
  6930                           
  6931                           	psect	text31
  6932  0028A0                     __ptext31:
  6933                           	opt callstack 0
  6934  0028A0                     _get_voltage:
  6935                           	opt callstack 0
  6936  0028A0  FFFF               	dw	65535	; assembler added errata NOP
  6937                           
  6938                           ;main.c: 249: return (ac_in * 5.0 / 1023);
  6939                           
  6940                           ;incstack = 0
  6941  0028A2  0E00               	movlw	0
  6942  0028A4  6E13               	movwf	___flmul@a,c
  6943  0028A6  0E00               	movlw	0
  6944  0028A8  6E14               	movwf	___flmul@a+1,c
  6945  0028AA  0EA0               	movlw	160
  6946  0028AC  6E15               	movwf	___flmul@a+2,c
  6947  0028AE  0E40               	movlw	64
  6948  0028B0  6E16               	movwf	___flmul@a+3,c
  6949  0028B2  C041  F001         	movff	get_voltage@ac_in,___xxtofl@val
  6950  0028B6  C042  F002         	movff	get_voltage@ac_in+1,___xxtofl@val+1
  6951  0028BA  6A03               	clrf	___xxtofl@val+2,c
  6952  0028BC  6A04               	clrf	___xxtofl@val+3,c
  6953  0028BE  0E00               	movlw	0
  6954  0028C0  ECB0  F00F         	call	___xxtofl
  6955  0028C4  C001  F00F         	movff	?___xxtofl,___flmul@b
  6956  0028C8  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  6957  0028CC  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  6958  0028D0  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  6959  0028D4  EC9B  F009         	call	___flmul	;wreg free
  6960  0028D8  C00F  F028         	movff	?___flmul,___fldiv@b
  6961  0028DC  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  6962  0028E0  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  6963  0028E4  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  6964  0028E8  0E00               	movlw	0
  6965  0028EA  6E2C               	movwf	___fldiv@a,c
  6966  0028EC  0EC0               	movlw	192
  6967  0028EE  6E2D               	movwf	___fldiv@a+1,c
  6968  0028F0  0E7F               	movlw	127
  6969  0028F2  6E2E               	movwf	___fldiv@a+2,c
  6970  0028F4  0E44               	movlw	68
  6971  0028F6  6E2F               	movwf	___fldiv@a+3,c
  6972  0028F8  ECFE  F00C         	call	___fldiv	;wreg free
  6973  0028FC  C028  F041         	movff	?___fldiv,?_get_voltage
  6974  002900  C029  F042         	movff	?___fldiv+1,?_get_voltage+1
  6975  002904  C02A  F043         	movff	?___fldiv+2,?_get_voltage+2
  6976  002908  C02B  F044         	movff	?___fldiv+3,?_get_voltage+3
  6977  00290C  0012               	return		;funcret
  6978  00290E  FFFF               	dw	65535	; errata NOP
  6979  002910                     __end_of_get_voltage:
  6980                           	opt callstack 0
  6981                           
  6982 ;; *************** function _get_temp *****************
  6983 ;; Defined at:
  6984 ;;		line 251 in file "main.c"
  6985 ;; Parameters:    Size  Location     Type
  6986 ;;  ac_in           2   68[COMRAM] unsigned int 
  6987 ;; Auto vars:     Size  Location     Type
  6988 ;;  r               4   72[COMRAM] float 
  6989 ;; Return value:  Size  Location     Type
  6990 ;;                  4   68[COMRAM] float 
  6991 ;; Registers used:
  6992 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6993 ;; Tracked objects:
  6994 ;;		On entry : 0/0
  6995 ;;		On exit  : 0/0
  6996 ;;		Unchanged: 0/0
  6997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6998 ;;      Params:         4       0       0       0       0       0       0
  6999 ;;      Locals:         4       0       0       0       0       0       0
  7000 ;;      Temps:          0       0       0       0       0       0       0
  7001 ;;      Totals:         8       0       0       0       0       0       0
  7002 ;;Total ram usage:        8 bytes
  7003 ;; Hardware stack levels used:    1
  7004 ;; Hardware stack levels required when called:    2
  7005 ;; This function calls:
  7006 ;;		___fladd
  7007 ;;		___fldiv
  7008 ;;		___flmul
  7009 ;;		___xxtofl
  7010 ;; This function is called by:
  7011 ;;		_main
  7012 ;; This function uses a non-reentrant model
  7013 ;;
  7014                           
  7015                           	psect	text32
  7016  0022DE                     __ptext32:
  7017                           	opt callstack 0
  7018  0022DE                     _get_temp:
  7019                           	opt callstack 0
  7020  0022DE  FFFF               	dw	65535	; assembler added errata NOP
  7021                           
  7022                           ;main.c: 252: float r = ac_in * 500.0 / 1023;
  7023                           
  7024                           ;incstack = 0
  7025  0022E0  0E00               	movlw	0
  7026  0022E2  6E13               	movwf	___flmul@a,c
  7027  0022E4  0E00               	movlw	0
  7028  0022E6  6E14               	movwf	___flmul@a+1,c
  7029  0022E8  0EFA               	movlw	250
  7030  0022EA  6E15               	movwf	___flmul@a+2,c
  7031  0022EC  0E43               	movlw	67
  7032  0022EE  6E16               	movwf	___flmul@a+3,c
  7033  0022F0  C045  F001         	movff	get_temp@ac_in,___xxtofl@val
  7034  0022F4  C046  F002         	movff	get_temp@ac_in+1,___xxtofl@val+1
  7035  0022F8  6A03               	clrf	___xxtofl@val+2,c
  7036  0022FA  6A04               	clrf	___xxtofl@val+3,c
  7037  0022FC  0E00               	movlw	0
  7038  0022FE  ECB0  F00F         	call	___xxtofl
  7039  002302  C001  F00F         	movff	?___xxtofl,___flmul@b
  7040  002306  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  7041  00230A  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  7042  00230E  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  7043  002312  EC9B  F009         	call	___flmul	;wreg free
  7044  002316  C00F  F028         	movff	?___flmul,___fldiv@b
  7045  00231A  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  7046  00231E  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  7047  002322  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  7048  002326  0E00               	movlw	0
  7049  002328  6E2C               	movwf	___fldiv@a,c
  7050  00232A  0EC0               	movlw	192
  7051  00232C  6E2D               	movwf	___fldiv@a+1,c
  7052  00232E  0E7F               	movlw	127
  7053  002330  6E2E               	movwf	___fldiv@a+2,c
  7054  002332  0E44               	movlw	68
  7055  002334  6E2F               	movwf	___fldiv@a+3,c
  7056  002336  ECFE  F00C         	call	___fldiv	;wreg free
  7057  00233A  C028  F049         	movff	?___fldiv,get_temp@r
  7058  00233E  C029  F04A         	movff	?___fldiv+1,get_temp@r+1
  7059  002342  C02A  F04B         	movff	?___fldiv+2,get_temp@r+2
  7060  002346  C02B  F04C         	movff	?___fldiv+3,get_temp@r+3
  7061                           
  7062                           ;main.c: 253: if (ac_in <= 10) {
  7063  00234A  5046               	movf	get_temp@ac_in+1,w,c
  7064  00234C  E11E               	bnz	l181
  7065  00234E  0E0B               	movlw	11
  7066  002350  5C45               	subwf	get_temp@ac_in,w,c
  7067  002352  B0D8               	btfsc	status,0,c
  7068  002354  D01A               	goto	l181
  7069                           
  7070                           ;main.c: 254: r += 0.3;
  7071  002356  C049  F035         	movff	get_temp@r,___fladd@b
  7072  00235A  C04A  F036         	movff	get_temp@r+1,___fladd@b+1
  7073  00235E  C04B  F037         	movff	get_temp@r+2,___fladd@b+2
  7074  002362  C04C  F038         	movff	get_temp@r+3,___fladd@b+3
  7075  002366  0E9A               	movlw	154
  7076  002368  6E39               	movwf	___fladd@a,c
  7077  00236A  0E99               	movlw	153
  7078  00236C  6E3A               	movwf	___fladd@a+1,c
  7079  00236E  0E99               	movlw	153
  7080  002370  6E3B               	movwf	___fladd@a+2,c
  7081  002372  0E3E               	movlw	62
  7082  002374  6E3C               	movwf	___fladd@a+3,c
  7083  002376  EC5C  F00B         	call	___fladd	;wreg free
  7084  00237A  C035  F049         	movff	?___fladd,get_temp@r
  7085  00237E  C036  F04A         	movff	?___fladd+1,get_temp@r+1
  7086  002382  C037  F04B         	movff	?___fladd+2,get_temp@r+2
  7087  002386  C038  F04C         	movff	?___fladd+3,get_temp@r+3
  7088  00238A                     l181:
  7089  00238A  FFFF               	dw	65535	; assembler added errata NOP
  7090                           
  7091                           ;main.c: 255: };main.c: 256: return (r - 0.0099999);
  7092  00238C  C049  F035         	movff	get_temp@r,___fladd@b
  7093  002390  C04A  F036         	movff	get_temp@r+1,___fladd@b+1
  7094  002394  C04B  F037         	movff	get_temp@r+2,___fladd@b+2
  7095  002398  C04C  F038         	movff	get_temp@r+3,___fladd@b+3
  7096  00239C  0E9F               	movlw	159
  7097  00239E  6E39               	movwf	___fladd@a,c
  7098  0023A0  0ED6               	movlw	214
  7099  0023A2  6E3A               	movwf	___fladd@a+1,c
  7100  0023A4  0E23               	movlw	35
  7101  0023A6  6E3B               	movwf	___fladd@a+2,c
  7102  0023A8  0EBC               	movlw	188
  7103  0023AA  6E3C               	movwf	___fladd@a+3,c
  7104  0023AC  EC5C  F00B         	call	___fladd	;wreg free
  7105  0023B0  C035  F045         	movff	?___fladd,?_get_temp
  7106  0023B4  C036  F046         	movff	?___fladd+1,?_get_temp+1
  7107  0023B8  C037  F047         	movff	?___fladd+2,?_get_temp+2
  7108  0023BC  C038  F048         	movff	?___fladd+3,?_get_temp+3
  7109  0023C0  0012               	return		;funcret
  7110  0023C2  FFFF               	dw	65535	; errata NOP
  7111  0023C4                     __end_of_get_temp:
  7112                           	opt callstack 0
  7113                           
  7114 ;; *************** function ___xxtofl *****************
  7115 ;; Defined at:
  7116 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  7117 ;; Parameters:    Size  Location     Type
  7118 ;;  sign            1    wreg     unsigned char 
  7119 ;;  val             4    0[COMRAM] long 
  7120 ;; Auto vars:     Size  Location     Type
  7121 ;;  sign            1    8[COMRAM] unsigned char 
  7122 ;;  arg             4   10[COMRAM] unsigned long 
  7123 ;;  exp             1    9[COMRAM] unsigned char 
  7124 ;; Return value:  Size  Location     Type
  7125 ;;                  4    0[COMRAM] unsigned char 
  7126 ;; Registers used:
  7127 ;;		wreg, status,2, status,0
  7128 ;; Tracked objects:
  7129 ;;		On entry : 0/0
  7130 ;;		On exit  : 0/0
  7131 ;;		Unchanged: 0/0
  7132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7133 ;;      Params:         4       0       0       0       0       0       0
  7134 ;;      Locals:         6       0       0       0       0       0       0
  7135 ;;      Temps:          4       0       0       0       0       0       0
  7136 ;;      Totals:        14       0       0       0       0       0       0
  7137 ;;Total ram usage:       14 bytes
  7138 ;; Hardware stack levels used:    1
  7139 ;; Hardware stack levels required when called:    1
  7140 ;; This function calls:
  7141 ;;		Nothing
  7142 ;; This function is called by:
  7143 ;;		_get_voltage
  7144 ;;		_get_temp
  7145 ;;		_sprintf
  7146 ;; This function uses a non-reentrant model
  7147 ;;
  7148                           
  7149                           	psect	text33
  7150  001F60                     __ptext33:
  7151                           	opt callstack 0
  7152  001F60                     ___xxtofl:
  7153                           	opt callstack 0
  7154  001F60  FFFF               	dw	65535	; assembler added errata NOP
  7155                           
  7156                           ;incstack = 0
  7157                           ;___xxtofl@sign stored from wreg
  7158  001F62  6E09               	movwf	___xxtofl@sign,c
  7159  001F64  5009               	movf	___xxtofl@sign,w,c
  7160  001F66  A4D8               	btfss	status,2,c
  7161  001F68  AE04               	btfss	___xxtofl@val+3,7,c
  7162  001F6A  D01A               	goto	l1017
  7163  001F6C  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7164  001F70  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7165  001F74  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7166  001F78  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7167  001F7C  1E05               	comf	??___xxtofl,f,c
  7168  001F7E  1E06               	comf	??___xxtofl+1,f,c
  7169  001F80  1E07               	comf	??___xxtofl+2,f,c
  7170  001F82  1E08               	comf	??___xxtofl+3,f,c
  7171  001F84  2A05               	incf	??___xxtofl,f,c
  7172  001F86  0E00               	movlw	0
  7173  001F88  2206               	addwfc	??___xxtofl+1,f,c
  7174  001F8A  2207               	addwfc	??___xxtofl+2,f,c
  7175  001F8C  2208               	addwfc	??___xxtofl+3,f,c
  7176  001F8E  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7177  001F92  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7178  001F96  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7179  001F9A  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7180  001F9E  D009               	goto	l3610
  7181  001FA0                     l1017:
  7182  001FA0  FFFF               	dw	65535	; assembler added errata NOP
  7183  001FA2  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7184  001FA6  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7185  001FAA  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7186  001FAE  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7187  001FB2                     l3610:
  7188  001FB2  FFFF               	dw	65535	; assembler added errata NOP
  7189  001FB4  5001               	movf	___xxtofl@val,w,c
  7190  001FB6  1002               	iorwf	___xxtofl@val+1,w,c
  7191  001FB8  1003               	iorwf	___xxtofl@val+2,w,c
  7192  001FBA  1004               	iorwf	___xxtofl@val+3,w,c
  7193  001FBC  A4D8               	btfss	status,2,c
  7194  001FBE  D009               	goto	l3616
  7195  001FC0  0E00               	movlw	0
  7196  001FC2  6E01               	movwf	?___xxtofl,c
  7197  001FC4  0E00               	movlw	0
  7198  001FC6  6E02               	movwf	?___xxtofl+1,c
  7199  001FC8  0E00               	movlw	0
  7200  001FCA  6E03               	movwf	?___xxtofl+2,c
  7201  001FCC  0E00               	movlw	0
  7202  001FCE  6E04               	movwf	?___xxtofl+3,c
  7203  001FD0  D072               	goto	l1020
  7204  001FD2                     l3616:
  7205  001FD2  FFFF               	dw	65535	; assembler added errata NOP
  7206  001FD4  0E96               	movlw	150
  7207  001FD6  6E0A               	movwf	___xxtofl@exp,c
  7208  001FD8  D007               	goto	l3620
  7209  001FDA                     l3618:
  7210  001FDA  FFFF               	dw	65535	; assembler added errata NOP
  7211  001FDC  2A0A               	incf	___xxtofl@exp,f,c
  7212  001FDE  90D8               	bcf	status,0,c
  7213  001FE0  320E               	rrcf	___xxtofl@arg+3,f,c
  7214  001FE2  320D               	rrcf	___xxtofl@arg+2,f,c
  7215  001FE4  320C               	rrcf	___xxtofl@arg+1,f,c
  7216  001FE6  320B               	rrcf	___xxtofl@arg,f,c
  7217  001FE8                     l3620:
  7218  001FE8  FFFF               	dw	65535	; assembler added errata NOP
  7219  001FEA  0E00               	movlw	0
  7220  001FEC  140B               	andwf	___xxtofl@arg,w,c
  7221  001FEE  6E05               	movwf	??___xxtofl& (0+255),c
  7222  001FF0  0E00               	movlw	0
  7223  001FF2  140C               	andwf	___xxtofl@arg+1,w,c
  7224  001FF4  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  7225  001FF6  0E00               	movlw	0
  7226  001FF8  140D               	andwf	___xxtofl@arg+2,w,c
  7227  001FFA  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  7228  001FFC  0EFE               	movlw	254
  7229  001FFE  140E               	andwf	___xxtofl@arg+3,w,c
  7230  002000  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  7231  002002  5005               	movf	??___xxtofl,w,c
  7232  002004  1006               	iorwf	??___xxtofl+1,w,c
  7233  002006  1007               	iorwf	??___xxtofl+2,w,c
  7234  002008  1008               	iorwf	??___xxtofl+3,w,c
  7235  00200A  B4D8               	btfsc	status,2,c
  7236  00200C  D00E               	goto	l1024
  7237  00200E  D7E5               	goto	l3618
  7238  002010                     l3622:
  7239  002010  FFFF               	dw	65535	; assembler added errata NOP
  7240  002012  2A0A               	incf	___xxtofl@exp,f,c
  7241  002014  0E01               	movlw	1
  7242  002016  260B               	addwf	___xxtofl@arg,f,c
  7243  002018  0E00               	movlw	0
  7244  00201A  220C               	addwfc	___xxtofl@arg+1,f,c
  7245  00201C  220D               	addwfc	___xxtofl@arg+2,f,c
  7246  00201E  220E               	addwfc	___xxtofl@arg+3,f,c
  7247  002020  90D8               	bcf	status,0,c
  7248  002022  320E               	rrcf	___xxtofl@arg+3,f,c
  7249  002024  320D               	rrcf	___xxtofl@arg+2,f,c
  7250  002026  320C               	rrcf	___xxtofl@arg+1,f,c
  7251  002028  320B               	rrcf	___xxtofl@arg,f,c
  7252  00202A                     l1024:
  7253  00202A  FFFF               	dw	65535	; assembler added errata NOP
  7254  00202C  0E00               	movlw	0
  7255  00202E  140B               	andwf	___xxtofl@arg,w,c
  7256  002030  6E05               	movwf	??___xxtofl& (0+255),c
  7257  002032  0E00               	movlw	0
  7258  002034  140C               	andwf	___xxtofl@arg+1,w,c
  7259  002036  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  7260  002038  0E00               	movlw	0
  7261  00203A  140D               	andwf	___xxtofl@arg+2,w,c
  7262  00203C  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  7263  00203E  0EFF               	movlw	255
  7264  002040  140E               	andwf	___xxtofl@arg+3,w,c
  7265  002042  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  7266  002044  5005               	movf	??___xxtofl,w,c
  7267  002046  1006               	iorwf	??___xxtofl+1,w,c
  7268  002048  1007               	iorwf	??___xxtofl+2,w,c
  7269  00204A  1008               	iorwf	??___xxtofl+3,w,c
  7270  00204C  B4D8               	btfsc	status,2,c
  7271  00204E  D008               	goto	l3630
  7272  002050  D7DF               	goto	l3622
  7273  002052                     l3628:
  7274  002052  FFFF               	dw	65535	; assembler added errata NOP
  7275  002054  060A               	decf	___xxtofl@exp,f,c
  7276  002056  90D8               	bcf	status,0,c
  7277  002058  360B               	rlcf	___xxtofl@arg,f,c
  7278  00205A  360C               	rlcf	___xxtofl@arg+1,f,c
  7279  00205C  360D               	rlcf	___xxtofl@arg+2,f,c
  7280  00205E  360E               	rlcf	___xxtofl@arg+3,f,c
  7281  002060                     l3630:
  7282  002060  FFFF               	dw	65535	; assembler added errata NOP
  7283  002062  BE0D               	btfsc	___xxtofl@arg+2,7,c
  7284  002064  D003               	goto	u3940
  7285  002066  0E02               	movlw	2
  7286  002068  600A               	cpfslt	___xxtofl@exp,c
  7287  00206A  D7F3               	goto	l3628
  7288  00206C                     u3940:
  7289  00206C  FFFF               	dw	65535	; assembler added errata NOP
  7290  00206E  A00A               	btfss	___xxtofl@exp,0,c
  7291  002070  9E0D               	bcf	___xxtofl@arg+2,7,c
  7292  002072  90D8               	bcf	status,0,c
  7293  002074  320A               	rrcf	___xxtofl@exp,f,c
  7294  002076  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7295  00207A  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  7296  00207C  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  7297  00207E  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  7298  002080  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7299  002084  6A07               	clrf	??___xxtofl+2,c
  7300  002086  6A06               	clrf	??___xxtofl+1,c
  7301  002088  6A05               	clrf	??___xxtofl,c
  7302  00208A  5005               	movf	??___xxtofl,w,c
  7303  00208C  120B               	iorwf	___xxtofl@arg,f,c
  7304  00208E  5006               	movf	??___xxtofl+1,w,c
  7305  002090  120C               	iorwf	___xxtofl@arg+1,f,c
  7306  002092  5007               	movf	??___xxtofl+2,w,c
  7307  002094  120D               	iorwf	___xxtofl@arg+2,f,c
  7308  002096  5008               	movf	??___xxtofl+3,w,c
  7309  002098  120E               	iorwf	___xxtofl@arg+3,f,c
  7310  00209A  5009               	movf	___xxtofl@sign,w,c
  7311  00209C  A4D8               	btfss	status,2,c
  7312  00209E  AE04               	btfss	___xxtofl@val+3,7,c
  7313  0020A0  D001               	goto	l3646
  7314  0020A2  8E0E               	bsf	___xxtofl@arg+3,7,c
  7315  0020A4                     l3646:
  7316  0020A4  FFFF               	dw	65535	; assembler added errata NOP
  7317  0020A6  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7318  0020AA  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7319  0020AE  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7320  0020B2  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7321  0020B6                     l1020:
  7322  0020B6  FFFF               	dw	65535	; assembler added errata NOP
  7323  0020B8  0012               	return		;funcret
  7324  0020BA  FFFF               	dw	65535	; errata NOP
  7325  0020BC                     __end_of___xxtofl:
  7326                           	opt callstack 0
  7327                           
  7328 ;; *************** function ___flmul *****************
  7329 ;; Defined at:
  7330 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  7331 ;; Parameters:    Size  Location     Type
  7332 ;;  b               4   14[COMRAM] unsigned char 
  7333 ;;  a               4   18[COMRAM] unsigned char 
  7334 ;; Auto vars:     Size  Location     Type
  7335 ;;  prod            4   33[COMRAM] struct .
  7336 ;;  grs             4   27[COMRAM] unsigned long 
  7337 ;;  temp            2   37[COMRAM] struct .
  7338 ;;  bexp            1   32[COMRAM] unsigned char 
  7339 ;;  aexp            1   31[COMRAM] unsigned char 
  7340 ;;  sign            1   26[COMRAM] unsigned char 
  7341 ;; Return value:  Size  Location     Type
  7342 ;;                  4   14[COMRAM] unsigned char 
  7343 ;; Registers used:
  7344 ;;		wreg, status,2, status,0, prodl, prodh
  7345 ;; Tracked objects:
  7346 ;;		On entry : 0/0
  7347 ;;		On exit  : 0/0
  7348 ;;		Unchanged: 0/0
  7349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7350 ;;      Params:         8       0       0       0       0       0       0
  7351 ;;      Locals:        13       0       0       0       0       0       0
  7352 ;;      Temps:          4       0       0       0       0       0       0
  7353 ;;      Totals:        25       0       0       0       0       0       0
  7354 ;;Total ram usage:       25 bytes
  7355 ;; Hardware stack levels used:    1
  7356 ;; Hardware stack levels required when called:    1
  7357 ;; This function calls:
  7358 ;;		Nothing
  7359 ;; This function is called by:
  7360 ;;		_get_voltage
  7361 ;;		_get_temp
  7362 ;;		_fround
  7363 ;;		_scale
  7364 ;;		_sprintf
  7365 ;; This function uses a non-reentrant model
  7366 ;;
  7367                           
  7368                           	psect	text34
  7369  001336                     __ptext34:
  7370                           	opt callstack 0
  7371  001336                     ___flmul:
  7372                           	opt callstack 0
  7373  001336  FFFF               	dw	65535	; assembler added errata NOP
  7374                           
  7375                           ;incstack = 0
  7376  001338  5012               	movf	___flmul@b+3,w,c
  7377  00133A  0B80               	andlw	128
  7378  00133C  6E1B               	movwf	___flmul@sign,c
  7379  00133E  5012               	movf	___flmul@b+3,w,c
  7380  001340  2412               	addwf	___flmul@b+3,w,c
  7381  001342  6E21               	movwf	___flmul@bexp,c
  7382  001344  BE11               	btfsc	___flmul@b+2,7,c
  7383  001346  8021               	bsf	___flmul@bexp,0,c
  7384  001348  5021               	movf	___flmul@bexp,w,c
  7385  00134A  B4D8               	btfsc	status,2,c
  7386  00134C  D00E               	goto	l2878
  7387  00134E  2821               	incf	___flmul@bexp,w,c
  7388  001350  A4D8               	btfss	status,2,c
  7389  001352  D008               	goto	l2876
  7390  001354  0E00               	movlw	0
  7391  001356  6E0F               	movwf	___flmul@b,c
  7392  001358  0E00               	movlw	0
  7393  00135A  6E10               	movwf	___flmul@b+1,c
  7394  00135C  0E00               	movlw	0
  7395  00135E  6E11               	movwf	___flmul@b+2,c
  7396  001360  0E00               	movlw	0
  7397  001362  6E12               	movwf	___flmul@b+3,c
  7398  001364                     l2876:
  7399  001364  FFFF               	dw	65535	; assembler added errata NOP
  7400  001366  8E11               	bsf	___flmul@b+2,7,c
  7401  001368  D009               	goto	l2880
  7402  00136A                     l2878:
  7403  00136A  FFFF               	dw	65535	; assembler added errata NOP
  7404  00136C  0E00               	movlw	0
  7405  00136E  6E0F               	movwf	___flmul@b,c
  7406  001370  0E00               	movlw	0
  7407  001372  6E10               	movwf	___flmul@b+1,c
  7408  001374  0E00               	movlw	0
  7409  001376  6E11               	movwf	___flmul@b+2,c
  7410  001378  0E00               	movlw	0
  7411  00137A  6E12               	movwf	___flmul@b+3,c
  7412  00137C                     l2880:
  7413  00137C  FFFF               	dw	65535	; assembler added errata NOP
  7414  00137E  5016               	movf	___flmul@a+3,w,c
  7415  001380  0B80               	andlw	128
  7416  001382  1A1B               	xorwf	___flmul@sign,f,c
  7417  001384  5016               	movf	___flmul@a+3,w,c
  7418  001386  2416               	addwf	___flmul@a+3,w,c
  7419  001388  6E20               	movwf	___flmul@aexp,c
  7420  00138A  BE15               	btfsc	___flmul@a+2,7,c
  7421  00138C  8020               	bsf	___flmul@aexp,0,c
  7422  00138E  5020               	movf	___flmul@aexp,w,c
  7423  001390  B4D8               	btfsc	status,2,c
  7424  001392  D00E               	goto	l2896
  7425  001394  2820               	incf	___flmul@aexp,w,c
  7426  001396  A4D8               	btfss	status,2,c
  7427  001398  D008               	goto	l2894
  7428  00139A  0E00               	movlw	0
  7429  00139C  6E13               	movwf	___flmul@a,c
  7430  00139E  0E00               	movlw	0
  7431  0013A0  6E14               	movwf	___flmul@a+1,c
  7432  0013A2  0E00               	movlw	0
  7433  0013A4  6E15               	movwf	___flmul@a+2,c
  7434  0013A6  0E00               	movlw	0
  7435  0013A8  6E16               	movwf	___flmul@a+3,c
  7436  0013AA                     l2894:
  7437  0013AA  FFFF               	dw	65535	; assembler added errata NOP
  7438  0013AC  8E15               	bsf	___flmul@a+2,7,c
  7439  0013AE  D009               	goto	l976
  7440  0013B0                     l2896:
  7441  0013B0  FFFF               	dw	65535	; assembler added errata NOP
  7442  0013B2  0E00               	movlw	0
  7443  0013B4  6E13               	movwf	___flmul@a,c
  7444  0013B6  0E00               	movlw	0
  7445  0013B8  6E14               	movwf	___flmul@a+1,c
  7446  0013BA  0E00               	movlw	0
  7447  0013BC  6E15               	movwf	___flmul@a+2,c
  7448  0013BE  0E00               	movlw	0
  7449  0013C0  6E16               	movwf	___flmul@a+3,c
  7450  0013C2                     l976:
  7451  0013C2  FFFF               	dw	65535	; assembler added errata NOP
  7452  0013C4  5020               	movf	___flmul@aexp,w,c
  7453  0013C6  B4D8               	btfsc	status,2,c
  7454  0013C8  D003               	goto	u2860
  7455  0013CA  5021               	movf	___flmul@bexp,w,c
  7456  0013CC  A4D8               	btfss	status,2,c
  7457  0013CE  D00A               	goto	l2904
  7458  0013D0                     u2860:
  7459  0013D0  FFFF               	dw	65535	; assembler added errata NOP
  7460  0013D2  0E00               	movlw	0
  7461  0013D4  6E0F               	movwf	?___flmul,c
  7462  0013D6  0E00               	movlw	0
  7463  0013D8  6E10               	movwf	?___flmul+1,c
  7464  0013DA  0E00               	movlw	0
  7465  0013DC  6E11               	movwf	?___flmul+2,c
  7466  0013DE  0E00               	movlw	0
  7467  0013E0  6E12               	movwf	?___flmul+3,c
  7468  0013E2  D167               	goto	l980
  7469  0013E4                     l2904:
  7470  0013E4  FFFF               	dw	65535	; assembler added errata NOP
  7471  0013E6  5015               	movf	___flmul@a+2,w,c
  7472  0013E8  020F               	mulwf	___flmul@b,c
  7473  0013EA  CFF3 F026          	movff	prodl,___flmul@temp
  7474  0013EE  CFF4 F027          	movff	prodh,___flmul@temp+1
  7475  0013F2  5026               	movf	___flmul@temp,w,c
  7476  0013F4  6E1C               	movwf	___flmul@grs,c
  7477  0013F6  6A1D               	clrf	___flmul@grs+1,c
  7478  0013F8  6A1E               	clrf	___flmul@grs+2,c
  7479  0013FA  6A1F               	clrf	___flmul@grs+3,c
  7480  0013FC  5027               	movf	___flmul@temp+1,w,c
  7481  0013FE  6E22               	movwf	___flmul@prod,c
  7482  001400  6A23               	clrf	___flmul@prod+1,c
  7483  001402  6A24               	clrf	___flmul@prod+2,c
  7484  001404  6A25               	clrf	___flmul@prod+3,c
  7485  001406  5014               	movf	___flmul@a+1,w,c
  7486  001408  0210               	mulwf	___flmul@b+1,c
  7487  00140A  CFF3 F026          	movff	prodl,___flmul@temp
  7488  00140E  CFF4 F027          	movff	prodh,___flmul@temp+1
  7489  001412  5026               	movf	___flmul@temp,w,c
  7490  001414  261C               	addwf	___flmul@grs,f,c
  7491  001416  0E00               	movlw	0
  7492  001418  221D               	addwfc	___flmul@grs+1,f,c
  7493  00141A  221E               	addwfc	___flmul@grs+2,f,c
  7494  00141C  221F               	addwfc	___flmul@grs+3,f,c
  7495  00141E  5027               	movf	___flmul@temp+1,w,c
  7496  001420  2622               	addwf	___flmul@prod,f,c
  7497  001422  0E00               	movlw	0
  7498  001424  2223               	addwfc	___flmul@prod+1,f,c
  7499  001426  2224               	addwfc	___flmul@prod+2,f,c
  7500  001428  2225               	addwfc	___flmul@prod+3,f,c
  7501  00142A  5013               	movf	___flmul@a,w,c
  7502  00142C  0211               	mulwf	___flmul@b+2,c
  7503  00142E  CFF3 F026          	movff	prodl,___flmul@temp
  7504  001432  CFF4 F027          	movff	prodh,___flmul@temp+1
  7505  001436  5026               	movf	___flmul@temp,w,c
  7506  001438  261C               	addwf	___flmul@grs,f,c
  7507  00143A  0E00               	movlw	0
  7508  00143C  221D               	addwfc	___flmul@grs+1,f,c
  7509  00143E  221E               	addwfc	___flmul@grs+2,f,c
  7510  001440  221F               	addwfc	___flmul@grs+3,f,c
  7511  001442  5027               	movf	___flmul@temp+1,w,c
  7512  001444  2622               	addwf	___flmul@prod,f,c
  7513  001446  0E00               	movlw	0
  7514  001448  2223               	addwfc	___flmul@prod+1,f,c
  7515  00144A  2224               	addwfc	___flmul@prod+2,f,c
  7516  00144C  2225               	addwfc	___flmul@prod+3,f,c
  7517  00144E  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  7518  001452  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  7519  001456  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  7520  00145A  6A1C               	clrf	___flmul@grs,c
  7521  00145C  5013               	movf	___flmul@a,w,c
  7522  00145E  0210               	mulwf	___flmul@b+1,c
  7523  001460  CFF3 F026          	movff	prodl,___flmul@temp
  7524  001464  CFF4 F027          	movff	prodh,___flmul@temp+1
  7525  001468  5026               	movf	___flmul@temp,w,c
  7526  00146A  261C               	addwf	___flmul@grs,f,c
  7527  00146C  5027               	movf	___flmul@temp+1,w,c
  7528  00146E  221D               	addwfc	___flmul@grs+1,f,c
  7529  001470  0E00               	movlw	0
  7530  001472  221E               	addwfc	___flmul@grs+2,f,c
  7531  001474  0E00               	movlw	0
  7532  001476  221F               	addwfc	___flmul@grs+3,f,c
  7533  001478  5014               	movf	___flmul@a+1,w,c
  7534  00147A  020F               	mulwf	___flmul@b,c
  7535  00147C  CFF3 F026          	movff	prodl,___flmul@temp
  7536  001480  CFF4 F027          	movff	prodh,___flmul@temp+1
  7537  001484  5026               	movf	___flmul@temp,w,c
  7538  001486  261C               	addwf	___flmul@grs,f,c
  7539  001488  5027               	movf	___flmul@temp+1,w,c
  7540  00148A  221D               	addwfc	___flmul@grs+1,f,c
  7541  00148C  0E00               	movlw	0
  7542  00148E  221E               	addwfc	___flmul@grs+2,f,c
  7543  001490  0E00               	movlw	0
  7544  001492  221F               	addwfc	___flmul@grs+3,f,c
  7545  001494  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  7546  001498  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  7547  00149C  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  7548  0014A0  6A1C               	clrf	___flmul@grs,c
  7549  0014A2  5013               	movf	___flmul@a,w,c
  7550  0014A4  020F               	mulwf	___flmul@b,c
  7551  0014A6  CFF3 F026          	movff	prodl,___flmul@temp
  7552  0014AA  CFF4 F027          	movff	prodh,___flmul@temp+1
  7553  0014AE  5026               	movf	___flmul@temp,w,c
  7554  0014B0  261C               	addwf	___flmul@grs,f,c
  7555  0014B2  5027               	movf	___flmul@temp+1,w,c
  7556  0014B4  221D               	addwfc	___flmul@grs+1,f,c
  7557  0014B6  0E00               	movlw	0
  7558  0014B8  221E               	addwfc	___flmul@grs+2,f,c
  7559  0014BA  0E00               	movlw	0
  7560  0014BC  221F               	addwfc	___flmul@grs+3,f,c
  7561  0014BE  5015               	movf	___flmul@a+2,w,c
  7562  0014C0  0210               	mulwf	___flmul@b+1,c
  7563  0014C2  CFF3 F026          	movff	prodl,___flmul@temp
  7564  0014C6  CFF4 F027          	movff	prodh,___flmul@temp+1
  7565  0014CA  5026               	movf	___flmul@temp,w,c
  7566  0014CC  2622               	addwf	___flmul@prod,f,c
  7567  0014CE  5027               	movf	___flmul@temp+1,w,c
  7568  0014D0  2223               	addwfc	___flmul@prod+1,f,c
  7569  0014D2  0E00               	movlw	0
  7570  0014D4  2224               	addwfc	___flmul@prod+2,f,c
  7571  0014D6  0E00               	movlw	0
  7572  0014D8  2225               	addwfc	___flmul@prod+3,f,c
  7573  0014DA  5014               	movf	___flmul@a+1,w,c
  7574  0014DC  0211               	mulwf	___flmul@b+2,c
  7575  0014DE  CFF3 F026          	movff	prodl,___flmul@temp
  7576  0014E2  CFF4 F027          	movff	prodh,___flmul@temp+1
  7577  0014E6  5026               	movf	___flmul@temp,w,c
  7578  0014E8  2622               	addwf	___flmul@prod,f,c
  7579  0014EA  5027               	movf	___flmul@temp+1,w,c
  7580  0014EC  2223               	addwfc	___flmul@prod+1,f,c
  7581  0014EE  0E00               	movlw	0
  7582  0014F0  2224               	addwfc	___flmul@prod+2,f,c
  7583  0014F2  0E00               	movlw	0
  7584  0014F4  2225               	addwfc	___flmul@prod+3,f,c
  7585  0014F6  5015               	movf	___flmul@a+2,w,c
  7586  0014F8  0211               	mulwf	___flmul@b+2,c
  7587  0014FA  CFF3 F026          	movff	prodl,___flmul@temp
  7588  0014FE  CFF4 F027          	movff	prodh,___flmul@temp+1
  7589  001502  5026               	movf	___flmul@temp,w,c
  7590  001504  6E17               	movwf	??___flmul& (0+255),c
  7591  001506  5027               	movf	___flmul@temp+1,w,c
  7592  001508  6E18               	movwf	(??___flmul+1)& (0+255),c
  7593  00150A  6A19               	clrf	(??___flmul+2)& (0+255),c
  7594  00150C  6A1A               	clrf	(??___flmul+3)& (0+255),c
  7595  00150E  C019  F01A         	movff	??___flmul+2,??___flmul+3
  7596  001512  C018  F019         	movff	??___flmul+1,??___flmul+2
  7597  001516  C017  F018         	movff	??___flmul,??___flmul+1
  7598  00151A  6A17               	clrf	??___flmul,c
  7599  00151C  5017               	movf	??___flmul,w,c
  7600  00151E  2622               	addwf	___flmul@prod,f,c
  7601  001520  5018               	movf	??___flmul+1,w,c
  7602  001522  2223               	addwfc	___flmul@prod+1,f,c
  7603  001524  5019               	movf	??___flmul+2,w,c
  7604  001526  2224               	addwfc	___flmul@prod+2,f,c
  7605  001528  501A               	movf	??___flmul+3,w,c
  7606  00152A  2225               	addwfc	___flmul@prod+3,f,c
  7607  00152C  C01C  F017         	movff	___flmul@grs,??___flmul
  7608  001530  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  7609  001534  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  7610  001538  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  7611  00153C  0E19               	movlw	25
  7612  00153E  D006               	goto	u2870
  7613  001540                     u2875:
  7614  001540  FFFF               	dw	65535	; assembler added errata NOP
  7615  001542  90D8               	bcf	status,0,c
  7616  001544  321A               	rrcf	??___flmul+3,f,c
  7617  001546  3219               	rrcf	??___flmul+2,f,c
  7618  001548  3218               	rrcf	??___flmul+1,f,c
  7619  00154A  3217               	rrcf	??___flmul,f,c
  7620  00154C                     u2870:
  7621  00154C  FFFF               	dw	65535	; assembler added errata NOP
  7622  00154E  2EE8               	decfsz	wreg,f,c
  7623  001550  D7F7               	goto	u2875
  7624  001552  5017               	movf	??___flmul,w,c
  7625  001554  2622               	addwf	___flmul@prod,f,c
  7626  001556  5018               	movf	??___flmul+1,w,c
  7627  001558  2223               	addwfc	___flmul@prod+1,f,c
  7628  00155A  5019               	movf	??___flmul+2,w,c
  7629  00155C  2224               	addwfc	___flmul@prod+2,f,c
  7630  00155E  501A               	movf	??___flmul+3,w,c
  7631  001560  2225               	addwfc	___flmul@prod+3,f,c
  7632  001562  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  7633  001566  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  7634  00156A  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  7635  00156E  6A1C               	clrf	___flmul@grs,c
  7636  001570  5020               	movf	___flmul@aexp,w,c
  7637  001572  C021  F017         	movff	___flmul@bexp,??___flmul
  7638  001576  6A18               	clrf	(??___flmul+1)& (0+255),c
  7639  001578  2617               	addwf	??___flmul,f,c
  7640  00157A  0E00               	movlw	0
  7641  00157C  2218               	addwfc	??___flmul+1,f,c
  7642  00157E  0E82               	movlw	130
  7643  001580  2417               	addwf	??___flmul,w,c
  7644  001582  6E26               	movwf	___flmul@temp,c
  7645  001584  0EFF               	movlw	255
  7646  001586  2018               	addwfc	??___flmul+1,w,c
  7647  001588  6E27               	movwf	___flmul@temp+1,c
  7648  00158A  D010               	goto	l2952
  7649  00158C                     l2946:
  7650  00158C  FFFF               	dw	65535	; assembler added errata NOP
  7651  00158E  90D8               	bcf	status,0,c
  7652  001590  3622               	rlcf	___flmul@prod,f,c
  7653  001592  3623               	rlcf	___flmul@prod+1,f,c
  7654  001594  3624               	rlcf	___flmul@prod+2,f,c
  7655  001596  3625               	rlcf	___flmul@prod+3,f,c
  7656  001598  BE1F               	btfsc	___flmul@grs+3,7,c
  7657  00159A  8022               	bsf	___flmul@prod,0,c
  7658  00159C  90D8               	bcf	status,0,c
  7659  00159E  361C               	rlcf	___flmul@grs,f,c
  7660  0015A0  361D               	rlcf	___flmul@grs+1,f,c
  7661  0015A2  361E               	rlcf	___flmul@grs+2,f,c
  7662  0015A4  361F               	rlcf	___flmul@grs+3,f,c
  7663  0015A6  0626               	decf	___flmul@temp,f,c
  7664  0015A8  A0D8               	btfss	status,0,c
  7665  0015AA  0627               	decf	___flmul@temp+1,f,c
  7666  0015AC                     l2952:
  7667  0015AC  FFFF               	dw	65535	; assembler added errata NOP
  7668  0015AE  AE24               	btfss	___flmul@prod+2,7,c
  7669  0015B0  D7ED               	goto	l2946
  7670  0015B2  0E00               	movlw	0
  7671  0015B4  6E20               	movwf	___flmul@aexp,c
  7672  0015B6  AE1F               	btfss	___flmul@grs+3,7,c
  7673  0015B8  D019               	goto	l985
  7674  0015BA  0EFF               	movlw	255
  7675  0015BC  141C               	andwf	___flmul@grs,w,c
  7676  0015BE  6E17               	movwf	??___flmul& (0+255),c
  7677  0015C0  0EFF               	movlw	255
  7678  0015C2  141D               	andwf	___flmul@grs+1,w,c
  7679  0015C4  6E18               	movwf	(??___flmul+1)& (0+255),c
  7680  0015C6  0EFF               	movlw	255
  7681  0015C8  141E               	andwf	___flmul@grs+2,w,c
  7682  0015CA  6E19               	movwf	(??___flmul+2)& (0+255),c
  7683  0015CC  0E7F               	movlw	127
  7684  0015CE  141F               	andwf	___flmul@grs+3,w,c
  7685  0015D0  6E1A               	movwf	(??___flmul+3)& (0+255),c
  7686  0015D2  5017               	movf	??___flmul,w,c
  7687  0015D4  1018               	iorwf	??___flmul+1,w,c
  7688  0015D6  1019               	iorwf	??___flmul+2,w,c
  7689  0015D8  101A               	iorwf	??___flmul+3,w,c
  7690  0015DA  B4D8               	btfsc	status,2,c
  7691  0015DC  D004               	goto	l986
  7692  0015DE                     u2910:
  7693  0015DE  FFFF               	dw	65535	; assembler added errata NOP
  7694  0015E0  0E01               	movlw	1
  7695  0015E2  6E20               	movwf	___flmul@aexp,c
  7696  0015E4  D003               	goto	l985
  7697  0015E6                     l986:
  7698  0015E6  FFFF               	dw	65535	; assembler added errata NOP
  7699  0015E8  B022               	btfsc	___flmul@prod,0,c
  7700  0015EA  D7F9               	goto	u2910
  7701  0015EC                     l985:
  7702  0015EC  FFFF               	dw	65535	; assembler added errata NOP
  7703  0015EE  5020               	movf	___flmul@aexp,w,c
  7704  0015F0  B4D8               	btfsc	status,2,c
  7705  0015F2  D01F               	goto	l2972
  7706  0015F4  0E01               	movlw	1
  7707  0015F6  2622               	addwf	___flmul@prod,f,c
  7708  0015F8  0E00               	movlw	0
  7709  0015FA  2223               	addwfc	___flmul@prod+1,f,c
  7710  0015FC  2224               	addwfc	___flmul@prod+2,f,c
  7711  0015FE  2225               	addwfc	___flmul@prod+3,f,c
  7712  001600  A025               	btfss	___flmul@prod+3,0,c
  7713  001602  D017               	goto	l2972
  7714  001604  C022  F017         	movff	___flmul@prod,??___flmul
  7715  001608  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  7716  00160C  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  7717  001610  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  7718  001614  341A               	rlcf	??___flmul+3,w,c
  7719  001616  321A               	rrcf	??___flmul+3,f,c
  7720  001618  3219               	rrcf	??___flmul+2,f,c
  7721  00161A  3218               	rrcf	??___flmul+1,f,c
  7722  00161C  3217               	rrcf	??___flmul,f,c
  7723  00161E  C017  F022         	movff	??___flmul,___flmul@prod
  7724  001622  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  7725  001626  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  7726  00162A  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  7727  00162E  4A26               	infsnz	___flmul@temp,f,c
  7728  001630  2A27               	incf	___flmul@temp+1,f,c
  7729  001632                     l2972:
  7730  001632  FFFF               	dw	65535	; assembler added errata NOP
  7731  001634  BE27               	btfsc	___flmul@temp+1,7,c
  7732  001636  D00D               	goto	l2976
  7733  001638  5027               	movf	___flmul@temp+1,w,c
  7734  00163A  E103               	bnz	u2950
  7735  00163C  2826               	incf	___flmul@temp,w,c
  7736  00163E  A0D8               	btfss	status,0,c
  7737  001640  D008               	goto	l2976
  7738  001642                     u2950:
  7739  001642  0E00               	movlw	0
  7740  001644  6E22               	movwf	___flmul@prod,c
  7741  001646  0E00               	movlw	0
  7742  001648  6E23               	movwf	___flmul@prod+1,c
  7743  00164A  0E80               	movlw	128
  7744  00164C  6E24               	movwf	___flmul@prod+2,c
  7745  00164E  0E7F               	movlw	127
  7746  001650  D023               	goto	L11
  7747  001652                     l2976:
  7748  001652  FFFF               	dw	65535	; assembler added errata NOP
  7749  001654  BE27               	btfsc	___flmul@temp+1,7,c
  7750  001656  D005               	goto	u2960
  7751  001658  5027               	movf	___flmul@temp+1,w,c
  7752  00165A  E10F               	bnz	l993
  7753  00165C  0426               	decf	___flmul@temp,w,c
  7754  00165E  B0D8               	btfsc	status,0,c
  7755  001660  D00C               	goto	l993
  7756  001662                     u2960:
  7757  001662  FFFF               	dw	65535	; assembler added errata NOP
  7758  001664  0E00               	movlw	0
  7759  001666  6E22               	movwf	___flmul@prod,c
  7760  001668  0E00               	movlw	0
  7761  00166A  6E23               	movwf	___flmul@prod+1,c
  7762  00166C  0E00               	movlw	0
  7763  00166E  6E24               	movwf	___flmul@prod+2,c
  7764  001670  0E00               	movlw	0
  7765  001672  6E25               	movwf	___flmul@prod+3,c
  7766  001674  0E00               	movlw	0
  7767  001676  6E1B               	movwf	___flmul@sign,c
  7768  001678  D011               	goto	l2988
  7769  00167A                     l993:
  7770  00167A  FFFF               	dw	65535	; assembler added errata NOP
  7771  00167C  C026  F021         	movff	___flmul@temp,___flmul@bexp
  7772  001680  0EFF               	movlw	255
  7773  001682  1622               	andwf	___flmul@prod,f,c
  7774  001684  0EFF               	movlw	255
  7775  001686  1623               	andwf	___flmul@prod+1,f,c
  7776  001688  0E7F               	movlw	127
  7777  00168A  1624               	andwf	___flmul@prod+2,f,c
  7778  00168C  0E00               	movlw	0
  7779  00168E  1625               	andwf	___flmul@prod+3,f,c
  7780  001690  B021               	btfsc	___flmul@bexp,0,c
  7781  001692  8E24               	bsf	___flmul@prod+2,7,c
  7782  001694  90D8               	bcf	status,0,c
  7783  001696  3021               	rrcf	___flmul@bexp,w,c
  7784  001698                     L11:
  7785  001698  FFFF               	dw	65535	; assembler added errata NOP
  7786  00169A  6E25               	movwf	___flmul@prod+3,c
  7787  00169C                     l2988:
  7788  00169C  FFFF               	dw	65535	; assembler added errata NOP
  7789  00169E  501B               	movf	___flmul@sign,w,c
  7790  0016A0  1225               	iorwf	___flmul@prod+3,f,c
  7791  0016A2  C022  F00F         	movff	___flmul@prod,?___flmul
  7792  0016A6  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  7793  0016AA  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  7794  0016AE  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  7795  0016B2                     l980:
  7796  0016B2  FFFF               	dw	65535	; assembler added errata NOP
  7797  0016B4  0012               	return		;funcret
  7798  0016B6  FFFF               	dw	65535	; errata NOP
  7799  0016B8                     __end_of___flmul:
  7800                           	opt callstack 0
  7801                           
  7802 ;; *************** function ___fldiv *****************
  7803 ;; Defined at:
  7804 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
  7805 ;; Parameters:    Size  Location     Type
  7806 ;;  b               4   39[COMRAM] unsigned char 
  7807 ;;  a               4   43[COMRAM] unsigned char 
  7808 ;; Auto vars:     Size  Location     Type
  7809 ;;  grs             4   58[COMRAM] unsigned long 
  7810 ;;  rem             4   51[COMRAM] unsigned long 
  7811 ;;  new_exp         2   56[COMRAM] int 
  7812 ;;  aexp            1   63[COMRAM] unsigned char 
  7813 ;;  bexp            1   62[COMRAM] unsigned char 
  7814 ;;  sign            1   55[COMRAM] unsigned char 
  7815 ;; Return value:  Size  Location     Type
  7816 ;;                  4   39[COMRAM] unsigned char 
  7817 ;; Registers used:
  7818 ;;		wreg, status,2, status,0
  7819 ;; Tracked objects:
  7820 ;;		On entry : 0/0
  7821 ;;		On exit  : 0/0
  7822 ;;		Unchanged: 0/0
  7823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7824 ;;      Params:         8       0       0       0       0       0       0
  7825 ;;      Locals:        13       0       0       0       0       0       0
  7826 ;;      Temps:          4       0       0       0       0       0       0
  7827 ;;      Totals:        25       0       0       0       0       0       0
  7828 ;;Total ram usage:       25 bytes
  7829 ;; Hardware stack levels used:    1
  7830 ;; Hardware stack levels required when called:    1
  7831 ;; This function calls:
  7832 ;;		Nothing
  7833 ;; This function is called by:
  7834 ;;		_get_voltage
  7835 ;;		_get_temp
  7836 ;; This function uses a non-reentrant model
  7837 ;;
  7838                           
  7839                           	psect	text35
  7840  0019FC                     __ptext35:
  7841                           	opt callstack 0
  7842  0019FC                     ___fldiv:
  7843                           	opt callstack 0
  7844  0019FC  FFFF               	dw	65535	; assembler added errata NOP
  7845                           
  7846                           ;incstack = 0
  7847  0019FE  502B               	movf	___fldiv@b+3,w,c
  7848  001A00  0B80               	andlw	128
  7849  001A02  6E38               	movwf	___fldiv@sign,c
  7850  001A04  502B               	movf	___fldiv@b+3,w,c
  7851  001A06  242B               	addwf	___fldiv@b+3,w,c
  7852  001A08  6E3F               	movwf	___fldiv@bexp,c
  7853  001A0A  BE2A               	btfsc	___fldiv@b+2,7,c
  7854  001A0C  803F               	bsf	___fldiv@bexp,0,c
  7855  001A0E  503F               	movf	___fldiv@bexp,w,c
  7856  001A10  B4D8               	btfsc	status,2,c
  7857  001A12  D00E               	goto	l3370
  7858  001A14  283F               	incf	___fldiv@bexp,w,c
  7859  001A16  A4D8               	btfss	status,2,c
  7860  001A18  D008               	goto	l3366
  7861  001A1A  0E00               	movlw	0
  7862  001A1C  6E28               	movwf	___fldiv@b,c
  7863  001A1E  0E00               	movlw	0
  7864  001A20  6E29               	movwf	___fldiv@b+1,c
  7865  001A22  0E00               	movlw	0
  7866  001A24  6E2A               	movwf	___fldiv@b+2,c
  7867  001A26  0E00               	movlw	0
  7868  001A28  6E2B               	movwf	___fldiv@b+3,c
  7869  001A2A                     l3366:
  7870  001A2A  FFFF               	dw	65535	; assembler added errata NOP
  7871  001A2C  8E2A               	bsf	___fldiv@b+2,7,c
  7872  001A2E  D007               	goto	L12
  7873  001A30                     l3370:
  7874  001A30  FFFF               	dw	65535	; assembler added errata NOP
  7875  001A32  0E00               	movlw	0
  7876  001A34  6E28               	movwf	___fldiv@b,c
  7877  001A36  0E00               	movlw	0
  7878  001A38  6E29               	movwf	___fldiv@b+1,c
  7879  001A3A  0E00               	movlw	0
  7880  001A3C  6E2A               	movwf	___fldiv@b+2,c
  7881  001A3E                     L12:
  7882  001A3E  FFFF               	dw	65535	; assembler added errata NOP
  7883  001A40  0E00               	movlw	0
  7884  001A42  6E2B               	movwf	___fldiv@b+3,c
  7885  001A44  502F               	movf	___fldiv@a+3,w,c
  7886  001A46  0B80               	andlw	128
  7887  001A48  1A38               	xorwf	___fldiv@sign,f,c
  7888  001A4A  502F               	movf	___fldiv@a+3,w,c
  7889  001A4C  242F               	addwf	___fldiv@a+3,w,c
  7890  001A4E  6E40               	movwf	___fldiv@aexp,c
  7891  001A50  BE2E               	btfsc	___fldiv@a+2,7,c
  7892  001A52  8040               	bsf	___fldiv@aexp,0,c
  7893  001A54  5040               	movf	___fldiv@aexp,w,c
  7894  001A56  B4D8               	btfsc	status,2,c
  7895  001A58  D00E               	goto	l3390
  7896  001A5A  2840               	incf	___fldiv@aexp,w,c
  7897  001A5C  A4D8               	btfss	status,2,c
  7898  001A5E  D008               	goto	l3386
  7899  001A60  0E00               	movlw	0
  7900  001A62  6E2C               	movwf	___fldiv@a,c
  7901  001A64  0E00               	movlw	0
  7902  001A66  6E2D               	movwf	___fldiv@a+1,c
  7903  001A68  0E00               	movlw	0
  7904  001A6A  6E2E               	movwf	___fldiv@a+2,c
  7905  001A6C  0E00               	movlw	0
  7906  001A6E  6E2F               	movwf	___fldiv@a+3,c
  7907  001A70                     l3386:
  7908  001A70  FFFF               	dw	65535	; assembler added errata NOP
  7909  001A72  8E2E               	bsf	___fldiv@a+2,7,c
  7910  001A74  D007               	goto	L13
  7911  001A76                     l3390:
  7912  001A76  FFFF               	dw	65535	; assembler added errata NOP
  7913  001A78  0E00               	movlw	0
  7914  001A7A  6E2C               	movwf	___fldiv@a,c
  7915  001A7C  0E00               	movlw	0
  7916  001A7E  6E2D               	movwf	___fldiv@a+1,c
  7917  001A80  0E00               	movlw	0
  7918  001A82  6E2E               	movwf	___fldiv@a+2,c
  7919  001A84                     L13:
  7920  001A84  FFFF               	dw	65535	; assembler added errata NOP
  7921  001A86  0E00               	movlw	0
  7922  001A88  6E2F               	movwf	___fldiv@a+3,c
  7923  001A8A  502C               	movf	___fldiv@a,w,c
  7924  001A8C  102D               	iorwf	___fldiv@a+1,w,c
  7925  001A8E  102E               	iorwf	___fldiv@a+2,w,c
  7926  001A90  102F               	iorwf	___fldiv@a+3,w,c
  7927  001A92  A4D8               	btfss	status,2,c
  7928  001A94  D018               	goto	l3404
  7929  001A96  0E00               	movlw	0
  7930  001A98  6E28               	movwf	___fldiv@b,c
  7931  001A9A  0E00               	movlw	0
  7932  001A9C  6E29               	movwf	___fldiv@b+1,c
  7933  001A9E  0E00               	movlw	0
  7934  001AA0  6E2A               	movwf	___fldiv@b+2,c
  7935  001AA2  0E00               	movlw	0
  7936  001AA4  6E2B               	movwf	___fldiv@b+3,c
  7937  001AA6  0E80               	movlw	128
  7938  001AA8  122A               	iorwf	___fldiv@b+2,f,c
  7939  001AAA  0E7F               	movlw	127
  7940  001AAC  122B               	iorwf	___fldiv@b+3,f,c
  7941  001AAE                     l3398:
  7942  001AAE  FFFF               	dw	65535	; assembler added errata NOP
  7943  001AB0  5038               	movf	___fldiv@sign,w,c
  7944  001AB2  122B               	iorwf	___fldiv@b+3,f,c
  7945  001AB4  C028  F028         	movff	___fldiv@b,?___fldiv
  7946  001AB8  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  7947  001ABC  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  7948  001AC0  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  7949  001AC4  D0F8               	goto	l944
  7950  001AC6                     l3404:
  7951  001AC6  FFFF               	dw	65535	; assembler added errata NOP
  7952  001AC8  503F               	movf	___fldiv@bexp,w,c
  7953  001ACA  A4D8               	btfss	status,2,c
  7954  001ACC  D009               	goto	l3412
  7955  001ACE  0E00               	movlw	0
  7956  001AD0  6E28               	movwf	?___fldiv,c
  7957  001AD2  0E00               	movlw	0
  7958  001AD4  6E29               	movwf	?___fldiv+1,c
  7959  001AD6  0E00               	movlw	0
  7960  001AD8  6E2A               	movwf	?___fldiv+2,c
  7961  001ADA  0E00               	movlw	0
  7962  001ADC  6E2B               	movwf	?___fldiv+3,c
  7963  001ADE  D0EB               	goto	l944
  7964  001AE0                     l3412:
  7965  001AE0  FFFF               	dw	65535	; assembler added errata NOP
  7966  001AE2  5040               	movf	___fldiv@aexp,w,c
  7967  001AE4  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  7968  001AE8  6A31               	clrf	(??___fldiv+1)& (0+255),c
  7969  001AEA  5E30               	subwf	??___fldiv,f,c
  7970  001AEC  0E00               	movlw	0
  7971  001AEE  5A31               	subwfb	??___fldiv+1,f,c
  7972  001AF0  0E7F               	movlw	127
  7973  001AF2  2430               	addwf	??___fldiv,w,c
  7974  001AF4  6E39               	movwf	___fldiv@new_exp,c
  7975  001AF6  0E00               	movlw	0
  7976  001AF8  2031               	addwfc	??___fldiv+1,w,c
  7977  001AFA  6E3A               	movwf	___fldiv@new_exp+1,c
  7978  001AFC  C028  F034         	movff	___fldiv@b,___fldiv@rem
  7979  001B00  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  7980  001B04  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  7981  001B08  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  7982  001B0C  0E00               	movlw	0
  7983  001B0E  6E28               	movwf	___fldiv@b,c
  7984  001B10  0E00               	movlw	0
  7985  001B12  6E29               	movwf	___fldiv@b+1,c
  7986  001B14  0E00               	movlw	0
  7987  001B16  6E2A               	movwf	___fldiv@b+2,c
  7988  001B18  0E00               	movlw	0
  7989  001B1A  6E2B               	movwf	___fldiv@b+3,c
  7990  001B1C  0E00               	movlw	0
  7991  001B1E  6E3B               	movwf	___fldiv@grs,c
  7992  001B20  0E00               	movlw	0
  7993  001B22  6E3C               	movwf	___fldiv@grs+1,c
  7994  001B24  0E00               	movlw	0
  7995  001B26  6E3D               	movwf	___fldiv@grs+2,c
  7996  001B28  0E00               	movlw	0
  7997  001B2A  6E3E               	movwf	___fldiv@grs+3,c
  7998  001B2C  0E00               	movlw	0
  7999  001B2E  6E40               	movwf	___fldiv@aexp,c
  8000  001B30  D02B               	goto	l946
  8001  001B32                     l3422:
  8002  001B32  FFFF               	dw	65535	; assembler added errata NOP
  8003  001B34  5040               	movf	___fldiv@aexp,w,c
  8004  001B36  B4D8               	btfsc	status,2,c
  8005  001B38  D011               	goto	l3430
  8006  001B3A  90D8               	bcf	status,0,c
  8007  001B3C  3634               	rlcf	___fldiv@rem,f,c
  8008  001B3E  3635               	rlcf	___fldiv@rem+1,f,c
  8009  001B40  3636               	rlcf	___fldiv@rem+2,f,c
  8010  001B42  3637               	rlcf	___fldiv@rem+3,f,c
  8011  001B44  90D8               	bcf	status,0,c
  8012  001B46  3628               	rlcf	___fldiv@b,f,c
  8013  001B48  3629               	rlcf	___fldiv@b+1,f,c
  8014  001B4A  362A               	rlcf	___fldiv@b+2,f,c
  8015  001B4C  362B               	rlcf	___fldiv@b+3,f,c
  8016  001B4E  BE3E               	btfsc	___fldiv@grs+3,7,c
  8017  001B50  8028               	bsf	___fldiv@b,0,c
  8018  001B52  90D8               	bcf	status,0,c
  8019  001B54  363B               	rlcf	___fldiv@grs,f,c
  8020  001B56  363C               	rlcf	___fldiv@grs+1,f,c
  8021  001B58  363D               	rlcf	___fldiv@grs+2,f,c
  8022  001B5A  363E               	rlcf	___fldiv@grs+3,f,c
  8023  001B5C                     l3430:
  8024  001B5C  FFFF               	dw	65535	; assembler added errata NOP
  8025  001B5E  502C               	movf	___fldiv@a,w,c
  8026  001B60  5C34               	subwf	___fldiv@rem,w,c
  8027  001B62  502D               	movf	___fldiv@a+1,w,c
  8028  001B64  5835               	subwfb	___fldiv@rem+1,w,c
  8029  001B66  502E               	movf	___fldiv@a+2,w,c
  8030  001B68  5836               	subwfb	___fldiv@rem+2,w,c
  8031  001B6A  502F               	movf	___fldiv@a+3,w,c
  8032  001B6C  5837               	subwfb	___fldiv@rem+3,w,c
  8033  001B6E  A0D8               	btfss	status,0,c
  8034  001B70  D009               	goto	l3436
  8035  001B72  8C3E               	bsf	___fldiv@grs+3,6,c
  8036  001B74  502C               	movf	___fldiv@a,w,c
  8037  001B76  5E34               	subwf	___fldiv@rem,f,c
  8038  001B78  502D               	movf	___fldiv@a+1,w,c
  8039  001B7A  5A35               	subwfb	___fldiv@rem+1,f,c
  8040  001B7C  502E               	movf	___fldiv@a+2,w,c
  8041  001B7E  5A36               	subwfb	___fldiv@rem+2,f,c
  8042  001B80  502F               	movf	___fldiv@a+3,w,c
  8043  001B82  5A37               	subwfb	___fldiv@rem+3,f,c
  8044  001B84                     l3436:
  8045  001B84  FFFF               	dw	65535	; assembler added errata NOP
  8046  001B86  2A40               	incf	___fldiv@aexp,f,c
  8047  001B88                     l946:
  8048  001B88  FFFF               	dw	65535	; assembler added errata NOP
  8049  001B8A  0E19               	movlw	25
  8050  001B8C  6440               	cpfsgt	___fldiv@aexp,c
  8051  001B8E  D7D1               	goto	l3422
  8052  001B90  5034               	movf	___fldiv@rem,w,c
  8053  001B92  1035               	iorwf	___fldiv@rem+1,w,c
  8054  001B94  1036               	iorwf	___fldiv@rem+2,w,c
  8055  001B96  1037               	iorwf	___fldiv@rem+3,w,c
  8056  001B98  B4D8               	btfsc	status,2,c
  8057  001B9A  D012               	goto	l3448
  8058  001B9C  803B               	bsf	___fldiv@grs,0,c
  8059  001B9E  D010               	goto	l3448
  8060  001BA0                     l3442:
  8061  001BA0  FFFF               	dw	65535	; assembler added errata NOP
  8062  001BA2  90D8               	bcf	status,0,c
  8063  001BA4  3628               	rlcf	___fldiv@b,f,c
  8064  001BA6  3629               	rlcf	___fldiv@b+1,f,c
  8065  001BA8  362A               	rlcf	___fldiv@b+2,f,c
  8066  001BAA  362B               	rlcf	___fldiv@b+3,f,c
  8067  001BAC  BE3E               	btfsc	___fldiv@grs+3,7,c
  8068  001BAE  8028               	bsf	___fldiv@b,0,c
  8069  001BB0  90D8               	bcf	status,0,c
  8070  001BB2  363B               	rlcf	___fldiv@grs,f,c
  8071  001BB4  363C               	rlcf	___fldiv@grs+1,f,c
  8072  001BB6  363D               	rlcf	___fldiv@grs+2,f,c
  8073  001BB8  363E               	rlcf	___fldiv@grs+3,f,c
  8074  001BBA  0639               	decf	___fldiv@new_exp,f,c
  8075  001BBC  A0D8               	btfss	status,0,c
  8076  001BBE  063A               	decf	___fldiv@new_exp+1,f,c
  8077  001BC0                     l3448:
  8078  001BC0  FFFF               	dw	65535	; assembler added errata NOP
  8079  001BC2  AE2A               	btfss	___fldiv@b+2,7,c
  8080  001BC4  D7ED               	goto	l3442
  8081  001BC6  0E00               	movlw	0
  8082  001BC8  6E40               	movwf	___fldiv@aexp,c
  8083  001BCA  AE3E               	btfss	___fldiv@grs+3,7,c
  8084  001BCC  D019               	goto	l957
  8085  001BCE  0EFF               	movlw	255
  8086  001BD0  143B               	andwf	___fldiv@grs,w,c
  8087  001BD2  6E30               	movwf	??___fldiv& (0+255),c
  8088  001BD4  0EFF               	movlw	255
  8089  001BD6  143C               	andwf	___fldiv@grs+1,w,c
  8090  001BD8  6E31               	movwf	(??___fldiv+1)& (0+255),c
  8091  001BDA  0EFF               	movlw	255
  8092  001BDC  143D               	andwf	___fldiv@grs+2,w,c
  8093  001BDE  6E32               	movwf	(??___fldiv+2)& (0+255),c
  8094  001BE0  0E7F               	movlw	127
  8095  001BE2  143E               	andwf	___fldiv@grs+3,w,c
  8096  001BE4  6E33               	movwf	(??___fldiv+3)& (0+255),c
  8097  001BE6  5030               	movf	??___fldiv,w,c
  8098  001BE8  1031               	iorwf	??___fldiv+1,w,c
  8099  001BEA  1032               	iorwf	??___fldiv+2,w,c
  8100  001BEC  1033               	iorwf	??___fldiv+3,w,c
  8101  001BEE  B4D8               	btfsc	status,2,c
  8102  001BF0  D004               	goto	l958
  8103  001BF2                     u3620:
  8104  001BF2  FFFF               	dw	65535	; assembler added errata NOP
  8105  001BF4  0E01               	movlw	1
  8106  001BF6  6E40               	movwf	___fldiv@aexp,c
  8107  001BF8  D003               	goto	l957
  8108  001BFA                     l958:
  8109  001BFA  FFFF               	dw	65535	; assembler added errata NOP
  8110  001BFC  B028               	btfsc	___fldiv@b,0,c
  8111  001BFE  D7F9               	goto	u3620
  8112  001C00                     l957:
  8113  001C00  FFFF               	dw	65535	; assembler added errata NOP
  8114  001C02  5040               	movf	___fldiv@aexp,w,c
  8115  001C04  B4D8               	btfsc	status,2,c
  8116  001C06  D01F               	goto	l3468
  8117  001C08  0E01               	movlw	1
  8118  001C0A  2628               	addwf	___fldiv@b,f,c
  8119  001C0C  0E00               	movlw	0
  8120  001C0E  2229               	addwfc	___fldiv@b+1,f,c
  8121  001C10  222A               	addwfc	___fldiv@b+2,f,c
  8122  001C12  222B               	addwfc	___fldiv@b+3,f,c
  8123  001C14  A02B               	btfss	___fldiv@b+3,0,c
  8124  001C16  D017               	goto	l3468
  8125  001C18  C028  F030         	movff	___fldiv@b,??___fldiv
  8126  001C1C  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  8127  001C20  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  8128  001C24  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  8129  001C28  3433               	rlcf	??___fldiv+3,w,c
  8130  001C2A  3233               	rrcf	??___fldiv+3,f,c
  8131  001C2C  3232               	rrcf	??___fldiv+2,f,c
  8132  001C2E  3231               	rrcf	??___fldiv+1,f,c
  8133  001C30  3230               	rrcf	??___fldiv,f,c
  8134  001C32  C030  F028         	movff	??___fldiv,___fldiv@b
  8135  001C36  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  8136  001C3A  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  8137  001C3E  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  8138  001C42  4A39               	infsnz	___fldiv@new_exp,f,c
  8139  001C44  2A3A               	incf	___fldiv@new_exp+1,f,c
  8140  001C46                     l3468:
  8141  001C46  FFFF               	dw	65535	; assembler added errata NOP
  8142  001C48  BE3A               	btfsc	___fldiv@new_exp+1,7,c
  8143  001C4A  D010               	goto	l3472
  8144  001C4C  503A               	movf	___fldiv@new_exp+1,w,c
  8145  001C4E  E103               	bnz	u3660
  8146  001C50  2839               	incf	___fldiv@new_exp,w,c
  8147  001C52  A0D8               	btfss	status,0,c
  8148  001C54  D00B               	goto	l3472
  8149  001C56                     u3660:
  8150  001C56  0E00               	movlw	0
  8151  001C58  6E3A               	movwf	___fldiv@new_exp+1,c
  8152  001C5A  6839               	setf	___fldiv@new_exp,c
  8153  001C5C  0E00               	movlw	0
  8154  001C5E  6E28               	movwf	___fldiv@b,c
  8155  001C60  0E00               	movlw	0
  8156  001C62  6E29               	movwf	___fldiv@b+1,c
  8157  001C64  0E00               	movlw	0
  8158  001C66  6E2A               	movwf	___fldiv@b+2,c
  8159  001C68  0E00               	movlw	0
  8160  001C6A  6E2B               	movwf	___fldiv@b+3,c
  8161  001C6C                     l3472:
  8162  001C6C  FFFF               	dw	65535	; assembler added errata NOP
  8163  001C6E  BE3A               	btfsc	___fldiv@new_exp+1,7,c
  8164  001C70  D005               	goto	u3670
  8165  001C72  503A               	movf	___fldiv@new_exp+1,w,c
  8166  001C74  E112               	bnz	l3476
  8167  001C76  0439               	decf	___fldiv@new_exp,w,c
  8168  001C78  B0D8               	btfsc	status,0,c
  8169  001C7A  D00F               	goto	l3476
  8170  001C7C                     u3670:
  8171  001C7C  FFFF               	dw	65535	; assembler added errata NOP
  8172  001C7E  0E00               	movlw	0
  8173  001C80  6E3A               	movwf	___fldiv@new_exp+1,c
  8174  001C82  0E00               	movlw	0
  8175  001C84  6E39               	movwf	___fldiv@new_exp,c
  8176  001C86  0E00               	movlw	0
  8177  001C88  6E28               	movwf	___fldiv@b,c
  8178  001C8A  0E00               	movlw	0
  8179  001C8C  6E29               	movwf	___fldiv@b+1,c
  8180  001C8E  0E00               	movlw	0
  8181  001C90  6E2A               	movwf	___fldiv@b+2,c
  8182  001C92  0E00               	movlw	0
  8183  001C94  6E2B               	movwf	___fldiv@b+3,c
  8184  001C96  0E00               	movlw	0
  8185  001C98  6E38               	movwf	___fldiv@sign,c
  8186  001C9A                     l3476:
  8187  001C9A  FFFF               	dw	65535	; assembler added errata NOP
  8188  001C9C  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  8189  001CA0  A03F               	btfss	___fldiv@bexp,0,c
  8190  001CA2  D002               	goto	l3482
  8191  001CA4  8E2A               	bsf	___fldiv@b+2,7,c
  8192  001CA6  D002               	goto	l3484
  8193  001CA8                     l3482:
  8194  001CA8  FFFF               	dw	65535	; assembler added errata NOP
  8195  001CAA  9E2A               	bcf	___fldiv@b+2,7,c
  8196  001CAC                     l3484:
  8197  001CAC  FFFF               	dw	65535	; assembler added errata NOP
  8198  001CAE  90D8               	bcf	status,0,c
  8199  001CB0  303F               	rrcf	___fldiv@bexp,w,c
  8200  001CB2  6E2B               	movwf	___fldiv@b+3,c
  8201  001CB4  D6FC               	goto	l3398
  8202  001CB6                     l944:
  8203  001CB6  FFFF               	dw	65535	; assembler added errata NOP
  8204  001CB8  0012               	return		;funcret
  8205  001CBA  FFFF               	dw	65535	; errata NOP
  8206  001CBC                     __end_of___fldiv:
  8207                           	opt callstack 0
  8208                           
  8209 ;; *************** function ___fladd *****************
  8210 ;; Defined at:
  8211 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  8212 ;; Parameters:    Size  Location     Type
  8213 ;;  b               4   52[COMRAM] unsigned char 
  8214 ;;  a               4   56[COMRAM] unsigned char 
  8215 ;; Auto vars:     Size  Location     Type
  8216 ;;  grs             1   67[COMRAM] unsigned char 
  8217 ;;  bexp            1   66[COMRAM] unsigned char 
  8218 ;;  aexp            1   65[COMRAM] unsigned char 
  8219 ;;  signs           1   64[COMRAM] unsigned char 
  8220 ;; Return value:  Size  Location     Type
  8221 ;;                  4   52[COMRAM] unsigned char 
  8222 ;; Registers used:
  8223 ;;		wreg, status,2, status,0
  8224 ;; Tracked objects:
  8225 ;;		On entry : 0/0
  8226 ;;		On exit  : 0/0
  8227 ;;		Unchanged: 0/0
  8228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8229 ;;      Params:         8       0       0       0       0       0       0
  8230 ;;      Locals:         4       0       0       0       0       0       0
  8231 ;;      Temps:          4       0       0       0       0       0       0
  8232 ;;      Totals:        16       0       0       0       0       0       0
  8233 ;;Total ram usage:       16 bytes
  8234 ;; Hardware stack levels used:    1
  8235 ;; Hardware stack levels required when called:    1
  8236 ;; This function calls:
  8237 ;;		Nothing
  8238 ;; This function is called by:
  8239 ;;		_get_temp
  8240 ;;		_sprintf
  8241 ;;		___flsub
  8242 ;; This function uses a non-reentrant model
  8243 ;;
  8244                           
  8245                           	psect	text36
  8246  0016B8                     __ptext36:
  8247                           	opt callstack 0
  8248  0016B8                     ___fladd:
  8249                           	opt callstack 0
  8250  0016B8  FFFF               	dw	65535	; assembler added errata NOP
  8251                           
  8252                           ;incstack = 0
  8253  0016BA  5038               	movf	___fladd@b+3,w,c
  8254  0016BC  0B80               	andlw	128
  8255  0016BE  6E41               	movwf	___fladd@signs,c
  8256  0016C0  5038               	movf	___fladd@b+3,w,c
  8257  0016C2  2438               	addwf	___fladd@b+3,w,c
  8258  0016C4  6E43               	movwf	___fladd@bexp,c
  8259  0016C6  BE37               	btfsc	___fladd@b+2,7,c
  8260  0016C8  8043               	bsf	___fladd@bexp,0,c
  8261  0016CA  5043               	movf	___fladd@bexp,w,c
  8262  0016CC  B4D8               	btfsc	status,2,c
  8263  0016CE  D00E               	goto	l2678
  8264  0016D0  2843               	incf	___fladd@bexp,w,c
  8265  0016D2  A4D8               	btfss	status,2,c
  8266  0016D4  D008               	goto	l2674
  8267  0016D6  0E00               	movlw	0
  8268  0016D8  6E35               	movwf	___fladd@b,c
  8269  0016DA  0E00               	movlw	0
  8270  0016DC  6E36               	movwf	___fladd@b+1,c
  8271  0016DE  0E00               	movlw	0
  8272  0016E0  6E37               	movwf	___fladd@b+2,c
  8273  0016E2  0E00               	movlw	0
  8274  0016E4  6E38               	movwf	___fladd@b+3,c
  8275  0016E6                     l2674:
  8276  0016E6  FFFF               	dw	65535	; assembler added errata NOP
  8277  0016E8  8E37               	bsf	___fladd@b+2,7,c
  8278  0016EA  D007               	goto	L14
  8279  0016EC                     l2678:
  8280  0016EC  FFFF               	dw	65535	; assembler added errata NOP
  8281  0016EE  0E00               	movlw	0
  8282  0016F0  6E35               	movwf	___fladd@b,c
  8283  0016F2  0E00               	movlw	0
  8284  0016F4  6E36               	movwf	___fladd@b+1,c
  8285  0016F6  0E00               	movlw	0
  8286  0016F8  6E37               	movwf	___fladd@b+2,c
  8287  0016FA                     L14:
  8288  0016FA  FFFF               	dw	65535	; assembler added errata NOP
  8289  0016FC  0E00               	movlw	0
  8290  0016FE  6E38               	movwf	___fladd@b+3,c
  8291  001700  503C               	movf	___fladd@a+3,w,c
  8292  001702  0B80               	andlw	128
  8293  001704  6E42               	movwf	___fladd@aexp,c
  8294  001706  5041               	movf	___fladd@signs,w,c
  8295  001708  1842               	xorwf	___fladd@aexp,w,c
  8296  00170A  A4D8               	btfss	status,2,c
  8297  00170C  8C41               	bsf	___fladd@signs,6,c
  8298  00170E  503C               	movf	___fladd@a+3,w,c
  8299  001710  243C               	addwf	___fladd@a+3,w,c
  8300  001712  6E42               	movwf	___fladd@aexp,c
  8301  001714  BE3B               	btfsc	___fladd@a+2,7,c
  8302  001716  8042               	bsf	___fladd@aexp,0,c
  8303  001718  5042               	movf	___fladd@aexp,w,c
  8304  00171A  B4D8               	btfsc	status,2,c
  8305  00171C  D00E               	goto	l2702
  8306  00171E  2842               	incf	___fladd@aexp,w,c
  8307  001720  A4D8               	btfss	status,2,c
  8308  001722  D008               	goto	l2698
  8309  001724  0E00               	movlw	0
  8310  001726  6E39               	movwf	___fladd@a,c
  8311  001728  0E00               	movlw	0
  8312  00172A  6E3A               	movwf	___fladd@a+1,c
  8313  00172C  0E00               	movlw	0
  8314  00172E  6E3B               	movwf	___fladd@a+2,c
  8315  001730  0E00               	movlw	0
  8316  001732  6E3C               	movwf	___fladd@a+3,c
  8317  001734                     l2698:
  8318  001734  FFFF               	dw	65535	; assembler added errata NOP
  8319  001736  8E3B               	bsf	___fladd@a+2,7,c
  8320  001738  D007               	goto	L15
  8321  00173A                     l2702:
  8322  00173A  FFFF               	dw	65535	; assembler added errata NOP
  8323  00173C  0E00               	movlw	0
  8324  00173E  6E39               	movwf	___fladd@a,c
  8325  001740  0E00               	movlw	0
  8326  001742  6E3A               	movwf	___fladd@a+1,c
  8327  001744  0E00               	movlw	0
  8328  001746  6E3B               	movwf	___fladd@a+2,c
  8329  001748                     L15:
  8330  001748  FFFF               	dw	65535	; assembler added errata NOP
  8331  00174A  0E00               	movlw	0
  8332  00174C  6E3C               	movwf	___fladd@a+3,c
  8333  00174E  5043               	movf	___fladd@bexp,w,c
  8334  001750  5C42               	subwf	___fladd@aexp,w,c
  8335  001752  B0D8               	btfsc	status,0,c
  8336  001754  D023               	goto	l2740
  8337  001756  AC41               	btfss	___fladd@signs,6,c
  8338  001758  D002               	goto	l2710
  8339  00175A  0E80               	movlw	128
  8340  00175C  1A41               	xorwf	___fladd@signs,f,c
  8341  00175E                     l2710:
  8342  00175E  FFFF               	dw	65535	; assembler added errata NOP
  8343  001760  C043  F044         	movff	___fladd@bexp,___fladd@grs
  8344  001764  C042  F043         	movff	___fladd@aexp,___fladd@bexp
  8345  001768  C044  F042         	movff	___fladd@grs,___fladd@aexp
  8346  00176C  C035  F044         	movff	___fladd@b,___fladd@grs
  8347  001770  C039  F035         	movff	___fladd@a,___fladd@b
  8348  001774  C044  F039         	movff	___fladd@grs,___fladd@a
  8349  001778  C036  F044         	movff	___fladd@b+1,___fladd@grs
  8350  00177C  C03A  F036         	movff	___fladd@a+1,___fladd@b+1
  8351  001780  C044  F03A         	movff	___fladd@grs,___fladd@a+1
  8352  001784  C037  F044         	movff	___fladd@b+2,___fladd@grs
  8353  001788  C03B  F037         	movff	___fladd@a+2,___fladd@b+2
  8354  00178C  C044  F03B         	movff	___fladd@grs,___fladd@a+2
  8355  001790  C038  F044         	movff	___fladd@b+3,___fladd@grs
  8356  001794  C03C  F038         	movff	___fladd@a+3,___fladd@b+3
  8357  001798  C044  F03C         	movff	___fladd@grs,___fladd@a+3
  8358  00179C                     l2740:
  8359  00179C  FFFF               	dw	65535	; assembler added errata NOP
  8360  00179E  0E00               	movlw	0
  8361  0017A0  6E44               	movwf	___fladd@grs,c
  8362  0017A2  5043               	movf	___fladd@bexp,w,c
  8363  0017A4  C042  F03D         	movff	___fladd@aexp,??___fladd
  8364  0017A8  6A3E               	clrf	(??___fladd+1)& (0+255),c
  8365  0017AA  5E3D               	subwf	??___fladd,f,c
  8366  0017AC  0E00               	movlw	0
  8367  0017AE  5A3E               	subwfb	??___fladd+1,f,c
  8368  0017B0  BE3E               	btfsc	??___fladd+1,7,c
  8369  0017B2  D031               	goto	l891
  8370  0017B4  503E               	movf	??___fladd+1,w,c
  8371  0017B6  E104               	bnz	u2490
  8372  0017B8  0E1A               	movlw	26
  8373  0017BA  5C3D               	subwf	??___fladd,w,c
  8374  0017BC  A0D8               	btfss	status,0,c
  8375  0017BE  D02B               	goto	l891
  8376  0017C0                     u2490:
  8377  0017C0  5035               	movf	___fladd@b,w,c
  8378  0017C2  1036               	iorwf	___fladd@b+1,w,c
  8379  0017C4  1037               	iorwf	___fladd@b+2,w,c
  8380  0017C6  1038               	iorwf	___fladd@b+3,w,c
  8381  0017C8  B4D8               	btfsc	status,2,c
  8382  0017CA  D002               	goto	u2500
  8383  0017CC  0E01               	movlw	1
  8384  0017CE  D002               	goto	u2510
  8385  0017D0                     u2500:
  8386  0017D0  FFFF               	dw	65535	; assembler added errata NOP
  8387  0017D2  0E00               	movlw	0
  8388  0017D4                     u2510:
  8389  0017D4  FFFF               	dw	65535	; assembler added errata NOP
  8390  0017D6  6E44               	movwf	___fladd@grs,c
  8391  0017D8  0E00               	movlw	0
  8392  0017DA  6E35               	movwf	___fladd@b,c
  8393  0017DC  0E00               	movlw	0
  8394  0017DE  6E36               	movwf	___fladd@b+1,c
  8395  0017E0  0E00               	movlw	0
  8396  0017E2  6E37               	movwf	___fladd@b+2,c
  8397  0017E4  0E00               	movlw	0
  8398  0017E6  6E38               	movwf	___fladd@b+3,c
  8399  0017E8  C042  F043         	movff	___fladd@aexp,___fladd@bexp
  8400  0017EC  D019               	goto	u2540
  8401  0017EE                     l892:
  8402  0017EE  FFFF               	dw	65535	; assembler added errata NOP
  8403  0017F0  A044               	btfss	___fladd@grs,0,c
  8404  0017F2  D005               	goto	l2752
  8405  0017F4  90D8               	bcf	status,0,c
  8406  0017F6  3044               	rrcf	___fladd@grs,w,c
  8407  0017F8  0901               	iorlw	1
  8408  0017FA  6E44               	movwf	___fladd@grs,c
  8409  0017FC  D003               	goto	l2754
  8410  0017FE                     l2752:
  8411  0017FE  FFFF               	dw	65535	; assembler added errata NOP
  8412  001800  90D8               	bcf	status,0,c
  8413  001802  3244               	rrcf	___fladd@grs,f,c
  8414  001804                     l2754:
  8415  001804  FFFF               	dw	65535	; assembler added errata NOP
  8416  001806  B035               	btfsc	___fladd@b,0,c
  8417  001808  8E44               	bsf	___fladd@grs,7,c
  8418  00180A  3438               	rlcf	___fladd@b+3,w,c
  8419  00180C  3238               	rrcf	___fladd@b+3,f,c
  8420  00180E  3237               	rrcf	___fladd@b+2,f,c
  8421  001810  3236               	rrcf	___fladd@b+1,f,c
  8422  001812  3235               	rrcf	___fladd@b,f,c
  8423  001814  2A43               	incf	___fladd@bexp,f,c
  8424  001816                     l891:
  8425  001816  FFFF               	dw	65535	; assembler added errata NOP
  8426  001818  5042               	movf	___fladd@aexp,w,c
  8427  00181A  5C43               	subwf	___fladd@bexp,w,c
  8428  00181C  A0D8               	btfss	status,0,c
  8429  00181E  D7E7               	goto	l892
  8430  001820                     u2540:
  8431  001820  FFFF               	dw	65535	; assembler added errata NOP
  8432  001822  BC41               	btfsc	___fladd@signs,6,c
  8433  001824  D021               	goto	l2786
  8434  001826  5043               	movf	___fladd@bexp,w,c
  8435  001828  B4D8               	btfsc	status,2,c
  8436  00182A  D065               	goto	u2630
  8437  00182C  5039               	movf	___fladd@a,w,c
  8438  00182E  2635               	addwf	___fladd@b,f,c
  8439  001830  503A               	movf	___fladd@a+1,w,c
  8440  001832  2236               	addwfc	___fladd@b+1,f,c
  8441  001834  503B               	movf	___fladd@a+2,w,c
  8442  001836  2237               	addwfc	___fladd@b+2,f,c
  8443  001838  503C               	movf	___fladd@a+3,w,c
  8444  00183A  2238               	addwfc	___fladd@b+3,f,c
  8445  00183C  A038               	btfss	___fladd@b+3,0,c
  8446  00183E  D07B               	goto	u2670
  8447  001840  A044               	btfss	___fladd@grs,0,c
  8448  001842  D005               	goto	l2776
  8449  001844  90D8               	bcf	status,0,c
  8450  001846  3044               	rrcf	___fladd@grs,w,c
  8451  001848  0901               	iorlw	1
  8452  00184A  6E44               	movwf	___fladd@grs,c
  8453  00184C  D003               	goto	l2778
  8454  00184E                     l2776:
  8455  00184E  FFFF               	dw	65535	; assembler added errata NOP
  8456  001850  90D8               	bcf	status,0,c
  8457  001852  3244               	rrcf	___fladd@grs,f,c
  8458  001854                     l2778:
  8459  001854  FFFF               	dw	65535	; assembler added errata NOP
  8460  001856  B035               	btfsc	___fladd@b,0,c
  8461  001858  8E44               	bsf	___fladd@grs,7,c
  8462  00185A  3438               	rlcf	___fladd@b+3,w,c
  8463  00185C  3238               	rrcf	___fladd@b+3,f,c
  8464  00185E  3237               	rrcf	___fladd@b+2,f,c
  8465  001860  3236               	rrcf	___fladd@b+1,f,c
  8466  001862  3235               	rrcf	___fladd@b,f,c
  8467  001864  2A43               	incf	___fladd@bexp,f,c
  8468  001866  D067               	goto	u2670
  8469  001868                     l2786:
  8470  001868  FFFF               	dw	65535	; assembler added errata NOP
  8471  00186A  5039               	movf	___fladd@a,w,c
  8472  00186C  5C35               	subwf	___fladd@b,w,c
  8473  00186E  503A               	movf	___fladd@a+1,w,c
  8474  001870  5836               	subwfb	___fladd@b+1,w,c
  8475  001872  503B               	movf	___fladd@a+2,w,c
  8476  001874  5837               	subwfb	___fladd@b+2,w,c
  8477  001876  5038               	movf	___fladd@b+3,w,c
  8478  001878  0A80               	xorlw	128
  8479  00187A  6E3D               	movwf	??___fladd& (0+255),c
  8480  00187C  503C               	movf	___fladd@a+3,w,c
  8481  00187E  0A80               	xorlw	128
  8482  001880  583D               	subwfb	??___fladd& (0+255),w,c
  8483  001882  B0D8               	btfsc	status,0,c
  8484  001884  D025               	goto	l2796
  8485  001886  5035               	movf	___fladd@b,w,c
  8486  001888  5C39               	subwf	___fladd@a,w,c
  8487  00188A  6E3D               	movwf	??___fladd& (0+255),c
  8488  00188C  5036               	movf	___fladd@b+1,w,c
  8489  00188E  583A               	subwfb	___fladd@a+1,w,c
  8490  001890  6E3E               	movwf	(??___fladd+1)& (0+255),c
  8491  001892  5037               	movf	___fladd@b+2,w,c
  8492  001894  583B               	subwfb	___fladd@a+2,w,c
  8493  001896  6E3F               	movwf	(??___fladd+2)& (0+255),c
  8494  001898  5038               	movf	___fladd@b+3,w,c
  8495  00189A  583C               	subwfb	___fladd@a+3,w,c
  8496  00189C  6E40               	movwf	(??___fladd+3)& (0+255),c
  8497  00189E  0EFF               	movlw	255
  8498  0018A0  243D               	addwf	??___fladd,w,c
  8499  0018A2  6E35               	movwf	___fladd@b,c
  8500  0018A4  0EFF               	movlw	255
  8501  0018A6  203E               	addwfc	??___fladd+1,w,c
  8502  0018A8  6E36               	movwf	___fladd@b+1,c
  8503  0018AA  0EFF               	movlw	255
  8504  0018AC  203F               	addwfc	??___fladd+2,w,c
  8505  0018AE  6E37               	movwf	___fladd@b+2,c
  8506  0018B0  0EFF               	movlw	255
  8507  0018B2  2040               	addwfc	??___fladd+3,w,c
  8508  0018B4  6E38               	movwf	___fladd@b+3,c
  8509  0018B6  0E80               	movlw	128
  8510  0018B8  1A41               	xorwf	___fladd@signs,f,c
  8511  0018BA  6C44               	negf	___fladd@grs,c
  8512  0018BC  5044               	movf	___fladd@grs,w,c
  8513  0018BE  A4D8               	btfss	status,2,c
  8514  0018C0  D010               	goto	l907
  8515  0018C2  0E01               	movlw	1
  8516  0018C4  2635               	addwf	___fladd@b,f,c
  8517  0018C6  0E00               	movlw	0
  8518  0018C8  2236               	addwfc	___fladd@b+1,f,c
  8519  0018CA  2237               	addwfc	___fladd@b+2,f,c
  8520  0018CC  2238               	addwfc	___fladd@b+3,f,c
  8521  0018CE  D009               	goto	l907
  8522  0018D0                     l2796:
  8523  0018D0  FFFF               	dw	65535	; assembler added errata NOP
  8524  0018D2  5039               	movf	___fladd@a,w,c
  8525  0018D4  5E35               	subwf	___fladd@b,f,c
  8526  0018D6  503A               	movf	___fladd@a+1,w,c
  8527  0018D8  5A36               	subwfb	___fladd@b+1,f,c
  8528  0018DA  503B               	movf	___fladd@a+2,w,c
  8529  0018DC  5A37               	subwfb	___fladd@b+2,f,c
  8530  0018DE  503C               	movf	___fladd@a+3,w,c
  8531  0018E0  5A38               	subwfb	___fladd@b+3,f,c
  8532  0018E2                     l907:
  8533  0018E2  FFFF               	dw	65535	; assembler added errata NOP
  8534  0018E4  5035               	movf	___fladd@b,w,c
  8535  0018E6  1036               	iorwf	___fladd@b+1,w,c
  8536  0018E8  1037               	iorwf	___fladd@b+2,w,c
  8537  0018EA  1038               	iorwf	___fladd@b+3,w,c
  8538  0018EC  A4D8               	btfss	status,2,c
  8539  0018EE  D020               	goto	l2820
  8540  0018F0  5044               	movf	___fladd@grs,w,c
  8541  0018F2  A4D8               	btfss	status,2,c
  8542  0018F4  D01D               	goto	l2820
  8543  0018F6                     u2630:
  8544  0018F6  FFFF               	dw	65535	; assembler added errata NOP
  8545  0018F8  0E00               	movlw	0
  8546  0018FA  6E35               	movwf	?___fladd,c
  8547  0018FC  0E00               	movlw	0
  8548  0018FE  6E36               	movwf	?___fladd+1,c
  8549  001900  0E00               	movlw	0
  8550  001902  6E37               	movwf	?___fladd+2,c
  8551  001904  0E00               	movlw	0
  8552  001906  6E38               	movwf	?___fladd+3,c
  8553  001908  D076               	goto	l899
  8554  00190A                     l2804:
  8555  00190A  FFFF               	dw	65535	; assembler added errata NOP
  8556  00190C  90D8               	bcf	status,0,c
  8557  00190E  3635               	rlcf	___fladd@b,f,c
  8558  001910  3636               	rlcf	___fladd@b+1,f,c
  8559  001912  3637               	rlcf	___fladd@b+2,f,c
  8560  001914  3638               	rlcf	___fladd@b+3,f,c
  8561  001916  BE44               	btfsc	___fladd@grs,7,c
  8562  001918  8035               	bsf	___fladd@b,0,c
  8563  00191A  A044               	btfss	___fladd@grs,0,c
  8564  00191C  D002               	goto	l2814
  8565  00191E  80D8               	bsf	status,0,c
  8566  001920  D002               	goto	L16
  8567  001922                     l2814:
  8568  001922  FFFF               	dw	65535	; assembler added errata NOP
  8569  001924  90D8               	bcf	status,0,c
  8570  001926                     L16:
  8571  001926  FFFF               	dw	65535	; assembler added errata NOP
  8572  001928  3644               	rlcf	___fladd@grs,f,c
  8573  00192A  5043               	movf	___fladd@bexp,w,c
  8574  00192C  A4D8               	btfss	status,2,c
  8575  00192E  0643               	decf	___fladd@bexp,f,c
  8576  001930                     l2820:
  8577  001930  FFFF               	dw	65535	; assembler added errata NOP
  8578  001932  AE37               	btfss	___fladd@b+2,7,c
  8579  001934  D7EA               	goto	l2804
  8580  001936                     u2670:
  8581  001936  FFFF               	dw	65535	; assembler added errata NOP
  8582  001938  0E00               	movlw	0
  8583  00193A  6E42               	movwf	___fladd@aexp,c
  8584  00193C  AE44               	btfss	___fladd@grs,7,c
  8585  00193E  D00D               	goto	l916
  8586  001940  C044  F03D         	movff	___fladd@grs,??___fladd
  8587  001944  0E7F               	movlw	127
  8588  001946  163D               	andwf	??___fladd,f,c
  8589  001948  B4D8               	btfsc	status,2,c
  8590  00194A  D004               	goto	l917
  8591  00194C                     u2690:
  8592  00194C  FFFF               	dw	65535	; assembler added errata NOP
  8593  00194E  0E01               	movlw	1
  8594  001950  6E42               	movwf	___fladd@aexp,c
  8595  001952  D003               	goto	l916
  8596  001954                     l917:
  8597  001954  FFFF               	dw	65535	; assembler added errata NOP
  8598  001956  B035               	btfsc	___fladd@b,0,c
  8599  001958  D7F9               	goto	u2690
  8600  00195A                     l916:
  8601  00195A  FFFF               	dw	65535	; assembler added errata NOP
  8602  00195C  5042               	movf	___fladd@aexp,w,c
  8603  00195E  B4D8               	btfsc	status,2,c
  8604  001960  D020               	goto	l2840
  8605  001962  0E01               	movlw	1
  8606  001964  2635               	addwf	___fladd@b,f,c
  8607  001966  0E00               	movlw	0
  8608  001968  2236               	addwfc	___fladd@b+1,f,c
  8609  00196A  2237               	addwfc	___fladd@b+2,f,c
  8610  00196C  2238               	addwfc	___fladd@b+3,f,c
  8611  00196E  A038               	btfss	___fladd@b+3,0,c
  8612  001970  D018               	goto	l2840
  8613  001972  C035  F03D         	movff	___fladd@b,??___fladd
  8614  001976  C036  F03E         	movff	___fladd@b+1,??___fladd+1
  8615  00197A  C037  F03F         	movff	___fladd@b+2,??___fladd+2
  8616  00197E  C038  F040         	movff	___fladd@b+3,??___fladd+3
  8617  001982  3440               	rlcf	??___fladd+3,w,c
  8618  001984  3240               	rrcf	??___fladd+3,f,c
  8619  001986  323F               	rrcf	??___fladd+2,f,c
  8620  001988  323E               	rrcf	??___fladd+1,f,c
  8621  00198A  323D               	rrcf	??___fladd,f,c
  8622  00198C  C03D  F035         	movff	??___fladd,___fladd@b
  8623  001990  C03E  F036         	movff	??___fladd+1,___fladd@b+1
  8624  001994  C03F  F037         	movff	??___fladd+2,___fladd@b+2
  8625  001998  C040  F038         	movff	??___fladd+3,___fladd@b+3
  8626  00199C  2843               	incf	___fladd@bexp,w,c
  8627  00199E  A4D8               	btfss	status,2,c
  8628  0019A0  2A43               	incf	___fladd@bexp,f,c
  8629  0019A2                     l2840:
  8630  0019A2  FFFF               	dw	65535	; assembler added errata NOP
  8631  0019A4  2843               	incf	___fladd@bexp,w,c
  8632  0019A6  B4D8               	btfsc	status,2,c
  8633  0019A8  D003               	goto	u2750
  8634  0019AA  5043               	movf	___fladd@bexp,w,c
  8635  0019AC  A4D8               	btfss	status,2,c
  8636  0019AE  D00E               	goto	l2848
  8637  0019B0                     u2750:
  8638  0019B0  FFFF               	dw	65535	; assembler added errata NOP
  8639  0019B2  0E00               	movlw	0
  8640  0019B4  6E35               	movwf	___fladd@b,c
  8641  0019B6  0E00               	movlw	0
  8642  0019B8  6E36               	movwf	___fladd@b+1,c
  8643  0019BA  0E00               	movlw	0
  8644  0019BC  6E37               	movwf	___fladd@b+2,c
  8645  0019BE  0E00               	movlw	0
  8646  0019C0  6E38               	movwf	___fladd@b+3,c
  8647  0019C2  5043               	movf	___fladd@bexp,w,c
  8648  0019C4  A4D8               	btfss	status,2,c
  8649  0019C6  D002               	goto	l2848
  8650  0019C8  0E00               	movlw	0
  8651  0019CA  6E41               	movwf	___fladd@signs,c
  8652  0019CC                     l2848:
  8653  0019CC  FFFF               	dw	65535	; assembler added errata NOP
  8654  0019CE  A043               	btfss	___fladd@bexp,0,c
  8655  0019D0  D002               	goto	l2852
  8656  0019D2  8E37               	bsf	___fladd@b+2,7,c
  8657  0019D4  D002               	goto	l2854
  8658  0019D6                     l2852:
  8659  0019D6  FFFF               	dw	65535	; assembler added errata NOP
  8660  0019D8  9E37               	bcf	___fladd@b+2,7,c
  8661  0019DA                     l2854:
  8662  0019DA  FFFF               	dw	65535	; assembler added errata NOP
  8663  0019DC  90D8               	bcf	status,0,c
  8664  0019DE  3043               	rrcf	___fladd@bexp,w,c
  8665  0019E0  6E38               	movwf	___fladd@b+3,c
  8666  0019E2  BE41               	btfsc	___fladd@signs,7,c
  8667  0019E4  8E38               	bsf	___fladd@b+3,7,c
  8668  0019E6  C035  F035         	movff	___fladd@b,?___fladd
  8669  0019EA  C036  F036         	movff	___fladd@b+1,?___fladd+1
  8670  0019EE  C037  F037         	movff	___fladd@b+2,?___fladd+2
  8671  0019F2  C038  F038         	movff	___fladd@b+3,?___fladd+3
  8672  0019F6                     l899:
  8673  0019F6  FFFF               	dw	65535	; assembler added errata NOP
  8674  0019F8  0012               	return		;funcret
  8675  0019FA  FFFF               	dw	65535	; errata NOP
  8676  0019FC                     __end_of___fladd:
  8677                           	opt callstack 0
  8678                           
  8679 ;; *************** function _capture *****************
  8680 ;; Defined at:
  8681 ;;		line 275 in file "main.c"
  8682 ;; Parameters:    Size  Location     Type
  8683 ;;		None
  8684 ;; Auto vars:     Size  Location     Type
  8685 ;;		None
  8686 ;; Return value:  Size  Location     Type
  8687 ;;                  1    wreg      void 
  8688 ;; Registers used:
  8689 ;;		None
  8690 ;; Tracked objects:
  8691 ;;		On entry : 0/0
  8692 ;;		On exit  : 0/0
  8693 ;;		Unchanged: 0/0
  8694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8695 ;;      Params:         0       0       0       0       0       0       0
  8696 ;;      Locals:         0       0       0       0       0       0       0
  8697 ;;      Temps:          0       0       0       0       0       0       0
  8698 ;;      Totals:         0       0       0       0       0       0       0
  8699 ;;Total ram usage:        0 bytes
  8700 ;; Hardware stack levels used:    1
  8701 ;; This function calls:
  8702 ;;		Nothing
  8703 ;; This function is called by:
  8704 ;;		Interrupt level 2
  8705 ;; This function uses a non-reentrant model
  8706 ;;
  8707                           
  8708                           	psect	intcode
  8709  000008                     __pintcode:
  8710                           	opt callstack 0
  8711  000008                     _capture:
  8712                           	opt callstack 0
  8713  000008  FFFF               	dw	65535	; assembler added errata NOP
  8714                           
  8715                           ;incstack = 0
  8716  00000A  8276               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8717                           
  8718                           ;main.c: 279: if (PIR1bits.RCIF) {
  8719  00000C  AA9E               	btfss	3998,5,c	;volatile
  8720  00000E  D003               	goto	i2l200
  8721                           
  8722                           ;main.c: 280: data_received = RCREG;
  8723  000010  CFAE F0F0          	movff	4014,_data_received	;volatile
  8724                           
  8725                           ;main.c: 281: PIR1bits.RCIF = 0;
  8726  000014  9A9E               	bcf	3998,5,c	;volatile
  8727  000016                     i2l200:
  8728  000016  FFFF               	dw	65535	; assembler added errata NOP
  8729  000018  9276               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8730  00001A  0011               	retfie		f
  8731  00001C  FFFF               	dw	65535	; errata NOP
  8732  00001E                     __end_of_capture:
  8733                           	opt callstack 0
  8734                           
  8735                           	psect	rparam
  8736  0000                     
  8737                           	psect	temp
  8738  000076                     btemp:
  8739                           	opt callstack 0
  8740  000076                     	ds	1
  8741  0000                     int$flags	set	btemp
  8742  0000                     wtemp8	set	btemp+1
  8743  0000                     ttemp5	set	btemp+1
  8744  0000                     ttemp6	set	btemp+4
  8745  0000                     ttemp7	set	btemp+8
  8746                           tosu	equ	0xFFF
  8747                           tosh	equ	0xFFE
  8748                           tosl	equ	0xFFD
  8749                           stkptr	equ	0xFFC
  8750                           pclatu	equ	0xFFB
  8751                           pclath	equ	0xFFA
  8752                           pcl	equ	0xFF9
  8753                           tblptru	equ	0xFF8
  8754                           tblptrh	equ	0xFF7
  8755                           tblptrl	equ	0xFF6
  8756                           tablat	equ	0xFF5
  8757                           prodh	equ	0xFF4
  8758                           prodl	equ	0xFF3
  8759                           indf0	equ	0xFEF
  8760                           postinc0	equ	0xFEE
  8761                           postdec0	equ	0xFED
  8762                           preinc0	equ	0xFEC
  8763                           plusw0	equ	0xFEB
  8764                           fsr0h	equ	0xFEA
  8765                           fsr0l	equ	0xFE9
  8766                           wreg	equ	0xFE8
  8767                           indf1	equ	0xFE7
  8768                           postinc1	equ	0xFE6
  8769                           postdec1	equ	0xFE5
  8770                           preinc1	equ	0xFE4
  8771                           plusw1	equ	0xFE3
  8772                           fsr1h	equ	0xFE2
  8773                           fsr1l	equ	0xFE1
  8774                           bsr	equ	0xFE0
  8775                           indf2	equ	0xFDF
  8776                           postinc2	equ	0xFDE
  8777                           postdec2	equ	0xFDD
  8778                           preinc2	equ	0xFDC
  8779                           plusw2	equ	0xFDB
  8780                           fsr2h	equ	0xFDA
  8781                           fsr2l	equ	0xFD9
  8782                           status	equ	0xFD8


Data Sizes:
    Strings     365
    Constant    144
    Data        1
    BSS         82
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    117     117
    BANK0           128     81     114
    BANK1           256      0      50
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_21(CODE[2]), STR_20(CODE[22]), STR_19(CODE[26]), STR_18(CODE[12]), 
		 -> STR_17(CODE[18]), STR_16(CODE[3]), main@_temp(BANK0[25]), main@_volt(BANK0[25]), 
		 -> STR_12(CODE[17]), STR_11(CODE[16]), STR_9(CODE[17]), STR_8(CODE[17]), 
		 -> message_alert(BANK1[50]), STR_6(CODE[17]), STR_5(CODE[15]), main@message(BANK0[20]), 
		 -> STR_2(CODE[14]), STR_1(CODE[14]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_21(CODE[2]), STR_20(CODE[22]), STR_19(CODE[26]), STR_18(CODE[12]), 
		 -> STR_17(CODE[18]), STR_16(CODE[3]), main@_temp(BANK0[25]), main@_volt(BANK0[25]), 
		 -> STR_12(CODE[17]), STR_11(CODE[16]), STR_9(CODE[17]), STR_8(CODE[17]), 
		 -> message_alert(BANK1[50]), STR_6(CODE[17]), STR_5(CODE[15]), main@message(BANK0[20]), 
		 -> STR_2(CODE[14]), STR_1(CODE[14]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[24]), STR_10(CODE[33]), 
		 -> STR_7(CODE[24]), STR_4(CODE[19]), STR_3(CODE[19]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> main@_temp(BANK0[25]), main@_volt(BANK0[25]), message_alert(BANK1[50]), main@message(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    transmit@response	PTR unsigned char  size(2) Largest target is 50
		 -> STR_21(CODE[2]), STR_20(CODE[22]), STR_19(CODE[26]), STR_18(CODE[12]), 
		 -> STR_17(CODE[18]), STR_16(CODE[3]), main@_temp(BANK0[25]), main@_volt(BANK0[25]), 
		 -> message_alert(BANK1[50]), 

    print_message_onLCD@message	PTR unsigned char  size(2) Largest target is 20
		 -> STR_12(CODE[17]), STR_11(CODE[16]), STR_9(CODE[17]), STR_8(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[15]), main@message(BANK0[20]), STR_2(CODE[14]), 
		 -> STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _transmit->_strlen
    _sprintf->___flsub
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___lwmod
    ___fltol->_scale
    ___flsub->___fladd
    _print_message_onLCD->_strlen
    _init_LCD->_R_I
    _get_voltage->___fldiv
    _get_temp->___fladd
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___fladd->_fround

Critical Paths under _capture in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _capture in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _capture in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _capture in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _capture in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _capture in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _capture in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                83    83      0   53374
                                            115 COMRAM     2     2      0
                                              0 BANK0     81    81      0
                                _R_I
                             ___flge
                           _get_temp
                        _get_voltage
                           _init_LCD
                     _initial_config
                     _light_the_bulb
    _light_the_bulb_and_start_engine
                _print_message_onLCD
         _serial_transmi_init_config
                            _sprintf
                       _start_engine
                           _transmit
                _turn_off_everything
 ---------------------------------------------------------------------------------
 (1) _turn_off_everything                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _transmit                                             5     3      2    1320
                                              4 COMRAM     5     3      2
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _start_engine                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             45    37      8   33127
                                             76 COMRAM    39    31      8
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     5      4    7039
                                             39 COMRAM     9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1208
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1364
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13     9      4    5502
                                             39 COMRAM    13     9      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     615
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              0 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          14     6      8     455
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     615
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     466
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             48 COMRAM    10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3041
                                             68 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1246
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _serial_transmi_init_config                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _print_message_onLCD                                  6     3      3    1788
                                              4 COMRAM     6     3      3
                                _R_D
                                _R_I
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _R_D                                                  1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _light_the_bulb_and_start_engine                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _light_the_bulb                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initial_config                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_LCD                                             1     1      0      22
                                              1 COMRAM     1     1      0
                                _R_I
 ---------------------------------------------------------------------------------
 (2) _R_I                                                  1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _get_voltage                                          4     0      4    6223
                                             64 COMRAM     4     0      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _get_temp                                             8     4      4    9009
                                             68 COMRAM     8     4      4
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    4024
                                             14 COMRAM    25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1551
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2718
                                             52 COMRAM    16     8      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _capture                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _R_I
   ___flge
   _get_temp
     ___fladd
       _fround (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fldiv
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _get_voltage
     ___fldiv
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _init_LCD
     _R_I
   _initial_config
   _light_the_bulb
   _light_the_bulb_and_start_engine
   _print_message_onLCD
     _R_D
     _R_I
     _strlen
   _serial_transmi_init_config
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
   _start_engine
   _transmit
     _strlen
   _turn_off_everything

 _capture (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      32       7       19.5%
BITBANK0            80      0       0       4        0.0%
BANK0               80     51      72       5       89.1%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     75      75       1       92.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     119      15        0.0%
DATA                 0      0     119       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Apr 11 15:10:56 2020

                                                           ___fldiv@aexp 0040  
                                                           ___fldiv@bexp 003F  
                                                           ___fldiv@sign 0038  
                                                           ___awdiv@sign 000C  
                                                           ?_get_voltage 0041  
                                                    ___wmul@multiplicand 0003  
                                                            __CFG_OSC$XT 000000  
                                                                    l205 2918  
                                                                    l118 0B02  
                                                                    l307 0732  
                                                                    l236 1330  
                                                                    l181 238A  
                                                                    l612 26A0  
                                                                    l367 2720  
                                                                    l703 21CC  
                                                                    l705 2142  
                                                                    l618 2460  
                                                                    l706 216C  
                                                                    l619 249E  
                                                                    l646 2572  
                                                                    l594 22D8  
                                                                    l907 18E2  
                                                                    l916 195A  
                                                                    l917 1954  
                                                                    l853 29C8  
                                                                    l782 2818  
                                                                    l863 2A70  
                                                                    l944 1CB6  
                                                                    _LC3 007C5B  
                                                                    l946 1B88  
                                                                    _LC4 007C5C  
                                                                    l891 1816  
                                                                    l892 17EE  
                                                                    l980 16B2  
                                                                    l957 1C00  
                                                                    l958 1BFA  
                                                                    l976 13C2  
                                                                    l993 167A  
                                                                    l985 15EC  
                                                                    l986 15E6  
                                                                    l899 19F6  
                                                                    _R_D 2C30  
                                                                    _R_I 2C4C  
                                                           __CFG_BOR$OFF 000000  
                                                           ___awmod@sign 0006  
                                                                    wreg 000FE8  
                                                       ??_initial_config 0001  
                                                           ___flmul@aexp 0020  
                                                           ___flmul@bexp 0021  
                                                           ___flmul@sign 001B  
                                                           ___flmul@temp 0026  
                                                           ___flmul@prod 0022  
                                                           __CFG_LVP$OFF 000000  
                                                                   ?_R_D 0001  
                                                                   ?_R_I 0001  
                                                           ___fltol@exp1 003A  
                                                           __CFG_WDT$OFF 000000  
                                                                   l1020 20B6  
                                                                   l1024 202A  
                                                                   l1017 1FA0  
                                                                   l3002 258E  
                                                                   l3100 2A3E  
                                                                   l3102 2A48  
                                                                   l3014 25B8  
                                                                   l3030 25F2  
                                                                   l3016 25C2  
                                                                   l3008 25A0  
                                                                   l3034 2602  
                                                                   l3026 25E6  
                                                                   l3050 275A  
                                                                   l4002 2950  
                                                                   l3300 2276  
                                                                   l3108 2A64  
                                                                   l4100 0D82  
                                                                   l4020 0AE8  
                                                                   l3134 2A8A  
                                                                   l3150 1E26  
                                                                   l3206 2C00  
                                                                   l3070 27AC  
                                                                   l3062 2790  
                                                                   l3054 276A  
                                                                   l3046 274C  
                                                                   l3136 2A90  
                                                                   l3312 2294  
                                                                   l3216 20EC  
                                                                   l3080 298E  
                                                                   l3056 2774  
                                                                   l4104 0D94  
                                                                   l4040 0B86  
                                                                   l3322 22B0  
                                                                   l3082 2998  
                                                                   l3066 279C  
                                                                   l3170 1052  
                                                                   l3412 1AE0  
                                                                   l3404 1AC6  
                                                                   l3340 26D8  
                                                                   l3324 22BE  
                                                                   l3316 22A6  
                                                                   l3252 2188  
                                                                   l3092 29BC  
                                                                   l3156 1F04  
                                                                   l3180 1124  
                                                                   l4044 0BC8  
                                                                   l2710 175E  
                                                                   l2702 173A  
                                                                   l3430 1B5C  
                                                                   l3422 1B32  
                                                                   l3510 269C  
                                                                   l3502 2646  
                                                                   l3350 2710  
                                                                   l3262 21A4  
                                                                   l4142 0EB0  
                                                                   l4134 0E74  
                                                                   l4150 0F00  
                                                                   l4118 0DC6  
                                                                   l4062 0C4E  
                                                                   l3600 2808  
                                                                   l3272 21F4  
                                                                   l3264 21B2  
                                                                   l3256 219A  
                                                                   l3176 10F4  
                                                                   l4144 0EBE  
                                                                   l4128 0E56  
                                                                   l3442 1BA0  
                                                                   l3370 1A30  
                                                                   l3610 1FB2  
                                                                   l3506 267C  
                                                                   l3522 2430  
                                                                   l3338 26CA  
                                                                   l3194 12FC  
                                                                   l4138 0E8C  
                                                                   l4146 0EC8  
                                                                   l4082 0CFC  
                                                                   l4058 0C2E  
                                                                   l2804 190A  
                                                                   l2820 1930  
                                                                   l2740 179C  
                                                                   l3436 1B84  
                                                                   l3620 1FE8  
                                                                   l3532 249A  
                                                                   l3540 2BA8  
                                                                   l3292 2244  
                                                                   l3188 1248  
                                                                   l3700 00A0  
                                                                   l2814 1922  
                                                                   l3390 1A76  
                                                                   l3366 1A2A  
                                                                   l3630 2060  
                                                                   l3622 2010  
                                                                   l3526 2448  
                                                                   l3518 23FA  
                                                                   l3550 24C6  
                                                                   l4078 0CDC  
                                                                   l2840 19A2  
                                                                   l2752 17FE  
                                                                   l3472 1C6C  
                                                                   l3448 1BC0  
                                                                   l2904 13E4  
                                                                   l3616 1FD2  
                                                                   l3800 04A0  
                                                                   l3720 017C  
                                                                   l4096 0D62  
                                                                   l2754 1804  
                                                                   l2674 16E6  
                                                                   l3482 1CA8  
                                                                   l3386 1A70  
                                                                   l3618 1FDA  
                                                                   l3570 2528  
                                                                   l3810 051E  
                                                                   l3730 01BA  
                                                                   l3714 0128  
                                                                   l2852 19D6  
                                                                   l3484 1CAC  
                                                                   l3476 1C9A  
                                                                   l3468 1C46  
                                                                   l3628 2052  
                                                                   l3900 08AA  
                                                                   l3804 0518  
                                                                   l3724 018A  
                                                                   l2854 19DA  
                                                                   l2678 16EC  
                                                                   l3398 1AAE  
                                                                   l3646 20A4  
                                                                   l3670 2844  
                                                                   l3566 2516  
                                                                   l3902 08B6  
                                                                   l3822 058A  
                                                                   l3910 08DA  
                                                                   l3718 0162  
                                                                   l2848 19CC  
                                                                   l2776 184E  
                                                                   l2952 15AC  
                                                                   l2880 137C  
                                                                   l3584 2560  
                                                                   l3576 2532  
                                                                   l3592 27CE  
                                                                   l3920 0916  
                                                                   l3840 05EA  
                                                                   l3736 01D0  
                                                                   l3728 0190  
                                                                   l2778 1854  
                                                                   l2786 1868  
                                                                   l2698 1734  
                                                                   l2946 158C  
                                                                   l3674 287A  
                                                                   l3578 2540  
                                                                   l3594 27DC  
                                                                   l3930 095C  
                                                                   l3842 05FC  
                                                                   l3834 05D2  
                                                                   l3826 05A6  
                                                                   l3770 0324  
                                                                   l3762 02A6  
                                                                   l3746 021E  
                                                                   l3690 0064  
                                                                   l3682 0030  
                                                                   l2796 18D0  
                                                                   l2972 1632  
                                                                   l2876 1364  
                                                                   l3668 283C  
                                                                   l3924 0938  
                                                                   l3916 08F4  
                                                                   l3908 08CE  
                                                                   l2894 13AA  
                                                                   l2878 136A  
                                                                   l3942 09B0  
                                                                   l3790 0438  
                                                                   l3774 0352  
                                                                   l3694 006C  
                                                                   l3686 0046  
                                                                   l2976 1652  
                                                                   l2896 13B0  
                                                                   l3952 09E4  
                                                                   l3960 0A06  
                                                                   l3944 09BA  
                                                                   l3936 0980  
                                                                   l3872 070A  
                                                                   l3856 064E  
                                                                   l3864 06E6  
                                                                   l3848 0614  
                                                                   l3688 0050  
                                                                   l3938 098A  
                                                                   l3890 07BA  
                                                                   l3866 06F2  
                                                                   l3786 040C  
                                                                   l3778 03A0  
                                                                   l2988 169C  
                                                                   l3886 0758  
                                                                   l3878 0738  
                                                                   l3974 0A56  
                                                                   STR_1 7FE1  
                                                                   STR_2 7FD3  
                                                                   STR_3 7F3A  
                                                                   STR_4 7F27  
                                                                   STR_5 7FC4  
                                                                   STR_6 7F92  
                                                                   STR_7 7ECC  
                                                                   STR_8 7F81  
                                                                   STR_9 7FA3  
                                                                   u3010 25C8  
                                                                   _LATA 000F89  
                                                                   u3110 299E  
                                                                   _LATB 000F8A  
                                                                   _LATC 000F8B  
                                                                   _LATD 000F8C  
                                                                   u2500 17D0  
                                                                   u3140 2A4E  
                                                                   u2510 17D4  
                                                                   u3070 277A  
                                                                   u4030 0102  
                                                                   u3160 2AB4  
                                                                   u4200 055E  
                                                                   u4130 0364  
                                                                   u2540 1820  
                                                                   u3420 22C6  
                                                                   u4300 072C  
                                                                   u4140 03B2  
                                                                   _IPR1 000F9F  
                                                                   u2630 18F6  
                                                                   u3350 21BA  
                                                                   u3167 2AAA  
                                                                   u3271 20CE  
                                                                   _PIE1 000F9D  
                                                                   u3440 26DE  
                                                                   u3360 21E0  
                                                                   u3280 20D8  
                                                                   u2490 17C0  
                                                                   u4170 040A  
                                                                   u3291 20FE  
                                                                   u3620 1BF2  
                                                                   u4500 0A74  
                                                                   u4260 0624  
                                                                   u2750 19B0  
                                                                   u2670 1936  
                                                                   u2910 15DE  
                                                                   u3710 2698  
                                                                   u2690 194C  
                                                                   u4290 071A  
                                                                   u4530 294C  
                                                                   u3660 1C56  
                                                                   u2860 13D0  
                                                                   u3670 1C7C  
                                                                   u2950 1642  
                                                                   u2870 154C  
                                                                   u3830 2548  
                                                                   u4470 0A10  
                                                                   u2960 1662  
                                                                   u4480 0A30  
                                                                   u4537 2942  
                                                                   u2875 1540  
                                                                   u4571 0B36  
                                                                   u3940 206C  
                                                                   u3780 24B2  
                                                                   u3860 27E2  
                                                                   u3790 24E8  
                                                                   u4807 0AFA  
                                                                   u4760 0F20  
                                                                   u4817 0B26  
                                                                   _PIR1 000F9E  
                                                                   u3795 24DC  
                                                                   u4827 0F08  
                                                                   u4837 2C40  
                                                                   u3990 2874  
                                                                   u4847 29DE  
                                                                   u4857 29F6  
                                                                   u4867 2A1E  
                                                                   u4877 2C5C  
                                                                   u3997 286A  
                                                                   u4797 0ABE  
                                                           __CFG_PWRT$ON 000000  
                                                           _start_engine 2C72  
                                                            main@message 00B2  
                                                                   _main 0A86  
                                                                   _temp 00E5  
                                                                   fsr0h 000FEA  
                                                                   indf0 000FEF  
                                                                   fsr2h 000FDA  
                                                                   fsr0l 000FE9  
                                                                   indf2 000FDF  
                                                                   fsr2l 000FD9  
                                                                   btemp 0076  
                                                                   _volt 00E9  
                                                                   prodh 000FF4  
                                                                   prodl 000FF3  
                                                                   start 001E  
                                                        ___fldiv@new_exp 0039  
                                                           _sprintf$1084 0059  
                                                           ___param_bank 000000  
                                                                  ??_R_D 0001  
                                                                  ??_R_I 0001  
                                                          ___fltol@sign1 0039  
                                                        __end_of___fladd 19FC  
                                                                  ?_main 0001  
                                                        __end_of___fldiv 1CBC  
                                                        __end_of___awdiv 2610  
                                                        __end_of___flneg 2BBE  
                                                                  STR_10 7E91  
                                                                  STR_11 7FB4  
                                                                  STR_12 7F70  
                                                                  STR_20 7EFC  
                                                                  STR_21 7FFC  
                                                                  STR_13 7EE4  
                                                                  STR_14 7F5F  
                                                                  STR_15 7F12  
                                                                  STR_16 7FFB  
                                                                  STR_17 7F4D  
                                                                  STR_18 7FEF  
                                                                  STR_19 7EB2  
                                                        __end_of___awmod 27BA  
                                                        __end_of___flmul 16B8  
                                                        __end_of___flsub 2B14  
                                                        __end_of___fltol 2578  
                                                        __end_of___lldiv 2736  
                                                        ___awdiv@divisor 0009  
                                                        __end_of___llmod 282E  
                                                        __end_of___lwdiv 29D6  
                                                                  i2l200 0016  
                                                        __end_of___lwmod 2A7E  
                                                        ___awdiv@counter 000B  
                                                                  _RCREG 000FAE  
                                                                  _RCSTA 000FAB  
                                                                  _SPBRG 000FAF  
                                                                  _PORTA 000F80  
                                                                  _PORTB 000F81  
                                                                  _PORTC 000F82  
                                                                  _PORTD 000F83  
                                                                  _TRISA 000F92  
                                                                  _TRISB 000F93  
                                                                  _TRISC 000F94  
                                                                  _TRISD 000F95  
                                                                  _TXREG 000FAD  
                                                                  _TXSTA 000FAC  
                                                        __end_of_capture 001E  
                                                        __end_of_dpowers 7E91  
                                                                  _scale 0F26  
                                                        __end_of_isdigit 2C0C  
                                                                  tablat 000FF5  
                                                                  ttemp5 0077  
                                                                  ttemp6 007A  
                                                                  ttemp7 007E  
                                                                  status 000FD8  
                                                                  wtemp8 0077  
                                                        __end_of_sprintf 0A86  
                                                        __initialization 2B52  
                                                           __end_of_main 0F26  
                                                   print_message_onLCD@i 000A  
                                                                 ??_main 0074  
                                                          __activetblptr 000002  
                                                   __size_of__tdiv_to_l_ 0116  
                                                          get_temp@ac_in 0045  
                                                                 _ADCON0 000FC2  
                                                                 _ADCON1 000FC1  
                                                       ___llmod@dividend 0001  
                                                                 ?_scale 0028  
                                                                 _ADRESH 000FC4  
                                                                 _ADRESL 000FC3  
                                                       ___awdiv@dividend 0007  
                                                    _turn_off_everything 2C68  
                                                                 _INTCON 000FF2  
                                                       __end_of___xxtofl 20BC  
                                                       __end_of__powers_ 7E35  
                                                       __end_of_get_temp 23C4  
                                                                 ___flge 23C4  
                                                                 ___fleq 2610  
                                                              ??___fladd 003D  
                                                                 ___wmul 2BBE  
                                                              ??___fldiv 0030  
                                                              ??___awdiv 000B  
                                                              ??___flneg 0005  
                                                   ?_turn_off_everything 0001  
                                                              ??___awmod 0005  
                                                              ??___flmul 0017  
                                                              ??___flsub 004D  
                                                              ??___fltol 0035  
                                                              ??___lldiv 0009  
                                                              ??___llmod 0009  
                                                              ??___lwdiv 000A  
                                                       __end_of_init_LCD 2A2E  
                                                              ??___lwmod 0005  
                                                                 _fround 1CBC  
                                                                 clear_0 2B6A  
                                                                 clear_1 2B76  
                                                       ___awdiv@quotient 000D  
                                                        ___awmod@divisor 0003  
                                                              ??_capture 0001  
                                                        ___awmod@counter 0005  
                                                                 main@in 00CE  
                                                                 _strlen 2A7E  
                                                   __size_of_get_voltage 0070  
                                               print_message_onLCD@place 0007  
                                                              ??_isdigit 0001  
                                                           __mediumconst 7E00  
                                                                 tblptrh 000FF7  
                                                                 tblptrl 000FF6  
                                                                 tblptru 000FF8  
                                                       __end_of_transmit 2976  
                                                              ??_sprintf 0055  
                                                             ___flge@ff1 0001  
                                                             ___flge@ff2 0005  
                                                           ___xxtofl@arg 000B  
                                                           ___xxtofl@exp 000A  
                                                           ___xxtofl@val 0001  
                                                             ___fleq@ff1 0001  
                                                             ___fleq@ff2 0005  
                                                             __accesstop 0080  
                                                __end_of__initialization 2B7C  
                                                             ___flneg@f1 0001  
                                                          ___rparam_used 000001  
                                                             ___fltol@f1 0031  
                                                         __pcstackCOMRAM 0001  
                                                  ??_turn_off_everything 0001  
                                                           __pidataBANK0 2C92  
                                                          __end_of_scale 1336  
                                                             __div_to_l_ 21D2  
                                                        __div_to_l_@exp1 000E  
                                                        __div_to_l_@cntr 000D  
                                            __end_of_print_message_onLCD 28A0  
                                                                ??_scale 002C  
                                                        __div_to_l_@quot 0009  
                                                           sprintf@width 006B  
                                                             __pbssBANK0 00D1  
                                                             __pbssBANK1 0100  
                                                          __div_to_l_@f1 0001  
                                                          __div_to_l_@f2 0005  
                                                             _alert_sent 00EE  
                                                                ?___flge 0001  
                                                                ?___fleq 0001  
                                                                ?___wmul 0001  
                                                                ?_fround 0028  
                                                                R_D@dato 0001  
                                                                ?_strlen 0001  
                                                                R_I@dato 0001  
                                                __size_of_light_the_bulb 000A  
                                                              ?___xxtofl 0001  
                                                                _GO_DONE 007E12  
                                                              ?_get_temp 0045  
                                                              ?_init_LCD 0001  
                                                      __end_of__npowers_ 7E69  
                                                                __Hparam 0000  
                                                             _scale$1083 002C  
                                           ??_serial_transmi_init_config 0001  
                                                                __Lparam 0000  
                                                        __size_of___flge 00E0  
                                                        __size_of___fleq 0096  
                                                                ___fladd 16B8  
                                                                ___fldiv 19FC  
                                                                ___awdiv 2578  
                                                                ___flneg 2B8A  
                                                                ___awmod 2736  
                                                                ___flmul 1336  
                                                                ___flsub 2ACA  
                                                                ___fltol 24A4  
                                                                ___lldiv 26A6  
                                                        __size_of___wmul 002A  
                                                                ___llmod 27BA  
                                                                ___lwdiv 2976  
                                                                ___lwmod 2A2E  
                                                              ?_transmit 0005  
                                                                __pcinit 2B52  
                                                        __size_of_fround 02A4  
                                                                __ramtop 0600  
                                                                _capture 0008  
                                                                __ptext0 0A86  
                                                                __ptext1 2C68  
                                                                __ptext2 2910  
                                                                __ptext3 2C72  
                                                                __ptext4 0022  
                                                                __ptext5 0F26  
                                                                __ptext6 2736  
                                                                __ptext7 2578  
                                                                __ptext8 2BE8  
                                                                __ptext9 1CBC  
                                                        __size_of_strlen 004C  
                                                            ?__div_to_l_ 0001  
                                                           __size_of_R_D 001C  
                                                          _message_alert 0100  
                                                           __size_of_R_I 001C  
                                                                _dpowers 7E69  
                                                                _isdigit 2BE8  
                                                             ??___xxtofl 0005  
                                                       ___awmod@dividend 0001  
                                                                _sprintf 0022  
                                                             ??_get_temp 0049  
                                                   end_of_initialization 2B7C  
                                    __size_of_serial_transmi_init_config 0024  
                                                             ??_init_LCD 0002  
                                                             _send_alert 00EF  
                                                          __Lmediumconst 7E00  
                                                __size_of_initial_config 003E  
                                                        ___lldiv@divisor 0005  
                                                        ___lldiv@counter 000D  
                                                                postinc0 000FEE  
                                                                postinc2 000FDE  
                                                         __tdiv_to_l_@f1 0001  
                                                         __tdiv_to_l_@f2 0005  
                                                             ??_transmit 0007  
                                                                strlen@s 0001  
                                                          ??__tdiv_to_l_ 0009  
                                                            ___fladd@grs 0044  
                                                          ___xxtofl@sign 0009  
                                                            ___fldiv@grs 003B  
                                                            ___fldiv@rem 0034  
                                                            ___flmul@grs 001C  
                                                              _TXSTAbits 000FAC  
                                                    __size_of__div_to_l_ 010C  
                                                         __end_of___flge 24A4  
                                                         __end_of___fleq 26A6  
                                                          ??_get_voltage 0045  
                                                         __end_of___wmul 2BE8  
                                                         __end_of_fround 1F60  
                                                         _light_the_bulb 2C86  
                                                         __end_of_strlen 2ACA  
                                                          _data_received 00F0  
                                                    start_initialization 2B52  
                                                       transmit@response 0005  
                                                            __end_of_R_D 2C4C  
                                                            __end_of_R_I 2C68  
                                                    __end_of__tdiv_to_l_ 21D2  
                                                          ?_start_engine 0001  
                                                        _first_execution 00F1  
                                                        ___llmod@divisor 0005  
                                            __end_of_turn_off_everything 2C72  
                                                        ___llmod@counter 0009  
                                     __end_of_serial_transmi_init_config 2C30  
                                             _serial_transmi_init_config 2C0C  
                                                               ??___flge 0009  
                                                               ??___fleq 0009  
                                                               ??___wmul 0005  
                                                            __pdataBANK0 00F1  
                                                               ??_fround 002C  
                                                 __end_of_light_the_bulb 2C90  
                                                          sprintf@tmpval 0063  
                                                               ??_strlen 0003  
                                                              ___fladd@a 0039  
                                                              ___fladd@b 0035  
                                                             fround@prec 0034  
                                                              ___fldiv@a 002C  
                                                              ___fldiv@b 0028  
                                                              ___flmul@a 0013  
                                                              ___flmul@b 000F  
                                                    __end_of_get_voltage 2910  
                                                              ___flsub@a 0049  
                                                              ___flsub@b 0045  
                                                          __pcstackBANK0 0080  
                                                      __size_of___xxtofl 015C  
                                                         ??_start_engine 0001  
                                                      __size_of_get_temp 00E6  
                                                            sprintf@flag 0069  
                                                            sprintf@eexp 0067  
                                                            sprintf@fval 006D  
                                                         _initial_config 2B14  
                                                            sprintf@prec 0071  
                                                      __size_of_init_LCD 0058  
                                           __size_of_print_message_onLCD 0072  
                                             print_message_onLCD@message 0005  
                                                       ___lwdiv@dividend 0006  
                                                              __pintcode 0008  
                                                          __pmediumconst 7E00  
                                                               ?___fladd 0035  
                                                               ?___fldiv 0028  
                                                               ?___awdiv 0007  
                                                               ?___flneg 0001  
                                                               ?___awmod 0001  
                                                               ?___flmul 000F  
                                                               ?___flsub 0045  
                                                               ?___fltol 0031  
                                                               ?___lldiv 0001  
                                                               ?___llmod 0001  
                                                              __npowers_ 7E35  
                                                               ?___lwdiv 0006  
                                                               ?___lwmod 0001  
                                                               ?_capture 0001  
                                                        ?_light_the_bulb 0001  
                                                            __tdiv_to_l_ 20BC  
                                                      __size_of_transmit 0066  
                                                           ??__div_to_l_ 0009  
                                                               ?_isdigit 0001  
                                                       ___lwdiv@quotient 000A  
                                                               ?_sprintf 004D  
                                                         __size_of_scale 0410  
                                                 __end_of_initial_config 2B52  
                                                         ___wmul@product 0005  
                                                               _PIR1bits 000F9E  
                                                     __end_of__div_to_l_ 22DE  
                                                               _RCONbits 000FD0  
                                                              main@F2165 00D1  
                                                            _get_voltage 28A0  
                                                      ___wmul@multiplier 0001  
                                                              main@canal 00D0  
                                                              main@_temp 0099  
                                                              main@_volt 0080  
                                                              get_temp@r 0049  
                                                        ?_initial_config 0001  
                                                               __Hrparam 0000  
                                                           _w_alert_sent 00ED  
                                                               __Lrparam 0000  
                                                       __size_of___fladd 0344  
                                                       __size_of___fldiv 02C0  
                                                       __size_of___awdiv 0098  
                                                       __size_of___flneg 0034  
                                                       __size_of___awmod 0084  
                                                       __size_of___flmul 0382  
                                                       __size_of___flsub 004A  
                                                       __size_of___fltol 00D4  
                                                       __size_of___lldiv 0090  
                                                   __end_of_start_engine 2C7C  
                                                       __size_of___llmod 0074  
                                                       __size_of___lwdiv 0060  
                                                       __size_of___lwmod 0050  
                                                            _fround$1081 0030  
                                                            _fround$1082 002C  
                                                            _isdigit$897 0002  
                                                       __size_of_capture 0016  
                                                             sprintf@val 005F  
                                                               ___xxtofl 1F60  
                                                       __size_of_isdigit 0024  
                                                               _main$320 00CC  
                                                               _main$324 00CD  
                                                               _main$316 00CB  
                                                               _main$308 00C6  
                                                               _main$327 00C8  
                                                        ___lwdiv@divisor 0008  
                                                        ___lwdiv@counter 000C  
                                                               __ptext10 2A2E  
                                                               __ptext11 2976  
                                                               __ptext20 23C4  
                                                               __ptext12 20BC  
                                                               __ptext21 2610  
                                                               __ptext13 21D2  
                                                               __ptext30 2C4C  
                                                               __ptext22 2C0C  
                                                               __ptext14 2BBE  
                                                               __ptext31 28A0  
                                                               __ptext23 282E  
                                                               __ptext15 27BA  
                                                               __ptext32 22DE  
                                                               __ptext24 2A7E  
                                                               __ptext16 26A6  
                                                               __ptext33 1F60  
                                                               __ptext25 2C30  
                                                               __ptext17 24A4  
                                                               __ptext34 1336  
                                                               __ptext26 2C7C  
                                                               __ptext18 2ACA  
                                                               __ptext35 19FC  
                                                               __ptext27 2C86  
                                                               __ptext19 2B8A  
                                                               __ptext36 16B8  
                                                               __ptext28 2B14  
                                                               __ptext29 29D6  
                                                               __powers_ 7E01  
                                                               _get_temp 22DE  
                                                       __size_of_sprintf 0A64  
                                                               _init_LCD 29D6  
                                                          __size_of_main 04A0  
                                            ?_serial_transmi_init_config 0001  
                                                               int$flags 0076  
                                                               _transmit 2910  
                                                               main@line 00CA  
                                                    _print_message_onLCD 282E  
                                                              transmit@i 0009  
                                                               isdigit@c 0003  
                                                               scale@scl 0030  
                                                               intlevel2 2C90  
                                                              sprintf@ap 005D  
                                                       __tdiv_to_l_@exp1 0011  
                                                              sprintf@sp 004D  
                                                       __tdiv_to_l_@cntr 0010  
                                                       __tdiv_to_l_@quot 000C  
                                                       ___lwmod@dividend 0001  
                                                       ___lldiv@dividend 0001  
                                                   ?_print_message_onLCD 0005  
                                                       ??_light_the_bulb 0001  
                                           __size_of_turn_off_everything 000A  
                                                           ?__tdiv_to_l_ 0001  
                                                               sprintf@c 0073  
                                                               sprintf@f 004F  
                                                       get_voltage@ac_in 0041  
                                                       ___lldiv@quotient 0009  
                                                        ___lwmod@divisor 0003  
                                                               strlen@cp 0003  
                                                        ___lwmod@counter 0005  
                                                          ___fladd@signs 0041  
                                                           ___fladd@aexp 0042  
                                                           ___fladd@bexp 0043  
                                                  ??_print_message_onLCD 0008  
                                                  __size_of_start_engine 000A  
                                __end_of_light_the_bulb_and_start_engine 2C86  
                               __size_of_light_the_bulb_and_start_engine 000A  
                                      ??_light_the_bulb_and_start_engine 0001  
                                       ?_light_the_bulb_and_start_engine 0001  
                                        _light_the_bulb_and_start_engine 2C7C  
